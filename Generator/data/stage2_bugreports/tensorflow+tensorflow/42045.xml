<bug id='42045' author='jasonlilley' open_date='2020-08-04T20:52:56Z' closed_time='2020-09-03T21:17:48Z'>
	<summary>TF website tutorial "Save and load" fails on Google Colab for entire models</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):  NO
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab on cloud (run in Safari browser on Mac OSX 10.14.6)
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): NA
TensorFlow version (use command below): TF 2.3.0, Git version v2.3.0-0-gb36436b087
Python version: Appears to be 3.6
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: ??
GPU model and memory: ??


The TensorFlow tutorial page &lt;denchmark-link:https://www.tensorflow.org/tutorials/keras/save_and_load&gt;https://www.tensorflow.org/tutorials/keras/save_and_load&lt;/denchmark-link&gt;
 fails even when run in Google Colab, your cloud environment. Where it fails exactly is towards the bottom, in the section of the tutorial describing how to save and load entire models with model.save() and load_model(). I find that the restored models (in either SavedModel or HDF5 format) fail to reproduce the original model accuracies, given exactly the provided code. Instead I get around 8-9% accuracies.
I get the same problem running the downloaded Jupyter notebook on my own laptop (Mac OSX 10.14.6, TF 2.4.0-dev20200727, Git v1.12.1-37595-g9f2e1a7246, TF from pip3, Python 3.8.5).
Describe the expected behavior
The expected behavior is for the saved and reloaded models to have exactly the same accuracies on the same test data.

I've attached a small notebook that replicates the problem on my laptop.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/5024470/minimal.ipynb.txt&gt;minimal.ipynb.txt&lt;/denchmark-link&gt;

This was modeled after a similar tutorial (&lt;denchmark-link:https://machinelearningmastery.com/save-load-keras-deep-learning-models/&gt;https://machinelearningmastery.com/save-load-keras-deep-learning-models/&lt;/denchmark-link&gt;
 under "Save Model Weights and Architecture Together"). That tutorial's code runs fine with the given example data on my laptop (the saved and reloaded model has identical accuracy to the original), yet the very similar code in the attached notebook using the MNIST data and slightly different model does not. I'm not sure what this means. Honestly I'm pretty new to Keras. I'm not sure if this is a bug in the Keras code, or just an error in the tutorial. But again, it doesn't work with the provided tutorial in the Google Colab environment, suggesting it's not an error on my part.
FWIW, I do notice that the reloaded SavedModel model and the reloaded HDF5 model, when saved from the same original model (as in my example notebook), both give the identical bad accuracy.
Other info / logs
Not sure if relevant, but these warning appear the first time model.save() is used (from Google Colab):
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
INFO:tensorflow:Assets written to: saved_model/my_model/assets
On my laptop, I get the same warnings (with a different path to tracking.py: /Users/lilley/Library/Python/3.8/lib/python/site-packages/tensorflow/python/training/tracking/tracking.py).
The example run given on the tutorial page suggests that this functionality was originally working in TF 2.2.0.
	</description>
	<comments>
		<comment id='1' author='jasonlilley' date='2020-08-05T14:17:27Z'>
		WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
INFO:tensorflow:Assets written to: resnet_model_combine.model/assets
		</comment>
		<comment id='2' author='jasonlilley' date='2020-08-05T14:18:16Z'>
		How can I get rid of this?? How to update?
		</comment>
		<comment id='3' author='jasonlilley' date='2020-08-05T15:30:37Z'>
		I have the same issue please help
		</comment>
		<comment id='4' author='jasonlilley' date='2020-08-06T08:02:21Z'>
		I have tried in colab in TF nightly version and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/344dbdae13ebdbf0eaf032ff506084c8/untitled224.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='5' author='jasonlilley' date='2020-08-08T22:02:37Z'>
		I think the issue I reported some days ago is exactly the same: &lt;denchmark-link:https://github.com/keras-team/keras/issues/14181&gt;keras-team/keras#14181&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='jasonlilley' date='2020-08-08T23:33:50Z'>
		&lt;denchmark-link:https://github.com/ErikEngerd&gt;@ErikEngerd&lt;/denchmark-link&gt;
 Thank you for directing me to your issue. I'm a bit new with Github and with TF/Keras. I was afraid I submitted my issue in the wrong forum, which appears to be the case, so perhaps the people with the power to address this issue will never see this thread (or perhaps ignore it).
In my issue report, I specifically emphasized that I was using their unedited example code in Google Colab, which would seem to rule out issues in my coding and my environment. I see in your thread that you also pointed this out -- thank you! Hopefully the issue will be addressed soon.
		</comment>
		<comment id='7' author='jasonlilley' date='2020-08-09T00:29:40Z'>
		&lt;denchmark-link:https://github.com/jasonlilley&gt;@jasonlilley&lt;/denchmark-link&gt;
 Thanks for reporting this issue. I agree this is an issue with  and . It was working well with  so this is a regression issue. Thanks!
		</comment>
		<comment id='8' author='jasonlilley' date='2020-08-14T19:14:55Z'>
		This is a bug with using the sparse categorical accuracy. For now, please compile the model with metrics='sparse_categorical_accuracy' instead of just 'accuracy'.
		</comment>
		<comment id='9' author='jasonlilley' date='2020-08-14T19:36:43Z'>
		&lt;denchmark-link:https://github.com/jasonlilley&gt;@jasonlilley&lt;/denchmark-link&gt;
 I can confirm that this is working as expected when I followed &lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 suggestion. &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/2cc844c7f00fec232d04af0a83d9bb22/untitled224.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist for reference. Thanks!
		</comment>
		<comment id='10' author='jasonlilley' date='2020-08-18T18:27:24Z'>
		&lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 Thank you for replying. I was also able to confirm that the model compilation suggestion worked in my notebooks on my laptop. I suggest that someone change the tutorial page with the fix.
		</comment>
		<comment id='11' author='jasonlilley' date='2020-09-03T21:16:23Z'>
		This issue has been fixed in commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/5adacc88077ef82f6c4a7f9bb65f9ed89f9d8947&gt;9d8947&lt;/denchmark-link&gt;
. Please try the latest tf-nightly if you need the fix immediately, otherwise the next official release will have the fix. Marking this as closed.
		</comment>
	</comments>
</bug>