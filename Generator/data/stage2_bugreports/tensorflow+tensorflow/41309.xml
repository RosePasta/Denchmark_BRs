<bug id='41309' author='pn12' open_date='2020-07-11T16:00:46Z' closed_time='2020-07-27T07:32:05Z'>
	<summary>AttributeError: 'OwnedIterator' object has no attribute '_get_trainable_state'</summary>
	<description>
Getting  the error AttributeError: in user code:
Does anybody know what is causing the issue ?
The code was working fine a couple of days back.
&lt;denchmark-code&gt;
new_input = Input(shape=(128 , 128 , 3))
base = EfficientNetB0(include_top=False ,
                input_tensor=new_input )

for layer in base.layers :
    layer.trainable = False
    
x = base.output
x = Conv2D (64 , (3,3) , activation = 'relu')(x)
x = MaxPooling2D((2,2))(x)
x = GlobalAveragePooling2D ()(x)

out = Dense (6 , activation = 'softmax')(x)

model = Model (inputs = base.input , outputs = out)

cce = tf.keras.losses.CategoricalCrossentropy()

model.compile(loss=cce,
              optimizer=Adam(),
              metrics=kappa_score)

history = model.fit_generator(train_generator,
                    validation_data=val_generator, 
                    epochs = 100)

&lt;/denchmark-code&gt;

Log is as below -
**---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
 in 
24 history = model.fit_generator(train_generator,
25                     validation_data=val_generator,
---&gt; 26                     epochs = 100)
/opt/conda/lib/python3.7/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)
322               'in a future version' if date is None else ('after %s' % date),
323               instructions)
--&gt; 324       return func(*args, **kwargs)
325     return tf_decorator.make_decorator(
326         func, new_func, 'deprecated',
/opt/conda/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py in fit_generator(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)
1477                                 for t in nest.flatten(outputs)])
1478           step_outputs = step_function(self, iterator)
-&gt; 1479           outputs = nest.map_structure(lambda t1, t2: concat([t1, t2]), outputs,
1480                                        step_outputs)
1481         return outputs
/opt/conda/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py in _method_wrapper(self, *args, **kwargs)
64 from tensorflow.python.ops import math_ops
65 from tensorflow.python.ops import sparse_ops
---&gt; 66 from tensorflow.python.ops import summary_ops_v2
67 from tensorflow.python.ops import variables
68 from tensorflow.python.ops.ragged import ragged_concat_ops
/opt/conda/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)
846
847     Arguments:
--&gt; 848         x: Input data. It could be:
849           - A Numpy array (or array-like), or a list of arrays
850             (in case the model has multiple inputs).
/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in call(self, *args, **kwds)
578       target_function = target_function.func
579
--&gt; 580     if hasattr(target_function, "code"):
581       return target_function.code
582
/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in _call(self, *args, **kwds)
625         implements_attr = six.ensure_text(self._implements, "utf-8")
626         attr_value = attr_value_pb2.AttrValue()
--&gt; 627         nameattrlist = attr_value_pb2.NameAttrList()
628         _text_format.Merge(implements_attr, nameattrlist)
629         attr_value.func.CopyFrom(nameattrlist)
/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in _initialize(self, args, kwds, add_initializers_to)
504         conversion options when autograph is set to True.
505       experimental_relax_shapes: When true, argument shapes may be relaxed to
--&gt; 506         avoid unnecessary retracing.
507       experimental_compile: If , compiles the function using XLA
508         (see &lt;denchmark-link:https://tensorflow.org/xla&gt;https://tensorflow.org/xla&lt;/denchmark-link&gt;
). XLA performs compiler optimizations,
/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py in _get_concrete_function_internal_garbage_collected(self, *args, **kwargs)
2444     self._args_to_indices = {arg: i for i, arg in enumerate(args)}
2445     self._arg_names = args
-&gt; 2446
2447     # A cache mapping from arg index to default value, for canonicalization.
2448     default_values = fullargspec.defaults
/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py in _maybe_define_function(self, args, kwargs)
2775
2776   def all_values(self):
-&gt; 2777     """A set of all ConcreteFunction instances held by this cache."""
2778     return set(self.primary.values()) | set(self.arg_relaxed.values())
2779
/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py in _create_graph_function(self, args, kwargs, override_flat_arg_shapes)
2665       # CompositeTensors should be flattened instead.
2666       or isinstance(value, composite_tensor.CompositeTensor))
-&gt; 2667
2668
2669 def _convert_numpy_inputs(inputs):
/opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes)
979         converted_func = tf_decorator.make_decorator(original_func, wrapper)
980         python_func = tf_decorator.rewrap(python_func, original_func,
--&gt; 981                                           converted_func)
982
983       else:
/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in wrapped_fn(*args, **kwds)
439
440   def del(self):
--&gt; 441     try:
442       func_graph_module.dismantle_func_graph(self.func_graph)
443     except:  # pylint: disable=bare-except
/opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py in wrapper(*args, **kwargs)
966                 options=autograph.ConversionOptions(
967                     recursive=True,
--&gt; 968                     optional_features=autograph_options,
969                     user_requested=True,
970                 ))
AttributeError: in user code:
&lt;denchmark-code&gt;/opt/conda/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py:576 _reset_compile_cache  *
    self._compiled_trainable_state = self._get_trainable_state()

AttributeError: 'OwnedIterator' object has no attribute '_get_trainable_state'
&lt;/denchmark-code&gt;

**
	</description>
	<comments>
		<comment id='1' author='pn12' date='2020-07-13T06:37:47Z'>
		&lt;denchmark-link:https://github.com/pn12&gt;@pn12&lt;/denchmark-link&gt;

Could you please share the tensorflow version on which the issue was faced, also the code is incomplete.
I ran the code shared and face different error as not all dependencies are shared,please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/6428591437f9b09683631feab0c06d5f/untitled272.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
With respect to the error faced, you may refer to below issue for assistance:
&lt;denchmark-link:https://stackoverflow.com/questions/53925428/attributeerror-sequential-object-has-no-attribute-output-names-not-toco-pr&gt;link&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='pn12' date='2020-07-20T06:52:04Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='pn12' date='2020-07-27T07:32:02Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='4' author='pn12' date='2020-07-27T07:32:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41309&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41309&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='pn12' date='2020-08-04T09:40:53Z'>
		I had the same error and it was because I had upgraded the tensorflow library from 2.2.0 to 2.3.0 but the jupyter server had not been restarted and was picking up the version 2.2.0. Restarting the server fixed it for me.
		</comment>
		<comment id='6' author='pn12' date='2020-08-04T10:20:12Z'>
		Thanks for sharing.
		</comment>
	</comments>
</bug>