<bug id='37545' author='CalebEverett' open_date='2020-03-12T17:44:01Z' closed_time='2020-03-13T20:31:12Z'>
	<summary>tf.tpu.experimental.initialize_tpu_system() throwing error</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock - no
example script provided in TensorFlow):
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04):  Debian GNU/Linux 9.11 (stretch) (GNU/Linux 4.9.0-11-amd64 x86_64\n)
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if
the issue happens on mobile device:
TensorFlow installed from (source or
binary): - TensorFlow version (use command below): '2.2.0-dev20200309'
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from
source):
CUDA/cuDNN version: - GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Here is the tpu config - it is in europe-west4-a:
&lt;denchmark-code&gt;acceleratorType: v3-8
cidrBlock: 10.240.1.16/29
createTime: '2020-03-09T19:38:19.525484434Z'
description: A Cloud TPU created with the ctpu tool.
health: HEALTHY
ipAddress: 10.240.1.18
name: 
network: global/networks/default
networkEndpoints:
- ipAddress: 10.240.1.18
  port: 8470
port: '8470'
schedulingConfig: {}
serviceAccount: 
state: READY
tensorflowVersion: nightly
&lt;/denchmark-code&gt;

Describe the current behavior
&lt;denchmark-code&gt;# Detect hardware, return appropriate distribution strategy
try:
    tpu = tf.distribute.cluster_resolver.TPUClusterResolver()  # TPU detection. No parameters necessary if TPU_NAME environment variable is set. On Kaggle this is always the case.
    print('Running on TPU ', tpu.master())
except:
    tpu = None

if tpu:
    tf.config.experimental_connect_to_cluster(tpu)
    tf.tpu.experimental.initialize_tpu_system(tpu)
    strategy = tf.distribute.experimental.TPUStrategy(tpu)
else:
    strategy = tf.distribute.get_strategy() # default distribution strategy in Tensorflow. Works on CPU and single GPU.

print("REPLICAS: ", strategy.num_replicas_in_sync)
&lt;/denchmark-code&gt;

results in:
&lt;denchmark-code&gt;ValueError                                Traceback (most recent call last)
&lt;ipython-input-3-b9f7d4f857ca&gt; in &lt;module&gt;
     10 if tpu:
     11     tf.config.experimental_connect_to_cluster(tpu)
---&gt; 12     tf.tpu.experimental.initialize_tpu_system(tpu)
     13     strategy = tf.distribute.experimental.TPUStrategy(tpu)
     14 else:

~/anaconda3/lib/python3.7/site-packages/tensorflow/python/tpu/tpu_strategy_util.py in initialize_tpu_system(cluster_resolver)
    122 
    123   logging.info("Finished initializing TPU system.")
--&gt; 124   tpu_topology = topology.Topology(serialized=serialized_topology)
    125   _INITIALIZED_TPU_SYSTEMS[tpu_name] = tpu_topology
    126 

~/anaconda3/lib/python3.7/site-packages/tensorflow/python/tpu/topology.py in __init__(self, serialized, mesh_shape, device_coordinates)
     76 
     77     if serialized:
---&gt; 78       self._parse_topology(serialized)
     79     else:
     80       self._mesh_shape = np.asarray(mesh_shape, dtype=np.int32)

~/anaconda3/lib/python3.7/site-packages/tensorflow/python/tpu/topology.py in _parse_topology(self, serialized)
    102     if len(self._mesh_shape) != 3 or any(self._mesh_shape &lt; 1):
    103       raise ValueError("`mesh_shape` must be a vector of size 3 with positive "
--&gt; 104                        "entries; got {}".format(self._mesh_shape))
    105 
    106     if proto.num_tasks &lt; 0:

ValueError: `mesh_shape` must be a vector of size 3 with positive entries; got [2 2 1 2]
&lt;/denchmark-code&gt;

Describe the expected behavior
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='CalebEverett' date='2020-03-12T20:56:42Z'>
		Just had this same problem too.  Updating to the newest nightly build fixed it for me.
		</comment>
		<comment id='2' author='CalebEverett' date='2020-03-13T09:48:06Z'>
		&lt;denchmark-link:https://github.com/CalebEverett&gt;@CalebEverett&lt;/denchmark-link&gt;

Can you please try with recent Nightly version (!pip install tf-nightly) and see if the issue still persists. I am not seeing any issue with recent Nightly version. Thanks!
		</comment>
		<comment id='3' author='CalebEverett' date='2020-03-13T18:28:28Z'>
		Also had the same problem but on the newest nightly build (2.2.0.dev20200313) and the previous nights (2.2.0.dev20200312). Running on Google Colab w/ TPUs.
		</comment>
		<comment id='4' author='CalebEverett' date='2020-03-13T20:31:12Z'>
		Thanks - it's going through now. pip install tf-nightly --upgrade to get version 2.2.0-dev20200313 installed and then gcloud compute tpus reimage &lt;tpu-name&gt; --version nightly to make sure the latest nightly is on the tpu as well.
		</comment>
		<comment id='5' author='CalebEverett' date='2020-03-13T20:31:14Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37545&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37545&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>