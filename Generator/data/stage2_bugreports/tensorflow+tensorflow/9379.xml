<bug id='9379' author='mrlzla' open_date='2017-04-22T08:43:43Z' closed_time='2017-06-16T21:38:54Z'>
	<summary>[C++] xthread:  0xC0000005: Access violation reading location 0xFFFFFFFFFFFFFFFF</summary>
	<description>
I want to read frozen graph from file.
So I have class A:
&lt;denchmark-code&gt;class A
{
     std::shared_ptr&lt;B&gt; b_ptr;
public:
     A()
     {
         b_ptr.reset(new B());
     }
};
&lt;/denchmark-code&gt;

class B:
&lt;denchmark-code&gt;using namespace tensorflow;
class B
{
     SessionOptions _sessionOptions;
     std::unique_ptr&lt;Session&gt; _session;
     GraphDef _graph;
     std::shared_ptr&lt;std::thread&gt; _thread;
public:
     B()
     {
         graph::SetDefaultDevice("/cpu:0", &amp;_graph);
         ConfigProto&amp; config = _sessionOptions.config;
	 config.set_intra_op_parallelism_threads(1);
	 _session.reset(NewSession(_sessionOptions));
         ReadBinaryProto(Env::Default(), "path/to/graph", &amp;_graph);
	 _session-&gt;Create(_graph);
         _thread.reset(new std::thread(&amp;B::Task, this));
     }
     void Task();
}
&lt;/denchmark-code&gt;

And I have the problem mentioned above when I read frozen graph with ReadBinaryProto  I create session. If I comment a line _thread.reset(new std::thread(&amp;B::Task, this)), this code will return successfully. If I comment all the code refered with tensorflow it will return successfully too.
	</description>
	<comments>
		<comment id='1' author='mrlzla' date='2017-04-22T17:22:14Z'>
		Are you using the C++ api (not loading a shared library)? Did you try building with asan/msan?
&lt;denchmark-link:https://github.com/asimshankar&gt;@asimshankar&lt;/denchmark-link&gt;
 might have some insight.
		</comment>
		<comment id='2' author='mrlzla' date='2017-04-22T18:46:14Z'>
		I load tensorflow as shared library. No, I didn't
		</comment>
		<comment id='3' author='mrlzla' date='2017-04-22T18:58:52Z'>
		How are you linking your library? Against which proto library?
CC &lt;denchmark-link:https://github.com/keveman&gt;@keveman&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='mrlzla' date='2017-04-22T19:19:22Z'>
		I apologize for not mentioning this earlier. I use windows. I run cmake and build it via MSBUILD. Then I include tensorflow lib and other dependencies in my linker options. So how I mentioned earlier If I do not create another thread, it works good.
		</comment>
		<comment id='5' author='mrlzla' date='2017-04-22T19:25:50Z'>
		Are you running MSVCRTD ? (debug version) Are you building in debug? What does Task do?
Could you also check the status codes with CHECK_OK(..) around ReadBinaryProto and SetDefaultDevice and Session::Create?
		</comment>
		<comment id='6' author='mrlzla' date='2017-04-22T19:48:19Z'>
		As I know tensowflow cannot be built in debug ?!
I am running Release version.
Task has infinite loop that run tensorflow session and postprocess its results.
I check the status codes in my code. I didn't add them in order to reduce code size.
		</comment>
		<comment id='7' author='mrlzla' date='2017-04-23T00:50:05Z'>
		Any chance you could get the stack traces? Does it crash during program exit, or before?
		</comment>
		<comment id='8' author='mrlzla' date='2017-04-23T11:20:26Z'>
		I was wrong. It fails when session resets:
_session.reset(NewSession(_sessionOptions));
If I comment this line:
_thread.reset(new std::thread(&amp;B::Task, this));
which is actually located after the previous one, exception is thrown.
		</comment>
		<comment id='9' author='mrlzla' date='2017-04-23T16:59:32Z'>
		OK, what does the status return?
		</comment>
		<comment id='10' author='mrlzla' date='2017-04-23T21:22:50Z'>
		It does not return any status. It throws exception.
		</comment>
		<comment id='11' author='mrlzla' date='2017-04-23T21:44:08Z'>
		Any chance to get the stack trace?
		</comment>
		<comment id='12' author='mrlzla' date='2017-04-26T08:58:41Z'>
		This is everything that I managed to get:
&lt;denchmark-code&gt;&gt;	TestTensorflow.exe!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;void (__cdecl B::*)(void) __ptr64,B * __ptr64&gt;,std::default_delete&lt;std::tuple&lt;void (__cdecl B::*)(void) __ptr64,B * __ptr64&gt; &gt; &gt; &gt;::_Run(std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;void (__cdecl B::*)(void),B *&gt;,std::default_delete&lt;std::tuple&lt;void (__cdecl B::*)(void),B *&gt; &gt; &gt; &gt; * _Ln) Line 247	C++

 	TestTensorflow.exe!std::_Pad::_Call_func(void * _Data) Line 210	C++

 	ucrtbase.dll!_o__realloc_baseï¿½()	Unknown

 	kernel32.dll!BaseThreadInitThunkï¿½()	Unknown

 	ntdll.dll!RtlUserThreadStartï¿½()	Unknown

&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='mrlzla' date='2017-04-26T10:30:24Z'>
		I solved this problem using tensorflow:ðŸ§µ:ThreadPool instread of std::thread
		</comment>
		<comment id='14' author='mrlzla' date='2017-04-26T17:21:28Z'>
		If you have solved it please close it. On the other hand, this problem is difficult to help you solve since you didn't give us the code in B::Task. You also didn't show us the calling code. I'd guess that B was getting destroyed because A was getting destroyed after your main thread died but the thread you started survived and accessed this now deleted memory. It's also unclear why you made b_ptr shared and the thread ptr shared. You should prefer unique_ptr's unless you absolutely need shared ownership.
		</comment>
		<comment id='15' author='mrlzla' date='2017-04-26T18:06:15Z'>
		Ok. I delete all my code from B::Task(). Now this method doing nothing. And I still have the error.
Calling code something like this:
&lt;denchmark-code&gt;A a();
&lt;/denchmark-code&gt;

		</comment>
		<comment id='16' author='mrlzla' date='2017-04-26T20:10:46Z'>
		Where does it crash? During deletion of a or at program exit?
		</comment>
		<comment id='17' author='mrlzla' date='2017-04-26T20:17:59Z'>
		Neither.
It crashes in this line:
&lt;denchmark-code&gt;ReadBinaryProto(Env::Default(), "path/to/graph", &amp;_graph);
&lt;/denchmark-code&gt;

		</comment>
		<comment id='18' author='mrlzla' date='2017-04-26T20:32:54Z'>
		BTW, SetDefaultDevice won't do anything since the graph is empty when you start.
Did you call
&lt;denchmark-code&gt;  tensorflow::port::InitMain(argv[0], &amp;argc, &amp;argv);
&lt;/denchmark-code&gt;

		</comment>
		<comment id='19' author='mrlzla' date='2017-04-27T07:00:12Z'>
		No, I didn't.
What should I do if I don't want to read params from command line arguments?
		</comment>
		<comment id='20' author='mrlzla' date='2017-04-27T17:22:29Z'>
		Just construct a simple argv which has only one element.
		</comment>
		<comment id='21' author='mrlzla' date='2017-06-16T21:38:54Z'>
		Closing due to lack of recent activity. Please reopen if this is still an issue.
		</comment>
		<comment id='22' author='mrlzla' date='2018-01-02T18:33:49Z'>
		I have the same issue, &lt;denchmark-link:https://github.com/mrlzla&gt;@mrlzla&lt;/denchmark-link&gt;
 were you able to solve this?
For me it fails on line:

and the error message is

Unhandled exception at 0x00007FFC81116988 (ntdll.dll) in main.exe: 0xC0000005: Access violation reading location 0xFFFFFFFFFFFFFFFF.

I compiled both tensorflow + protobuf as a shared library in Release mode using MSVC compiler
		</comment>
		<comment id='23' author='mrlzla' date='2018-01-04T20:21:56Z'>
		&lt;denchmark-link:https://github.com/sergeyshilin&gt;@sergeyshilin&lt;/denchmark-link&gt;
, I donâ€™t exactly know if it helps but you can try to change compiler flag O3(full optimization) to O2 or try to use tensorflow::ThreadPool instead of std::thread.
		</comment>
		<comment id='24' author='mrlzla' date='2018-01-05T15:16:35Z'>
		&lt;denchmark-link:https://github.com/mrlzla&gt;@mrlzla&lt;/denchmark-link&gt;
 The problem to me is that I am trying to link tensorflow library built in Release mode to my solution in Debug. When linking Release -&gt; Release, everything works properly. Since I still do need Debug environment in our application, I will try to figure out if it's possible to get rid of this error message shown above.
		</comment>
		<comment id='25' author='mrlzla' date='2018-01-05T15:33:11Z'>
		&lt;denchmark-link:https://github.com/sergeyshilin&gt;@sergeyshilin&lt;/denchmark-link&gt;
 try to set all compiler flags in debug mode the same as in release
		</comment>
		<comment id='26' author='mrlzla' date='2018-03-28T20:28:39Z'>
		&lt;denchmark-link:https://github.com/sergeyshilin&gt;@sergeyshilin&lt;/denchmark-link&gt;
 Did you ever figure out a solution to this? I have the same need of debug with a tensorflow dependency
		</comment>
		<comment id='27' author='mrlzla' date='2018-03-29T01:32:18Z'>
		&lt;denchmark-link:https://github.com/jtavrisov&gt;@jtavrisov&lt;/denchmark-link&gt;
, it does not seem to have a solution for now, because tensorflow simply does not support a Debug mode. I decided to switch to a Release mode with no optimization properties, therefore I still can debug my own application and use tensorflow library without debugging it. To do so in VS, Microsoft suggests to follow the instruction &lt;denchmark-link:https://msdn.microsoft.com/en-us/library/fsk896zz.aspx&gt;https://msdn.microsoft.com/en-us/library/fsk896zz.aspx&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>