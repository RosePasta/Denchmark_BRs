<bug id='39341' author='luvwinnie' open_date='2020-05-09T10:40:36Z' closed_time='2020-08-29T04:01:51Z'>
	<summary>sparse_categorical_crossentropy metrics bug?</summary>
	<description>
System information

Have I written custom code : No
OS Platform and Distribution: macOS 10.15.4 (Reproduce on Colab)
TensorFlow installed from (source or binary): from pip
TensorFlow version (use command below): tensorflow==2.2.0
Python version: python 3.7.3

TensorFlow version : v2.2.0-rc4-8-g2b96f3662b 2.2.0
Describe the current behavior
Trying to train with below code , however it shows ValueError.
&lt;denchmark-code&gt;model.compile(optimizer='adam', loss='sparse_categorical_crossentropy',metrics=["accuracy"])

model.fit(train_ds, epochs=100, validation_data=valid_ds, steps_per_epoch=100, use_multiprocessing=False)
&lt;/denchmark-code&gt;

show below errors
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-33-1c452d509fd9&gt; in &lt;module&gt;()
----&gt; 1 model.fit(train_ds, epochs=100, validation_data=valid_ds, steps_per_epoch=100, use_multiprocessing=False)

10 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in wrapper(*args, **kwargs)
    966           except Exception as e:  # pylint:disable=broad-except
    967             if hasattr(e, "ag_error_metadata"):
--&gt; 968               raise e.ag_error_metadata.to_exception(e)
    969             else:
    970               raise

ValueError: in user code:

    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:571 train_function  *
        outputs = self.distribute_strategy.run(
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:543 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/compile_utils.py:391 update_state
        self._build(y_pred, y_true)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/compile_utils.py:322 _build
        self._metrics, y_true, y_pred)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/util/nest.py:1118 map_structure_up_to
        **kwargs)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/util/nest.py:1214 map_structure_with_tuple_paths_up_to
        *flat_value_lists)]
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/util/nest.py:1213 &lt;listcomp&gt;
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/util/nest.py:1116 &lt;lambda&gt;
        lambda _, *values: func(*values),  # Discards the path arg.
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/compile_utils.py:421 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/compile_utils.py:421 &lt;listcomp&gt;
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/compile_utils.py:442 _get_metric_object
        y_t_rank = len(y_t.shape.as_list())
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_shape.py:1173 as_list
        raise ValueError("as_list() is not defined on an unknown TensorShape.")

    ValueError: as_list() is not defined on an unknown TensorShape.
&lt;/denchmark-code&gt;

Describe the expected behavior
Expect the model start training.
&lt;denchmark-code&gt;Epoch 1/100
100/100 [==============================] - 22s 223ms/step - loss: 0.4050 - sparse_categorical_accuracy: 0.8918 - val_loss: 0.1670 - val_sparse_categorical_accuracy: 0.9400
Epoch 2/100
 30/100 [========&gt;.....................] - ETA: 13s - loss: 0.4082 - sparse_categorical_accuracy: 0.8763
&lt;/denchmark-code&gt;



&lt;denchmark-link:https://drive.google.com/open?id=1VjmF4OlPddPVbDG0iMNYg4lWjuis9H5f&gt;https://drive.google.com/open?id=1VjmF4OlPddPVbDG0iMNYg4lWjuis9H5f&lt;/denchmark-link&gt;

Other info / logs
Although the bugs above, i can train by changing the metrics from the code
["accuracy"] to [tf.keras.metrics.SparseCategoricalAccuracy()]
	</description>
	<comments>
		<comment id='1' author='luvwinnie' date='2020-05-11T08:23:48Z'>
		I have tried in colab with TF version 2.2-rc4 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/8bf4f2ed3baa4c83063fd32403536d45/untitled873.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='luvwinnie' date='2020-06-14T15:08:07Z'>
		You can workaround it by changing the metrics argument to metrics = ['sparse_categorical_accuracy'].
		</comment>
		<comment id='3' author='luvwinnie' date='2020-08-20T22:59:00Z'>
		&lt;denchmark-link:https://github.com/bjourne&gt;@bjourne&lt;/denchmark-link&gt;
 This is a known issue. We will track the progress with &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42045&gt;this issue&lt;/denchmark-link&gt;
. You and &lt;denchmark-link:https://github.com/bjourne&gt;@bjourne&lt;/denchmark-link&gt;
 already mentioned workaround.
As &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42045#issuecomment-674232499&gt;mentioned&lt;/denchmark-link&gt;
 by &lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;


This is a bug with using the sparse categorical accuracy. For now, please compile the model with metrics='sparse_categorical_accuracy' instead of just 'accuracy'.

&lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/b3efcbc1851512aa644e0ecce6cdccf0/untitled873.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist for a reference. Thanks!
		</comment>
		<comment id='4' author='luvwinnie' date='2020-08-27T23:25:43Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='luvwinnie' date='2020-08-29T04:01:51Z'>
		I am closing this issue as you know the workaround. We will track this bug in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42045&gt;this issue&lt;/denchmark-link&gt;
.
I will also comment when the bug will get corrected. Thanks!
		</comment>
		<comment id='6' author='luvwinnie' date='2020-08-29T04:01:53Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39341&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39341&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='luvwinnie' date='2020-09-03T21:38:04Z'>
		This is resolved in recent tf-nightly. Please feel free to reopen if you notice the issue.
This is available in stable TF2.4 in the near future. Thanks!
		</comment>
	</comments>
</bug>