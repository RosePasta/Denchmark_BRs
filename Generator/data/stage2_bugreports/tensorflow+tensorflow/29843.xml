<bug id='29843' author='flobotics' open_date='2019-06-16T17:43:27Z' closed_time='2019-06-23T09:07:44Z'>
	<summary>beta-1: tf.keras.layers.Conv2D with dilation_rate &amp;gt; 1 returns tensor with shape None</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): tensorflow-gpu==2.0.0-beta1 colab
TensorFlow version (use command below):tensorflow-gpu==2.0.0-beta1
Python version: pip3
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: colab
GPU model and memory:

Describe the current behavior
if tf.keras.layers.Conv2D is used with dilation_rate param &gt; 1 it returns tensors with shape None!
	</description>
	<comments>
		<comment id='1' author='flobotics' date='2019-06-17T13:09:05Z'>
		&lt;denchmark-link:https://github.com/flobotics&gt;@flobotics&lt;/denchmark-link&gt;
 In order to expedite the trouble-shooting process, please provide a code snippet to reproduce the issue reported here. Thanks!
		</comment>
		<comment id='2' author='flobotics' date='2019-06-18T18:25:14Z'>
		you can run the code directly in colab.
&lt;denchmark-link:https://github.com/flobotics/colab/blob/master/tf2_ganimorph.ipynb&gt;https://github.com/flobotics/colab/blob/master/tf2_ganimorph.ipynb&lt;/denchmark-link&gt;

github now shows directly the notebook with the error message in the def Discriminator function. You can also run it directly with colab.
the error message is
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-34-4221abe9b435&gt; in &lt;module&gt;()
----&gt; 1 discriminator = Discriminator()
      2 
      3 if not TEST:
      4   noise = tf.random.normal([1, 3, 128, 128])
      5 

&lt;ipython-input-33-8aedbb5db62a&gt; in Discriminator()
    105                         bias_initializer=None)(atrous)
    106 
--&gt; 107   atrous2 = tfa.layers.InstanceNormalization()(atrous2)
    108   atrous2 = layers.ReLU()(atrous2)
    109 

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)
    614           # Build layer if applicable (if the `build` method has been
    615           # overridden).
--&gt; 616           self._maybe_build(inputs)
    617 
    618           # Wrapping `call` function in autograph to allow for dynamic control

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in _maybe_build(self, inputs)
   1964         # operations.
   1965         with tf_utils.maybe_init_scope(self):
-&gt; 1966           self.build(input_shapes)
   1967       # We must set self.built since user defined build functions are not
   1968       # constrained to set self.built.

/usr/local/lib/python3.6/dist-packages/tensorflow_addons/layers/normalizations.py in build(self, input_shape)
    102     def build(self, input_shape):
    103 
--&gt; 104         self._check_if_input_shape_is_none(input_shape)
    105         self._set_number_of_groups_for_instance_norm(input_shape)
    106         self._check_size_of_dimensions(input_shape)

/usr/local/lib/python3.6/dist-packages/tensorflow_addons/layers/normalizations.py in _check_if_input_shape_is_none(self, input_shape)
    203                              'input tensor should have a defined dimension '
    204                              'but the layer received an input with shape ' +
--&gt; 205                              str(input_shape) + '.')
    206 
    207     def _set_number_of_groups_for_instance_norm(self, input_shape):

ValueError: Axis -1 of input tensor should have a defined dimension but the layer received an input with shape (None, 512, None, None).
&lt;/denchmark-code&gt;

If you run it with  tensorflow-gpu==2.0.0-alpha0 it works ?
hope that is good enough ,or do you need more?
		</comment>
		<comment id='3' author='flobotics' date='2019-06-20T05:12:12Z'>
		Was able to reproduce the issue on colab link with Tensorflow 2.0.0.beta1. Thanks!
		</comment>
		<comment id='4' author='flobotics' date='2019-06-22T19:57:14Z'>
		are there some news/updates ?
		</comment>
		<comment id='5' author='flobotics' date='2019-06-23T08:25:02Z'>
		The shape information gets lost somewhere in __call__. call itself is fine.
I debugged a little, trying to find where exactly the shape is list, but I haven't found it: &lt;denchmark-link:https://colab.sandbox.google.com/drive/1IKVe8cJhmnOV0SHztLmryYT9xvkJTIAm#scrollTo=_rbSDPnQH9ak&gt;https://colab.sandbox.google.com/drive/1IKVe8cJhmnOV0SHztLmryYT9xvkJTIAm#scrollTo=_rbSDPnQH9ak&lt;/denchmark-link&gt;

A simple workaround is to call output.set_shape(layer.compute_output_shape(input.shape)) on the output, but there's clearly a bug here.
		</comment>
		<comment id='6' author='flobotics' date='2019-06-23T09:07:44Z'>
		I'm closing this as a duplicate of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29542&gt;#29542&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='flobotics' date='2019-06-23T09:07:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29843&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29843&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>