<bug id='40081' author='jeongukjae' open_date='2020-06-02T09:53:42Z' closed_time='2020-06-18T17:52:39Z'>
	<summary>Cannot save RNN-based model as a saved model format</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04.3 LTS
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): v2.2.0-rc4-8-g2b96f3662b (GIT_VERSION), 2.2.0 (VERSION)
Python version: 3.7.5
CUDA/cuDNN version: 10.1
GPU model and memory: Titan RTX, ~25GB

Describe the current behavior
I wrote a simple code that builds RNN using GRUCells and save with signature function.
import tensorflow as tf

gru_encoder = tf.keras.layers.RNN([tf.keras.layers.GRUCell(200) for _ in range(4)], return_sequences=True)


gru_encoder(tf.keras.Input((32, 200)))


@tf.function(
    input_signature=[tf.TensorSpec(shape=[None, None, None], dtype=tf.float32)]  # batch, sequence length, hidden size
)
def _signature_fn(input_embedding):
    return gru_encoder(input_embedding)


tf.saved_model.save(gru_encoder, "./test-model/1", signatures=_signature_fn)
And the result of above script is
$ python test.py
2020-06-02 18:42:20.388075: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-06-02 18:42:20.525918: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:19:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:20.527134: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 1 with properties: 
pciBusID: 0000:1a:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:20.528153: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 2 with properties: 
pciBusID: 0000:67:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:20.529164: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 3 with properties: 
pciBusID: 0000:68:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:20.536014: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-02 18:42:20.537691: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-02 18:42:20.539509: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-02 18:42:20.539851: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-02 18:42:20.541872: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-02 18:42:20.542990: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-02 18:42:20.547193: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-02 18:42:20.556527: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0, 1, 2, 3
2020-06-02 18:42:20.556829: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2020-06-02 18:42:20.590996: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 3500000000 Hz
2020-06-02 18:42:20.593061: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f254c000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-06-02 18:42:20.593123: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-06-02 18:42:21.337111: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55f0e31589f0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-06-02 18:42:21.337154: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): TITAN RTX, Compute Capability 7.5
2020-06-02 18:42:21.337163: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (1): TITAN RTX, Compute Capability 7.5
2020-06-02 18:42:21.337171: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (2): TITAN RTX, Compute Capability 7.5
2020-06-02 18:42:21.337179: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (3): TITAN RTX, Compute Capability 7.5
2020-06-02 18:42:21.339651: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:19:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:21.341408: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 1 with properties: 
pciBusID: 0000:1a:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:21.343151: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 2 with properties: 
pciBusID: 0000:67:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:21.344891: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 3 with properties: 
pciBusID: 0000:68:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 23.65GiB deviceMemoryBandwidth: 625.94GiB/s
2020-06-02 18:42:21.344938: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-02 18:42:21.344955: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-02 18:42:21.344969: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-02 18:42:21.344984: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-02 18:42:21.345001: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-02 18:42:21.345016: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-02 18:42:21.345031: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-02 18:42:21.356549: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0, 1, 2, 3
2020-06-02 18:42:21.356628: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-02 18:42:21.367494: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-02 18:42:21.367544: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 1 2 3 
2020-06-02 18:42:21.367553: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N N N N 
2020-06-02 18:42:21.367559: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 1:   N N N N 
2020-06-02 18:42:21.367565: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 2:   N N N N 
2020-06-02 18:42:21.367570: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 3:   N N N N 
2020-06-02 18:42:21.374361: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 22604 MB memory) -&gt; physical GPU (device: 0, name: TITAN RTX, pci bus id: 0000:19:00.0, compute capability: 7.5)
2020-06-02 18:42:21.376397: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 22604 MB memory) -&gt; physical GPU (device: 1, name: TITAN RTX, pci bus id: 0000:1a:00.0, compute capability: 7.5)
2020-06-02 18:42:21.377956: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:2 with 22604 MB memory) -&gt; physical GPU (device: 2, name: TITAN RTX, pci bus id: 0000:67:00.0, compute capability: 7.5)
2020-06-02 18:42:21.379349: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:3 with 22581 MB memory) -&gt; physical GPU (device: 3, name: TITAN RTX, pci bus id: 0000:68:00.0, compute capability: 7.5)
Traceback (most recent call last):
  File "test.py", line 16, in &lt;module&gt;
    tf.saved_model.save(gru_encoder, "./test-model/1", signatures=_signature_fn)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/saved_model/save.py", line 951, in save
    obj, export_dir, signatures, options, meta_graph_def)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/saved_model/save.py", line 1012, in _build_meta_graph
    signature_serialization.validate_saveable_view(checkpoint_graph_view)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/saved_model/signature_serialization.py", line 268, in validate_saveable_view
    saveable_view.root):
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/saved_model/save.py", line 108, in list_dependencies
    extra_dependencies = self.list_extra_dependencies(obj)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/saved_model/save.py", line 137, in list_extra_dependencies
    self._serialization_cache)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py", line 2746, in _list_extra_dependencies_for_serialization
    .list_extra_dependencies_for_serialization(serialization_cache))
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/base_serialization.py", line 74, in list_extra_dependencies_for_serialization
    return self.objects_to_serialize(serialization_cache)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/layer_serialization.py", line 73, in objects_to_serialize
    serialization_cache).objects_to_serialize)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/layer_serialization.py", line 94, in _get_serialized_attributes
    serialized_attr.set_and_validate_objects(object_dict)
  File "{PROJECT_DIRECTORY}/env/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/serialized_attributes.py", line 212, in set_and_validate_objects
    ' {})'.format(object_dict[key], key))
ValueError: Object dictionary contained a non-trackable object: (None, None, None, None) (for key states)
Describe the expected behavior
I think this script should run without any exception and actually it works fine in tensorflow==2.1.0.
	</description>
	<comments>
		<comment id='1' author='jeongukjae' date='2020-06-04T02:46:29Z'>
		I have tried in colab with TF 2.2, nightly versions and was able to reproduce the issue.However i do not see any issue with TF version 2.1.0.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/e3832a3e8ea68a4e31f4396635e1cd73/untitled46.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='jeongukjae' date='2020-06-04T03:07:29Z'>
		I'm facing same issue only when using TF 2.2.
		</comment>
		<comment id='3' author='jeongukjae' date='2020-06-11T18:29:03Z'>
		I face a similar issue when trying to save a model (in saved model format) containing Bidirectional ConvLSTM2D layers. I get:
ValueError: Object dictionary contained a non-trackable object: (None, None) (for key states)
I tried using sequential model, and the functional api. I have no issues when saving in h5 format. Unfortunately, that is of no use for me as I need the .pb file.
Below is my model:
&lt;denchmark-code&gt;inptensor = Input(shape=(None, 96, 2, 2), dtype='float32')
tdens = TimeDistributed(Dense(4))(inptensor)
bn1 = BatchNormalization()(tdens)
ac0 = Activation('tanh')(bn1)
bd1 = Bidirectional(ConvLSTM2D(2, (3, 3),
                               return_sequences=True,
                               padding='same',
                               go_backwards=True,
                               activation='tanh',
                               recurrent_activation='sigmoid'))(ac0)
bd2 = Bidirectional(ConvLSTM2D(2, (3, 3),
                               return_sequences=True,
                               padding='same',
                               go_backwards=True,
                               activation='tanh',
                               recurrent_activation='sigmoid'))(bd1)
bd3 = Bidirectional(ConvLSTM2D(2, (3, 3),
                               return_sequences=False,
                               padding='same',
                               go_backwards=True,
                               activation='tanh',
                               recurrent_activation='sigmoid'))(bd2)
dens2 = Dense(2)(bd3)
bn4 = BatchNormalization()(dens2)
ac3 = Activation('relu')(bn4)
dens3 = Dense(1)(ac3)
bn5 = BatchNormalization()(dens3)
ac4 = Activation('relu')(bn5)
model = tf.keras.Model(inptensor, ac4)
&lt;/denchmark-code&gt;

EDIT:
I tried both variable and fixed sequence length and got the same error.
I'm running arch linux and use Pzthon 3.8, and tf-gpu on a Nvidia RTX 2080 Ti.
UPDATE:
Error only occurs in 2.2.0! 2.1.0 works fine!
I installed 2.1.0 into a virtual-env but didn't properly activate that virtual-env in my IDE, thus remained with 2.2.0 the entire time. Omg, what a blunder. Please apologize any circumstances my error may have caused. I for one wasted days on this idiotic mistake.
		</comment>
		<comment id='4' author='jeongukjae' date='2020-06-14T00:29:32Z'>
		Doublepost to notify dev team about my mistake (see Update in previous comment) so they may not waste any time trying to recreate my error in tf 2.1.0. This comment can be deleted.
		</comment>
		<comment id='5' author='jeongukjae' date='2020-06-18T17:38:20Z'>
		Sorry for the late reply. This issue has the same root cause as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/40328&gt;#40328&lt;/denchmark-link&gt;
, and we are sending a fix for it. Should be fixed in 2.3 release.
		</comment>
		<comment id='6' author='jeongukjae' date='2020-06-18T17:52:36Z'>
		Should be fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/47582983cb1064b5bb81233db4f0adeeaa10b74d&gt;4758298&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='jeongukjae' date='2020-06-18T17:52:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40081&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40081&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>