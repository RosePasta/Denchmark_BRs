<bug id='34849' author='00krishna' open_date='2019-12-05T04:09:58Z' closed_time='2020-10-27T16:54:29Z'>
	<summary>TF 2.0 - WARNING - dense_features is casting an input tensor from dtype float64 to the layer's dtype of float32</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):


OS Platform and Distribution Ubuntu Linux 18.04 x64


TensorFlow installed from (source or binary): Installed from Anaconda


TensorFlow version (use command below):
python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"
unknown 2.0.0
I am using TF 2.0.0.


Python version: python 3.7.4


Bazel version (if compiling from source): NA


GCC/Compiler version (if compiling from source): NA


CUDA/cuDNN version: Cuda release 10.1, V10.1.168; cudnn 7.6.0


GPU model and memory: Nvidia GTX 1080 11GB.


You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
This is both a code issue and a documentation problem--but mostly a code problem.
I was looking at the tutorial(&lt;denchmark-link:https://www.tensorflow.org/tutorials/structured_data/feature_columns#numeric_columns&gt;https://www.tensorflow.org/tutorials/structured_data/feature_columns#numeric_columns&lt;/denchmark-link&gt;
) and saw that the tutorial itself is generating warnings. So that suggests some problems in the code as well as the tutorial.
Describe the expected behavior
I would expect the tutorial to generate no warnings--and hence demonstrate proper code functionality. As it is, it is not clear whether the warnings are generated from a bug in the code, or from spurious warnings, etc.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
&lt;denchmark-code&gt;from __future__ import absolute_import, division, print_function, unicode_literals

import numpy as np
import pandas as pd

import tensorflow as tf

from tensorflow import feature_column
from tensorflow.keras import layers
from sklearn.model_selection import train_test_split

URL = 'https://storage.googleapis.com/applied-dl/heart.csv'
dataframe = pd.read_csv(URL)
train, test = train_test_split(dataframe, test_size=0.2)
train, val = train_test_split(train, test_size=0.2)
print(len(train), 'train examples')
print(len(val), 'validation examples')
print(len(test), 'test examples')

def df_to_dataset(dataframe, shuffle=True, batch_size=32):
  dataframe = dataframe.copy()
  labels = dataframe.pop('target')
  ds = tf.data.Dataset.from_tensor_slices((dict(dataframe), labels))
  if shuffle:
    ds = ds.shuffle(buffer_size=len(dataframe))
  ds = ds.batch(batch_size)
  return ds

batch_size = 5 # A small batch sized is used for demonstration purposes
train_ds = df_to_dataset(train, batch_size=batch_size)
val_ds = df_to_dataset(val, shuffle=False, batch_size=batch_size)
test_ds = df_to_dataset(test, shuffle=False, batch_size=batch_size)

# We will use this batch to demonstrate several types of feature columns
example_batch = next(iter(train_ds))[0]

# A utility method to create a feature column
# and to transform a batch of data
def demo(feature_column):
  feature_layer = layers.DenseFeatures(feature_column)
  print(feature_layer(example_batch).numpy())

age = feature_column.numeric_column("age")
demo(age) # &lt;-- SHOULD TRIGGER OR DISPLAY THE WARNING
&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
No other materials provided.
	</description>
	<comments>
		<comment id='1' author='00krishna' date='2019-12-05T22:47:33Z'>
		The solution to this is to make a simple update to the code.
&lt;denchmark-code&gt;  feature_layer = layers.DenseFeatures(feature_column, dtype='float64')
&lt;/denchmark-code&gt;

Need to add the datatype directly to the call DenseFeatures. This probably should be a pull request to the tutorial.
		</comment>
		<comment id='2' author='00krishna' date='2019-12-06T08:59:56Z'>
		Tried replicating the issue on colab but it worked as expected, no warnings.
Please see the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/13f1ce009e37f019928c0dc947a695c5/untitled294.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='00krishna' date='2019-12-06T21:10:21Z'>
		Let me just confirm this first. I was getting this error just yesterday so let me make sure there is nothing different.
		</comment>
		<comment id='4' author='00krishna' date='2020-10-27T01:28:27Z'>
		&lt;denchmark-link:https://github.com/00krishna&gt;@00krishna&lt;/denchmark-link&gt;
 I think this was resolved in the current tutorial. I ran the code without any warning. &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/61eb3c8dad917ce67c6319ad520ab283/feature_columns.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist.
Can you please verify once and close the issue. Thanks!
		</comment>
		<comment id='5' author='00krishna' date='2020-10-27T16:54:29Z'>
		Okay sounds good. Thank for looking into this &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>