<bug id='15792' author='ghost(ghost)' open_date='2018-01-02T20:26:30Z' closed_time='2020-01-24T21:25:38Z'>
	<summary>Portability of TensorFlow Meta graph file</summary>
	<description>
OS Platform and Distribution : CentOS
TensorFlow installed from : Sources
TensorFlow version : 1.4
Bazel version : N/A
CUDA/cuDNN version 8.0 (CUDA) and 6.0 (CuDNN)
GPU model and memory : N/A
Exact command to reproduce : N/A
The .meta file from TensorFlow contains device information. Although I can use clear_devices=False to prevent device information getting logged, I beg to ask the relevance of the .meta file with respect to portability.


If I have the code for the generation of the TensorFlow graph, then I do not need the .meta file as per this answer.


What is the applicability of transferring only the .meta file to someone ?


Assuming that I train the graph with 4 GPUs, and then provide .meta file to someone with 8 or possibly only 1 GPU. For someone with 8 GPUs, would this not prevent him/her from actually running the graph for training/inference over 8 GPUs ? In the case of someone with only 1 GPU, what would happen to entities with device numbers 1-3 ?


And finally, what are the implications of point 3, when clear_devices=True ?


	</description>
	<comments>
		<comment id='1' author='ghost(ghost)' date='2018-01-03T07:34:49Z'>
		Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.
Have I written custom code
OS Platform and Distribution
TensorFlow installed from
TensorFlow version
Bazel version
CUDA/cuDNN version
GPU model and memory
Exact command to reproduce
		</comment>
		<comment id='2' author='ghost(ghost)' date='2018-01-16T00:17:05Z'>
		Anyone following this ?
		</comment>
		<comment id='3' author='ghost(ghost)' date='2018-01-23T23:04:21Z'>
		The original poster has replied to this issue after the stat:awaiting response label was applied.
		</comment>
		<comment id='4' author='ghost(ghost)' date='2018-01-31T00:37:16Z'>
		clear_devices just removes the with tf.device() assignments.
&lt;denchmark-link:https://github.com/sukritiramesh&gt;@sukritiramesh&lt;/denchmark-link&gt;
 Any comment on this?
		</comment>
		<comment id='5' author='ghost(ghost)' date='2018-02-14T13:24:57Z'>
		Nagging Awaiting TensorFlower: It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='6' author='ghost(ghost)' date='2018-03-03T08:00:52Z'>
		Nagging Awaiting TensorFlower: It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='7' author='ghost(ghost)' date='2018-03-03T10:42:26Z'>
		A clear example would do wonders for especially new TensorFlow users. There is very little such practical information available on this on other forums as well.
		</comment>
		<comment id='8' author='ghost(ghost)' date='2018-03-18T16:01:21Z'>
		Nagging Awaiting TensorFlower: It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='9' author='ghost(ghost)' date='2018-03-27T19:37:34Z'>
		These questions may be better asked on &lt;denchmark-link:http://stackoverflow.com/questions/tagged/tensorflow&gt;Stack Overflow&lt;/denchmark-link&gt;
, because answers will help other users more than here. I'm leaving this issue open as a documentation request. Thanks!
		</comment>
		<comment id='10' author='ghost(ghost)' date='2018-03-27T19:46:46Z'>
		Not criticising; but just bringing to notice &lt;denchmark-link:https://stackoverflow.com/questions/48067015/portability-of-tensorflow-meta-graph-file&gt;the corresponding StackOverFlow question&lt;/denchmark-link&gt;
. Also notice, the activity on that question.
		</comment>
		<comment id='11' author='ghost(ghost)' date='2020-01-24T21:25:38Z'>
		We have a new saved-model format for TensorFlow2. I think this bug is obsolete.
		</comment>
	</comments>
</bug>