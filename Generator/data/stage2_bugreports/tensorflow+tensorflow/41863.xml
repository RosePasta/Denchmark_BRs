<bug id='41863' author='Jonas-0529' open_date='2020-07-29T14:48:50Z' closed_time='2020-08-17T20:52:31Z'>
	<summary>Cuda Error when training RNN</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -
TensorFlow installed from (source or binary): Binary (python wheel using pip)
TensorFlow version: 2.2 AND 2.3
Python version: 3.8.2
Installed using virtualenv? pip? conda?: pip
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.1 / 7.6.5
GPU model and memory: GTX 1070 8GB with the current driver 451.67


I wanted to test my tensorflow-gpu installation. It works for CNNs but when I try to run the text classification tutorial where Bidirectional layers with LSTM are used(&lt;denchmark-link:https://www.tensorflow.org/tutorials/text/text_classification_rnn&gt;https://www.tensorflow.org/tutorials/text/text_classification_rnn&lt;/denchmark-link&gt;
) the training process crashes during early epochs with this error (I left out part of the repeating part of the stacktrace):
&lt;denchmark-code&gt;E tensorflow/stream_executor/dnn.cc:613] CUDNN_STATUS_INTERNAL_ERROR
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1986): "cudnnRNNBackwardData( cudnn.handle(), rnn_desc.handle(), model_dims.max_seq_length, output_desc.handles(), output_data.opaque(), output_desc.handles(), output_backprop_data.opaque(), output_h_desc.handle(), output_h_backprop_data.opaque(), output_c_desc.handle(), output_c_backprop_data.opaque(), rnn_desc.params_handle(), params.opaque(), input_h_desc.handle(), input_h_data.opaque(), input_c_desc.handle(), input_c_data.opaque(), input_desc.handles(), input_backprop_data-&gt;opaque(), input_h_desc.handle(), input_h_backprop_data-&gt;opaque(), input_c_desc.handle(), input_c_backprop_data-&gt;opaque(), workspace.opaque(), workspace.size(), reserve_space_data-&gt;opaque(), reserve_space_data-&gt;size())"

W tensorflow/core/framework/op_kernel.cc:1753] OP_REQUIRES failed at cudnn_rnn_ops.cc:1922 : Internal: Failed to call ThenRnnBackward with model config: [rnn_mode, rnn_input_mode, rnn_direction_mode]: 2, 0, 0 , [num_layers, input_size, num_units, dir_count, max_seq_length, batch_size, cell_num_units]: [1, 64, 64, 1, 1449, 32, 64] 
&lt;/denchmark-code&gt;

Provide the exact sequence of commands / steps that you executed before running into the problem
I installed cuda 10.1 and cuDNN 7.6.5 and edited my PATH variable accordingly + restarted, because sometimes windows is weird about changing environment variables.
Afterwards I ran pip install tensorflow-gpu inside a conda environment.
I then executed a python file containing all the code of the tutorial.
Any other info / logs
The error occurs within the first epoch. Not directly after the start, but in early steps during the epoch, which makes me wonder where the problem originates.
When I use a model without the tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(64, return_sequences=True)), layer it works just fine.
When I run tf.config.list_physical_devices('GPU') it seems to load all dll's correctly.
I was also considering that this error is due to insufficient GPU memory. Even though the model is 'relatively' small, tensorflow allocated between 6 and 7GB memory. It does that also for small CNN models.
	</description>
	<comments>
		<comment id='1' author='Jonas-0529' date='2020-08-03T15:01:56Z'>
		@Zapnuk
Please provide simple stand alone code to replicate the issue faced or is possible share a colab gist with the error reported.
		</comment>
		<comment id='2' author='Jonas-0529' date='2020-08-03T18:33:55Z'>
		Its the afaik with any network that uses a Bidirectional Layer.
I run a 100% copy of this code locally: &lt;denchmark-link:https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/text/text_classification_rnn.ipynb&gt;https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/text/text_classification_rnn.ipynb&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Jonas-0529' date='2020-08-06T17:28:04Z'>
		@Zapnuk
I ran the mentioned code and do not face any errors, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/e2c913f815db9384c924eea00b661f47/untitled326.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Jonas-0529' date='2020-08-10T10:46:39Z'>
		This is a colab. Did you try it on a (local) Windows machine with the Cuda 10.1 and cudnn 7.6.5?
I've tried it again. I followed the exact guidelines at &lt;denchmark-link:https://www.tensorflow.org/install/gpu&gt;https://www.tensorflow.org/install/gpu&lt;/denchmark-link&gt;
 . The only component in my system that is of a different version is the GPU driver where CUDA 10.1 wants to install version 417 but I'd like to continue to use the newer version 451.67.
		</comment>
		<comment id='5' author='Jonas-0529' date='2020-08-17T20:51:34Z'>
		Thanks for reporting the issue. We have similar reports for this, and the root cause in the cudnn kernel itself. Please see other issue that has been resolved to find out the solutions (mostly update the cudnn to a newer version).
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/39989&gt;#39989&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/36508&gt;#36508&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/41444&gt;#41444&lt;/denchmark-link&gt;

&lt;denchmark-link:https://forums.developer.nvidia.com/t/cudnn-lstm-is-broken-above-driver-431-60-unexpected-event-status-1-cuda/108800&gt;https://forums.developer.nvidia.com/t/cudnn-lstm-is-broken-above-driver-431-60-unexpected-event-status-1-cuda/108800&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='Jonas-0529' date='2020-08-17T20:52:28Z'>
		I am going to close this issue to avoid any duplicated tracking. Feel free to reopen if you feel you issue is different from others.
Thanks.
		</comment>
		<comment id='7' author='Jonas-0529' date='2020-08-17T20:52:33Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41863&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41863&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Jonas-0529' date='2020-08-18T08:08:13Z'>
		Ty for the response. This matches exactly my issue. It seems like the only solution is to wait until tensorflow supports cudnn 8.0 or downgrade the nvidia driver to &lt;431.86
		</comment>
		<comment id='9' author='Jonas-0529' date='2020-12-22T15:59:05Z'>
		Amazing how this still is not fixed.
		</comment>
	</comments>
</bug>