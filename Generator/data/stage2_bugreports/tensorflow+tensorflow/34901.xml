<bug id='34901' author='everdark' open_date='2019-12-06T15:22:29Z' closed_time='2019-12-10T19:15:18Z'>
	<summary>keras saved model cannot be loaded (no custom layer)</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): pip install tensorflow-gpu
TensorFlow version (use command below): 2.0.0
Python version: 3.6.2
CUDA/cuDNN version: 10.0.130 / 7.6.1
GPU model and memory: GTX 1060 MAX-Q 6GB

Describe the current behavior
A keras Sequential model trained and saved cannot be re-loaded by tf.keras.models.load_model.
The complete error message:
&lt;denchmark-code&gt;TypeError                                 Traceback (most recent call last)
c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape, allow_broadcast)
    540     try:
--&gt; 541       str_values = [compat.as_bytes(x) for x in proto_values]
    542     except TypeError:

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\tensor_util.py in &lt;listcomp&gt;(.0)
    540     try:
--&gt; 541       str_values = [compat.as_bytes(x) for x in proto_values]
    542     except TypeError:

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\util\compat.py in as_bytes(bytes_or_text, encoding)
     70     raise TypeError('Expected binary or unicode string, got %r' %
---&gt; 71                     (bytes_or_text,))
     72

TypeError: Expected binary or unicode string, got -1

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
&lt;ipython-input-65-6d5b848d58f1&gt; in &lt;module&gt;
----&gt; 1 tf.keras.models.load_model("model.h5")

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\saving\save.py in load_model(filepath, custom_objects, compile)
    144   if (h5py is not None and (
    145       isinstance(filepath, h5py.File) or h5py.is_hdf5(filepath))):
--&gt; 146     return hdf5_format.load_model_from_hdf5(filepath, custom_objects, compile)
    147
    148   if isinstance(filepath, six.string_types):

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\saving\hdf5_format.py in load_model_from_hdf5(filepath, custom_objects, compile)
    166     model_config = json.loads(model_config.decode('utf-8'))
    167     model = model_config_lib.model_from_config(model_config,
--&gt; 168                                                custom_objects=custom_objects)
    169
    170     # set weights

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\saving\model_config.py in model_from_config(config, custom_objects)
     53                     '`Sequential.from_config(config)`?')
     54   from tensorflow.python.keras.layers import deserialize  # pylint: disable=g-import-not-at-top
---&gt; 55   return deserialize(config, custom_objects=custom_objects)
     56
     57

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\layers\serialization.py in deserialize(config, custom_objects)
    100       module_objects=globs,
    101       custom_objects=custom_objects,
--&gt; 102       printable_module_name='layer')

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\utils\generic_utils.py in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)
    189             custom_objects=dict(
    190                 list(_GLOBAL_CUSTOM_OBJECTS.items()) +
--&gt; 191                 list(custom_objects.items())))
    192       with CustomObjectScope(custom_objects):
    193         return cls.from_config(cls_config)

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\engine\sequential.py in from_config(cls, config, custom_objects)
    368       layer = layer_module.deserialize(layer_config,
    369                                        custom_objects=custom_objects)
--&gt; 370       model.add(layer)
    371     if not model.inputs and build_input_shape:
    372       model.build(build_input_shape)

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\training\tracking\base.py in _method_wrapper(self, *args, **kwargs)
    455     self._self_setattr_tracking = False  # pylint: disable=protected-access
    456     try:
--&gt; 457       result = method(self, *args, **kwargs)
    458     finally:
    459       self._self_setattr_tracking = previous_value  # pylint: disable=protected-access

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\engine\sequential.py in add(self, layer)
    194       # If the model is being built continuously on top of an input layer:
    195       # refresh its output.
--&gt; 196       output_tensor = layer(self.outputs[0])
    197       if len(nest.flatten(output_tensor)) != 1:
    198         raise TypeError('All layers in a Sequential model '

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py in __call__(self, inputs, *args, **kwargs)
    840                     not base_layer_utils.is_in_eager_or_tf_function()):
    841                   with auto_control_deps.AutomaticControlDependencies() as acd:
--&gt; 842                     outputs = call_fn(cast_inputs, *args, **kwargs)
    843                     # Wrap Tensors in `outputs` in `tf.identity` to avoid
    844                     # circular dependencies.

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\keras\layers\pooling.py in call(self, inputs, mask)
    641       input_shape = inputs.shape.as_list()
    642       broadcast_shape = [-1, input_shape[steps_axis], 1]
--&gt; 643       mask = array_ops.reshape(mask, broadcast_shape)
    644       inputs *= mask
    645       return backend.sum(inputs, axis=steps_axis) / math_ops.reduce_sum(

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\ops\array_ops.py in reshape(tensor, shape, name)
    129     A `Tensor`. Has the same type as `tensor`.
    130   """
--&gt; 131   result = gen_array_ops.reshape(tensor, shape, name)
    132   tensor_util.maybe_set_static_shape(result, shape)
    133   return result

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\ops\gen_array_ops.py in reshape(tensor, shape, name)
   8115   # Add nodes to the TensorFlow graph.
   8116   _, _, _op = _op_def_lib._apply_op_helper(
-&gt; 8117         "Reshape", tensor=tensor, shape=shape, name=name)
   8118   _result = _op.outputs[:]
   8119   _inputs_flat = _op.inputs

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords)
    528           except TypeError as err:
    529             if dtype is None:
--&gt; 530               raise err
    531             else:
    532               raise TypeError(

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords)
    525                 dtype=dtype,
    526                 as_ref=input_arg.is_ref,
--&gt; 527                 preferred_dtype=default_dtype)
    528           except TypeError as err:
    529             if dtype is None:

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx, accept_composite_tensors)
   1294
   1295     if ret is None:
-&gt; 1296       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
   1297
   1298     if ret is NotImplemented:

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)
    284                                          as_ref=False):
    285   _ = as_ref
--&gt; 286   return constant(v, dtype=dtype, name=name)
    287
    288

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\constant_op.py in constant(value, dtype, shape, name)
    225   """
    226   return _constant_impl(value, dtype, shape, name, verify_shape=False,
--&gt; 227                         allow_broadcast=True)
    228
    229

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\constant_op.py in _constant_impl(value, dtype, shape, name, verify_shape, allow_broadcast)
    263       tensor_util.make_tensor_proto(
    264           value, dtype=dtype, shape=shape, verify_shape=verify_shape,
--&gt; 265           allow_broadcast=allow_broadcast))
    266   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)
    267   const_tensor = g.create_op(

c:\users\kylec\appdata\local\programs\python\python36\lib\site-packages\tensorflow_core\python\framework\tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape, allow_broadcast)
    543       raise TypeError("Failed to convert object of type %s to Tensor. "
    544                       "Contents: %s. Consider casting elements to a "
--&gt; 545                       "supported type." % (type(values), values))
    546     tensor_proto.string_val.extend(str_values)
    547     return tensor_proto

TypeError: Failed to convert object of type &lt;class 'list'&gt; to Tensor. Contents: [-1, None, 1]. Consider casting elements to a supported type.
&lt;/denchmark-code&gt;

Also if I switch to use functional API the result remains the same.
Describe the expected behavior
A saved model should be able to re-loaded without error.
Code to reproduce the issue
import tensorflow as tf
from tensorflow.keras.datasets import imdb
from tensorflow.keras.preprocessing.sequence import pad_sequences

(x_train, y_train), (x_test, y_test) = imdb.load_data(path="imdb.npz",
                                                      num_words=None,
                                                      skip_top=0,
                                                      maxlen=None,
                                                      seed=113,
                                                      start_char=1,
                                                      oov_char=2,
                                                      index_from=3)

x_train = pad_sequences(x_train, padding="post")
maxlen = x_train.shape[1]
vocab_size = x_train.max() + 1

model = tf.keras.Sequential([
  tf.keras.layers.Input(shape=(maxlen,), name="sequence"),
  tf.keras.layers.Embedding(vocab_size, 32, mask_zero=True, name="word_embedding"),
  tf.keras.layers.GlobalAveragePooling1D(name="doc_embedding"),
  tf.keras.layers.Dense(16, activation="relu", name="relu"),
  tf.keras.layers.Dense(1, activation="sigmoid", name="sigmoid")
], name="nn_classifier")
model.compile(optimizer="adam", loss="binary_crossentropy", metrics=["accuracy"])
metrics = model.fit(x=x_train, y=y_train, batch_size=256, epochs=1)
model.save("model.h5")

tf.keras.models.load_model("model.h5")  # Failed.
	</description>
	<comments>
		<comment id='1' author='everdark' date='2019-12-09T11:28:25Z'>
		&lt;denchmark-link:https://github.com/everdark&gt;@everdark&lt;/denchmark-link&gt;
,
If you perform the below mentioned changes, it works without any error.  Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/f1a5f088176869349e43c7813f7e6ad0/34901.ipynb#scrollTo=mlBe79JB_hnm&gt;Gist&lt;/denchmark-link&gt;



Save the model using model.save("model") instead of model.save("model.h5") and


Load the Model using tf.keras.models.load_model("model") instead of tf.keras.models.load_model("model.h5").


Thanks!
		</comment>
		<comment id='2' author='everdark' date='2019-12-09T12:30:26Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
,
Thanks for the workaround.
But essentially this will save the model in  format. If instead I'd like to save it as a single file  format it won't work. I prefer  over  format simply because it is neater. :)
		</comment>
		<comment id='3' author='everdark' date='2019-12-09T13:45:05Z'>
		I have figured out the root cause of the error.
It is the first Input layer.
If I change the model def to be:
model = tf.keras.Sequential([
  tf.keras.layers.Embedding(vocab_size, 32, input_length=maxlen, mask_zero=True, name="word_embedding"),
  tf.keras.layers.GlobalAveragePooling1D(name="doc_embedding"),
  tf.keras.layers.Dense(16, activation="relu", name="relu"),
  tf.keras.layers.Dense(1, activation="sigmoid", name="sigmoid")
], name="nn_classifier")
model.compile(optimizer="adam", loss="binary_crossentropy", metrics=["accuracy"])
metrics = model.fit(x=x_train, y=y_train, batch_size=256, epochs=1)
model.save("model.h5")

model2 = tf.keras.models.load_model("model.h5")
model2.predict(x_train[:10]) # OK.
I think there is something wrong when a model's first layer is Input.
Also in the original model definition even if I save it as tf format and successfully load it back, the model is not usable since it will throw error when using either fit or predict method.
And I believe the root cause is the same Input presence as the first layer.
Not sure what is the reason why Input is no longer supported as the first layer?
		</comment>
		<comment id='4' author='everdark' date='2019-12-10T19:15:18Z'>
		&lt;denchmark-link:https://github.com/everdark&gt;@everdark&lt;/denchmark-link&gt;
 This is fixed with TF 2.1.0-rc0 . You can successfully save and load models in  format.
		</comment>
		<comment id='5' author='everdark' date='2019-12-10T19:15:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34901&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34901&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>