<bug id='42918' author='Gitariansen' open_date='2020-09-03T07:37:09Z' closed_time='2020-09-16T03:49:08Z'>
	<summary>Non responsive model when building micro speech with cmsis-nn</summary>
	<description>
@tensorflow/micro
System information

Host OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): source
Tensorflow version (commit SHA if source): d3cdadd
Target platform (e.g. Arm Mbed OS, Arduino Nano 33 etc.):  Mbed OS (STM32F746)

Describe the problem
Trying to build the micro_speech application for STM32F746 (also seen with NXP FRDM K66F) with the cmsis-nn optimized kernels, results in an application which is non-responsive to input. Each iteration of the model results in equal average scores for each category (= [64, 64, 64, 64]), such that no predicted commands are ever displayed. The same network response is seen when supplying feature data from yes_micro_features_data.h and no_micro_features_data.h into the model.
This behavior is only seen when compiling for release mode, when compiling with debug mode the application is responsive to input data, and seems to be somewhat able to detect the spoken words yes and no.
When generating the application without the cmsis-nn tag, the application runs fine, both for release and debug mode.
Please provide the exact sequence of commands/steps when you ran into the problem
make -f tensorflow/lite/micro/tools/make/Makefile TARGET=mbed TAGS="cmsis-nn disco_f746ng" generate_micro_speech_mbed_project
In location of generated project:
mbed config root .
mbed deploy
mbed compile -m DISCO_F746NG -t GCC_ARM --profile release --flash
	</description>
	<comments>
		<comment id='1' author='Gitariansen' date='2020-09-09T13:44:51Z'>
		Looping in &lt;denchmark-link:https://github.com/jenselofsson&gt;@jenselofsson&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='Gitariansen' date='2020-09-10T13:54:36Z'>
		I'm able to reproduce the error, and I've also found the cause for it.
It is due to the filter_offset parameter in the CMSIS-NN version of the FullyConnected-kernel being uninitialized, which in turn leads to it being assigned an incorrect value.
When building micro_speech_test with the debug-profile, which uses the -Og flag, it gets assigned 8.
When building with the release-profile, which uses the -Os flag, it get assigned 537196096 (on the board I'm running it on at least)
The correct value is 0.
The micro_speech_test still passes with the debug-profile, since the error is small enough so that the correct option ("silence", "unknown", "yes", or "no") still have the highest score.
&lt;denchmark-link:https://github.com/Gitariansen&gt;@Gitariansen&lt;/denchmark-link&gt;
 This PR fixes the problem with filter_offset being un-initialized, could you try that on your end?
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/43110&gt;#43110&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Gitariansen' date='2020-09-11T11:34:47Z'>
		This change seemed to fix the problem on my end. With the changes applied, the application now runs like expected when built with release mode. Thank you, &lt;denchmark-link:https://github.com/jenselofsson&gt;@jenselofsson&lt;/denchmark-link&gt;
, for your help in debugging this issue and providing the fix.
		</comment>
		<comment id='4' author='Gitariansen' date='2020-09-11T15:18:16Z'>
		I'm facing the same issue, but in my case the difference is that I'm compiling for DISCO_F769NI and I used CMSIS as tag (as suggested in the readme). There's also no difference between debug or release mode. Could there be other steps that I'm missing? . Thanks in advance for your help.
		</comment>
		<comment id='5' author='Gitariansen' date='2020-09-14T08:59:57Z'>
		Today I also tried with the cmsis-nn flag instead of cmsis but the score is always [64 64 64 64]
		</comment>
		<comment id='6' author='Gitariansen' date='2020-09-14T12:40:36Z'>
		&lt;denchmark-link:https://github.com/lucalazzaroni&gt;@lucalazzaroni&lt;/denchmark-link&gt;
 Can you make sure that you have applied the changes in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/43110&gt;#43110&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='7' author='Gitariansen' date='2020-09-14T12:50:19Z'>
		&lt;denchmark-link:https://github.com/jenselofsson&gt;@jenselofsson&lt;/denchmark-link&gt;
 yes, I applied those changes and recompiled, but apparently there's no difference. I also checked with the debugger and those values are correctly assigned. If you had any suggestion I explained my problem more in detail in a new issue (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/43201&gt;#43201&lt;/denchmark-link&gt;
)
		</comment>
		<comment id='8' author='Gitariansen' date='2020-09-16T03:49:10Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42918&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42918&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>