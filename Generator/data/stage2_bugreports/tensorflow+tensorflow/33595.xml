<bug id='33595' author='PeganovAnton' open_date='2019-10-22T07:27:37Z' closed_time='2019-10-23T07:58:31Z'>
	<summary>`tf.summary.FileWriter` overwrites existing events file if reopened in same `logdir`quickly.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.15.0
Python version: 3.6.3
CUDA/cuDNN version: 10.0.130
GPU model and memory: GeForce 940MX, 2GB

Current behaviour
If tf.summary.FileWriter is closed and then reopened in the same logdir, FileWriter overwrites events file created right before closure. If I add a delay (expr time.sleep(1)) before reopening FileWriter, reopened FileWriter creates new events file.
Expected behaviour
I expect FileWriter creating new events file regardless of how recently logdir was used.
Code to reproduce the issue
import os
import time

import tensorflow.compat.v1 as tf


def print_dir_contents(path, msg):
    print()
    print(msg)
    print("Summary dir contents:", os.listdir(path))
    print("Size of events files:", [os.stat(os.path.join(path, f))[-4] for f in os.listdir(path)])


path = 'summary_dir'

pl = tf.placeholder(tf.float32)

s = tf.summary.tensor_summary('tsum', pl)

os.makedirs(path, exist_ok=True)
print_dir_contents(path, "Before summarizing:")
with tf.Session() as sess:
    w = tf.summary.FileWriter(logdir=path)
    for i in range(10):
        s_ = sess.run(s, feed_dict={pl: i})
        w.add_summary(s_, global_step=i)
    w.flush()
    w.close()
    print_dir_contents(path, "After first writer shutdown:")
    # time.sleep(1)  # If uncomment, snippet works correctly.
    w = tf.summary.FileWriter(logdir=path)
    for i in range(10, 20):
        s_ = sess.run(s, feed_dict={pl: i})
        w.add_summary(s_, global_step=i)
    w.flush()
time.sleep(1)
print_dir_contents(path, "After second flush:")
Other info / logs
&lt;denchmark-code&gt;
Before summarizing:
Summary dir contents: []
Size of events files: []
2019-10-22 10:22:34.689307: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2019-10-22 10:22:35.800362: E tensorflow/stream_executor/cuda/cuda_driver.cc:318] failed call to cuInit: CUDA_ERROR_UNKNOWN: unknown error
2019-10-22 10:22:35.800561: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:169] retrieving CUDA diagnostic information for host: aenima
2019-10-22 10:22:35.800639: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:176] hostname: aenima
2019-10-22 10:22:35.800881: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:200] libcuda reported version is: 418.67.0
2019-10-22 10:22:35.801044: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:204] kernel reported version is: 418.67.0
2019-10-22 10:22:35.801107: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:310] kernel version seems to match DSO: 418.67.0
2019-10-22 10:22:35.844875: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-10-22 10:22:36.569070: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2711950000 Hz
2019-10-22 10:22:36.570320: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x564451333fb0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2019-10-22 10:22:36.570411: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version

After first writer shutdown:
Summary dir contents: ['events.out.tfevents.1571728959.aenima']
Size of events files: [530]

After second flush:
Summary dir contents: ['events.out.tfevents.1571728959.aenima']
Size of events files: [532]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='PeganovAnton' date='2019-10-23T05:48:22Z'>
		Issue replicating for TF-1.15, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/2fea3d9404fcfd69cf82dd87fe0e625f/untitled.ipynb#scrollTo=IYPi-FxzI_R_&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='PeganovAnton' date='2019-10-23T07:58:31Z'>
		This is a known issue with FileWriter in TF 1.x and now that TF 2.0 is out, we won't be making further changes to this API.  But the new tf.summary.create_file_writer() in TF 2.0 does a better job of avoiding this issue by including the PID and a per-process UID in the filename as well as the timestamp.
		</comment>
		<comment id='3' author='PeganovAnton' date='2019-10-23T07:58:32Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33595&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33595&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='PeganovAnton' date='2019-10-23T14:34:22Z'>
		Thank you for the response!
		</comment>
	</comments>
</bug>