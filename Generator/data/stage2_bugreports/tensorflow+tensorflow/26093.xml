<bug id='26093' author='herbakamil' open_date='2019-02-25T16:37:18Z' closed_time='2019-03-13T14:16:42Z'>
	<summary>sorry, unimplemented: non-trivial designated initializers not supported</summary>
	<description>
Please make sure that this is a build/installation issue. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.1 LTS
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): source
TensorFlow version: commit a2bb5db
Python version: 2.7.15rc1
Installed using virtualenv? pip? conda?: sources
Bazel version (if compiling from source): 0.20.0
GCC/Compiler version (if compiling from source): gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
CUDA/cuDNN version: -
GPU model and memory: -

Describe the problem
During compilation I get an error: sorry, unimplemented: non-trivial designated initializers not supported.
It can be solved by setting all function pointers to null and applying initialization in order as in the struct defintion.
Provide the exact sequence of commands / steps that you executed before running into the problem
bazel test --verbose_failures tensorflow/lite/delegates/nnapi:nnapi_delegate

I attach diff which fixes this error for me.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/2901455/diff.txt&gt;diff.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='herbakamil' date='2019-03-04T09:17:52Z'>
		&lt;denchmark-link:https://github.com/jdduke&gt;@jdduke&lt;/denchmark-link&gt;
 do you use at Google some internal compilers which behave differently from gcc on officially provided TF Docker images? That would explain why it passes within Google CI and it fails on TF docker image.
I ask you because you've relatively recently worked on this code.
		</comment>
		<comment id='2' author='herbakamil' date='2019-03-04T22:56:13Z'>
		Our internal compiler version is different than that used in our Docker builds, yes. Feel free to propose a PR and I'd be happy to approve. Could you confirm which NDK version is used in the Docker builds?
		</comment>
		<comment id='3' author='herbakamil' date='2019-03-13T12:15:30Z'>
		I think there's no NDK in the Tensorflow docker image
		</comment>
	</comments>
</bug>