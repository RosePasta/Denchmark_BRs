<bug id='44293' author='palatos' open_date='2020-10-24T18:54:25Z' closed_time='2020-10-24T23:22:54Z'>
	<summary>tf.keras.experimental.CosineDecay error</summary>
	<description>

TensorFlow version: 2.3.0
Python version: 3.7.6

According to &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/experimental/CosineDecay&gt;https://www.tensorflow.org/api_docs/python/tf/keras/experimental/CosineDecay&lt;/denchmark-link&gt;
 :

You can pass this schedule directly into a tf.keras.optimizers.Optimizer as the learning rate.

However when I try to use the suggested code, I get the following error:
TypeError: '&lt;' not supported between instances of 'CosineDecay' and 'int'
Standalone code to reproduce the issue
Here is a sample code:
&lt;denchmark-code&gt;import numpy as np
from tensorflow import keras
from tensorflow.keras import layers
import tensorflow as tf

# Model / data parameters
num_classes = 10
input_shape = (28, 28, 1)

# the data, split between train and test sets
(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()

# Scale images to the [0, 1] range
x_train = x_train.astype("float32") / 255
x_test = x_test.astype("float32") / 255
# Make sure images have shape (28, 28, 1)
x_train = np.expand_dims(x_train, -1)
x_test = np.expand_dims(x_test, -1)
print("x_train shape:", x_train.shape)
print(x_train.shape[0], "train samples")
print(x_test.shape[0], "test samples")


# convert class vectors to binary class matrices
y_train = keras.utils.to_categorical(y_train, num_classes)
y_test = keras.utils.to_categorical(y_test, num_classes)

model = keras.Sequential(
    [
        keras.Input(shape=input_shape),
        layers.Conv2D(64, kernel_size=(3, 3), activation="relu"),
        layers.MaxPooling2D(pool_size=(2, 2)),
        layers.Flatten(),
        layers.Dropout(0.5),
        layers.Dense(num_classes, activation="softmax"),
    ]
)

model.summary()

decay_steps = 10
lr_decayed_fn = tf.keras.experimental.CosineDecay(0.0001, decay_steps)

model.compile(
    loss='categorical_crossentropy',
    optimizer=keras.optimizers.Adam(lr=lr_decayed_fn),
    metrics=['categorical_accuracy'],
)

batch_size = 128
epochs = 5

model.compile(loss="categorical_crossentropy", optimizer=tf.keras.optimizers.Adam(lr=lr_decayed_fn), metrics=["categorical_accuracy"])

model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.1)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='palatos' date='2020-10-24T22:51:25Z'>
		Please check &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/44172#issuecomment-712776248&gt;#44172 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='palatos' date='2020-10-24T23:22:54Z'>
		Thank you! It works if I use "learning_rate" instead of "lr". I wasn't aware of this change.
		</comment>
		<comment id='3' author='palatos' date='2020-10-24T23:22:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44293&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44293&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='palatos' date='2020-11-06T02:10:22Z'>
		It doesn't work. Tf 2.2 python 3.6
		</comment>
		<comment id='5' author='palatos' date='2020-11-09T16:24:10Z'>
		&lt;denchmark-link:https://github.com/tricoffee&gt;@tricoffee&lt;/denchmark-link&gt;
 Please reopen this issue / file a new one with your code that is failing.
		</comment>
	</comments>
</bug>