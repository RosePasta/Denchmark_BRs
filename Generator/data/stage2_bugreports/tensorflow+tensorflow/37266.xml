<bug id='37266' author='ismael-elatifi' open_date='2020-03-03T17:27:46Z' closed_time='2020-04-24T03:56:32Z'>
	<summary>Dataset is not cached after model.predict() call (issue present in TF2.0.0 but not in TF2.1.0)</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): NO
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): issue present on Linux and Windows
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if
the issue happens on mobile device: NA
TensorFlow installed from (source or
binary): binary
TensorFlow version (use command below): 2.0.0  (no issue with 2.1.0)
Python version: Python 3.7.5
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from
source): NA
CUDA/cuDNN version: CUDA 10.1 / CuDNN 7.6
GPU model and memory: issue happens with/without GPU

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
The dataset is not correctly put in cache after the first call to predict as it should.
So the 2nd call to predict returns different predictions than the 1st call despite we have used .cache() on the given dataset.
Describe the expected behavior
The 2 calls to predict in the code below should return the same predictions and thus the assert should pass.
Standalone code to reproduce the issue
import tensorflow as tf

input_data = tf.keras.layers.Input(name='input_data', shape=(1,), dtype='float32')
dummy_model = tf.keras.models.Model(inputs=input_data, outputs=input_data*2)
ds = tf.data.Dataset.range(10).shuffle(10).batch(1).cache()
#len(list(ds))  # next assert passes if we uncomment this line because it forces the caching of the dataset
assert (dummy_model.predict(ds) == dummy_model.predict(ds)).all()
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='ismael-elatifi' date='2020-03-06T09:00:08Z'>
		Issue is replicating on colab with Tf 2.0 and tf-nightly.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/eabd1801363a1f8eb64950264d046da1/untitled423.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='ismael-elatifi' date='2020-03-06T22:11:48Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 you can you reproduce the issue with TF 2.1?
		</comment>
		<comment id='3' author='ismael-elatifi' date='2020-03-09T06:22:15Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
, Issue is not replicating with Tf 2.1. Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/40c8a38201342c07c15f4f05d453a6e7/untitled429.ipynb?authuser=2&gt;here&lt;/denchmark-link&gt;
. Thanks
		</comment>
		<comment id='4' author='ismael-elatifi' date='2020-03-09T16:21:48Z'>
		And it is replicating with tf-nightly?
		</comment>
		<comment id='5' author='ismael-elatifi' date='2020-03-11T05:46:15Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
,
Was able to replicate the issue with Tf-nightly.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/3498ef44d88ff2cc5fd6640e58753489/untitled434.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='6' author='ismael-elatifi' date='2020-03-11T16:03:52Z'>
		&lt;denchmark-link:https://github.com/rachellim&gt;@rachellim&lt;/denchmark-link&gt;
 could you please take a look? thank you
		</comment>
		<comment id='7' author='ismael-elatifi' date='2020-04-02T19:40:22Z'>
		This is fixed with tf-nightly version '2.2.0-dev20200402'. Thanks!
		</comment>
		<comment id='8' author='ismael-elatifi' date='2020-04-24T03:56:32Z'>
		&lt;denchmark-link:https://github.com/ismael-elatifi&gt;@ismael-elatifi&lt;/denchmark-link&gt;
  Closing this issue as it  is resolved. Please feel free to reopen the issue if you still have a concern. Thanks!
		</comment>
		<comment id='9' author='ismael-elatifi' date='2020-04-24T03:56:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37266&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37266&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>