<bug id='21796' author='Q82822' open_date='2018-08-22T09:44:07Z' closed_time='2018-09-24T18:13:47Z'>
	<summary>int() argument must be a string, a bytes-like object or a number at InceptionResNetV2</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): window10 and jupyter
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: iPhone X
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.9
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 9.1 / 7.1
GPU model and memory:
Exact command to reproduce:

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

i used tensorflow1.9 function  and follow the tensorflow document from &lt;denchmark-link:https://tensorflow.google.cn/versions/r1.9/api_docs/python/tf/keras/applications/InceptionResNetV2?authuser=2&amp;hl=vi&gt;here&lt;/denchmark-link&gt;
 ,but can't used on the tensorflow  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/generative_examples/image_captioning_with_attention.ipynb&gt;example code,&lt;/denchmark-link&gt;

it will be print errorbut others Library (vgg16,19 &amp; inception_v3..and so on) can work!
&lt;denchmark-h:h3&gt;Source code /&lt;/denchmark-h&gt;

input  image-----
def load_image(image_path):
img = tf.read_file(image_path)
 img = tf.image.decode_jpeg(img, channels=3)
 img = tf.image.resize_images(img, (299, 299))
img = tf.keras.applications.inception_resnet_v2.preprocess_input(img)
 return img, image_path
create mode -----
image_model =tf.keras.applications.inception_resnet_v2.InceptionResNetV2(include_top=False,  weights='imagenet')
the error -------
`TypeError                                 Traceback (most recent call last)
 in ()
1 startTime=time.time()
----&gt; 2 image_model =tf.keras.applications.inception_resnet_v2.InceptionResNetV2(include_top=False, weights='imagenet')
3
4 #image_model = inception_v4.create_model(weights='imagenet', include_top=True)
5 new_input = image_model.input
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\applications\inception_resnet_v2.py in InceptionResNetV2(include_top, weights, input_tensor, input_shape, pooling, classes)
304   for block_idx in range(1, 11):
305     x = inception_resnet_block(
--&gt; 306         x, scale=0.17, block_type='block35', block_idx=block_idx)
307
308   # Mixed 6a (Reduction-A block): 17 x 17 x 1088
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\applications\inception_resnet_v2.py in inception_resnet_block(x, scale, block_type, block_idx, activation)
187       output_shape=K.int_shape(x)[1:],
188       arguments={'scale': scale},
--&gt; 189       name=block_name)([x, up])
190   if activation is not None:
191     x = Activation(activation, name=block_name + '_ac')(x)
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\engine\base_layer.py in call(self, inputs, *args, **kwargs)
712           input_shapes = nest.map_structure(lambda x: x.get_shape(), inputs)
713
--&gt; 714         output_shapes = self.compute_output_shape(input_shapes)
715         output_shapes = nest.flatten(output_shapes)
716         outputs = [
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\layers\core.py in compute_output_shape(self, input_shape)
675
676   def compute_output_shape(self, input_shape):
--&gt; 677     input_shape = tuple(tensor_shape.TensorShape(input_shape).as_list())
678
679     if self._output_shape is None:
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in init(self, dims)
539       else:
540         # Got a list of dimensions
--&gt; 541         self._dims = [as_dimension(d) for d in dims_iter]
542     self._ndims = None
543
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in (.0)
539       else:
540         # Got a list of dimensions
--&gt; 541         self._dims = [as_dimension(d) for d in dims_iter]
542     self._ndims = None
543
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in as_dimension(value)
480     return value
481   else:
--&gt; 482     return Dimension(value)
483
484
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in init(self, value)
35       raise TypeError("Cannot convert %s to Dimension" % value)
36     else:
---&gt; 37       self._value = int(value)
38       if (not isinstance(value, compat.bytes_or_text_types) and
39           self._value != value):
TypeError: int() argument must be a string, a bytes-like object or a number, not 'TensorShape'`
	</description>
	<comments>
		<comment id='1' author='Q82822' date='2018-08-22T21:31:33Z'>
		How is the image connected to the code? What's the stack trace?
		</comment>
		<comment id='2' author='Q82822' date='2018-08-24T01:46:23Z'>
		the error -------
`TypeError                                 Traceback (most recent call last)
 in ()
1 startTime=time.time()
----&gt; 2 image_model =tf.keras.applications.inception_resnet_v2.InceptionResNetV2(include_top=False, weights='imagenet')
3
4 #image_model = inception_v4.create_model(weights='imagenet', include_top=True)
5 new_input = image_model.input
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\applications\inception_resnet_v2.py in InceptionResNetV2(include_top, weights, input_tensor, input_shape, pooling, classes)
304   for block_idx in range(1, 11):
305     x = inception_resnet_block(
--&gt; 306         x, scale=0.17, block_type='block35', block_idx=block_idx)
307
308   # Mixed 6a (Reduction-A block): 17 x 17 x 1088
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\applications\inception_resnet_v2.py in inception_resnet_block(x, scale, block_type, block_idx, activation)
187       output_shape=K.int_shape(x)[1:],
188       arguments={'scale': scale},
--&gt; 189       name=block_name)([x, up])
190   if activation is not None:
191     x = Activation(activation, name=block_name + '_ac')(x)
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\engine\base_layer.py in call(self, inputs, *args, **kwargs)
712           input_shapes = nest.map_structure(lambda x: x.get_shape(), inputs)
713
--&gt; 714         output_shapes = self.compute_output_shape(input_shapes)
715         output_shapes = nest.flatten(output_shapes)
716         outputs = [
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\keras\layers\core.py in compute_output_shape(self, input_shape)
675
676   def compute_output_shape(self, input_shape):
--&gt; 677     input_shape = tuple(tensor_shape.TensorShape(input_shape).as_list())
678
679     if self._output_shape is None:
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in init(self, dims)
539       else:
540         # Got a list of dimensions
--&gt; 541         self._dims = [as_dimension(d) for d in dims_iter]
542     self._ndims = None
543
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in (.0)
539       else:
540         # Got a list of dimensions
--&gt; 541         self._dims = [as_dimension(d) for d in dims_iter]
542     self._ndims = None
543
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in as_dimension(value)
480     return value
481   else:
--&gt; 482     return Dimension(value)
483
484
D:\anaconda\envs\tensorflow\lib\site-packages\tensorflow\python\framework\tensor_shape.py in init(self, value)
35       raise TypeError("Cannot convert %s to Dimension" % value)
36     else:
---&gt; 37       self._value = int(value)
38       if (not isinstance(value, compat.bytes_or_text_types) and
39           self._value != value):
TypeError: int() argument must be a string, a bytes-like object or a number, not 'TensorShape'`
		</comment>
		<comment id='3' author='Q82822' date='2018-09-08T18:47:15Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='4' author='Q82822' date='2018-09-19T22:24:34Z'>
		Did you follow the documentation exactly?
		</comment>
		<comment id='5' author='Q82822' date='2018-09-20T05:38:20Z'>
		yes, I follow the document. and only inception_resnet_v2 will fail.
the other model (ex vgg16 ,inceptionV3) can work at same documentation
		</comment>
		<comment id='6' author='Q82822' date='2018-09-20T17:35:51Z'>
		OK, then it looks like it might be a documentation issue.
		</comment>
		<comment id='7' author='Q82822' date='2018-09-22T13:50:34Z'>
		&lt;denchmark-link:https://github.com/Q82822&gt;@Q82822&lt;/denchmark-link&gt;
 I tried with 1.10.1 and the code works fine. Could you retry with 1.10.1 and see if the issue still exists?
		</comment>
		<comment id='8' author='Q82822' date='2018-09-24T08:22:50Z'>
		yes. it still has.  can you share your code?
my error still is   int() argument must be a string, a bytes-like object or a number, not 'TensorShape'
		</comment>
		<comment id='9' author='Q82822' date='2018-09-24T15:26:38Z'>
		I am using 1.10.1:
&lt;denchmark-code&gt;# python
Python 2.7.12 (default, Dec  4 2017, 14:50:18) 
[GCC 5.4.0 20160609] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import tensorflow as tf
&gt;&gt;&gt; image_model =tf.keras.applications.inception_resnet_v2.InceptionResNetV2(include_top=False, weights='imagenet')
2018-09-24 15:25:05.103588: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
&gt;&gt;&gt; tf.VERSION
'1.10.1'
&gt;&gt;&gt; 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='Q82822' date='2018-09-24T18:13:47Z'>
		It looks to me like InceptionResNetV2 was broken in 1.9 and 1.10.
It appears to be fixed in 1.11.
1.11rc1 is currently the default in colab, try it and reopen this if it doesn't work.
		</comment>
		<comment id='11' author='Q82822' date='2018-10-01T14:49:49Z'>
		it is fix my problem
thanks!!
		</comment>
	</comments>
</bug>