<bug id='37885' author='nitbix' open_date='2020-03-25T02:35:12Z' closed_time='2020-04-03T04:44:15Z'>
	<summary>Error when deserialising BatchNormalization layers from yaml</summary>
	<description>
System information


Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): Yes (see example below)


OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Windows 10, Anaconda3


TensorFlow installed from: binary (pip)


TensorFlow version (use command below): tensorflow-gpu 2.1.0 (from pip)


Python version: 3.7.7


CUDA/cuDNN version: 10.2


GPU model and memory: GTX 1080


Describe the current behavior
When deserialising from yaml a model that contains a BatchNormalization layer, I get the exception yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object/apply:tensorflow.python.training.tracking.data_structures.ListWrapper'. Indeed, inspecting the yaml shows that this tag is in the BN layer, as follows:
&lt;denchmark-code&gt;[... other yaml]
  - class_name: BatchNormalization
    config:
      axis: !!python/object/apply:tensorflow.python.training.tracking.data_structures.ListWrapper
      - - 3
[... other yaml]
&lt;/denchmark-code&gt;

I have included a script below that seems able to reproduce this. Oddly, I then tried the same script on a Ubuntu system with tensorflow==2.1.0 and that appeared ok, so this might only apply to tensorflow-gpu.
Describe the expected behavior
The script below serialises and deserialises to/from yaml without errors.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

input_layer = tf.keras.layers.Input(shape=(32,32,3))
output = tf.keras.layers.BatchNormalization()(input_layer)
model = tf.keras.Model(inputs=input_layer, outputs=output)

yaml_out = model.to_yaml()
model2 = tf.keras.models.model_from_yaml(yaml_out)
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Full traceback:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File ".\bin\reproduce-bug.py", line 13, in &lt;module&gt;
    model2 = tf.keras.models.model_from_yaml(yaml_out)
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\tensorflow_core\python\keras\saving\model_config.py", line 76, in model_from_yaml
    config = yaml.load(yaml_string)
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\__init__.py", line 114, in load
    return loader.get_single_data()
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\constructor.py", line 51, in get_single_data
    return self.construct_document(node)
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\constructor.py", line 60, in construct_document
    for dummy in generator:
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\constructor.py", line 413, in construct_yaml_map
    value = self.construct_mapping(node)
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\constructor.py", line 218, in construct_mapping
    return super().construct_mapping(node, deep=deep)
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\constructor.py", line 143, in construct_mapping
    value = self.construct_object(value_node, deep=deep)
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\constructor.py", line 100, in construct_object
    data = constructor(self, node)
  File "C:\Users\nitbi_000\anaconda3\envs\tf2-gpu\lib\site-packages\yaml\constructor.py", line 429, in construct_undefined
    node.start_mark)
yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object/apply:tensorflow.python.training.tracking.data_structures.ListWrapper'
  in "&lt;unicode string&gt;", line 24, column 13:
          axis: !!python/object/apply:tensorflow ...
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nitbix' date='2020-03-26T09:03:13Z'>
		&lt;denchmark-link:https://github.com/nitbix&gt;@nitbix&lt;/denchmark-link&gt;

i ran the code shared by you and do not face any error, please find &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/17744bd21409ca2f71ee262f36cb5a6b/37885.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='nitbix' date='2020-03-27T04:09:01Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 thanks for checking. I tried tensorflow-gpu in colab and that seems to work as well.
I dug a bit more and narrowed it down a bit. This only happens with later versions of pyyaml - with 5.3.1 it fails on all environments I tested, with both tensorflow and tensorflow-gpu. Seems to be a change from 5.1 (ok) to 5.2 (not ok).
At this point I don't know if it's a bug in pyyaml or its behaviour has changed by design and something needs to be changed in tensorflow, that's where my knowledge of pyyaml stops.
I've managed to reproduce it in colab as well simply by changing the pyyaml version.
		</comment>
		<comment id='3' author='nitbix' date='2020-03-27T07:08:09Z'>
		&lt;denchmark-link:https://github.com/nitbix&gt;@nitbix&lt;/denchmark-link&gt;

Can you please share the gist of google colab you have reproduced the error.
		</comment>
		<comment id='4' author='nitbix' date='2020-03-27T13:57:54Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://colab.research.google.com/gist/nitbix/b9db4179a0d72b1797f83909c89e69ae/37885.ipynb&gt;https://colab.research.google.com/gist/nitbix/b9db4179a0d72b1797f83909c89e69ae/37885.ipynb&lt;/denchmark-link&gt;

the only difference from yours is the pyyaml version
		</comment>
		<comment id='5' author='nitbix' date='2020-04-02T14:11:50Z'>
		&lt;denchmark-link:https://github.com/nitbix&gt;@nitbix&lt;/denchmark-link&gt;

i ran the same gist on the latest version of tensorflow and the error does not exist on the latest version of tensorflow, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/722179fab93a1892082c8b743f9f42aa/37885.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='nitbix' date='2020-04-02T16:00:57Z'>
		üëç I guess someone must have already fixed this then. I'll keep an eye out for 2.2.0. In the meanwhile, for posterity, a temporary workaround for 2.1.0 is to downgrade pyyaml to &lt;5.1.
		</comment>
		<comment id='7' author='nitbix' date='2020-04-02T17:58:22Z'>
		&lt;denchmark-link:https://github.com/nitbix&gt;@nitbix&lt;/denchmark-link&gt;

please confirm if we may move this issue to closed status
		</comment>
		<comment id='8' author='nitbix' date='2020-04-02T20:22:09Z'>
		Yup, I'll reopen it if it recurs in the future. Thanks.
&lt;denchmark-link:#&gt;‚Ä¶&lt;/denchmark-link&gt;


On Thu, 2 Apr 2020 at 18:58, Saduf2019 ***@***.***&gt; wrote:
 @nitbix &lt;https://github.com/nitbix&gt;
 please confirm if we may move this issue to closed status

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#37885 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AATCVCG6TVNMHKCZU6Q6VZDRKTG5NANCNFSM4LTEHILA&gt;
 .


-- 
  Alan

		</comment>
		<comment id='9' author='nitbix' date='2020-04-03T04:43:34Z'>
		Moving this to closed status with user confirmation
		</comment>
		<comment id='10' author='nitbix' date='2020-04-03T04:44:16Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37885&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37885&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='nitbix' date='2020-05-05T13:13:22Z'>
		version:2.2.0rc4 still has this problem.
&lt;denchmark-code&gt;ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object/apply:tensorflow.python.framework.tensor_shape.TensorShape'
  in "&lt;unicode string&gt;", line 4, column 22:
      build_input_shape: !!python/object/apply:tensorflow ... 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='nitbix' date='2020-06-17T04:12:51Z'>
		&lt;denchmark-link:https://github.com/lengthmin&gt;@lengthmin&lt;/denchmark-link&gt;

I ran the code on tf nightly and 2.2 and did not face any issues, please find the gist here for &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/4e5901e610a4afea0012f9aab41dcf07/untitled233.ipynb&gt;nightly&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/376b2908838a0188d60d63582635ab70/untitled231.ipynb&gt;2.2&lt;/denchmark-link&gt;
.
Please share a colab gist in case you face any issues.
		</comment>
	</comments>
</bug>