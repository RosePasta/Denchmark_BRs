<bug id='12824' author='jamiebaggott' open_date='2017-09-05T16:25:36Z' closed_time='2018-03-20T18:47:48Z'>
	<summary>Apparent Segmentation Violation with Go API</summary>
	<description>
Hi, I am trying to build a project that will take multiple URLs, download their images, and then use TensorFlow and the InceptionV3 pre-trained model to perform image recognition. For this, I am using the Go API. Most of the time, this process occurs without an issue, but every now and again an error occurs. I think this may be caused by a bug in TensorFlow as it appears to being thrown from the c code.
A sample of the code that I am using is below. In case it is relevant, I run ProcessImage from different workers concurrently. This obviously means that the tfSession variable is shared between different threads. However, I don't think this is the problem as I have tried having each worker create and use its own session, and the error still occurs.
var tfSession *tf.Session
var modelGraph, normaliseGraph *tf.Graph
var normaliseInput, normaliseOutput tf.Output

/*
 * Sets up resources that can be shared by each request.
 */
func init() {
  model, _ := ioutil.ReadFile("inception3/inception_v3_2016_08_28_frozen.pb")
  modelGraph = tf.NewGraph()
  modelGraph.Import(model, "")
  tfSession, _ = tf.NewSession(modelGraph, nil)
  normaliseGraph, normaliseInput, normaliseOutput = ConstructNormaliseGraph()
}

/*
 * Processes the image and returns the probabilities of each label.
 */
func ProcessImage(url string) []float32 {
  tensor, okay := MakeTensorFromImage(url)
  if !okay {
    return nil
  }

  output, err := tfSession.Run(
    map[tf.Output]*tf.Tensor{
      modelGraph.Operation("input").Output(0): tensor,
    },
    []tf.Output{
      modelGraph.Operation("InceptionV3/Predictions/Reshape_1").Output(0),
    },
    nil)
  if err != nil {
    return nil
  }

  return output[0].Value().([][]float32)[0]
}

/*
 * Constructs graph used to normalise image to required dimensions.
 */
func ConstructNormaliseGraph() (graph *tf.Graph, input, output tf.Output) {
  s := op.NewScope()
  input = op.Placeholder(s, tf.String)
  output = op.Div(s,
		op.Sub(s,
			op.ResizeBilinear(s,
				op.ExpandDims(s,
					op.Cast(s,
						op.DecodeJpeg(s, input, op.DecodeJpegChannels(3)), tf.Float),
					op.Const(s.SubScope("make_batch"), int32(0))),
				op.Const(s.SubScope("size"), []int32{299, 299})),
			op.Const(s.SubScope("mean"), float32(0))),
		op.Const(s.SubScope("scale"), float32(255)))
	graph, _ = s.Finalize()
  return
}

/*
 * Creates a Tensor from the given image url.
 */
func MakeTensorFromImage(url string) (*tf.Tensor, bool) {
  r, err := client.Get(url)
  if err != nil {
    return nil, false
  }
  bytes, _ := ioutil.ReadAll(r.Body)
  r.Body.Close()

  stringBytes := string(bytes)
  if stringBytes == "Content not found" {
    return nil, false
  }
  tensor, _ := tf.NewTensor(stringBytes)

  session, _ := tf.NewSession(normaliseGraph, nil)
  defer session.Close()

  normalized, err := session.Run(
    map[tf.Output]*tf.Tensor{normaliseInput: tensor},
    []tf.Output{normaliseOutput},
    nil)
  if err != nil {
    return nil, false
  }
  return normalized[0], true
}
I'm using macOS Sierra, but this error also exists when I compile the project for Linux. I have included both of these Go environments below. On Sierra, I installed TensorFlow using Homebrew, and on Linux, I installed it using the instructions &lt;denchmark-link:https://www.tensorflow.org/install/install_go&gt;here&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;GOARCH="amd64"
GOBIN=""
GOEXE=""
GOHOSTARCH="amd64"
GOHOSTOS="darwin"
GOOS="darwin"
GOPATH="/Users/Jamie/Documents/Go"
GORACE=""
GOROOT="/usr/local/Cellar/go/1.9/libexec"
GOTOOLDIR="/usr/local/Cellar/go/1.9/libexec/pkg/tool/darwin_amd64"
GCCGO="gccgo"
CC="clang"
GOGCCFLAGS="-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/qq/c31qf27j2mng1xxhvk0b6b6c0000gn/T/go-build437606594=/tmp/go-build -gno-record-gcc-switches -fno-common"
CXX="clang++"
CGO_ENABLED="1"
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;GOARCH="amd64"
GOBIN=""
GOEXE=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOOS="linux"
GOPATH="/home/ec2-user/go"
GORACE=""
GOROOT="/usr/local/go"
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GCCGO="gccgo"
CC="gcc"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build126220137=/tmp/go-build -gno-record-gcc-switches"
CXX="g++"
CGO_ENABLED="1"
PKG_CONFIG="pkg-config"
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
&lt;/denchmark-code&gt;

The error I am getting is below. For your information, image.go line 99 is the line that contains output, err := tfSession.Run( in the ProcessImage function above.
&lt;denchmark-code&gt;fatal error: unexpected signal during runtime execution
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x0]

runtime stack:
runtime.throw(0x436cbee, 0x2a)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/panic.go:605 +0x95
runtime.sigpanic()
	/usr/local/Cellar/go/1.9/libexec/src/runtime/signal_unix.go:351 +0x2b8

goroutine 12 [syscall, locked to thread]:
runtime.cgocall(0x42aedc0, 0xc425d31cd8, 0x4310100)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/cgocall.go:132 +0xe4 fp=0xc425d31c90 sp=0xc425d31c50 pc=0x40044d4
github.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SessionRun(0xb250860, 0x0, 0xc425d69550, 0xc4200fe0e0, 0x1, 0xc425d69540, 0xc4200fe0d8, 0xc400000001, 0x0, 0x0, ...)
	github.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:705 +0x45 fp=0xc425d31cd8 sp=0xc425d31c90 pc=0x419af45
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run.func1(0xb250860, 0x0, 0xc425d69550, 0xc4200fe0e0, 0x1, 0xc425d69540, 0xc4200fe0d8, 0xc400000001, 0x0, 0xc400000000, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23a fp=0xc425d31d48 sp=0xc425d31cd8 pc=0x41a56ca
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run(0xc42000c0a0, 0xc4200fd770, 0xc425d31e78, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23f fp=0xc425d31de0 sp=0xc425d31d48 pc=0x419efff
github.com/jamiebaggott/vision.ProcessImage(0xc4202f2b60, 0x6d, 0xc420080301, 0x0, 0x0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:99 +0x214 fp=0xc425d31ea8 sp=0xc425d31de0 pc=0x42a8f94
github.com/jamiebaggott/vision.ImageWorker()
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:174 +0x10c fp=0xc425d31fe0 sp=0xc425d31ea8 pc=0x42a9a3c
runtime.goexit()
	/usr/local/Cellar/go/1.9/libexec/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc425d31fe8 sp=0xc425d31fe0 pc=0x4059781
created by github.com/jamiebaggott/vision.init.1
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:38 +0x37c

goroutine 1 [IO wait, 2 minutes]:
internal/poll.runtime_pollWait(0x46adeb0, 0x72, 0xffffffffffffffff)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc420108118, 0x72, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc420108118, 0xffffffffffffff00, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Accept(0xc420108100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:334 +0x1e2
net.(*netFD).accept(0xc420108100, 0x4376820, 0xc425ce1d98, 0x400439b)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:238 +0x42
net.(*TCPListener).accept(0xc4201440b0, 0x42f7d80, 0xc425ce1dc8, 0x4003137)
	/usr/local/Cellar/go/1.9/libexec/src/net/tcpsock_posix.go:136 +0x2e
net.(*TCPListener).AcceptTCP(0xc4201440b0, 0xc425ce1e10, 0xc425ce1e18, 0xc425ce1e08)
	/usr/local/Cellar/go/1.9/libexec/src/net/tcpsock.go:234 +0x49
net/http.tcpKeepAliveListener.Accept(0xc4201440b0, 0x43761e8, 0xc42019c000, 0x44dfda0, 0xc4201365d0)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/server.go:3120 +0x2f
net/http.(*Server).Serve(0xc420160270, 0x44df960, 0xc4201440b0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/server.go:2695 +0x1b2
net/http.(*Server).ListenAndServe(0xc420160270, 0xc420160270, 0x7)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/server.go:2636 +0xa9
net/http.ListenAndServe(0x43608c9, 0x5, 0x0, 0x0, 0xc42004df70, 0x42ae572)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/server.go:2882 +0x7f
main.main()
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/main/hashtag.go:18 +0x96

goroutine 5 [sleep]:
time.Sleep(0x1dcd6500)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/time.go:65 +0x130
gopkg.in/mgo%2ev2.(*mongoCluster).syncServersLoop(0xc4200f6000)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/cluster.go:368 +0x424
created by gopkg.in/mgo%2ev2.newCluster
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/cluster.go:78 +0x181

goroutine 24 [sleep, 1 minutes]:
time.Sleep(0x37e11d600)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/time.go:65 +0x130
gopkg.in/mgo%2ev2.(*mongoServer).pinger(0xc420146000, 0xc420039e01)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/server.go:301 +0x4fd
created by gopkg.in/mgo%2ev2.newServer
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/server.go:89 +0x13c

goroutine 6 [IO wait]:
internal/poll.runtime_pollWait(0x46adf70, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc420108218, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc420108218, 0xc420154000, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc420108200, 0xc420154000, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc420108200, 0xc420154000, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc42000e038, 0xc420154000, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc42000e038, 0xc420154000, 0x24, 0x24, 0x0, 0x18)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc4200f80e0)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 10 [syscall, locked to thread]:
github.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SessionRun(0xb250860, 0x0, 0xc420188120, 0xc4200fe058, 0x1, 0xc420188110, 0xc4200fe050, 0xc400000001, 0x0, 0x0, ...)
	github.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:705 +0x45
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run.func1(0xb250860, 0x0, 0xc420188120, 0xc4200fe058, 0x1, 0xc420188110, 0xc4200fe050, 0xc400000001, 0x0, 0xc400000000, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23a
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run(0xc42000c0a0, 0xc42038a0f0, 0xc420385e78, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23f
github.com/jamiebaggott/vision.ProcessImage(0xc4202f2770, 0x6d, 0xc420080101, 0x0, 0x0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:99 +0x214
github.com/jamiebaggott/vision.ImageWorker()
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:174 +0x10c
created by github.com/jamiebaggott/vision.init.1
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:38 +0x37c

goroutine 11 [syscall, locked to thread]:
github.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SessionRun(0xb250860, 0x0, 0xc420188260, 0xc4200fe0b8, 0x1, 0xc420188240, 0xc4200fe0b0, 0xc400000001, 0x0, 0x0, ...)
	github.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:705 +0x45
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run.func1(0xb250860, 0x0, 0xc420188260, 0xc4200fe0b8, 0x1, 0xc420188240, 0xc4200fe0b0, 0xc400000001, 0x0, 0xc400000000, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23a
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run(0xc42000c0a0, 0xc42038a270, 0xc420389e78, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23f
github.com/jamiebaggott/vision.ProcessImage(0xc4202f25b0, 0x6d, 0xc42016e101, 0x417abd5, 0xc4200f6000)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:99 +0x214
github.com/jamiebaggott/vision.ImageWorker()
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:174 +0x10c
created by github.com/jamiebaggott/vision.init.1
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:38 +0x37c

goroutine 13 [syscall, locked to thread]:
github.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SessionRun(0xb250860, 0x0, 0xc425d69680, 0xc4200fe130, 0x1, 0xc425d69670, 0xc4200fe128, 0xc400000001, 0x0, 0x0, ...)
	github.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:705 +0x45
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run.func1(0xb250860, 0x0, 0xc425d69680, 0xc4200fe130, 0x1, 0xc425d69670, 0xc4200fe128, 0xc400000001, 0x0, 0xc400000000, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23a
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run(0xc42000c0a0, 0xc4200fd950, 0xc425cdfe78, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23f
github.com/jamiebaggott/vision.ProcessImage(0xc4202f2d20, 0x6e, 0xc420080601, 0x0, 0x0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:99 +0x214
github.com/jamiebaggott/vision.ImageWorker()
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:174 +0x10c
created by github.com/jamiebaggott/vision.init.1
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:38 +0x37c

goroutine 14 [syscall, locked to thread]:
github.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SessionRun(0xb250860, 0x0, 0xc425d69700, 0xc4200fe180, 0x1, 0xc425d696f0, 0xc4200fe178, 0xc400000001, 0x0, 0x0, ...)
	github.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:705 +0x45
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run.func1(0xb250860, 0x0, 0xc425d69700, 0xc4200fe180, 0x1, 0xc425d696f0, 0xc4200fe178, 0xc400000001, 0x0, 0xc400000000, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23a
github.com/tensorflow/tensorflow/tensorflow/go.(*Session).Run(0xc42000c0a0, 0xc4200fd9e0, 0xc425d35e78, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/Jamie/Documents/Go/src/github.com/tensorflow/tensorflow/tensorflow/go/session.go:87 +0x23f
github.com/jamiebaggott/vision.ProcessImage(0xc4202f2930, 0x6c, 0xc42016e301, 0x0, 0x0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:99 +0x214
github.com/jamiebaggott/vision.ImageWorker()
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:174 +0x10c
created by github.com/jamiebaggott/vision.init.1
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:38 +0x37c

goroutine 43 [IO wait]:
internal/poll.runtime_pollWait(0x46addf0, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc425cfc218, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc425cfc218, 0xc420154000, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc425cfc200, 0xc420154090, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc425cfc200, 0xc420154090, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc4200fe010, 0xc420154090, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc4200fe010, 0xc420154090, 0x24, 0x24, 0x0, 0x18)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc4200f8ee0)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 66 [sleep]:
time.Sleep(0x2aea5400)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/time.go:65 +0x130
github.com/jamiebaggott/vision.GetRequest(0xc42005a000, 0x6b, 0x1, 0x2, 0x42d6a20, 0xc425ceebe0, 0xe, 0xc420154e40)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:23 +0x53e
github.com/jamiebaggott/vision.GetUsers(0xc420154e40, 0x30, 0xc42013c720, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:151 +0x4ce
github.com/jamiebaggott/vision.Run(0xc42013c720, 0x1b, 0xc420084aa0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:119 +0x10b
created by main.handler
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/main/hashtag.go:66 +0x4e1

goroutine 405 [chan receive, 1 minutes]:
github.com/jamiebaggott/vision.ProcessImages(0xc42013c720, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:81 +0x35b
created by github.com/jamiebaggott/vision.Run
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:118 +0xdc

goroutine 29 [sleep]:
time.Sleep(0x2aea5400)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/time.go:65 +0x130
github.com/jamiebaggott/vision.GetRequest(0xc42005bd50, 0x6c, 0x1, 0x2, 0x42d6a20, 0xc425d9aa20, 0xe, 0xc4200181c0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:23 +0x53e
github.com/jamiebaggott/vision.GetUsers(0xc4200181c0, 0x32, 0xc420158860, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:151 +0x4ce
github.com/jamiebaggott/vision.Run(0xc420158860, 0x1b, 0xc4200846e0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:119 +0x10b
created by main.handler
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/main/hashtag.go:66 +0x4e1

goroutine 69 [IO wait]:
internal/poll.runtime_pollWait(0x46ada30, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc42025a118, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc42025a118, 0xc420244b00, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc42025a100, 0xc420244ba0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc42025a100, 0xc420244ba0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420286018, 0xc420244ba0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc420286018, 0xc420244ba0, 0x24, 0x24, 0x0, 0x18)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc425e4b420)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 33 [IO wait]:
internal/poll.runtime_pollWait(0x46adbb0, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc425e1c218, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc425e1c218, 0xc420244a00, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc425e1c200, 0xc420244ae0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc425e1c200, 0xc420244ae0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420144078, 0xc420244ae0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc420144078, 0xc420244ae0, 0x24, 0x24, 0x0, 0x339cc)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc420146620)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 439 [IO wait]:
internal/poll.runtime_pollWait(0x46ad670, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc42025a298, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc42025a298, 0xc42008b000, 0x1000, 0x1000)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc42025a280, 0xc42008b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc42025a280, 0xc42008b000, 0x1000, 0x1000, 0x0, 0x8, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420286078, 0xc42008b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
crypto/tls.(*block).readFromUntil(0xc42038b710, 0xb4640e8, 0xc420286078, 0x5, 0xc420286078, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/crypto/tls/conn.go:488 +0x95
crypto/tls.(*Conn).readRecord(0xc420120380, 0x4376817, 0xc4201204a0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/crypto/tls/conn.go:590 +0xe0
crypto/tls.(*Conn).Read(0xc420120380, 0xc420342000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/crypto/tls/conn.go:1134 +0x110
bufio.(*Reader).Read(0xc420328b40, 0xc4201e8e38, 0x9, 0x9, 0xc425d2bc70, 0x402b956, 0x4376820)
	/usr/local/Cellar/go/1.9/libexec/src/bufio/bufio.go:213 +0x30b
io.ReadAtLeast(0x44daa60, 0xc420328b40, 0xc4201e8e38, 0x9, 0x9, 0x9, 0xc425d2bcd0, 0xc425d2bcd0, 0x4007d52)
	/usr/local/Cellar/go/1.9/libexec/src/io/io.go:309 +0x86
io.ReadFull(0x44daa60, 0xc420328b40, 0xc4201e8e38, 0x9, 0x9, 0xc420113b00, 0xc425d2bd08, 0xc400000001)
	/usr/local/Cellar/go/1.9/libexec/src/io/io.go:327 +0x58
net/http.http2readFrameHeader(0xc4201e8e38, 0x9, 0x9, 0x44daa60, 0xc420328b40, 0x0, 0xc400000000, 0xc425d2bdf0, 0x4266459)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:1516 +0x7b
net/http.(*http2Framer).ReadFrame(0xc4201e8e00, 0xc4200fc180, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:1774 +0xa4
net/http.(*http2clientConnReadLoop).run(0xc425d2bfb0, 0x4376220, 0xc42033cfb0)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:7862 +0x92
net/http.(*http2ClientConn).readLoop(0xc42016eb60)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:7788 +0x9d
created by net/http.(*http2Transport).newClientConn
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:7053 +0x6b9

goroutine 67 [IO wait]:
internal/poll.runtime_pollWait(0x46adaf0, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc420108798, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc420108798, 0xc420155200, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc420108780, 0xc420155200, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc420108780, 0xc420155200, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420286008, 0xc420155200, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc420286008, 0xc420155200, 0x24, 0x24, 0x0, 0x18)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc425e4a1c0)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 56 [sleep]:
time.Sleep(0x2aea5400)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/time.go:65 +0x130
github.com/jamiebaggott/vision.GetRequest(0xc420345ab0, 0x6c, 0x1, 0x2, 0x42d6a20, 0xc4200e1ae0, 0xe, 0xc425e04200)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:23 +0x53e
github.com/jamiebaggott/vision.GetUsers(0xc425e04200, 0x32, 0xc4201589a0, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:151 +0x4ce
github.com/jamiebaggott/vision.Run(0xc4201589a0, 0x1b, 0xc425dc08c0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:119 +0x10b
created by main.handler
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/main/hashtag.go:66 +0x4e1

goroutine 85 [IO wait]:
internal/poll.runtime_pollWait(0x46ad970, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc42025a598, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc42025a598, 0xc420155500, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc42025a580, 0xc420155530, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc42025a580, 0xc420155530, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420144098, 0xc420155530, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc420144098, 0xc420155530, 0x24, 0x24, 0x0, 0x339cc)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc420147960)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 59 [sleep]:
time.Sleep(0x2aea5400)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/time.go:65 +0x130
github.com/jamiebaggott/vision.GetRequest(0xc425cf4000, 0x6d, 0x1, 0x2, 0x42d6a20, 0xc425d8a800, 0xe, 0xc4200185c0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:23 +0x53e
github.com/jamiebaggott/vision.GetUsers(0xc4200185c0, 0x33, 0xc42013cb40, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/request.go:151 +0x4ce
github.com/jamiebaggott/vision.Run(0xc42013cb40, 0x1b, 0xc425e205a0)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:119 +0x10b
created by main.handler
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/main/hashtag.go:66 +0x4e1

goroutine 446 [IO wait]:
internal/poll.runtime_pollWait(0x46add30, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc425e1c498, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc425e1c498, 0xc4200ae800, 0x400, 0x400)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc425e1c480, 0xc4200ae800, 0x400, 0x400, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc425e1c480, 0xc4200ae800, 0x400, 0x400, 0xc420420a00, 0x158f2dd4a2167001, 0xc42003f870)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc42000e048, 0xc4200ae800, 0x400, 0x400, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
crypto/tls.(*block).readFromUntil(0xc42024a090, 0xb4640e8, 0xc42000e048, 0x5, 0xc42000e048, 0xc42051c2c5)
	/usr/local/Cellar/go/1.9/libexec/src/crypto/tls/conn.go:488 +0x95
crypto/tls.(*Conn).readRecord(0xc420130000, 0x4376817, 0xc420130120, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/crypto/tls/conn.go:590 +0xe0
crypto/tls.(*Conn).Read(0xc420130000, 0xc425d7d000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/crypto/tls/conn.go:1134 +0x110
bufio.(*Reader).Read(0xc420328360, 0xc425decc78, 0x9, 0x9, 0xc42003fc70, 0x402b956, 0x4376820)
	/usr/local/Cellar/go/1.9/libexec/src/bufio/bufio.go:213 +0x30b
io.ReadAtLeast(0x44daa60, 0xc420328360, 0xc425decc78, 0x9, 0x9, 0x9, 0xc42003fcd0, 0xc42003fcd0, 0x4007d52)
	/usr/local/Cellar/go/1.9/libexec/src/io/io.go:309 +0x86
io.ReadFull(0x44daa60, 0xc420328360, 0xc425decc78, 0x9, 0x9, 0xc4203283c0, 0xc42003fd08, 0xc400000001)
	/usr/local/Cellar/go/1.9/libexec/src/io/io.go:327 +0x58
net/http.http2readFrameHeader(0xc425decc78, 0x9, 0x9, 0x44daa60, 0xc420328360, 0x0, 0xc400000000, 0xc42003fdf0, 0x4266459)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:1516 +0x7b
net/http.(*http2Framer).ReadFrame(0xc425decc40, 0xc42024ac00, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:1774 +0xa4
net/http.(*http2clientConnReadLoop).run(0xc42003ffb0, 0x4376220, 0xc4203397b0)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:7862 +0x92
net/http.(*http2ClientConn).readLoop(0xc420080b60)
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:7788 +0x9d
created by net/http.(*http2Transport).newClientConn
	/usr/local/Cellar/go/1.9/libexec/src/net/http/h2_bundle.go:7053 +0x6b9

goroutine 482 [chan receive]:
github.com/jamiebaggott/vision.ProcessImages(0xc42013cb40, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:81 +0x35b
created by github.com/jamiebaggott/vision.Run
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:118 +0xdc

goroutine 449 [chan receive]:
github.com/jamiebaggott/vision.ProcessImages(0xc420158860, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:81 +0x35b
created by github.com/jamiebaggott/vision.Run
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:118 +0xdc

goroutine 392 [IO wait]:
internal/poll.runtime_pollWait(0x46ad8b0, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc42025a198, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc42025a198, 0xc425d8ce00, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc42025a180, 0xc425d8ce70, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc42025a180, 0xc425d8ce70, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420144008, 0xc425d8ce70, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc420144008, 0xc425d8ce70, 0x24, 0x24, 0x0, 0x339cc)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc420246e00)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 462 [chan receive]:
github.com/jamiebaggott/vision.ProcessImages(0xc4201589a0, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:81 +0x35b
created by github.com/jamiebaggott/vision.Run
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/database.go:118 +0xdc

goroutine 364 [IO wait]:
internal/poll.runtime_pollWait(0x46ad7f0, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc425e1c118, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc425e1c118, 0xc42001c700, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc425e1c100, 0xc42001c7b0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc425e1c100, 0xc42001c7b0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420286000, 0xc42001c7b0, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc420286000, 0xc42001c7b0, 0x24, 0x24, 0x0, 0xa9)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc425e4a2a0)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 483 [chan send]:
github.com/jamiebaggott/vision.ProcessImages.func1(0xc425d02960, 0xc4204f20c0, 0xc4200e1ba0, 0xc420345b20, 0xc42013cb40, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:62 +0x1a3
created by github.com/jamiebaggott/vision.ProcessImages
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:57 +0x327

goroutine 394 [IO wait]:
internal/poll.runtime_pollWait(0x46adc70, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc425cfd218, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc425cfd218, 0xc420245800, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc425cfd200, 0xc420245800, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc425cfd200, 0xc420245800, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc4200fe028, 0xc420245800, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc4200fe028, 0xc420245800, 0x24, 0x24, 0x0, 0x339cc)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc425dec000)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 385 [chan send]:
github.com/jamiebaggott/vision.ProcessImages.func1(0xc425d020f0, 0xc420119b00, 0xc425d049c0, 0xc4202f3ea0, 0xc42013c720, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:62 +0x1a3
created by github.com/jamiebaggott/vision.ProcessImages
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:57 +0x327

goroutine 461 [IO wait]:
internal/poll.runtime_pollWait(0x46ad4f0, 0x72, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc420108d98, 0x72, 0xffffffffffffff00, 0x44dd020, 0x44d9690)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc420108d98, 0xc420244e00, 0x24, 0x24)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc420108d80, 0xc420244e70, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc420108d80, 0xc420244e70, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc4200fe1a0, 0xc420244e70, 0x24, 0x24, 0x0, 0x0, 0x0)
	/usr/local/Cellar/go/1.9/libexec/src/net/net.go:176 +0x6d
gopkg.in/mgo%2ev2.fill(0x44e1700, 0xc4200fe1a0, 0xc420244e70, 0x24, 0x24, 0x0, 0x1e7)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc4201e8540)
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:551 +0x658
created by gopkg.in/mgo%2ev2.newSocket
	/Users/Jamie/Documents/Go/src/gopkg.in/mgo.v2/socket.go:194 +0x23f

goroutine 463 [chan send]:
github.com/jamiebaggott/vision.ProcessImages.func1(0xc425d6c2d0, 0xc42038ad80, 0xc425d83820, 0xc42005a150, 0xc4201589a0, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:62 +0x1a3
created by github.com/jamiebaggott/vision.ProcessImages
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:57 +0x327

goroutine 464 [chan send]:
github.com/jamiebaggott/vision.ProcessImages.func1(0xc425d6c3c0, 0xc42038ae40, 0xc425d83960, 0xc42005a1c0, 0xc420158860, 0x1b)
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:62 +0x1a3
created by github.com/jamiebaggott/vision.ProcessImages
	/Users/Jamie/Documents/Go/src/github.com/jamiebaggott/vision/image.go:57 +0x327
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jamiebaggott' date='2017-09-12T00:18:46Z'>
		&lt;denchmark-link:https://github.com/asimshankar&gt;@asimshankar&lt;/denchmark-link&gt;
, do you have any hints to offer about how to figure this out?
		</comment>
		<comment id='2' author='jamiebaggott' date='2017-09-13T04:46:05Z'>
		That is troubling, and from a cursory look at the stacktrace this seems like a NULL pointer dereference somewhere inside the C code, but I can't tell.
Is there any way you can reduce this to a smaller sample of code that reproduces the problem?
		</comment>
		<comment id='3' author='jamiebaggott' date='2017-09-13T16:25:25Z'>
		This may not be a smaller sample of code, but they are individual files that can be run, although you may need to run them a number of times as the errors aren't produced every time.
In the below gist, there is a file named image.go and image2.go; these files are the same apart from the fact that image shares tfSession between 10 workers, whereas image2 creates a new session for each worker. Due to that, the memory used when running image is ~750MB, whereas for image2 it is ~5GB.
To run these files, they need to be in a directory where there is an image named , and where the pre-trained InceptionV3 model is in a directory named . This can be found gzipped here: &lt;denchmark-link:https://storage.googleapis.com/download.tensorflow.org/models/inception_v3_2016_08_28_frozen.pb.tar.gz&gt;https://storage.googleapis.com/download.tensorflow.org/models/inception_v3_2016_08_28_frozen.pb.tar.gz&lt;/denchmark-link&gt;

The log files with 2 in their name correspond to image2, and those that do not correspond to image. tf_error.log and tf_error2.log are errors that are caused by running tfSession in the ImageWorker function, whereas tf_error_alt.log and tf_error2_alt.log are errors that are caused by creating or running the session in the MakeTensorFromImage function.
&lt;denchmark-link:https://gist.github.com/jamiebaggott/f540c2fbeadd89219127a8e0669bd462&gt;https://gist.github.com/jamiebaggott/f540c2fbeadd89219127a8e0669bd462&lt;/denchmark-link&gt;

If you require any more information, please let me know.
		</comment>
		<comment id='4' author='jamiebaggott' date='2017-12-20T01:08:45Z'>
		It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='5' author='jamiebaggott' date='2018-01-03T19:17:20Z'>
		It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='6' author='jamiebaggott' date='2018-01-18T19:19:00Z'>
		Nagging Awaiting TensorFlower: It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='7' author='jamiebaggott' date='2018-01-23T23:20:13Z'>
		A member of the TensorFlow organization has replied after the stat:awaiting tensorflower label was applied.
		</comment>
		<comment id='8' author='jamiebaggott' date='2018-02-02T23:58:55Z'>
		Is that still happening for you? If so, could you build with ASAN to see if you get more information?
		</comment>
		<comment id='9' author='jamiebaggott' date='2018-02-17T13:31:12Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='10' author='jamiebaggott' date='2018-03-04T13:04:31Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='11' author='jamiebaggott' date='2018-03-19T15:13:05Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='12' author='jamiebaggott' date='2018-03-20T18:47:48Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
	</comments>
</bug>