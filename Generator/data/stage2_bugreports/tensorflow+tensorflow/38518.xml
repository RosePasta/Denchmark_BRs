<bug id='38518' author='LoveMIssY' open_date='2020-04-14T03:28:22Z' closed_time='2020-04-21T04:40:44Z'>
	<summary>InvalidArgumentError: assertion failed: [0] [Op:Assert] name: EagerVariableNameReuse</summary>
	<description>
when i use tensorflow2.1 .I trained my model custom,yesterday，the code can run correctly. But torday is error, I debug my code , I found this code is error ,
self.train_accuracy = tf.keras.metrics.CategoricalAccuracy('train_accuracy')
but this code is actually correct,
Now I assert a variable using this in jupyter notebook, it's wrong !
the error is :
&lt;denchmark-code&gt;InvalidArgumentError: assertion failed: [0] [Op:Assert] name: EagerVariableNameReuse
&lt;/denchmark-code&gt;

who can tell me the reason and some solutions,thanks.
the whole code is:
import os
import numpy as np
import cv2
import tensorflow as tf



class ModelTrain():
    def __init__(self):
        self.loss_object = tf.keras.losses.CategoricalCrossentropy()
        self.optimizer = tf.keras.optimizers.Adam(learning_rate=0.001, beta_1=0.9, beta_2=0.999)
        self.train_loss = tf.keras.metrics.CategoricalCrossentropy('train_loss', dtype=tf.float32)
        self.train_accuracy = tf.keras.metrics.CategoricalAccuracy('train_accuracy')
        self.validation_loss = tf.keras.metrics.CategoricalCrossentropy('validation_loss', dtype=tf.float32)
        self.validation_accuracy = tf.keras.metrics.CategoricalAccuracy('validation_accuracy')
        
if __name__ == "__main__":
    model_train = ModelTrain()
the error is :
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/media/huaxin/tcl3/facepro/hand-gesture-recognition/jester-data-preprocessing_v0.2/test.py", line 18, in &lt;module&gt;
    model_train = ModelTrain()
  File "/media/huaxin/tcl3/facepro/hand-gesture-recognition/jester-data-preprocessing_v0.2/test.py", line 12, in __init__
    self.train_loss = tf.keras.metrics.CategoricalCrossentropy('train_loss', dtype=tf.float32)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/keras/metrics.py", line 2818, in __init__
    label_smoothing=label_smoothing)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/keras/metrics.py", line 560, in __init__
    super(MeanMetricWrapper, self).__init__(name=name, dtype=dtype)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/keras/metrics.py", line 460, in __init__
    reduction=metrics_utils.Reduction.WEIGHTED_MEAN, name=name, dtype=dtype)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/keras/metrics.py", line 296, in __init__
    'total', initializer=init_ops.zeros_initializer)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/keras/metrics.py", line 276, in add_weight
    aggregation=aggregation)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 446, in add_weight
    caching_device=caching_device)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/training/tracking/base.py", line 744, in _add_variable_with_custom_getter
    **kwargs_for_getter)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer_utils.py", line 142, in make_variable
    shape=variable_shape if variable_shape else None)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/variables.py", line 258, in __call__
    return cls._variable_v1_call(*args, **kwargs)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/variables.py", line 219, in _variable_v1_call
    shape=shape)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/variables.py", line 197, in &lt;lambda&gt;
    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/variable_scope.py", line 2596, in default_variable_creator
    shape=shape)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/variables.py", line 262, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 1411, in __init__
    distribute_strategy=distribute_strategy)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 1557, in _init_from_args
    graph_mode=self._in_graph_mode)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 232, in eager_safe_variable_handle
    shape, dtype, shared_name, name, graph_mode, initial_value)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 164, in _variable_handle_from_shape_and_dtype
    math_ops.logical_not(exists), [exists], name="EagerVariableNameReuse")
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_logging_ops.py", line 55, in _assert
    _ops.raise_from_not_ok_status(e, name)
  File "/media/huaxin/tcl3/facepro/anaconda3/envs/python3.7.4/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 6606, in raise_from_not_ok_status
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "&lt;string&gt;", line 3, in raise_from
tensorflow.python.framework.errors_impl.InvalidArgumentError: assertion failed: [0] [Op:Assert] name: EagerVariableNameReuse
&lt;/denchmark-code&gt;

the same situation existed yesterday,I uninstall tensorflow2.1 and re-install,the problemis solved,but today same problem exist again,what's the reason, and how can solve this.
	</description>
	<comments>
		<comment id='1' author='LoveMIssY' date='2020-04-14T06:42:00Z'>
		&lt;denchmark-link:https://github.com/LoveMIssY&gt;@LoveMIssY&lt;/denchmark-link&gt;

please share standalone code for us to replicate the issue faced
		</comment>
		<comment id='2' author='LoveMIssY' date='2020-04-16T20:11:44Z'>
		Facing the same issue when trying to define a tf variable.
learning_rate = tf.Variable(initial_value=0.0001, trainable=False, dtype=tf.float32)
		</comment>
		<comment id='3' author='LoveMIssY' date='2020-04-17T04:41:36Z'>
		&lt;denchmark-link:https://github.com/matheushent&gt;@matheushent&lt;/denchmark-link&gt;

please share standalone code for us to replicate the issue faced
		</comment>
		<comment id='4' author='LoveMIssY' date='2020-04-17T19:28:27Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  standalone code available on the &lt;denchmark-link:https://gist.github.com/matheushent/e5ac809c96bb1ab276514e7ed46517bb&gt;gist&lt;/denchmark-link&gt;
.
After instantiating ConvDiscriminator class the same error raises.
		</comment>
		<comment id='5' author='LoveMIssY' date='2020-04-19T17:20:33Z'>
		&lt;denchmark-link:https://github.com/matheushent&gt;@matheushent&lt;/denchmark-link&gt;

i have replicate the code shared, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/785d66091e5768d24307145dffa70245/38518.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='LoveMIssY' date='2020-04-19T18:55:46Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 my bad, sorry. I fixed the error. Here follows the &lt;denchmark-link:https://gist.github.com/matheushent/e5ac809c96bb1ab276514e7ed46517bb&gt;fixed gist&lt;/denchmark-link&gt;
.
But this is a very strange problem since sometimes it happens and sometimes everything goes very well.
Note you need to install tensorflow addons.
		</comment>
		<comment id='7' author='LoveMIssY' date='2020-04-20T06:59:17Z'>
		&lt;denchmark-link:https://github.com/matheushent&gt;@matheushent&lt;/denchmark-link&gt;

please let us know as the error is fixed can we move this to closed status
		</comment>
		<comment id='8' author='LoveMIssY' date='2020-04-20T11:58:50Z'>
		
@matheushent
please let us know as the error is fixed can we move this to closed status

I am not sure the error is fixed. As I said, sometimes it happens and sometimes everything goes very well.
Actually I made a test and I realized that the error just appears for me if I use GPU. When using CPU the error doesn't appear.
My GPU setup is a RTX 2070 8GB GDDR6.
		</comment>
		<comment id='9' author='LoveMIssY' date='2020-04-20T14:09:16Z'>
		&lt;denchmark-link:https://github.com/matheushent&gt;@matheushent&lt;/denchmark-link&gt;

as this is one of a kind and not able to replicate it, can we move this to closed status, in case it appears again please share the error and code for us to replicate the same
		</comment>
		<comment id='10' author='LoveMIssY' date='2020-04-20T16:57:35Z'>
		
@matheushent
as this is one of a kind and not able to replicate it, can we move this to closed status, in case it appears again please share the error and code for us to replicate the same

Right.
		</comment>
		<comment id='11' author='LoveMIssY' date='2020-04-26T12:00:10Z'>
		In case somebody runs into this issue, I had a very similar error and it ended up that I had another background process running that was using Tensorflow (I was running a model serving process while trying to a run a model training process). It looks like trying to run two pythong programs that use TF at the same time triggers this error.
		</comment>
		<comment id='12' author='LoveMIssY' date='2020-04-29T07:42:56Z'>
		i have similar error and fixed it by close other python session using tensorflow. Use 'nvidia-smi' to find running process.
		</comment>
		<comment id='13' author='LoveMIssY' date='2020-05-06T07:10:45Z'>
		same here, another process running in background triggered this error.
		</comment>
		<comment id='14' author='LoveMIssY' date='2020-05-08T04:39:12Z'>
		&lt;denchmark-link:https://github.com/osushkov&gt;@osushkov&lt;/denchmark-link&gt;
 Yes, I got the same error.
In the jupyter lab, I used two notebook.
Finally with closing all notebooks, I solved the issue after open with one notebook.
		</comment>
		<comment id='15' author='LoveMIssY' date='2020-05-08T09:20:46Z'>
		this problem have been solved，this problem happens when there are many GPU in your server，but some GPU have been used by others，so when you create some variables or objects, there is no GPU memory for you,the solution is that you shuold  choose one GPU that have not been used.
		</comment>
		<comment id='16' author='LoveMIssY' date='2020-05-11T16:32:28Z'>
		
this problem have been solved，this problem happens when there are many GPU in your server，but some GPU have been used by others，so when you create some variables or objects, there is no GPU memory for you,the solution is that you shuold choose one GPU that have not been used.

Um, this problem certainly has not been solved. Many of us only have one GPU.
		</comment>
		<comment id='17' author='LoveMIssY' date='2020-05-15T03:13:12Z'>
		Ran into this issue as well. 1 GPU. This problem goes away if I disable GPU.
		</comment>
		<comment id='18' author='LoveMIssY' date='2020-05-24T19:36:30Z'>
		For me, the issue was caused by the Chrome GPU process.  Apparently, something in Chrome is using the name "train_loss".  Once I killed the chrome gpu process, my program started to work.
By encapsulating all tensors into a variable scope (like '__chrome' or something), Chrome would do the ML community a huge favor. I've just filed a bug with Chrome to fix that. &lt;denchmark-link:https://bugs.chromium.org/p/chromium/issues/detail?id=1086032&gt;https://bugs.chromium.org/p/chromium/issues/detail?id=1086032&lt;/denchmark-link&gt;

		</comment>
		<comment id='19' author='LoveMIssY' date='2020-05-26T10:06:31Z'>
		Restarting and clearing the output of jupyter notebook worked for me.
		</comment>
		<comment id='20' author='LoveMIssY' date='2020-06-02T15:10:38Z'>
		Regardless of other underlying circumstances (running on 0/1/many gpus, et.c.) this problem hasn't been solved as long as the error message is totally opaque and unhelpful to anyone not actually developing tensorflow. An addition of 'different gpu processes might be in conflict' would already be a lot better and some more "forensic" information wouldn't come amiss either.
		</comment>
		<comment id='21' author='LoveMIssY' date='2020-06-12T17:36:47Z'>
		Two or more processes running tensorflow (2.2.0), one of them running a code as simple as var = tf.Variable([3, 3]) will trigger this error.
Solution: kill the other processes.
		</comment>
		<comment id='22' author='LoveMIssY' date='2020-06-12T17:39:33Z'>
		Honestly, killing other processes is not a solution it self. In my opinion this issue must be open since the problem isn't solved yet.
		</comment>
		<comment id='23' author='LoveMIssY' date='2020-06-12T18:14:29Z'>
		
Honestly, killing other processes is not a solution it self. In my opinion this issue must be open since the problem isn't solved yet.

Completly agree..  I just wrote "solution" for those googling it..
		</comment>
		<comment id='24' author='LoveMIssY' date='2020-06-15T12:26:37Z'>
		I had the same problem when working with PyCharm. Tensorflow was working with all my python files but I couldn't run any Ipynb files from Pycharm. I always got that error when defining and TF model.
My tensorflow version in the Jupyter notebook was an unstable version, I uninstalled it and reinstalled Tensorflow 2.2.0 and it became normal.
Another factor that might have affected was that initially, the notebook kernel didn't match project interpreter. I had a python3.6 notebook kernel while I used to run all my Tensorflow python codes using python 3.7.7. So I configured the Python 3 kernel to python3.7.7 in jupyter notebook.
		</comment>
		<comment id='25' author='LoveMIssY' date='2020-09-03T16:14:50Z'>
		It seems that the problem is in Python versions.
I'm trying to repeat tutorial &lt;denchmark-link:https://www.tensorflow.org/tutorials/text/nmt_with_attention&gt;https://www.tensorflow.org/tutorials/text/nmt_with_attention&lt;/denchmark-link&gt;

In py -3.6, tf.2.30 (Windows 7, 64 bit) line
encoder = Encoder(vocab_inp_size, embedding_dim, units, BATCH_SIZE)
creates the same error.
I switched to Windows 10, py -3.7 - no problems.
In both computers tf  uses GPU, cudart64_101.dll
This kind of problems are with tf very common, thus I have installed Pyhton 3.5 (works best with tf 1.*), 3.6, 3.7 (currently seems the best) and 3.8 (already 64b)
		</comment>
		<comment id='26' author='LoveMIssY' date='2020-09-03T16:57:09Z'>
		
It seems that the problem is in Python versions.
I'm trying to repeat tutorial https://www.tensorflow.org/tutorials/text/nmt_with_attention
In py -3.6, tf.2.30 (Windows 7, 64 bit) line
encoder = Encoder(vocab_inp_size, embedding_dim, units, BATCH_SIZE)
creates the same error.
I switched to Windows 10, py -3.7 - no problems.
In both computers tf uses GPU, cudart64_101.dll
This kind of problems are with tf very common, thus I have installed Pyhton 3.5 (works best with tf 1.*), 3.6, 3.7 (currently seems the best) and 3.8 (already 64b)

I don't think that Pyton version is the problem. I am running tf in Win10 with Python 3.7.
I would like to point out that there isn't a single specific line of code that generates the problem.
Even a simple line like model = tf.keras.Sequential() causes the assertion to fail.
		</comment>
		<comment id='27' author='LoveMIssY' date='2020-09-03T17:10:38Z'>
		Correction to my earlier:
problem seems to be Microsoft:
under Windows 10 both python 3.6 and python 3.7 do not create error;
under Windows 7 (64 bit) 3.6 creates error (python 3.7 is not installed)
		</comment>
		<comment id='28' author='LoveMIssY' date='2020-09-03T22:11:11Z'>
		Hi! I have 2 laptops with Windows 10, CUDA 10.1, cudnn 7.6.5:

I tested on version 1909, then update it to version 2004 and repeated the test


on Windows 10 Pro, Python 3.7, Tensorflow 2.3 raises the error.
on Windows 10 Pro, Python 3.7, Tensorflow 2.2 everything is working.


On corporate version 1809 with Python 3.7 and Tensorflow 2.3 no this error

May be the problem is in Windows?
		</comment>
		<comment id='29' author='LoveMIssY' date='2020-09-05T12:04:00Z'>
		Like many comments above, I confirm the problem on tensorflow 2.3. Downgrading to tensorflow 2.2 is working. But it is a workaround but it is definitly not solving the problem on 2.3.
&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
, we should reopen the issue.
		</comment>
		<comment id='30' author='LoveMIssY' date='2020-09-07T22:05:06Z'>
		I'm a newb here.  First time trying to get TF working with my Quadro M500M card.  Not sure if it's even relevant, but considering any bit of information could be useful information...
TF 2.3 + CUDA 10.1 + cudnn 10.1 - 8.0.3.33 + python 3.8 kept telling me it couldn't find cudnn64_7.dll.  After looking around I found with cudnn 10.1 came cudnn64_8.dll.  I'm new to this so I don't know much, but that just struck me as odd that it was asking for a file from a version of cudnn not meant for CUDA 10.1.  That aside, after pointing my path at cudnn 10.0 - 7.6.5.32, which had the correct file, I got past the previous stumbling block, but then to this error.
tensorflow.python.framework.errors_impl.InvalidArgumentError: assertion failed: [0] [Op:Assert] name: EagerVariableNameReuse
From this line (from the beginner tutorial)
model = keras.Sequential([
keras.layers.Flatten(input_shape=(28,28)),
keras.layers.Dense(128, activation='relu'),
keras.layers.Dense(10)
])
		</comment>
		<comment id='31' author='LoveMIssY' date='2020-09-08T14:11:16Z'>
		I am having same problem. I can downgrade to 2.2 but then i cant use tf.keras.preprocessing.text_dataset_from_directory like tensorflow tutorial says, and "solution" to that is to use 2.3 but i cant because of problem above. Any suggestions?
Edit: I had multiple tensorflow installed so i uninstalled both 2.2 and 2.3 and installed tf-nightly which is 2.4. Now everything works fine. Dont know if its because i had multiple versions installed or they fixed it in nightly.
Edit2: Not solved since 2.4 version wasnt using GPU, only CPU. It seems I need CUDA 11 for tf-gpu 2.4 but for some reason CUDA update restarts my computer. I guess i ll downgrade to 2.2
		</comment>
		<comment id='32' author='LoveMIssY' date='2020-09-23T06:33:40Z'>
		
I got this error when I upgraded from tf 2.2 to 2.3. I downgraded back to 2.2 and I am no longer getting the error.

i am having same problem. it's really work for me. i uninstall tensorflow2.3 and  i install tensorflow 2.2 .
		</comment>
		<comment id='33' author='LoveMIssY' date='2020-10-05T02:17:37Z'>
		Hey everyone. After struggling with this issue I finally got tensor flow to work with windows and python. I was getting the eager variable name reuse error. Really was annoying because if you downgrade you can't use functions to import image sets. The other alternative is to not use the GPU...which defeats the purpose if you want train models and use them to make meaningful predictions.
Step 1: Uninstall tensorflow with pip
Step 2: Go into your site-packages folder within your python installation. Delete ever folder having to do with tensorflow. This is very important. Even after you uninstall a python package it still leaves the tensor flow folders. You must remove these. This is the thing that made it work for me.
Step3: Use pip to install the tf-nightly package
Step4: Now tensorflow complains about tensorboard not being present. Go ahead and pip install tensorboard
Step5: You will see it working but tensorflow complains about cudnn64_8.dll not being available.
Step6: Go to nvdia, create an account and download cuDNN8 for v10.1
Step7: Extract the contents of the zip files into your CUDA directory.
Step8: Attempt to run and it should work now 👍
Hope this helps anyone who has been stuck! Onward to your AI dreams!!!
		</comment>
		<comment id='34' author='LoveMIssY' date='2020-10-27T16:48:28Z'>
		Any other ideas to make it works with tensorflow 2.3.1 please ?
		</comment>
		<comment id='35' author='LoveMIssY' date='2020-10-27T16:51:24Z'>
		
Any other ideas to make it works with tensorflow 2.3.1 please ?

Use Google Colab if you can. I don't think that the problem will be fixed before tf2.4 release.
		</comment>
		<comment id='36' author='LoveMIssY' date='2020-10-30T05:46:45Z'>
		Same issue, any suggestions?
tf 2.3.1
		</comment>
		<comment id='37' author='LoveMIssY' date='2020-10-30T07:35:04Z'>
		You guys need to use the tf-nightly build package....not the official TF one...and before you install it you need to remove all TF stuff from your python site packages directory. If you don't delete TF out of site packages, tf-nightly install won't work like you think.
		</comment>
		<comment id='38' author='LoveMIssY' date='2020-10-30T07:40:09Z'>
		
You guys need to use the tf-nightly build package....not the official TF one...and before you install it you need to remove all TF stuff from your python site packages directory. If you don't delete TF out of site packages, tf-nightly install won't work like you think.

Thanks, I will try it.
		</comment>
		<comment id='39' author='LoveMIssY' date='2020-10-30T14:42:43Z'>
		
You guys need to use the tf-nightly build package....not the official TF one...and before you install it you need to remove all TF stuff from your python site packages directory. If you don't delete TF out of site packages, tf-nightly install won't work like you think.

Now tf-nightly is 2.5.0.dev20201030, it seems not supports GPU?
&lt;denchmark-link:https://user-images.githubusercontent.com/4510984/97718708-3733f000-1b01-11eb-9728-601f0a3c1bdc.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='40' author='LoveMIssY' date='2020-11-01T14:16:56Z'>
		&lt;denchmark-link:https://github.com/jsudlow&gt;@jsudlow&lt;/denchmark-link&gt;
, Thank you, indeed, the bug does not seem to appear with tf-nightly. But in my case, I don't have the choise to use tensorflow 2.3.1 because autokeras is only compatible with this version... With tf-nightly, I have another problem (certainly because it is not compatible)
		</comment>
		<comment id='41' author='LoveMIssY' date='2020-11-06T12:29:47Z'>
		Same problem here with TF 2.3.1:
&lt;denchmark-code&gt;&gt;&gt;&gt; var = tf.Variable([3, 3])
(...)
2020-11-06 13:28:09.651195: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1402] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 1750 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0, compute capability: 5.0)
2020-11-06 13:28:09.651826: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.
Traceback (most recent call last):
File "&lt;stdin&gt;", line 1, in &lt;module&gt;
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 262, in __call__
return cls._variable_v2_call(*args, **kwargs)
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 244, in _variable_v2_call
return previous_getter(
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 237, in &lt;lambda&gt;
previous_getter = lambda **kws: default_variable_creator_v2(None, **kws)
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/variable_scope.py", line 2633, in default_variable_creator_v2
return resource_variable_ops.ResourceVariable(
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 264, in __call__
return super(VariableMetaclass, cls).__call__(*args, **kwargs)
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 1507, in __init__
self._init_from_args(
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 1661, in _init_from_args
handle = eager_safe_variable_handle(
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 242, in eager_safe_variable_handle
return _variable_handle_from_shape_and_dtype(
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 174, in _variable_handle_from_shape_and_dtype
gen_logging_ops._assert(  # pylint: disable=protected-access
File "/usr/lib/python3.8/site-packages/tensorflow/python/ops/gen_logging_ops.py", line 49, in _assert
_ops.raise_from_not_ok_status(e, name)
File "/usr/lib/python3.8/site-packages/tensorflow/python/framework/ops.py", line 6843, in raise_from_not_ok_status
six.raise_from(core._status_to_exception(e.code, message), None)
File "&lt;string&gt;", line 3, in raise_from
tensorflow.python.framework.errors_impl.InvalidArgumentError: assertion failed: [0] [Op:Assert] name: EagerVariableNameReuse
&lt;/denchmark-code&gt;

[UPDATE]
Fixed with:

cudnn 7.6.5.32-4
cuda 10.2.89-5
tensowflow 2.2.0

		</comment>
		<comment id='42' author='LoveMIssY' date='2020-11-09T18:35:26Z'>
		I had the same issue today. Using
&lt;denchmark-code&gt;pip install tensorflow-gpu==2.2.0
&lt;/denchmark-code&gt;

"fixed" the problem.
However, possibly unrelated, it now takes a long time (like a minute or more) to go from attaching GPU 0 to start training.  Unclear what is taking so long.
		</comment>
		<comment id='43' author='LoveMIssY' date='2020-11-10T19:45:53Z'>
		
I had the same issue today. Using
pip install tensorflow-gpu==2.2.0

"fixed" the problem.
However, possibly unrelated, it now takes a long time (like a minute or more) to go from attaching GPU 0 to start training. Unclear what is taking so long.

Hi eafpres, I got this error first on tf-gpu-2.3.0 then I switched to tf-gpu-2.2.0 and had the same issue with you.
		</comment>
		<comment id='44' author='LoveMIssY' date='2020-11-11T01:31:16Z'>
		
I switched to tf-gpu-2.2.0 and had the same issue with you.

Today sometimes it’s very fast to start. I cannot find any background process.  But it’s working so I can continue my work!
		</comment>
		<comment id='45' author='LoveMIssY' date='2020-11-24T19:04:20Z'>
		
Hey everyone. After struggling with this issue I finally got tensor flow to work with windows and python. I was getting the eager variable name reuse error. Really was annoying because if you downgrade you can't use functions to import image sets. The other alternative is to not use the GPU...which defeats the purpose if you want train models and use them to make meaningful predictions.
Step 1: Uninstall tensorflow with pip
Step 2: Go into your site-packages folder within your python installation. Delete ever folder having to do with tensorflow. This is very important. Even after you uninstall a python package it still leaves the tensor flow folders. You must remove these. This is the thing that made it work for me.
Step3: Use pip to install the tf-nightly package
Step4: Now tensorflow complains about tensorboard not being present. Go ahead and pip install tensorboard
Step5: You will see it working but tensorflow complains about cudnn64_8.dll not being available.
Step6: Go to nvdia, create an account and download cuDNN8 for v10.1
Step7: Extract the contents of the zip files into your CUDA directory.
Step8: Attempt to run and it should work now 👍
Hope this helps anyone who has been stuck! Onward to your AI dreams!!!

Did until step3 and now getting RuntimeError: The current Numpy installation fails to pass a sanity check due to a bug in the windows runtime error :(
		</comment>
		<comment id='46' author='LoveMIssY' date='2020-11-26T09:48:19Z'>
		Thank you very much for this post!!! I was having this same issue with Tensorflow v2.3 on a Windows 10 pc with the latest python, conda and pycharm versions, just downgraded to v2.2 and it did the trick. I only needed to go to my Conda prompt, activate my Pycharm environment, uninstall, install and voila! Basically this:
(base) conda activate Pycharm
(Pycharm) conda uninstall tensorflow
...
(Pycharm) conda install tensorflow==2.2
		</comment>
		<comment id='47' author='LoveMIssY' date='2020-12-09T12:26:47Z'>
		Just wanted to drop a line to say I faced the same issue today - trying to run the &lt;denchmark-link:https://www.tensorflow.org/tutorials/text/text_classification_rnn&gt;https://www.tensorflow.org/tutorials/text/text_classification_rnn&lt;/denchmark-link&gt;
 tutorial.
OS: Windows 10 Pro x64
GPU: GeForce 940M
Drivers:

CUDA 10.1
cudNN 7
Nvidia 457.30

Would crash if tensorflow==2.3
Downgrading to  'fixed' the issue but causes other bugs within above tutorial (such as inability to evaluate encoder e.g.  as it is missing patch &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/a92ff929b818c7dbca2d0c2648ae17e8d6ae3a40&gt;a92ff929b818c7dbca2d0c2648ae17e8d6ae3a40&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>