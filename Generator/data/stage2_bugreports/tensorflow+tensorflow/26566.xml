<bug id='26566' author='jokerstudios' open_date='2019-03-11T09:10:43Z' closed_time='2019-03-27T17:11:44Z'>
	<summary>Unknown default keras 'categorical_crossentropy' loss function when converting with .h5 to .tflite</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
-&gt; I used just default code from the rstudio/keras library, no custom loss function
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
-&gt; Ubuntu 16.04.5 LTS (Xenial Xerus) debian
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
-&gt; tensorflow installed via rstudio/keras and install.packages("tensorflow")
TensorFlow version (use command below):
-&gt;1.13.1
Python version:
-&gt; 2.7.12
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
-&gt; Cuda compilation tools, release 9.0, V9.0.176
GPU model and memory:
-&gt; P2-Instance AWS EC"
8*  K80-GPUs from NVIDIA, 64 vCPUs, 732 GiB Host-Speicher
Exact command to reproduce:
`import tensorflow as tf

converter = tf.lite.TFLiteConverter.from_keras_model_file("test.h5")
tflite_model = converter.convert()
open("converted_model.tflite", "wb").write(tflite_model)`
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I am trying to convert a keras model from .h5 to .tflite file.
I created the model in R using rstudio/keras and everything works fine.
Once I saved the model as .h5 file, I'm switching to Python (because there is no R converter from .5 to .tflite). But when I'm trying to convert the keras model with the default code from the TensorFlow Lite documentation: &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/lite/TFLiteConverter&gt;,&lt;/denchmark-link&gt;
 I am getting the following error:
Traceback (most recent call last): File "/tmp/RtmpWIBDmu/chunk-code-849197e0a8f.txt", line 3, in &lt;module&gt; converter = tf.lite.TFLiteConverter.from_keras_model_file("test.h5") File "/usr/local/lib/python2.7/dist-packages/tensorflow/lite/python/lite.py", line 370, in from_keras_model_file keras_model = _keras.models.load_model(model_file) File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/engine/saving.py", line 266, in load_model sample_weight_mode=sample_weight_mode) File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/checkpointable/base.py", line 442, in _method_wrapper method(self, *args, **kwargs) File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/engine/training.py", line 282, in compile loss_function = training_utils.get_loss_function(loss) File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/engine/training_utils.py", line 873, in get_loss_function return losses.get(loss) File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/losses.py", line 594, in get return deserialize(identifier) File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/losses.py", line 585, in deserialize printable_module_name='loss function') File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/utils/generic_utils.py", line 212, in deserialize_keras_object function_name) ValueError: Unknown loss function:loss_categorical_crossentropy
But as you can see in the source code, I am using the a default keras loss function?
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

This is the Code to create and train the model
`library(keras)
batch_size &lt;- 128
num_classes &lt;- 10
epochs &lt;- 5
&lt;denchmark-h:h1&gt;Input image dimensions&lt;/denchmark-h&gt;

img_rows &lt;- 28
img_cols &lt;- 28
fashion_mnist &lt;- dataset_fashion_mnist()
train_images &lt;- fashion_mnist$train$x
train_labels &lt;- fashion_mnist$train$y
test_images &lt;- fashion_mnist$test$x
test_labels &lt;- fashion_mnist$test$y
train_images &lt;- array_reshape(train_images, c(nrow(train_images), img_rows, img_cols, 1))
test_images &lt;- array_reshape(test_images, c(nrow(test_images), img_rows, img_cols, 1))
input_shape &lt;- c(img_rows, img_cols, 1)
&lt;denchmark-h:h1&gt;Transform RGB values into [0,1] range&lt;/denchmark-h&gt;

train_images &lt;- train_images / 255
test_images &lt;- test_images / 255
train_labels &lt;- to_categorical(train_labels, num_classes)
test_labels &lt;- to_categorical(test_labels, num_classes)
model &lt;- keras_model_sequential() %&gt;%
layer_conv_2d(filters = 32, kernel_size = c(3,3), activation = 'relu',input_shape = input_shape) %&gt;%
layer_max_pooling_2d(pool_size = c(2, 2)) %&gt;%
layer_flatten() %&gt;%
layer_dense(units = 128, activation = 'relu') %&gt;%
layer_dense(units = num_classes, activation = 'softmax')
model %&gt;% compile(
loss = loss_categorical_crossentropy,
optimizer = optimizer_adadelta(),
metrics = c('accuracy')
)
model %&gt;% fit(
train_images, train_labels,
batch_size = batch_size,
epochs = epochs,
validation_split = 0.2,
callbacks = list(callback_tensorboard(log_dir = "./logs/mnist")
))
score &lt;- model %&gt;% evaluate(test_images, test_labels)
cat('Test loss:', score$loss, "\n")
cat('Test accuracy:', score$acc, "\n")
save_model_hdf5(model,"test.h5")
`
	</description>
	<comments>
		<comment id='1' author='jokerstudios' date='2019-03-11T11:58:37Z'>
		&lt;denchmark-link:https://github.com/jokerstudios&gt;@jokerstudios&lt;/denchmark-link&gt;
 , could you please try with
model %&gt;% compile(
loss = categorical_crossentropy,
optimizer = optimizer_adadelta(),
metrics = c('accuracy')
)
Hope this will help you
		</comment>
		<comment id='2' author='jokerstudios' date='2019-03-12T07:27:53Z'>
		&lt;denchmark-link:https://github.com/joyalbin&gt;@joyalbin&lt;/denchmark-link&gt;
 thank you for your reply.
sadly if I try your solution, I get the following error whenI'm  trying to compile the model.

UPDATE:
if you put some quotation marks around the loss function you proposed, it works!!
model %&gt;% compile(
loss = 'categorical_crossentropy',
optimizer = optimizer_adadelta(),
metrics = c('accuracy')
)
I think it would be great if this could be communicated to the rstudio/keras team, so people wont have to train their models again when they want to compile them to .tflite
		</comment>
		<comment id='3' author='jokerstudios' date='2019-03-12T21:35:51Z'>
		&lt;denchmark-link:https://github.com/jokerstudios&gt;@jokerstudios&lt;/denchmark-link&gt;
 I understand that it was resolved by &lt;denchmark-link:https://github.com/joyalbin&gt;@joyalbin&lt;/denchmark-link&gt;
 .
Could you reframe title of the issue so that it will be more helpful to the community? Thanks.
Close the issue if everything was resolved. Thanks!
		</comment>
		<comment id='4' author='jokerstudios' date='2019-03-27T13:00:45Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='5' author='jokerstudios' date='2019-03-27T17:11:44Z'>
		Closing the issue as it was resolved. thanks!
		</comment>
		<comment id='6' author='jokerstudios' date='2019-03-27T17:11:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=26566&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=26566&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>