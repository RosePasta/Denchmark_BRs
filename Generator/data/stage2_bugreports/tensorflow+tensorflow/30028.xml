<bug id='30028' author='JonasAmrich' open_date='2019-06-21T11:52:09Z' closed_time='2019-07-09T20:24:41Z'>
	<summary>Python package is missing ModuleSpec in tensorflow.__spec__ in tf 1.14.0</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux-4.9.125-linuxkit-x86_64-with-Ubuntu-18.04-bionic
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no
TensorFlow installed from (source or binary): preinstalled in docker image
TensorFlow version (use command below): v1.14.0-rc1-22-gaf24dc91b5 1.14.0
Python version: 3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
In TF 1.14.0 the module spec in tensorflow.__spec__ is None:
&lt;denchmark-code&gt;&gt;&gt;&gt; import tensorflow
&gt;&gt;&gt; print(tensorflow.__spec__)
None
&lt;/denchmark-code&gt;

Describe the expected behavior
This is different from tf 1.13.1 where it works as expected:
&lt;denchmark-code&gt;&gt;&gt;&gt; import tensorflow
&gt;&gt;&gt; print(tensorflow.__spec__)
ModuleSpec(name='tensorflow', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7f038cfc3cf8&gt;, origin='/usr/local/lib/python3.5/dist-packages/tensorflow/__init__.py', submodule_search_locations=['/usr/local/lib/python3.5/dist-packages/tensorflow'])
&lt;/denchmark-code&gt;

Missing spec causes some problems, e.g. pkgutil now fails when trying to find tensorflow. Note that the first call to find_loader is successful, it only fails after tensorflow is imported:
&lt;denchmark-code&gt;Python 3.6.8 (default, Jan 14 2019, 11:02:34) 
[GCC 8.0.1 20180414 (experimental) [trunk revision 259383]] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import pkgutil
&gt;&gt;&gt; pkgutil.find_loader('tensorflow')
&lt;_frozen_importlib_external.SourceFileLoader object at 0x7f62372c7160&gt;
&gt;&gt;&gt; import tensorflow
&gt;&gt;&gt; pkgutil.find_loader('tensorflow')
Traceback (most recent call last):
  File "/usr/lib/python3.6/pkgutil.py", line 490, in find_loader
    spec = importlib.util.find_spec(fullname)
  File "/usr/lib/python3.6/importlib/util.py", line 102, in find_spec
    raise ValueError('{}.__spec__ is None'.format(name))
ValueError: tensorflow.__spec__ is None

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.6/pkgutil.py", line 496, in find_loader
    raise ImportError(msg.format(fullname, type(ex), ex)) from ex
ImportError: Error while finding loader for 'tensorflow' (&lt;class 'ValueError'&gt;: tensorflow.__spec__ is None)
&lt;/denchmark-code&gt;

Code to reproduce the issue
See above
Other info / logs
I've tested this using official tf docker image (tensorflow/tensorflow:1.14.0-py3) and also using python docker image (python:3.6) with tensorflow installed with pip.
	</description>
	<comments>
		<comment id='1' author='JonasAmrich' date='2019-06-24T10:04:10Z'>
		importlib throws the same error. Can't do custom imports in 1.14.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "path/test/test_model.py", line 62, in testTFGraph
    save_tensorflow(sess, path, output=['output'])
  File "path/model.py", line 55, in save_tensorflow
    if not is_installed('tensorflow'):
  File "path/_util.py", line 18, in is_installed
    if importlib.util.find_spec(p) is None:
  File "path/lib/python3.7/importlib/util.py", line 114, in find_spec
    raise ValueError('{}.__spec__ is None'.format(name))
ValueError: tensorflow.__spec__ is None
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='JonasAmrich' date='2019-06-24T13:59:28Z'>
		Another data point: this also happens in nightly
		</comment>
		<comment id='3' author='JonasAmrich' date='2019-06-27T20:48:56Z'>
		Sorry for the breakage! This is caused by adding a module wrapper that prints deprecation messages. I will send a change to fix it.
		</comment>
		<comment id='4' author='JonasAmrich' date='2019-07-09T20:24:41Z'>
		Closing this issue since the associated PR has been merged. Thanks!
		</comment>
		<comment id='5' author='JonasAmrich' date='2019-07-09T20:24:42Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30028&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30028&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='JonasAmrich' date='2019-07-31T12:25:10Z'>
		Is there a work around in the mean time?
		</comment>
		<comment id='7' author='JonasAmrich' date='2019-08-05T14:07:58Z'>
		We'll get the 1.14.1 patch release this week.
		</comment>
		<comment id='8' author='JonasAmrich' date='2019-08-13T17:53:33Z'>
		Update: Instead of a 1.14.1 patch release, we will get a 1.15 version in a few weeks. Sorry for the extra delay this causes.
		</comment>
	</comments>
</bug>