<bug id='29661' author='jvishnuvardhan' open_date='2019-06-11T19:17:19Z' closed_time='2020-05-06T15:06:40Z'>
	<summary>Bug in exception handling of tf.histogram_fixed_width_bins</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): y
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below):2.0.0-beta0
Python version: python3 from colab
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
when value range for  tf.histogram_fixed_width_bins  is [0.0, 0.0], it outputs an index outside nbins`. See the code below.
&lt;denchmark-code&gt;nbins = 5
value_range = [.0, .0]
new_values = [-1.0, 0.0, 1.5, 2.0, 5.0, 15]
indices = tf.histogram_fixed_width_bins(new_values, value_range, nbins=5)
print(indices)

&lt;/denchmark-code&gt;

Output is
&lt;denchmark-code&gt;tf.Tensor([          0 -2147483648           4           4           4           4], shape=(6,), dtype=int32)
&lt;/denchmark-code&gt;

Describe the expected behavior
It should show indices as [0,0,4,4,4,4] and throw a warning saying that the range needs to be updated
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
See above
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='jvishnuvardhan' date='2019-06-14T12:02:11Z'>
		Tried on Colab with TF version 2.0-beta and was able to replicate the issue.
		</comment>
		<comment id='2' author='jvishnuvardhan' date='2020-03-27T19:57:47Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/60c13c6f2c1cc4948add81e210f150c1/2-1-template.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/cf4dab2373adf64de686a77e94cad76c/tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
 i.e. 2.2.0-dev20200327. Please find the attached gist. Thanks!
		</comment>
		<comment id='3' author='jvishnuvardhan' date='2020-04-02T23:22:01Z'>
		This is fixed with tf-nightly version '2.2.0-dev20200402'. Thanks!
tf.Tensor([0 4 4 4 4 4], shape=(6,), dtype=int32)
		</comment>
		<comment id='4' author='jvishnuvardhan' date='2020-04-21T19:27:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29661&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29661&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='jvishnuvardhan' date='2020-04-21T22:17:59Z'>
		It is working as expected in GPU. But, the error still persists with CPU.
&lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/858ba13ef8b77cf63355c84bd398e026/tf-nightly.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist with GPU and &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/4b80e167f59162e373f0fc5591d9c14d/tf-nightly.ipynb&gt;here&lt;/denchmark-link&gt;
 with CPU. Thanks!
		</comment>
		<comment id='6' author='jvishnuvardhan' date='2020-04-25T23:10:05Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/38899&gt;#38899&lt;/denchmark-link&gt;
 for the fix. In comparison with  which throws out InvalidArgument in case value_range is not monotonous increasing (implemented in C++ kernel), I think  needs to apply the same restriction, as was specified in its docstring.
		</comment>
		<comment id='7' author='jvishnuvardhan' date='2020-05-06T15:06:42Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29661&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29661&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>