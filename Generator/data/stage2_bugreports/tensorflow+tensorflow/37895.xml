<bug id='37895' author='Lillypucien' open_date='2020-03-25T10:59:42Z' closed_time='2020-06-19T19:53:01Z'>
	<summary>run_eagerly argument bug in tf.Keras.Model compile method</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Windows 10, x64
TensorFlow installed from (source or
binary): Binary (pip)
TensorFlow version (use command below): TF 2.2.0 (2.2.0.dev20200324)
Python version: 3.7
CUDA/cuDNN version: 10.1 / 7.6
GPU model and memory: Bug appears on several computers with different GPU

Describe the current behavior
The run_eagerly argument of the compile method of tf.Keras models does not actually set the run_eagerly attribute of the model. This causes the model to not be run eagerly even if run_eagerly=True was given as argument to its compile method.
This seems to be caused by a recent modification of the arguments of the compile method, as detailed bellow.
Describe the expected behavior
Calling compile on a Keras model with the argument run_eagerly=True should set the run_eagerly attribute of the model to True, which causes the model to be run eagerly when calling methods such as fit on it.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf

class CustomLayer(tf.keras.layers.Layer):
	def __init__(self):
		super().__init__()
		
	def call(self, inputs):
		tf.print('Running eagerly: ', tf.executing_eagerly())
		return inputs

if __name__ == "__main__" :
	data = np.random.random((16, 3)).astype(np.float32)

	inputs = tf.keras.Input(shape=(3,))
	outputs = tf.keras.layers.Dense(3)(inputs)
	outputs = CustomLayer()(outputs)
	model = tf.keras.Model(inputs=inputs, outputs=outputs)
	
	model.compile(loss='mse', run_eagerly=True) # does not set model.run_eagerly to True, and model does not run eagerly
	# model.run_eagerly = True # sets model.run_eagerly to True, and model runs eagerly

	print('run_eagerly: ', model.run_eagerly)

	model.fit(x=data, y=data)
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Logs corresponding to the standalone code: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4380372/log.txt&gt;log.txt&lt;/denchmark-link&gt;

Supplementary info regarding the issue
compile's signature is now
&lt;denchmark-code&gt;def compile(self,
              optimizer='rmsprop',
              loss=None,
              metrics=None,
              loss_weights=None,
              sample_weight_mode=None,
              weighted_metrics=None,
              run_eagerly=None,
              **kwargs):
&lt;/denchmark-code&gt;

when it used to be (notice that run_eagerly=None has been added to its arguments)
&lt;denchmark-code&gt;def compile(self,
              optimizer='rmsprop',
              loss=None,
              metrics=None,
              loss_weights=None,
              sample_weight_mode=None,
              weighted_metrics=None,
              **kwargs):
&lt;/denchmark-code&gt;

However, it still sets _run_eagerly as follows self._run_eagerly = kwargs.pop('run_eagerly', None) which can no longer work as run_eagerly is no longer in kwargs.
	</description>
	<comments>
		<comment id='1' author='Lillypucien' date='2020-03-27T20:25:54Z'>
		the issue is not seen with 2.2.0-rc1, &lt;denchmark-link:https://github.com/Lillypucien&gt;@Lillypucien&lt;/denchmark-link&gt;
 can you try that version please
		</comment>
		<comment id='2' author='Lillypucien' date='2020-03-27T21:04:23Z'>
		I can reproduce the issue with . &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/ae6240266965ecb4803c920e67b64347/untitled40.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the colab gist for y/our reference. Thanks
		</comment>
		<comment id='3' author='Lillypucien' date='2020-03-30T13:38:43Z'>
		The issue was indeed not yet in 2.2.0-rc1, but is still present in the latest tf-nightly as shown by &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Lillypucien' date='2020-03-31T08:12:26Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 TF 2.0 is not the correct tag for this issue, the bug is present in the last tf 2.2 development version
		</comment>
		<comment id='5' author='Lillypucien' date='2020-04-08T04:22:30Z'>
		fixed the labels, this issue is not seen with 2.2.0-rc2 as well, but seen with latest nightly.
		</comment>
		<comment id='6' author='Lillypucien' date='2020-06-05T17:51:42Z'>
		This should have been fixed in this commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/6f9a5289f9a59164f17a70029df9e9f39ee5a324&gt;ee5a324&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='Lillypucien' date='2020-06-05T18:23:44Z'>
		&lt;denchmark-link:https://github.com/Lillypucien&gt;@Lillypucien&lt;/denchmark-link&gt;
 This was resolved in recent . &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/19d45437d71b437c060057f8bb54b250/untitled40.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist for your reference.
Can you please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='8' author='Lillypucien' date='2020-06-12T19:09:09Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='9' author='Lillypucien' date='2020-06-19T19:53:00Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='10' author='Lillypucien' date='2020-06-19T19:53:03Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37895&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37895&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>