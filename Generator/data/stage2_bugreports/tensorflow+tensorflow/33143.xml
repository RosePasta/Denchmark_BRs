<bug id='33143' author='racinmat' open_date='2019-10-08T11:43:21Z' closed_time='2020-02-28T19:19:45Z'>
	<summary>Tensorflow Keras not allowing different size X and y for fit_generator</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, Professional Edition
TensorFlow installed from (source or binary): binary, installed using conda
TensorFlow version (use command below): unknown, 1.14.0
Python version: 3.7.3
CUDA/cuDNN version: 10.0, 7.6
GPU model and memory: T1000, 4GB VRAM

Describe the current behavior
When having model with two inputs, with shapes e.g. (486, 3673), (486, ) and one output (87, 1), after calling model.fit_generator(), the training crashes:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\contextlib.py", line 130, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\ops\summary_ops_v2.py", line 236, in as_default
    yield self
  File "C:/Projects/iotmap/py/train.py", line 162, in train_fit_generator
    model.fit_generator(generator, epochs=epochs, workers=4, callbacks=[MyCallback()])
  File "C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1433, in fit_generator
    steps_name='steps_per_epoch')
  File "C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\keras\engine\training_generator.py", line 264, in model_iteration
    batch_outs = batch_function(*batch_data)
  File "C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1153, in train_on_batch
    extract_tensors_from_dataset=True)
  File "C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\keras\engine\training.py", line 2688, in _standardize_user_data
    training_utils.check_array_lengths(x, y, sample_weights)
  File "C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\keras\engine\training_utils.py", line 483, in check_array_lengths
    'and ' + str(list(set_y)[0]) + ' target samples.')
ValueError: Input arrays should have the same number of samples as target arrays. Found 486 input samples and 87 target samples.
2019-10-08 13:32:22.899390: W tensorflow/python/util/util.cc:280] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
&lt;/denchmark-code&gt;

Describe the expected behavior
Training should proceed without problems, the data is valid.
When trained during eager execution, using
&lt;denchmark-code&gt;for step in range(settings['iterations']):
    x_train, y_train = batch_fn()
    with tf.GradientTape() as tape:
        logits, probs = model(x_train)
        loss_value = loss(y_train, logits)
    grads = tape.gradient(loss_value, model.trainable_weights)
    optimizer.apply_gradients(zip(grads, model.trainable_weights))
&lt;/denchmark-code&gt;

the model is trained without problems, and I expect using  model.fit_generator() would allow this behaviour too.
Code to reproduce the issue
model is built using
&lt;denchmark-code&gt;import tensorflow as tf

class SegmentedMean(tf.keras.layers.Layer):
    def __init__(self, *args, **kwargs):
        super(SegmentedMean, self).__init__(*args, **kwargs)

    def call(self, inputs, **kwargs):
        features, segments = inputs
        return tf.math.segment_mean(features, segments)

inputs = tf.keras.Input(shape=(feats_len,), name='features')
segments = tf.keras.Input(shape=(), name='segments', dtype=tf.int32)
x = tf.keras.layers.Dense(settings['k'], activation=tf.nn.relu)(inputs)
x = tf.keras.layers.Dense(settings['k'])(x)

x = SegmentedMean()((x, segments))
x = tf.keras.layers.Dense(settings['k'], activation=tf.nn.relu)(x)
logits = tf.keras.layers.Dense(2, name='output_logits')(x)
probs = tf.keras.layers.Softmax()(logits)
model = tf.keras.Model(inputs=(inputs, segments), outputs=(logits, probs), name='mil_model')
optimizer = tf.keras.optimizers.Adam()
loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
model.compile(optimizer=optimizer, loss={'output_logits': loss})
model.fit_generator(generator, epochs=5, workers=4)
&lt;/denchmark-code&gt;


When using segmented aggregations, naturally the size of X and Y is different but after aggregation, dimensions fit, but keras model training don't allow this.
Using those aggregations is motivated by &lt;denchmark-link:https://arxiv.org/pdf/1609.07257.pdf&gt;https://arxiv.org/pdf/1609.07257.pdf&lt;/denchmark-link&gt;
 paper I am trying to use to some problem.
Keras repo allows turning those checks of in &lt;denchmark-link:https://github.com/keras-team/keras/pull/11548&gt;this PR&lt;/denchmark-link&gt;
, but it is not incorporated into tensorflow version of keras.
	</description>
	<comments>
		<comment id='1' author='racinmat' date='2019-10-15T17:21:07Z'>
		&lt;denchmark-link:https://github.com/racinmat&gt;@racinmat&lt;/denchmark-link&gt;
 Can you please provide a github gist or a colab notebook to reproduce the issue. Thanks!
		</comment>
		<comment id='2' author='racinmat' date='2019-10-16T10:55:39Z'>
		Of course, the gist is here &lt;denchmark-link:https://gist.github.com/racinmat/a8eb2f727fcc4bd24745042eee5cd8d6&gt;https://gist.github.com/racinmat/a8eb2f727fcc4bd24745042eee5cd8d6&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='racinmat' date='2019-10-28T21:25:48Z'>
		I am getting an error &lt;denchmark-link:https://github.com/racinmat&gt;@racinmat&lt;/denchmark-link&gt;
 Please find my github gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gowthamkpr/361962dd71b59b1bf19b62c0a53bb414/untitled210.ipynb&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='racinmat' date='2019-10-29T09:20:49Z'>
		Oh, my bad, fixed now in the github gist and it produces the abovementioned error in the colab.
		</comment>
		<comment id='5' author='racinmat' date='2019-10-29T18:12:33Z'>
		I am still facing the same error &lt;denchmark-link:https://github.com/racinmat&gt;@racinmat&lt;/denchmark-link&gt;
 Please share your github gist.
		</comment>
		<comment id='6' author='racinmat' date='2019-10-29T22:38:15Z'>
		I updated the github gist, not the colab. Which error are you getting with the most recent version of the gist?
		</comment>
		<comment id='7' author='racinmat' date='2019-11-08T17:59:10Z'>
		Was able to reproduce it. Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gowthamkpr/f0f721735d1855b103d171de87643f7f/untitled210.ipynb&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='8' author='racinmat' date='2020-02-28T19:19:45Z'>
		&lt;denchmark-link:https://github.com/racinmat&gt;@racinmat&lt;/denchmark-link&gt;
 Thanks for the issue!
This is fixed in the latest tf-nightly: pip install -U tf-nightly
		</comment>
		<comment id='9' author='racinmat' date='2020-02-28T19:19:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33143&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33143&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>