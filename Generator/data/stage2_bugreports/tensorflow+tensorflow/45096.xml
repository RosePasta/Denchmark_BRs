<bug id='45096' author='RobRomijnders' open_date='2020-11-23T10:39:42Z' closed_time='2021-01-14T23:12:23Z'>
	<summary>How to save a keras.Model with an embedded hub.KerasLayer ?</summary>
	<description>
System information

Have I written custom code: No
OS Platform and Distribution: Google Colab
TensorFlow installed from (source or binary): Google Colab
TensorFlow version (use command below): 2.3.0
Python version: 3.7

Describe the current behavior
Method 1
model = tf.keras.Sequential([
    hub.KerasLayer("https://tfhub.dev/google/bit/s-r50x1/1"),
])

model.build(input_shape=(None, 224, 224, 3))
model.save("/tmp")
# Success
Method 2
class DummyModel(tf.keras.Model):

  def __init__(self):
    super(DummyModel, self).__init__()
    self.model = hub.KerasLayer("https://tfhub.dev/google/bit/s-r50x1/1")

  def call(self, inputs):
    return self.model(inputs)


model = DummyModel()
model.build((None, 224, 224, 3))
model.save("/tmp")
# Error
Describe the expected behavior
How can I properly build a Model with an embedded KerasLayer?
Method 1 succeeds, but method 2 fails with ValueError: Model cannot be saved because the input shapes have not been set.
This is a minimized version. I explicitly need a design like method &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/2&gt;#2&lt;/denchmark-link&gt;
 for my more complicated problem.

&lt;denchmark-link:https://colab.research.google.com/drive/18VmYP7Q5GmdToZCX3mx5Msmby0WfEMRE?usp=sharing&gt;Google Colab&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='RobRomijnders' date='2020-11-23T11:10:27Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

I am able to replicate the issue on nightly, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/b90bf04f9528bb76bf78946a3982d8df/untitled468.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='RobRomijnders' date='2020-11-27T08:09:34Z'>
		Update from my side:
model._set_inputs(tf.keras.Input(shape=[None, None, 3])) solves the issue for me.
This fix feels weird though. Python recommends using _method only for private purposes, and this issue feels like a common situation. So I wonder if there exists a proper solution?
		</comment>
		<comment id='3' author='RobRomijnders' date='2021-01-14T02:47:48Z'>
		Hi--
The message that you get "ValueError:DummyModel cannot be saved because the input shapes have not been set. Usually, input shapes are automatically determined from calling .fit() or .predict(). To manually set the shapes, call model.build(input_shape)." is confusing since build does not work.
If you follow the recommendation to fit or predict, then you can save successfully. Here I have "called" it before saving, which works:
&lt;denchmark-code&gt;model = DummyModel()
z = tf.zeros([1, 224, 224, 3])
model(z)
model.save("/tmp")
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='RobRomijnders' date='2021-01-14T23:12:22Z'>
		&lt;denchmark-link:https://github.com/RobRomijnders&gt;@RobRomijnders&lt;/denchmark-link&gt;
 Agree with you &lt;denchmark-link:https://github.com/monicadsong&gt;@monicadsong&lt;/denchmark-link&gt;
.
We need to call the model on some data to determine the shapes of different layers which is required for initializing model weights and biases before saving the model. This approach (calling the model) is specific to subclass model. Please check the example given in one of &lt;denchmark-link:https://www.tensorflow.org/guide/keras/save_and_serialize&gt;the tutorial&lt;/denchmark-link&gt;
 on TF website.
&lt;denchmark-code&gt;class CustomModel(keras.Model):
    def __init__(self, hidden_units):
        super(CustomModel, self).__init__()
        self.dense_layers = [keras.layers.Dense(u) for u in hidden_units]

    def call(self, inputs):
        x = inputs
        for layer in self.dense_layers:
            x = layer(x)
        return x


model = CustomModel([16, 16, 10])
# Build the model by calling it
input_arr = tf.random.uniform((1, 5))
outputs = model(input_arr)
model.save("my_model") 
&lt;/denchmark-code&gt;

I am closing this issue as it was resolved. Please feel free to reopen if I am mistaken. thanks!
		</comment>
		<comment id='5' author='RobRomijnders' date='2021-01-14T23:12:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45096&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45096&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='RobRomijnders' date='2021-01-17T16:37:14Z'>
		Thanks for answering!
		</comment>
	</comments>
</bug>