<bug id='34528' author='andmax' open_date='2019-11-22T18:37:30Z' closed_time='2020-03-25T01:14:48Z'>
	<summary>External loss function raises error on incompatible types</summary>
	<description>
On TensorFlow 2.0 (OS Ubuntu 16.04), when I've an external loss function, the tf.keras.model fit() function call raises an error of incompatible types, whereas the same code on TensorFlow 1.15 does not raise any error and works fine.  The function fit() fails with:
&lt;denchmark-code&gt;(...)
/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/op_def_library.py in
_apply_op_helper(self, op_type_name, name, **keywords)
    561                   "%s type %s of argument '%s'." %
    562                   (prefix, dtypes.as_dtype(attrs[input_arg.type_attr]).name,
--&gt; 563                    inferred_from[input_arg.type_attr]))
    564 
    565           types = [values.dtype]

TypeError: Input 'y' of 'Mul' Op has type float32 that does not match type uint8 of
argument 'x'.
&lt;/denchmark-code&gt;

The minimal code to reproduce is:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.utils import to_categorical
from tensorflow.keras import backend as K

def loss_func(y_true, y_pred):
    y_true_f = K.batch_flatten(y_true)
    y_pred_f = K.batch_flatten(y_pred)
    intersection = K.sum(y_true_f * y_pred_f, axis=1, keepdims=True)
    union = K.sum(y_true_f, axis=1, keepdims=True) \
            + K.sum(y_pred_f, axis=1, keepdims=True)
    return -(2. * intersection + K.epsilon()) / (union + K.epsilon())

(Xtr, Ytr), (Xva, Yva) = tf.keras.datasets.cifar10.load_data()
Xtr, Ytr, Xva, Yva, nc = Xtr[:1000], Ytr[:1000], Xva[:100], Yva[:100], 10
Xtr, Xva = Xtr.astype('float32') / 255, Xva.astype('float32') / 255
Ytr, Yva, ins = to_categorical(Ytr, nc), to_categorical(Yva, nc), Xtr.shape[1:]

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Input(ins))
model.add(tf.keras.layers.Conv2D(8, (3, 3)))
model.add(tf.keras.layers.Activation('relu'))
model.add(tf.keras.layers.Conv2D(8, (3, 3), activation='relu'))
model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2)))
model.add(tf.keras.layers.Dropout(0.25))
model.add(tf.keras.layers.Conv2D(16, (3, 3), activation='relu'))
model.add(tf.keras.layers.Conv2D(16, (3, 3), activation='relu'))
model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2)))
model.add(tf.keras.layers.Dropout(0.25))
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(32, activation='relu'))
model.add(tf.keras.layers.Dropout(0.5))
model.add(tf.keras.layers.Dense(nc, activation='softmax'))
opt = tf.keras.optimizers.RMSprop(lr=0.0001, decay=1e-6)
model.compile(loss=loss_func, optimizer=opt, metrics=[])

Ytr, Yva = Ytr.astype('uint8'), Yva.astype('uint8') # (1)

model.fit(x=Xtr, y=Ytr, batch_size=32, epochs=1, validation_data=(Xva, Yva))
&lt;/denchmark-code&gt;

If I remove line (1) it works on TensorFlow 2.0.
	</description>
	<comments>
		<comment id='1' author='andmax' date='2019-11-25T06:24:13Z'>
		I have tried on colab with TF version 1.15, 2.0, 2.1.0-dev20191124 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/a3a85b9e573c95299b5d248d662f8db7/untitled402.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='andmax' date='2020-03-09T10:46:28Z'>
		&lt;denchmark-link:https://github.com/andmax&gt;@andmax&lt;/denchmark-link&gt;

This was resolved in ``tf-nightly. Please check the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/cc4d485120973b17d5616b85b81a61f0/untitled715.ipynb&gt;here&lt;/denchmark-link&gt;
.
You could use tf-nightly for now and in the next couple of months new stable version will be released.Can you please confirm whether we can close this issue as this was resolved.
Thanks!
		</comment>
		<comment id='3' author='andmax' date='2020-03-25T01:05:07Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='4' author='andmax' date='2020-03-25T01:14:50Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34528&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34528&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='andmax' date='2020-03-25T01:15:01Z'>
		Looks like it has been resolved
		</comment>
	</comments>
</bug>