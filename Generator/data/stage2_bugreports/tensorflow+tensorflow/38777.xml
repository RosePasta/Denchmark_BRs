<bug id='38777' author='Victor-Almeida' open_date='2020-04-22T00:10:35Z' closed_time='2020-04-27T22:01:19Z'>
	<summary>Blank outputs when using CTC loss on TensorFlow 2</summary>
	<description>
Hello.
I'm trying to use Tensorflow's  for a speech recognition problem, but it seems it's causing the network to learn that the best way to reduce loss is to output blank. I've tried other implementations, like &lt;denchmark-link:https://github.com/igormq/ctc_tensorflow_example&gt;this&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/ysoullard/CTCModel&gt;this&lt;/denchmark-link&gt;
, but they have the same problem.
&lt;denchmark-link:https://gist.github.com/Victor-Almeida/df1d0dc2cea318216d320d029dc8e64f&gt;Here&lt;/denchmark-link&gt;
 is the gist for my own implementation and &lt;denchmark-link:https://drive.google.com/open?id=1bgGte_wVyaYAycBntQA8uQWmVQZqhPYH&gt;here&lt;/denchmark-link&gt;
 is the link to my Google Drive folder with the files used.
I'm using Google Colab's high-RAM runtime with GPU and Tensorflow version 2.2.0-rc3.
Also, for some reason I get this error     ValueError: Dimension must be 2 but is 3 for '{{node transpose}} = Transpose[T=DT_FLOAT, Tperm=DT_INT32](model_52/Placeholder, transpose/perm)' with input shapes: [1200,29], [3]. when trying to use tf.function on the train_step method from the CTC_SR class when using the Encoder_Decoder class, but not when using the actual Keras' layers.
When using tf.function with Keras layers, though, training takes waaaaaay longer. Why is that?
	</description>
	<comments>
		<comment id='1' author='Victor-Almeida' date='2020-04-22T10:28:10Z'>
		&lt;denchmark-link:https://github.com/Victor-Almeida&gt;@Victor-Almeida&lt;/denchmark-link&gt;

In order to expedite the trouble-shooting process, please provide colab link or minimal standalone code to reproduce the issue reported here. It helps us in localizing the issue faster.Thanks!
		</comment>
		<comment id='2' author='Victor-Almeida' date='2020-04-22T16:41:40Z'>
		I did.
The gist --&gt; &lt;denchmark-link:https://gist.github.com/Victor-Almeida/df1d0dc2cea318216d320d029dc8e64f&gt;https://gist.github.com/Victor-Almeida/df1d0dc2cea318216d320d029dc8e64f&lt;/denchmark-link&gt;

The Google Drive folder --&gt; &lt;denchmark-link:https://drive.google.com/open?id=1bgGte_wVyaYAycBntQA8uQWmVQZqhPYH&gt;https://drive.google.com/open?id=1bgGte_wVyaYAycBntQA8uQWmVQZqhPYH&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Victor-Almeida' date='2020-04-23T10:55:38Z'>
		I have tried on colab with TF version 2.2-rc3 .Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/9561c6e032c864a0f20fa5c6f3078367/untitled807.ipynb&gt;here&lt;/denchmark-link&gt;
.Is this the expected behavior?Thanks!
		</comment>
		<comment id='4' author='Victor-Almeida' date='2020-04-23T17:08:23Z'>
		Yes, that's what's happening. Predictions are all blank, and you can see that during training because the LER is always 1.
		</comment>
		<comment id='5' author='Victor-Almeida' date='2020-04-27T22:01:19Z'>
		Modeling questions are a better fit for StackOverflow, instead of github issues.  However, from experience the typical explanation here is that the model is in an intermediate stage of training.  The typical progression with CTC is first it learns to emit just blanks; then it starts learning the outer edges of tokens to emit, then after more epochs learns to emit the intermediate tokens.  This assumes you have enough model capacity and the architecture of the underlying RNN has enough capacity to do so.
To summarize: probably you haven't run training for long enough, or your model capacity is too low, or your optimizer isn't tuned well.
I'll close this for now; probably you will want to follow the convergence question up on StackOverflow, reddit, or similar.
		</comment>
		<comment id='6' author='Victor-Almeida' date='2020-04-27T22:01:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38777&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38777&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>