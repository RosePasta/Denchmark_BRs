<bug id='9357' author='morgangiraud' open_date='2017-04-21T09:46:50Z' closed_time='2017-06-16T21:06:10Z'>
	<summary>init_op and concurrent.futures freeze forever</summary>
	<description>
&lt;denchmark-h:h2&gt;System Information:&lt;/denchmark-h&gt;

OS Platform and Distribution: MAC OSX
TensorFlow installed from: pip install tensorflow
TensorFlow version : 1.0.0
Python version : Python 3.6.1
I found a  bug trying to run multiple agent in parallel using python, it boiled down to the code below:

If i try to init an agent asynchronously after init an agent synchronously, it freezes forever
if i do it the other way around, everything is fine

Does anyone has an idea on this one?
&lt;denchmark-h:h2&gt;Source Code:&lt;/denchmark-h&gt;

import tensorflow as tf
import concurrent.futures

# Very basic model
class Agent(object):
    def __init__(self):
        graph = tf.Graph()
        with graph.as_default():
            self.Qs = tf.get_variable('Qs', shape=[1, 1])
            self.init_op = tf.global_variables_initializer()
        self.sess = tf.Session(graph=graph)

        print('Before init_op')
        self.sess.run(self.init_op)
        print('After init_op')


def execute_run():
    print('In execute')
    agent = Agent()

print('*** First: we create an agent asynchronously')
with concurrent.futures.ProcessPoolExecutor(1) as executor:
    concurrent.futures.wait([executor.submit(execute_run)])

print('*** Then: we create an agent synchronously')
agent = Agent()

print('So far, everything is fine')


print('*** Finally: we create an agent asynchronously again')
with concurrent.futures.ProcessPoolExecutor(1) as executor:
    concurrent.futures.wait([executor.submit(execute_run)])

print('You\'ll never see this as we  can\'t get passed the init_op')
&lt;denchmark-h:h2&gt;output:&lt;/denchmark-h&gt;

*** First: we create an agent asynchronously
In execute
Before init_op
After init_op
*** Then: we create an agent synchronously
Before init_op
After init_op
So far, everything is fine
*** Finally: we create an agent asynchronously again
In execute
Before init_op
	</description>
	<comments>
		<comment id='1' author='morgangiraud' date='2017-04-22T16:37:45Z'>
		Can you tell where it freezes in init_op? Can you also run python 3.5 which is the supported version?
		</comment>
		<comment id='2' author='morgangiraud' date='2017-04-24T09:04:30Z'>
		Is there any way to get more information on a TensorFlow call?
Anyway, i didn't saw it last time but it seems related to: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/5448&gt;#5448&lt;/denchmark-link&gt;

That's a problem, i can't move around the import tensorflow piece and the set statement: multiprocess.set_start_method('spawn')gives me this error Runtimes Error: Context has already been set
		</comment>
		<comment id='3' author='morgangiraud' date='2017-04-24T16:48:40Z'>
		Running Python inside a debugger should give you information on where the freeze happens.  I'm not sure if multiple processes are involved; if so you may need to make sure the debugger follows forks.
		</comment>
		<comment id='4' author='morgangiraud' date='2017-06-16T21:06:10Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
	</comments>
</bug>