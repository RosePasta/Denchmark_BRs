<bug id='17932' author='lhlmgr' open_date='2018-03-22T19:22:53Z' closed_time='2018-03-26T18:20:41Z'>
	<summary>tf.contrib.data.bucket_by_sequence_length fails for nested Dataset element</summary>
	<description>
Hello everyone,
I just tried the new function to group variable length inputs for the dataset API, namely: tf.contrib.data.bucket_by_sequence_length, for a small Estimator-Model.
I implemented the  such that it returns a dataset, where each element is a tuple &lt;denchmark-link:https://www.tensorflow.org/get_started/premade_estimators#create_input_functions&gt;(feature-dict, label)&lt;/denchmark-link&gt;
. However, when I run it, I get following exception:

Traceback (most recent call last):
...
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py", line 960, in apply
dataset = transformation_func(self)
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/data/python/ops/grouping.py", line 198, in _apply_fn
window_size_func=window_size_fn))
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py", line 960, in apply
dataset = transformation_func(self)
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/data/python/ops/grouping.py", line 90, in _apply_fn
window_size_func)
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/data/python/ops/grouping.py", line 239, in init
self._make_key_func(key_func, input_dataset)
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/data/python/ops/grouping.py", line 289, in _make_key_func
self._key_func.add_to_graph(ops.get_default_graph())
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/function.py", line 488, in add_to_graph
self._create_definition_if_needed()
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/function.py", line 321, in _create_definition_if_needed
self._create_definition_if_needed_impl()
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/function.py", line 338, in _create_definition_if_needed_impl
outputs = self._func(*inputs)
File "/home/leo/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/data/python/ops/grouping.py", line 279, in tf_key_func
ret = key_func(*nested_args)
TypeError: element_to_bucket_id() takes 1 positional argument but 2 were given

Here is a &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/data/python/ops/grouping.py#L143&gt;link&lt;/denchmark-link&gt;
 to the function.
Here is a code snipped to reproduce the error:
import tensorflow as tf

def input_fn():
  def generator():
    text = [[1, 2, 3],
            [3, 4, 5, 6, 7],
            [1, 2],
            [8, 9, 0, 2, 3]]
    label = [1, 2, 1, 2]

    for x, y in zip(text, label):
      yield (x, y)

  dataset = tf.data.Dataset.from_generator(generator=generator,
                                           output_shapes=(tf.TensorShape([None]), tf.TensorShape([])),
                                           output_types=(tf.int32, tf.int32))

  dataset = dataset.map(parse_example)
  dataset = dataset.apply(tf.contrib.data.bucket_by_sequence_length(element_length_func=element_length_fn,
                                                                    bucket_batch_sizes=[2, 2, 2],
                                                                    bucket_boundaries=[0, 8],
                                                                    pad_to_bucket_boundary=False))

  return dataset

def parse_example(x, y):
  return dict(
    x=x
  ), y

def element_length_fn(element):
  features, label = element
  return tf.shape(features["x"])[0]

if __name__ == '__main__':
  with tf.Session() as sess:
    dataset = input_fn()
    iter = dataset.make_one_shot_iterator()

    print(sess.run(iter.get_next()))
My Env-Specs are logged in: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/1838947/tf_env.txt&gt;tf_env.txt&lt;/denchmark-link&gt;

Thanks in advance!
	</description>
	<comments>
		<comment id='1' author='lhlmgr' date='2018-03-23T00:59:03Z'>
		&lt;denchmark-link:https://github.com/rsepassi&gt;@rsepassi&lt;/denchmark-link&gt;
 Can you take a look, please?
/cc &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 FYI.
		</comment>
		<comment id='2' author='lhlmgr' date='2018-03-23T11:37:59Z'>
		Yes, looking into it.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Mar 22, 2018 at 9:02 PM Derek Murray ***@***.***&gt; wrote:
 @rsepassi &lt;https://github.com/rsepassi&gt; Can you take a look, please?

 /cc @ebrevdo &lt;https://github.com/ebrevdo&gt; FYI.

 —
 You are receiving this because you were mentioned.


 Reply to this email directly, view it on GitHub
 &lt;#17932 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABEGW-jtSsBu9OcEFUz8J3yEIi4AdEo5ks5thEmIgaJpZM4S3plo&gt;
 .



		</comment>
		<comment id='3' author='lhlmgr' date='2018-03-23T15:59:21Z'>
		This is consistent with the behavior of all callables in  with  inputs. The function &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/data/ops/dataset_ops.py#L1769&gt;_should_unpack_args&lt;/denchmark-link&gt;
 is used to determine whether inputs to a user-supplied callable should be unpacked (i.e. called as ) and is  if the inputs are a . If the elements of a  are tuples, as they are in the example in this thread, then callables must expect the arguments to be passed unpacked.
For example, here's a Dataset where the elements are tuples and a call to map fails when the map_fn expects only 1 element.
&lt;denchmark-code&gt;    def data_gen():
      text = [[1, 2, 3], [3, 4, 5, 6, 7], [1, 2], [8, 9, 0, 2, 3]]
      label = [1, 2, 1, 2]
      for x, y in zip(text, label):
        yield (x, y)

    dataset = tf.data.Dataset.from_generator(
        generator=data_gen,
        output_shapes=(tensor_shape.TensorShape([None]), tensor_shape.TensorShape([])),
        output_types=(dtypes.int32, dtypes.int32))

    # Fails
    dataset.map(lambda el: el)
&lt;/denchmark-code&gt;

We may want to update this behavior but that's where it stands right now.
Fix right now would be to use a dict going in and apply a map to turn into a tuple afterwards.
&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
, should we look into updating the behavior of Dataset callables?
		</comment>
		<comment id='4' author='lhlmgr' date='2018-03-23T16:12:19Z'>
		&lt;denchmark-link:https://github.com/rsepassi&gt;@rsepassi&lt;/denchmark-link&gt;
 Right, that example should fail, and we can't change this even if we wanted to. It works if you instead do .
I think there might be a missing  in the  code, because making the equivalent change to &lt;denchmark-link:https://github.com/lhlmgr&gt;@lhlmgr&lt;/denchmark-link&gt;
's program doesn't fix things, i.e.:
def element_length_fn(features, label):
  return tf.shape(features["x"])[0]
...still yields the same error:

TypeError: element_to_bucket_id() takes exactly 1 argument (2 given)

		</comment>
		<comment id='5' author='lhlmgr' date='2018-03-23T19:28:56Z'>
		Yup, found the issue. Have a fix out. bucket_by_sequence_length was not correctly handling tupleized elements.
		</comment>
	</comments>
</bug>