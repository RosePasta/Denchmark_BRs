<bug id='26625' author='erikchwang' open_date='2019-03-12T18:42:57Z' closed_time='2019-03-15T15:48:41Z'>
	<summary>tf.sparse_tensor_to_dense does not have a gradient</summary>
	<description>
This issue has never been solved, why so eager to close it?
see &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/6391&gt;#6391&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/22543&gt;#22543&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='erikchwang' date='2019-03-15T15:04:42Z'>
		On a first read those two issues look different to me.
Can you put here an example of the code you think should work?
(and sorry for the unintentional closing of non-fixed issues)
		</comment>
		<comment id='2' author='erikchwang' date='2019-03-15T15:27:27Z'>
		import tensorflow as tf
indices = tf.placeholder(tf.int64, (None, 2))
values = tf.placeholder(tf.float32, (None,))
sparse_tensor = tf.SparseTensor(indices, values, (5, 7))
dense_tensor1 = tf.sparse_tensor_to_dense(sparse_tensor)
dense_tensor2 = tf.sparse_to_dense(indices, (5, 7), values)
dense_tensor3 = tf.sparse_add(tf.zeros((5, 7)), sparse_tensor)
dense_tensor4 = tf.sparse_tensor_dense_matmul(sparse_tensor, tf.zeros((7, 5)))
sum1 = tf.reduce_sum(dense_tensor1)
sum2 = tf.reduce_sum(dense_tensor2)
sum3 = tf.reduce_sum(dense_tensor3)
sum4 = tf.reduce_sum(dense_tensor4)
print(tf.gradients(sum1, values))
print(tf.gradients(sum2, values))
print(tf.gradients(sum3, values))
print(tf.gradients(sum4, values))
		</comment>
		<comment id='3' author='erikchwang' date='2019-03-15T15:41:26Z'>
		Thanks! Indeed in all of these cases the correct gradient is not None,
while now I get
```
[None] [None] [&lt;tf.Tensor
'gradients_6/SparseTensorDenseAdd_1_grad/GatherNd:0' shape=(?,)
dtype=float32&gt;] [&lt;tf.Tensor
'gradients_7/SparseTensorDenseMatMul_1/SparseTensorDenseMatMul_grad/Sum:0'
shape=(?,) dtype=float32&gt;]
```
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Fri, Mar 15, 2019 at 8:33 AM chwang ***@***.***&gt; wrote:
 import tensorflow as tf
 indices = tf.placeholder(tf.int64, (None, 2))
 values = tf.placeholder(tf.float32, (None,))
 sparse_tensor = tf.SparseTensor(indices, values, (5, 7))
 dense_tensor1 = tf.sparse_tensor_to_dense(sparse_tensor)
 dense_tensor2 = tf.sparse_to_dense(indices, (5, 7), values)
 dense_tensor3 = tf.sparse_add(tf.zeros((5, 7)), sparse_tensor)
 dense_tensor4 = tf.sparse_tensor_dense_matmul(sparse_tensor, tf.zeros((7,
 5)))
 sum1 = tf.reduce_sum(dense_tensor1)
 sum2 = tf.reduce_sum(dense_tensor2)
 sum3 = tf.reduce_sum(dense_tensor3)
 sum4 = tf.reduce_sum(dense_tensor4)
 print(tf.gradients(sum1, values))
 print(tf.gradients(sum2, values))
 print(tf.gradients(sum3, values))
 print(tf.gradients(sum4, values))

 —
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub
 &lt;#26625 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AAATxbHnalqlZvHhOWZxpq5QznPJbozrks5vW70ugaJpZM4brnr6&gt;
 .


-- 
 - Alex

		</comment>
		<comment id='4' author='erikchwang' date='2019-03-15T15:48:41Z'>
		I confirm that this has been fixed in tf nightly.
		</comment>
		<comment id='5' author='erikchwang' date='2019-03-18T17:38:20Z'>
		Thanks.
		</comment>
	</comments>
</bug>