<bug id='43068' author='aumombelli' open_date='2020-09-09T09:50:15Z' closed_time='2020-09-09T12:24:11Z'>
	<summary>Model Predict problem when used one data at a time</summary>
	<description>
System information

Have I written custom code Yes
OS Platform and Distribution : docker tensorflow/tensorflow:2.2.0-gpu
TensorFlow version (use command below): 2.2.0
Python version: 3.6.9
CUDA/cuDNN version: V10.1.243
GPU model and memory: TITAN X (Pascal) 12Go

Describe the current behavior
I am currently trying to learn the sum of 2 digits thanks to Keras.
My input is an array of 2 ints and output is one value.
The problem is in the predict function :
When using &lt;&lt; model.predict &gt;&gt; with a batch, it works perfectly !
However, when trying to predict one data at a time, &lt;&lt; model.predict &gt;&gt; doesn't work as it should and return a warning :

WARNING:tensorflow:Model was constructed with shape (None, 2) for input Tensor("input_1:0", shape=(None, 2), dtype=float32), but it was called on an input with incompatible shape (None, 1).

Describe the expected behavior
Using the exact same code in docker tensorflow/tensorflow:1.9.0-py3, both method (batch or one data at a time) gives the same results.

&lt;denchmark-link:https://colab.research.google.com/drive/1kkXVQAKHlztpqjn1XaBPNdbwJz21JOWa?usp=sharing&gt;https://colab.research.google.com/drive/1kkXVQAKHlztpqjn1XaBPNdbwJz21JOWa?usp=sharing&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='aumombelli' date='2020-09-09T10:05:32Z'>
		I have tried in colab with TF versions 2.3, nightly versions() and was able to reproduce the issue. Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/930e5b200a6aa3939fdad7b1eef7b928/untitled326.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='aumombelli' date='2020-09-09T10:13:37Z'>
		&lt;denchmark-link:https://github.com/aumombelli&gt;@aumombelli&lt;/denchmark-link&gt;
 Can you try:
&lt;denchmark-code&gt;#anormal
for i in range(5):
    print("Index: {0} X_data: {1} - Predict on X_data: {2}".format(i, x_data[i], model.predict([[x_data[i]]])))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='aumombelli' date='2020-09-09T11:11:12Z'>
		
@aumombelli Can you try:
#anormal
for i in range(5):
    print("Index: {0} X_data: {1} - Predict on X_data: {2}".format(i, x_data[i], model.predict([[x_data[i]]])))


Here is the result :

WARNING:tensorflow:Model was constructed with shape (None, 2) for input Tensor("input_1:0", shape=(None, 2), dtype=float32), but it was called on an input with incompatible shape (None, 1).
Index: 0 X_data: [2 2] - Predict on X_data: [[2.0177724]
[2.0177724]]
Index: 1 X_data: [0 5] - Predict on X_data: [[0.01705379]
[5.016993  ]]
Index: 2 X_data: [3 8] - Predict on X_data: [[3.0168335]
[8.016044 ]]
Index: 3 X_data: [0 1] - Predict on X_data: [[0.01705379]
[1.0175974 ]]
Index: 4 X_data: [0 5] - Predict on X_data: [[0.01705379]
[5.016993  ]]

The notebook has been modified accordingly.
		</comment>
		<comment id='4' author='aumombelli' date='2020-09-09T11:19:24Z'>
		I've tested in &lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 Colab. You need to try with 
		</comment>
		<comment id='5' author='aumombelli' date='2020-09-09T11:29:37Z'>
		
I've tested in @ravikyram Colab. You need to try with pip install tensorflow-gpu==2.3.0

I added !pip install tensorflow-gpu==2.3.0 to my notebook but I get the same result as earlier.
		</comment>
		<comment id='6' author='aumombelli' date='2020-09-09T12:05:55Z'>
		Yes sorry it was that on the second run of that cell the warning disappeared.
On the single predict your shape is (2,) so you could test with:
&lt;denchmark-code&gt;#anormal
for i in range(5):
    x= tf.expand_dims(x_data[i], axis=0)
    print(x.shape)
    print("Index: {0} X_data: {1} - Predict on X_data: {2}".format(i, x, model.predict(x)))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='aumombelli' date='2020-09-09T12:24:11Z'>
		It worked as expected ! Thanks &lt;denchmark-link:https://github.com/bhack&gt;@bhack&lt;/denchmark-link&gt;

If I understand correctly it seems that numpy array does not transform correctly into a tf.Tensor, is that right ?
		</comment>
		<comment id='8' author='aumombelli' date='2020-09-09T12:24:13Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43068&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43068&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='aumombelli' date='2020-09-09T12:52:49Z'>
		&lt;denchmark-link:https://github.com/aumombelli&gt;@aumombelli&lt;/denchmark-link&gt;
 Using indexing It is like:
&lt;denchmark-code&gt;#anormal
for i in range(5):
    x = x_data[None,i,:]
    x_pred = model(x, training=False)
    print("Index: {0} x: {1} - Predict on y: {2}".format(i, x, x_pred))
    y = tf.expand_dims(x_data[i],axis=0)
    y_pred = model(x,training=False)
    print("Index: {0} x: {1} - Predict on y: {2}".format(i, y, y_pred))
    assert x_pred == y_pred
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='aumombelli' date='2020-09-09T13:00:19Z'>
		Ok I understand ! Thanks a lot !
		</comment>
	</comments>
</bug>