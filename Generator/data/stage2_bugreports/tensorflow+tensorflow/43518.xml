<bug id='43518' author='peidaqi' open_date='2020-09-24T03:11:57Z' closed_time='2020-09-24T15:08:36Z'>
	<summary>Keras saved model gives different accuracy compared to the original model</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.3.0
Python version: 3.8.2
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: NVidia driver v450.66 CUDA 11.0
GPU model and memory: 2080ti 11GB

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
Describe the expected behavior
The following code is supposed to output the same accuracy from model and loaded_model, but somehow they're different.
If I run model.predict instead, they're consistent though.
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
from sklearn.model_selection import train_test_split

x = np.random.rand(10000, 10)
y = np.random.choice([0, 1], (10000, ))

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)


model = tf.keras.Sequential([
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(32, activation='relu'),
    tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(loss=tf.keras.losses.SparseCategoricalCrossentropy(), metrics=['accuracy'])

model.fit(x_train, y_train, epochs=10)

model.save('./test_model/')

loaded_model = tf.keras.models.load_model('./test_model/')

print(model.evaluate(x_test, y_test))
print(loaded_model.evaluate(x_test, y_test))
&lt;/denchmark-code&gt;

Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='peidaqi' date='2020-09-24T07:43:11Z'>
		&lt;denchmark-link:https://github.com/peidaqi&gt;@peidaqi&lt;/denchmark-link&gt;

I have tried in colab with TF nightly version and i am not seeing any issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/dbdf7583998dbe8ef9d607a59f2fbb30/untitled391.ipynb&gt;here.&lt;/denchmark-link&gt;
.Please, verify once and close the issue. Thanks!
		</comment>
		<comment id='2' author='peidaqi' date='2020-09-24T15:08:36Z'>
		Ok - so this seems like a bug in TF 2.3.0 (and below) and is fixed in the new nightly build.
		</comment>
		<comment id='3' author='peidaqi' date='2020-09-24T15:08:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43518&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43518&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>