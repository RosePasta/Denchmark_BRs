<bug id='39593' author='nitinmnsn' open_date='2020-05-16T00:11:50Z' closed_time='2020-06-19T06:53:12Z'>
	<summary>How does delayed restoration of variables in tensorflow checkpoint restore work?</summary>
	<description>
I am trying to follow the checkpointing from tensorflow's checkpoint &lt;denchmark-link:https://www.tensorflow.org/guide/checkpoint&gt;guide&lt;/denchmark-link&gt;
. I am failing to understand the exact semantics of how the variable restoration takes place. The issue that i am facing is best shown by the code bit below:
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

#defining a simple subclass of keras model. Just one dense layer is present we will try to restore the kernel and bias of this layer using the `tf.train.Checkpoint`

class Net(tf.keras.Model):
  """A simple linear model."""

  def __init__(self):
    super(Net, self).__init__()
    self.l1 = tf.keras.layers.Dense(5)
  def call(self, x):
    return self.l1(x)

net = Net()

#initializing the net by running it on a demo input
_ = net(np.arange(4).reshape(-1,1)) #model has been initalized

#checking the weights
print(net.l1.bias,net.l1.kernel)

#saving the model parameters
ckpt = tf.train.Checkpoint(netin=net)
mgr = tf.train.CheckpointManager(ckpt,'./tf_ckpt',max_to_keep=1)
mgr.save()

#trying to load just the bias of the net's parameters
initializer = tf.keras.initializers.Constant(value=1.)
restore_bias_here = tf.Variable(initial_value=initializer(shape=(5,)))
ckpt_layer = tf.train.Checkpoint(bias = restore_bias_here)
ckpt_net = tf.train.Checkpoint(l1 = ckpt_layer)
ckpt1 = tf.train.Checkpoint(netin=ckpt_net)
#queing up the restores
ckpt1.restore(tf.train.latest_checkpoint('./tf_ckpt'))
&lt;/denchmark-code&gt;

Now, here is the problem. I can restore the kernel in a delayed fashion both from ckpt_net and from ckpt_layer but it seems i can do it only once. And the behavior shifts silently. Code to show the problem:
&lt;denchmark-code&gt;#and now trying to load just the kernel but from 1. ckpt_net created previously
delayed_restore_kernel_here = tf.Variable(initial_value=initializer(shape=(1,5)))
print(delayed_restore_kernel_here) #all 1's tensor
ckpt_layer.kernel = delayed_restore_kernel_here
print(delayed_restore_kernel_here) #the variable is loaded up perfectly

#2. from #ckpt_layer created previously. But this wont succeed
delayed_restore_kernel_here = tf.Variable(initial_value=initializer(shape=(1,5)))
print(delayed_restore_kernel_here) #all 1's tensor
ckpt_net.l1.kernel = delayed_restore_kernel_here
print(delayed_restore_kernel_here) #all 1's tensor
&lt;/denchmark-code&gt;

I can run the last two steps in any order and only the first one will run. Can somebody explain to me the exact semantics of how the delayed restoration of variables in tensorflow works under the hood? Many thanks in advance
	</description>
	<comments>
		<comment id='1' author='nitinmnsn' date='2020-05-17T16:10:42Z'>
		&lt;denchmark-link:https://github.com/nitinmnsn&gt;@nitinmnsn&lt;/denchmark-link&gt;

Can you please the tensorflow version on which error is faced.
If possible please share colab gist with error faced.
		</comment>
		<comment id='2' author='nitinmnsn' date='2020-05-17T16:14:19Z'>
		tensorflow 2.2.0
ubuntu 20.04
Normal installation
		</comment>
		<comment id='3' author='nitinmnsn' date='2020-05-17T21:15:34Z'>
		&lt;denchmark-link:https://github.com/nitinmnsn&gt;@nitinmnsn&lt;/denchmark-link&gt;

I ran the code shared and both the spinets mentioned run with an output, can you please refer to &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/66d17cb4a3b823d90d6bf0a6bcaf16b5/untitled187.ipynb&gt;this gist&lt;/denchmark-link&gt;
 and let us know if this confirms your issue.
		</comment>
		<comment id='4' author='nitinmnsn' date='2020-06-05T05:47:06Z'>
		&lt;denchmark-link:https://github.com/nitinmnsn&gt;@nitinmnsn&lt;/denchmark-link&gt;

please update as per above comment
		</comment>
		<comment id='5' author='nitinmnsn' date='2020-06-12T06:09:08Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='6' author='nitinmnsn' date='2020-06-19T06:53:02Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
	</comments>
</bug>