<bug id='45340' author='adriang133' open_date='2020-12-02T14:15:36Z' closed_time='2020-12-08T07:50:25Z'>
	<summary>tf.ragged.boolean_mask not working in symbolic mode</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.15.7
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.3.0-rc2-23-gb36436b087 2.3.0
Python version: 3.6.8

Describe the current behavior
x = tf.keras.Input(shape=(101,), dtype=tf.float32)
mask = tf.where(tf.math.greater(x, 1.), True, False)
ragged_x = tf.ragged.boolean_mask(x, mask)
throws
&lt;denchmark-code&gt;ValueError: Tensor conversion requested dtype int32 for Tensor with dtype int64: &lt;tf.Tensor 'Cumsum_1:0' shape=(None,) dtype=int64&gt;
&lt;/denchmark-code&gt;

Describe the expected behavior
The above should work.
It works if x is an eager tensor.
Standalone code to reproduce the issue
See above.
&lt;denchmark-h:h2&gt;Other info / logs Include any logs or source code that would be helpful to&lt;/denchmark-h&gt;


ValueError                                Traceback (most recent call last)
 in ()
1 x = tf.keras.Input(shape=(101,), dtype=tf.float32)
2 mask = tf.where(tf.math.greater(x, 1.), True, False)
----&gt; 3 ragged_x = tf.ragged.boolean_mask(x, mask)
9 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/dispatch.py in wrapper(*args, **kwargs)
199     """Call target, and fall back on dispatchers if there is a TypeError."""
200     try:
--&gt; 201       return target(*args, **kwargs)
202     except (TypeError, ValueError):
203       # Note: convert_to_eager_tensor currently raises a ValueError, not a
/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/ragged/ragged_array_ops.py in boolean_mask(data, mask, name)
191         flattened_masked_lengths = array_ops.reshape(masked_lengths, [-1])
192         masked_values = ragged_tensor.RaggedTensor.from_row_lengths(
--&gt; 193             masked_values, flattened_masked_lengths, validate=False)
194
195         # Wrap remaining ragged dimensions.
/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/ragged/ragged_tensor.py in from_row_lengths(cls, values, row_lengths, name, validate)
473           row_lengths=row_lengths,
474           validate=validate,
--&gt; 475           preferred_dtype=_get_optional_partition_dtype(values))
476       return cls._from_row_partition(values, row_partition, validate=validate)
477
/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/ragged/row_partition.py in from_row_lengths(cls, row_lengths, validate, preferred_dtype)
392
393       row_limits = math_ops.cumsum(row_lengths)
--&gt; 394       row_splits = array_ops.concat([[0], row_limits], axis=0)
395       return cls(
396           row_splits=row_splits,
/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/dispatch.py in wrapper(*args, **kwargs)
199     """Call target, and fall back on dispatchers if there is a TypeError."""
200     try:
--&gt; 201       return target(*args, **kwargs)
202     except (TypeError, ValueError):
203       # Note: convert_to_eager_tensor currently raises a ValueError, not a
/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py in concat(values, axis, name)
1652           dtype=dtypes.int32).get_shape().assert_has_rank(0)
1653       return identity(values[0], name=name)
-&gt; 1654   return gen_array_ops.concat_v2(values=values, axis=axis, name=name)
1655
1656
/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py in concat_v2(values, axis, name)
1210     try:
1211       return concat_v2_eager_fallback(
-&gt; 1212           values, axis, name=name, ctx=_ctx)
1213     except _core._SymbolicException:
1214       pass  # Add nodes to the TensorFlow graph.
/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py in concat_v2_eager_fallback(values, axis, name, ctx)
1240         "'concat_v2' Op, not %r." % values)
1241   _attr_N = len(values)
-&gt; 1242   _attr_T, values = _execute.args_to_matching_eager(list(values), ctx)
1243   _attr_Tidx, (axis,) = _execute.args_to_matching_eager([axis], ctx, _dtypes.int32)
1244   _inputs_flat = list(values) + [axis]
/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/execute.py in args_to_matching_eager(l, ctx, default_dtype)
261       ret.append(
262           ops.convert_to_tensor(
--&gt; 263               t, dtype, preferred_dtype=default_dtype, ctx=ctx))
264       if dtype is None:
265         dtype = ret[-1].dtype
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, dtype_hint, ctx, accepted_result_types)
1473       raise ValueError(
1474           "Tensor conversion requested dtype %s for Tensor with dtype %s: %r" %
-&gt; 1475           (dtype.name, value.dtype.name, value))
1476     return value
1477
ValueError: Tensor conversion requested dtype int32 for Tensor with dtype int64: &lt;tf.Tensor 'Cumsum:0' shape=(None,) dtype=int64&gt;

	</description>
	<comments>
		<comment id='1' author='adriang133' date='2020-12-03T09:21:04Z'>
		&lt;denchmark-link:https://github.com/adriang133&gt;@adriang133&lt;/denchmark-link&gt;
,
I was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/c61bb05dd71a50b2085cbf0e5463aa50/45340.ipynb&gt;TF v2.3&lt;/denchmark-link&gt;
.
However, the issue seems to be fixed in the latest &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/13e81ba348f9d1ea9bd4f911854bac3c/45340-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. I was able to run the code without any errors. Please check the linked gist for reference. Thanks!
		</comment>
		<comment id='2' author='adriang133' date='2020-12-03T14:33:34Z'>
		Thanks &lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
!
This issue can be closed then.
		</comment>
		<comment id='3' author='adriang133' date='2020-12-08T07:50:25Z'>
		&lt;denchmark-link:https://github.com/adriang133&gt;@adriang133&lt;/denchmark-link&gt;
,
Thank you for the udpate. Closing the issue as it is fixed in the latest TF-nightly.
		</comment>
		<comment id='4' author='adriang133' date='2020-12-08T07:50:27Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45340&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45340&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>