<bug id='31361' author='lukas-w' open_date='2019-08-06T09:04:47Z' closed_time='2019-10-17T00:02:03Z'>
	<summary>UniqueV2 reports incorrect output shape</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 16.04.6 LTS
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): v2.0.0-beta0-16-g1d91213fe7 2.0.0-beta1
Python version: 3.5.2
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 10.0.130
GPU model and memory: Tesla K40C, 11441MiB

Describe the current behavior
When not using eager execution, UniqueV2 always reports its first output to have rank 1.
Describe the expected behavior
UniqueV2 should report its first output to have the same rank as its input.
Code to reproduce the issue
The bug can be exposed by forcing non-eager execution through tf.function or tf.compat.v1.disable_eager_execution(). The former is demonstrated below:
import tensorflow as tf
from tensorflow.python.ops import gen_array_ops

def unique_rank(x, axis):
    unique = gen_array_ops.unique_v2(x, axis)
    return tf.rank(unique[0])

# 2D input should produce a 2D output
x = tf.ones([2, 2])
print("UniqueV2 output 0 rank:", tf.function(unique_rank)(x, [0]))
print("UniqueV2 output 0 rank executing eagerly:", unique_rank(x, [0]))
This outputs
&lt;denchmark-code&gt;UniqueV2 output 0 rank: tf.Tensor(1, shape=(), dtype=int32)
UniqueV2 output 0 rank executing eagerly: tf.Tensor(2, shape=(), dtype=int32)
&lt;/denchmark-code&gt;

but should output
&lt;denchmark-code&gt;UniqueV2 output 0 rank: tf.Tensor(2, shape=(), dtype=int32)
UniqueV2 output 0 rank executing eagerly: tf.Tensor(2, shape=(), dtype=int32)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lukas-w' date='2019-08-07T11:45:19Z'>
		I have tried on colab with TF version 2.0 beta1,TF 2.0.0-dev20190805 and was able to reproduce the issue.Please, find the &lt;denchmark-link:https://colab.research.google.com/drive/1RpI4ba9Dg7Elu2yr4jjdOkyQoJVc6f67&gt;gist&lt;/denchmark-link&gt;
 here.Thanks!
		</comment>
		<comment id='2' author='lukas-w' date='2019-08-08T16:09:10Z'>
		&lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 I think this was broken since &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/7603480f3&gt;7603480&lt;/denchmark-link&gt;
 when uniquev2 was added.
Do you have time to work on this?
		</comment>
		<comment id='3' author='lukas-w' date='2019-08-08T16:11:53Z'>
		Tatiana, can you shepherd this from the TF ops side? The issue is that the shape inference function for uniquev2 ignores the fact that when axis is specified it preserves rank
		</comment>
		<comment id='4' author='lukas-w' date='2019-08-08T19:20:48Z'>
		I think this falls into Rasmus's domain of expertise.
		</comment>
		<comment id='5' author='lukas-w' date='2019-10-11T03:29:12Z'>
		With the latest tf-nightly the result works correctly:
# python v.py 
('UniqueV2 output 0 rank:', &lt;tf.Tensor: shape=(), dtype=int32, numpy=2&gt;)
('UniqueV2 output 0 rank executing eagerly:', &lt;tf.Tensor: shape=(), dtype=int32, numpy=2&gt;)
# python -c 'import tensorflow as tf; print(tf.version.VERSION)'
2.1.0-dev20191010
I think the issue has been resolved.
		</comment>
		<comment id='6' author='lukas-w' date='2019-10-17T00:02:03Z'>
		As &lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 mentioned, this was resolved in . &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/04693a821f4c3e3eef2a1b38088af9e5/untitled574.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist for your reference.
I am closing the issue as it was resolved in tf-nightly. Please feel free to open it if the issue persists again. Thanks!
		</comment>
		<comment id='7' author='lukas-w' date='2019-10-17T00:02:05Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/31361&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/31361&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>