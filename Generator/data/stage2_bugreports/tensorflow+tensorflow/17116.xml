<bug id='17116' author='ghost(ghost)' open_date='2018-02-19T01:31:24Z' closed_time='2018-04-07T20:35:17Z'>
	<summary>Apparent thread-safety issue in tensorflow/core/common_runtime/executor.cc</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.13.3
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): ('v1.6.0-rc1-277-g993006fa76', '1.6.0-rc1')
Python version: Python 2.7.14
Bazel version (if compiling from source): 0.10.1-homebrew
GCC/Compiler version (if compiling from source): 4.2.1
CUDA/cuDNN version: 9.1 / 7.0.5
GPU model and memory: NVIDIA GeForce GT 750M with 2 GB device memory (CUDA compute capability 3.0)
Exact command to reproduce: N/A

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Clang warns about a thread-safety issue in tensorflow/core/common_runtime/executor.cc at line 2338 which warning appears to be valid.
Here is the code around that line:
  if (parent_frame != nullptr) {
    mutex_lock paranet_frame_lock(parent_frame-&gt;mu);
    // Propagate all the dead exits to the parent frame.
    for (const Node* node : frame-&gt;dead_exits) {                         // Line 2338
      auto parent_iter_state = parent_frame-&gt;GetIteration(parent_iter);
A lock is held on parent_frame-&gt;mu, but not frame-&gt;mu.
If there is no thread safety issue, I think that a comment should be added to explain why, as it's not clear.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

tensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame-&gt;mu' [-Wthread-safety-precise]
    for (const Node* node : frame-&gt;dead_exits) {
                          ^
tensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame-&gt;mu'
tensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame-&gt;mu' [-Wthread-safety-precise]
    for (const Node* node : frame-&gt;dead_exits) {
                          ^
tensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame-&gt;mu'

	</description>
	<comments>
		<comment id='1' author='ghost(ghost)' date='2018-02-19T20:55:33Z'>
		&lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;
 : Mind taking a look? (Since you might have been looking into  lately?)
		</comment>
		<comment id='2' author='ghost(ghost)' date='2018-02-20T16:55:15Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 do you know if this is intentional? I'll take a look when I get the chance if not.
		</comment>
		<comment id='3' author='ghost(ghost)' date='2018-02-20T17:29:13Z'>
		It looks like that code is only called here on L2027:



tensorflow/tensorflow/core/common_runtime/executor.cc


        Lines 2024 to 2027
      in
      a4f1478






 if (is_frame_done) { 



   FrameState* parent_frame = input_frame-&gt;parent_frame; 



 const int64 parent_iter = input_frame-&gt;parent_iter; 



 DeleteFrame(input_frame, ready); 





I suspect that is_frame_done implies that there is only one thread operating on frame, but it doesn't look like any annotations or lock acquisitions protect that invariant.
		</comment>
		<comment id='4' author='ghost(ghost)' date='2018-03-07T13:14:25Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='5' author='ghost(ghost)' date='2018-04-07T18:26:29Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='6' author='ghost(ghost)' date='2018-04-07T20:35:17Z'>
		I think that this was fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/3d9c27742693f9859e2fb75de57fe108520de712&gt;3d9c277&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>