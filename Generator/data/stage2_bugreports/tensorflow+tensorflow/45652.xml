<bug id='45652' author='danielegrattarola' open_date='2020-12-14T11:12:50Z' closed_time='2020-12-15T20:32:39Z'>
	<summary>Can't load Model with SparseTensor inputs if it calls a Sequential model internally</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution: Linux Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.3.1
Python version: 3.7

Describe the current behavior
When using model-sublcassing to create a Model that:

Has a SparseTensor input
Uses a Sequential model as internal layer

the model cannot be loaded using tf.keras.models.load_model.
The issue is twofold, and I believe it is related to how the signature of call is computed upon saving/loading.
The first problem is that SparseTensorSpec does not have a name attribute and thus the call to



tensorflow/tensorflow/python/keras/saving/saved_model/load.py


         Line 812
      in
      dd3499e






 inputs = infer_inputs_from_restored_call_function(call_fn) 





fails when it has to deal with sparse tensors.
The second problem is that the signature of the model cannot be properly restored if it uses a Sequential model internally. This, I can't explain.
Whatever the cause, removing the Sequential model causes the load_model method to take this path instead:



tensorflow/tensorflow/python/keras/saving/saved_model/load.py


         Line 814
      in
      dd3499e






 inputs = call_fn.input_signature[0] 





thus avoiding the crash.
The title of the issue is a bit weird, I didn't know how to describe the problem concisely :D
Describe the expected behavior
A Model's signature should be independent of the sub-modules used in its call function and the saving/loading API should support SparseTensors.
I am happy to contribute code to solve this issue, but I would need some guidance on how to best proceed.
Standalone code to reproduce the issue
import tensorflow as tf
from tensorflow.keras import Model, Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.models import save_model, load_model


class Works(Model):
    def build(self, input_shape):
        self.fc = Dense(32)

    def call(self, inputs):
        a, b = inputs
        b = self.fc(b)
        return tf.sparse.sparse_dense_matmul(a, b)


class Crashes(Model):
    def build(self, input_shape):
        self.fc = Sequential([Dense(32)])  # &lt;&lt;&lt;&lt; THIS IS THE ONLY DIFFERENCE

    def call(self, inputs):
        a, b = inputs
        b = self.fc(b)
        return tf.sparse.sparse_dense_matmul(a, b)

# Inputs
a = tf.sparse.from_dense(tf.ones((10, 10)))
b = tf.ones((10, 10))

# This works OK, no Sequential model
works = Works()
works([a, b])
save_model(works, 'works')
load_model('works')

# This crashes, it uses a Sequential model
crashes = Crashes()
crashes([a, b])
save_model(crashes, 'crashes')
load_model('crashes')  # &lt;&lt;&lt;&lt; FAILS
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Traceback (most recent call last):
  File "~/dev/test.py", line 38, in &lt;module&gt;
    load_model('crashes')
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/save.py", line 187, in load_model
    return saved_model_load.load(filepath, compile, options)
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 121, in load
    path, options=options, loader_cls=KerasObjectLoader)
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/saved_model/load.py", line 633, in load_internal
    ckpt_options)
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 194, in __init__
    super(KerasObjectLoader, self).__init__(*args, **kwargs)
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/saved_model/load.py", line 130, in __init__
    self._load_all()
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 221, in _load_all
    self._finalize_objects()
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 526, in _finalize_objects
    _finalize_saved_model_layers(layers_revived_from_saved_model)
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 706, in _finalize_saved_model_layers
    inputs = infer_inputs_from_restored_call_function(call_fn)
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 985, in infer_inputs_from_restored_call_function
    spec = nest.map_structure(common_spec, spec, spec2)
  File ~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/util/nest.py", line 635, in map_structure
    structure[0], [func(*x) for x in entries],
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/util/nest.py", line 635, in &lt;listcomp&gt;
    structure[0], [func(*x) for x in entries],
  File "~/dev/tf2/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 981, in common_spec
    x.dtype, x.name)
AttributeError: 'SparseTensorSpec' object has no attribute 'name'
	</description>
	<comments>
		<comment id='1' author='danielegrattarola' date='2020-12-14T12:16:07Z'>
		It was resolved in TF 2.4 please install  pip install tensorflow==2.4.0-rc3 and run your example again.
		</comment>
		<comment id='2' author='danielegrattarola' date='2020-12-14T13:23:44Z'>
		&lt;denchmark-link:https://github.com/daniel-s-ingram&gt;@daniel-s-ingram&lt;/denchmark-link&gt;

I ran the code on nightly and tf 2.4 and do not face any issues, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/147fc3c9db3a06bcf3b06b4daa42a347/untitled482.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='danielegrattarola' date='2020-12-15T20:32:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45652&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45652&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>