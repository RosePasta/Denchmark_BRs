<bug id='34780' author='dMokaMoka' open_date='2019-12-03T02:22:03Z' closed_time='2020-05-18T04:44:30Z'>
	<summary>[FusedBatchNormGradOp] Actual shapes of outputs NOT consistent with the shapes derived by shapeFn</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):


NO


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):


Linux Ubuntu 16.04


TensorFlow installed from (source or binary):


Binary


TensorFlow version (use command below):


1.12.0


Python version:


3.6.3

Describe the current behavior
For the operator FusedBatchNormGradOp, the shape derived by shapeFn is inconsistent with the run-time shape of the actual output when set is_training = False , and this difference is caused by the obvious code. I wonder if this is a bug? In fact, I rely on the shape derived by Tensorflow to build my network...
Describe the expected behavior
The shapefn derivation gives the same result as the runtime, unless it's an so called unknown shape operator.
Code to reproduce the issue

Just as an example:


the comment line illustrates the problem

import numpy as np
import tensorflow as tf
from tensorflow.python.ops import gen_nn_ops

y_backprop=np.random.random((32,32,2,1024)).astype(np.float32)
x=np.random.random((32,32,2,1024)).astype(np.float32)
scale=np.random.random((1024)).astype(np.float32)
reserve_space_1=np.random.random((1024)).astype(np.float32)
reserve_space_2=np.random.random((1024)).astype(np.float32)
fused_batch_norm_grad_result = gen_nn_ops.fused_batch_norm_grad(y_backprop, x, scale, reserve_space_1, reserve_space_2, epsilon=0.0001, data_format="NHWC", is_training=False)

print(fused_batch_norm_grad_result)
# printed: (32, 32, 2, 1024), (1024,), (1024,), (1024,), (1024,)
fused_batch_norm_grad_result=tf.Session().run(fused_batch_norm_grad_result)
for t in fused_batch_norm_grad_result:
    print(np.shape(t))
# printed: (32, 32, 2, 1024), (1024,), (1024,), (), ()
Other info / logs
The code that causes this problem is easily found in the Compute method of FusedBatchNormGradOp as follows:
    ctx-&gt;SetOutput(1, scale_backprop);
    ctx-&gt;SetOutput(2, offset_backprop);
    ctx-&gt;SetConstantOutput(3, Tensor());
    ctx-&gt;SetConstantOutput(4, Tensor());
However, the following derivation is made in shapefn:
  // Set the correct shapes for reserve_spaces
  // so that gradients can be performed when
  // the op is in a symbolic condition.
  if (is_training) {
    c-&gt;set_output(3, c-&gt;Vector(0));
    c-&gt;set_output(4, c-&gt;Vector(0));
  } else {
    c-&gt;set_output(3, c-&gt;Vector(channel_dim));
    c-&gt;set_output(4, c-&gt;Vector(channel_dim));
  }
I noticed the comment above that says this branch is to set the proper shape for reserve_spaces, but I can't understand what that really means...
	</description>
	<comments>
		<comment id='1' author='dMokaMoka' date='2019-12-04T06:34:34Z'>
		Issue replicating for Tf-1.12 and TF-1.15 also, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/5c84d5aabb47b85a792e7c0d474336bd/34780.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='dMokaMoka' date='2020-04-24T08:39:52Z'>
		&lt;denchmark-link:https://github.com/dMokaMoka&gt;@dMokaMoka&lt;/denchmark-link&gt;
  It seems the issue is fixed now.Could you please confirm still if you are facing the same issue?.Thanks!
		</comment>
		<comment id='3' author='dMokaMoka' date='2020-05-04T03:56:04Z'>
		&lt;denchmark-link:https://github.com/dMokaMoka&gt;@dMokaMoka&lt;/denchmark-link&gt;
  Any updates regarding on this issue?.Thanks!
		</comment>
		<comment id='4' author='dMokaMoka' date='2020-05-11T04:08:09Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='dMokaMoka' date='2020-05-18T04:44:27Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='6' author='dMokaMoka' date='2020-05-18T04:44:31Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34780&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34780&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>