<bug id='35883' author='phemmer' open_date='2020-01-15T03:32:32Z' closed_time='2020-01-28T00:28:28Z'>
	<summary>AlphaDropout &amp; mixed_float16 - Op has type float32 that does not match type float16</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Fedora 31
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): v2.1.0-1-ga9af83a149 2.1.0
Python version: 3.7.5
Bazel version (if compiling from source): 0.29.1
GCC/Compiler version (if compiling from source): 8.3.1
CUDA/cuDNN version: 10.2.89 / 7.6.5.33
GPU model and memory: Nvidia GeForce GTX 1070 TI 8GB

Describe the current behavior
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/framework/op_def_library.py", line 468, in _apply_op_helper
    preferred_dtype=default_dtype)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 1290, in convert_to_tensor
    (dtype.name, value.dtype.name, value))
ValueError: Tensor conversion requested dtype float16 for Tensor with dtype float32: &lt;tf.Tensor 'Cast:0' shape=(None, 1) dtype=float32&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/tmp/test.py", line 6, in &lt;module&gt;
    dropout = tf.keras.layers.AlphaDropout(0.5)(input)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 773, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/layers/noise.py", line 202, in call
    return K.in_train_phase(dropped_inputs, inputs, training=training)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/backend.py", line 4303, in in_train_phase
    x = switch(training, x, alt)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/backend.py", line 4236, in switch
    x = control_flow_ops.cond(condition, then_expression_fn, else_expression_fn)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/util/deprecation.py", line 507, in new_func
    return func(*args, **kwargs)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/ops/control_flow_ops.py", line 1174, in cond
    return cond_v2.cond_v2(pred, true_fn, false_fn, name)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/ops/cond_v2.py", line 83, in cond_v2
    op_return_value=pred)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/framework/func_graph.py", line 978, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/layers/noise.py", line 197, in dropped_inputs
    x = inputs * kept_idx + alpha_p * (1 - kept_idx)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/ops/math_ops.py", line 902, in binary_op_wrapper
    return func(x, y, name=name)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/ops/math_ops.py", line 1201, in _mul_dispatch
    return gen_math_ops.mul(x, y, name=name)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_math_ops.py", line 6125, in mul
    "Mul", x=x, y=y, name=name)
  File "/home/phemmer/.local/lib/python3.7/site-packages/tensorflow_core/python/framework/op_def_library.py", line 504, in _apply_op_helper
    inferred_from[input_arg.type_attr]))
TypeError: Input 'y' of 'Mul' Op has type float32 that does not match type float16 of argument 'x'.
&lt;/denchmark-code&gt;

Describe the expected behavior
No exception
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.mixed_precision import experimental as mixed_precision
mixed_precision.set_policy(mixed_precision.Policy('mixed_float16'))

input = tf.keras.Input(shape=(1))
dropout = tf.keras.layers.AlphaDropout(0.5)(input)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='phemmer' date='2020-01-16T09:48:31Z'>
		&lt;denchmark-link:https://github.com/phemmer&gt;@phemmer&lt;/denchmark-link&gt;
,
Could you please try using float32 instead of mixed_float16. It works for me, please find the Gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/aa47f7d48407e665500f9c24c16fb1a8/35883.ipynb&gt;here&lt;/denchmark-link&gt;
.
For more information refer to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34782#issuecomment-562350888&gt;this&lt;/denchmark-link&gt;
 issue.
		</comment>
		<comment id='2' author='phemmer' date='2020-01-16T18:14:24Z'>
		Yes, it works, but I'm not quite sure what the intent of that test is. Tensorflow has worked with float32 for ever.
I'm also not seeing any relation to the linked issue. That issue is about compiling the model, which isn't being done in this issue (compiling will happen eventually, but error occurs before we get to that point), and the documentation already covers the need for the final layer in a model to be float32.
Lastly other layers, like Dropout and GaussianDropout, work fine with mixed_float16. It's only AlphaDropout which blows up.
...Unless the linked issue is just to refer to the immaturity of support for mixed_float16 in general, and not specifically about compilation, or loss precision.
Apologies if I'm misunderstanding something though.
		</comment>
		<comment id='3' author='phemmer' date='2020-01-18T00:47:18Z'>
		You're not misunderstanding anything, as any layer which does not work with mixed_float16 is a serious bug. Thanks for the report and short example to reproduce! I will address.
		</comment>
		<comment id='4' author='phemmer' date='2020-01-28T00:28:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35883&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35883&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>