<bug id='34070' author='louisjc' open_date='2019-11-07T13:04:19Z' closed_time='2020-01-23T10:51:13Z'>
	<summary>Keras named inputs lost with SavedModel format</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab, TF 2.0

Describe the current behavior
If I define a Keras model with named inputs (Input(name="x_embedding")), I can use a Dict as input with the original model or after saving to h5, but not with the new SavedModel format: The name of my input layer is changed from x_embedding to input_1.
Describe the expected behavior
The model loaded from SavedModel should keep the named inputs.

&lt;denchmark-link:https://colab.research.google.com/drive/19ICXHeL4tzAN9z1LCi-3Su8l5X2_NhxM&gt;https://colab.research.google.com/drive/19ICXHeL4tzAN9z1LCi-3Su8l5X2_NhxM&lt;/denchmark-link&gt;

try:
  %tensorflow_version 2.x
except Exception:
  pass
  
import tensorflow as tf
import numpy as np
from tensorflow.keras.layers import Input, Dense
from tensorflow.keras.models import Model
from tensorflow.keras.models import load_model

input_seq = Input(shape=(1,), name="x_embedding")
model = Model(inputs=input_seq, outputs=input_seq)
model.compile(optimizer="adam", loss="sparse_categorical_crossentropy")

x = {"x_embedding": np.array([0.1] * 100)}
y = np.array([0] * 100)

model.fit(x,y)

# Works with original model
res = model.evaluate(x,y)
print("model.evaluate =", res)

# Works with h5 model
model.save("my_h5Model.h5", save_format="h5")
model2 = load_model("my_h5Model.h5")
res = model2.evaluate(x,y)
print("model2.evaluate =", res)

# Doesn't work with SavedModel format
model.save("my_SavedModel", save_format="tf")
model3 = load_model("my_SavedModel")
res = model3.evaluate(x,y)
print("model3.evaluate =", res)

# Work with SavedModel format if I rename x_embedding -&gt; input_1
x2 = {"input_1": np.array([0.1] * 100)}
res = model3.evaluate(x2,y)
print("model3.evaluate =", res)
Other info / logs
ValueError: No data provided for "input_1". Need data for each key in: ['input_1']
	</description>
	<comments>
		<comment id='1' author='louisjc' date='2019-11-27T10:59:02Z'>
		Still an issue with tf-nightly==2.1.0.dev20191126
		</comment>
		<comment id='2' author='louisjc' date='2020-01-22T22:37:01Z'>
		&lt;denchmark-link:https://github.com/louisjc&gt;@louisjc&lt;/denchmark-link&gt;
 This is fixed with the latest tf-nightly(1/22): here is an updated &lt;denchmark-link:https://colab.research.google.com/drive/19ICXHeL4tzAN9z1LCi-3Su8l5X2_NhxM?usp=sharing&gt;gist&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='louisjc' date='2020-01-23T10:51:13Z'>
		Great, thanks &lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;
 !
		</comment>
		<comment id='4' author='louisjc' date='2020-01-23T10:51:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34070&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34070&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>