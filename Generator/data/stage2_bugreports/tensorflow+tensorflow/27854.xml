<bug id='27854' author='kxylu' open_date='2019-04-15T07:49:56Z' closed_time='2019-05-08T21:23:23Z'>
	<summary>Problem with Running GANEstimator: Type Error in eval_utils_impl.py</summary>
	<description>
&lt;denchmark-code&gt;
---&gt; 55   if grid_shape[0] * grid_shape[1] != int(input_tensor.shape[0]):
     56     raise ValueError("Grid shape %s incompatible with minibatch size %i." %
     57                      (grid_shape, int(input_tensor.shape[0])))

TypeError: __int__ returned non-int (type NoneType)
&lt;/denchmark-code&gt;

Source: tensorflow/contrib/gan/python/eval/python/eval_utils_impl.py
I am rebuilding GAN Estimator with MNIST Dataset:
input function is defined as:
def preprocess(img, label):
    img = tf.cast(img, dtype=tf.float32)
    img = tf.divide(img, 255.0)
    if len(img.shape) == 2:
        img = tf.expand_dims(img, 2)
    prior = tf.random_normal([64])
    return prior, img


def get_input_fn(is_train):
    if is_train:
        dataset = train
    else:
        dataset = test
    tf_dataset = tf.data.Dataset.from_tensor_slices(dataset)

    tf_dataset = tf_dataset.map(preprocess)
        
    def input_fn():
        data = tf_dataset.batch(BATCH_SIZE)
        dA_iterator = data.make_one_shot_iterator()
        prior, d_data = dA_iterator.get_next()
        
        return (prior, d_data)
    return input_fn

input_fn = get_input_fn(True)
GAN generators and discriminators:
def generator_fn(prior):
    output = tf.keras.layers.Dense(1024)(prior)
    output = tf.keras.layers.Dense(7*7*128)(output)
    output = tf.reshape(output, (-1, 7, 7, 128))
    output = tf.keras.layers.Conv2DTranspose(64, 4, 2, padding="same")(output)
    output = tf.keras.layers.Conv2DTranspose(32, 4, 2, padding="same")(output)
    output = tf.keras.layers.Conv2DTranspose(1, 4, padding="same", activation=tf.nn.tanh)(output)
    return output

def discriminator_fn(img, unused_conditioning):
    output = tf.keras.layers.Conv2D(64, 4, 2)(img)
    output = tf.keras.layers.Conv2D(128, 4, 2)(output)
    output = tf.layers.flatten(output)
    output = tf.layers.Dense(1024)(output)
    output = tf.contrib.layers.layer_norm(output)
    output = tf.layers.Dense(1)(output)
    return output
Estimator is created as:
gan_estimator = tfgan.estimator.GANEstimator(generator_fn=generator_fn, discriminator_fn=discriminator_fn,\
                             generator_loss_fn=tfgan.losses.wasserstein_generator_loss, \
                             discriminator_loss_fn=tfgan.losses.wasserstein_discriminator_loss,\
                             generator_optimizer=tf.train.AdamOptimizer(0.001, 0.5),\
                             discriminator_optimizer=tf.train.AdamOptimizer(0.0001, 0.5),\
                             add_summaries=tfgan.estimator.SummaryType.IMAGES)

gan_estimator.train(input_fn, max_steps=1000)
The environment I am running on is:
Ubuntu 16.01
Python 3.6.6
Tensorflow 1.13
	</description>
	<comments>
		<comment id='1' author='kxylu' date='2019-04-18T21:59:58Z'>
		@LutetiumX Could you provide full trace of the error. Thanks!
		</comment>
		<comment id='2' author='kxylu' date='2019-05-03T14:31:44Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='3' author='kxylu' date='2019-05-08T21:23:22Z'>
		Closing due to lack of recent activity. Please update the issue when new information becomes available, and we will open a new issue. Thanks!
		</comment>
		<comment id='4' author='kxylu' date='2019-05-08T21:23:24Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=27854&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=27854&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>