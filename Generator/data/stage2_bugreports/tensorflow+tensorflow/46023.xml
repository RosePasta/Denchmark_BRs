<bug id='46023' author='srinivasanram' open_date='2020-12-28T23:45:39Z' closed_time='2021-01-15T01:03:33Z'>
	<summary>AttributeError: module 'tensorflow_probability.python.bijectors' has no attribute 'Shift'</summary>
	<description>
On MacOS 10.13.6 (High Sierra), I get:
AttributeError: module 'tensorflow_probability.python.bijectors' has no attribute 'Shift'
% python bg1.py
2020-12-28 18:32:50.699423: I tensorflow/core/platform/cpu_feature_guard.cc:145] This TensorFlow binary is optimized with Intel(R) MKL-DNN to use the following CPU instructions in performance critical operations:  SSE4.1 SSE4.2 AVX
o enable them in non-MKL-DNN operations, rebuild TensorFlow with the appropriate compiler flags.
2020-12-28 18:32:50.699890: I tensorflow/core/common_runtime/process_util.cc:115] Creating new thread pool with default inter op setting: 4. Tune using inter_op_parallelism_threads for best performance.
Traceback (most recent call last):
File "bg1.py", line 65, in 
chol_precision_tril=true_chol_precision)
File "", line 2, in init
File "/Users/ram/opt/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_probability/python/distributions/distribution.py", line 276, in wrapped_init
default_init(self_, *args, **kwargs)
File "bg1.py", line 36, in init
tfb.Shift(shift=loc),
AttributeError: module 'tensorflow_probability.python.bijectors' has no attribute 'Shift'
====================================================================
Versions
MacOS 10.13.6 (High Sierra)
tensorflow                2.0.0           mkl_py37hda344b4_0
tensorflow-base           2.0.0           mkl_py37h66b1bf0_0
tensorflow-estimator      2.0.0              pyh2649769_0
tensorflow-probability    0.8.0                      py_0    conda-forge
jupyter_client            6.1.7                      py_0
jupyter_core              4.7.0            py37hecd8cb5_0
jupyterlab_pygments       0.1.2                      py_0
ipython                   7.19.0           py37h01d92e1_0
ipython_genutils          0.2.0              pyhd3eb1b0_1
python                    3.7.9                h26836e1_0
python-dateutil           2.8.1                      py_0
python_abi                3.7                     1_cp37m    conda-forge
====================================================================
The source-code:
&lt;denchmark-code&gt;
import os
os.environ['KMP_DUPLICATE_LIB_OK']='True'

from pprint import pprint
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

#import tensorflow as tf
#print(tf.__version__)

import tensorflow.compat.v2 as tf
tf.enable_v2_behavior()

import tensorflow_probability as tfp

sns.reset_defaults()
sns.set_context(context='talk',font_scale=0.7)
plt.rcParams['image.cmap'] = 'viridis'

#%matplotlib inline

tfd = tfp.distributions
tfb = tfp.bijectors

class MVNCholPrecisionTriL(tfd.TransformedDistribution):
  """MVN from loc and (Cholesky) precision matrix."""

  def __init__(self, loc, chol_precision_tril, name=None):
    super(MVNCholPrecisionTriL, self).__init__(
        distribution=tfd.Independent(tfd.Normal(tf.zeros_like(loc),
                                                scale=tf.ones_like(loc)),
                                     reinterpreted_batch_ndims=1),
        bijector=tfb.Chain([
            tfb.Shift(shift=loc),
            tfb.Invert(tfb.ScaleMatvecTriL(scale_tril=chol_precision_tril,
                                           adjoint=True)),
        ]),
        name=name)

def compute_sample_stats(d, seed=42, n=int(1e6)):
  x = d.sample(n, seed=seed)
  sample_mean = tf.reduce_mean(x, axis=0, keepdims=True)
  s = x - sample_mean
  sample_cov = tf.linalg.matmul(s, s, adjoint_a=True) / tf.cast(n, s.dtype)
  sample_scale = tf.linalg.cholesky(sample_cov)
  sample_mean = sample_mean[0]
  return [
      sample_mean,
      sample_cov,
      sample_scale,
  ]

dtype = np.float32
true_loc = np.array([1., -1.], dtype=dtype)
true_chol_precision = np.array([[1., 0.],
                                [2., 8.]],
                               dtype=dtype)
true_precision = np.matmul(true_chol_precision, true_chol_precision.T)
true_cov = np.linalg.inv(true_precision)

d = MVNCholPrecisionTriL(
    loc=true_loc,
    chol_precision_tril=true_chol_precision)

[sample_mean, sample_cov, sample_scale] = [
    t.numpy() for t in compute_sample_stats(d)]

print('true mean:', true_loc)
print('sample mean:', sample_mean)
print('true cov:\n', true_cov)
print('sample cov:\n', sample_cov)

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='srinivasanram' date='2020-12-29T07:55:38Z'>
		&lt;denchmark-link:https://github.com/srinivasanram&gt;@srinivasanram&lt;/denchmark-link&gt;

Can you please upgrade your tf version and let us know if you still face the issue.
Please refer to &lt;denchmark-link:https://stackoverflow.com/questions/59578283/tensorflow-probability-attributeerror-module-tensorflow-probability-has-no&gt;this issue&lt;/denchmark-link&gt;
 and let us know.
		</comment>
		<comment id='2' author='srinivasanram' date='2021-01-05T08:55:43Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='srinivasanram' date='2021-01-08T00:47:06Z'>
		I am also having this issue. I am running TF 2.3.0 and tensorflow_probability 0.11.0.
		</comment>
		<comment id='4' author='srinivasanram' date='2021-01-15T01:03:32Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='5' author='srinivasanram' date='2021-01-15T01:03:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46023&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46023&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>