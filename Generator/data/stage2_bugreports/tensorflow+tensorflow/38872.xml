<bug id='38872' author='tanguycdls' open_date='2020-04-24T15:51:34Z' closed_time='2020-05-19T05:31:17Z'>
	<summary>[TF2.2] Mixed Ragged and tensors inputs breaks function tensors spec names</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): linux
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): tf2.2 rc3
TensorFlow version (use command below):2.2 rc3 collab
Python version: google collab
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
I'm trying to save a model with two inputs:

one ragged
one tensor

both are embedded into a 3 dim vector and then summed up together. If we save that model it breaks because the tensors names are not well defined.
&lt;denchmark-code&gt;inp_tensor = Input(shape=[], ragged=False, dtype=tf.int32)
inp_ragged = Input(shape=[None, ], ragged=True, dtype=tf.int32, name='test')

out = Embedding(10, 3)(inp_tensor)
out2 = Embedding(10, 3)(inp_ragged)
out2 = Lambda(tf.reduce_sum, arguments=dict(axis=1))(out2)
summed = Add()([out, out2])
m = Model([inp_tensor, inp_ragged], summed)
m.save('/tmp/test')
&lt;/denchmark-code&gt;


ValueError: If specifying TensorSpec names for nested structures, either zero or all names have to be specified.

If we debug we find out that the non ragged tensor has a name while the two others have name=None. I tried to name the ragged_input to fix that but the issue stays the same.
&lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py(1196)_get_defun_inputs()
   1194     specified_names = [arg.name for arg in tensor_specs if arg.name]
   1195     if specified_names and len(specified_names) &lt; len(tensor_specs):
-&gt; 1196       raise ValueError("If specifying TensorSpec names for nested structures, "
   1197                        "either zero or all names have to be specified.")
   1198 

ipdb&gt; specified_names
['inputs/0']
ipdb&gt; tensor_specs
[TensorSpec(shape=(None,), dtype=tf.int32, name='inputs/0'), TensorSpec(shape=(None,), dtype=tf.int32, name=None), TensorSpec(shape=(None,), dtype=tf.int64, name=None)]
&lt;/denchmark-code&gt;

Describe the expected behavior
We should be able to save that model, the same model with two ragged inputs can be saved !

&lt;denchmark-link:https://colab.research.google.com/gist/tanguycdls/200096266d1cb0c5a6c83cbb416c1279/untitled4.ipynb&gt;https://colab.research.google.com/gist/tanguycdls/200096266d1cb0c5a6c83cbb416c1279/untitled4.ipynb&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='tanguycdls' date='2020-04-27T06:04:29Z'>
		I tried in colab with TF 2.1 and i am not seeing any issue. However i am able to reproduce the issue in colab with TF 2.2.0-rc3. Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/8e6c30bbab16d2929cae9652a30c87e7/untitled821.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='tanguycdls' date='2020-05-14T08:46:07Z'>
		Facing same issue with 2.2.0
		</comment>
		<comment id='3' author='tanguycdls' date='2020-05-18T13:59:29Z'>
		&lt;denchmark-link:https://github.com/shkarupa-alex&gt;@shkarupa-alex&lt;/denchmark-link&gt;
 seems to be fixed in the latest tf-nightly :) !
&lt;denchmark-link:https://colab.research.google.com/gist/tanguycdls/200096266d1cb0c5a6c83cbb416c1279/untitled4.ipynb#scrollTo=qWJanvalyxiJ&gt;https://colab.research.google.com/gist/tanguycdls/200096266d1cb0c5a6c83cbb416c1279/untitled4.ipynb#scrollTo=qWJanvalyxiJ&lt;/denchmark-link&gt;

I'm going to do some thorough tests to be sure.
		</comment>
		<comment id='4' author='tanguycdls' date='2020-05-18T16:39:02Z'>
		&lt;denchmark-link:https://github.com/shkarupa-alex&gt;@shkarupa-alex&lt;/denchmark-link&gt;
 Agree with &lt;denchmark-link:https://github.com/tanguycdls&gt;@tanguycdls&lt;/denchmark-link&gt;
 . Looks like this was resolved in . Please take a look at the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/fa7dabf593f61fb8bd76a5a46b7b789a/untitled4.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='5' author='tanguycdls' date='2020-05-19T05:12:31Z'>
		Yes, it's working now
		</comment>
		<comment id='6' author='tanguycdls' date='2020-05-19T05:31:16Z'>
		I am closing this issue as this was resolved. Thanks for the confirmation.
		</comment>
		<comment id='7' author='tanguycdls' date='2020-05-19T05:31:18Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38872&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38872&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='tanguycdls' date='2020-05-23T15:31:00Z'>
		fyi closed by that commit: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/d1a6976039c769423814f690661fd2c1b471b08c&gt;d1a6976&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>