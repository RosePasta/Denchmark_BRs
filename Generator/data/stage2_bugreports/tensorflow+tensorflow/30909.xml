<bug id='30909' author='tarrade' open_date='2019-07-21T15:06:29Z' closed_time='2019-07-23T09:13:06Z'>
	<summary>TF 2.0 nightly: tf.keras.estimator.model_to_estimator -&amp;gt; got an unexpected keyword argument 'use_v2_estimator'</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): YEs
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 10.14.5
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): No
TensorFlow version (use command below): tf-nightly-2.0-preview==2.0.0.dev20190721
Python version: Python 3.6.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

&lt;denchmark-code&gt;&gt;&gt;&gt; import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)
v1.12.1-6727-g97b7aa03b7 2.0.0-dev20190721
&lt;/denchmark-code&gt;

Describe the current behavior
The following code was working with some earlier release but now it is crahsing
&lt;denchmark-code&gt;estimator = tf.keras.estimator.model_to_estimator(
    keras_model = model,
    config=training_config
)
&lt;/denchmark-code&gt;

Describe the expected behavior
Should work out of the box as before
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
&lt;denchmark-code&gt;import tensorflow as tf
import tensorflow_datasets as tfds
from absl import logging

logging.set_verbosity(logging.INFO)
# Define the estimator's input_fn
STEPS_PER_EPOCH = 5
BATCH_SIZE = 64
NUM_EPOCHS = 5


def input_fn():
    datasets, ds_info = tfds.load(name='mnist', with_info=True, as_supervised=True)
    mnist_train, mnist_test = datasets['train'], datasets['test']

    BUFFER_SIZE = 10000
    BATCH_SIZE = 64

    def scale(image, label):
        image = tf.cast(image, tf.float32)
        image /= 255
    
        return image, label[..., tf.newaxis]

    train_data = mnist_train.map(scale).shuffle(BUFFER_SIZE).batch(BATCH_SIZE)
    return train_data.repeat()

# Define train &amp; eval specs
train_spec = tf.estimator.TrainSpec(input_fn=input_fn,
                                    max_steps=STEPS_PER_EPOCH * NUM_EPOCHS)
eval_spec = tf.estimator.EvalSpec(input_fn=input_fn,
                                  steps=STEPS_PER_EPOCH)

def make_model():
    return tf.keras.Sequential([
        tf.keras.layers.Conv2D(32, 3, activation='relu',
                               kernel_regularizer=tf.keras.regularizers.l2(0.02),
                               input_shape=(28, 28, 1)),
        tf.keras.layers.MaxPooling2D(),
        tf.keras.layers.Flatten(),
        tf.keras.layers.Dropout(0.1),
        tf.keras.layers.Dense(64, activation='relu'),
        tf.keras.layers.BatchNormalization(),
        tf.keras.layers.Dense(10, activation='softmax')
    ])

model = make_model()

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

#####
#strategy=None 
strategy = tf.distribute.MirroredStrategy()

# config tf.estimator to use a give strategy
training_config = tf.estimator.RunConfig(train_distribute=strategy)
#####

estimator = tf.keras.estimator.model_to_estimator(
    keras_model = model,
    config=training_config
)

tf.estimator.train_and_evaluate(estimator, train_spec, eval_spec)
&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;WARNING: Logging before flag parsing goes to stderr.
W0721 17:02:51.036228 4662060480 cross_device_ops.py:1207] There is non-GPU devices in `tf.distribute.Strategy`, not using nccl allreduce.
I0721 17:02:51.037434 4662060480 run_config.py:558] Initializing RunConfig with distribution strategies.
I0721 17:02:51.038416 4662060480 estimator_training.py:167] Not using Distribute Coordinator.

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-1-490d351436b4&gt; in &lt;module&gt;
     64 estimator = tf.keras.estimator.model_to_estimator(
     65     keras_model = model,
---&gt; 66     config=training_config
     67 )
     68 

~/anaconda-release/conda-env/env_gcp_dl_2_0_nightly/lib/python3.6/site-packages/tensorflow_core/python/keras/estimator/__init__.py in model_to_estimator_v2(keras_model, keras_model_path, custom_objects, model_dir, config, checkpoint_format)
    164       config=config,
    165       checkpoint_format=checkpoint_format,
--&gt; 166       use_v2_estimator=True)
    167 # LINT.ThenChange(//tensorflow_estimator/python/estimator/keras.py)

TypeError: model_to_estimator() got an unexpected keyword argument 'use_v2_estimator'


&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tarrade' date='2019-07-23T09:13:06Z'>
		It seems the issue was fixed in tf-nightly-2.0-preview==2.0.0.dev20190722 but only work with strategy=None  and not strategy = tf.distribute.MirroredStrategy(). I will open a separet ticket. Closing
		</comment>
		<comment id='2' author='tarrade' date='2019-07-23T09:13:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30909&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30909&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>