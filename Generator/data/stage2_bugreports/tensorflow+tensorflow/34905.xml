<bug id='34905' author='foxik' open_date='2019-12-06T16:48:03Z' closed_time='2019-12-16T19:13:08Z'>
	<summary>`experimental_relax_shapes` argument of `tf.function` does not work on instance methods</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian Stretch
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0, 2.1.0rc0
Python version: 3.5.3

Describe the current behavior
Consider the following source:
import numpy as np
import tensorflow as tf

class A:
    @tf.function(experimental_relax_shapes=True)
    def f(self, data):
        return tf.reduce_sum(data)

@tf.function(experimental_relax_shapes=True)
def f(data):
    return tf.reduce_sum(data)

a = A()
for i in range(100):
    print(a.f(np.ones(i)))
Then all calls of a.f cause retracing of A.f, even with experimental_relax_shapes=True.
Note that if
    print(f(np.ones(i)))
is used instead of a.f, the experimental_relax_shapes kicks in and the retracing stops after third call to f.
Describe the expected behavior
The experimental_relax_shapes should work also on instance method.
Code to reproduce the issue
Given above.
Other info / logs
The problem is that when creating the instance method wrapper in



tensorflow/tensorflow/python/eager/function.py


         Line 3179
      in
      746e018






 def class_method_to_instance_method(original_function, instance): 





several parameters including experimental_relax_shapes are not copied, see



tensorflow/tensorflow/python/eager/function.py


        Lines 3221 to 3225
      in
      746e018






 instance_func = type(original_function)( 



 tf_decorator.make_decorator(bound_method, bound_method_wrapper), 



 name=original_function._name, 



 autograph=original_function._autograph, 



 input_signature=original_function.input_signature) 





	</description>
	<comments>
		<comment id='1' author='foxik' date='2019-12-11T08:16:01Z'>
		I have also created the trivial pull request which passes experimental_relas_shapes to the wrapped bound methods.
		</comment>
		<comment id='2' author='foxik' date='2019-12-16T19:13:10Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34905&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34905&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>