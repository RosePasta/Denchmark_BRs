<bug id='10735' author='gongbudaizhe' open_date='2017-06-15T13:33:03Z' closed_time='2017-06-17T07:41:30Z'>
	<summary>[BUG] Get different image value each feed</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS: Centos 7
TensorFlow installed from source
Tensorflow version: both 1.1.0rc1 and 1.2.0rc1
Bazel version: 0.4.5-jdk7
CUDA 8.0/ cuDNN 5.1
GeForce GTX 1080 / 8G

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Get different values of the same feeded image.
&lt;denchmark-h:h3&gt;Source code&lt;/denchmark-h&gt;

Below is a minimal script that reproduce the problem:
import tensorflow as tf
import numpy as np
from scipy.misc import imread

test_im = some-test-img-path
im = imread(test_im)
im_batch = np.stack([im])

img_feed = tf.placeholder(tf.uint8, (None, None, None, 3))
img_mean = tf.reduce_mean(tf.to_float(img_feed))

with tf.Session() as sess:
  for i in range(10):
    img_mean_tf = sess.run(img_mean, feed_dict={img_feed: im_batch})
    img_mean_np = np.mean(im_batch)
    print('tf img mean: {}, np img mean: {}'.format(img_mean_tf, img_mean_np))
	</description>
	<comments>
		<comment id='1' author='gongbudaizhe' date='2017-06-16T08:59:42Z'>
		It works as expected in CPU though. Looks like it is related to GPU computation.
		</comment>
		<comment id='2' author='gongbudaizhe' date='2017-06-16T19:46:39Z'>
		If the difference is not large this is not a bug. Reduction operations on GPU are non-deterministic.
		</comment>
		<comment id='3' author='gongbudaizhe' date='2017-06-16T20:18:10Z'>
		&lt;denchmark-link:https://github.com/gongbudaizhe&gt;@gongbudaizhe&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/ppwwyyxx&gt;@ppwwyyxx&lt;/denchmark-link&gt;
 is correct about reproducibility. Please guantify the difference.
		</comment>
		<comment id='4' author='gongbudaizhe' date='2017-06-17T07:41:30Z'>
		Ok, so this means GPU is inherently non-deterministic... that explains a lot of things...
In terms of reproducibility, for me, the effect turns out to be minimal. Thanks guys.
		</comment>
	</comments>
</bug>