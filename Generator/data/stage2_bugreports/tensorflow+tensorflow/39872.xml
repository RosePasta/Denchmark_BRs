<bug id='39872' author='AdrienCorenflos' open_date='2020-05-26T12:01:43Z' closed_time='2020-06-10T05:13:42Z'>
	<summary>Mixing XLA and non XLA autograph triggers retracing</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): True
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux (Colab, I'm not sure what the os is)
TensorFlow installed from (source or binary): Colab
TensorFlow version (use command below): 2.2.0

Describe the current behavior
Mixing XLA (experimental_compile) and non XLA functions results in constant retracing
Describe the expected behavior
Functions inside an XLA function should inherit the option, XLA functions inside non XLA ones shouldn't retrace.
This is particularly important when relying on third-party libraries making use of the functionality.

&lt;denchmark-link:https://colab.research.google.com/drive/1PrKsKSiKyGjjmX8Itub_BKe-SEihuWMM?usp=sharing&gt;https://colab.research.google.com/drive/1PrKsKSiKyGjjmX8Itub_BKe-SEihuWMM?usp=sharing&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AdrienCorenflos' date='2020-05-27T06:14:09Z'>
		I ran the gist shared and was able to replicate the issue, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/c5ceac8ed5f3bf255ed941125576e151/untitled204.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AdrienCorenflos' date='2020-06-02T22:06:00Z'>
		&lt;denchmark-link:https://github.com/allenlavoie&gt;@allenlavoie&lt;/denchmark-link&gt;
 Any thoughts?
		</comment>
		<comment id='3' author='AdrienCorenflos' date='2020-06-02T22:25:42Z'>
		Probably outer retracing triggers inner retracing because of this entry for the cache key: 


tensorflow/tensorflow/python/eager/function.py


        Lines 2978 to 2982
      in
      5c74699






 # We want to force function retracing for each different 



 # XLAControlFlowContext, so add `xla_context_id` to the cache key. 



 tpu_context = _enclosing_xla_context() 



 if tpu_context is not None: 



 xla_context_id = id(tpu_context) 





So whoever added that might be a good person to check with.
		</comment>
		<comment id='4' author='AdrienCorenflos' date='2020-06-02T22:39:50Z'>
		&lt;denchmark-link:https://github.com/rxsang&gt;@rxsang&lt;/denchmark-link&gt;
 Do we need to put the XLA context id there? Isn't it sufficient to know whether the outer XLA context exists or not?
		</comment>
		<comment id='5' author='AdrienCorenflos' date='2020-06-02T22:40:15Z'>
		&lt;denchmark-link:https://github.com/allenlavoie&gt;@allenlavoie&lt;/denchmark-link&gt;
 Thanks!
And &lt;denchmark-link:https://github.com/AdrienCorenflos&gt;@AdrienCorenflos&lt;/denchmark-link&gt;
 thanks a lot for the report.
		</comment>
		<comment id='6' author='AdrienCorenflos' date='2020-06-02T22:49:50Z'>
		That's intended for TPU case, as we need to make sure the inner and outer XLA context match. Maybe it could be relaxed for non TPU case.

@rxsang Do we need to put the XLA context id there? Isn't it sufficient to know whether the outer XLA context exists or not?

		</comment>
		<comment id='7' author='AdrienCorenflos' date='2020-06-10T05:13:44Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39872&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39872&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>