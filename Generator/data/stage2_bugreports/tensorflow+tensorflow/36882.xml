<bug id='36882' author='GatzZ' open_date='2020-02-19T08:30:32Z' closed_time='2020-02-19T13:42:00Z'>
	<summary>Is NonMaxSuppressionV4 supportedï¼Ÿ</summary>
	<description>
System information

Linux Ubuntu 16.04
TensorFlow 2.1.0

Provide the text output from tflite_convert
&lt;denchmark-code&gt;Here is a list of operators for which you will need custom implementations: NonMaxSuppressionV4.
&lt;/denchmark-code&gt;

Code
&lt;denchmark-code&gt;selected_indices_padded,  num_valid = tf.image.non_max_suppression(boxes=boxes_squeezed,
                                                  scores=scores,
                                                  max_output_size=20,
                                                  score_threshold=0.7,
                                                  iou_threshold=0.5,
                                                  pad_to_max_output_size=True,
                                                  )
&lt;/denchmark-code&gt;

According to &lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_compatibility&gt;https://www.tensorflow.org/lite/guide/ops_compatibility&lt;/denchmark-link&gt;
,   was already supported.
However,  when I use it to build my model and try to convert it into tflite, the error came out.
I tried a solution with tf.lite.OpsSet.SELECT_TF_OPS, and the error gone.
&lt;denchmark-code&gt;converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS,
                                       tf.lite.OpsSet.SELECT_TF_OPS]
&lt;/denchmark-code&gt;

But I cannot run it properly with native TFLite intepreter... Another error showed as below:
&lt;denchmark-code&gt;RuntimeError: Regular TensorFlow ops are not supported by this interpreter. Make sure you apply/link the Flex delegate before inference.Node number 92 (FlexNonMaxSuppressionV4) failed to prepare.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='GatzZ' date='2020-02-19T10:26:22Z'>
		Use new MLIR converter:
converter.experimental_new_converter = True
		</comment>
		<comment id='2' author='GatzZ' date='2020-02-19T13:42:00Z'>
		
Use new MLIR converter:
converter.experimental_new_converter = True

It works. Thank you very much
		</comment>
		<comment id='3' author='GatzZ' date='2020-02-19T13:42:03Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36882&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36882&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>