<bug id='24593' author='ageron' open_date='2018-12-27T06:36:53Z' closed_time='2019-06-06T03:27:15Z'>
	<summary>Keras model evaluate() progress bar randomly stops before 100%</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mac OS X 10.13.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
N/A
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
VERSION=1.13.0-dev20181225 (note: this is the 2.0-preview)
GIT_VERSION=b'v1.12.0-5131-gc6f3c5dc48'
Python version:
3.6.6
Bazel version (if compiling from source):
N/A
GCC/Compiler version (if compiling from source):
N/A
CUDA/cuDNN version:
N/A
GPU model and memory:
N/A

Describe the current behavior
When evaluating a Keras model, the progress bar randomly stops before 100% (however, the loss and metrics returned by the function are correct). Also, it does not end with a newline.
Describe the expected behavior
I expect the progress bar to go up to 100% and display a newline.
Code to reproduce the issue
import tensorflow as tf
import numpy as np

np.random.seed(42)
tf.random.set_seed(42)

(X_train, y_train), (X_test, y_test) = tf.keras.datasets.mnist.load_data()
model = tf.keras.models.Sequential([
    tf.keras.layers.Flatten(input_shape=[28, 28]),
    tf.keras.layers.Dense(10, activation="softmax"),
])
model.compile(loss="sparse_categorical_crossentropy",
              optimizer="sgd", metrics=["accuracy"])

model.fit(X_train, y_train, epochs=2)
print(model.evaluate(X_test, y_test))
Other info / logs
Here is the output of this program:
&lt;denchmark-code&gt;Epoch 1/2
60000/60000 [==============================] - 2s 28us/sample - loss: 32.8388 - acc: 0.8403
Epoch 2/2
60000/60000 [==============================] - 2s 27us/sample - loss: 26.3895 - acc: 0.8683
 9792/10000 [============================&gt;.] - ETA: 0s - loss: 33.9531 - acc: 0.8363[33.969303797870886, 0.8358]
&lt;/denchmark-code&gt;

Notice that the evaluation progress bar (last line) does not go up to 100% (it stops at 9792/10000). Moreover, there is no newline at the end, so the function's returned values ([33.969303797870886, 0.8358]) are printed on the same line.
Moreover, when I run the same code again, I get a different output (only the last line differs). This time the progress bar stopped at 9088/10000, but notice that the function's results are the same as above:
&lt;denchmark-code&gt;Epoch 1/2
60000/60000 [==============================] - 2s 29us/sample - loss: 32.8388 - acc: 0.8403
Epoch 2/2
60000/60000 [==============================] - 2s 29us/sample - loss: 26.3895 - acc: 0.8683
 9088/10000 [==========================&gt;...] - ETA: 0s - loss: 34.8416 - acc: 0.8327[33.969303797870886, 0.8358]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ageron' date='2018-12-30T18:09:43Z'>
		I think the issue was that, on_batch_end() was relying on on_epoch_end() for the last step processing:



tensorflow/tensorflow/python/keras/callbacks.py


        Lines 724 to 727
      in
      8f60a38






 # Skip progbar update for the last batch; 



 # will be handled by on_epoch_end. 



 if self.verbose and self.seen &lt; self.target: 



 self.progbar.update(self.seen, self.log_values) 





but on_epoch_end() was only called for train mode:



tensorflow/tensorflow/python/keras/engine/training_arrays.py


        Lines 375 to 378
      in
      8f60a38






 if mode == ModeKeys.TRAIN: 



 # Epochs only apply to `fit`. 



 callbacks.on_epoch_end(epoch, epoch_logs) 



 progbar.on_epoch_end(epoch, epoch_logs) 





		</comment>
		<comment id='2' author='ageron' date='2018-12-30T18:10:13Z'>
		Created a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/24633&gt;#24633&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='3' author='ageron' date='2018-12-31T02:07:31Z'>
		Once again, thanks &lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 , and happy New Year! 
		</comment>
		<comment id='4' author='ageron' date='2018-12-31T06:48:50Z'>
		Happy New Yearüéâüëç!
		</comment>
		<comment id='5' author='ageron' date='2019-06-05T18:04:16Z'>
		This issue can be closed, because some commit already fixed the problem according to  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/24633&gt;#24633&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='ageron' date='2019-06-06T03:27:17Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=24593&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=24593&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>