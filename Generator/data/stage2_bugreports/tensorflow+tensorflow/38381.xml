<bug id='38381' author='py4' open_date='2020-04-09T08:52:15Z' closed_time='2020-04-26T20:20:52Z'>
	<summary>Casting from float32 to uint8 results in wrong value despite being from 0 to 255</summary>
	<description>
I'm using tensorflow-gpu 1.14 with Cuda 10 on Ubuntu 18.04. I'm running tf in eager mode.
I'm training a model using Trax. In my input processing pipeline, I read a batch of uint8 images (3-channel each value from 0 to 255) and resize them using tf.image.resize_images which results in float32 but values are still from 0 to 255. Then I cast the float32 values to uint8 :
&lt;denchmark-code&gt; print("==================")
 print("0,0,0 before cast:  ", image_target_before_cast[0][0][0])
 image_target = tf.cast(image_target_before_cast, dtype=tf.dtypes.uint8)
 print("0,0,0 after cast:  ", image_target[0][0][0])
 print("==================")
&lt;/denchmark-code&gt;

On first batch of data (16 prints but i'm bringing only one of them) everything is fine:
&lt;denchmark-code&gt;==================
0,0,0 before cast:   tf.Tensor(146.21089, shape=(), dtype=float32)
0,0,0 after cast:   tf.Tensor(146, shape=(), dtype=uint8)
==================
&lt;/denchmark-code&gt;

Now here is the weird part. From the second batch of images the problem happens:
&lt;denchmark-code&gt;==================
0,0,0 before cast:   tf.Tensor(139.61038, shape=(), dtype=float32)
0,0,0 after cast:   tf.Tensor(115, shape=(), dtype=uint8)
==================
&lt;/denchmark-code&gt;

I also tried to conver the tensor to numpy array and then cast it using  image_target_before_cast[0][0][0].numpy().astype(np.uint8) and it worked. But still don't know what is wrong with the tf cast.
Any idea what might be the issue?
	</description>
	<comments>
		<comment id='1' author='py4' date='2020-04-09T10:43:40Z'>
		&lt;denchmark-link:https://github.com/py4&gt;@py4&lt;/denchmark-link&gt;

please provide us with a simple stand alone ode for us to replicate the issue.
please refer to this &lt;denchmark-link:https://stackoverflow.com/questions/46689428/convert-np-array-of-type-float64-to-type-uint8-scaling-values&gt;link&lt;/denchmark-link&gt;
 for reference #&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/19691&gt;link2&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='py4' date='2020-04-09T23:05:25Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 It's in the middle of a project. I think I cannot provide a stand alone code to replicate issue...
I already had seen those links but I'm not using  to scale the values. the  is a float32 and all elements are between 0 to 255. So I expect to  to be able to cast to  properly.
		</comment>
		<comment id='3' author='py4' date='2020-04-13T17:16:20Z'>
		&lt;denchmark-link:https://github.com/py4&gt;@py4&lt;/denchmark-link&gt;
 Standalone code helps us to resolve the issue faster. May be you can use some public data to demonstrate the issue. I tried to mimic your issue with  and I don't see any issue. Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/b79a6df14e95f8619dfae0912e16f578/untitled82.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
Can you please play with the gist and update it to reproduce your issue. Thanks!
		</comment>
		<comment id='4' author='py4' date='2020-04-19T17:49:19Z'>
		&lt;denchmark-link:https://github.com/py4&gt;@py4&lt;/denchmark-link&gt;
 Can you please verify and close if this was resolved for you. Thanks!
		</comment>
		<comment id='5' author='py4' date='2020-04-26T18:08:37Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='6' author='py4' date='2020-04-26T20:20:52Z'>
		Closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='7' author='py4' date='2020-04-26T20:20:54Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38381&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38381&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>