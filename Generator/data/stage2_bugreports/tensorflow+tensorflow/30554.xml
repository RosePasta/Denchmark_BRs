<bug id='30554' author='aakhundov' open_date='2019-07-10T08:10:39Z' closed_time='2019-07-17T17:38:17Z'>
	<summary>Can't set an initial state of the tf.keras.layers.Bidirectional</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution: macOS 10.14.15 Darwin-18.6.0-x86_64-i386-64bit
TensorFlow installed from: binary
TensorFlow version: 1.14.0
Python version: 3.6.0

Describe the current behavior
tf.keras.layers.Bidirectional wrapped around a tf.keras.layers.LSTM instance raises a TypeError when trying to pass it an initial state (through the initial_state argument of the __call__).
Describe the expected behavior
No error is raised and the (joint) initial state is properly distributed by the Bidirectional between the underlying forward and backward LSTM instances.
Code to reproduce the issue
import tensorflow as tf

lstm = tf.keras.layers.LSTM(units=10)
bidirectional = tf.keras.layers.Bidirectional(lstm)

inputs = tf.placeholder(tf.float32, shape=[32, 15, 20])

fw_state = [tf.zeros([32, 10]), tf.zeros([32, 10])]
bw_state = [tf.zeros([32, 10]), tf.zeros([32, 10])]
initial_state = fw_state + bw_state

output = bidirectional(
    inputs=inputs,
    initial_state=initial_state)
Other info / logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File ".../test.py", line 14, in &lt;module&gt;
    initial_state=initial_state)
  File ".../lib/python3.6/site-packages/tensorflow/python/keras/layers/wrappers.py", line 592, in __call__
    return super(Bidirectional, self).__call__(inputs, **kwargs)
  File ".../lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 634, in __call__
    outputs = call_fn(inputs, *args, **kwargs)
  File ".../lib/python3.6/site-packages/tensorflow/python/keras/layers/wrappers.py", line 629, in call
    initial_state=forward_state, **kwargs)
  File ".../lib/python3.6/site-packages/tensorflow/python/keras/layers/recurrent.py", line 2533, in call
    inputs, mask=mask, training=training, initial_state=initial_state)
  File ".../lib/python3.6/site-packages/tensorflow/python/keras/layers/recurrent.py", line 678, in call
    inputs, initial_state, constants)
  File ".../lib/python3.6/site-packages/tensorflow/python/keras/layers/recurrent.py", line 787, in _process_inputs
    if len(initial_state) != len(self.states):
TypeError: object of type 'Tensor' has no len()
&lt;/denchmark-code&gt;

Similar issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/28761&gt;#28761&lt;/denchmark-link&gt;
 is resolved in the tensorflow 2.0 code. The corresponding code fix in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/2a8f9b1ccfaaebd6f9cf5b5eb972c2dafded4f5e&gt;2a8f9b1&lt;/denchmark-link&gt;
 seems to be relevant for this issue in tensorflow 1.x, too.
	</description>
	<comments>
		<comment id='1' author='aakhundov' date='2019-07-11T09:37:23Z'>
		I have tried on colab with TF version 1.14 and was able to reproduce the issue.Thanks!
		</comment>
		<comment id='2' author='aakhundov' date='2019-07-11T09:57:21Z'>
		From basic (unexhaustive) testing, and as pointed out by &lt;denchmark-link:https://github.com/aakhundov&gt;@aakhundov&lt;/denchmark-link&gt;
, simply copy/pasting the definition of the  from branch r2.0 to branch r1.14 seems to fix the issue without breaking things around. I guess a PR should be opened to do so, and CI testing should validate this. &lt;denchmark-link:https://github.com/aakhundov&gt;@aakhundov&lt;/denchmark-link&gt;
, as you identified the issue, maybe you could / should do it?
		</comment>
		<comment id='3' author='aakhundov' date='2019-07-11T10:45:37Z'>
		&lt;denchmark-link:https://github.com/pandrey-fr&gt;@pandrey-fr&lt;/denchmark-link&gt;
, I've tried the copy/paste that you'd suggested and it indeed fixed the issue, at least in my code snippet above. Regarding the PR, I see the changes in the  code from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/2a8f9b1ccfaaebd6f9cf5b5eb972c2dafded4f5e&gt;2a8f9b1&lt;/denchmark-link&gt;
 already reflected in the master branch. Does this mean that the fix will appear in the next 1.x release and we just have to wait until then?
		</comment>
		<comment id='4' author='aakhundov' date='2019-07-11T11:33:29Z'>
		Hmm, I do not know, since the master branch seems to cover both 1.x and 2.x releases (its versioning feels quite blurry to me). I would have gone for a PR to the r1.14 branch, but I do not know whether that is the right behaviour. &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
, any advice?
		</comment>
		<comment id='5' author='aakhundov' date='2019-07-11T18:42:50Z'>
		&lt;denchmark-link:https://github.com/aakhundov&gt;@aakhundov&lt;/denchmark-link&gt;
 I cannot reproduce the issue with tf-nightly. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/33931741ea0f5c161b043dbd0d0fab89/tf_keras_bidirectional_30554.ipynb&gt;gist here&lt;/denchmark-link&gt;
. This might have been resolved. Thanks!
		</comment>
		<comment id='6' author='aakhundov' date='2019-07-12T07:43:44Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 it works with tf-nightly indeed, as the fix is already in the master branch. Can the fix also be incorporated into 1.14 somehow, or should we just wait for 1.15 to be released (and use tf-nightly in the mean time)? Thank you!
		</comment>
		<comment id='7' author='aakhundov' date='2019-07-12T17:00:05Z'>
		&lt;denchmark-link:https://github.com/aakhundov&gt;@aakhundov&lt;/denchmark-link&gt;
 I think I would use tf-nightly.
&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 Any thoughts on incorporating this in 1.14? Thanks!
		</comment>
		<comment id='8' author='aakhundov' date='2019-07-17T17:05:51Z'>
		I think the 1.14 release has already been published, and we probably won't change it unless there is a dramatic issue. Given the fact that its fixed in nightly and 1.15 is not far away, probably just wait for next release?
		</comment>
		<comment id='9' author='aakhundov' date='2019-07-17T17:38:17Z'>
		&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 sure, will wait for 1.15. Thank you!
		</comment>
		<comment id='10' author='aakhundov' date='2019-07-17T17:38:18Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30554&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30554&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>