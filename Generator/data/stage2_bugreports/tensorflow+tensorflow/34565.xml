<bug id='34565' author='jamesonthecrow' open_date='2019-11-24T23:30:52Z' closed_time='2019-12-13T18:58:41Z'>
	<summary>Applying certain ImgAug augmenters inside of a `tf.py_function` causes AutoGraph errors.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 1.15.1
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0
Python version: 3.7.5
Bazel version (if compiling from source): N / A
GCC/Compiler version (if compiling from source): N / A
CUDA/cuDNN version: N / A
GPU model and memory: N / A

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
I'm currently using imgaug==0.3.0 to augment images as part of a map function applied to a tf.data.Dataset. I'm using tf.py_function to call the augmenter and it appears that Autograph is incorrectly generating ops for some of the augmenters causing the pipeline to error.
Describe the expected behavior
I'm upgrading from tf.py_func in TF 1.14 to tf.py_function TF 2.0 and it was possible to map the tf.py_func that called the augmentation onto the dataset.

Here is a minimal example, &lt;denchmark-link:https://colab.research.google.com/drive/1X6NiCnGxNFG9pAZ1Jzd7R1In8BNh9pts#scrollTo=Q_scaVKrpKwJ&gt;also runable in Colab&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;import imgaug.augmenters as iaa
import tensorflow as tf

seq = iaa.Sequential([
    # A non-offending augmenter
    iaa.Multiply(200),
    # the offending augmenter
    iaa.ChangeColorspace("HSV")
])

def augment_batch(image):

    def augment_image(image):
        return seq.augment(images=image.numpy())

    image = tf.cast(image, tf.uint8)
    image = tf.py_function(augment_image, [image], tf.uint8)
    return image

# Create a dataset and apply the augmentation.
image = tf.random.uniform((2, 256, 256, 3), minval=0, maxval=100, dtype=tf.float32)
dataset = tf.data.Dataset.from_tensor_slices((image))
dataset = dataset.batch(2)
dataset = dataset.map(augment_batch)

for record in dataset:
    break
&lt;/denchmark-code&gt;

Other info / logs
Full stack trace:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
UnknownError                              Traceback (most recent call last)
&lt;ipython-input-2-84e7acd87c82&gt; in &lt;module&gt;()
     24 dataset = dataset.map(augment_batch)
     25 
---&gt; 26 for record in dataset:
     27     break

4 frames
/tensorflow-2.0.0/python3.6/tensorflow_core/python/data/ops/iterator_ops.py in __next__(self)
    620 
    621   def __next__(self):  # For Python 3 compatibility
--&gt; 622     return self.next()
    623 
    624   def _next_internal(self):

/tensorflow-2.0.0/python3.6/tensorflow_core/python/data/ops/iterator_ops.py in next(self)
    664     """Returns a nested structure of `Tensor`s containing the next element."""
    665     try:
--&gt; 666       return self._next_internal()
    667     except errors.OutOfRangeError:
    668       raise StopIteration

/tensorflow-2.0.0/python3.6/tensorflow_core/python/data/ops/iterator_ops.py in _next_internal(self)
    649             self._iterator_resource,
    650             output_types=self._flat_output_types,
--&gt; 651             output_shapes=self._flat_output_shapes)
    652 
    653       try:

/tensorflow-2.0.0/python3.6/tensorflow_core/python/ops/gen_dataset_ops.py in iterator_get_next_sync(iterator, output_types, output_shapes, name)
   2671       else:
   2672         message = e.message
-&gt; 2673       _six.raise_from(_core._status_to_exception(e.code, message), None)
   2674   # Add nodes to the TensorFlow graph.
   2675   if not isinstance(output_types, (list, tuple)):

/usr/local/lib/python3.6/dist-packages/six.py in raise_from(value, from_value)

UnknownError: {{function_node __inference_Dataset_map_augment_batch_17}} KeyError: 'to_colorspace'
Traceback (most recent call last):

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/ops/script_ops.py", line 219, in __call__
    return func(device, token, args)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/ops/script_ops.py", line 113, in __call__
    ret = self._func(*args)

  File "/tmp/tmpu_6oegng.py", line 17, in augment_image
    retval__1 = augment_image_scope.mark_return_value(ag__.converted_call(seq.augment, augment_image_scope.callopts, (), {'images': ag__.converted_call(image.numpy, augment_image_scope.callopts, (), None, augment_image_scope)}, augment_image_scope))

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 539, in converted_call
    result = converted_f(*effective_args, **kwargs)

  File "/tmp/tmp5wnqr3ev.py", line 298, in tf__augment
    batch_aug = ag__.converted_call(self.augment_batch, augment_scope.callopts, (batch,), {'hooks': hooks}, augment_scope)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 539, in converted_call
    result = converted_f(*effective_args, **kwargs)

  File "/tmp/tmp_d1lunu_.py", line 78, in tf__augment_batch
    ag__.for_stmt(augmentables, None, loop_body, get_state_2, set_state_2, (), (), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 339, in for_stmt
    return _py_for_stmt(iter_, extra_test, body, get_state, set_state, init_vars)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 350, in _py_for_stmt
    state = body(target, *state)

  File "/tmp/tmp_d1lunu_.py", line 75, in loop_body
    aug = ag__.converted_call(ag__.converted_call(getattr, augment_batch_scope.callopts, (augseq, 'augment_%s' % (attr_name,)), None, augment_batch_scope), augment_batch_scope.callopts, (attr,), {'hooks': hooks}, augment_batch_scope)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 539, in converted_call
    result = converted_f(*effective_args, **kwargs)

  File "/tmp/tmpwzc17v74.py", line 237, in tf__augment_images
    do_return, retval_ = ag__.if_stmt(cond_10, if_true_10, if_false_10, get_state_10, set_state_10, ('do_return', 'retval_'), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpwzc17v74.py", line 216, in if_false_10
    images_result = ag__.if_stmt(cond_8, if_true_8, if_false_8, get_state_8, set_state_8, ('images_result',), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpwzc17v74.py", line 210, in if_true_8
    images_result_1 = ag__.if_stmt(cond_7, if_true_7, if_false_7, get_state_7, set_state_7, ('images_result',), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpwzc17v74.py", line 204, in if_true_7
    images_result_1 = ag__.converted_call(self._augment_images, augment_images_scope.callopts, (images_copy,), {'random_state': self.random_state, 'parents': parents_1, 'hooks': hooks}, augment_images_scope)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 539, in converted_call
    result = converted_f(*effective_args, **kwargs)

  File "/tmp/tmppisluv_j.py", line 15, in tf___augment_images
    retval_ = _augment_images_scope.mark_return_value(ag__.converted_call(self._augment_augmentables, _augment_images_scope.callopts, (images, random_state, parents, hooks, 'augment_images'), None, _augment_images_scope))

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 541, in converted_call
    result = converted_f(*effective_args)

  File "/tmp/tmpjnm069kq.py", line 56, in tf___augment_augmentables
    augmentables = ag__.if_stmt(cond_1, if_true_1, if_false_1, get_state_2, set_state_2, ('augmentables',), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpjnm069kq.py", line 50, in if_true_1
    augmentables_1, = ag__.for_stmt(order, None, loop_body, get_state_1, set_state_1, (augmentables_1,), ('augmentables',), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 339, in for_stmt
    return _py_for_stmt(iter_, extra_test, body, get_state, set_state, init_vars)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 350, in _py_for_stmt
    state = body(target, *state)

  File "/tmp/tmpjnm069kq.py", line 48, in loop_body
    augmentables_1 = ag__.converted_call(ag__.converted_call(getattr, _augment_augmentables_scope.callopts, (self[index], augfunc_name), None, _augment_augmentables_scope), _augment_augmentables_scope.callopts, (augmentables_1,), {'parents': parents + [self], 'hooks': hooks}, _augment_augmentables_scope)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 539, in converted_call
    result = converted_f(*effective_args, **kwargs)

  File "/tmp/tmpwzc17v74.py", line 237, in tf__augment_images
    do_return, retval_ = ag__.if_stmt(cond_10, if_true_10, if_false_10, get_state_10, set_state_10, ('do_return', 'retval_'), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpwzc17v74.py", line 88, in if_true_10
    do_return, retval_ = ag__.if_stmt(cond, if_true, if_false, get_state, set_state, ('do_return', 'retval_'), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpwzc17v74.py", line 83, in if_false
    images_result = ag__.converted_call(self._augment_images, augment_images_scope.callopts, (images,), {'random_state': self.random_state, 'parents': parents, 'hooks': hooks}, augment_images_scope)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 539, in converted_call
    result = converted_f(*effective_args, **kwargs)

  File "/tmp/tmpyhqkjn3y.py", line 48, in tf___augment_images
    ag__.for_stmt(ag__.converted_call(sm.xrange, _augment_images_scope.callopts, (nb_images,), None, _augment_images_scope), None, loop_body, get_state_1, set_state_1, (), (), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 339, in for_stmt
    return _py_for_stmt(iter_, extra_test, body, get_state, set_state, init_vars)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 350, in _py_for_stmt
    state = body(target, *state)

  File "/tmp/tmpyhqkjn3y.py", line 46, in loop_body
    ag__.if_stmt(cond, if_true, if_false, get_state, set_state, (), ('result[i]',))

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpyhqkjn3y.py", line 42, in if_false
    image_aug = ag__.converted_call(change_colorspace_, _augment_images_scope.callopts, (image, to_colorspace, self.from_colorspace), None, _augment_images_scope)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/impl/api.py", line 541, in converted_call
    result = converted_f(*effective_args)

  File "/tmp/tmpr5xrj81x.py", line 221, in tf__change_colorspace_
    do_return, retval_ = ag__.if_stmt(cond_6, if_true_6, if_false_6, get_state_7, set_state_7, ('do_return', 'retval_'), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 895, in if_stmt
    return _py_if_stmt(cond, body, orelse)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 1004, in _py_if_stmt
    return body() if cond else orelse()

  File "/tmp/tmpr5xrj81x.py", line 151, in if_false_6
    ag__.for_stmt(['to_colorspace', 'from_colorspace'], None, loop_body, get_state_3, set_state_3, (), (), ())

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 339, in for_stmt
    return _py_for_stmt(iter_, extra_test, body, get_state, set_state, init_vars)

  File "/tensorflow-2.0.0/python3.6/tensorflow_core/python/autograph/operators/control_flow.py", line 350, in _py_for_stmt
    state = body(target, *state)

  File "/tmp/tmpr5xrj81x.py", line 149, in loop_body
    assert ag__.converted_call(locals, change_colorspace__scope.callopts, (), None, change_colorspace__scope)[arg_name] in CSPACE_ALL, 'Expected `%s` to be one of: %s. Got: %s.' % (arg_name, CSPACE_ALL, ag__.converted_call(locals, change_colorspace__scope.callopts, (), None, change_colorspace__scope)[arg_name])

KeyError: 'to_colorspace'


	 [[{{node EagerPyFunc}}]] [Op:IteratorGetNextSync]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jamesonthecrow' date='2019-11-25T03:56:07Z'>
		This appears to be fixed in tf-nightly==2.1.0.dev20191124, but if anyone has a work around for 2.0 that would be great.
		</comment>
		<comment id='2' author='jamesonthecrow' date='2019-11-26T05:53:35Z'>
		&lt;denchmark-link:https://github.com/jamesonthecrow&gt;@jamesonthecrow&lt;/denchmark-link&gt;
 ,
Hello, as the issue is fixed in latest can you try using the same version?
Also looks like complete code is not given, please provide the same. Thanks!
		</comment>
		<comment id='3' author='jamesonthecrow' date='2019-11-26T17:01:08Z'>
		I just updated the comment with a working Colab notebook that reproduces the error. I also noticed, that the kernel only dies when imgaug==0.3.0 is used. imgaug==0.2.9 throws an error, but doesn't appear to actually kill the kernel.
		</comment>
		<comment id='4' author='jamesonthecrow' date='2019-11-29T05:59:08Z'>
		For the updated code, issue replicating in both  and.Kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/7d178d1e212fd596b1386ff3b9d1ffae/tensorflow-2-0-py_function-bug.ipynb#scrollTo=XLjFY-URu6RH&gt;gist&lt;/denchmark-link&gt;
 of colab.
		</comment>
		<comment id='5' author='jamesonthecrow' date='2019-12-06T04:18:52Z'>
		It is likely there is some existing issue in your augment_batch code that is not surfacing clearly due to autograph. Could you try annotating augment_batch with @tf.function(autograph=False) and see if you get a clearer error message?
		</comment>
		<comment id='6' author='jamesonthecrow' date='2019-12-12T10:15:34Z'>
		&lt;denchmark-link:https://github.com/jamesonthecrow&gt;@jamesonthecrow&lt;/denchmark-link&gt;
,
Can you please respond to &lt;denchmark-link:https://github.com/jaingaurav&gt;@jaingaurav&lt;/denchmark-link&gt;
's comment. Thanks!
		</comment>
		<comment id='7' author='jamesonthecrow' date='2019-12-13T18:58:41Z'>
		Given that things work fine on TF 2.1, we're just going to go with that. I'm closing this out.
		</comment>
		<comment id='8' author='jamesonthecrow' date='2019-12-13T18:58:43Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34565&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34565&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='jamesonthecrow' date='2020-12-15T09:51:45Z'>
		try something like this example is a single element of your dataset after you parse for example tf records:
&lt;denchmark-code&gt;@tf.function
def process_sample(example):
    shape = example['image'].get_shape(_
    image = tf.py_function( your_augmentation_function, inp=[example['image']], Tout=tf.float32)
    image.set_shape(shape)
    return image, example['label']
&lt;/denchmark-code&gt;

then map the transformations with dataset.map(process_sample, num_parallel_calls=tf.data.experimental.AUTOTUNE)
		</comment>
	</comments>
</bug>