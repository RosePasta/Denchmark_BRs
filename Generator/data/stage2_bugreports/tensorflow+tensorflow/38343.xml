<bug id='38343' author='karansaxena' open_date='2020-04-08T06:36:50Z' closed_time='2020-04-28T07:27:24Z'>
	<summary>RuntimeError: Can't copy Tensor with type string to device</summary>
	<description>
&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution: Ubuntu 18.04.2 LTS
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.1.0
Python version: 3.7.7
CUDA/cuDNN version: CUDA 10.2
GPU model and memory: Tesla V100-SXM2-32GB

Describe the current behavior
RuntimeError: Can't copy Tensor with type string to device /job:localhost/replica:0/task:0/device:GPU:0.
Describe the expected behavior
Runs perfectly on CPU

&lt;denchmark-link:https://tfhub.dev/google/universal-sentence-encoder-large/5&gt;https://tfhub.dev/google/universal-sentence-encoder-large/5&lt;/denchmark-link&gt;
 .
&lt;denchmark-code&gt;import tensorflow_hub as hub

embed = hub.load("https://tfhub.dev/google/universal-sentence-encoder-large/5")

with tf.device('GPU:0'):

    embeddings = embed(["The quick brown fox jumps over the lazy dog."])

print embeddings
&lt;/denchmark-code&gt;

Other info / logs
Traceback (most recent call last):
File "create_sentence_embeddings.py", line 25, in 
temp = embed(ele)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/saved_model/load.py", line 438, in _call_attribute
return instance.call(*args, **kwargs)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 568, in call
result = self._call(*args, **kwds)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 636, in _call
*args, **kwds)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py", line 2185, in canonicalize_function_inputs
self._flat_input_signature)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py", line 2240, in _convert_inputs_to_signature
value, dtype_hint=spec.dtype)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 1302, in convert_to_tensor
value, dtype=preferred_dtype, name=name, as_ref=as_ref)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py", line 317, in _constant_tensor_conversion_function
return constant(v, dtype=dtype, name=name)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py", line 258, in constant
allow_broadcast=True)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py", line 266, in _constant_impl
t = convert_to_eager_tensor(value, ctx, dtype)
File "/home/kasaxen/anaconda3/envs/qaenv/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py", line 96, in convert_to_eager_tensor
return ops.EagerTensor(value, ctx.device_name, dtype)
RuntimeError: Can't copy Tensor with type string to device /job:localhost/replica:0/task:0/device:GPU:0.
	</description>
	<comments>
		<comment id='1' author='karansaxena' date='2020-04-08T09:29:50Z'>
		&lt;denchmark-link:https://github.com/karansaxena&gt;@karansaxena&lt;/denchmark-link&gt;
,
I was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/6d6771bfe50c85641669ea0f99bf3d3a/38343-2-1.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
. However, the issue seems to be fixed with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/5ebf14eda7b2a936d60698664446c064/38343-2-2.ipynb&gt;TF v2.2.0-rc2&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='karansaxena' date='2020-04-08T18:09:49Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 yes, looks like TF v2.2.0-rc2 is working.
If I extend the list of sentences, I am consistently running into:
E tensorflow/stream_executor/cuda/cuda_event.cc:29] Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_ADDRESS: an illegal memory access was encountered
F tensorflow/core/common_runtime/gpu/gpu_event_mgr.cc:273] Unexpected Event status: 1
Aborted (core dumped)
Although this looks like a CUDA/cudnn error, but do you happen to know?
nvcc --version output:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2018 NVIDIA Corporation
Built on Sat_Aug_25_21:08:01_CDT_2018
Cuda compilation tools, release 10.0, V10.0.130
cudnn version: 7.6.5
nvidia-smi gives CUDA version as 10.2
		</comment>
		<comment id='3' author='karansaxena' date='2020-04-08T18:56:42Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 The CUDA_ERROR_ILLEGAL_ADDRESS does not come when I use the 'small' model from &lt;denchmark-link:https://tfhub.dev/google/universal-sentence-encoder/4&gt;https://tfhub.dev/google/universal-sentence-encoder/4&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='karansaxena' date='2020-04-14T17:03:10Z'>
		
@amahendrakar The CUDA_ERROR_ILLEGAL_ADDRESS does not come when I use the 'small' model from https://tfhub.dev/google/universal-sentence-encoder/4.

&lt;denchmark-link:https://github.com/karansaxena&gt;@karansaxena&lt;/denchmark-link&gt;
,
Regarding this, could you please create a new issue from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;this link&lt;/denchmark-link&gt;
 and close this one, so that we can track it there. Thanks!
		</comment>
		<comment id='5' author='karansaxena' date='2020-04-21T10:45:35Z'>
		Any updates regarding this issue? Thanks!
		</comment>
		<comment id='6' author='karansaxena' date='2020-04-22T17:01:21Z'>
		Getting same error.  Also wondering if the following behavior happens with anyone else.
Ubuntu 18.04.4 LTS/CUDA 10.2, v10.2.89/Tesla V100-SXM2-16GB/Python 3.6.6/TF 2.1.0
Surprisingly not only can I work around with
with tf.device('/device:CPU:0'):
instead of
with tf.device('/device:GPU:0'):
my nvidia-smi shows usage of the GPU even though I called the CPU. The gpu usage is showing usage at a level that I would have expected had I explicitly called for use of the GPU.
Could this be a problem with tf.device()? Or is  tf.device() just no longer needed?
		</comment>
		<comment id='7' author='karansaxena' date='2020-04-28T07:27:21Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='8' author='karansaxena' date='2020-04-28T07:27:25Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38343&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38343&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='karansaxena' date='2020-04-28T07:28:22Z'>
		&lt;denchmark-link:https://github.com/pjherron&gt;@pjherron&lt;/denchmark-link&gt;
,
Could you please create a new issue from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;this link&lt;/denchmark-link&gt;
 and fill in the issue template, so that we can track it there. Thanks!
		</comment>
	</comments>
</bug>