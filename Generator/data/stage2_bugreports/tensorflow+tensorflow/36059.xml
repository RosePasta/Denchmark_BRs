<bug id='36059' author='nauyan' open_date='2020-01-20T10:44:21Z' closed_time='2020-06-01T12:10:55Z'>
	<summary>Cannot convert between a TensorFlowLite buffer with 1392640 bytes and a Java Buffer with 4177920 bytes.</summary>
	<description>
I am using Tensorflow.Lite.Support function for Inference of a model that takes two input and gives output in the form of Image. The first input is an RGB image whereas the second image is a single-channel image.When I run the application for inference I get the error that is:
Cannot convert between a TensorFlowLite buffer with 1392640 bytes and a Java Buffer with 4177920 bytes.
I have attached my code snippet below:
&lt;denchmark-code&gt;protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

        try {
            tflite = new Interpreter(loadModelFile(MainActivity.this, "converted_model.tflite"));


            Bitmap Image = getBitmapFromAsset(this,"001.png");
            Bitmap Mask = getBitmapFromAsset(this,"tmp_mask.png");

            int imageTensorIndex = 0;
            int[] imageShape = tflite.getInputTensor(imageTensorIndex).shape(); // {1, height, width, 3}
            int imageSizeY = imageShape[1];
            int imageSizeX = imageShape[2];
            DataType imageDataType = tflite.getInputTensor(imageTensorIndex).dataType();

            TensorImage inputImageBuffer = new TensorImage(imageDataType);
            inputImageBuffer.load(Image);

            int imageTensorIndex1 = 1;
            int[] imageShape1 = tflite.getInputTensor(imageTensorIndex1).shape(); // {1, height, width, 3}
            int imageSizeY1 = imageShape1[1];
            int imageSizeX1 = imageShape1[2];
            DataType imageDataType1 = tflite.getInputTensor(imageTensorIndex1).dataType();

            TensorImage inputImageBuffer1 = new TensorImage(imageDataType1);
            inputImageBuffer1.load(Mask);


            int OutputTensorIndex = 0;
            int[] OutputShape =
                    tflite.getOutputTensor(OutputTensorIndex).shape(); // {1, NUM_CLASSES}
            DataType OutputDataType = tflite.getOutputTensor(OutputTensorIndex).dataType();

            TensorBuffer outputBuffer = TensorBuffer.createFixedSize(OutputShape, OutputDataType);

            Object[] Inputs = {inputImageBuffer.getBuffer(),inputImageBuffer1.getBuffer()};

            Map&lt;Integer, Object&gt; outputs = new HashMap&lt;&gt;();
            outputs.put(0,outputBuffer);
            tflite.runForMultipleInputsOutputs(Inputs, outputs);

            Toast.makeText(this,"Working",Toast.LENGTH_LONG).show();
  
        } catch (IOException e) {
            Toast.makeText(this,"Failed",Toast.LENGTH_LONG).show();
            e.printStackTrace();
        }
    }

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nauyan' date='2020-01-21T07:01:02Z'>
		The detailed error log is:
&lt;denchmark-code&gt;2020-01-21 11:59:21.375 12800-12800/? E/AndroidRuntime: FATAL EXCEPTION: main
    Process: com.example.inpainting, PID: 12800
    java.lang.RuntimeException: Unable to start activity ComponentInfo{com.example.inpainting/com.example.inpainting.MainActivity}: java.lang.IllegalArgumentException: Cannot convert between a TensorFlowLite buffer with 1392640 bytes and a Java Buffer with 4177920 bytes.
        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2817)
        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2892)
        at android.app.ActivityThread.-wrap11(Unknown Source:0)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593)
        at android.os.Handler.dispatchMessage(Handler.java:105)
        at android.os.Looper.loop(Looper.java:164)
        at android.app.ActivityThread.main(ActivityThread.java:6541)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
     Caused by: java.lang.IllegalArgumentException: Cannot convert between a TensorFlowLite buffer with 1392640 bytes and a Java Buffer with 4177920 bytes.
        at org.tensorflow.lite.Tensor.throwIfShapeIsIncompatible(Tensor.java:332)
        at org.tensorflow.lite.Tensor.throwIfDataIsIncompatible(Tensor.java:305)
        at org.tensorflow.lite.Tensor.setTo(Tensor.java:123)
        at org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:148)
        at org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:296)
        at com.example.inpainting.MainActivity.onCreate(MainActivity.java:119)
        at android.app.Activity.performCreate(Activity.java:6975)
        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1213)
        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2770)
        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2892) 
        at android.app.ActivityThread.-wrap11(Unknown Source:0) 
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593) 
        at android.os.Handler.dispatchMessage(Handler.java:105) 
        at android.os.Looper.loop(Looper.java:164) 
        at android.app.ActivityThread.main(ActivityThread.java:6541) 
        at java.lang.reflect.Method.invoke(Native Method) 
        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240) 
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767) 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='nauyan' date='2020-01-24T06:49:26Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 any update?
		</comment>
		<comment id='3' author='nauyan' date='2020-02-06T07:03:47Z'>
		&lt;denchmark-link:https://github.com/nauyan&gt;@nauyan&lt;/denchmark-link&gt;
  I'm also facing same issue. Did you resolve this issue ?
		</comment>
		<comment id='4' author='nauyan' date='2020-02-06T07:13:50Z'>
		&lt;denchmark-link:https://github.com/Ehtasha&gt;@Ehtasha&lt;/denchmark-link&gt;
 No not yet.
		</comment>
		<comment id='5' author='nauyan' date='2020-02-11T11:19:47Z'>
		&lt;denchmark-link:https://github.com/nauyan&gt;@nauyan&lt;/denchmark-link&gt;
 Any update for this issue?
		</comment>
		<comment id='6' author='nauyan' date='2020-02-12T05:06:58Z'>
		&lt;denchmark-link:https://github.com/Dark-Monk&gt;@Dark-Monk&lt;/denchmark-link&gt;
 Nope
		</comment>
		<comment id='7' author='nauyan' date='2020-02-12T06:05:06Z'>
		&lt;denchmark-link:https://github.com/Dark-Monk&gt;@Dark-Monk&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/nauyan&gt;@nauyan&lt;/denchmark-link&gt;

If you are using runSegmentationOnBinary method then replace bellow lines
Replace bellow line
var convertedBytes = Uint8List(1 * inputSize * inputSize * 3);
with
var convertedBytes = Uint8List(4 * 1 * inputSize * inputSize * 3);
		</comment>
		<comment id='8' author='nauyan' date='2020-02-12T06:23:49Z'>
		&lt;denchmark-link:https://github.com/Ehtasha&gt;@Ehtasha&lt;/denchmark-link&gt;
 I am using Java instead of kotlin seconldy I am using 
		</comment>
		<comment id='9' author='nauyan' date='2020-02-12T07:01:54Z'>
		Okey I'm integrating this using Flutter and binary function is available there.
But is java also multiple with 4 where you specify the image size.
Above inputSize represent the image dimention.
(4 * 1 * 128* 128 * 3)
		</comment>
		<comment id='10' author='nauyan' date='2020-02-12T07:21:37Z'>
		&lt;denchmark-link:https://github.com/Ehtasha&gt;@Ehtasha&lt;/denchmark-link&gt;
 Can you please point out where should I make changes in the above code?
		</comment>
		<comment id='11' author='nauyan' date='2020-02-12T07:29:51Z'>
		&lt;denchmark-link:https://github.com/Ehtasha&gt;@Ehtasha&lt;/denchmark-link&gt;
 ... Appreciate the help but I am already doing this and even tried this (1 * inputSize * inputSize * 3) for Quantized model but didn't worked. I am actually using  the sample app with my custom model created via firebase console Auto ML. The sample app works for its detect model.
int numBytesPerChannel; if (isQuantized) { numBytesPerChannel = 1; // Quantized } else { numBytesPerChannel = 4; // Floating point } d.imgData = ByteBuffer.allocateDirect(1 * d.inputSize * d.inputSize * 3 * numBytesPerChannel);
		</comment>
		<comment id='12' author='nauyan' date='2020-02-12T07:32:16Z'>
		&lt;denchmark-link:https://github.com/Dark-Monk&gt;@Dark-Monk&lt;/denchmark-link&gt;
 I am have tried the same but doesn't work
		</comment>
		<comment id='13' author='nauyan' date='2020-02-13T12:04:53Z'>
		&lt;denchmark-link:https://github.com/nauyan&gt;@nauyan&lt;/denchmark-link&gt;

I'm integrating my model in flutter app using tflite plugin not in android native.
In flutter binary method is available.
I will try to implement this in android also and then update if this work there.
		</comment>
		<comment id='14' author='nauyan' date='2020-02-14T07:00:41Z'>
		&lt;denchmark-link:https://github.com/Ehtasha&gt;@Ehtasha&lt;/denchmark-link&gt;
 sure that would be nice.
		</comment>
		<comment id='15' author='nauyan' date='2020-04-08T22:28:20Z'>
		any update? Would like to know what change need to be made in order to run inference on grayscale image.
		</comment>
		<comment id='16' author='nauyan' date='2020-05-12T21:53:07Z'>
		&lt;denchmark-link:https://github.com/nauyan&gt;@nauyan&lt;/denchmark-link&gt;
 Apologies for the delay in response. Is this still an issue?
		</comment>
		<comment id='17' author='nauyan' date='2020-05-19T22:26:11Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='18' author='nauyan' date='2020-05-25T12:10:09Z'>
		I had the same problem and found a solution.
Inspect your model using Netron. View model properties using View -&gt; Model Properties.
If, for inputs, you have individual elements, see their type. It will look something like this:
type:float32[1,1]
This implies that each input is 1 array of 1 element which can be represented with a ByteBuffer in JAVA.
So, say you have a list of 10 inputs, each showing type:float32[1,1], then your input object would look like this:
Object[] input = new Object[10];
for (int i = 0; i &lt; 10; i++) {
            ByteBuffer temp = ByteBuffer.allocateDirect(4); // Allocate with size of float
            temp.putFloat(inputData[i]); // May be an array containing actual values
            input[i] = temp;
 }

My output, according to Netron looked like this:
type:float32[1,1]
So, in JAVA, it would be:
ByteBuffer identity = ByteBuffer.allocateDirect(4);
Map output = new TreeMap&lt;&gt;();
output.put(0, identity);

Since these qualify as multiple inputs, you will have to use:
interpreter.runForMultipleInputsOutputs(input, output);
Hope this helps
		</comment>
		<comment id='19' author='nauyan' date='2020-06-01T12:10:54Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='20' author='nauyan' date='2020-06-01T12:10:56Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36059&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36059&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>