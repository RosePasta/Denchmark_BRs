<bug id='12059' author='cceyda' open_date='2017-08-06T13:24:21Z' closed_time='2017-10-02T17:31:10Z'>
	<summary>tfdbg does not work with sparse tensors</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 14.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): ('v1.2.0-5-g435cdfc', '1.2.1')
Python version:  Python 2.7.6
Bazel version (if compiling from source):
CUDA/cuDNN version: 8.0.61 / 5.1.10
GPU model and memory: Nvidia  TITAN X (Pascal) 12G
Exact command to reproduce: python sparse_debug.py --debug

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

There seems to be a bug using tensorflow debugger with sparse tensors. Below is just a simple example  it fails when run with or without the  option. It works when LocalCLIDebugWrapperSession line is removed. This prevents the use of the debugger while using sparse_placeholders, unless I'm missing something.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/6110&gt;This issue&lt;/denchmark-link&gt;
 also reports the same error, but isn't related to tfdbg.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

sparse_debug.py
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.python import debug as tf_debug
a=tf.sparse_placeholder(tf.float32,shape=(None,5,5),name='tensor1')
b=tf.sparse_placeholder(tf.float32,shape=(None,5,5),name='tensor2')
add=tf.sparse_add(a,b)

sess = tf.Session()
sess = tf_debug.LocalCLIDebugWrapperSession(sess)

a_val=([[0,0,1],[0,0,2]],[1,2],(1,5,5))
b_val=([[0,0,1],[0,0,2]],[1,2],(1,5,5))
res=sess.run(add,feed_dict={a:a_val,b:b_val})
&lt;/denchmark-code&gt;

Traceback
&lt;denchmark-code&gt;  File "sparse_debug.py", line 12, in &lt;module&gt;
    res=sess.run(add,feed_dict={a:a_val,b:b_val})
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/debug/wrappers/framework.py", line 411, in run
    self._run_call_count))
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/debug/wrappers/local_cli_wrapper.py", line 189, in on_run_start
    request.feed_dict)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/debug/wrappers/local_cli_wrapper.py", line 487, in _update_run_calls_state
    self._tensor_filters)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/debug/cli/cli_shared.py", line 273, in get_run_start_intro
    feed_dict_lines.append(feed_key.name)
AttributeError: 'SparseTensor' object has no attribute 'name'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='cceyda' date='2017-08-06T13:42:36Z'>
		Thanks for reporting this issue. I can reproduce it at HEAD. Will work on it.
		</comment>
		<comment id='2' author='cceyda' date='2017-09-26T18:13:11Z'>
		Why is it closed?
The above example gives me the same error.
I am using Python 3.5.2.
Below is what shows after running tf_env_collect.sh
== cat /etc/issue ===============================================
Linux test-machine 4.4.0-79-generic &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/100&gt;#100&lt;/denchmark-link&gt;
-Ubuntu SMP Wed May 17 19:58:14 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
VERSION="16.04.3 LTS (Xenial Xerus)"
VERSION_ID="16.04"
VERSION_CODENAME=xenial
== are we in docker =============================================
No
== compiler =====================================================
c++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
== uname -a =====================================================
Linux test-machine 4.4.0-79-generic &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/100&gt;#100&lt;/denchmark-link&gt;
-Ubuntu SMP Wed May 17 19:58:14 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
== check pips ===================================================
numpy (1.13.1)
protobuf (3.4.0)
tensorflow (1.3.0)
tensorflow-tensorboard (0.1.6)
== check for virtualenv =========================================
True
== tensorflow import ============================================
tf.VERSION = 1.3.0
tf.GIT_VERSION = v1.3.0-rc2-20-g0787eee
tf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee
Sanity check: array([1], dtype=int32)
== env ==========================================================
LD_LIBRARY_PATH is unset
DYLD_LIBRARY_PATH is unset
== nvidia-smi ===================================================
./tf_env_collect.sh: line 105: nvidia-smi: command not found
== cuda libs  ===================================================
		</comment>
		<comment id='3' author='cceyda' date='2017-09-26T18:28:14Z'>
		&lt;denchmark-link:https://github.com/xiaohan2012&gt;@xiaohan2012&lt;/denchmark-link&gt;
 I can confirm that. Sorry about the inconvenience. Will push a fix soon.
		</comment>
		<comment id='4' author='cceyda' date='2017-09-26T18:42:15Z'>
		This is a regression related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/73a8755cdfd7bd74d626eee35cc58a3ddb2198e6#diff-d04e2893c412aa1a1765a1c8b53158a6&gt;73a8755#diff-d04e2893c412aa1a1765a1c8b53158a6&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='cceyda' date='2017-09-26T19:29:40Z'>
		Sorry, I don't understand. Is that a fix?
		</comment>
		<comment id='6' author='cceyda' date='2017-09-26T19:30:43Z'>
		No. That was just a note about why this bug occurred again. Stay tuned for a fix.
		</comment>
		<comment id='7' author='cceyda' date='2018-05-31T02:54:13Z'>
		is it fixed?
		</comment>
		<comment id='8' author='cceyda' date='2018-05-31T13:18:06Z'>
		&lt;denchmark-link:https://github.com/lnisre&gt;@lnisre&lt;/denchmark-link&gt;
 yes. The referred commit above should have fixed this issue. This fix is available in the latest python pip release of TensorFlow.
		</comment>
	</comments>
</bug>