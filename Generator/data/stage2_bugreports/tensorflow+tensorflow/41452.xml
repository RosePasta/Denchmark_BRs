<bug id='41452' author='danielfllaneza' open_date='2020-07-16T13:28:23Z' closed_time='2020-07-20T16:42:33Z'>
	<summary>InvalidArgumentError: Only ranks up to 5 supported</summary>
	<description>
Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS inux release 7.6.1810
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.14.0
Python version: 3.7.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: V9.1.85
GPU model and memory: Tesla K80 24C
I am working with Keras to build the following (simplified) model:
&lt;denchmark-code&gt;class MyModel():
   def __init__(self):
       pass
   
   def build_model(self):
       inp = Input(shape = self.outputs.shape)
        
       x = Dense(128, activation = 'elu')(inp) # We'll start exploring with one hidden layer
       outp = Dense(1, activation = 'elu')(x)
        
       self.model = Model(inputs = inp, outputs = outp)

       self.model.compile(loss = dice_loss,
                            optimizer = Adam(),
                            metrics = [dice_coef])

   def run_model(self):
      # For the sake of simplicity
      self.outputs = np.random.rand(8,64,12,86,98,1)      

      # labels shape = (64, 12, 86, 98) to get (1,64,12,86,98)
      self.labels = np.expand_dims(self.labels, axis = (0,-1))
      # outputs shape (8,64,12,86,98,1) to -&gt; (1,64,12,86,98,8)
      self.outputs = np.swapaxes(self.outputs, 0,-1)
      
      self.build_model()

      self.model.fit([self.outputs, self.labels],
                                batch_size = 1,
                                epochs = 200)
&lt;/denchmark-code&gt;

However, upon trying to fit the model, as:
&lt;denchmark-code&gt;model = MyModel()
model.run_model()
&lt;/denchmark-code&gt;

The following error appears:
&lt;denchmark-code&gt;  File "/home/kdqm927/miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_v1.py", line 785, in fit
    use_multiprocessing=use_multiprocessing)
  File "/home/kdqm927/miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_arrays.py", line 634, in fit
    shuffle=shuffle)
  File "/home/kdqm927/miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_v1.py", line 2308, in _standardize_user_data
    batch_size=batch_size)
  File "/home/kdqm927/miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_v1.py", line 2335, in _standardize_tensors
    exception_prefix='input')
  File "/home/kdqm927/miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_utils.py", line 573, in standardize_input_data
    'with shape ' + str(data_shape))
ValueError: Error when checking input: expected input_1 to have 7 dimensions, but got array with shape (1, 64, 12, 86, 98, 8)
&lt;/denchmark-code&gt;

If I tweak the code by adding another dimension to self.outputs, following the exception from the previous error:
&lt;denchmark-code&gt;self.model.fit([np.expand_dims(self.outputs, axis = 0), self.labels],
                                batch_size = 1,
                                epochs = 200)
&lt;/denchmark-code&gt;

The error I get is:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "./file.py", line 257, in &lt;module&gt;
    s.fit_metamodel('outputs_validation_arr')
  File "./file.py", line 157, in fit_metamodel
    callbacks = callbacks)
  File "/home/.../miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_v1.py", line 785, in fit
    use_multiprocessing=use_multiprocessing)
  File "/home/.../miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_arrays.py", line 666, in fit
    steps_name='steps_per_epoch')
  File "/home/.../miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_arrays.py", line 386, in model_iteration
    batch_outs = f(ins_batch)
  File "/home/.../miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/keras/backend.py", line 3632, in __call__
    run_metadata=self.run_metadata)
  File "/home/.../miniconda3/envs/segment/lib/python3.7/site-packages/tensorflow/python/client/session.py", line 1472, in __call__
    run_metadata_ptr)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Only ranks up to 5 supported: [1,1,64,12,86,98,128]
	 [[{{node dense/BiasAdd}}]]
&lt;/denchmark-code&gt;

EDIT
TensorFlow version (use command below): 2.2.0
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='danielfllaneza' date='2020-07-16T14:45:48Z'>
		&lt;denchmark-link:https://github.com/danielfllaneza&gt;@danielfllaneza&lt;/denchmark-link&gt;

I ran the code shared by you, itseems incomplete, please find the error faced in &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/756f1fd9af25d0aa7a1994bad8e34818/untitled282.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
Meanwhile as suggested in the &lt;denchmark-link:https://github.com/keras-team/keras/issues/10053#issuecomment-424091976&gt;link&lt;/denchmark-link&gt;
 can you try to reshape
&lt;denchmark-link:https://stackoverflow.com/questions/41563720/error-when-checking-model-input-expected-convolution2d-input-1-to-have-4-dimens&gt;link&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://datascience.stackexchange.com/questions/55975/valueerror-error-when-checking-input-expected-input-1-to-have-4-dimensions-bu&gt;link1&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33074#issuecomment-541574596&gt;link2&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='danielfllaneza' date='2020-07-16T15:34:46Z'>
		Oh, I forgot mocking labels, for the sake of simplicity we can create self.labels too, so the code would be:
&lt;denchmark-code&gt;class MyModel():
   def __init__(self):
       pass
   
   def build_model(self):
       inp = Input(shape = self.outputs.shape)
        
       x = Dense(128, activation = 'elu')(inp) # We'll start exploring with one hidden layer
       outp = Dense(1, activation = 'elu')(x)
        
       self.model = Model(inputs = inp, outputs = outp)

       self.model.compile(loss = dice_loss,
                            optimizer = Adam(),
                            metrics = [dice_coef])

   def run_model(self):
      # For the sake of simplicity
      self.outputs = np.random.rand(8,64,12,86,98,1)    
      self.labels = np.random.rand(64, 12, 86, 98)

      # labels shape = (64, 12, 86, 98) to get (1,64,12,86,98)
      self.labels = np.expand_dims(self.labels, axis = (0,-1))
      # outputs shape (8,64,12,86,98,1) to -&gt; (1,64,12,86,98,8)
      self.outputs = np.swapaxes(self.outputs, 0,-1)
      
      self.build_model()

      self.model.fit([self.outputs, self.labels],
                                batch_size = 1,
                                epochs = 200)
&lt;/denchmark-code&gt;

Also, dice_loss and dice_coeff loss should be added, which is defined as follows:
&lt;denchmark-code&gt;def dice_coef(y_true, y_pred, smooth=1):
    
    y_true_f =  K.cast(K.flatten(y_true), dtype='float32')
    y_pred_f =  K.cast(K.flatten(y_pred), dtype='float32')

    intersection = y_true_f * y_pred_f
    score = (2. * K.sum(intersection) * smooth) / (K.sum(y_true_f) + K.sum(y_pred_f) + smooth)

    return score

def dice_loss(y_true, y_pred, smooth=1):
    return -dice_coef(y_true, y_pred)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='danielfllaneza' date='2020-07-17T06:08:35Z'>
		That's not a bug, but an error in your code.
The input_shape of your model is (None,1,64,12,86,98,8), but the shape of x data you feed into it is (1,64,12,86,98,8). They don't match.
In Tensorflow2+ or keras, all the model will leave the first dimension of data's shape for batch-size, for example, one single sample of X has a shape (8,8),  corresponding, the input-shape of model will be (None, 8, 8), where "None" stands for "batch-size" .
		</comment>
		<comment id='4' author='danielfllaneza' date='2020-07-17T08:06:43Z'>
		&lt;denchmark-link:https://github.com/danielfllaneza&gt;@danielfllaneza&lt;/denchmark-link&gt;

Can you please follow the links shared, the issue reported is due to error in your code.
		</comment>
		<comment id='5' author='danielfllaneza' date='2020-07-17T13:21:03Z'>
		Thanks for your replies.
I have tried the following:

#10053
as suggested by Dref360

&lt;denchmark-code&gt;# method def run_model
(...)
self.outputs = self.outputs.reshape([-1,1,64,12,86,98])
(...)
self.model.fit([self.outputs, self.labels],
                                batch_size = 1,
                                epochs = 200)

# Error
ValueError: Error when checking input: expected input_1 to have 8 dimensions, but got array with shape (1, 1, 64, 12, 86, 98, 8)
&lt;/denchmark-code&gt;


Stackoverflow

&lt;denchmark-code&gt;# method def run_model
(...)
self.outputs = np.expand_dims(self.outputs, axis = 0)
(...)
self.model.fit([self.outputs, self.labels],
                                batch_size = 1,
                                epochs = 200)

# Error
ValueError: Error when checking input: expected input_1 to have 8 dimensions, but got array with shape (1, 1, 64, 12, 86, 98, 8)
&lt;/denchmark-code&gt;


DataScience Exchange

&lt;denchmark-code&gt;# method build model
inp = Input(shape = self.outputs.shape, batch_size = 1)
(...)
#method run model
(...)
self.outputs = np.array([self.outputs])
(...)
# Error
ValueError: Error when checking input: expected input_1 to have 8 dimensions, but got array with shape (1, 1, 64, 12, 86, 98, 8)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='danielfllaneza' date='2020-07-20T16:42:35Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41452&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41452&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>