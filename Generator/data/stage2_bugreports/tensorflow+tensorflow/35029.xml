<bug id='35029' author='kevin8100' open_date='2019-12-11T15:25:42Z' closed_time='2019-12-19T22:15:12Z'>
	<summary>failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED</summary>
	<description>
Please make sure that this is a build/installation issue. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): GKE with GPU / Ubuntu
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): binary
TensorFlow version: tensorflow-2.0.0-cp38-cp38-linux_x86_64
Python version: 3.8
Installed using virtualenv? pip? conda?: pip
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.1.168-1 / 7.6.4.38-1
GPU model and memory: Tesla P100-PCIE-16GB major: 6 minor: 0 memoryClockRate(GHz): 1.3285

Describe the problem
The process terminated with theses errors:
2019-12-11 15:23:31 classification-ld8d9 tensorflow[7] WARNING Entity &lt;bound method ResnetPreprocess.call of &lt;src.model.ResnetPreprocess object at 0x7fb870241d60&gt;&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: invalid value for "node": expected "ast.AST", got "&lt;class 'NoneType'&gt;"; to visit lists of nodes, use "visit_block" instead
2019-12-11 15:24:12.377087: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2019-12-11 15:24:12.377554: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:24:12.377749: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:24:12.377806: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:24:12.570359: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2019-12-11 15:24:28.471575: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:24:28.471626: W tensorflow/stream_executor/stream.cc:1919] attempting to perform BLAS operation using StreamExecutor without BLAS support
2019-12-11 15:24:28.471658: W tensorflow/core/common_runtime/base_collective_executor.cc:216] BaseCollectiveExecutor::StartAbort Internal: Blas GEMM launch failed : a.shape=(32, 25088), b.shape=(25088, 8), m=32, n=8, k=25088
[[{{node model/dense/MatMul}}]]
Traceback (most recent call last):
File "/opt/workspace/app.py", line 83, in 
training(config["train"], config["telegram"], config["others"])
File "/opt/workspace/src/training.py", line 40, in training
train_model(dataset_train.dataset, dataset_val.dataset, model, config, n_classes, config_others)
File "/opt/workspace/src/training.py", line 98, in train_model
loss_train, logits, reg_loss = training_step(x_batch_train, y_batch_train)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/def_function.py", line 457, in call
result = self._call(*args, **kwds)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/def_function.py", line 520, in _call
return self._stateless_fn(*args, **kwds)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 1823, in call
return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 1137, in _filtered_call
return self._call_flat(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 1223, in _call_flat
flat_outputs = forward_function.call(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 506, in call
outputs = execute.execute(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/execute.py", line 67, in quick_execute
six.raise_from(core._status_to_exception(e.code, message), None)
File "", line 3, in raise_from
tensorflow.python.framework.errors_impl.InternalError:  Blas GEMM launch failed : a.shape=(32, 25088), b.shape=(25088, 8), m=32, n=8, k=25088
[[node model/dense/MatMul (defined at usr/local/lib/python3.8/dist-packages/tensorflow_core/python/framework/ops.py:1751) ]] [Op:__inference_training_step_9298]
Function call stack:
training_step
Provide the exact sequence of commands / steps that you executed before running into the problem
Any other info / logs
	</description>
	<comments>
		<comment id='1' author='kevin8100' date='2019-12-12T08:13:01Z'>
		&lt;denchmark-link:https://github.com/kevin8100&gt;@kevin8100&lt;/denchmark-link&gt;
, Provide the exact sequence of commands / steps that you executed before running into the problem. Thanks!
		</comment>
		<comment id='2' author='kevin8100' date='2019-12-12T08:14:30Z'>
		&lt;denchmark-link:https://github.com/kevin8100&gt;@kevin8100&lt;/denchmark-link&gt;
, Similar issue comment &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33916#issuecomment-548811280&gt;#33916&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='kevin8100' date='2019-12-12T10:06:48Z'>
		
!

Hello  Gadagashwini ,
The sequence for training step:
{ load tfrecords for training)
{...}
x = keras.Input(shape=(224, 224, 3), batch_size=batch_size)
then call
x = resnet18(x, 0.01)
you can find the extracted logs here for more details:
2019-12-11 15:36:42 classification-xbj8h root[8] DEBUG training with option {'tf_record_absolute_prefix_train': '/opt/workspace/tfrecord/tfrecord_train_', 'tf_record_absolute_prefix_val': '/opt/workspace/tfrecord/tfrecord_val_', 'training_preprocessing': 'random_crop', 'validation_preprocessing': 'random_crop', 'log_dir': '/opt/workspace/log', 'save_dir': '/opt/workspace', 'lr': 0.001, 'model': 'resnet18', 'load_model_path': '', 'epochs': 1000, 'steps_between_validation': 100, 'steps_between_save': 1000, 'validation_steps': 50, 'log_images': True, 'classes_names': ['Haribo', 'Champagne', 'Vitakraft', 'Empty', 'Bonduelle', 'Soupe', 'Lipton', 'Dentifrice'], 'gradient': 'ADAM', 'dataset': {'random_crop_size': 224, 'loader_buffer_size': 500000, 'num_parallel_reads': 2, 'num_parallel_calls': 1, 'batch_size': 32, 'shuffle_buffer_size': 1000, 'random_flip_left_right': True, 'random_flip_up_down': True, 'random_rot': True, 'random_hue_delta': 0.0, 'random_contrast': False}}
2019-12-11 15:36:46 classification-xbj8h tensorflow[8] INFO Converted call: &lt;function _create_dataset_reader..read_one_file at 0x7f777c8a2a60&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=() dtype=string&gt;,)
kwargs: {}
INFO:tensorflow:Whitelisted: &lt;function _create_dataset_reader..read_one_file at 0x7f777c8a2a60&gt;: DoNotConvert rule for tensorflow
2019-12-11 15:36:46 classification-xbj8h tensorflow[8] INFO Whitelisted: &lt;function _create_dataset_reader..read_one_file at 0x7f777c8a2a60&gt;: DoNotConvert rule for tensorflow
INFO:tensorflow:Converted call: &lt;bound method ClassificationDataset.map_fn of &lt;src.dataset.ClassificationDataset object at 0x7f777c89dee0&gt;&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=() dtype=string&gt;,)
kwargs: {}
2019-12-11 15:36:46 classification-xbj8h tensorflow[8] INFO Converting &lt;bound method ClassificationDataset.map_fn of &lt;src.dataset.ClassificationDataset object at 0x7f777c89dee0&gt;&gt;
INFO:tensorflow:Source code of &lt;bound method ClassificationDataset.map_fn of &lt;src.dataset.ClassificationDataset object at 0x7f777c89dee0&gt;&gt;:
INFO:tensorflow:Error transforming entity &lt;bound method ClassificationDataset.map_fn of &lt;src.dataset.ClassificationDataset object at 0x7f777c89dee0&gt;&gt;
Traceback (most recent call last):
Start of epoch 0
INFO:tensorflow:Converted call: &lt;function train_model..training_step at 0x7f76e8414040&gt;
args: (&lt;tf.Tensor 'x:0' shape=(32, 224, 224, 3) dtype=uint8&gt;, &lt;tf.Tensor 'y:0' shape=(32, 8) dtype=int64&gt;)
kwargs: {}
2019-12-11 15:37:39 classification-xbj8h tensorflow[8] INFO Converting &lt;function train_model..training_step at 0x7f76e8414040&gt;
INFO:tensorflow:Source code of &lt;function train_model..training_step at 0x7f76e8414040&gt;:
@tf.function
def training_step(x, y):
with tf.GradientTape() as tape:
logits = model(tf.cast(x, tf.float32), training=True)
loss_train = loss_fn(y, logits)
reg_loss = model.losses
loss_train += tf.reduce_sum(reg_loss)
grads = tape.gradient(loss_train, model.trainable_weights)
optimizer.apply_gradients(zip(grads, model.trainable_weights))
return loss_train, logits, reg_loss
INFO:tensorflow:Source code of &lt;bound method ResnetPreprocess.call of &lt;src.model.ResnetPreprocess object at 0x7f77701a6e20&gt;&gt;:
def call(self, x, training=None):
x /= 127.5
x -= 1.
return x
During handling of the above exception, another exception occurred:
ValueError: invalid value for "node": expected "ast.AST", got "&lt;class 'NoneType'&gt;"; to visit lists of nodes, use "visit_block" instead
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 321, in convert
converted_entity_info = _convert_with_cache(entity, program_ctx,
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 239, in _convert_with_cache
nodes, converted_name, entity_info = convert_entity_to_ast(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 471, in convert_entity_to_ast
nodes, name, entity_info = convert_func_to_ast(o, program_ctx)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 669, in convert_func_to_ast
node = node_to_graph(node, context)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 698, in node_to_graph
node = converter.standard_analysis(node, context, is_initial=True)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/core/converter.py", line 384, in standard_analysis
node = activity.resolve(node, context, None)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/static_analysis/activity.py", line 498, in resolve
return ActivityAnalyzer(context, parent_scope).visit(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 480, in visit
result = super(Base, self).visit(node)
File "/usr/lib/python3.8/ast.py", line 360, in visit
return visitor(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/static_analysis/activity.py", line 442, in visit_FunctionDef
node.body = self.visit_block(node.body)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 371, in visit_block
replacement = self.visit(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 480, in visit
result = super(Base, self).visit(node)
File "/usr/lib/python3.8/ast.py", line 360, in visit
return visitor(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/static_analysis/activity.py", line 287, in visit_AugAssign
node.value = self.visit(node.value)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 458, in visit
raise ValueError(msg)
ValueError: invalid value for "node": expected "ast.AST", got "&lt;class 'NoneType'&gt;"; to visit lists of nodes, use "visit_block" instead
2019-12-11 15:38:27 classification-xbj8h tensorflow[8] INFO Source code of &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x7f76e8796280&gt;:
from future import absolute_import
from future import division
from future import print_function
@function_lib.defun
def initialize_variables():
op_map = object_identity.ObjectIdentityDictionary()
for v, init in initializer_map.items():
with ops.init_scope():
if resource_variable_ops.var_is_initialized_op(v.handle):
# Ignore variables which are already initialized at trace time.
continue
op_map = lift_to_graph.lift_to_graph(
[init], ops.get_default_graph(), op_map=op_map)
v.assign(op_map[init])
2019-12-11 15:38:27 classification-xbj8h tensorflow[8] INFO Converting &lt;bound method ResnetPreprocess.call of &lt;src.model.ResnetPreprocess object at 0x7f77701a6e20&gt;&gt;
INFO:tensorflow:Source code of &lt;bound method ResnetPreprocess.call of &lt;src.model.ResnetPreprocess object at 0x7f77701a6e20&gt;&gt;:
def call(self, x, training=None):
x /= 127.5
x -= 1.
return x
INFO:tensorflow:Error transforming entity &lt;bound method ResnetPreprocess.call of &lt;src.model.ResnetPreprocess object at 0x7f77701a6e20&gt;&gt;
Traceback (most recent call last):
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 321, in convert
converted_entity_info = _convert_with_cache(entity, program_ctx,
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 239, in _convert_with_cache
nodes, converted_name, entity_info = convert_entity_to_ast(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 471, in convert_entity_to_ast
nodes, name, entity_info = convert_func_to_ast(o, program_ctx)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 669, in convert_func_to_ast
node = node_to_graph(node, context)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/impl/conversion.py", line 698, in node_to_graph
node = converter.standard_analysis(node, context, is_initial=True)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/core/converter.py", line 384, in standard_analysis
node = activity.resolve(node, context, None)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/static_analysis/activity.py", line 498, in resolve
return ActivityAnalyzer(context, parent_scope).visit(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 480, in visit
result = super(Base, self).visit(node)
File "/usr/lib/python3.8/ast.py", line 360, in visit
return visitor(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/static_analysis/activity.py", line 442, in visit_FunctionDef
node.body = self.visit_block(node.body)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 371, in visit_block
replacement = self.visit(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 480, in visit
result = super(Base, self).visit(node)
File "/usr/lib/python3.8/ast.py", line 360, in visit
return visitor(node)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/static_analysis/activity.py", line 287, in visit_AugAssign
node.value = self.visit(node.value)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/autograph/pyct/transformer.py", line 458, in visit
raise ValueError(msg)
ValueError: invalid value for "node": expected "ast.AST", got "&lt;class 'NoneType'&gt;"; to visit lists of nodes, use "visit_block" instead
2019-12-11 15:38:27 classification-xbj8h tensorflow[8] INFO Error transforming entity &lt;bound method ResnetPreprocess.call of &lt;src.model.ResnetPreprocess object at 0x7f77701a6e20&gt;&gt;
2019-12-11 15:38:27 classification-xbj8h tensorflow[8] WARNING Entity &lt;bound method ResnetPreprocess.call of &lt;src.model.ResnetPreprocess object at 0x7f77701a6e20&gt;&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: invalid value for "node": expected "ast.AST", got "&lt;class 'NoneType'&gt;"; to visit lists of nodes, use "visit_block" instead
2019-12-11 15:39:08.678289: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2019-12-11 15:39:08.678746: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:39:08.678892: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:39:08.678931: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:39:08.872722: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2019-12-11 15:39:24.970499: E tensorflow/stream_executor/cuda/cuda_blas.cc:238] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED
2019-12-11 15:39:24.970554: W tensorflow/stream_executor/stream.cc:1919] attempting to perform BLAS operation using StreamExecutor without BLAS support
2019-12-11 15:39:24.970600: W tensorflow/core/common_runtime/base_collective_executor.cc:216] BaseCollectiveExecutor::StartAbort Internal: Blas GEMM launch failed : a.shape=(32, 25088), b.shape=(25088, 8), m=32, n=8, k=25088
[[{{node model/dense/MatMul}}]]
Traceback (most recent call last):
File "/opt/workspace/app.py", line 83, in 
training(config["train"], config["telegram"], config["others"])
File "/opt/workspace/src/training.py", line 40, in training
train_model(dataset_train.dataset, dataset_val.dataset, model, config, n_classes, config_others)
File "/opt/workspace/src/training.py", line 98, in train_model
loss_train, logits, reg_loss = training_step(x_batch_train, y_batch_train)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/def_function.py", line 457, in call
result = self._call(*args, **kwds)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/def_function.py", line 520, in _call
return self._stateless_fn(*args, **kwds)
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 1823, in call
return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 1137, in _filtered_call
return self._call_flat(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 1223, in _call_flat
flat_outputs = forward_function.call(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/function.py", line 506, in call
outputs = execute.execute(
File "/usr/local/lib/python3.8/dist-packages/tensorflow_core/python/eager/execute.py", line 67, in quick_execute
six.raise_from(core._status_to_exception(e.code, message), None)
File "", line 3, in raise_from
tensorflow.python.framework.errors_impl.InternalError:  Blas GEMM launch failed : a.shape=(32, 25088), b.shape=(25088, 8), m=32, n=8, k=25088
[[node model/dense/MatMul (defined at usr/local/lib/python3.8/dist-packages/tensorflow_core/python/framework/ops.py:1751) ]] [Op:__inference_training_step_9298]
Function call stack:
training_step
Thanks &amp; Regards
		</comment>
		<comment id='4' author='kevin8100' date='2019-12-12T10:28:49Z'>
		
@kevin8100, Similar issue comment #33916.

Hello,
I've already added these params:
TF_FORCE_GPU_ALLOW_GROWTH=true
PER_PROCESS_GPU_MEMORY_FRACTION=0.8
..and it's still not working
		</comment>
		<comment id='5' author='kevin8100' date='2019-12-13T22:50:34Z'>
		I see you are using cuda 10.1, TF 2.0 supports cuda 10.0 Please roll back to cuda 10.0 and try again.
If issue still persists then use &lt;denchmark-link:https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth&gt;limit gpu memory growth&lt;/denchmark-link&gt;
 parameter by putting following snippet on top of your code.
import tensorflow as tf
gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpus[0], True)
		</comment>
		<comment id='6' author='kevin8100' date='2019-12-19T22:15:14Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35029&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35029&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='kevin8100' date='2020-01-21T03:54:45Z'>
		I am using 2.2.0-dev20200119 with CUDA 10.1 on 1080Ti. I still meet the problem when I run the following code.
#!/usr/bin/python3
import numpy as np;
import tensorflow as tf;
gpus = tf.config.experimental.list_physical_devices('GPU');
tf.config.experimental.set_memory_growth(gpus[0], True);
a=tf.constant(np.random.normal(size=(8,100)), dtype = tf.float32)
b=tf.keras.layers.Dense(units=200)(a);
		</comment>
		<comment id='8' author='kevin8100' date='2020-01-21T07:03:45Z'>
		&lt;denchmark-link:https://github.com/breadbread1984&gt;@breadbread1984&lt;/denchmark-link&gt;
 Have you tried limited your GPU memory usage, as &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 suggested?
&lt;denchmark-code&gt;import tensorflow as tf
gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpus[0], True)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='kevin8100' date='2020-01-21T13:53:33Z'>
		yes I tried. the problem remains!
		</comment>
		<comment id='10' author='kevin8100' date='2020-02-11T08:05:11Z'>
		same issue here, any update?
		</comment>
		<comment id='11' author='kevin8100' date='2020-03-02T20:48:00Z'>
		Just in case you have libcublas10 version 10.2.2.89-1 installed: replacing it with an older version might fix the problem - see &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/37233&gt;#37233&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='kevin8100' date='2020-04-19T03:40:05Z'>
		Had the same issue. Resolved by reinstalling GPU Drivers and CUDA as was suggested in &lt;denchmark-link:https://www.tensorflow.org/install/gpu&gt;https://www.tensorflow.org/install/gpu&lt;/denchmark-link&gt;


Add repos:

&lt;denchmark-code&gt;wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.1.243-1_amd64.deb
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo dpkg -i cuda-repo-ubuntu1804_10.1.243-1_amd64.deb
sudo apt-get update
wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt-get update
&lt;/denchmark-code&gt;



Install drivers:
sudo apt-get install --no-install-recommends nvidia-driver-430


Reboot. Check that GPUs are visible using the command: nvidia-smi


Install cuda and cudnn:


&lt;denchmark-code&gt;sudo apt-get install --no-install-recommends \
    cuda-10-1 \
    libcudnn7=7.6.4.38-1+cuda10.1  \
    libcudnn7-dev=7.6.4.38-1+cuda10.1
&lt;/denchmark-code&gt;

Hope it helps someone else :)
		</comment>
	</comments>
</bug>