<bug id='35108' author='hollowgalaxy' open_date='2019-12-14T03:15:30Z' closed_time='2019-12-30T20:03:50Z'>
	<summary>tf.py_function is unusable in map function</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0
Python version: 3.7
CUDA/cuDNN version: 10.0/7
GPU model and memory: Tesla T4, 16gb

Describe the current behavior
Attempting to use tf.py_function inside a tf.data.Dataset.map. Failure occurs because the  tensor returned from py_function is accessed during build time of the graph, but function is expected to be evaluated during runtime of the graph.
Attempt 1
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
#make magical data that requires python
def make_data(i): 
    return np.cast[np.uint8](i) * np.ones([20,256,256,3], dtype=np.float32) / 10.

#clean up magical data
@tf.function 
def make_clean_data(i): 
    ones = tf.py_function(make_data,[i],tf.float32) 
    ones = tf.reshape(ones,ones.get_shape()) 
    ones =tf.image.resize(ones,[224,224]) 
    return ones

ds = tf.data.Dataset.range(10)
ds.map(make_clean_data)
&lt;/denchmark-code&gt;

Error:
&lt;denchmark-code&gt;ValueError: in converted code:

    &lt;ipython-input-13-6dd8c09d760a&gt;:8 make_clean_data  *
        ones = tf.reshape(ones,ones.get_shape())
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/ops/array_ops.py:131 reshape
        result = gen_array_ops.reshape(tensor, shape, name)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_array_ops.py:8117 reshape
        "Reshape", tensor=tensor, shape=shape, name=name)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/op_def_library.py:545 _apply_op_helper
        (input_name, err))

    ValueError: Tried to convert 'shape' to a tensor and failed. Error: Cannot convert a partially known TensorShape to a Tensor: &lt;unknown&gt;
&lt;/denchmark-code&gt;

Attempt 2
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
#make magical data that requires python
def make_data(i): 
    return np.cast[np.uint8](i) * np.ones([20,256,256,3], dtype=np.float32) / 10.

#clean up magical data
@tf.function 
def make_clean_data(i): 
    ones = tf.py_function(make_data,[i],tf.float32) 
    ones.set_shape(ones.get_shape()) 
    ones =tf.image.resize(ones,[224,224]) 
    return ones

ds = tf.data.Dataset.range(10)
ds.map(make_clean_data)
&lt;/denchmark-code&gt;

Error
&lt;denchmark-code&gt;ValueError: in converted code:

    &lt;ipython-input-14-311bd0ebc814&gt;:9 make_clean_data  *
        ones =tf.image.resize(ones,[224,224])
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/ops/image_ops_impl.py:1319 resize_images_v2
        skip_resize_if_same=False)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/ops/image_ops_impl.py:1034 _resize_images_common
        raise ValueError('\'images\' contains no shape.')

    ValueError: 'images' contains no shape.
&lt;/denchmark-code&gt;

Attempt 3
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
#make magical data that requires python
def make_data(i): 
    data = np.cast[np.uint8](i) * np.zeros([20,256,256,3], dtype=np.float32) / 10.
    return  data, data.shape

#clean up magical data
@tf.function 
def make_clean_data(i): 
    ones, shape = tf.py_function(make_data,[i],(tf.float32, tf.int32)) 
    ones.set_shape(shape) 
    ones =tf.image.resize(ones,[224,224]) 
    return ones

ds = tf.data.Dataset.range(10)
ds.map(make_clean_data)
&lt;/denchmark-code&gt;

Error
&lt;denchmark-code&gt;OperatorNotAllowedInGraphError: in converted code:

    &lt;ipython-input-11-a2af44684940&gt;:9 make_clean_data  *
        ones.set_shape(shape)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:626 set_shape
        shape = tensor_shape.TensorShape(shape)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_shape.py:776 __init__
        self._dims = [as_dimension(d) for d in dims_iter]
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_shape.py:776 &lt;listcomp&gt;
        self._dims = [as_dimension(d) for d in dims_iter]
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:547 __iter__
        self._disallow_iteration()
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:540 _disallow_iteration
        self._disallow_when_autograph_enabled("iterating over `tf.Tensor`")
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:518 _disallow_when_autograph_enabled
        " decorating it directly with @tf.function.".format(task))

    OperatorNotAllowedInGraphError: iterating over `tf.Tensor` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.
&lt;/denchmark-code&gt;

Attempt 4
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
#make magical data that requires python
def make_data(i): 
    data = np.cast[np.uint8](i) * np.zeros([20,256,256,3], dtype=np.float32) / 10.
    return  data, data.shape

#clean up magical data
@tf.function 
def make_clean_data(i): 
    ones, shape = tf.py_function(make_data,[i],(tf.float32, tf.int32)) 
    ones = tf.reshape(ones, shape) 
    ones =tf.image.resize(ones,[224,224]) 
    return ones

ds = tf.data.Dataset.range(10)
ds.map(make_clean_data)
&lt;/denchmark-code&gt;

Error
&lt;denchmark-code&gt;ValueError: in converted code:

    &lt;ipython-input-16-e967bbec561a&gt;:13 make_clean_data  *
        ones =tf.image.resize(ones,[224,224])
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/ops/image_ops_impl.py:1319 resize_images_v2
        skip_resize_if_same=False)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/ops/image_ops_impl.py:1034 _resize_images_common
        raise ValueError('\'images\' contains no shape.')

    ValueError: 'images' contains no shape.
&lt;/denchmark-code&gt;

Attempt 5
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
#make magical data that requires python
def make_data(i): 
    data = np.cast[np.uint8](i) * np.zeros([20,256,256,3], dtype=np.float32) / 10.
    return  data, data.shape

#clean up magical data
@tf.function 
def make_clean_data(ones, shape): 
    ones.set_shape(shape) 
    ones =tf.image.resize(ones,[224,224]) 
    return ones

ds = tf.data.Dataset.range(10)
ds = ds.map(lambda i:  tf.py_function(make_data,[i],(tf.float32, tf.int32)))
ds.map(make_clean_data)
&lt;/denchmark-code&gt;

Error
&lt;denchmark-code&gt;OperatorNotAllowedInGraphError: in converted code:

    &lt;ipython-input-12-6bfeded17ffe&gt;:8 make_clean_data  *
        ones.set_shape(shape)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:626 set_shape
        shape = tensor_shape.TensorShape(shape)
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_shape.py:776 __init__
        self._dims = [as_dimension(d) for d in dims_iter]
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_shape.py:776 &lt;listcomp&gt;
        self._dims = [as_dimension(d) for d in dims_iter]
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:547 __iter__
        self._disallow_iteration()
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:540 _disallow_iteration
        self._disallow_when_autograph_enabled("iterating over `tf.Tensor`")
    /home/hollowgalaxy/anaconda3/envs/py36/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:518 _disallow_when_autograph_enabled
        " decorating it directly with @tf.function.".format(task))

    OperatorNotAllowedInGraphError: iterating over `tf.Tensor` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='hollowgalaxy' date='2019-12-16T08:28:59Z'>
		Issue is replicating on Colab with Tf 2.0.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/d0078d66c22d6f80cb6af30c713fc01b/untitled307.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='hollowgalaxy' date='2019-12-20T21:48:13Z'>
		&lt;denchmark-link:https://github.com/hollowgalaxy&gt;@hollowgalaxy&lt;/denchmark-link&gt;
 What is the expected output of  function and from where that functional argument   is coming from? Thanks!
		</comment>
		<comment id='3' author='hollowgalaxy' date='2019-12-21T00:00:30Z'>
		Not sure which of the attempts you mean. But the make_data function is described for each of the attempts.
		</comment>
		<comment id='4' author='hollowgalaxy' date='2019-12-30T20:03:50Z'>
		py_function produces tensors of unknown shape and rank (as shape inference does not work on arbitrary Python code) and if you need the shape (e.g. for tf.image.resize) you need to set it based on statically available information (i.e. it cannot be something that py_function returns).
For example, you can use set_shape to set the rank of the py_function output to 4, which will be sufficient for tf.image.resize to operate correctly:
&lt;denchmark-code&gt;import tensorflow.compat.v2 as tf
import numpy as np

tf.enable_v2_behavior()

#make magical data that requires python
def make_data(i): 
    return np.cast[np.uint8](i) * np.ones([20,256,256,3], dtype=np.float32) / 10.
    

#clean up magical data
def make_clean_data(i): 
    ones = tf.py_function(make_data,[i],tf.float32) 
    ones.set_shape(tf.TensorShape([None, None, None, None]))
    ones = tf.image.resize(ones, [224,224])
    return ones

ds = tf.data.Dataset.range(10)
ds = ds.map(make_clean_data)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='hollowgalaxy' date='2019-12-30T20:03:53Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35108&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35108&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>