<bug id='34826' author='Hoeze' open_date='2019-12-04T12:32:35Z' closed_time='2020-04-08T20:24:52Z'>
	<summary>[Dask] [TF 2.0] ValueError: TypeError: len() of unsized object</summary>
	<description>
Describe the current behavior
In [6]: tf.convert_to_tensor(value)                                                                                                                                                                                                                                                                                          
2019-12-04 13:15:11.908174: I tensorflow/core/platform/cpu_feature_guard.cc:145] This TensorFlow binary is optimized with Intel(R) MKL-DNN to use the following CPU instructions in performance critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in non-MKL-DNN operations, rebuild TensorFlow with the appropriate compiler flags.
2019-12-04 13:15:12.647383: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3299990000 Hz
2019-12-04 13:15:12.648044: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5644649bc070 executing computations on platform Host. Devices:
2019-12-04 13:15:12.648118: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
2019-12-04 13:15:12.654239: I tensorflow/core/common_runtime/process_util.cc:115] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-6-cb9026824ca5&gt; in &lt;module&gt;
----&gt; 1 tf.convert_to_tensor(value)

/opt/anaconda/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py in convert_to_tensor_v2(value, dtype, dtype_hint, name)
   1240       name=name,
   1241       preferred_dtype=dtype_hint,
-&gt; 1242       as_ref=False)
   1243 
   1244 

/opt/anaconda/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx, accept_composite_tensors)
   1294 
   1295     if ret is None:
-&gt; 1296       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
   1297 
   1298     if ret is NotImplemented:

/opt/anaconda/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)
    284                                          as_ref=False):
    285   _ = as_ref
--&gt; 286   return constant(v, dtype=dtype, name=name)
    287 
    288 

/opt/anaconda/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py in constant(value, dtype, shape, name)
    225   """
    226   return _constant_impl(value, dtype, shape, name, verify_shape=False,
--&gt; 227                         allow_broadcast=True)
    228 
    229 

/opt/anaconda/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py in _constant_impl(value, dtype, shape, name, verify_shape, allow_broadcast)
    233   ctx = context.context()
    234   if ctx.executing_eagerly():
--&gt; 235     t = convert_to_eager_tensor(value, ctx, dtype)
    236     if shape is None:
    237       return t

/opt/anaconda/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py in convert_to_eager_tensor(value, ctx, dtype)
     94       dtype = dtypes.as_dtype(dtype).as_datatype_enum
     95   ctx.ensure_initialized()
---&gt; 96   return ops.EagerTensor(value, ctx.device_name, dtype)
     97 
     98 

ValueError: TypeError: len() of unsized object
Traceback (most recent call last):

  File "/opt/anaconda/envs/tf/lib/python3.7/site-packages/dask/array/core.py", line 1165, in __len__
    raise TypeError("len() of unsized object")

TypeError: len() of unsized object
Describe the expected behavior
Should just return a tf.EagerTensor

I uploaded a Test-Dask-array which produces this error:
&lt;denchmark-link:https://drive.google.com/file/d/1NtKsv3P37MyYzs8OCbzxSVuL-hA79IPE/view?usp=sharing&gt;https://drive.google.com/file/d/1NtKsv3P37MyYzs8OCbzxSVuL-hA79IPE/view?usp=sharing&lt;/denchmark-link&gt;

Please  it before running the following code:
import pickle
import tensorflow as tf
with open('test.pkl', 'rb') as handle:
        value = pickle.load(handle)

tf.convert_to_tensor(value)
The part where it fails is value[0, 0], which is a Dask scalar array.
I have no idea why Tensorflow tries to fetch scalar values from a Dask array instead of just calling np.asarray(value) on it.
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Centos 7
TensorFlow installed from (source or binary):
conda-forge
TensorFlow version (use command below):
unknown 2.0.0
Python version:
3.7.3

	</description>
	<comments>
		<comment id='1' author='Hoeze' date='2020-02-06T20:06:22Z'>
		still a problem with latest versions
		</comment>
		<comment id='2' author='Hoeze' date='2020-02-15T23:51:53Z'>
		I encountered the same problem using Cupy.
tensorflow==1.15.0
tensorflow-estimator==1.15.1
tensorflow-gpu==2.1.0
cupy==7.1.1
		</comment>
		<comment id='3' author='Hoeze' date='2020-04-07T23:39:17Z'>
		I can reproduce in 2.1 with a simple
&lt;denchmark-code&gt;import tensorflow as tf
import dask.array as da

tf.convert_to_tensor(da.array(1.0))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='Hoeze' date='2020-04-08T20:24:52Z'>
		This is fixed in 2.2.0-rc2. The problem was that TF 2.1 did not handle types that implemented __array__ properly.
		</comment>
		<comment id='5' author='Hoeze' date='2020-04-08T20:24:54Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34826&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34826&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>