<bug id='23979' author='cataclysmus' open_date='2018-11-26T16:24:54Z' closed_time='2018-11-28T09:09:15Z'>
	<summary>Save/Load problem with keras.layers.ReLU</summary>
	<description>
Running this example
&lt;denchmark-code&gt;x = tf.keras.layers.Input([1])
y = tf.keras.layers.ReLU()(x)
mdl = tf.keras.models.Model(x, y)
tf.keras.models.save_model(mdl, "./keras_model_tmp.hdf5", overwrite=True)
tf.keras.models.load_model("./keras_model_tmp.hdf5")
&lt;/denchmark-code&gt;

returns trackback
&lt;denchmark-code&gt;/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/engine/saving.pyc in load_model(filepath, custom_objects, compile)
    228       raise ValueError('No model found in config file.')
    229     model_config = json.loads(model_config.decode('utf-8'))
--&gt; 230     model = model_from_config(model_config, custom_objects=custom_objects)
    231 
    232     # set weights

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/engine/saving.pyc in model_from_config(config, custom_objects)
    308                     '`Sequential.from_config(config)`?')
    309   from tensorflow.python.keras.layers import deserialize  # pylint: disable=g-import-not-at-top
--&gt; 310   return deserialize(config, custom_objects=custom_objects)
    311 
    312 

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/layers/serialization.pyc in deserialize(config, custom_objects)
     62       module_objects=globs,
     63       custom_objects=custom_objects,
---&gt; 64       printable_module_name='layer')

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/utils/generic_utils.pyc in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)
    171             custom_objects=dict(
    172                 list(_GLOBAL_CUSTOM_OBJECTS.items()) +
--&gt; 173                 list(custom_objects.items())))
    174       with CustomObjectScope(custom_objects):
    175         return cls.from_config(config['config'])

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/engine/network.pyc in from_config(cls, config, custom_objects)
   1291     for layer_data in config['layers']:
   1292       process_layer(layer_data)
-&gt; 1293     # Then we process nodes in order of layer depth.
   1294     # Nodes that cannot yet be processed (if the inbound node
   1295     # does not yet exist) are re-enqueued, and the process

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/engine/network.pyc in process_layer(layer_data)
   1276       from tensorflow.python.keras.layers import deserialize as deserialize_layer  # pylint: disable=g-import-not-at-top
   1277 
-&gt; 1278       layer = deserialize_layer(layer_data, custom_objects=custom_objects)
   1279       created_layers[layer_name] = layer
   1280 

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/layers/serialization.pyc in deserialize(config, custom_objects)
     62       module_objects=globs,
     63       custom_objects=custom_objects,
---&gt; 64       printable_module_name='layer')

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/utils/generic_utils.pyc in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)
    173                 list(custom_objects.items())))
    174       with CustomObjectScope(custom_objects):
--&gt; 175         return cls.from_config(config['config'])
    176     else:
    177       # Then `cls` may be a function returning a class.

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.pyc in from_config(cls, config)
   1604         A layer instance.
   1605     """
-&gt; 1606     return cls(**config)
   1607 
   1608 

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/layers/advanced_activations.py in __init__(self, max_value, negative_slope, threshold, **kwargs)
    319     self.max_value = max_value
    320     self.negative_slope = K.cast_to_floatx(negative_slope)
--&gt; 321     self.threshold = K.cast_to_floatx(threshold)
    322 
    323   def call(self, inputs):

/data/virtualenv/venv2/lib/python2.7/site-packages/tensorflow/python/keras/backend.pyc in cast_to_floatx(x)
    231   ```
    232   """
--&gt; 233   return np.asarray(x, dtype=_FLOATX)
    234 
    235 

/data/virtualenv/venv2/lib/python2.7/site-packages/numpy/core/numeric.pyc in asarray(a, dtype, order)
    499 
    500     """
--&gt; 501     return array(a, dtype, copy=False, order=order)
    502 
    503 

TypeError: float() argument must be a string or a number
&lt;/denchmark-code&gt;

I temporally fixed it in tensorflow/python/keras/layers/advanced_activations.py by changing get_config
from
&lt;denchmark-code&gt;  def get_config(self):
    config = {
        'max_value': self.max_value,
        'negative_slope': self.negative_slope,
        'threshold': self.threshold
    }
    base_config = super(ReLU, self).get_config()
    return dict(list(base_config.items()) + list(config.items()))
&lt;/denchmark-code&gt;

to
&lt;denchmark-code&gt;  def get_config(self):
    config = {
        'max_value': self.max_value,
        'negative_slope': float(self.negative_slope),
        'threshold': float(self.threshold)
    }
    base_config = super(ReLU, self).get_config()
    return dict(list(base_config.items()) + list(config.items()))
&lt;/denchmark-code&gt;

However, the problem might be somewhere in deserialize_layer, as for a some reason negative_slope is a dictionary, not a numpy.ndarray
	</description>
	<comments>
		<comment id='1' author='cataclysmus' date='2018-11-27T19:49:18Z'>
		&lt;denchmark-link:https://github.com/cataclysmus&gt;@cataclysmus&lt;/denchmark-link&gt;
 I am able to reproduce with tf 1.12.0, but not with tf-nightly. Can you try with tf-nightly and see if the issue still exist?
		</comment>
		<comment id='2' author='cataclysmus' date='2018-11-27T20:01:55Z'>
		Thanks &lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 for taking a look. Previously I failed to check with nightly version. However I checked with TF nightly version : '1.13.0-dev20181108' now and the issue seems to be fixed. Will wait for &lt;denchmark-link:https://github.com/cataclysmus&gt;@cataclysmus&lt;/denchmark-link&gt;
 confirmation.
		</comment>
		<comment id='3' author='cataclysmus' date='2018-11-28T09:09:15Z'>
		&lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 Checked. No bug at the build 
		</comment>
		<comment id='4' author='cataclysmus' date='2018-12-14T23:43:54Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://goo.gl/forms/Oe0tEvODFRoI2gJF3&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://goo.gl/forms/fUjzOfrtkFbrOT8d2&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>