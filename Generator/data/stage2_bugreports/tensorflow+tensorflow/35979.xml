<bug id='35979' author='haimat' open_date='2020-01-17T10:17:39Z' closed_time='2020-04-21T21:44:19Z'>
	<summary>What's the difference between Keras applications and TF Model Garden?</summary>
	<description>
&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/applications&gt;https://www.tensorflow.org/api_docs/python/tf/keras/applications&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/models/tree/master/official&gt;https://github.com/tensorflow/models/tree/master/official&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue (what needs changing):&lt;/denchmark-h&gt;

There are the pre-trained models for Keras found in tf.keras.applications. And there are those models found on GitHub in the Model Garden (under /models, as linked above). Now, from reading the docs (both for the applications as well as those in the Model Garden) I don't get the difference. Why do we have those two different model repos?
	</description>
	<comments>
		<comment id='1' author='haimat' date='2020-01-20T16:00:14Z'>
		&lt;denchmark-link:https://keras.io/#multi-backend-keras-and-tfkeras&gt;https://keras.io/#multi-backend-keras-and-tfkeras&lt;/denchmark-link&gt;

Go through this link,will help
		</comment>
		<comment id='2' author='haimat' date='2020-01-20T16:03:28Z'>
		@atharva1503 Sorry but I don't see how this helps. I understand what Keras applications are (= pre-trained models based on known architectures). But that page doesn't explain how they differ from those models found on GitHub Model Garden.
Or in other words: Which of those repos (Keras apps vs. GitHub MG) should I use in which case?
		</comment>
		<comment id='3' author='haimat' date='2020-04-21T21:25:46Z'>
		&lt;denchmark-link:https://github.com/haimat&gt;@haimat&lt;/denchmark-link&gt;
 keras.applications are pre-trained models for CNNs. They include most frequently used CNN architectures such as ResNet, InceptionNet, VGG etc.

Whereas the other tf model garden includes models for other tasks such as NLP, object detection etc. These models are too maintained by TensorFlow (if they are in official).

tf.keras.applications allow you to directly import a CNN  architecture (see docs) customize its loss and use it as you like.

tf model garden are not part of tf core API so you can't import them directly as you do for tf.applications. you would need to follow their docs.

		</comment>
		<comment id='4' author='haimat' date='2020-04-21T21:44:18Z'>
		&lt;denchmark-link:https://github.com/oke-aditya&gt;@oke-aditya&lt;/denchmark-link&gt;
 Thanks for the explanation!
		</comment>
		<comment id='5' author='haimat' date='2020-09-05T04:54:44Z'>
		y no es el único en el  valle  de los modelos ya que también existe tensorflow hub  el cual también  incluye gran variedad de arquitecturas y todas ellas entrenadas en distintos conjuntos de datos(imagenet 1k y imagenet 21k). lo que sobresale es que siguen un nueva filosofía BIT o big transfer, la cual entrena los modelos en grandes conjuntos de datos como imagenet 21k con 21000 clases diferentes, pero grandes conjuntos de datos requieren grandes arquitecturas por eso modificaron arquitecturas como Resnet50 a Resnet50x4  arquitecturas mas anchas capases de resolver las tareas. mientras que keras.aplications solo estan entrenados en imagenet 1k(1000 clases). date una vuelta por mi github donde tengo muy bien detallada la diferencie entre estas opciones para elegir modelo: keras.aplications vs tensorflow hub vs tensor flow garden  vs model zoo
		</comment>
	</comments>
</bug>