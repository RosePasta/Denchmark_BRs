<bug id='32815' author='prats226' open_date='2019-09-25T15:21:12Z' closed_time='2019-09-26T16:59:58Z'>
	<summary>tf.io.gfile.copy and tf.gfile.Copy input and output same path with overwrite removes all contents</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.14.0
Python version: 2.7.15
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
cat label.pbtxt

Some txt in the file

tf.io.gfile.Copy('label.pbtxt', 'label.pbtxt', overwrite=True)
cat label.pbtxt


Describe the expected behavior
cat label.pbtxt

Some txt in the file

tf.io.gfile.Copy('label.pbtxt', 'label.pbtxt', overwrite=True)
cat label.pbtxt

Some txt in the file

Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
import tensorflow as tf 
tf.io.gfile.Copy('label.pbtxt', 'label.pbtxt', overwrite=True)
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='prats226' date='2019-09-26T11:19:13Z'>
		Issue replicating with TF-1.14, also in TF-2.0rc2. kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/5a040c1b1f4af41b5e3f1d51f3f3d9e4/untitled8.ipynb#scrollTo=CMr3psVURw-5&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='prats226' date='2019-09-26T16:59:58Z'>
		This is kind of working as intended. The same behavior happens on the operating system level:
mihaimaruseac@ankh:/tmp$ cat x
1
2
3
mihaimaruseac@ankh:/tmp$ cat x &gt; x
mihaimaruseac@ankh:/tmp$ cat x
mihaimaruseac@ankh:/tmp$
In the end, you are opening the file twice, once for reading and once for writing on it from scratch (thus truncating it to size 0). Then the copy reads a chunk from the beginning and writes it on the output. However, as the file on disk has been cleared, the first chunk is empty so nothing gets written.
Edit: note the behavior when not overwritting but appending:
mihaimaruseac@ankh:/tmp$ cat x &gt;&gt; x
cat: x: input file is output file
Again, this makes sense: if error was not provided then you could create an infinite (to the limit of hardware) file.
		</comment>
		<comment id='3' author='prats226' date='2019-09-26T16:59:59Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32815&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32815&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>