<bug id='41093' author='jyhpsycho' open_date='2020-07-05T03:53:27Z' closed_time='2020-11-14T05:23:30Z'>
	<summary>tf.keras.layers.DepthwiseConv2D and tf.keras.layers.SeparableConv2D does not handle kernel regularizer correctly.</summary>
	<description>
Please go to Stack Overflow for help and support:
&lt;denchmark-link:https://stackoverflow.com/questions/tagged/tensorflow&gt;https://stackoverflow.com/questions/tagged/tensorflow&lt;/denchmark-link&gt;

If you open a GitHub issue, here is our policy:

It must be a bug, a feature request, or a significant problem with the
documentation (for small docs fixes please send a PR instead).
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go
here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script
provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS 7.3
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue
happens on a mobile device: NA
TensorFlow installed from (source or binary): binary, from anaconda
TensorFlow version (use command below): 2.2.0
Python version: 3.7.7
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: 10.1 / 7.6.5
GPU model and memory: NVIDIA Tesla V100 / 32GB
Exact command to reproduce: Source code below

You can collect some of this information using our environment capture script:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&lt;/denchmark-link&gt;

You can obtain the TensorFlow version with:
python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.
kernel_regularizer parameter on tf.keras.layers.DepthwiseConv2D and  tf.keras.layers.SeparableConv2D does not register the loss to model losses, despite of bias_regularizer works. I'll describe full test code below.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.
Expected case 1: Dense layer
m = tf.keras.models.Sequential()
m.add(tf.keras.layers.Dense(3, input_dim=5, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01), bias_regularizer=tf.keras.regularizers.l2(1.0E-01)))
m.add(tf.keras.layers.Dense(3, input_dim=5, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01)))
print(m.losses)
Output:
&lt;denchmark-code&gt;[&lt;tf.Tensor: shape=(), dtype=float32, numpy=0.19434488&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.0&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.22874394&gt;]
&lt;/denchmark-code&gt;

Expected case 2: Conv2D layer
m = tf.keras.models.Sequential()
m.add(tf.keras.layers.Input(32, 32, 3))
m.add(tf.keras.layers.Conv2D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01), bias_regularizer=tf.keras.regularizers.l2(1.0E-01)))
m.add(tf.keras.layers.Conv2D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01)))
print(m.losses)
Output:
&lt;denchmark-code&gt;[&lt;tf.Tensor: shape=(), dtype=float32, numpy=0.29766324&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.0&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.7301255&gt;]
&lt;/denchmark-code&gt;

Expected case 3: ConvLSTM2D layer
m = tf.keras.models.Sequential()
m.add(tf.keras.layers.Input(3, 32, 32, 3))
m.add(tf.keras.layers.ConvLSTM2D(3, 3, return_sequences=True, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01), bias_regularizer=tf.keras.regularizers.l2(1.0E-01)))
m.add(tf.keras.layers.ConvLSTM2D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01)))
print(m.losses)
Output:
&lt;denchmark-code&gt;[&lt;tf.Tensor: shape=(), dtype=float32, numpy=0.47271797&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.3&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.49562755&gt;]
&lt;/denchmark-code&gt;

Does not expected case 1: DepthwiseConv2D layer
m = tf.keras.models.Sequential()
m.add(tf.keras.layers.Input(32, 32, 3))
m.add(tf.keras.layers.DepthwiseConv2D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01), bias_regularizer=tf.keras.regularizers.l2(1.0E-01)))
m.add(tf.keras.layers.DepthwiseConv2D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01)))
print(m.losses)
Output:
&lt;denchmark-code&gt;[&lt;tf.Tensor: shape=(), dtype=float32, numpy=0.0&gt;]
&lt;/denchmark-code&gt;

Does not expected case 2: SeparableConv2D layer
m = tf.keras.models.Sequential()
m.add(tf.keras.layers.Input(32, 32, 3))
m.add(tf.keras.layers.SeparableConv2D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01), bias_regularizer=tf.keras.regularizers.l2(1.0E-01)))
m.add(tf.keras.layers.SeparableConv2D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01)))
print(m.losses)
Output:
&lt;denchmark-code&gt;[&lt;tf.Tensor: shape=(), dtype=float32, numpy=0.0&gt;]
&lt;/denchmark-code&gt;

Am I have a mistake using regularizer with these layers?
	</description>
	<comments>
		<comment id='1' author='jyhpsycho' date='2020-07-05T04:14:00Z'>
		SeparableConv1D also has same issue.
Case Conv1D:
m = tf.keras.models.Sequential()
m.add(tf.keras.layers.Input(32, 3))
m.add(tf.keras.layers.Conv1D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01), bias_regularizer=tf.keras.regularizers.l2(1.0E-01)))
m.add(tf.keras.layers.Conv1D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01)))
print(m.losses)
Output:
&lt;denchmark-code&gt;[&lt;tf.Tensor: shape=(), dtype=float32, numpy=0.30436406&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.0&gt;,
 &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.31131223&gt;]
&lt;/denchmark-code&gt;

Case SeparableConv1D:
m = tf.keras.models.Sequential()
m.add(tf.keras.layers.Input(32, 3))
m.add(tf.keras.layers.SeparableConv1D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01), bias_regularizer=tf.keras.regularizers.l2(1.0E-01)))
m.add(tf.keras.layers.SeparableConv1D(3, 3, kernel_regularizer=tf.keras.regularizers.l2(1.0E-01)))
print(m.losses)
Output:
&lt;denchmark-code&gt;[&lt;tf.Tensor: shape=(), dtype=float32, numpy=0.0&gt;]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='jyhpsycho' date='2020-07-06T06:16:15Z'>
		&lt;denchmark-link:https://github.com/jyhpsycho&gt;@jyhpsycho&lt;/denchmark-link&gt;

Request you to share colab link or complete code snippet with supporting files to reproduce the issue in our environment.It helps us in localizing the issue faster.Thanks!
		</comment>
		<comment id='3' author='jyhpsycho' date='2020-07-07T04:56:30Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;

Oh, I found that some typo on my examples(shape of input layer should be tuple, but not). I'll upload IPython notebook file and converted .py script for reproduce it.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4882572/41093.zip&gt;41093.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='jyhpsycho' date='2020-07-07T11:26:20Z'>
		I have tried in colab with TF versions 2.2, nightly versions and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/13d016c1c285c1c3a92bfadc9efaa5fb/untitled92.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='5' author='jyhpsycho' date='2020-11-13T09:16:12Z'>
		Please pay attention that according to the docs there is no  parameter in , but there is : &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/layers/DepthwiseConv2D&gt;https://www.tensorflow.org/api_docs/python/tf/keras/layers/DepthwiseConv2D&lt;/denchmark-link&gt;

The problem would be then that while keras accepts the both, it does not apply  without actually warning the user.
		</comment>
		<comment id='6' author='jyhpsycho' date='2020-11-14T05:01:43Z'>
		&lt;denchmark-link:https://github.com/mkarpushin-upstride&gt;@mkarpushin-upstride&lt;/denchmark-link&gt;
 The document seems to be changed after v2.3 release. On v2.2 there's no . The end-user cannot know what the option name should be used for specifying regularizer at that time, even if  works with v2.2.
&lt;denchmark-link:https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/keras/layers/ConvLSTM2D&gt;https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/keras/layers/ConvLSTM2D&lt;/denchmark-link&gt;

BTW, if depthwise_regularizer works on 2.2 and further version, this issue can be closed.
		</comment>
		<comment id='7' author='jyhpsycho' date='2020-11-14T05:23:30Z'>
		&lt;denchmark-link:https://colab.research.google.com/gist/jyhpsycho/3fd5a2d8ff6071c013137a69af6acb18/untitled92.ipynb&gt;https://colab.research.google.com/gist/jyhpsycho/3fd5a2d8ff6071c013137a69af6acb18/untitled92.ipynb&lt;/denchmark-link&gt;

I checked the  option (based on &lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
's colab code) and it seems to work with TF 2.2. &lt;denchmark-link:https://github.com/mkarpushin-upstride&gt;@mkarpushin-upstride&lt;/denchmark-link&gt;
 Thank you for clarification.
If there's any problem with test code, feel free to reopen this issue.
		</comment>
		<comment id='8' author='jyhpsycho' date='2020-11-14T05:23:32Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41093&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41093&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>