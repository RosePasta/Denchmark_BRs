<bug id='14916' author='gyang274' open_date='2017-11-27T18:26:25Z' closed_time='2018-12-13T22:46:46Z'>
	<summary>tf.nn.softmax(input, dim=-1, name=None), argument `dim` cannot take negative index other than -1?</summary>
	<description>
I expect that in the function tf.nn.softmax(input, dim=-1, name=None), the argument dim can take dim either positive or negative. However, it seems the only negative index can be taken is -1?
&lt;denchmark-code&gt;import tensorflow as tf

tf.__version__
&gt; '1.4.0'

xx = tf.constant(1, shape=[10, 28, 28, 3], dtype=tf.float32)

tf.nn.softmax(xx, dim=-1)
&gt; &lt;tf.Tensor 'Reshape_1:0' shape=(10, 28, 28, 3) dtype=float32&gt;

tf.nn.softmax(xx, dim=3)
&gt; &lt;tf.Tensor 'Reshape_3:0' shape=(10, 28, 28, 3) dtype=float32&gt;

tf.nn.softmax(xx, dim=-2)
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-8-c0dec6c1fa17&gt; in &lt;module&gt;()
----&gt; 1 tf.nn.softmax(xx, dim=-2)

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.pyc in softmax(logits, dim, name)
   1665       dimension of `logits`.
   1666   """
-&gt; 1667   return _softmax(logits, gen_nn_ops._softmax, dim, name)
   1668 
   1669 

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.pyc in _softmax(logits, compute_op, dim, name)
   1624   # Swap logits' dimension of dim and its last dimension.
   1625   input_rank = array_ops.rank(logits)
-&gt; 1626   logits = _swap_axis(logits, dim, math_ops.subtract(input_rank, 1))
   1627   shape_after_swap = array_ops.shape(logits)
   1628 

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.pyc in _swap_axis(logits, dim_index, last_index, name)
   1596     return array_ops.transpose(logits,
   1597                                array_ops.concat([
-&gt; 1598                                    math_ops.range(dim_index), [last_index],
   1599                                    math_ops.range(dim_index + 1, last_index),
   1600                                    [dim_index]

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/math_ops.pyc in range(start, limit, delta, dtype, name)
   1232       delta = cast(delta, inferred_dtype)
   1233 
-&gt; 1234     return gen_math_ops._range(start, limit, delta, name=name)
   1235 
   1236 

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.pyc in _range(start, limit, delta, name)
   3257   if _ctx.in_graph_mode():
   3258     _, _, _op = _op_def_lib._apply_op_helper(
-&gt; 3259         "Range", start=start, limit=limit, delta=delta, name=name)
   3260     _result = _op.outputs[:]
   3261     _inputs_flat = _op.inputs

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in _apply_op_helper(self, op_type_name, name, **keywords)
    785         op = g.create_op(op_type_name, inputs, output_types, name=scope,
    786                          input_types=input_types, attrs=attr_protos,
--&gt; 787                          op_def=op_def)
    788       return output_structure, op_def.is_stateful, op
    789 

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in create_op(self, op_type, inputs, dtypes, input_types, name, attrs, op_def, compute_shapes, compute_device)
   2956         op_def=op_def)
   2957     if compute_shapes:
-&gt; 2958       set_shapes_for_outputs(ret)
   2959     self._add_op(ret)
   2960     self._record_op_seen_by_control_dependencies(ret)

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in set_shapes_for_outputs(op)
   2207       shape_func = _call_cpp_shape_fn_and_require_op
   2208 
-&gt; 2209   shapes = shape_func(op)
   2210   if shapes is None:
   2211     raise RuntimeError(

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in call_with_requiring(op)
   2157 
   2158   def call_with_requiring(op):
-&gt; 2159     return call_cpp_shape_fn(op, require_shape_fn=True)
   2160 
   2161   _call_cpp_shape_fn_and_require_op = call_with_requiring

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.pyc in call_cpp_shape_fn(op, require_shape_fn)
    625     res = _call_cpp_shape_fn_impl(op, input_tensors_needed,
    626                                   input_tensors_as_shapes_needed,
--&gt; 627                                   require_shape_fn)
    628     if not isinstance(res, dict):
    629       # Handles the case where _call_cpp_shape_fn_impl calls unknown_shape(op).

/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.pyc in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, require_shape_fn)
    689       missing_shape_fn = True
    690     else:
--&gt; 691       raise ValueError(err.message)
    692 
    693   if missing_shape_fn:

ValueError: Requires start &lt;= limit when delta &gt; 0: 0/-2 for 'range' (op: 'Range') with input shapes: [], [], [] and with computed input tensors: input[0] = &lt;0&gt;, input[1] = &lt;-2&gt;, input[2] = &lt;1&gt;.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='gyang274' date='2017-11-27T19:41:41Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/14920&gt;#14920&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='2' author='gyang274' date='2017-11-29T18:35:13Z'>
		&lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
, thanks for looking into fixing this.
		</comment>
	</comments>
</bug>