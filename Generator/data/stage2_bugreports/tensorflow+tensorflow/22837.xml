<bug id='22837' author='jam3sn' open_date='2018-10-09T13:17:36Z' closed_time='2018-11-14T07:11:13Z'>
	<summary>model.save() returning a 'NotImplementedError'</summary>
	<description>
Please go to Stack Overflow for help and support:
&lt;denchmark-link:https://stackoverflow.com/questions/tagged/tensorflow&gt;https://stackoverflow.com/questions/tagged/tensorflow&lt;/denchmark-link&gt;

If you open a GitHub issue, here is our policy:

It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).
The form below must be filled out.
It shouldn't be a TensorBoard issue. Those go here.

Here's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 1803
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): From pip
TensorFlow version (use command below): 1.11.0
Python version: 3.6.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:
Exact command to reproduce:

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

model.fit(x_train, y_train, epochs=3)

model.save('epic_num_reader.model')
You can collect some of this information using our environment capture script:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&lt;/denchmark-link&gt;

You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I'm receiving a  when trying to save a new model. The code above written above creates the error. This code is from a tutorial i've been following here &lt;denchmark-link:https://pythonprogramming.net/introduction-deep-learning-python-tensorflow-keras/&gt;Python Programming (Sentdex)&lt;/denchmark-link&gt;
.
It's on a fresh machine with a fresh install of python and tensorflow.
Talking with some others on a Discord chat, i'm not the first person who's encountered this recently.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.
&lt;denchmark-code&gt;---------------------------------------------------------------------------
NotImplementedError                       Traceback (most recent call last)
&lt;ipython-input-11-7b7b789f82a6&gt; in &lt;module&gt;
----&gt; 1 model.save('epic_num_reader.model')

c:\users\james\appdata\local\programs\python\python36\lib\site-packages\tensorflow\python\keras\engine\network.py in save(self, filepath, overwrite, include_optimizer)
   1356     """
   1357     if not self._is_graph_network:
-&gt; 1358       raise NotImplementedError
   1359 
   1360     from tensorflow.python.keras.models import save_model  # pylint: disable=g-import-not-at-top

NotImplementedError:
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jam3sn' date='2018-10-09T17:06:48Z'>
		Please take a look at &lt;denchmark-link:https://www.tensorflow.org/guide/saved_model#save_variables&gt;tf.train.Saver() method&lt;/denchmark-link&gt;
 and also an &lt;denchmark-link:https://github.com/lazyprogrammer/machine_learning_examples/blob/master/ann_class2/tf_with_save.py&gt;example to save a model&lt;/denchmark-link&gt;
 .
		</comment>
		<comment id='2' author='jam3sn' date='2018-10-09T19:51:45Z'>
		Working on a fix for this, in the meantime a workaround is to provide input_shape to the first Layer or your Model:
model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten(input_shape=...))
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

model.fit(x_train, y_train, epochs=3)

model.save('epic_num_reader.model')
		</comment>
		<comment id='3' author='jam3sn' date='2018-10-09T22:36:45Z'>
		Just a heads up. I was able to execute the &lt;denchmark-link:https://github.com/jam3sn&gt;@jam3sn&lt;/denchmark-link&gt;
 's code successfully in TF 1.10 but it failed in TF 1.11
		</comment>
		<comment id='4' author='jam3sn' date='2018-10-26T12:49:34Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='5' author='jam3sn' date='2018-11-02T22:33:41Z'>
		Yep this is still happening with TF 1.11
		</comment>
		<comment id='6' author='jam3sn' date='2018-11-14T05:24:22Z'>
		I could run the code successfully in tf-nightly.
		</comment>
		<comment id='7' author='jam3sn' date='2018-11-14T07:11:13Z'>
		Great, yes sorry meant to update this, the fix for this is in
		</comment>
		<comment id='8' author='jam3sn' date='2018-12-12T18:37:49Z'>
		This is still broken in 1.12.
		</comment>
		<comment id='9' author='jam3sn' date='2018-12-13T11:14:30Z'>
		it shows not implemented  error : Currently save requires model to be a graph network. Consider using save_weights, in order to save the weights of the model.
in 1.12.0 version
		</comment>
		<comment id='10' author='jam3sn' date='2019-01-15T12:45:00Z'>
		I am also having this problem on version 1.12.0
		</comment>
		<comment id='11' author='jam3sn' date='2019-01-30T14:41:00Z'>
		I am also getting the same problem in version 1.12.0
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

TypeError                                 Traceback (most recent call last)
 in 
----&gt; 1 tf.keras.models.save_model('epic_num_reader.model')
TypeError: save_model() missing 1 required positional argument: 'filepath'
		</comment>
		<comment id='12' author='jam3sn' date='2019-01-30T14:51:02Z'>
		&lt;denchmark-link:https://github.com/muhammadmw&gt;@muhammadmw&lt;/denchmark-link&gt;
 I found that my problem was caused by subclassing Keras.Model. A model created by subclassing Keras.Model cannot be serialized by using the save_model function. I switched over to the Keras functional Api and I no longer have the problem.
		</comment>
		<comment id='13' author='jam3sn' date='2019-02-26T09:50:48Z'>
		this is happening with tf-nightly-2.0-preview-2.0.0.dev20190225
		</comment>
		<comment id='14' author='jam3sn' date='2019-07-25T02:33:11Z'>
		I am experiencing this in 2.2.4-tf
		</comment>
		<comment id='15' author='jam3sn' date='2019-08-14T07:40:41Z'>
		So this issue is closed without solution?
		</comment>
		<comment id='16' author='jam3sn' date='2019-09-24T02:06:37Z'>
		Add save_weights_only = True for ModelCheckpoint or use model.save_weights()
		</comment>
		<comment id='17' author='jam3sn' date='2020-12-28T20:35:35Z'>
		
@muhammadmw I found that my problem was caused by subclassing Keras.Model. A model created by subclassing Keras.Model cannot be serialized by using the save_model function. I switched over to the Keras functional Api and I no longer have the problem.

Hey So can you please tell me how you fixed the problem as I am trying to save the weights and when I try to load the weights it gives error.
Unable to load weights saved in HDF5 format into a subclassed Model which has not created its variables yet. Call the Model first, then load the weights.
		</comment>
	</comments>
</bug>