<bug id='38850' author='Arktius' open_date='2020-04-23T21:58:13Z' closed_time='2020-07-11T20:55:11Z'>
	<summary>Mixed Precision + Gaussian Noise throws data type error float16 / float 32</summary>
	<description>
I get the following error:
&lt;denchmark-code&gt;
  File "&lt;ipython-input-1-447a869fb5df&gt;", line 171, in ae
    encoder,decoder = AddLayers(neurons,setup['AFunction'],setup['BatchNorm'],setup['Dropout'],setup['Layers'],dim,setup['Noise'])

  File "C:\MA\RecommenderSystems\code\helper.py", line 89, in AddLayers
    encoder.add(GaussianNoise(noise))

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\training\tracking\base.py", line 457, in _method_wrapper
    result = method(self, *args, **kwargs)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\engine\sequential.py", line 196, in add
    output_tensor = layer(self.outputs[0])

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py", line 842, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\layers\noise.py", line 70, in call
    return K.in_train_phase(noised, inputs, training=training)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\backend.py", line 4285, in in_train_phase
    x = switch(training, x, alt)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\backend.py", line 4218, in switch
    x = control_flow_ops.cond(condition, then_expression_fn, else_expression_fn)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\util\deprecation.py", line 507, in new_func
    return func(*args, **kwargs)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\control_flow_ops.py", line 1174, in cond
    return cond_v2.cond_v2(pred, true_fn, false_fn, name)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\cond_v2.py", line 84, in cond_v2
    op_return_value=pred)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\framework\func_graph.py", line 915, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\layers\noise.py", line 68, in noised
    shape=array_ops.shape(inputs), mean=0., stddev=self.stddev)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\math_ops.py", line 899, in binary_op_wrapper
    return func(x, y, name=name)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\math_ops.py", line 1197, in _add_dispatch
    return gen_math_ops.add_v2(x, y, name=name)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\gen_math_ops.py", line 549, in add_v2
    "AddV2", x=x, y=y, name=name)

  File "C:\Users\Admin\Anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\framework\op_def_library.py", line 563, in _apply_op_helper
    inferred_from[input_arg.type_attr]))

TypeError: Input 'y' of 'AddV2' Op has type float32 that does not match type float16 of argument 'x'.
&lt;/denchmark-code&gt;

System information

Windows 10 [Version 10.0.18362.418]
TensorFlow version 2.0.0 via Conda
Python version: 3.6.10
CUDA/cuDNN version: 10.0.0130 / 7.6.5
GPU model and memory: NVIDIA 2060 Super 8GB

Describe the current behavior
The error only occurs only if mixed precision and noise is applied.
When mixed precision is applied, then:
&lt;denchmark-code&gt;os.environ['TF_ENABLE_AUTO_MIXED_PRECISION'] = '1' #using tensor cores
policy = tf.keras.mixed_precision.experimental.Policy('mixed_float16')
tf.keras.mixed_precision.experimental.set_policy(policy)
&lt;/denchmark-code&gt;

and data are converted to float16.
Converting the output of the previous dense layer to float16 couldn't solve the problem.
&lt;denchmark-code&gt;encoder.add(Dense(eneurons[0],input_dim=dim,dtype=tf.float16))

if noise:
        encoder.add(GaussianNoise(noise))
&lt;/denchmark-code&gt;

I cannot update to a higher TF version.
	</description>
	<comments>
		<comment id='1' author='Arktius' date='2020-04-24T06:17:53Z'>
		&lt;denchmark-link:https://github.com/Arktius&gt;@Arktius&lt;/denchmark-link&gt;

we see that the code shared is not sufficient for us to replicate the issue, could you please share a simple stand alone code to replicate.
		</comment>
		<comment id='2' author='Arktius' date='2020-04-25T05:56:59Z'>
		&lt;denchmark-code&gt;import os
import tensorflow as tf
from tensorflow.keras.layers import Dense,GaussianNoise
from tensorflow.keras.models import Sequential


os.environ['TF_ENABLE_AUTO_MIXED_PRECISION'] = '1' #using tensor cores
policy = tf.keras.mixed_precision.experimental.Policy('mixed_float16')
tf.keras.mixed_precision.experimental.set_policy(policy)


#models
encoder = Sequential()
encoder.add(Dense(5,input_dim=5))
encoder.add(GaussianNoise(0.01))
    

&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='Arktius' date='2020-04-25T12:46:06Z'>
		With casting the data to float16, an error during backpropagation occurs...
&lt;denchmark-code&gt;import os
import numpy as np
import tensorflow as tf
from tensorflow.keras.layers import Dense,GaussianNoise,Activation
from tensorflow.keras.models import Sequential
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input
from sklearn.metrics import mean_squared_error as mse


os.environ['TF_ENABLE_AUTO_MIXED_PRECISION'] = '1' #using tensor cores
policy = tf.keras.mixed_precision.experimental.Policy('mixed_float16')
tf.keras.mixed_precision.experimental.set_policy(policy)


encoder = Sequential()
encoder.add(Dense(5,input_dim=5,dtype=tf.float16))
encoder.add(GaussianNoise(0.01,dtype='float32'))
encoder.add(Activation('relu'))
encoder.add(Dense(5))    
    

input_dim = Input(shape = (5, ),name='rating_in')

model = Model(input_dim, encoder(input_dim))
    
model.compile(loss=tf.keras.losses.mean_squared_error)
  
data = np.asarray(np.random.rand(20,5),dtype='float16') ######## cast to float16
model.fit(data,data,batch_size=10)  
    
&lt;/denchmark-code&gt;

Even if I cast the gradients in the custom training loop, the training doesn't get through.
&lt;denchmark-code&gt;def ModelTrain(model,optim,x,w,y,train_loss):
        with tf.GradientTape() as tape:
            predictions = model(x) 
            loss = MMSE(y,w,predictions)
            scaled_loss = optim.get_scaled_loss(loss)
        
        scaled_gradients = tape.gradient(scaled_loss, model.trainable_variables)
        gradients = optim.get_unscaled_gradients([tf.cast(x,tf.float32) for x in scaled_gradients])
        optim.apply_gradients(zip((gradients), model.trainable_variables))
&lt;/denchmark-code&gt;

TypeError: Input 'y' of 'Mul' Op has type float32 that does not match type float16 of argument 'x'.
And If I now cast the trainable_variables to float16, I'll get this:
AttributeError: 'Tensor' object has no attribute '_in_graph_mode'
		</comment>
		<comment id='4' author='Arktius' date='2020-04-29T06:54:48Z'>
		Any suggestions?
		</comment>
		<comment id='5' author='Arktius' date='2020-04-29T10:31:30Z'>
		&lt;denchmark-link:https://github.com/Arktius&gt;@Arktius&lt;/denchmark-link&gt;

Can you please provide simple stand alone code such that we can replicate the issue, if possible share a colab gist, with the error the code shared in incomplete, the error faced is not same as yours. please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/3d02bd5e25f035a97a4393df156e2763/untitled162.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='Arktius' date='2020-04-29T10:36:21Z'>
		&lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/3d02bd5e25f035a97a4393df156e2763/untitled162.ipynb&gt;https://colab.research.google.com/gist/Saduf2019/3d02bd5e25f035a97a4393df156e2763/untitled162.ipynb&lt;/denchmark-link&gt;

You need !pip install tensorflow-gpu==2.0.
		</comment>
		<comment id='7' author='Arktius' date='2020-04-29T10:46:37Z'>
		I am able to replicate the issue reported, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/07c4c42cd8b49bc19355b4b39a59b9ee/untitled162.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Arktius' date='2020-05-03T10:20:55Z'>
		This is fixed latest tf_nightly_gpu-2.2.0.dev20200503
		</comment>
		<comment id='9' author='Arktius' date='2020-05-03T18:49:08Z'>
		Could you please show me what has changed? I've just looked in the release notes, but I couldn't find something related to Gaussian noise.
I know that TF 2.1 also works as well, but I don't know why and I cannot use versions higher than 2.0.
		</comment>
		<comment id='10' author='Arktius' date='2020-05-15T00:32:35Z'>
		Take a look at &lt;denchmark-link:f9e899854cc96db28564fa65f22d32a647268fc1&gt;commit&lt;/denchmark-link&gt;
.  A bunch of other fixes were made as well so its a but tricky to pin point exactly.
		</comment>
		<comment id='11' author='Arktius' date='2020-05-15T05:05:10Z'>
		The link is probably broken. Did you want me to see the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/releases&gt;release notes&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='12' author='Arktius' date='2020-06-10T17:51:25Z'>
		&lt;denchmark-link:https://github.com/Arktius&gt;@Arktius&lt;/denchmark-link&gt;

I am not seeing any issue with TF 2.2 version.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/127f1a5aba37886a48251c5fbbdc1b4c/untitled971.ipynb&gt;here&lt;/denchmark-link&gt;
.Please, verify once and close this issue.Thanks!
		</comment>
		<comment id='13' author='Arktius' date='2020-06-11T04:12:00Z'>
		
I know that TF 2.1 also works as well, but I don't know why and I cannot use versions higher than 2.0.

Thanks for your comment, but I cannot work with versions higher than 2.0 at the moment due to driver issues on the server.
		</comment>
		<comment id='14' author='Arktius' date='2020-06-27T19:22:58Z'>
		Sorry for the delay in response. Please refer this commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f9e899854cc96db28564fa65f22d32a647268fc1#diff-784ae2490bf11479ceb7c81d180ba79a&gt;f9e8998&lt;/denchmark-link&gt;
 for the changes.
		</comment>
		<comment id='15' author='Arktius' date='2020-07-04T20:19:31Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='16' author='Arktius' date='2020-07-11T20:55:10Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='17' author='Arktius' date='2020-07-11T20:55:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38850&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38850&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>