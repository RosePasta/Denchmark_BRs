<bug id='44979' author='mapa17' open_date='2020-11-18T13:59:34Z' closed_time='2020-11-18T20:50:29Z'>
	<summary>tf.keras.Model.fit() fails with RaggedTensor if using validation_split</summary>
	<description>
System information

I am using Arch Linux at 5.9.1-arch1-1
Tensorflow as installed using pip in a conda virtual environment
I am using tensorflow on CPU only
I have tested the code provided here in a jupyter-lab notebook

Tensorflow version: 2.2.0
Describe the current behavior
Trying to fit a keras model using a RaggedTensor as input fails if validation_split &gt; 0.0 is used.
Describe the expected behavior
Training would work the same way it does setting validation_split to 0.0.
Standalone code to reproduce the issue
from tensorflow.compat.v1.keras.layers import Dense, Dropout, concatenate
from tensorflow.keras.layers import LSTM, Input, concatenate
from tensorflow.keras.initializers import glorot_uniform, Constant
from tensorflow.keras.models import Model
from tensorflow.keras import activations
import tensorflow as tf

DS_SIZE=4
SEQ_LENGTH=5
MAX_SEQ_LENGTH=5


def prepare_data(subjects, seq_lengths, max_seq_length):
    # Define the sub sequence lenghts
    seq_lengths = np.random.randint(max_seq_length, size=(subjects))
    
    # Get the values
    seq_values = np.random.randint(100, size=(sum(seq_lengths)), dtype=np.int32)

    # Create a nested ragged tensor, of shape [subjects, (seq_length), (0...max_seq_length)]
    X = tf.expand_dims(tf.RaggedTensor.from_row_lengths(values=seq_values, row_lengths=seq_lengths), 2)
    
    Y = tf.math.reduce_sum(X, axis=(2, 1))

    return (X, Y)
    
X, Y = prepare_data(DS_SIZE, SEQ_LENGTH, MAX_SEQ_LENGTH)

print(f'Tensorflow version: {(tf.version.GIT_VERSION, tf.version.VERSION)}')
print(f'Input data:\nX.shape = {X.shape}\nX={X}')

from tensorflow.keras.layers import Lambda

inputs = Input(shape=(None,1), name="Input", ragged=True)
lstm = LSTM(5, return_sequences=False, name='LSTM')(inputs)
predictor = Dense(1, activation=activations.linear, name='Predictor')(lstm)

model = Model(inputs=inputs, outputs=predictor)
model.summary()

model.compile(
    loss='mse',
    optimizer=tf.keras.optimizers.Adam(learning_rate=0.2),
    metrics=[tf.keras.metrics.MeanSquaredError()],
    run_eagerly=True  # Enable eager mode!
)

history = model.fit(
    X,
    Y,
    validation_split = 0.1,
    epochs = 1,
    batch_size = 2,
)
Other info / logs
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-37-31ef63a3e7dd&gt; in &lt;module&gt;
     50     validation_split = 0.1,
     51     epochs = 1,
---&gt; 52     batch_size = 2,
     53 )

~/miniconda3/envs/MAI/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py in _method_wrapper(self, *args, **kwargs)
     64   def _method_wrapper(self, *args, **kwargs):
     65     if not self._in_multi_worker_mode():  # pylint: disable=protected-access
---&gt; 66       return method(self, *args, **kwargs)
     67 
     68     # Running inside `run_distribute_coordinator` already.

~/miniconda3/envs/MAI/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)
    795           data_adapter.train_validation_split((x, y, sample_weight),
    796                                               validation_split=validation_split,
--&gt; 797                                               shuffle=False))
    798 
    799     with self.distribute_strategy.scope(), \

~/miniconda3/envs/MAI/lib/python3.7/site-packages/tensorflow/python/keras/engine/data_adapter.py in train_validation_split(arrays, validation_split, shuffle)
   1309     raise ValueError(
   1310         "`validation_split` is only supported for Tensors or NumPy "
-&gt; 1311         "arrays, found: {}".format(arrays))
   1312 
   1313   if all(t is None for t in flat_arrays):

ValueError: `validation_split` is only supported for Tensors or NumPy arrays, found: (&lt;tf.RaggedTensor [[[55], [39], [36], [38]], [[45], [15], [84], [38]], [[51], [20], [44], [28]], [[38], [98]]]&gt;, &lt;tf.Tensor: shape=(4,), dtype=int32, numpy=array([168, 182, 143, 136], dtype=int32)&gt;, None)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mapa17' date='2020-11-18T20:43:02Z'>
		It is duplicate of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/43157&gt;#43157&lt;/denchmark-link&gt;
. Please close this and  upvote/subscribe to that one.
		</comment>
		<comment id='2' author='mapa17' date='2020-11-18T20:50:29Z'>
		 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/43157&gt;#43157&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='mapa17' date='2020-11-18T20:50:31Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44979&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44979&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>