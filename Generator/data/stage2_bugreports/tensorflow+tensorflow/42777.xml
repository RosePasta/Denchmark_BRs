<bug id='42777' author='fferroni' open_date='2020-08-29T17:25:01Z' closed_time='2020-09-14T11:41:12Z'>
	<summary>De-serialization bug from SavedModel format</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.15.3
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
Getting a ValueError when deserializing a model built with functional API and no custom layers.
&lt;denchmark-code&gt;ValueError: You tried to call `count_params` on input_mnist, but the layer isn't built. You can build it manually via: `input_mnist.build(batch_input_shape)`.
&lt;/denchmark-code&gt;

Test code to reproduce:
&lt;denchmark-code&gt;import os
import tempfile

import tensorflow as tf
import numpy as np


def test_bug_tensorflow():

    nb_inputs = 784
    hidden_units = [32, 32]
    nb_classes = 10

    # backbone model
    input_1 = tf.keras.layers.Input(shape=(nb_inputs,), name="input_backbone", dtype=tf.float32)
    x = input_1
    for i, units in enumerate(hidden_units):
        x = tf.keras.layers.Dense(units, name=f"dense_{i}", activation="relu")(x)
    backbone = tf.keras.models.Model(input_1, x, name="backbone")

    # classifier
    input_2 = tf.keras.layers.Input(shape=(nb_inputs,), name="input_mnist", dtype=tf.float32)
    x = backbone(input_2)
    x = tf.keras.layers.Dense(nb_classes, activation="softmax", name="output")(x)
    mnist_model = tf.keras.models.Model(input_2, x, name="mnist")
    mnist_model.predict(np.zeros((100, nb_inputs)))
    print(mnist_model.summary())

    tmp_dir = tempfile.TemporaryDirectory()
    tmp_path = str(tmp_dir.name)
    
    mnist_model.save(os.path.join(tmp_path, "model.h5"), save_format="h5")
    new_model = tf.keras.models.load_model(os.path.join(tmp_path, "model.h5"))
    mnist_model.predict(np.zeros((100, nb_inputs)))
    print(new_model.summary())

    mnist_model.save(tmp_path, save_format="tf")
    new_model = tf.keras.models.load_model(tmp_path)
    mnist_model.predict(np.zeros((100, nb_inputs)))
    print(new_model.summary())  # raises ValueError
&lt;/denchmark-code&gt;

Describe the expected behavior
Things work as expected with h5, but not save_format. If I remove the backbone model from the MNIST model, it works.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='fferroni' date='2020-08-29T17:33:46Z'>
		Seems to be fixed in latest 2.3.0 release, however, I need to use v1.x
Is there any way to patch this?
		</comment>
		<comment id='2' author='fferroni' date='2020-08-31T10:19:54Z'>
		&lt;denchmark-link:https://github.com/fferroni&gt;@fferroni&lt;/denchmark-link&gt;

I ran the code on tf 1.15 and on tf-nightly and do not see any error in either, please refer tot he &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/51f7fc8d0324b9d9003997b50959de93/untitled401.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
Please let us know how can we help you.
		</comment>
		<comment id='3' author='fferroni' date='2020-09-07T11:16:24Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='4' author='fferroni' date='2020-09-14T11:41:10Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='5' author='fferroni' date='2020-09-14T11:41:14Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42777&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42777&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>