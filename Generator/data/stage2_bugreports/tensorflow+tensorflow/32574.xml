<bug id='32574' author='schoettner' open_date='2019-09-17T08:31:42Z' closed_time='2019-09-17T21:40:13Z'>
	<summary>tensorflow2rc1 import bug</summary>
	<description>
Hi,
I was trying to convert one of my training templates to TensorFlow2 but encountered several issues. I can not reach a point where my code is even executed because many imports already terminate the application at start.
from tensorflow_core.python.client.session import InteractiveSession

def main():
    print('hello world')

if __name__ == "__main__":
    main()
This code results instantly in an error and the print is never reached.
&lt;denchmark-code&gt;2019-09-17 09:18:51.362815: E tensorflow/core/lib/monitoring/collection_registry.cc:77] Cannot register 2 metrics with the same name: /tensorflow/api/python/session_create_counter
Traceback (most recent call last):
  File "/home/xxx/dev/tf2xxx/bug.py", line 1, in &lt;module&gt;
    from tensorflow_core.python.client.session import InteractiveSession
  File "/home/xxx/.virtualenv/tf2/lib/python3.6/site-packages/tensorflow_core/python/client/session.py", line 49, in &lt;module&gt;
    'Counter for number of sessions created in Python.')
  File "/home/xxx/.virtualenv/tf2/lib/python3.6/site-packages/tensorflow_core/python/eager/monitoring.py", line 183, in __init__
    name, description, *labels)
  File "/home/xxx/.virtualenv/tf2/lib/python3.6/site-packages/tensorflow_core/python/eager/monitoring.py", line 121, in __init__
    self._metric = self._metric_methods[self._label_length].create(*args)
tensorflow.python.framework.errors_impl.AlreadyExistsError: Another metric with the same name already exists.
&lt;/denchmark-code&gt;

Next to InteractiveSession there are multiple other imports that cause problems with monitoring.py. Changing to tf2's eager mode and not worry about the session did not do the trick.
Keras however runs fine and does not cause any problems (except the conv2d layer + CUDA what causes problems for a while already).
System information

OS Platform and Distribution: Ubuntu 18.04
TensorFlow installed from: pip3
TensorFlow version: 2.0.0rc1
Python version: 3.6.8

	</description>
	<comments>
		<comment id='1' author='schoettner' date='2019-09-17T11:45:37Z'>
		I have tried on colab with TF version 2.0.0rc1 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/3a294d09dddd2f1fc218bd4bc30cc47c/untitled197.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='schoettner' date='2019-09-17T16:02:30Z'>
		Don't import directly from tensorflow_core, that is private API and will change under you and break you.
This import is what's causing your problem
		</comment>
		<comment id='3' author='schoettner' date='2019-09-17T21:40:13Z'>
		&lt;denchmark-link:https://github.com/schoettner&gt;@schoettner&lt;/denchmark-link&gt;
 I can confirm that &lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 suggestion is working without any issues in  and .  Just change first line to

I am closing this issue as it was resolved. Please feel free to open the issue if the suggested approach is not working for you. Thanks!
		</comment>
		<comment id='4' author='schoettner' date='2019-09-17T21:40:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32574&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32574&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='schoettner' date='2019-09-17T22:34:34Z'>
		Note that both importing from tensorflow_core and directly importing from .python are not supported and will break without any rollback.
The recommended way to use TensorFlow is import tensorflow as tf and accessing the API via the tf symbol and it's attributes.
		</comment>
		<comment id='6' author='schoettner' date='2019-09-18T13:10:30Z'>
		Hi, thanks for your feedback. However, I can not confirm your solution. The imports are actually resolved by my IDE (IntelliJ Ultimate) because I could not use the imports I used in earlier versions.
import tensorflow as tf

def main():
    with tf.Session() as sess:
        a = tf.constant(1, tf.float32)
        b = tf.constant(2, tf.float32)
        c = a + b
        sess.run([c])
    return

if __name__ == "__main__":
    main()
This code runs fine with tf14.0 while it does not run in tf2.0.0rc1
&lt;denchmark-code&gt;AttributeError: module 'tensorflow' has no attribute 'Session'
&lt;/denchmark-code&gt;

I tried the code in your colab code too. Same result.
		</comment>
		<comment id='7' author='schoettner' date='2019-09-18T15:38:07Z'>
		Oh, this is because TF 2.0 is eager by default, no longer has sessions.
Try this instead:
import tensorflow as tf

def main():
    a = tf.constant(1, tf.float32)
    b = tf.constant(2, tf.float32)
    c = a + b
    tf.print(c)

if __name__ == "__main__":
    main()
Note that I also removed the not needed return
		</comment>
		<comment id='8' author='schoettner' date='2019-09-19T07:28:17Z'>
		Hi Mihai,
removing the session is not a solution. I am aware that tf2 executes in eager mode. Session is only an example. I am not able to import a bunch of dependencies with tf.xxx
		</comment>
		<comment id='9' author='schoettner' date='2019-09-19T13:48:55Z'>
		&lt;denchmark-link:https://github.com/schoettner&gt;@schoettner&lt;/denchmark-link&gt;
 Can you describe with little more details on which of the tf.xxx dependencies you are not able to import? Thanks!
		</comment>
		<comment id='10' author='schoettner' date='2019-09-19T15:37:43Z'>
		If you really need TF1.x symbols, look into tf.compat.v1 but note that symbols from there will disappear at one point when we assume that most of our users have switched to using 2.x APIs.
		</comment>
		<comment id='11' author='schoettner' date='2019-09-19T17:08:52Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 i am working on it at the moment. Since most of the code broke after the migration (i am not used to eager mode) it takes some time to fix it. I am not sure why, but my IDE also does not support tf imports as it used to. When I worked through all the issues I am happy to provide the full list.
		</comment>
		<comment id='12' author='schoettner' date='2019-09-19T17:14:30Z'>
		There is a converter to automatically change your code to TF2.0.
		</comment>
		<comment id='13' author='schoettner' date='2019-09-22T11:54:23Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 To get a better understanding of changes from TF1 to TF2 I did not want to use the converter but do it myself. However, after several hours I resign. Many (but not all) imports could be fixed with adding
from __future__ import absolute_import, division, print_function, unicode_literals
But I failed to get non-eager mode working without tf.compact.v1. So my current situation is:

I can not access private library calls because they break my code before startup. Also not sure if they would help solve my problems anyway.
For session based training I would have to add legacy code from tf.compact.v1,  what I want to avoid.
Big chunks of my code are deprecated, because I am using tf instead of keras layers.

Due to those points I decided to drop my current templates and start from scratch. I follow the suggestion to switch to Keras and hope the issues I encountered some time ago are fixed (e.g. CUDA errors with the Conv2D layer or wrong mean updating of BatchNorm during inference). Thank you for your support!
		</comment>
		<comment id='14' author='schoettner' date='2019-09-23T12:12:19Z'>
		I am having a similar problem, which I posted &lt;denchmark-link:https://stackoverflow.com/questions/58012741/error-importing-tensorflow-alreadyexistserror-another-metric-with-the-same-nam&gt;here&lt;/denchmark-link&gt;
. If I import tensorflow 2.0 twice in the same IPython console, I get the same error posted here.
		</comment>
		<comment id='15' author='schoettner' date='2019-09-23T14:07:51Z'>
		&lt;denchmark-link:https://github.com/rodrigovimieiro&gt;@rodrigovimieiro&lt;/denchmark-link&gt;
 I answered there but summarizing here: TF imports have side effects which should be only executed once. Doing the same import twice in the same app results in that error. Please always use the only supported method of  (once) and then accessing the API via .
Note that this should go in a different issue, too.
		</comment>
	</comments>
</bug>