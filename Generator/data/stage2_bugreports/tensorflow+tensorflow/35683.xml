<bug id='35683' author='artemmavrin' open_date='2020-01-09T00:34:05Z' closed_time='2020-01-10T22:52:55Z'>
	<summary>Wrapper.from_config mutates its input</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): platform-independent
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.1
Python version: 3.7

Describe the current behavior
tf.keras.layers.Wrapper.from_config modifies its config parameter, which can cause unexpected side effects in calling code.



tensorflow/tensorflow/python/keras/layers/wrappers.py


        Lines 83 to 87
      in
      e5bf8de






 def from_config(cls, config, custom_objects=None): 



 from tensorflow.python.keras.layers import deserialize as deserialize_layer # pylint: disable=g-import-not-at-top 



 layer = deserialize_layer( 



 config.pop('layer'), custom_objects=custom_objects) 



 return cls(layer, **config) 





Specifically, config.pop in line 86 above mutates the config dict in a way that persists outside the from_config function call.
Elsewhere (e.g., in tf.keras.layers.Bidirectional.from_config) this is avoided by copying the config dict:



tensorflow/tensorflow/python/keras/layers/wrappers.py


        Lines 743 to 745
      in
      e5bf8de






 def from_config(cls, config, custom_objects=None): 



 # Instead of updating the input, create a copy and use that. 



 config = config.copy() 





Describe the expected behavior
Being able to call tf.keras.layers.Wrapper.from_config(config) without config changing.
I have a use case where I am subclassing the Wrapper class and relying on its from_config method. My workaround is to call from_config(config.copy()), but I don't think this should be required.
Code to reproduce the issue
import tensorflow as tf


class MyWrapper(tf.keras.layers.Wrapper):
    def call(self, inputs, *args, **kwargs):
        return self.layer(inputs, *args, **kwargs)


wrapper = MyWrapper(tf.keras.layers.Dense(1))
config = wrapper.get_config()
config_copy = config.copy()
assert config == config_copy

wrapper_from_config = MyWrapper.from_config(config)
new_config = wrapper.get_config()
assert new_config == config_copy
assert config == config_copy  # Fails! The 'layer' key has been popped from config
	</description>
	<comments>
		<comment id='1' author='artemmavrin' date='2020-01-10T22:52:56Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35683&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35683&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>