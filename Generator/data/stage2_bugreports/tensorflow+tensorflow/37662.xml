<bug id='37662' author='chennuo0125-HIT' open_date='2020-03-17T08:03:11Z' closed_time='2020-04-24T11:10:31Z'>
	<summary>dimension lost by using tf_trt</summary>
	<description>
I use:
OS: ubuntu 18.04
cuda: 10.0
cudnn: 7.6.3
python:3.6
tensorflow-gpu:1.15
GPU: nvidia jetson xavier kit
memory: 32G
the source code line is &lt;denchmark-link:url&gt;https://github.com/nwojke/deep_sort/blob/280b8bdb255f223813ff4a8679f3e1321b08cdfc/tools/generate_detections.py#L71&lt;/denchmark-link&gt;

the tf model is &lt;denchmark-link:url&gt;https://drive.google.com/open?id=1bB66hP9voDXuoBoaCcKYY7a8IYzMMs4P&lt;/denchmark-link&gt;

old code :
&lt;denchmark-code&gt;74    def __init__(self, checkpoint_filename, input_name="images",
75                output_name="features"):
76        self.session = tf.Session()
77        with tf.gfile.GFile(checkpoint_filename, "rb") as file_handle:
78             graph_def = tf.GraphDef()
79             graph_def.ParseFromString(file_handle.read())
80         tf.import_graph_def(graph_def, name="net")
81         self.input_var = tf.get_default_graph().get_tensor_by_name(
82             "net/%s:0" % input_name)
83         self.output_var = tf.get_default_graph().get_tensor_by_name(
84             "net/%s:0" % output_name)
85 
86         assert len(self.output_var.get_shape()) == 2
87         assert len(self.input_var.get_shape()) == 4
88         self.feature_dim = self.output_var.get_shape().as_list()[-1]
89         self.image_shape = self.input_var.get_shape().as_list()[1:]
&lt;/denchmark-code&gt;

new code with tf_trt :
&lt;denchmark-code&gt;91    def __init__(self, checkpoint_filename, input_name="images",
92                 output_name="features"):
93        self.session = tf.Session()
94        with tf.gfile.GFile(checkpoint_filename, "rb") as file_handle:
95            graph_def = tf.GraphDef()
96            graph_def.ParseFromString(file_handle.read())
97        converter = trt.TrtGraphConverter(input_graph_def=graph_def, nodes_blacklist=["images:0", "features:0"])
98        trt_graph = converter.convert()
99        tf.import_graph_def(trt_graph, name="net")
100       self.input_var = tf.get_default_graph().get_tensor_by_name(
101           "net/%s:0" % input_name)
102       self.output_var = tf.get_default_graph().get_tensor_by_name(
103           "net/%s:0" % output_name)
104
105       assert len(self.output_var.get_shape()) == 2
106       assert len(self.input_var.get_shape()) == 4
107       self.feature_dim = self.output_var.get_shape().as_list()[-1]
108        self.image_shape = self.input_var.get_shape().as_list()[1:]
&lt;/denchmark-code&gt;

error is follow :
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "tools/generate_detections.py", line 235, in &lt;module&gt;
    main()
  File "tools/generate_detections.py", line 229, in main
    encoder = create_box_encoder(args.model, batch_size=32)
  File "tools/generate_detections.py", line 120, in create_box_encoder
    image_encoder = ImageEncoder(model_filename, input_name, output_name)
  File "tools/generate_detections.py", line 105, in __init__
    assert len(self.output_var.get_shape()) == 2
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/tensor_shape.py", line 827, in __len__
    raise ValueError("Cannot take the length of shape with unknown rank.")
ValueError: Cannot take the length of shape with unknown rank.
&lt;/denchmark-code&gt;

then i print input and output tensor :
&lt;denchmark-code&gt;print(self.input_var)
print(self.output_var)
&lt;/denchmark-code&gt;

the result is :
old code :
&lt;denchmark-code&gt;Tensor("net/images:0",  shape=(?, 128, 64, 3), dtype=uint8)
Tensor("net/features:0", shape=(?, 128), dtype=float32)
&lt;/denchmark-code&gt;

new code :
&lt;denchmark-code&gt;Tensor("net/images:0",  shape=(?, 128, 64, 3), dtype=uint8)
Tensor("net/features:0", dtype=float32)
&lt;/denchmark-code&gt;

from above comparison, can found that new code lost tensor "net/features:0" dimension. please give me some advise, thank you
	</description>
	<comments>
		<comment id='1' author='chennuo0125-HIT' date='2020-03-17T08:57:17Z'>
		@chennuo0125
Will it be possible to share colab link or simple standalone code to reproduce the issue in our environment. It helps us in localizing the issue faster. Thanks!
		</comment>
		<comment id='2' author='chennuo0125-HIT' date='2020-03-17T09:33:42Z'>
		thank you for your respond &lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
, you can do as follows to reproduce the issue
&lt;denchmark-code&gt;git clone https://github.com/chennuo0125/deep_sort.git
./generate.sh
&lt;/denchmark-code&gt;

and you will get the error follows :
&lt;denchmark-code&gt;Tensor("net/images:0", shape=(?, 128, 64, 3), dtype=uint8)
Tensor("net/features:0", dtype=float32)
Traceback (most recent call last):
  File "tools/generate_detections.py", line 242, in &lt;module&gt;
    main()
  File "tools/generate_detections.py", line 236, in main
    encoder = create_box_encoder(args.model, batch_size=32)
  File "tools/generate_detections.py", line 127, in create_box_encoder
    image_encoder = ImageEncoder(model_filename, input_name, output_name)
  File "tools/generate_detections.py", line 112, in __init__
    assert len(self.output_var.get_shape()) == 2
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/tensor_shape.py", line 827, in __len__
    raise ValueError("Cannot take the length of shape with unknown rank.")
ValueError: Cannot take the length of shape with unknown rank.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='chennuo0125-HIT' date='2020-03-18T09:45:09Z'>
		@chennuo0125 I also encountered the issue. You can check this issue: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/25417&gt;#25417&lt;/denchmark-link&gt;

As they say, in most cases, the shape is not useful.
However if you really need it, I did the following work-around:
&lt;denchmark-code&gt;        with tf.Graph().as_default() as graph:
            tf.graph_util.import_graph_def(converter._converted_graph_def, name="")
            # You need to get the list of output_tensors before conversion  
            for tensor in output_tensors:
                graph.get_tensor_by_name(tensor.name).set_shape(tensor.shape)

            # Overwrite the converter graph def
            converter._converted_graph_def = graph.as_graph_def(add_shapes=True)

        # Save saved model
        converter.save(output_saved_model_dir)

&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='chennuo0125-HIT' date='2020-03-18T14:27:18Z'>
		thank your advise &lt;denchmark-link:https://github.com/jnd77&gt;@jnd77&lt;/denchmark-link&gt;
  i follow your advise to saved optimized model , but get error as follows :
&lt;denchmark-code&gt;ValueError: Not able to save to a SavedModel since input is a GraphDef
&lt;/denchmark-code&gt;

then i change save method as follows and get success
&lt;denchmark-code&gt;with tf.gfile.GFile("optimized.pb", "wb") as f:
            f.write(trt_graph.SerializeToString())
&lt;/denchmark-code&gt;

but above convertion cost too much time by about 8 minutes, its terriable. then i load optimized model directly  as follows :
&lt;denchmark-code&gt;        with tf.gfile.GFile(checkpoint_filename, "rb") as file_handle:
            graph_def = tf.GraphDef()
            graph_def.ParseFromString(file_handle.read())
        tf.import_graph_def(graph_def, name="net")
&lt;/denchmark-code&gt;

but the loading also cost too much time by about 8 minutes, its too slowly, please give me some advise, thank you very much :)
above code link : &lt;denchmark-link:https://github.com/chennuo0125/deep_sort&gt;https://github.com/chennuo0125/deep_sort&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='chennuo0125-HIT' date='2020-03-19T03:09:36Z'>
		Am not familiar with saving/loading GraphDef, so I can't help with that.
In any case, you would have the same issue I guess even without the shapes.
If you don't plan to save the graph, then you don't have to. :)
		</comment>
		<comment id='6' author='chennuo0125-HIT' date='2020-03-19T03:57:51Z'>
		thank you &lt;denchmark-link:https://github.com/jnd77&gt;@jnd77&lt;/denchmark-link&gt;
 , yes, when i run another project without shapes, using the tf_trt to optimize the model, which also cost time too much . above indicts that using tf_trt to optimize model need much time ?
i have methond this issue here : &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/37661&gt;#37661&lt;/denchmark-link&gt;

expect for your solution, thank you very much :)
		</comment>
		<comment id='7' author='chennuo0125-HIT' date='2020-03-19T08:03:07Z'>
		Normally you would run the TensorRT optimization only once and save the model.
When you need to do inference, then you would load that model.
Loading can indeed take a while, but it's an upfront cost. You can then run inference as many times as you want.
I'm not aware of how the loading could be made faster ... If you have memory issues, maybe you can play with the max_workspace_size_bytes parameter when building the TrtGraphConverter.
I just noticed you were using: nodes_blacklist=["images:0", "features:0"]
Maybe it should be nodes_blacklist=["images", "features"], and it would keep the shape.
		</comment>
		<comment id='8' author='chennuo0125-HIT' date='2020-03-19T09:19:10Z'>
		thank for your advise &lt;denchmark-link:https://github.com/jnd77&gt;@jnd77&lt;/denchmark-link&gt;
 , i want to guarantee that using tf_trt optimized model need more memory corresponding to no optimized model ?
		</comment>
		<comment id='9' author='chennuo0125-HIT' date='2020-03-19T09:35:02Z'>
		Hmm sorry, I don't know, I never had any memory issues, so never looked at it.
		</comment>
		<comment id='10' author='chennuo0125-HIT' date='2020-04-03T16:06:22Z'>
		@chennuo0125 Please take a look at this &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/19619&gt;issue&lt;/denchmark-link&gt;
 where memory consumption has been discussed in detail.
		</comment>
		<comment id='11' author='chennuo0125-HIT' date='2020-04-19T00:41:59Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='12' author='chennuo0125-HIT' date='2020-04-20T05:44:49Z'>
		@chennuo0125
Any update on this issue please. Thanks!
		</comment>
		<comment id='13' author='chennuo0125-HIT' date='2020-04-24T11:10:32Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37662&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37662&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>