<bug id='32646' author='BrikerMan' open_date='2019-09-19T08:51:31Z' closed_time='2019-09-19T23:06:38Z'>
	<summary>Tried to convert 'y' to a tensor and failed. Error: None values not supported.</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0rc1

Describe the current behavior
Crash when fit. It works just fine in 1.14.0, 2.0.0b0 &amp; 2.0.0b1.
Describe the expected behavior
Not to crash when fit.
Code to reproduce the issue
import numpy as np
import tensorflow as tf
from tensorflow.python.keras.layers import Dense
from tensorflow.python.keras.models import Sequential
from tensorflow.python.keras.optimizers import Adam

model = Sequential([
    Dense(24, input_dim=4, activation='relu'),
    Dense(24, activation='relu'),
    Dense(2, activation='linear')
])
model.compile(loss='mse', optimizer=Adam(lr=0.001))

x = np.array([[-0.08623559, -0.79897248,  0.03606475,  1.09068178]])
y = np.array([[ 1.0449973,  -0.14471795]])
model.fit(x, y)
Here is the &lt;denchmark-link:https://colab.research.google.com/drive/1HevwenWthBQAnRRj8z7sJzBjuZV9F_JZ&gt;colab link&lt;/denchmark-link&gt;

Other info / logs
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords)
    526                 as_ref=input_arg.is_ref,
--&gt; 527                 preferred_dtype=default_dtype)
    528           except TypeError as err:

22 frames
ValueError: None values not supported.

During handling of the above exception, another exception occurred:

ValueError                                Traceback (most recent call last)
ValueError: None values not supported.

During handling of the above exception, another exception occurred:

ValueError                                Traceback (most recent call last)
/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords)
    543               raise ValueError(
    544                   "Tried to convert '%s' to a tensor and failed. Error: %s" %
--&gt; 545                   (input_name, err))
    546             prefix = ("Input '%s' of '%s' Op has type %s that does not match" %
    547                       (input_name, op_type_name, observed))

ValueError: Tried to convert 'y' to a tensor and failed. Error: None values not supported.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='BrikerMan' date='2019-09-19T09:50:35Z'>
		It works fine with TF 1.15.0.rc0.
I could reproduce the issue with Tensorflow 2.0.0.rc1. Please see the colab &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/d6a907491917bcc4e36f7c8e08fefe54/untitled160.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='BrikerMan' date='2019-09-19T15:00:50Z'>
		This also happens in 2.0.0.rc0.
A "workaround" is not using the class for the optimizer but using the name as string, of course, then you can't adjust the learning rate.
Instead of:
model.compile(optimizer=keras.optimizers.SGD(), loss='mse')
you would write:
model.compile(optimizer='sgd', loss='mse')
		</comment>
		<comment id='3' author='BrikerMan' date='2019-09-19T18:21:35Z'>
		Changing your imports can help resolve this issue. Tested in '2.0.0-rc1'
import numpy as np
import tensorflow as tf
from tensorflow.keras.layers import Dense
from tensorflow.keras.models import Sequential
from tensorflow.keras.optimizers import Adam

model = Sequential([
    Dense(24, input_dim=4, activation='relu'),
    Dense(24, activation='relu'),
    Dense(2, activation='linear')
])
model.compile(loss='mse', optimizer=Adam(lr=0.001))

x = np.array([[-0.08623559, -0.79897248,  0.03606475,  1.09068178]])
y = np.array([[ 1.0449973,  -0.14471795]])
model.fit(x, y)
output:
Train on 1 samples
1/1 [==============================] - 0s 239ms/sample - loss: 0.5793
&lt;tensorflow.python.keras.callbacks.History at 0x7fa54c4f6630&gt;
		</comment>
		<comment id='4' author='BrikerMan' date='2019-09-19T23:06:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32646&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32646&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='BrikerMan' date='2019-09-22T02:12:58Z'>
		I have this problem ,too. my code works well in 2.0b1, not work in tf 2.0rc1
		</comment>
		<comment id='6' author='BrikerMan' date='2019-10-29T12:08:44Z'>
		
Changing your imports can help resolve this issue. Tested in '2.0.0-rc1'

what is the difference between tensorflow.python.keras and tensorflow.keras? Why this trick works?
		</comment>
		<comment id='7' author='BrikerMan' date='2019-11-16T06:18:15Z'>
		from tensorflow.keras.optimizers import Adam
in place of
from tensorflow.python.keras.optimizers import Adam
helps
		</comment>
		<comment id='8' author='BrikerMan' date='2019-12-18T08:54:53Z'>
		
from tensorflow.keras.optimizers import Adam
in place of
from tensorflow.python.keras.optimizers import Adam
helps

It works for me
		</comment>
		<comment id='9' author='BrikerMan' date='2020-10-14T08:20:37Z'>
		Worked for me!

from tensorflow.keras.optimizers import Adam
in place of
from tensorflow.python.keras.optimizers import Adam
helps

		</comment>
	</comments>
</bug>