<bug id='11902' author='sandipmgiri' open_date='2017-07-31T09:08:29Z' closed_time='2017-08-09T03:27:11Z'>
	<summary>//tensorflow/python/kernel_tests:denormal_test test failure on ppc64le (error : Arrays are not equal)</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 16.04 (ppc64le)
TensorFlow installed from (source or binary):
Installed from source
TensorFlow version (use command below):
('v1.2.1-0-gb4957ff', '1.2.1')
Python version:
Python 2.7.5
Bazel version (if compiling from source):
0.4.5-2017-07-13 (@037b9b9)
CUDA/cuDNN version:
NA
GPU model and memory:
NA
Exact command to reproduce:
bazel test --test_output=errors //tensorflow/python/kernel_tests:denormal_test

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Following code returning incorrect results -
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/kernel_tests/denormal_test.py#L36-L44&gt;https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/kernel_tests/denormal_test.py#L36-L44&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;def _flushDenormalsTest(self, use_gpu, dtypes):
    with self.test_session(use_gpu=use_gpu):
      array_ops.identity(7).eval()
      for dtype in dtypes:
        tiny = np.finfo(dtype).tiny
        # Small shape to test main thread, large shape to test thread pool
        for shape in (), (1 &lt;&lt; 20,):
          flush = 0.1 * constant_op.constant(tiny, shape=shape)
          self.assertAllEqual(flush.eval(), np.zeros(shape))
&lt;/denchmark-code&gt;

I have printed the values of flush.eval() and np.zeros(shape) , see below :
flush.eval() o/p =  1.17549463108e-39
np.zeros(shape) o/p = 0.0
Getting failure 1.17549463108e-39 vs expected 0.0.  I am not able to understand why we are getting flush.eval() o/p 1.17549463108e-39  and not  0.0.  But I tried changing the  comparison function from assertAllEqual to assertAllClose and test is passing successfully. Is it OK to merge this changes or ? I would like to hear comment on this.Thanks!
This test passing successfully in TF1.0.1 without any changes, see relevant code :
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/python/kernel_tests/denormal_test.py#L31-L48&gt;https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/python/kernel_tests/denormal_test.py#L31-L48&lt;/denchmark-link&gt;

&lt;denchmark-code&gt; def testPythonHasDenormals(self):
    """Non-tf numpy code should treat denormals correctly."""
    for dtype in np.float32, np.float64:
      tiny = np.finfo(dtype).tiny
      self.assertEqual(tiny, tiny / 16 * 16)

  def _flushDenormalsTest(self, use_gpu, dtypes):
    if control_imports.USE_OSS:
      # TODO(irving): Fix denormal flushing for open source.
      return
    with self.test_session(use_gpu=use_gpu):
      array_ops.identity(7).eval()
      for dtype in dtypes:
        tiny = np.finfo(dtype).tiny
        # Small shape to test main thread, large shape to test thread pool
        for shape in (), (1 &lt;&lt; 20,):
          flush = 0.1 * constant_op.constant(tiny, shape=shape)
          self.assertAllEqual(flush.eval(), np.zeros(shape))
&lt;/denchmark-code&gt;

Looks like this test is disabled in TF1.0.1
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;$ bazel test --test_output=errors //tensorflow/python/kernel_tests:denormal_test

==================== Test output for //tensorflow/python/kernel_tests:denormal_test:
2017-07-31 08:45:48.796363: I tensorflow/compiler/xla/service/platform_util.cc:58] platform Host present with 8 visible devices
2017-07-31 08:45:48.798909: I tensorflow/compiler/xla/service/service.cc:198] XLA service 0x100386c7120 executing computations on platform Host. Devices:
2017-07-31 08:45:48.798936: I tensorflow/compiler/xla/service/service.cc:206]   StreamExecutor device (0): &lt;undefined&gt;, &lt;undefined&gt;
FF..
======================================================================
FAIL: testFlushDenormalsCPU (__main__.DenormalTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/root/.cache/bazel/_bazel_root/725e77151072daec43bc353cb6fcb26c/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/kernel_tests/denormal_test.runfiles/org_tensorflow/tensorflow/python/kernel_tests/denormal_test.py", line 50, in testFlushDenormalsCPU
    self._flushDenormalsTest(use_gpu=False, dtypes=(np.float32, np.float64))
  File "/root/.cache/bazel/_bazel_root/725e77151072daec43bc353cb6fcb26c/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/kernel_tests/denormal_test.runfiles/org_tensorflow/tensorflow/python/kernel_tests/denormal_test.py", line 44, in _flushDenormalsTest
    self.assertAllEqual(flush.eval(), np.zeros(shape))
  File "/root/.cache/bazel/_bazel_root/725e77151072daec43bc353cb6fcb26c/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/kernel_tests/denormal_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py", line 699, in assertAllEqual
    np.testing.assert_array_equal(a, b)
  File "/usr/lib64/python2.7/site-packages/numpy/testing/utils.py", line 871, in assert_array_equal
    verbose=verbose, header='Arrays are not equal')
  File "/usr/lib64/python2.7/site-packages/numpy/testing/utils.py", line 796, in assert_array_compare
    raise AssertionError(msg)
AssertionError:
Arrays are not equal

(mismatch 100.0%)
 x: array(1.1754946310819804e-39, dtype=float32)
 y: array(0.0)

======================================================================
FAIL: testFlushDenormalsGPU (__main__.DenormalTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/root/.cache/bazel/_bazel_root/725e77151072daec43bc353cb6fcb26c/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/kernel_tests/denormal_test.runfiles/org_tensorflow/tensorflow/python/kernel_tests/denormal_test.py", line 54, in testFlushDenormalsGPU
    self._flushDenormalsTest(use_gpu=True, dtypes=(np.float32,))
  File "/root/.cache/bazel/_bazel_root/725e77151072daec43bc353cb6fcb26c/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/kernel_tests/denormal_test.runfiles/org_tensorflow/tensorflow/python/kernel_tests/denormal_test.py", line 44, in _flushDenormalsTest
    self.assertAllEqual(flush.eval(), np.zeros(shape))
  File "/root/.cache/bazel/_bazel_root/725e77151072daec43bc353cb6fcb26c/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/kernel_tests/denormal_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py", line 699, in assertAllEqual
    np.testing.assert_array_equal(a, b)
  File "/usr/lib64/python2.7/site-packages/numpy/testing/utils.py", line 871, in assert_array_equal
    verbose=verbose, header='Arrays are not equal')
  File "/usr/lib64/python2.7/site-packages/numpy/testing/utils.py", line 796, in assert_array_compare
    raise AssertionError(msg)
AssertionError:
Arrays are not equal

(mismatch 100.0%)
 x: array(1.1754946310819804e-39, dtype=float32)
 y: array(0.0)

----------------------------------------------------------------------
Ran 4 tests in 0.071s

FAILED (failures=2)
not equal lhs =  1.17549463108e-39
not equal rhs =  0.0
not equal lhs =  1.17549463108e-39
not equal rhs =  0.0

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sandipmgiri' date='2017-07-31T12:47:54Z'>
		I have done some investigation on this, looks like we need to add Power specific code in  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/core/platform/denormal.cc#L43-L73&gt;https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/core/platform/denormal.cc#L43-L73&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='sandipmgiri' date='2017-08-01T06:55:51Z'>
		I was discussing about this test failure on power porting mailing list (&lt;denchmark-link:mailto:power-port-tune@lists.linux.ibm.com&gt;power-port-tune@lists.linux.ibm.com&lt;/denchmark-link&gt;
) , see below-

Hi,
I am trying to port the TensorFlow code to Power, I'm looking at
some code which uses certain Intel intrinsics and want to know if
there are equivalent Power equivalents
The code I'm trying to port uses these intrinsics:
_MM_GET_FLUSH_ZERO_MODE
_MM_GET_DENORMALS_ZERO_MODE
_MM_SET_FLUSH_ZERO_MODE
_MM_SET_DENORMALS_ZERO_MODE
_MM_SET_FLUSH_ZERO_MODE
Would there be corresponding intrinsics on Power?
Just for reference, the functions I'm trying to port are these :
https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/core/platform/denormal.cc#L43-L73
(ScopedFlushDenormal::ScopedFlushDenormal() andScopedFlushDenormal::~ScopedFlushDenormal() )
Any suggestions would help!
Thanks!
Sandip__

And I got following reply -
This is not an intrinsic, it is mode and a nonstandard (not IEEE754 conforming) one at that.
Some embedded machines perform slight better in this mode, but POWER servers do not. So for POWER you do not need this and should simply disable it.
// For now, we flush denormals only on SSE 3. Other architectures such as ARM
// can be added as needed.
#ifdef DENORM_USE_INTRINSICS
So find out where DENORM_USE_INTRINSICS is #define and #undef it.
&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
   -  Is it OK to disable or don't execute this test on power ?
		</comment>
		<comment id='3' author='sandipmgiri' date='2017-08-01T07:51:12Z'>
		Sgtm
&lt;denchmark-link:#&gt;â€¦&lt;/denchmark-link&gt;


On Jul 31, 2017 11:58 PM, "sandipmgiri" ***@***.***&gt; wrote:
 I was discussing about this test failure on power porting mailing list (
 ***@***.***) and they mentioned as follows-

 _MM_GET_FLUSH_ZERO_MODE
 _MM_GET_DENORMALS_ZERO_MODE
 _MM_SET_FLUSH_ZERO_MODE
 _MM_SET_DENORMALS_ZERO_MODE

 This is not an intrinsic, it is mode and a nonstandard (not IEEE754
 conforming) one at that.

 Some embedded machines perform slight better in this mode, but POWER
 servers do not. So for POWER you do not need this and should simply disable
 it.

 @drpngx &lt;https://github.com/drpngx&gt; @***@***.*** @
 ***@***.*** - Is it OK to disable this test on power ?

 â€”
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#11902 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AT_SbfArRQalyQG2xvf5LBioWPYlLoWuks5sTsx4gaJpZM4OoGhK&gt;
 .



		</comment>
		<comment id='4' author='sandipmgiri' date='2017-08-01T18:41:20Z'>
		Also SGTM,
If I recall correctly, we also have a check in there to conditionally skip this test anyway.
		</comment>
		<comment id='5' author='sandipmgiri' date='2017-08-09T03:27:10Z'>
		Fixed in PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/11939&gt;#11939&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>