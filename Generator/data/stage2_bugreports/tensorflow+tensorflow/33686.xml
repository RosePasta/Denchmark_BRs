<bug id='33686' author='optiluca' open_date='2019-10-24T13:55:56Z' closed_time='2019-11-27T12:40:32Z'>
	<summary>TF 2.0 tf.keras.models.load_model won't load models compiled with a loss dictionary</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): docker image (tensorflow/tensorflow:2.0.0-gpu-py3)
TensorFlow version (use command below):  v2.0.0-rc2-26-g64c3d38 2.0.0
Python version: 3.6
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 10
GPU model and memory: N/A

Describe the current behavior
Attempting to load a keras model which has been compiled with a loss dictionary fails, throwing the following error:
ValueError: Unknown entries in loss dictionary: ['MyLoss']. Only expected following keys: ['dense_1']
Describe the expected behavior
The model should load.
Code to reproduce the issue
EDIT - refer to latest gist below
Other info / logs
N/A
	</description>
	<comments>
		<comment id='1' author='optiluca' date='2019-10-25T05:09:32Z'>
		I have tried on colab with TF version 2.0 , 2.1.0-dev20191024 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/33341889953f2e4a695282ac2f2eb3a2/untitled298.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='optiluca' date='2019-10-25T17:27:13Z'>
		&lt;denchmark-link:https://github.com/optiluca&gt;@optiluca&lt;/denchmark-link&gt;
 Did you define any custom loss function? If you are trying to define custom loss, please follow this &lt;denchmark-link:https://stackoverflow.com/questions/43818584/custom-loss-function-in-keras&gt;link&lt;/denchmark-link&gt;
 or similar kinds of resources to write the custom loss function. Thanks!
		</comment>
		<comment id='3' author='optiluca' date='2019-10-25T18:39:20Z'>
		I did not.  I think the example code is pretty clear?  There's nothing custom about it.
		</comment>
		<comment id='4' author='optiluca' date='2019-10-25T23:23:26Z'>
		&lt;denchmark-link:https://github.com/optiluca&gt;@optiluca&lt;/denchmark-link&gt;
 I modified couple of things in the code and it works without any issues. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/6b67e588cad1c274afe2d5ccca391ec8/untitled600.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
Please close this issue if this was resolved. Thanks!
		</comment>
		<comment id='5' author='optiluca' date='2019-10-25T23:37:13Z'>
		The changes to the code now simply mean that it doesn't have a loss dictionary, so indeed it works.  The bug I reported is that it's impossible to load a model which has a loss dictionary defined.  I have a model with multiple outputs (each with its own loss function) that breaks because of this bug.  Simply removing the loss dictionary isn't an option, I reduced it down to the test code I posted above for ease of reproducibility and to isolate the issue.
		</comment>
		<comment id='6' author='optiluca' date='2019-10-26T09:28:05Z'>
		I've played around with the gist, I think I'd made a mistake in my example script (not assigning the name of the last layer to match the name of the key in the loss dictionary).  I've made a new repro script &lt;denchmark-link:https://colab.research.google.com/gist/optiluca/83eeca1cd238ed119d6a6185bd45c635/untitled298.ipynb&gt;here&lt;/denchmark-link&gt;
, the issue still stands.  Could it be that the real issue is that the layer names aren't persisting across a save/load, meaning that the dictionary key then turns out to be wrong?  I say this because if I name my output "output_1" then it works.
		</comment>
		<comment id='7' author='optiluca' date='2019-11-22T08:34:55Z'>
		Hi, is there any update on this issue?  The latest gist is &lt;denchmark-link:https://colab.research.google.com/gist/optiluca/83eeca1cd238ed119d6a6185bd45c635/untitled298.ipynb&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='optiluca' date='2019-11-22T23:15:14Z'>
		&lt;denchmark-link:https://github.com/optiluca&gt;@optiluca&lt;/denchmark-link&gt;
 Looks like this was resolved in . I cannot reproduce the issue with . Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/19db72f446e25f5192d2df18b09bbc8c/untitled298.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Please close the issue if it was resolved for you. Thanks!
		</comment>
		<comment id='9' author='optiluca' date='2019-11-27T12:40:32Z'>
		Looks ok now, thanks!  When can I expect this to be released officially?
		</comment>
		<comment id='10' author='optiluca' date='2019-11-27T12:40:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33686&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33686&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='optiluca' date='2019-11-27T18:28:13Z'>
		&lt;denchmark-link:https://github.com/optiluca&gt;@optiluca&lt;/denchmark-link&gt;
 TF Team is working hard on releasing the TF2.1. As of now, I don't know exact release date. Thanks!
		</comment>
	</comments>
</bug>