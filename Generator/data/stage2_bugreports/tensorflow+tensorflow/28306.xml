<bug id='28306' author='syoyo' open_date='2019-05-01T12:15:03Z' closed_time='2020-08-07T04:37:50Z'>
	<summary>[tflite] CONV_2D with bias tensor index -1 causes type-mismatch RuntimeError</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): r1.13.1
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
I have created .tflite with single CONV_2D op with bias tensor index -1(= optional).
When supplying bias tensor -1(for making bias optional), it raises RuntimeError when running it in Python interpreter as shown the below(or seg fault/asan error in C++ interpreter)
Supplying zero-valued bias tensor(i.e. use valid tensor id for bias) passes AllocateTensors and Invoke without any problem.
FYI, we cannot omit bias tensor(i.e, len(inputs) = 2) since in such case we'll hit another assertion:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/lite/kernels/conv.cc#L237&gt;https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/lite/kernels/conv.cc#L237&lt;/denchmark-link&gt;

Describe the expected behavior
As described in tflite document:
&lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_compatibility&gt;https://www.tensorflow.org/lite/guide/ops_compatibility&lt;/denchmark-link&gt;

CONV_2D should accept optional bias tensor and does not raise RuntimeError.
Code to reproduce the issue
Simply run python interepreter with attached .tfite file.
&lt;denchmark-code&gt;import sys

import numpy as np

import tensorflow
print(tensorflow.__version__)
from tensorflow.lite.python import interpreter as interpreter_wrapper

interpreter = interpreter_wrapper.Interpreter(model_path=sys.argv[1])
interpreter.allocate_tensors()

input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

print(input_details)
print(output_details)
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3134449/conv2d_bias_optional.tflite.zip&gt;conv2d_bias_optional.tflite.zip&lt;/denchmark-link&gt;

Other info / logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "bora.py", line 10, in &lt;module&gt;
    interpreter.allocate_tensors()
  File "/home/syoyo/miniconda3/envs/onnx-chainer/lib/python3.6/site-packages/tensorflow/lite/python/interpreter.py", line 73, in allocate_tensors
    return self._interpreter.AllocateTensors()
  File "/home/syoyo/miniconda3/envs/onnx-chainer/lib/python3.6/site-packages/tensorflow/lite/python/interpreter_wrapper/tensorflow_wrap_interpreter_wrapper.py", line 106, in AllocateTensors
    return _tensorflow_wrap_interpreter_wrapper.InterpreterWrapper_AllocateTensors(self)
RuntimeError: tensorflow/lite/kernels/conv.cc:247 bias-&gt;type != input_type (0 != 1)Node number 0 (CONV_2D) failed to prepare.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='syoyo' date='2020-08-06T23:58:29Z'>
		&lt;denchmark-link:https://github.com/syoyo&gt;@syoyo&lt;/denchmark-link&gt;
 Is this still an issue for you? If this is still an issue, Can you please share the model code. I tried loading your tflite model but noticed some error as shown in this &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/bdba6d1bac86bde04dca0b1893a137fe/untitled971.ipynb&gt;gist&lt;/denchmark-link&gt;
.
Thanks!
		</comment>
		<comment id='2' author='syoyo' date='2020-08-07T04:08:15Z'>
		We are not using tflite anymore and does not plan to try to reproduce an issue, so you can close the issue.
		</comment>
		<comment id='3' author='syoyo' date='2020-08-07T04:37:51Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28306&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28306&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>