<bug id='27983' author='alexcohn' open_date='2019-04-19T14:16:51Z' closed_time='2019-05-02T10:41:11Z'>
	<summary>TFLite crash on Android running a model for NNPI</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution: n/a
Mobile device: Android Q Emulator and Xiaomi A2
TensorFlow installed from: binary
TensorFlow version: 1.13.1
GPU model and memory: ?

Describe the current behavior
Simple program wroks with CPU, but crashes when NNAPI is turned on, with words:
&lt;denchmark-code&gt;E/tflite: Op code 67 is currently not delegated to NNAPI
E/tflite: Returning error since TFLite returned failure nnapi_delegate.cc:739.
&lt;/denchmark-code&gt;

Expected behavior
I would expect TFLite to fall back to CPU for the opcodes that cannot work with NNAPI.

GitHub repo: &lt;denchmark-link:https://github.com/alexcohn/tflite-nnapi&gt;https://github.com/alexcohn/tflite-nnapi&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='alexcohn' date='2019-04-19T14:20:15Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/736435/56428247-5f655080-62c7-11e9-958e-d56d2971a967.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='alexcohn' date='2019-04-20T08:07:18Z'>
		if you uses Java API's UseNNAPI(), then tflite::interpreter-&gt;UseNNAPI() which doesn't not directly support fallback is used. If newer NNAPI delegate is used, see e.g. benchmark_model in master branch [1] or my working change to label_image for tflite [2],  then you can get what you want. I don't know if the new NNAPI delegate is available in Java API.
[1] &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/1b77aae95919415947204afc1803648aa126a376&gt;1b77aae&lt;/denchmark-link&gt;

[2] &lt;denchmark-link:https://github.com/freedomtan/tensorflow/commit/792c394286e89291edb0673ed619c5b714bdc231&gt;freedomtan@792c394&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='alexcohn' date='2019-04-20T16:01:48Z'>
		&lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
 Is the new delegate an  thing, or it bypasses to CPU only the unsupported operations?
		</comment>
		<comment id='4' author='alexcohn' date='2019-04-21T01:35:26Z'>
		Fallback to CPU if an op is not supported in NNAPI. It turns out it's quite easy to enable that in Java. I have a quick dirty hack &lt;denchmark-link:https://github.com/freedomtan/tensorflow/commit/8ecb5a4ae01e0305e95871fbc77b2b038115e58b&gt;freedomtan@8ecb5a4&lt;/denchmark-link&gt;
 Will clean up it later.
		</comment>
		<comment id='5' author='alexcohn' date='2019-05-01T23:08:44Z'>
		&lt;denchmark-link:https://github.com/alexcohn&gt;@alexcohn&lt;/denchmark-link&gt;
 Is this resolved by &lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
 suggestion. Thanks!
		</comment>
		<comment id='6' author='alexcohn' date='2019-05-02T10:41:11Z'>
		I can confirm that appying  instead of  (requires &lt;denchmark-link:https://github.com/freedomtan/tensorflow/commit/8ecb5a4ae01e0305e95871fbc77b2b038115e58b&gt;freedomtan@8ecb5a4&lt;/denchmark-link&gt;
) resolves the crash.
Unfortunately, after learning more about NNAPI &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/28283#issuecomment-488161897&gt;performance issues&lt;/denchmark-link&gt;
 I cannot use this delegate in our Android app.
		</comment>
		<comment id='7' author='alexcohn' date='2019-05-02T10:41:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=27983&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=27983&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='alexcohn' date='2019-05-02T16:19:24Z'>
		Another note on this end, we'll shortly be removing the "old" NNAPI implementation entirely in favor of the NNAPI delegate. Existing use of "Interpreter::SetUseNnapi(bool)" will take advantage of the new delegate.
		</comment>
		<comment id='9' author='alexcohn' date='2019-05-07T17:47:33Z'>
		”Op code 67 is currently not delegated to NNAPI“
Which operation is this? and the type of the tensors?
If it is supported by NNAPI, I can help update delegate to support it.
		</comment>
		<comment id='10' author='alexcohn' date='2019-05-08T04:08:03Z'>
		&lt;denchmark-link:https://github.com/miaowang14&gt;@miaowang14&lt;/denchmark-link&gt;
 I think op 67 is transpose convolution, which is not supported by NNAPI before Q :-)
		</comment>
	</comments>
</bug>