<bug id='13150' author='GPhilo' open_date='2017-09-19T10:49:38Z' closed_time='2019-08-06T22:07:23Z'>
	<summary>Handling of * in pattern of tf.contrib.data.Dataset.list_files undocumented</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes (see below)
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.3.0
Python version: 3.5.4
Bazel version (if compiling from source): -
CUDA/cuDNN version: 8/6
GPU model and memory: GTX 1080, 8GB
Exact command to reproduce: run the script

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

It seems that by default ' behaviour when a pattern contains s is to match files at any depth in the directory tree. This is in contrast, for example, with 's default behaviour.
I could not find any mention of how  is evaluated in &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/contrib/data/Dataset#list_files&gt;its documentation&lt;/denchmark-link&gt;
 or any examples of its usage in the &lt;denchmark-link:https://www.tensorflow.org/programmers_guide/datasets&gt;pogrammer's guide&lt;/denchmark-link&gt;
.
Could the documentation be improved specifying how exactly s are handled?
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Sample dataset structure on filesystem:
&lt;denchmark-code&gt;DATASET_ROOT
    _should_be_ignored
        class3
            subclass31
                sample.txt
            subclass32
                sample.txt
        class4
            subclass41
                sample.txt
            subclass42
                sample.txt
    class1
        subclass11
            sample.txt
        subclass12
            sample.txt
    class2
        subclass21
            sample.txt
        subclass22
            sample.txt
&lt;/denchmark-code&gt;

Small script to test the behaviour:
&lt;denchmark-code&gt;import tensorflow as tf
import glob

ROOT = 'C:/Users/1/Desktop/test_dataset'
glob_files = glob.glob('{}/*/*/*.txt'.format(ROOT))

dataset = tf.contrib.data.Dataset.list_files('{}/*/*/*.txt'.format(ROOT))
it = dataset.make_one_shot_iterator()

files_found = []
with tf.Session() as sess:
  while True:
    try:
      files_found.append(sess.run(it.get_next()))
    except tf.errors.OutOfRangeError:
      break
&lt;/denchmark-code&gt;

Outputs:
&lt;denchmark-code&gt;glob_files
Out[16]: 
['C:/Users/1/Desktop/test_dataset\\class1\\subclass11\\sample.txt',
 'C:/Users/1/Desktop/test_dataset\\class1\\subclass12\\sample.txt',
 'C:/Users/1/Desktop/test_dataset\\class2\\subclass21\\sample.txt',
 'C:/Users/1/Desktop/test_dataset\\class2\\subclass22\\sample.txt']

files_found
Out[4]: 
[b'C:\\Users\\1\\Desktop\\test_dataset\\class1\\subclass11\\sample.txt',
 b'C:\\Users\\1\\Desktop\\test_dataset\\class1\\subclass12\\sample.txt',
 b'C:\\Users\\1\\Desktop\\test_dataset\\class2\\subclass21\\sample.txt',
 b'C:\\Users\\1\\Desktop\\test_dataset\\class2\\subclass22\\sample.txt',
 b'C:\\Users\\1\\Desktop\\test_dataset\\_should_be_ignored\\class3\\subclass31\\sample.txt',
 b'C:\\Users\\1\\Desktop\\test_dataset\\_should_be_ignored\\class3\\subclass32\\sample.txt',
 b'C:\\Users\\1\\Desktop\\test_dataset\\_should_be_ignored\\class4\\subclass41\\sample.txt',
 b'C:\\Users\\1\\Desktop\\test_dataset\\_should_be_ignored\\class4\\subclass42\\sample.txt']
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='GPhilo' date='2017-09-20T01:50:51Z'>
		&lt;denchmark-link:https://github.com/GPhilo&gt;@GPhilo&lt;/denchmark-link&gt;
 I guess  line invokes code 
which returns : 
Probably,it keeps digging till it hits no folders/directories!
The file pattern follows rules as described here &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/gfile/Glob&gt;tf.gfile.Glob&lt;/denchmark-link&gt;

see code snipped below which is a cause for lookup into 
&lt;denchmark-code&gt;if isinstance(file_pattern, list):
    if not file_pattern:
      raise ValueError("File pattern is empty.")
    file_names = []
    for entry in file_pattern:
      file_names.extend(gfile.Glob(entry))
  else:
    file_names = list(gfile.Glob(file_pattern))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='GPhilo' date='2017-09-21T23:42:42Z'>
		&lt;denchmark-link:https://github.com/saeta&gt;@saeta&lt;/denchmark-link&gt;
 could you please take a look, and change the example in documentation if necessary.
		</comment>
		<comment id='3' author='GPhilo' date='2018-09-27T07:07:22Z'>
		I'm using Tensorflow version 1.8 on both Windows 10 and Kubuntu 18.04 and notice different behavior of list_files. Using a pattern with *s will match files at any depth an Windows, as noted in this issue, whereas the proper directory depth is respected on Ubuntu.
		</comment>
		<comment id='4' author='GPhilo' date='2019-08-06T22:07:23Z'>
		Please check with the latest version of TensorFlow. Feel free to reopen if the issue still persists. Thanks!
		</comment>
	</comments>
</bug>