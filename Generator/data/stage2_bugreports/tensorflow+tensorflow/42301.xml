<bug id='42301' author='RoelantStegmann' open_date='2020-08-13T06:13:02Z' closed_time='2020-08-27T11:25:48Z'>
	<summary>Loading model with tf.linalg.band_part in regularisation</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Model trained on linux, loading fails on windows
Model trained on tf 2.2.0, but loading on 2.3.0 also doesn't work - Py 3.7

Describe the current behavior
tf.keras.models.load_model(model_path) results in
&lt;denchmark-code&gt;ValueError: Inconsistent values for attr 'Tindex' DT_INT32 vs. DT_INT64 while building NodeDef 'tf_op_layer_MatrixBandPart_3/MatrixBandPart' using Op&lt;name=MatrixBandPart; signature=input:T, num_lower:Tindex, num_upper:Tindex -&gt; band:T; attr=T:type; attr=Tindex:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]&gt;
&lt;/denchmark-code&gt;

Which probably comes from this custom regularisation that has been added to the model
&lt;denchmark-code&gt;def orthog_reg(weight_matrix):
    """ The orthogonality inducing regularization. Compute: |upper_triang(dot_prod(W,W))| """
    # weight_matrix shape is batch_size x latent_dim so we have row vectors so dot prod is WW^T
    dot_prod = tf.linalg.matmul(weight_matrix, tf.transpose(weight_matrix))
    # we only care about the upper triangular matrix, because the matrix is symmetric and the diagonal represents
    # orthogonality of vectors with itself which we do not care about
    # https://www.tensorflow.org/api_docs/python/tf/linalg/band_part
    upper_triang_dot_prod = tf.linalg.band_part(dot_prod, -1, 0) - tf.linalg.band_part(dot_prod, 0, 0)
    return tf.reduce_sum(upper_triang_dot_prod)
&lt;/denchmark-code&gt;

It is added like this
&lt;denchmark-code&gt;   # get regularisation
    weights = embedding_one_layer.get_weights()[0]
    weights_relu = tf.nn.relu(weights)
    orthog_reg_result = orthog_reg(weights_relu)

    # add orthogonal regularisation loss to model loss
    orthog_reg_result = 0.01 * orthog_reg_result
    model.add_loss(orthog_reg_result)
&lt;/denchmark-code&gt;

Describe the expected behavior
Expect it to load ;)
Standalone code to reproduce the issue
(Will add this soon)
	</description>
	<comments>
		<comment id='1' author='RoelantStegmann' date='2020-08-13T10:10:47Z'>
		&lt;denchmark-link:https://github.com/RoelantStegmann&gt;@RoelantStegmann&lt;/denchmark-link&gt;

Please provide with simple stand alone code to replicate the issue faced or if possible share a colab gist with the issue faced for us to analyse.
With respect to the error, follow the below:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32375&gt;#32375&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='RoelantStegmann' date='2020-08-20T10:27:37Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='RoelantStegmann' date='2020-08-27T11:25:45Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='4' author='RoelantStegmann' date='2020-08-27T11:25:49Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42301&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42301&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>