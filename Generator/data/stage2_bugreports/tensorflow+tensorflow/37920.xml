<bug id='37920' author='TMaysGGS' open_date='2020-03-26T03:31:15Z' closed_time='2020-03-26T16:03:56Z'>
	<summary>Cannot import ImageDataGenerator from tensorflow.keras GPU version</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.6 LTS
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.1.0
Python version: 3.7.5
Bazel version (if compiling from source): None
GCC/Compiler version (if compiling from source): None
CUDA/cuDNN version: 10.1/7.3.1
GPU model and memory: GeForce RTX 2080Ti 10989MiB

Describe the current behavior
I am transfering from TensorFlow 1 to 2 and my codes are all running correct in TensorFlow 1.13 &amp; 1.15. I met the problem when I try to import the ImageDataGenerator: no matter to use tf.keras.processing.image or tf.python.keras.processing.image.
Describe the expected behavior
In TensorFlow 1.13 &amp; 1.15 and TensorFlow 2.0.0 CPU version, using from tensorflow.keras.preprocessing.image import ImageDataGenerator can import the ImageDataGenerator normally. But for TensorFlow 2.1.0 GPU version, it shows error even I add .python right after tensorflow. Here "CPU version" or "GPU version" means the hardware status of the PC I use.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
from tensorflow.keras.preprocessing.image import ImageDataGenerator # option 1
from tensorflow.python.keras.preprocessing.image import ImageDataGenerator # option 2
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
For now the only way I think it can work is to revise the content in "init.py" in somewhere within the TensorFlow package. But it will not be a good solution so I wonder if anyone can help me with this. Thanks.
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/home/daiwei/.conda/envs/daiwei_tensorflow/lib/python3.7/site-packages/tensorflow_core/python/keras/preprocessing/__init__.py", line 23, in &lt;module&gt;
    import keras_preprocessing
ModuleNotFoundError: No module named 'keras_preprocessing'
	</description>
	<comments>
		<comment id='1' author='TMaysGGS' date='2020-03-26T04:39:03Z'>
		&lt;denchmark-link:https://github.com/TMaysGGS&gt;@TMaysGGS&lt;/denchmark-link&gt;
, I have tried to reproduce the issue in google colab but i found no error. For your reference link of gist is &lt;denchmark-link:https://colab.research.google.com/gist/khimraj/b08fb5e8cc4e06e254742bb335aab8c2/cuda.ipynb&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='TMaysGGS' date='2020-03-26T05:34:28Z'>
		
@TMaysGGS, I have tried to reproduce the issue in google colab but i found no error. For your reference link of gist is here

Hi, &lt;denchmark-link:https://github.com/khimraj&gt;@khimraj&lt;/denchmark-link&gt;
 ,
Thank you for you reply. I tried it in Colab too and no error occured. Could it be a problem by me wrongly installing the denpendencies or the order I installed all the necessary packages?
And it is also weird that I can import tensorflow.keras in TensorFlow 2.0.0 CPU ver, but I have to import tensorflow.python.keras in TensorFlow 2.1.0 GPU ver. Since for now I do not have a third computer it is hard for me to prove where the problem is located... The functions I need to import are:
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input, Dense
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.utils import plot_model, multi_gpu_model
and I have to change them to the codes below to successfully import the functions for tf 2.1.0 - gpu:
from tensorflow.python.keras.models import Model
from tensorflow.python.keras.layers import Input, Dense
from tensorflow.python.keras.optimizers import Adam
from tensorflow.python.keras.utils.vis_utils import plot_model
from tensorflow.python.keras.utils.multi_gpu_utils import multi_gpu_model
		</comment>
		<comment id='3' author='TMaysGGS' date='2020-03-26T16:03:50Z'>
		The problem seems to be partially solved. The "No module named 'keras_preprocessing" error is because when I install TensorFlow 2.1.0 a new version of Keras-Preprocessing package is installed also, and then after I use "pip uninstall keras-preprocessing=1.xx" to remove the old version, the new version of Keras-Preprocessing package is somehow damaged or deleted partially, which causes the module not found but can be imported. Thus the error I showed above should not be a bug of TensorFlow. I am sorry to bother.
Besides, the import restriction that I need to add ".python" when I try to import packages in tensorflow.keras (tensorflow.python.keras) cannot be reproduced in any other computer. I used one Windows PC with CPU only and another one with GPU Nvidia 1080 Ti, and using "from tensorflow.keras import xxx" is always working. So I wonder if this is a bug or something else, though it is not a severe problem. Now I just always use "tensorflow.python.keras" for consistency.
Now I am closing the issue and sorry again for bothering.
		</comment>
		<comment id='4' author='TMaysGGS' date='2020-03-26T16:03:58Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37920&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37920&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>