<bug id='32409' author='pavanky' open_date='2019-09-11T02:53:26Z' closed_time='2019-09-13T20:48:55Z'>
	<summary>keras.backend.learning_phase() broken when sample_weights are used</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 18.04


TensorFlow installed from (source or binary):
binary


TensorFlow version (use command below):
1.14.0


Python version:
3.7


Describe the current behavior
There are multiple issues:

Issue 1 keras.backend.learning_phase() does not always return a scalar value (as stated by the documentation but it returns multiple values.
Issue 2 Even when though it returns multiple values, the shape says it is a 0d tensor indicating it is a scalar
Issue 3 Reduce does not do anything even though the tensor has multiple values.

Describe the expected behavior

Issue 1 Documentation is fixed to reflect the correct behavior
Issue 2 The right shape is set for the tensor
Issue 3 reduce_any should reduce all values when no axis is given irrespective of the shape.

Code to reproduce the issue
&lt;denchmark-code&gt;import os
import numpy as np
import tensorflow as tf
import tensorflow.keras as keras

BATCH_SIZE = 4

class SimpleModel(keras.Model):

  def __init__(self):
    super(SimpleModel, self).__init__()
    self._layer = keras.layers.Dense(1)

  def call(self, inputs):
    learning_phase = keras.backend.learning_phase()
    inputs = tf.Print(inputs, [tf.constant(learning_phase.shape.ndims)],
                      "Looking at the ndims says this is a salar: ",
                      summarize=BATCH_SIZE)
    inputs = tf.Print(inputs, [learning_phase], "But this is not a scalar: ",
                      summarize=BATCH_SIZE)
    inputs = tf.Print(inputs,
                      [tf.reduce_any(learning_phase)],
                      "Even reduce_any does not create a scalar: ", summarize=BATCH_SIZE)
    return self._layer(inputs)


def get_dataset(batch_size=BATCH_SIZE):
  num_batches = 16
  num_features = 5
  inputs = np.random.random((num_batches, num_features))
  labels = np.random.random((num_batches))
  sample_weights = (np.random.random((num_batches)) &gt; 0.5).astype(np.float32)
  dataset = tf.data.Dataset.from_tensor_slices((inputs, labels, sample_weights))
  return dataset.batch(batch_size).take(1)


if __name__ == "__main__":
  tf.logging.set_verbosity(tf.logging.ERROR)
  os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'

  print("-------------")
  print(tf.__version__)
  print("-------------")

  model = SimpleModel()
  optimizer = tf.keras.optimizers.SGD(learning_rate=0.005)
  loss = tf.keras.losses.BinaryCrossentropy(from_logits=True)
  model.compile(optimizer, loss)
  model.fit(get_dataset(), verbose=0)
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;-------------
1.14.0
-------------
Looking at the ndims says this is a salar: [0]
But this is not a scalar: [0 1 1 0]
Even reduce_any does not create a scalar: [0 1 1 0]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='pavanky' date='2019-09-13T02:37:02Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 Can you try with  and let us know whether the issue persists? Thanks!
		</comment>
		<comment id='2' author='pavanky' date='2019-09-13T05:15:51Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 Issue 1 no longer persists, but I am not sure how I can reproduce Issue 2 and Issue 3 without this Issue 1 being broken. If we can find a way to repro the remaining 2 issues, I can create a new ticket and close this one.
		</comment>
		<comment id='3' author='pavanky' date='2019-09-13T12:48:00Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 Issue2 and 3 depends on Issue1 right? If issue1 is no longer persists, then Issue2 and 3 are no longer valid i guess. Please let us know what you think. You could close the issue and open a new issue when you can reproduce issue 2 and 3. Thanks!
		</comment>
		<comment id='4' author='pavanky' date='2019-09-13T20:48:56Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32409&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32409&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>