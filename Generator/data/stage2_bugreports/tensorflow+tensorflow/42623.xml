<bug id='42623' author='kaustav-aarish' open_date='2020-08-24T16:02:42Z' closed_time='2020-10-02T16:40:25Z'>
	<summary>Retrain a TensorFlow model from a .pb file</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution: MacOS Catalina
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 1.15.0
Python version: 3.6

I was trying to retrain a TensorFlow model from a .pb file. I'm using the following function to retrieve it and load the graph in Python:
&lt;denchmark-code&gt;# Load protobuf as graph, given filepath
def load_pb(path_to_pb):
    with tf.gfile.GFile(path_to_pb, 'rb') as f:
        graph_def = tf.GraphDef()
        graph_def.ParseFromString(f.read())
    with tf.Graph().as_default() as graph:
        tf.import_graph_def(graph_def, name='')
        return graph
&lt;/denchmark-code&gt;

From here, I try to list its trainable variables and operations:
&lt;denchmark-code&gt;with tf.Session(graph=tf_graph) as sess:
    print("Trainable variables: {}".format(tf.trainable_variables())) 
    variables = [op for op in tf_graph.get_operations()]
    for var in variables:
        print("{}".format(var.name), end = ' ,')
&lt;/denchmark-code&gt;

This is the output from the above code:
&lt;denchmark-link:https://i.stack.imgur.com/SNkBk.png&gt;Code output&lt;/denchmark-link&gt;

As shown above, it says that there are no variables that can be trained, and when I try the following code to train the graph:
&lt;denchmark-code&gt;with tf.Session() as sess:
    random_input  = tf.convert_to_tensor(np.random.rand(1, 3, 2848, 4256)) # Input dimensions
    random_output = sess.run(random_input) 

    random_y0 = tf.convert_to_tensor(np.random.rand(1, 3, 2848, 4256))

    loss = tf.reduce_sum(tf.square(random_y0 - random_output))
    train = tf.train.GradientDescentOptimizer(1e-4).minimize(loss)

    sess.run(tf.global_variables_initializer())

    print("Training")

    for step in range(1):
        sess.run(train)

&lt;/denchmark-code&gt;

It gives me the error:
&lt;denchmark-code&gt;train = tf.train.GradientDescentOptimizer(1e-4).minimize(loss)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow_core/python/training/optimizer.py", line 410, in minimize
    ([str(v) for _, v in grads_and_vars], loss))
ValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables
&lt;/denchmark-code&gt;

I believe there is an issue with the conversion such that it is failing to find the training variables, could someone please clarify this? I can also provide the exact .pb file if needed. Thanks a lot!
	</description>
	<comments>
		<comment id='1' author='kaustav-aarish' date='2020-08-27T10:02:35Z'>
		&lt;denchmark-link:https://github.com/kaustav-aarish&gt;@kaustav-aarish&lt;/denchmark-link&gt;

Is there any particular reason for using 1.15, can you try in later versions and see if you still face the issue.
Also, the code is incomplete for us to replicate, if possible share a colab gist with the issue reported for us to analyse.
with respect to the error reported, please refer to: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/23621&gt;#23621&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/28792&gt;#28792&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/1511&gt;link&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/14894&gt;link1&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://stackoverflow.com/questions/41689451/valueerror-no-gradients-provided-for-any-variable&gt;link2&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://stackoverflow.com/questions/42498876/tensorflow-no-gradients-provided-for-any-variable-and-partial-run/42504176&gt;link&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='kaustav-aarish' date='2020-08-28T19:13:33Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 ,
Thanks for your reply! I upgraded to TensorFlow 2.x (still using v1 functions) and I get the same problems.
The colab file with the complete code is here:
&lt;denchmark-link:https://colab.research.google.com/drive/1Lo4ycD7tp5GrD1jYvXNbPEyZEHlG01-h?usp=sharing&gt;https://colab.research.google.com/drive/1Lo4ycD7tp5GrD1jYvXNbPEyZEHlG01-h?usp=sharing&lt;/denchmark-link&gt;

You also will need a sample .pb file, which is located here (you would need to upload it to the colab server, since it deletes the file everytime a new runtime is created):
&lt;denchmark-link:https://drive.google.com/file/d/14A9Z0F4t15pbyHXGx2BB9ztz7CHcVvfi/view?usp=sharing&gt;https://drive.google.com/file/d/14A9Z0F4t15pbyHXGx2BB9ztz7CHcVvfi/view?usp=sharing&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='kaustav-aarish' date='2020-08-31T10:09:38Z'>
		&lt;denchmark-link:https://github.com/kaustav-aarish&gt;@kaustav-aarish&lt;/denchmark-link&gt;

I ran the code shared on 2.3 and face a different error, please find the&lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/99d4aeea8a5acfb8270f351e4374b385/untitled400.ipynb&gt; gist here&lt;/denchmark-link&gt;
 and gist on &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/acd6e7e9dc0904df9fb48e60644857f7/untitled400.ipynb&gt;tf 2.2&lt;/denchmark-link&gt;

Are you trying to optimise a loss function with out any variables, please refer to this link and let us know if it helps [&lt;denchmark-link:https://stackoverflow.com/questions/46246556/valueerror-no-variables-to-optimize&gt;link&lt;/denchmark-link&gt;
]
		</comment>
		<comment id='4' author='kaustav-aarish' date='2020-09-01T14:28:56Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
,
I added to &lt;denchmark-link:https://colab.research.google.com/drive/1Lo4ycD7tp5GrD1jYvXNbPEyZEHlG01-h?usp=sharing&gt;here&lt;/denchmark-link&gt;
 to show that the loaded graph does have trainable variables, but they are not being recognised? The StackOverflow link you provided says:
&lt;denchmark-code&gt; To solve the problem, you have to think again about the graph you are trying to construct. You have to define 
 variables...
&lt;/denchmark-code&gt;

The issue is that the variables were defined elsewhere, then saved, and now need to be read and recongised which I believe TensorFlow is not able to do.
		</comment>
		<comment id='5' author='kaustav-aarish' date='2020-10-02T16:40:24Z'>
		Our recommended way of retraining models is to use saved models. As far as I understand, we do not support going directly through protobufs as persistence mechanisms. I'll close this bug, feel free to open another one if the saved model approach does not work.
		</comment>
		<comment id='6' author='kaustav-aarish' date='2020-10-02T16:40:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42623&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42623&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>