<bug id='28009' author='umayuxlabs' open_date='2019-04-21T00:25:02Z' closed_time='2019-04-26T05:02:12Z'>
	<summary>Transformer network weights - demo error</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): tf-nightly-gpu-2.0-preview
TensorFlow version (use command below): 2.0.0-dev20190420
Python version: 3
Bazel version (if compiling from source): Colab
GCC/Compiler version (if compiling from source): Colab
CUDA/cuDNN version: Colab
GPU model and memory: Colab

You can collect some of this information using our environment capture &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the current behavior
I have been trying the demos of tensorflow 2.0, particularly the transformers example. However, the current transformer example is not working anymore. This is the error output:
ValueError: Weights for model sequential_3 have not yet been created. Weights are created when the Model is first called on inputs or build() is called with an input_shape.
Seems like the latest tensorflow version 2.0.0-dev20190420 has changed a way how to call the inputs or set the weights.
It was working with the tf version 2.0.0-dev20190413.
In conclusion the transformer demo is not working anymore, is there any way to get installed in colab the 2.0.0-dev20190413 version?
Describe the expected behavior
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
Instructions are here: &lt;denchmark-link:https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/r2/tutorials/text/transformer.ipynb#scrollTo=8QG9nueFQKXx&gt;https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/r2/tutorials/text/transformer.ipynb#scrollTo=8QG9nueFQKXx&lt;/denchmark-link&gt;

I used the GPU version.
I just ran the colab transformer notebook: &lt;denchmark-link:https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/r2/tutorials/text/transformer.ipynb#scrollTo=8QG9nueFQKXx&gt;https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/r2/tutorials/text/transformer.ipynb#scrollTo=8QG9nueFQKXx&lt;/denchmark-link&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='umayuxlabs' date='2019-04-23T13:27:34Z'>
		I'm having the same problem.
		</comment>
		<comment id='2' author='umayuxlabs' date='2019-04-23T13:41:40Z'>
		
I'm having the same problem.

Hi &lt;denchmark-link:https://github.com/cevrim&gt;@cevrim&lt;/denchmark-link&gt;
,
Actually, we were able to fix the problem in the meantime by using the previous release of tensorflow, you just need to change the tf installation to this:
!pip install tf-nightly-gpu-2.0-preview==2.0.0.dev20190413
This is something temporal, but, it would be good to know about those changes and how to address them.
Regards
		</comment>
		<comment id='3' author='umayuxlabs' date='2019-04-23T15:57:30Z'>
		Hi &lt;denchmark-link:https://github.com/umayuxlabs&gt;@umayuxlabs&lt;/denchmark-link&gt;
 ,
Thank you for sharing your fix, I was trying to do the same thing.
Regards
		</comment>
		<comment id='4' author='umayuxlabs' date='2019-04-25T06:37:52Z'>
		&lt;denchmark-link:https://github.com/umayuxlabs&gt;@umayuxlabs&lt;/denchmark-link&gt;
 : Thank you for your support.
&lt;denchmark-link:https://github.com/cevrim&gt;@cevrim&lt;/denchmark-link&gt;
 : Were you able to resolve ?
		</comment>
		<comment id='5' author='umayuxlabs' date='2019-04-25T07:56:42Z'>
		&lt;denchmark-link:https://github.com/achandraa&gt;@achandraa&lt;/denchmark-link&gt;
 Yes, it's resolved.
		</comment>
		<comment id='6' author='umayuxlabs' date='2019-04-26T05:02:10Z'>
		Closing the issue since it is resolved. Thanks!
		</comment>
		<comment id='7' author='umayuxlabs' date='2019-04-26T05:02:13Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28009&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28009&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='umayuxlabs' date='2020-01-30T08:15:04Z'>
		I'm having the same problem ! &lt;denchmark-link:https://github.com/achandraa&gt;@achandraa&lt;/denchmark-link&gt;

I write a layer with the APIs of tf.nn. When using the layer together with other written layers, such as tf.keras.layers. Dense, I got the error "ValueError: Weights for model sequential_3 have not yet been created. Weights are created when the Model is first called on inputs or  is called with an ." However, the layer works well seperately.
Here is my layer.
**
`class cov(layers.Layer):
def (self, filters_width = (3,),
strides = 1,
padding = 'VALID',
dilations = None, **kwargs):
super(cov, self).(**kwargs)
self.filters_width = filters_width
self.strides = strides
self.padding = padding
self.dilations = dilations
def build(self, input_shape):
&lt;denchmark-code&gt;self.filters = self.add_weight(shape=self.filters_width+(input_shape[-1], input_shape[-1]),
                    initializer='random_normal',
                    trainable=True) 
&lt;/denchmark-code&gt;

def call(self, inputs):
output = tf.nn.convolution(
input = inputs,
filters = self.filters,
strides = self.strides,
padding = self.padding,
data_format = None,
dilations = self.dilations,
name = 'cov'
)
&lt;denchmark-code&gt;return output`
&lt;/denchmark-code&gt;

**
		</comment>
	</comments>
</bug>