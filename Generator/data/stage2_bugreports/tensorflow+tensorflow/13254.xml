<bug id='13254' author='chrisc36' open_date='2017-09-23T00:24:10Z' closed_time='2017-11-03T06:54:44Z'>
	<summary>RNNParamsSavable breaks when there is more than one RNN</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Ubuntu 16.04
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.3.0
Python version: 3.5
Bazel version (if compiling from source): 5.2
CUDA/cuDNN version: 6.0
GPU model and memory:  Tesla K80, 12gb
Exact command to reproduce:

&lt;denchmark-code&gt;    sess = tf.Session()
    cell1 = cudnn_rnn_ops.CudnnGRU(1, 10, 10, input_mode="linear_input")
    sz = cell1.params_size()
    params1 = tf.get_variable("rnn1/rnn", sess.run(sz))
    save1 = cudnn_rnn_ops.RNNParamsSaveable(
        cell1, cell1.params_to_canonical, cell1.canonical_to_params,
        [params1], name="rnn1/rnn")
    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save1)

    params2 = tf.get_variable("rnn2/rnn", sess.run(sz))
    save2 = cudnn_rnn_ops.RNNParamsSaveable(
        cell1, cell1.params_to_canonical, cell1.canonical_to_params,
        [params2], name="rnn2/rnn")
    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save2)
    sess.run(tf.global_variables_initializer())

    saver = tf.train.Saver()
    saver.save(sess, "save")
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

An exception is thrown:
"ValueError: At least two variables have the same name: rnn1/rnn"
This works if there is only one RNN. If I remove the name parameters the model will save, however only one of the two RNNs will have their weights/biases saved to the checkpoint as individual tensors, so it will break if I try to restore two CudnnCompatibleGRUCell RNNs from this checkpoint.
As far as I can tell there is some kind of name clobbering happening within tf.Saver, maybe because RNNParamsSaveable set op to none for the super class.
	</description>
	<comments>
		<comment id='1' author='chrisc36' date='2017-09-29T03:16:10Z'>
		&lt;denchmark-link:https://github.com/protoget&gt;@protoget&lt;/denchmark-link&gt;
, could you take a look at this issue?
		</comment>
		<comment id='2' author='chrisc36' date='2017-11-03T06:54:44Z'>
		RNNParamsSaveable is deprecated. Please look out for the new cudnn_rnn layer APIs which takes care of cudnn opaque variable saving.
		</comment>
	</comments>
</bug>