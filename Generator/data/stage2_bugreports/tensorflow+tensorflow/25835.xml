<bug id='25835' author='stanpcf' open_date='2019-02-18T11:36:23Z' closed_time='2019-02-21T01:26:53Z'>
	<summary>keras model's saving format is inconsistent (tf and h5)</summary>
	<description>
hi, I found the behavior is inconsistent when the keras model's saving format changed.
the keras model have two saving format(h5 and tf)
Describe the current behavior
the reproduce code as below:
#!/usr/bin/env python
import tensorflow as tf
from tensorflow import keras

print(tf.__version__)

(train_images, train_labels), (test_images, test_labels) = keras.datasets.mnist.load_data()

train_labels = train_labels[:1000]
test_labels = test_labels[:1000]

train_images = train_images[:1000].reshape(-1, 28 * 28) / 255.0
test_images = test_images[:1000].reshape(-1, 28 * 28) / 255.0


def create_model():
  model = tf.keras.models.Sequential([
    keras.layers.Dense(512, activation=tf.nn.relu, input_shape=(784,)),
    keras.layers.Dropout(0.2),
    keras.layers.Dense(10, activation=tf.nn.softmax)
  ])

  model.compile(optimizer=tf.keras.optimizers.Adam(),
                loss=tf.keras.losses.sparse_categorical_crossentropy,
                metrics=['accuracy'])

  return model


model = create_model()

checkpoint_path = "log_file/cp.bin"


model.fit(train_images, train_labels,  epochs=10, verbose=0,
          validation_data=(test_images, test_labels))  # pass callback to training
# model.save_weights(checkpoint_path, save_format='h5')
model.save_weights(checkpoint_path, save_format='tf')

model = create_model()
loss, acc = model.evaluate(test_images, test_labels)
print("Untrained model, accuracy: {:5.2f}%".format(100 * acc))

model.load_weights(checkpoint_path)
loss, acc = model.evaluate(test_images, test_labels)
print("trained model, accuracy: {:5.2f}%".format(100 * acc))
the photo below is the behavior in my computer.
&lt;denchmark-link:https://user-images.githubusercontent.com/13925796/52948264-f2f7cf00-33b3-11e9-9ad1-fff9716911c8.png&gt;&lt;/denchmark-link&gt;

Describe the expected behavior
when we change save_format from tf to h5, the expection(OSError) should not happen.
	</description>
	<comments>
		<comment id='1' author='stanpcf' date='2019-02-18T21:38:25Z'>
		Created a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/25851&gt;#25851&lt;/denchmark-link&gt;
 to address the different behavior between tf and h5.
		</comment>
	</comments>
</bug>