<bug id='31957' author='jmgc' open_date='2019-08-25T18:32:07Z' closed_time='2019-09-03T20:09:06Z'>
	<summary>Eager mode: Accessing contents of scalars in a tf.function</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Any
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.14.0
Python version: 3.6.9
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
I am trying to parallel download some images. I am using a tf.data.Dataset with the image urls as content. I want to store them in a GCS, so I am using functions from the tf.io.gfile package inside a tf.function. This function will be called through tf.data.Dataset.map.
When the different tf.io.gfile functions are called inside the tf.function, like makedirs, it raises an Error indicating that it requires a binary or unicode string as input:
TypeError: Expected binary or unicode string, got &lt;tf.Tensor 'StringJoin_1:0' shape=() dtype=string&gt;
If I try to use .numpy(), it is not available, as expected. The result is that I cannot download the images in the GCS.
Describe the expected behavior
As a tensorflow package, I would expect the tf.io.gfile functions to allow the use of scalar string tensors, or I would expect tensorflow to provide a solution similar to the .numpy() function inside tf.function for these cases. If not, at least it should be a warning in the documentation that these functions cannot be used inside tf.function.
Code to reproduce the issue
@tf.function
def test_string(value): 
    return tf.io.gfile.exists(value)

test_string(tf.constant('test'))
The result in this case is:
&lt;denchmark-code&gt;TypeError: Expected binary or unicode string, got &lt;tf.Tensor 'value:0' shape=() dtype=string&gt;
&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='jmgc' date='2019-08-26T08:28:36Z'>
		Was reproduced the issue with Tensorflow 1.14.0. Please see the gist &lt;denchmark-link:https://colab.research.google.com/drive/1EKMMLXpMreIz5_w3qTWKtodnbnBDydwZ&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='jmgc' date='2019-08-26T15:36:18Z'>
		gfile is a python implementation (through  pywrap_tensorflow), not a kernel ops. So it will not work in graph mode, that is why it is not working with tf.function and tf.data I believe.
tf.io.read_file and tf.io.write_file are kernel ops so I they are compatible with tf.function and tf.data I think.
		</comment>
		<comment id='3' author='jmgc' date='2019-08-26T17:58:29Z'>
		&lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;

Following your advice, I have made another test using the tf.io.write_file function:
import tensorflow as tf

tf.enable_eager_execution()

@tf.function
def test_function(name): 
    tf.io.write_file(name, tf.constant('2'))

test_function(tf.constant('hi.txt'))

print(open('hi.txt').read())
The result is a:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
&lt;ipython-input-15-7e9fdc2b4e62&gt; in &lt;module&gt;
----&gt; 1 print(open('hi.txt').read())

FileNotFoundError: [Errno 2] No such file or directory: 'hi.txt'
&lt;/denchmark-code&gt;

If I do exactly the same, but without the @tf.function decorator:
import tensorflow as tf

tf.enable_eager_execution()

def test_function(name): 
    tf.io.write_file(name, tf.constant('2'))

test_function(tf.constant('hi.txt'))

print(open('hi.txt').read())
The result is the one expected:
2
I assume I am making something wrong, but sincerely I do not know what.
In any case, thanks for your comment.
		</comment>
		<comment id='4' author='jmgc' date='2019-08-26T18:30:35Z'>
		&lt;denchmark-link:https://github.com/jmgc&gt;@jmgc&lt;/denchmark-link&gt;
 I ran into the same erorr with TF 1.14.
However, it looks like on TF 2.0.0RC0 it works fine (runs on colab) with the following:
!pip install tensorflow==2.0.0rc0

import tensorflow as tf

print(tf.version.VERSION)

#tf.enable_eager_execution()

@tf.function
def test_function(name): 
    tf.io.write_file(name, tf.constant('2'))

test_function(tf.constant('hi.txt'))

print(open('hi.txt').read())
		</comment>
		<comment id='5' author='jmgc' date='2019-08-26T19:42:08Z'>
		&lt;denchmark-link:https://github.com/jmgc&gt;@jmgc&lt;/denchmark-link&gt;
 I think this was resolved in . I ran your code without any issues with . Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/ca5f8eb7db941e4bc6b69ba04ced0dfb/tf_31957.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='6' author='jmgc' date='2019-08-27T06:55:52Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 it is correct that it works for the  and . However, it does still not work with the  functions.
		</comment>
		<comment id='7' author='jmgc' date='2019-08-27T13:45:48Z'>
		&lt;denchmark-link:https://github.com/jmgc&gt;@jmgc&lt;/denchmark-link&gt;
 Please check &lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 reason &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/31957#issuecomment-524909757&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='8' author='jmgc' date='2019-09-03T20:09:06Z'>
		Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
		</comment>
		<comment id='9' author='jmgc' date='2019-09-03T20:09:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31957&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31957&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>