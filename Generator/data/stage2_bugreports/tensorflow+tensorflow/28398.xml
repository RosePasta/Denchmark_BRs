<bug id='28398' author='ispmarin' open_date='2019-05-04T18:15:00Z' closed_time='2019-07-24T18:37:15Z'>
	<summary>Passing tf.data.Dataset to model.predict raises "ValueError: The `batch_size` argument must not be specified when using dataset as an input."</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution: 19.04
TensorFlow installed from (source or binary): pip install tensorflow==2.0.0-alpha0
TensorFlow version (use command below): 2.0.0-alpha
Python version: 3.7.3

Describe the current behavior
Running simple classification example with Keras interface
Describe the expected behavior
Predict results of fitted model with tf.data.Dataset using model.predict
Code to reproduce the issue
&lt;denchmark-code&gt;from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
import tensorflow as tf
from tensorflow.python import keras

iris = datasets.load_iris()

scl = StandardScaler()
ohe = OneHotEncoder(categories='auto')
data_norm = scl.fit_transform(iris.data)
data_target = ohe.fit_transform(iris.target.reshape(-1,1)).toarray()
train_data, val_data, train_target, val_target = train_test_split(data_norm, data_target, test_size=0.1)
train_data, test_data, train_target, test_target = train_test_split(train_data, train_target, test_size=0.2)


train_dataset = tf.data.Dataset.from_tensor_slices((train_data, train_target))
train_dataset = train_dataset.batch(32).repeat()

test_dataset = tf.data.Dataset.from_tensor_slices((test_data, test_target))
test_dataset = test_dataset.batch(32).repeat()

val_dataset = tf.data.Dataset.from_tensor_slices((val_data, val_target))
val_dataset = val_dataset.batch(12).repeat()

mdl = keras.Sequential([
    keras.layers.Dense(16, input_dim=4, activation='relu'),
    keras.layers.Dense(8, activation='relu'),
    keras.layers.Dense(8, activation='relu'),
    keras.layers.Dense(3, activation='softmax')]
)

mdl.compile(
    optimizer=keras.optimizers.Adam(0.01),
    loss=keras.losses.categorical_crossentropy,
    metrics=[keras.metrics.categorical_accuracy]
    )

history = mdl.fit(train_dataset, epochs=10, steps_per_epoch=15, validation_data=val_dataset, validation_steps=12)
results = mdl.evaluate(test_dataset, steps=15)
comparison = mdl.predict_classes(test_dataset)
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;E0504 15:10:24.153471 139666315605824 ultratb.py:149] Internal Python error in the inspect module.
Below is the traceback from this internal error.

Traceback (most recent call last):
  File "/home/ispmarin/lib/venvs/dl/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-15-848835f9eab8&gt;", line 41, in &lt;module&gt;
    comparison = mdl.predict_classes(test_dataset)
  File "/home/ispmarin/lib/venvs/dl/lib/python3.7/site-packages/tensorflow/python/keras/engine/sequential.py", line 313, in predict_classes
    proba = self.predict(x, batch_size=batch_size, verbose=verbose)
  File "/home/ispmarin/lib/venvs/dl/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py", line 1122, in predict
    batch_size = self._validate_or_infer_batch_size(batch_size, steps, x)
  File "/home/ispmarin/lib/venvs/dl/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py", line 1780, in _validate_or_infer_batch_size
    raise ValueError('The `batch_size` argument must not be specified when'
ValueError: The `batch_size` argument must not be specified when using dataset as an input.


&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ispmarin' date='2019-05-09T09:36:06Z'>
		&lt;denchmark-link:https://github.com/ispmarin&gt;@ispmarin&lt;/denchmark-link&gt;
 : I am able to reproduce the issue on colab with TensorFlow version 2.0.0-alpha0
		</comment>
		<comment id='2' author='ispmarin' date='2019-05-20T20:36:06Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 as far as I can tell, this is an error in Keras, not tf.data ... please re-assign this problem to someone familiar with Keras, thank you
		</comment>
		<comment id='3' author='ispmarin' date='2019-07-24T18:37:15Z'>
		&lt;denchmark-link:https://github.com/ispmarin&gt;@ispmarin&lt;/denchmark-link&gt;
 I think this was resolved in . Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/e68b76451dd49bf282fb35d2f78faca7/tf_28398.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
Last line in your code mdl.predict_classes is expecting a numpy array where as your are providing a dataset.
I am closing this issue as it was resolved. Please feel free to reopen the issue if the issue persists again. Thanks!
		</comment>
		<comment id='4' author='ispmarin' date='2019-07-24T18:37:16Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28398&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28398&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='ispmarin' date='2019-07-27T20:39:47Z'>
		The error persists, and now the &lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/Sequential#predict_classes&gt;documentation&lt;/denchmark-link&gt;
 says that predict can use tf.data besides other kinds of data, but predict_classes can only use numpy arrays. Is there a reason for  only accepts numpy arrays? This seems to break what is expected from the library.
		</comment>
	</comments>
</bug>