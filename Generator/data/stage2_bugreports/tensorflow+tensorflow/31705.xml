<bug id='31705' author='jpatts' open_date='2019-08-16T20:51:48Z' closed_time='2019-08-20T05:07:58Z'>
	<summary>The arguments and returns of tf.keras.layers.GRUCell.call() make no sense at all</summary>
	<description>
&lt;denchmark-h:h2&gt;URL(s) with the issue: https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/layers/recurrent.py#L1615 https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/layers/recurrent.py#L1718&lt;/denchmark-h&gt;

Please provide a link to the documentation entry, for example:
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/layers/GRUCell&gt;https://www.tensorflow.org/api_docs/python/tf/keras/layers/GRUCell&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue (what needs changing):&lt;/denchmark-h&gt;

The states argument to tf.keras.layers.GRUCell.call() is indexed with h_tm1 = states[0]  # previous memory, and the function returns h and [h], which is the same value?
&lt;denchmark-h:h3&gt;Clear description&lt;/denchmark-h&gt;

Why does this occur? Its inconsistent with the pytorch torch.nn.GRUCell implementation (&lt;denchmark-link:https://pytorch.org/docs/stable/nn.html#grucell&gt;https://pytorch.org/docs/stable/nn.html#grucell&lt;/denchmark-link&gt;
).
I noticed the states issue when I was converting a project from pytorch to tf.keras and the same code, with just the GRUCell swapped from pytorch to tf.keras, did not work. The error message was tensorflow.python.framework.errors_impl.InvalidArgumentError: In[0] is not a matrix. Instead it has shape [200] [Op:MatMul] name: transition/gru_cell/MatMul/, and the solution was to replace my hidden with [hidden] for the states parameter.
Furthermore, when I got my return types, they were a tuple rather than the output. Upon further inspection, the tuple CONTAINED THE SAME VALUE TWICE.
Is there any reason it does this? In the doc this is not explained AT ALL.
&lt;denchmark-h:h3&gt;Correct links&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/layers/recurrent.py#L1615&gt;https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/layers/recurrent.py#L1615&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/layers/recurrent.py#L1718&gt;https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/layers/recurrent.py#L1718&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Parameters defined&lt;/denchmark-h&gt;

states parameter is the confusing one in question.
&lt;denchmark-h:h3&gt;Returns defined&lt;/denchmark-h&gt;

return h, [h] makes no sense
&lt;denchmark-h:h3&gt;Raises listed and defined&lt;/denchmark-h&gt;

Irrelevant
&lt;denchmark-h:h3&gt;Usage example&lt;/denchmark-h&gt;

self.rnn = tf.keras.layers.GRUCell(num_units)
self.rnn(input, hidden)
where input, hidden = shape(N, num_units) doesn't work. Needs to be changed to:
self.rnn(input, [hidden]) to execute.
Furthermore, on the LHS of self.rnn, rather than just an x = self.rnn(...), I need to do x, _ = self.rnn(...)
Why?
&lt;denchmark-h:h3&gt;Submit a pull request?&lt;/denchmark-h&gt;

I would gladly change this if someone would confirm this is an issue.
	</description>
	<comments>
		<comment id='1' author='jpatts' date='2019-08-20T05:07:58Z'>
		Hi &lt;denchmark-link:https://github.com/jpatts&gt;@jpatts&lt;/denchmark-link&gt;
,
Thanks for reporting this, but I believe this code is correct.
The keras rnn api is: You write a layer that returns an output, and a list of internal states.
The list of internal states is what the layer passes to the next timestep as states.
Compare to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/layers/recurrent.py#L2196&gt;LSTM&lt;/denchmark-link&gt;

GRUCell returns h,[h]: the first h is the output. [h] is the list of internal states to pass to the next timestep. This makes sense because a GRU has one recurrent connection. That connection is its output from the last timestep.
See the &lt;denchmark-link:https://www.tensorflow.org/beta/guide/keras/rnn&gt;Keras RNN API&lt;/denchmark-link&gt;
 for more detail.
		</comment>
		<comment id='2' author='jpatts' date='2019-08-20T05:07:59Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31705&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31705&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='jpatts' date='2020-08-03T04:02:25Z'>
		Currently, this issue is the best documentation on GRUCell usage. GRUCell could really do with some improved documentation.
		</comment>
		<comment id='4' author='jpatts' date='2020-10-18T16:37:34Z'>
		&lt;denchmark-link:https://github.com/kevindoran&gt;@kevindoran&lt;/denchmark-link&gt;
 Yes you're right, also it took me a while to find this page and understand the outputs of GRUCell
		</comment>
	</comments>
</bug>