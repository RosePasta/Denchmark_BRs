<bug id='39931' author='SarahLynnePu' open_date='2020-05-28T03:52:07Z' closed_time='2020-06-11T16:09:09Z'>
	<summary>model = keras.models.Sequential() # I tensorflow/stream_executor/cuda/cuda_driver.cc:801] failed to allocate 72.19M (75694080 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):pip
TensorFlow version (use command below):2.1.0
Python version:3.7.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:10.1.0
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
&lt;denchmark-h:h1&gt;building an image classifier&lt;/denchmark-h&gt;

n_rows = 4
n_cols = 10
plt.figure(figsize=(n_cols * 1.2, n_rows * 1.2))
for row in range(n_rows):
for col in range(n_cols):
index = n_cols * row + col
plt.subplot(n_rows, n_cols, index + 1)
plt.imshow(X_train[index], cmap="binary", interpolation="nearest")
plt.axis('off')
plt.title(class_names[y_train[index]], fontsize=12)
plt.subplots_adjust(wspace=0.2, hspace=0.5)
save_fig('fashion_mnist_plot', tight_layout=False)
plt.show()
model = keras.models.Sequential()
model.add(keras.layers.Flatten(input_shape=[28, 28]))
model.add(keras.layers.Dense(300, activation="relu"))
model.add(keras.layers.Dense(100, activation="relu"))
model.add(keras.layers.Dense(10, activation="softmax"))
Describe the expected behavior
model.layers
&lt;tensorflow.python.keras.layers.core.Flatten at 0x7ff370af5780&gt;,
&lt;tensorflow.python.keras.layers.core.Dense at 0x7ff370af5c88&gt;,
&lt;tensorflow.python.keras.layers.core.Dense at 0x7ff330ab36d8&gt;,
&lt;tensorflow.python.keras.layers.core.Dense at 0x7ff330ab3828&gt;]
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem.
If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-link:https://colab.research.google.com/github/ageron/handson-ml2/blob/master/10_neural_nets_with_keras.ipynb#scrollTo=KQiHD3LwTRDF&gt;https://colab.research.google.com/github/ageron/handson-ml2/blob/master/10_neural_nets_with_keras.ipynb#scrollTo=KQiHD3LwTRDF&lt;/denchmark-link&gt;

Other info / logs
2020-05-28 13:40:44.785958: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1241] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 72 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2060 SUPER, pci bus id: 0000:29:00.0, compute capability: 7.5)
2020-05-28 13:40:44.787561: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55ed4ff1eab0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-05-28 13:40:44.787571: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce RTX 2060 SUPER, Compute Capability 7.5
2020-05-28 13:40:44.789256: I tensorflow/stream_executor/cuda/cuda_driver.cc:801] failed to allocate 72.19M (75694080 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2020-05-28 13:40:44.796521: F ./tensorflow/core/kernels/random_op_gpu.h:232] Non-OK-status: GpuLaunchKernel(FillPhiloxRandomKernelLaunch, num_blocks, block_size, 0, d.stream(), gen, data, size, dist) status: Internal: out of memory
Aborted (core dumped)
	</description>
	<comments>
		<comment id='1' author='SarahLynnePu' date='2020-05-28T15:23:56Z'>
		&lt;denchmark-link:https://github.com/SarahLynnePu&gt;@SarahLynnePu&lt;/denchmark-link&gt;

Please share simple standalone code to replicate the issue faced or share a colab gist for us to analyse.
		</comment>
		<comment id='2' author='SarahLynnePu' date='2020-06-04T15:34:25Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='SarahLynnePu' date='2020-06-11T16:09:08Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='4' author='SarahLynnePu' date='2020-06-11T16:09:10Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39931&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39931&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>