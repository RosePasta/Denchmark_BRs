<bug id='34650' author='qbeer' open_date='2019-11-27T14:39:01Z' closed_time='2019-12-03T00:45:02Z'>
	<summary>TFRecordsWriter default write mode?</summary>
	<description>
&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/io/TFRecordWriter&gt;https://www.tensorflow.org/api_docs/python/tf/io/TFRecordWriter&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue:&lt;/denchmark-h&gt;

So I've been using TFRecordWriter for a while now and I would be interested in the method it writes to files. If I create two TFRecord files with the exact same name what is the default wrtiing option? append or (re)write? It would be crucial to know this in my use case. Thanks in advance.
	</description>
	<comments>
		<comment id='1' author='qbeer' date='2019-11-27T14:45:21Z'>
		All right, just to make sure I iterated over the datafile and I know from statistics what should be the number of records in the TFRecord file:
sum(1 for _ in dataset)
It seems that the default behaviour is (re)write so not appending. Can anyone point me to the code where this is actually defined?
		</comment>
		<comment id='2' author='qbeer' date='2019-12-03T00:45:01Z'>
		The fact that TFRecordWriter (re)writes (as opposed to appends) is not specified in the documentation of TFRecordWriter.
The Python code that creates the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/lib/io/tf_record.py#L217&gt;writer&lt;/denchmark-link&gt;
 ends up calling into C++ using a generated wrapper, which ends up creating an instance of the following &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/lib/io/py_record_writer.cc#L30&gt;class&lt;/denchmark-link&gt;
, which ends up using  and its &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/core/platform/file_system.h#L76&gt;documentation&lt;/denchmark-link&gt;
 specifies the behavior.
Append is not supported out-of-the-box because appending to a compressed file would in general not be possible without first decompressing the file.
		</comment>
		<comment id='3' author='qbeer' date='2019-12-03T08:17:39Z'>
		Thanks!
		</comment>
	</comments>
</bug>