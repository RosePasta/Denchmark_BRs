<bug id='31546' author='Pyrestone' open_date='2019-08-12T15:15:33Z' closed_time='2019-08-28T17:00:51Z'>
	<summary>model.fit_generator() multithreading is broken in tf.keras</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): YES
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Platform-independent
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): From pip
TensorFlow version (use command below): 1.14.0 and 2.0
Python version: 3.6.7

&lt;denchmark-h:h3&gt;Summary&lt;/denchmark-h&gt;

fit_generator has an option called workers, setting this to &gt;1 will use multithreading to queue up batches from a generator.
It raises an exception if the generator is not thread-safe. this is expected. However, it does not accept thread-safe generators.
&lt;denchmark-h:h3&gt;Describe the current behavior&lt;/denchmark-h&gt;

Calling model.fit_generator on a keras model in tf 2.0 or compat.v2 using a generator object, subclassed from collections.Generator raises an exception that the given generator object does not have a shape attribute.
This is rooted in the calling of model_iteration which then unsuccessfully attempts to find out wether the generator is in fact a generator by using inspect.isgenerator(), which only recognizes native python generators (constructed by a function containing a yield statement)
however, native python generators cannot be thread-safe, thus fit_generator with workers&gt;1 and use_multiprocessing=False is broken in tf.keras
&lt;denchmark-h:h3&gt;Describe the expected behavior&lt;/denchmark-h&gt;

In keras 2.2.4, fit_generator simply calls the next(gen) function on the generator provided to fit_generator(). this is working as expected.
Code to reproduce the issue
import numpy as np

#switch here to switch between working keras and non-working tf.keras code
do_broken=True 

if do_broken:
    import tensorflow.compat.v2 as tf
    from tensorflow.compat.v2 import keras
    from tensorflow.compat.v2.keras.layers import Dense
    from tensorflow.compat.v2.keras.models import Sequential
    tf.enable_v2_behavior()
else:
    import keras
    from keras.layers import Dense
    from keras.models import Sequential

import threading
from collections import Generator

class mwe_gen(Generator):
    
    def __init__(self,train_data,train_labels,batch_size):
        self.train_data=train_data
        self.train_labels=train_labels
        self.batch_size=batch_size
        self.batch=0
        self.lock=threading.Lock()

    def __iter__(self):
        return self

    def __next__(self):
        return self.next()
    
    def next(self):
        with self.lock:
            batch=self.batch
            batch_size=self.batch_size
            self.batch=self.batch+self.batch_size
            if self.batch&gt;len(self.train_data):
                self.batch=0
        batch_data=self.train_data[batch:batch+batch_size]
        batch_labels=self.train_labels[batch:batch+batch_size]
        return (batch_data,batch_labels)
    
    def send(self,arg):
        return self.next()
    
    def close(self):
        """Raise GeneratorExit inside generator.
        """
        try:
            self.throw(GeneratorExit)
        except (GeneratorExit, StopIteration):
            pass
        else:
            raise RuntimeError("generator ignored GeneratorExit")
    
    def throw(self, type=None, value=None, traceback=None):
        raise StopIteration
        
train_data=np.random.normal(size=(10,1))
train_labels=np.random.normal(size=(10,1))

gen=mwe_gen(train_data,train_labels,5)

model=Sequential()
model.add(Dense(1,input_shape=(1,)))

model.compile(loss="mse",optimizer="sgd")

model.fit_generator(gen,steps_per_epoch=2)
Other info / logs
Traceback (most recent call last):
  File "multithreaded_gen.py", line 72, in &lt;module&gt;
    model.fit_generator(gen,steps_per_epoch=2)
  File "C:\Users\PYRESTONE\AppData\Local\Programs\Python\Python36\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1433, in fit_generator
    steps_name='steps_per_epoch')
  File "C:\Users\PYRESTONE\AppData\Local\Programs\Python\Python36\lib\site-packages\tensorflow\python\keras\engine\training_generator.py", line 144, in model_iteration
    shuffle=shuffle)
  File "C:\Users\PYRESTONE\AppData\Local\Programs\Python\Python36\lib\site-packages\tensorflow\python\keras\engine\training_generator.py", line 480, in convert_to_generator_like
    num_samples = int(nest.flatten(data)[0].shape[0])
AttributeError: 'mwe_gen' object has no attribute 'shape'
	</description>
	<comments>
		<comment id='1' author='Pyrestone' date='2019-08-13T11:54:00Z'>
		I have tried on colab with TF version 1.14, nightly versions, 2.0.0-dev20190813 and was able to reproduce the issue.Please, find the &lt;denchmark-link:https://colab.research.google.com/drive/1yAK1iG0wdAo51uDk6YGifdV2-vpiEzqm&gt;gist &lt;/denchmark-link&gt;
here.Thanks!
		</comment>
		<comment id='2' author='Pyrestone' date='2019-08-26T22:52:15Z'>
		I just hit this and am preparing a fix. In case you're curious the issue is that we check for generators but not iterators: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/utils/data_utils.py#L99&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/utils/data_utils.py#L99&lt;/denchmark-link&gt;
 It's slightly tricky, because lots of things are iterators but we but aren't legitimate inputs to 
		</comment>
		<comment id='3' author='Pyrestone' date='2019-08-28T17:00:51Z'>
		This is now fixed. (Confirmed with the latest nightly.)
		</comment>
		<comment id='4' author='Pyrestone' date='2019-08-28T17:00:52Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31546&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31546&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Pyrestone' date='2020-10-04T13:03:44Z'>
		&lt;denchmark-link:https://github.com/robieta&gt;@robieta&lt;/denchmark-link&gt;
 , Just to confirm, is this fixed with  version ? (aka how do I check?)
Thanks!
		</comment>
	</comments>
</bug>