<bug id='40185' author='superlyy' open_date='2020-06-05T09:50:15Z' closed_time='2020-12-27T03:33:57Z'>
	<summary>[RNN] dynamic input shape support</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.15.4
TensorFlow installed from (source or binary): binary
TensorFlow version (or github SHA if from source): tf-nightly (2.3.0.dev20200604)

Command used to run the converter or code if youâ€™re using the Python API
If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;https://colab.research.google.com/drive/1BtT2DkitM6PQKxOAsd-S0IU2Fwh2Reo1?usp=sharing
&lt;/denchmark-code&gt;


I was heard about the support for unknown dimensions in TF Lite (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29590#issuecomment-580951882&gt;#29590 (comment)&lt;/denchmark-link&gt;
), then I tried to convert my model mainly followed by the instructions (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/examples/experimental_new_converter/Keras_LSTM_fusion_Codelab.ipynb&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/examples/experimental_new_converter/Keras_LSTM_fusion_Codelab.ipynb&lt;/denchmark-link&gt;
), but with replacing specific dimensions in TensorSpec() to None, the model exported to SavedModel format successfully. However, the conversion of TF Lite converter didn't work fine (errors shown in Colab).
Before this, I've also tried fixed size in TenserSpec(), then called resize_tensor_input() &amp; allocate_tensors() on the TF Lite interpreter's side, but it didn't work either :(
Are there any proper ways for model in TF Lite to accept variable shape data?
	</description>
	<comments>
		<comment id='1' author='superlyy' date='2020-06-05T11:35:11Z'>
		&lt;denchmark-link:https://github.com/superlyy&gt;@superlyy&lt;/denchmark-link&gt;

I ran the code shared, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/02e436b2bcecb88fb846e2859b8a988d/untitled217.ipynb&gt;gist here&lt;/denchmark-link&gt;
 , please let us know if this confirms the issue.
		</comment>
		<comment id='2' author='superlyy' date='2020-06-05T12:06:30Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;

I ran this code successfully before, but I think it doesn't mention about variable size input tensor any.
		</comment>
		<comment id='3' author='superlyy' date='2020-06-06T16:58:00Z'>
		Hello &lt;denchmark-link:https://github.com/superlyy&gt;@superlyy&lt;/denchmark-link&gt;
 i dont know your use case, i was having this same issue with images, but later i realize that i will not work with image tensor but with byte strings tensor, maybe you can update your approach to work that way. i have an implementation here &lt;denchmark-link:https://github.com/ElPapi42/deep-deblurring-model/blob/tflite/deblurrer/model/wrapper.py&gt;https://github.com/ElPapi42/deep-deblurring-model/blob/tflite/deblurrer/model/wrapper.py&lt;/denchmark-link&gt;
, check the decorator, maybe can be helpful for you.
		</comment>
		<comment id='4' author='superlyy' date='2020-06-07T14:57:30Z'>
		&lt;denchmark-link:https://github.com/superlyy&gt;@superlyy&lt;/denchmark-link&gt;

Please update as per above comment.
		</comment>
		<comment id='5' author='superlyy' date='2020-06-07T19:38:08Z'>
		Hey guys, &lt;denchmark-link:https://github.com/ElPapi42&gt;@ElPapi42&lt;/denchmark-link&gt;
, thanks for the suggestions again. I try with a &lt;denchmark-link:https://colab.research.google.com/drive/11OeYjwm4CUfL9wSnbAtQaMSyXqQOGlNK?usp=sharing&gt;subclassed Model&lt;/denchmark-link&gt;
, but it still doesn't work well with LSTM. Btw, the model is actually made for MIR-related task, the inputs are time-series of preprocessed features.
		</comment>
		<comment id='6' author='superlyy' date='2020-06-07T19:50:42Z'>
		Hello again! i don't have a solution, but I noticed you don't initialize the model weights before saving to disk, can you try to forward pass a batch of sample data through the architecture before doing tf.saved_model.save()?
		</comment>
		<comment id='7' author='superlyy' date='2020-06-08T04:47:22Z'>
		Absolutely. Before saving model, I forward a random data to model by using fit() &lt;denchmark-link:https://colab.research.google.com/drive/11OeYjwm4CUfL9wSnbAtQaMSyXqQOGlNK#scrollTo=-FJBTa9cN88y&gt;in here&lt;/denchmark-link&gt;
. But it shows another error in convert.convert():

I'm wondering if TF Lite can not only support the dynamic shape in batch size, but also the other dimensions?
		</comment>
		<comment id='8' author='superlyy' date='2020-06-08T15:22:16Z'>
		I decide to write another bare minimum example, and I can confirm this only happens with LSTM layer, when changed to GRU everything works:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.layers import LSTM, Bidirectional, GRU

class SubClassedModel(tf.keras.Model):
    def __init__(self):
        super(SubClassedModel, self).__init__()
        self.model = Bidirectional(GRU(4, time_major=True, return_sequences=True), name='BILSTM_OUTPUT')

    @tf.function(input_signature=[tf.TensorSpec(shape=[None, None, 256], dtype=tf.float32)])
    def call(self, inputs):
        return self.model(inputs)

def convert(model):
    converter = tf.lite.TFLiteConverter.from_keras_model(model) 
    return converter.convert()

model = SubClassedModel()
test_input = tf.random.uniform(shape=[2, 2, 256], dtype=tf.float32)
with tf.device('/cpu:0'):
    test_output = model(test_input)

tflite = convert(model)
&lt;/denchmark-code&gt;

Dont know the reason for this error, but surely must be inspected &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='superlyy' date='2020-06-09T14:18:28Z'>
		&lt;denchmark-link:https://github.com/superlyy&gt;@superlyy&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ElPapi42&gt;@ElPapi42&lt;/denchmark-link&gt;

Please share a colab gist of the error faced for us to analyse
		</comment>
		<comment id='10' author='superlyy' date='2020-06-09T14:28:14Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://colab.research.google.com/drive/1sPKS9ZhRmCVV9JB9KmY0ywH7ZxWHFKxQ?usp=sharing&gt;https://colab.research.google.com/drive/1sPKS9ZhRmCVV9JB9KmY0ywH7ZxWHFKxQ?usp=sharing&lt;/denchmark-link&gt;

If you change the LSTM layer to a GRU, everything works on 2.3.0-dev20200609. On 2.2.0 both are broken with dynamic input shapes.
		</comment>
		<comment id='11' author='superlyy' date='2020-06-10T13:57:08Z'>
		I am able to replicate this issue, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/8ebae339287d4e6eaa45de1f1947b0ed/untitled227.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='superlyy' date='2020-12-13T02:42:52Z'>
		&lt;denchmark-link:https://github.com/ElPapi42&gt;@ElPapi42&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/superlyy&gt;@superlyy&lt;/denchmark-link&gt;
 Looks like this was resolved in recent . Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/3658c3ba00ffa7a6f09f23b0007c88ef/untitled227.ipynb&gt;gist here&lt;/denchmark-link&gt;
. thanks!
Please close the issue if this was resolved for you. thanks!
		</comment>
		<comment id='13' author='superlyy' date='2020-12-20T03:03:59Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='14' author='superlyy' date='2020-12-27T03:33:56Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='15' author='superlyy' date='2020-12-27T03:33:59Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40185&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40185&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>