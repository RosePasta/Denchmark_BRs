<bug id='1861' author='rdipietro' open_date='2016-04-11T21:43:38Z' closed_time='2016-04-18T22:01:49Z'>
	<summary>Bug: tf.scan loses shape information when available</summary>
	<description>
Operating System: CentOS 6.7
If installed from sources, provide the commit hash: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/b4b276eb785f77beb226189ca1d32ba36717a588&gt;b4b276e&lt;/denchmark-link&gt;

tf.scan loses shape information when available, which in turn makes it necessary to pass around shape information that could be inferred from the Tensors themselves.
Example where we should see shape [3] (after conversion to list), but where we instead get a shape of &lt;unknown&gt;:
&lt;denchmark-code&gt;def fn(previous_output, current_input):
    print(current_input.get_shape())
    return current_input

x = tf.constant([[1, 2, 3], [4, 5, 6]])
initializer = tf.constant([0, 0, 0])

y = tf.scan(fn, x, initializer=initializer)

with tf.Session() as sess:
    print(sess.run(y))

# &lt;unknown&gt;
# [[1 2 3]
# [4 5 6]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='rdipietro' date='2016-04-13T01:21:53Z'>
		Scan uses TensorArray internally.  We currently don't support shape inference for TensorArray operations.
		</comment>
		<comment id='2' author='rdipietro' date='2016-04-18T22:01:49Z'>
		Fixed in HEAD.
		</comment>
		<comment id='3' author='rdipietro' date='2016-04-20T18:54:27Z'>
		For people who stumbled on this later, this is the commit which fixed this issue: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/8baf2f346f45c85be31cda0264b035ecda9c21bc&gt;8baf2f3&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>