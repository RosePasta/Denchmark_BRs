<bug id='28924' author='brunorigal' open_date='2019-05-22T10:16:00Z' closed_time='2020-01-21T21:41:48Z'>
	<summary>tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information


Custom code


Ubuntu 18


TensorFlow installed from source:


TensorFlow version :2.0


Python version: 3.6


CUDA/cuDNN version:10.0/


GPU model and memory: 1080Ti/11Go


Contrary to the docs, tf.print do not handle printing tensors in a session run (for example when building a keras model with the model API)
&lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/print&gt;https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/print&lt;/denchmark-link&gt;

Describe the expected behavior
I expect the example shown in the docs to run smoothly
Code to reproduce the issue
&lt;denchmark-code&gt;import os
import tensorflow as tf
from tensorflow.keras.layers import BatchNormalization
import numpy as np
input = np.random.uniform(size=(6, 40, 40, 1)).astype(np.float32)

ds = tf.data.Dataset.from_tensor_slices(input).batch(2)

iterator = iter(ds)
inp = tf.keras.Input((None, None, 1))
print_op = tf.print(inp)
with tf.control_dependencies([print_op]):
    out = tf.keras.layers.Conv2D(5, 3)(inp)
model = tf.keras.Model(inputs=inp, outputs=out)
model(next(iterator))
&lt;/denchmark-code&gt;

Which raises:
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_string_ops.py", line 807, in string_format
    summarize)
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "log_test.py", line 13, in &lt;module&gt;
    print_op = tf.print(inp)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/logging_ops.py", line 339, in print_v2
    name=format_name)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/string_ops.py", line 192, in string_format
    name=name)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_string_ops.py", line 813, in string_format
    summarize=summarize, name=name, ctx=_ctx)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_string_ops.py", line 867, in string_format_eager_fallback
    _attr_T, inputs = _execute.convert_to_mixed_eager_tensors(inputs, _ctx)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/execute.py", line 210, in convert_to_mixed_eager_tensors
    types = [t._datatype_enum() for t in v]  # pylint: disable=protected-access
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/execute.py", line 210, in &lt;listcomp&gt;
    types = [t._datatype_enum() for t in v]  # pylint: disable=protected-access
AttributeError: 'Tensor' object has no attribute '_datatype_enum'
	</description>
	<comments>
		<comment id='1' author='brunorigal' date='2019-05-23T08:37:39Z'>
		Thanks for finding the issue. I could reproduce the issue with TF2.0.
		</comment>
		<comment id='2' author='brunorigal' date='2019-06-25T20:33:34Z'>
		Any updates on this?
		</comment>
		<comment id='3' author='brunorigal' date='2019-08-02T13:26:54Z'>
		Any solution here?
		</comment>
		<comment id='4' author='brunorigal' date='2019-08-05T18:03:17Z'>
		I am getting the same error when mixing an LSTM with some additional preprocessing formulas (that have their own parameters to be fitted)
		</comment>
		<comment id='5' author='brunorigal' date='2019-08-22T02:21:38Z'>
		Any updates?
		</comment>
		<comment id='6' author='brunorigal' date='2019-09-06T10:31:08Z'>
		I´m having this issue as well. Could someone help with why is happening? Thanks.
		</comment>
		<comment id='7' author='brunorigal' date='2019-09-26T11:03:51Z'>
		I'm having the same issue while converting code from Pytorch to tensorflow2.0, did anyone find a solution?
		</comment>
		<comment id='8' author='brunorigal' date='2019-10-11T03:29:38Z'>
		I have the same issue when I updated TensorFlow version 1.13 to 1.14.
		</comment>
		<comment id='9' author='brunorigal' date='2019-10-18T00:09:08Z'>
		I had this issue with Tensorflow 2.0.0. Downgrading to 1.13.2 resolved the issue, which for me was an acceptable solution.
		</comment>
		<comment id='10' author='brunorigal' date='2019-11-05T02:50:33Z'>
		I´m having this issue as well
		</comment>
		<comment id='11' author='brunorigal' date='2019-11-08T10:17:26Z'>
		Is there any update on this issue with Tensorflow v2.0?
		</comment>
		<comment id='12' author='brunorigal' date='2019-11-11T15:18:48Z'>
		Any update with TF2.0 ?
		</comment>
		<comment id='13' author='brunorigal' date='2019-11-26T15:51:03Z'>
		Same issue here
		</comment>
		<comment id='14' author='brunorigal' date='2019-12-19T15:59:40Z'>
		Same issue on version 2
		</comment>
		<comment id='15' author='brunorigal' date='2020-01-21T21:41:48Z'>
		Thanks for the issue!
control_dependencies should not be used in TF2.x.
The way to do this is:
import os
import tensorflow as tf
from tensorflow.keras.layers import BatchNormalization
import numpy as np
input = np.random.uniform(size=(6, 40, 40, 1)).astype(np.float32)

ds = tf.data.Dataset.from_tensor_slices(input).batch(2)

def _print(t):
  tf.print(t)
  return t

iterator = iter(ds)
inp = tf.keras.Input((None, None, 1))
out = tf.keras.layers.Lambda(_print)(inp)
out = tf.keras.layers.Conv2D(5, 3)(out)
model = tf.keras.Model(inputs=inp, outputs=out)
model(next(iterator))
		</comment>
		<comment id='16' author='brunorigal' date='2020-01-21T21:41:50Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28924&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28924&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='17' author='brunorigal' date='2020-03-25T12:47:06Z'>
		I am still getting this error and I am not using control_dependencies
		</comment>
		<comment id='18' author='brunorigal' date='2020-10-19T13:24:06Z'>
		I am still getting this error also. Tensorflow 2.1.0
		</comment>
		<comment id='19' author='brunorigal' date='2020-11-11T13:29:01Z'>
		Same error here: Tensorflow 2.2.0
		</comment>
	</comments>
</bug>