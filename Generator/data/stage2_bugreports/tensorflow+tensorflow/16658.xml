<bug id='16658' author='nlfiasel' open_date='2018-02-01T13:04:29Z' closed_time='2018-02-02T12:56:35Z'>
	<summary>Runtime Error with Qt GUI Application</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
TensorFlow installed from source:
TensorFlow version use master:
Python version 2.7:
Bazel version 0.9.0:
GCC/Compiler version 5.4.0:
Without CUDA/cuDNN:
Without GPU:

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

When I used QtCreator to build GUI Application, if include "tensorflow/core/lib/core/refcount.h", it will throw The program has unexpectedly finished.
.pro like
&lt;denchmark-h:h4&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;SOURCES += \
    main.cpp \
    mainwindow.cpp
HEADERS += \
     mainwindow.h
FORMS += \
     mainwindow.ui

#tensorflow
INCLUDEPATH += /home/face/Desktop/tensorflow/bazel-genfiles`
INCLUDEPATH += /home/face/Desktop/tensorflow`
INCLUDEPATH += /home/face/Desktop/tensorflow/tensorflow/contrib/makefile/gen/protobuf/include`
INCLUDEPATH += /home/face/Desktop/tensorflow/tensorflow/contrib/makefile/downloads/nsync/public`
INCLUDEPATH += /home/face/Desktop/eigen-eigen-5a0156e40feb`
LIBS += -L/home/face/Desktop/tensorflow/bazel-bin/tensorflow -ltensorflow_cc -ltensorflow_framework
&lt;/denchmark-code&gt;

main.cpp
&lt;denchmark-h:h4&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#include "mainwindow.h"
#include &lt;QApplication&gt;
#include &lt;tensorflow/core/platform/env.h&gt;
#include &lt;tensorflow/core/public/session.h&gt;

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();
    return a.exec();
}
&lt;/denchmark-code&gt;

then if "tensorflow/core/lib/core/refcount.h" line 79
&lt;denchmark-h:h4&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;inline RefCounted::~RefCounted() {
    DCHECK_EQ(ref_.load(), 0); 
}
&lt;/denchmark-code&gt;

to
&lt;denchmark-h:h4&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;inline RefCounted::~RefCounted() {
    //DCHECK_EQ(ref_.load(), 0); 
}
&lt;/denchmark-code&gt;

it will work.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

debug log like:
&lt;denchmark-h:h4&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;1  google::protobuf::internal::Mutex::Lock()                                    0x7fffde0c3516 
2  google::protobuf::internal::OnShutdown(void ( *)())                          0x7fffde0c3833 
3  call_init                                                     dl-init.c  72  0x7ffff7de76ba 
4  call_init                                                     dl-init.c  30  0x7ffff7de77cb 
5  _dl_init                                                      dl-init.c  120 0x7ffff7de77cb 
6  dl_open_worker                                                dl-open.c  575 0x7ffff7dec8e2 
7  _dl_catch_error                                               dl-error.c 187 0x7ffff7de7564 
8  _dl_open                                                      dl-open.c  660 0x7ffff7debda9 
9  dlopen_doit                                                   dlopen.c   66  0x7ffff18f0f09 
10 _dl_catch_error                                               dl-error.c 187 0x7ffff7de7564 
11 _dlerror_run                                                  dlerror.c  163 0x7ffff18f1571 
12 __dlopen                                                      dlopen.c   87  0x7ffff18f0fa1 
13 ??                                                                           0x7ffff33100e5 
14 ??                                                                           0x7ffff3309975 
15 QFactoryLoader::instance(int) const                                          0x7ffff32ff07e 
16 QPlatformThemeFactory::create(QString const&amp;, QString const&amp;)                0x7ffff0b30231 
17 QGuiApplicationPrivate::createPlatformIntegration()                          0x7ffff0b3aaf8 
18 QGuiApplicationPrivate::createEventDispatcher()                              0x7ffff0b3b4bd 
19 QCoreApplicationPrivate::init()                                              0x7ffff331ab3b 
20 QGuiApplicationPrivate::init()                                               0x7ffff0b3cf7b 
21 QApplicationPrivate::init()                                                  0x7ffff392d3b9 
22 main                                                          main.cpp   103 0x402e3e  
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nlfiasel' date='2018-02-02T03:49:17Z'>
		I'm thinking that it's the logging system that gets uninitialized before protobuf. Can you see if that's the case?
It looks like you're building the debug version, which is good. Could you try with asan?
		</comment>
		<comment id='2' author='nlfiasel' date='2018-02-02T05:59:34Z'>
		&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 asan like:
&lt;denchmark-h:h4&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;ASAN:SIGSEGV
=================================================================
==13627== ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f2ea692e516 bp 0x000000000001 sp 0x7ffd3129fab0 T0)
#0 0x7f2ea692e515 in google::protobuf::internal::Mutex::Lock() (/usr/lib/x86_64-linux-gnu/libprotobuf-lite.so.9+0xe515)
#1 0x7f2ea692e832 in google::protobuf::internal::OnShutdown(void (*)()) (/usr/lib/x86_64-linux-gnu/libprotobuf-lite.so.9+0xe832)
#2 0x7f2ec17896b9  (/lib64/ld-linux-x86-64.so.2+0x106b9)
#3 0x7f2ec17897ca  (/lib64/ld-linux-x86-64.so.2+0x107ca)
#4 0x7f2ec178e8e1  (/lib64/ld-linux-x86-64.so.2+0x158e1)
#5 0x7f2ec1789563  (/lib64/ld-linux-x86-64.so.2+0x10563)
#6 0x7f2ec178dda8  (/lib64/ld-linux-x86-64.so.2+0x14da8)
#7 0x7f2eb935af08  (/lib/x86_64-linux-gnu/libdl.so.2+0xf08)
#8 0x7f2ec1789563  (/lib64/ld-linux-x86-64.so.2+0x10563)
#9 0x7f2eb935b570  (/lib/x86_64-linux-gnu/libdl.so.2+0x1570)
#10 0x7f2eb935afa0 in dlopen (/lib/x86_64-linux-gnu/libdl.so.2+0xfa0)
#11 0x7f2ec084320f in dlopen (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x3720f)
#12 0x7f2eba660ea4  (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Core.so.5+0x27aea4)
#13 0x7f2eba65a714  (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Core.so.5+0x274714)
#14 0x7f2eba650cad in QFactoryLoader::instance(int) const (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Core.so.5+0x26acad)
#15 0x7f2eb8872028 in QPlatformThemeFactory::create(QString const&amp;, QString const&amp;) (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Gui.so.5+0x120028)
#16 0x7f2eb887cd47 in QGuiApplicationPrivate::createPlatformIntegration() (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Gui.so.5+0x12ad47)
#17 0x7f2eb887d70c in QGuiApplicationPrivate::createEventDispatcher() (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Gui.so.5+0x12b70c)
#18 0x7f2eba66bba0 in QCoreApplicationPrivate::init() (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Core.so.5+0x285ba0)
#19 0x7f2eb887f1aa in QGuiApplicationPrivate::init() (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Gui.so.5+0x12d1aa)
#20 0x7f2ebac92368 in QApplicationPrivate::init() (/home/face/Qt5.10.0/5.10.0/gcc_64/lib/libQt5Widgets.so.5+0x15e368)
#21 0x403ec8 in main ../Tensorflow_3_0/main.cpp:8
#22 0x7f2eb979b82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
#23 0x403d58 in _start (/home/face/build-Tensorflow_3_0-Desktop_Qt_5_10_0_GCC_64bit-Debug/Tensorflow_3_0+0x403d58)
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV ??:0 google::protobuf::internal::Mutex::Lock()
==13627==ABORTING
&lt;/denchmark-code&gt;

And there is a problem from protobuf issues(I think they are the same):
&lt;denchmark-link:https://github.com/protocolbuffers/protobuf/issues/4169&gt;protocolbuffers/protobuf#4169&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='nlfiasel' date='2018-02-02T12:56:35Z'>
		It's because QtApplication use protobuf-lite.so.9 and tensorflow use protobuf.so.14.
If you have the same problem.You can solve this problem by delete like:

/home/USER/Qt5.10.0/5.10.0/gcc_64/plugins/platformthemes/libqgtk3.so

TO: &lt;denchmark-link:url&gt;https://stackoverflow.com/questions/45703619/protobuf-version-conflicts-with-qt&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>