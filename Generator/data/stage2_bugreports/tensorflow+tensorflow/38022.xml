<bug id='38022' author='SwagJ' open_date='2020-03-29T18:45:06Z' closed_time='2020-04-03T16:10:28Z'>
	<summary>Failed to get convolution algorithm. (Checked existing solution, but not working)</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): No, using this example.
OS Platform and Distribution: Ubuntu 19.10
TensorFlow installed from (source or
binary): pip
TensorFlow version (use command below): 2.1.0
Python version: 3.7.4
GCC/Compiler version (if compiling from
source): 7.3.0
CUDA/cuDNN version: 10.1.243 and 7.6.4
GPU model and memory: RTX2060S 8GB

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
Trainning failed
Describe the expected behavior
Trainning is processing.

&lt;denchmark-link:https://www.tensorflow.org/tutorials/images/cnn&gt;https://www.tensorflow.org/tutorials/images/cnn&lt;/denchmark-link&gt;

jupyte notebook download locally
&lt;denchmark-h:h2&gt;Other info / logs
WARNING:tensorflow:From :6: Model.fit_generator (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.
Instructions for updating:
Please use Model.fit, which supports generators.
WARNING:tensorflow:sample_weight modes were coerced from
...
to
['...']
WARNING:tensorflow:sample_weight modes were coerced from
...
to
['...']
Train for 500 steps, validate for 250 steps
Epoch 1/15
1/500 [..............................] - ETA: 9:01&lt;/denchmark-h&gt;

UnknownError                              Traceback (most recent call last)
 in 
4     epochs=epochs,
5     validation_data=val_data_gen,
----&gt; 6     validation_steps=total_val // batch_size
7 )
~/.local/lib/python3.7/site-packages/tensorflow_core/python/util/deprecation.py in new_func(*args, **kwargs)
322               'in a future version' if date is None else ('after %s' % date),
323               instructions)
--&gt; 324       return func(*args, **kwargs)
325     return tf_decorator.make_decorator(
326         func, new_func, 'deprecated',
~/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py in fit_generator(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)
1304         use_multiprocessing=use_multiprocessing,
1305         shuffle=shuffle,
-&gt; 1306         initial_epoch=initial_epoch)
1307
1308   @deprecation.deprecated(
~/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)
817         max_queue_size=max_queue_size,
818         workers=workers,
--&gt; 819         use_multiprocessing=use_multiprocessing)
820
821   def evaluate(self,
~/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py in fit(self, model, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)
340                 mode=ModeKeys.TRAIN,
341                 training_context=training_context,
--&gt; 342                 total_epochs=epochs)
343             cbks.make_logs(model, epoch_logs, training_result, ModeKeys.TRAIN)
344
~/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py in run_one_epoch(model, iterator, execution_function, dataset_size, batch_size, strategy, steps_per_epoch, num_samples, mode, training_context, total_epochs)
126         step=step, mode=mode, size=current_batch_size) as batch_logs:
127       try:
--&gt; 128         batch_outs = execution_function(iterator)
129       except (StopIteration, errors.OutOfRangeError):
130         # TODO(kaftan): File bug about tf function and errors.OutOfRangeError?
~/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2_utils.py in execution_function(input_fn)
96     # numpy translates Tensors to values in Eager mode.
97     return nest.map_structure(_non_none_constant_value,
---&gt; 98                               distributed_function(input_fn))
99
100   return execution_function
~/.local/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py in call(self, *args, **kwds)
566         xla_context.Exit()
567     else:
--&gt; 568       result = self._call(*args, **kwds)
569
570     if tracing_count == self._get_tracing_count():
~/.local/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py in _call(self, *args, **kwds)
630         # Lifting succeeded, so variables are initialized and we can run the
631         # stateless function.
--&gt; 632         return self._stateless_fn(*args, **kwds)
633     else:
634       canon_args, canon_kwds = \
~/.local/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in (self, *args, **kwargs)
2361     with self._lock:
2362       graph_function, args, kwargs = self._maybe_define_function(args, kwargs)
-&gt; 2363     return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
2364
2365   &lt;denchmark-link:https://github.com/Property&gt;@Property&lt;/denchmark-link&gt;

~/.local/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in _filtered_call(self, args, kwargs)
1609          if isinstance(t, (ops.Tensor,
1610                            resource_variable_ops.BaseResourceVariable))),
-&gt; 1611         self.captured_inputs)
1612
1613   def _call_flat(self, args, captured_inputs, cancellation_manager=None):
~/.local/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in _call_flat(self, args, captured_inputs, cancellation_manager)
1690       # No tape is watching; skip to running the function.
1691       return self._build_call_outputs(self._inference_function.call(
-&gt; 1692           ctx, args, cancellation_manager=cancellation_manager))
1693     forward_backward = self._select_forward_and_backward_functions(
1694         args,
~/.local/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in call(self, ctx, args, cancellation_manager)
543               inputs=args,
544               attrs=("executor_type", executor_type, "config_proto", config),
--&gt; 545               ctx=ctx)
546         else:
547           outputs = execute.execute_with_cancellation(
~/.local/lib/python3.7/site-packages/tensorflow_core/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
65     else:
66       message = e.message
---&gt; 67     six.raise_from(core._status_to_exception(e.code, message), None)
68   except TypeError as e:
69     keras_symbolic_tensors = [
~/.conda/envs/fcgf/lib/python3.7/site-packages/six.py in raise_from(value, from_value)
UnknownError:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
[[node sequential/conv2d/Conv2D (defined at :6) ]] [Op:__inference_distributed_function_1027]
Function call stack:
distributed_function
	</description>
	<comments>
		<comment id='1' author='SwagJ' date='2020-03-30T05:50:16Z'>
		&lt;denchmark-link:https://github.com/SwagJ&gt;@SwagJ&lt;/denchmark-link&gt;

I have tried in colab with TF 2.1.0 and i am not seeing any issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/aaef581f4b793f373160dfe3f8446930/untitled751.ipynb&gt;here&lt;/denchmark-link&gt;
 .Thanks!
		</comment>
		<comment id='2' author='SwagJ' date='2020-03-30T10:25:04Z'>
		Colab Works fine. It's not working locally with my PC setup. I setup locally with the correct version match of cuda and cudnn. Why it is not working?
		</comment>
		<comment id='3' author='SwagJ' date='2020-03-31T11:25:24Z'>
		&lt;denchmark-link:https://github.com/SwagJ&gt;@SwagJ&lt;/denchmark-link&gt;

You may try limiting your gpu memory usage with set_memory_growth option.
See &lt;denchmark-link:https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth&gt;https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth&lt;/denchmark-link&gt;

Put the following snippet on top of your code and execute again
&lt;denchmark-code&gt; import tensorflow as tf
 gpus= tf.config.experimental.list_physical_devices('GPU')
 tf.config.experimental.set_memory_growth(gpus[0], True)
&lt;/denchmark-code&gt;

Thanks!
		</comment>
		<comment id='4' author='SwagJ' date='2020-04-03T16:10:20Z'>
		Thank you very much. Problem Solved.
		</comment>
		<comment id='5' author='SwagJ' date='2020-04-03T16:10:29Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38022&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38022&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>