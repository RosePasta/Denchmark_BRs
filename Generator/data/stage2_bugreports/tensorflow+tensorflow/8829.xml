<bug id='8829' author='Ark-kun' open_date='2017-03-30T03:24:46Z' closed_time='2017-06-16T19:11:14Z'>
	<summary>Tensorboard smoothing is not smooth at all.</summary>
	<description>
I have Tensorflow v1.0.1 installed on Linux.
"Smoothed" Tensorboard looks not smooth at all compared to the original graph. For some reason it manages to find some interesting loss function behavior features that simply do not exist in the original loss data.
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/1829149/24485892/f269a388-14bb-11e7-8b4c-b21d54e4c4be.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='Ark-kun' date='2017-03-30T13:19:52Z'>
		I've found tensorboard to sometimes get a bit upset with smoothing and that I need to change the smoothing level. Can you post some screenshots of the data with 0, 0.5 and 1 smoothing?
		</comment>
		<comment id='2' author='Ark-kun' date='2017-03-30T15:13:00Z'>
		Agreed. I don't know how the smoothing is being done under the hood, but it definitely doesn't "look right".
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/4053170/24511336/5cf5ef34-1531-11e7-8be4-938527377aa7.png&gt;&lt;/denchmark-link&gt;

(Smoothing = 1)
		</comment>
		<comment id='3' author='Ark-kun' date='2017-03-31T09:32:39Z'>
		I believe that it uses an IIR filter as seen in the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tensorboard/components/vz_line_chart/vz-line-chart.ts#L455&gt;Tensorboard Code here&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Ark-kun' date='2017-03-31T15:12:59Z'>
		Hmm. Does that make sense for non-periodic data? This may be too simplified but I feel like just a moving average would be better...
EDIT
Looking at the code more it seems like it is just a recursive average. Then I wonder why we're seeing these artifacts. I don't see how a recursive average could create the plot I showed (or the OP plot for that matter). I need to investigate further.
		</comment>
		<comment id='5' author='Ark-kun' date='2017-03-31T17:46:22Z'>
		&lt;denchmark-link:https://github.com/dandelionmane&gt;@dandelionmane&lt;/denchmark-link&gt;
, could you provide some insight, please?
		</comment>
		<comment id='6' author='Ark-kun' date='2017-03-31T22:12:42Z'>
		Note that the referenced sources are in master branch, where the behaviour has much changed. In TensorFlow 1.0.1, a window average is used &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.0/tensorflow/tensorboard/components/vz_line_chart/vz-line-chart.ts#L432&gt;https://github.com/tensorflow/tensorflow/blob/r1.0/tensorflow/tensorboard/components/vz_line_chart/vz-line-chart.ts#L432&lt;/denchmark-link&gt;
 , causing the artifacts on the images.
However, an exponential moving average has been merged 4 days ago in pull request &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/8363&gt;#8363&lt;/denchmark-link&gt;
, resulting in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tensorboard/components/vz_line_chart/vz-line-chart.ts#L455&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tensorboard/components/vz_line_chart/vz-line-chart.ts#L455&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='Ark-kun' date='2017-04-01T09:59:15Z'>
		It would also be nice if TensorBoard could somehow ignore outliers not just in the chart scaling but also in the smoothing.  And it would be nice if it could nonetheless let you see what those outliers are.  Since there seems to be no way to zoom in sufficiently to go step by step in TensorBoard, there is no way to find out exactly when outliers occurred and what their values are.
However, I know the long term plan for TensorBoard involves making it more pluggable and user-extensible, so it might be that the core team should just be spending its effort on making this happen so that users can supply whatever smoothing function they like or even replacements for the whole scalar display widget.
		</comment>
		<comment id='8' author='Ark-kun' date='2017-06-16T19:11:14Z'>
		Hi all,
I posit that no smoothing is perfect, and there are always going to be some edge cases where it doesn't behave quite like you imagine it should.
I'm closing this issue since we're migrating to a new repo, and because it looks like the new exponential smoothing solves a lot of complaints here. If you still want smoothing changes, please open a new issue at &lt;denchmark-link:https://github.com/tensorflow/tensorboard&gt;https://github.com/tensorflow/tensorboard&lt;/denchmark-link&gt;
, with the following two things:

a new algorithm that you are proposing
examples of how the new algorithm behaves on some data sets, compared to how the current algorithm behaves

		</comment>
	</comments>
</bug>