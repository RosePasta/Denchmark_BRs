<bug id='32748' author='dovahcrow' open_date='2019-09-23T22:40:13Z' closed_time='2019-10-28T22:49:35Z'>
	<summary>AttributeError when passing tf.Variable into tf.function</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): v2.0.0-rc2
Python version: 3.7.2
Bazel version (if compiling from source): 0.25.2
GCC/Compiler version (if compiling from source): 5.4.0 20160609
CUDA/cuDNN version: None
GPU model and memory: None

Describe the current behavior
import tensorflow as tf
@tf.function
def foo(v):
    pass

foo(tf.Variable(1))
foo(tf.Variable(1))
Using this code piece, tensorflow throws an error: AttributeError: 'NoneType' object has no attribute 'shape'
Describe the expected behavior
No error occured.
Code to reproduce the issue
Provided above
Other info / logs
None
	</description>
	<comments>
		<comment id='1' author='dovahcrow' date='2019-09-24T08:50:18Z'>
		&lt;denchmark-link:https://github.com/dovahcrow&gt;@dovahcrow&lt;/denchmark-link&gt;
,
Workaround can be change any one of  to  or both to .
&lt;denchmark-code&gt;import tensorflow as tf
@tf.function
def foo(v):
    pass

foo(tf.constant(1))
foo(tf.constant(1))
&lt;/denchmark-code&gt;

Let us know this helps. Thanks!
		</comment>
		<comment id='2' author='dovahcrow' date='2019-09-24T14:00:08Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 Thanks! I currently solve this by using  to convert the  to a . But still, I wonder, is this a bug or feature?
		</comment>
		<comment id='3' author='dovahcrow' date='2019-09-25T05:38:41Z'>
		&lt;denchmark-link:https://github.com/dovahcrow&gt;@dovahcrow&lt;/denchmark-link&gt;
,
I could reproduce the issue with TF 2.0.0.rc2. Please see the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/4960b9907cbf83daae6a643136653125/untitled164.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='dovahcrow' date='2019-09-27T17:54:27Z'>
		&lt;denchmark-link:https://github.com/dovahcrow&gt;@dovahcrow&lt;/denchmark-link&gt;
 @tf.function on any defined function allows it to retrace the function when necessary to generate the correct graphs.
I think your intention is not to control and trace the graph. In that case, you could use the following code
&lt;denchmark-code&gt;import tensorflow as tf
@tf.function
def foo(v):
    pass
a = tf.Variable(1)
b = tf.Variable(1)
foo(a)
foo(b)
&lt;/denchmark-code&gt;

Please check the resource &lt;denchmark-link:https://www.tensorflow.org/beta/tutorials/eager/tf_function#when_to_retrace&gt;here&lt;/denchmark-link&gt;
 for more details on the retrace.
Please close the issue if this was resolved by the modification. Thanks!
		</comment>
		<comment id='5' author='dovahcrow' date='2019-09-27T22:04:48Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 Hi, I don't think this is because of the misuse of the API.
First, by changing the code piece to
import tensorflow as tf
@tf.function
def foo(v):
    pass
a = tf.Variable(1)
foo(a)
a = tf.Variable(1)
foo(a)
Tensorflow will raise the error I reported. In this case Tensorflow is disallowing my redefining the variable which is totally a legal operation in Python. This is very unexpected and super hard to debug when happened in a large codebase (in my case I spent 5 hours to reduce thousands lines of code to such a simple case.)
Second, as per the document said:

For all other Python types, the keys are based on the object id() so that methods are traced independently for each instance of a class. In the future, TensorFlow may add more sophisticated caching for Python objects that can be safely converted to tensors.

import tensorflow as tf
@tf.function
def foo(v):
    pass
a = tf.Variable(1)
print(id(a))
foo(a)
a = tf.Variable(1)
print(id(a))
foo(a)
I get this as the output
&lt;denchmark-code&gt;140522833653432
140522833649960
&lt;/denchmark-code&gt;

, as well as the error
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in _hash_fix(self, elem)
    108     try:
--&gt; 109       hash(elem)
    110     except TypeError:

TypeError: weak object has gone away
This indicates @tf.function somehow didn't retrace the graph even if the ids of the objects are different.
		</comment>
		<comment id='6' author='dovahcrow' date='2019-10-07T15:09:18Z'>
		Thank you guys for the notes. I spend two days to realize that when using @tf.function causes the error and when removing @tf.function everything works fine. Then I came up with search phrase of "AttributeError: 'NoneType' object has no attribute 'shape' + when using tf.function" and I found this post. I fixed the issue by using tf.constant when feeding training set to the function.
		</comment>
		<comment id='7' author='dovahcrow' date='2019-10-28T22:49:35Z'>
		Sorry for the late update. This was fixed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/4a5b3dbee4e2e5b60f58fe61530b73664e36d87e&gt;4a5b3db&lt;/denchmark-link&gt;
 and should land in 2.1.
		</comment>
		<comment id='8' author='dovahcrow' date='2019-10-28T22:49:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32748&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32748&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>