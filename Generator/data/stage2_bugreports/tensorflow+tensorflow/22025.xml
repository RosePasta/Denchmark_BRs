<bug id='22025' author='mpaillassa' open_date='2018-09-03T10:31:16Z' closed_time='2019-03-12T23:00:23Z'>
	<summary>[Bug] max_pool_with_argmax has different behaviour on CPU and GPU</summary>
	<description>
The function max_pool_with_argmax has different behaviour concerning the returned indices depending on the GPU or CPU backend.

On GPU, returned indices do not take into account batch dimension.
It returns indices such that [b, y, x, c] -&gt; (y * width + x) * channels + c 
On CPU, returned indices take into account batch dimension.
It returns indices such that [b, y, x, c] -&gt; ((b * height + y) * width + x) * channels + c 

Isn't it a problem if one wants to run models with the same graph including this op both on CPU and GPU ?
Here is an example to show the problem:
import numpy as np
import tensorflow as tf 

i = tf.placeholder(tf.float32, [None, 4, 4, 1])
p, ind = tf.nn.max_pool_with_argmax(i, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')

with tf.Session() as sess:
    a = np.random.randint(10, size=(2, 4, 4, 1))
    print a[:,:,:,0]
    print sess.run(p, {i: a})[:,:,:,0]
    print sess.run(ind, {i: a})[:,:,:,0]
Which results in something like this on CPU:
&lt;denchmark-code&gt;[[[0 3 0 0]
  [4 0 4 8]
  [7 8 4 5]
  [2 3 4 5]]

 [[2 5 2 7]
  [4 3 4 6]
  [8 3 2 0]
  [7 5 9 3]]]
[[[4. 8.]
  [8. 5.]]

 [[5. 7.]
  [8. 9.]]]
[[[ 4  7]
  [ 9 11]]

 [[17 19]
  [24 30]]]
&lt;/denchmark-code&gt;

And something like this on GPU:
&lt;denchmark-code&gt;[[[8 3 5 5]
  [0 0 0 3]
  [6 9 4 1]
  [2 0 8 8]]

 [[4 6 6 5]
  [5 7 9 3]
  [7 6 1 3]
  [1 6 1 0]]]
[[[8. 5.]
  [9. 8.]]

 [[7. 9.]
  [7. 3.]]]
[[[ 0  2]
  [ 9 14]]
 [[ 5  6]
  [ 8 11]]]
&lt;/denchmark-code&gt;

This was obtained with 1.9 CPU/GPU tensorflow versions.
I think it would be more convenient to have the same behaviour on CPU and GPU, isn't it ?
	</description>
	<comments>
		<comment id='1' author='mpaillassa' date='2018-09-03T18:36:56Z'>
		Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.
Have I written custom code
OS Platform and Distribution
TensorFlow installed from
Bazel version
CUDA/cuDNN version
GPU model and memory
Exact command to reproduce
Mobile device
		</comment>
		<comment id='2' author='mpaillassa' date='2018-09-04T07:42:58Z'>
		Have I written custom code: yes
OS Platform: Ubuntu 16.04 LTS for CPU install and centOS 7 for GPU install
But I don't think these informations are necessary ?
The problem is really that the behaviour of the function is different for tensorflow 1.9 CPU and tensorflow 1.9 GPU. It should be reproducible no matter the CPU/GPU installations I guess.
		</comment>
		<comment id='3' author='mpaillassa' date='2018-09-11T23:37:07Z'>
		&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 Could you take a look at this?  Is it expected behavior?
		</comment>
		<comment id='4' author='mpaillassa' date='2018-09-11T23:48:41Z'>
		Not sure why I am cc'ed here, if I was showing up from the change history, I guess that was because I was on sync rotation for PRs. Probably should find someone who is the real owner of maxpooling_op.cc
		</comment>
		<comment id='5' author='mpaillassa' date='2018-09-12T18:03:42Z'>
		OK, looks like this code is kind of old, with no real maintainer.  &lt;denchmark-link:https://github.com/rmlarsen&gt;@rmlarsen&lt;/denchmark-link&gt;
 do you know what's expected here?  I don't see any notice in the documentation that CPU/GPU behavior should differ.
		</comment>
		<comment id='6' author='mpaillassa' date='2018-09-25T13:18:11Z'>
		Any news about this ?
I do not know if this can help but in fact the documentation of the function is correct for the CPU behaviour. Plus, the function has been available first on GPU and on a later TF version for CPU.
I guess that there was a wrong doc when the function was available only for GPU, and that when it has been later implemented for CPU, it has been inspired from the doc, leading to two different behaviours.
		</comment>
		<comment id='7' author='mpaillassa' date='2018-10-10T12:40:43Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/poxvoculi&gt;@poxvoculi&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='8' author='mpaillassa' date='2018-10-12T23:54:19Z'>
		I'm looking into the issue and I'll try to fix it later. Thank &lt;denchmark-link:https://github.com/mpaillassa&gt;@mpaillassa&lt;/denchmark-link&gt;
 for your detailed feedback :-)
		</comment>
		<comment id='9' author='mpaillassa' date='2018-10-19T11:49:45Z'>
		&lt;denchmark-link:https://github.com/mpaillassa&gt;@mpaillassa&lt;/denchmark-link&gt;
 Hi, would you mind taking a test on nightly version? 
		</comment>
		<comment id='10' author='mpaillassa' date='2018-10-21T13:33:59Z'>
		&lt;denchmark-link:https://github.com/facaiy&gt;@facaiy&lt;/denchmark-link&gt;
 Hi, I tried the code of my first post on CPU with  and on GPU with . Both on Ubuntu 16.04 and with CUDA 9.0 and cuDNN 7.3.1 for GPU.
But I still get the same behaviours: CPU takes into account the batch dimension in the returned indices while GPU does not.
Did I do something wrong ?
		</comment>
		<comment id='11' author='mpaillassa' date='2018-11-08T04:02:38Z'>
		Thank &lt;denchmark-link:https://github.com/mpaillassa&gt;@mpaillassa&lt;/denchmark-link&gt;
 for your report, I can reproduce the bug in my experimental PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/23370&gt;#23370&lt;/denchmark-link&gt;
.
Unfortunately, there is something wrong with my working station environment, and I cannot find an alternative recently. So I'd like to mark the issue as "Contributions Welcome", and feel free to take over it and go head if anyone is interested :-) .  cc &lt;denchmark-link:https://github.com/rmlarsen&gt;@rmlarsen&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='mpaillassa' date='2018-11-27T09:54:35Z'>
		I create the PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/23993&gt;#23993&lt;/denchmark-link&gt;
 to fix the issue, please take a look, thanks :-)
		</comment>
		<comment id='13' author='mpaillassa' date='2019-02-27T16:05:00Z'>
		Hello, I am new to the tensorflow community. Is this a good issue to get familiar with the tensorflow open-source?
		</comment>
		<comment id='14' author='mpaillassa' date='2019-02-27T22:46:07Z'>
		Welcome, &lt;denchmark-link:https://github.com/bono1567&gt;@bono1567&lt;/denchmark-link&gt;
! As you see, PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/25241&gt;#25241&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/23993&gt;#23993&lt;/denchmark-link&gt;
 have been in the process to fix the issue. I'll update here when they are merged.
		</comment>
	</comments>
</bug>