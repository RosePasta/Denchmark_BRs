<bug id='34454' author='Cospel' open_date='2019-11-20T14:26:10Z' closed_time='2020-01-22T22:23:29Z'>
	<summary>Layer model is not connected, no input to return.</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macos mohave
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip install tensorflow==2.0.0
TensorFlow version (use command below): 2.0.0
Python version: Python 3.7.4
Bazel version (if compiling from source): -
GCC/Compiler version (if compiling from source): -
CUDA/cuDNN version: -
GPU model and memory: -

Describe the current behavior
Raises exception.
When loading saved model through the tf.keras.Model we get (tf=2.0.0):
&lt;denchmark-code&gt;AttributeError: Layer model is not connected, no input to return.
&lt;/denchmark-code&gt;

Describe the expected behavior
It should pass. It pass when saving and loading model from .h5 format.
Code to reproduce the issue
import tensorflow as tf

shape = (224, 224, 3)

# functional model
base_model2 = tf.keras.applications.MobileNetV2(include_top=False, weights="imagenet", input_shape=shape)
inputs = tf.keras.Input(shape=shape, name="input")
x = base_model2(inputs)
x = tf.keras.layers.GlobalAveragePooling2D()(x)
x = tf.keras.layers.Dense(256, activation="relu", name="embeddings")(x)
outputs = tf.keras.layers.Dense(2, activation="softmax", name="probs")(x)
model2 = tf.keras.Model(inputs=inputs, outputs=outputs)


tf.keras.models.save_model(model2, "model")
model_l2 = tf.keras.models.load_model("model")

# this raises exception
model_loaded = tf.keras.Model(
    inputs=model_l2.input, outputs=[model_l2.get_layer(layer_name).output for layer_name in ["probs", "embeddings"]]
)
Other info / logs
&lt;denchmark-code&gt;2019-11-20 15:24:41.862516: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-11-20 15:24:41.873895: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fa773aa38b0 executing computations on platform Host. Devices:
2019-11-20 15:24:41.873913: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
2019-11-20 15:24:55.102446: W tensorflow/python/util/util.cc:299] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
WARNING:tensorflow:From /Users/userx/env/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/resource_variable_ops.py:1781: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
Traceback (most recent call last):
  File "save2.py", line 20, in &lt;module&gt;
    inputs=model_l2.input, outputs=[model_l2.get_layer(layer_name).output for layer_name in ["probs", "embeddings"]]
  File "/Users/userx/env/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 1557, in input
    ' is not connected, no input to return.')
AttributeError: Layer model is not connected, no input to return.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Cospel' date='2019-11-22T08:34:00Z'>
		Issue replicating for given code in TF-2.0, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/edd8e140df86794bc17324b0b7cb2333/34454.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='Cospel' date='2019-12-10T07:31:03Z'>
		I am not sure if this is working in 2.1rc, because right now there is another bug &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33870&gt;#33870&lt;/denchmark-link&gt;
 which should be solved before.
		</comment>
		<comment id='3' author='Cospel' date='2020-01-15T04:59:21Z'>
		&lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 Any update on this?
		</comment>
		<comment id='4' author='Cospel' date='2020-01-18T00:34:51Z'>
		
@k-w-w Any update on this?

save your model in keras .h5 format instead of tensorflow checkpoint format seems to work.
		</comment>
		<comment id='5' author='Cospel' date='2020-01-18T00:56:07Z'>
		Tested again, this issue can be solved by using .h5 format to save the model. It looks like checkpoint format isn't integrated with Keras well and some information is missing in the checkpoint format.
		</comment>
		<comment id='6' author='Cospel' date='2020-01-22T08:37:34Z'>
		It's working in tf-nightly-2.2...!  Thank you &lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 .
You can close this!
		</comment>
		<comment id='7' author='Cospel' date='2020-01-22T22:22:18Z'>
		yes this issue is fixed with latest tf-nightly. please see the updated &lt;denchmark-link:https://colab.sandbox.google.com/gist/goldiegadde/9c8c6b3e324ca6fbe16e8e3c446fb9c0/34454.ipynb&gt;gist&lt;/denchmark-link&gt;

Updating your code to below should work.
model_loaded = tf.keras.Model(
inputs=model_l2.input, outputs=[model_l2.get_layer(layer_name).output for layer_name in ["probs", "embeddings"]]
)
		</comment>
		<comment id='8' author='Cospel' date='2020-01-22T22:23:31Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34454&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34454&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='Cospel' date='2020-02-07T15:10:47Z'>
		I installed the latest tf-nightly and I still have this issue. Here is my code that returns the error
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.models import Sequential
import tensorflow.keras as keras

model3 = Sequential()
model3.add(keras.layers.Dense(100))
model3.add(keras.layers.Dense(1))
model3.layers[1].input
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='Cospel' date='2020-02-20T22:00:28Z'>
		&lt;denchmark-link:https://github.com/guillefix&gt;@guillefix&lt;/denchmark-link&gt;
  Since you are using Sequential API you may want to specify  argument in your first layer.
model3.add(keras.layers.Dense(100,input_shape=(500,)))
If want to avoid setting input_shape then other option will be to build the first by model.compile and model.fit
		</comment>
		<comment id='11' author='Cospel' date='2020-12-24T02:05:18Z'>
		Not sure if it is precisely the same issue, but I got around my specific problem by overriding the get_config method in my custom layer, taking care to serialize the initializer arguments in particular
		</comment>
	</comments>
</bug>