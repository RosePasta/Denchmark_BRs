<bug id='33777' author='jrm346' open_date='2019-10-28T10:16:42Z' closed_time='2020-05-13T12:58:39Z'>
	<summary>Tensorflow Probability distributions HiddenMarkovModel not working with tf.function</summary>
	<description>
using tensorflow 2.0 on cpu
the following function works with no errors when executing in eager mode, but if it is decorated with @tf.function i get the error at the bottom.
def generate_data(size, p_0, p_0_0, p_1_1, mu0, s0, mu1, s1):
    states = tfd.Categorical(probs=[p_0, 1-p_0])

    transition = tfd.Categorical(probs=[[p_0_0, 1 - p_0_0],
                                        [1 - p_1_1, p_1_1]])

    emission = tfd.Normal(loc=[mu0, mu1], scale=[s0, s1])

    model = tfd.HiddenMarkovModel(states, transition, emission, size)

    return model.sample()

data = generate_data(50, 0.01, 0.3, 0.7, -10, 2, 10, 3)

print(data)
and the error
&lt;denchmark-code&gt;traceback (most recent call last):
  File "/home/abaka/Abaka.FIN.Apis/test.py", line 21, in &lt;module&gt;
    data = generate_data(50, 0.01, 0.3, 0.7, -10, 2, 10, 3)
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 457, in __call__
    result = self._call(*args, **kwds)
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 503, in _call
    self._initialize(args, kwds, add_initializers_to=initializer_map)
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 408, in _initialize
    *args, **kwds))
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 1848, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2150, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2041, in _create_graph_function
    capture_by_value=self._capture_by_value),
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/framework/func_graph.py", line 915, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 358, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "/home/abaka/venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/framework/func_graph.py", line 905, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in converted code:
    relative to /home/abaka:

    Abaka.FIN.Apis/test.py:19 generate_data  *
        return model.sample()
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_probability/python/distributions/distribution.py:848 sample
        return self._call_sample_n(sample_shape, seed, name, **kwargs)
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_probability/python/distributions/distribution.py:826 _call_sample_n
        samples = self._sample_n(n, seed, **kwargs)
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_probability/python/distributions/hidden_markov_model.py:406 _sample_n
        lambda: init_state[tf.newaxis, ...])
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_probability/python/internal/prefer_static.py:176 cond
        return true_fn()
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_probability/python/distributions/hidden_markov_model.py:397 _scan_multiple_steps
        initializer=init_state)
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/ops/functional_ops.py:508 scan
        maximum_iterations=n)
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/ops/control_flow_ops.py:2675 while_loop
        back_prop=back_prop)
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/ops/while_v2.py:234 while_loop
        len_orig_loop_vars], expand_composites=True))
    venv/Abaka.FIN.Apis/lib/python3.6/site-packages/tensorflow_core/python/ops/while_v2.py:1068 _check_shapes_compat
        "specify a less-specific shape." % (input_t.name, shape, t.shape))

    ValueError: Input tensor 'HiddenMarkovModel_1/sample/Reshape:0' enters the loop with shape (1, 1), but has shape (1, None) after one iteration. To allow the shape to vary across iterations, use the `shape_invariants` argument of tf.while_loop to specify a less-specific shape.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jrm346' date='2019-10-29T10:12:33Z'>
		&lt;denchmark-link:https://github.com/jrm346&gt;@jrm346&lt;/denchmark-link&gt;
 ,
When tried executing the given code
 was faced, can you provide complete standalone code to reproduce the issue ?Thanks!
		</comment>
		<comment id='2' author='jrm346' date='2019-10-29T13:23:23Z'>
		sorry forgot to add my import statements.
import tensorflow as tf
import tensorflow_probability as tfp
tfd = tfp.distributions

@tf.function  # &lt;---- This is what causes the error (the function works fine in eager mode)
def generate_data(size, p_0, p_0_0, p_1_1, mu0, s0, mu1, s1):
    states = tfd.Categorical(probs=[p_0, 1-p_0])

    transition = tfd.Categorical(probs=[[p_0_0, 1 - p_0_0],
                                        [1 - p_1_1, p_1_1]])

    emission = tfd.Normal(loc=[mu0, mu1], scale=[s0, s1])

    model = tfd.HiddenMarkovModel(states, transition, emission, size)

    return model.sample()

data = generate_data(50, 0.01, 0.3, 0.7, -10, 2, 10, 3)

print(data)
		</comment>
		<comment id='3' author='jrm346' date='2019-10-30T06:32:54Z'>
		Issue replicating for the given code, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/e46b968c3a12f9aef2efa7336cd2accb/33777.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='4' author='jrm346' date='2019-10-30T09:10:27Z'>
		yup that's the error should work with the @tf.function line removed
		</comment>
		<comment id='5' author='jrm346' date='2019-11-04T17:19:26Z'>
		&lt;denchmark-link:https://github.com/brianwa84&gt;@brianwa84&lt;/denchmark-link&gt;
 is HiddenMarkovModel compatible with graph mode?
		</comment>
		<comment id='6' author='jrm346' date='2019-11-05T09:13:35Z'>
		I assume its supposed to be. The log_prob method of the class works in graph mode. Also, all the other tensorflow probability distributions i have tried seem to be compatible with graph mode.
		</comment>
		<comment id='7' author='jrm346' date='2020-05-06T10:22:55Z'>
		&lt;denchmark-link:https://github.com/jrm346&gt;@jrm346&lt;/denchmark-link&gt;

Can you please try with latest TF version TF 2.2.0-rc4 (). I am not seeing any issue with TF 2.2.0-rc4.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/7d018d0493e23d1e690e3a2e96f33843/untitled858.ipynb&gt;here&lt;/denchmark-link&gt;
.Please, verify once and close the issue.Thanks!
		</comment>
		<comment id='8' author='jrm346' date='2020-05-13T12:58:39Z'>
		&lt;denchmark-link:https://github.com/jrm346&gt;@jrm346&lt;/denchmark-link&gt;

I am closing this issue as it was resolved in TF 2.2.0-rc4 version.Thanks!
		</comment>
		<comment id='9' author='jrm346' date='2020-05-13T12:58:41Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33777&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33777&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>