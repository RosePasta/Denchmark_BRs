<bug id='36668' author='kurka' open_date='2020-02-11T17:30:40Z' closed_time='2020-02-28T20:27:15Z'>
	<summary>TF 1.15.2: Metrics created in custom layer (self.add_metric) producing wrong output</summary>
	<description>
(this seems to be the same issue as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32144&gt;#32144&lt;/denchmark-link&gt;
, but for tf 1.15)
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.15.2
Python version: 3.6.9
CUDA/cuDNN version: 10.1
GPU model and memory: GeForce GTX 1080Ti

Describe the current behavior
When creating a custom model class (inheriting from tf.keras.Model), with a custom layer class (tf.keras.layers.Layer) as attribute, and trying to define metrics (using self.add_metric()) in both the outer class and the inner layer, the metrics outputs seem to be swapped (keys and values do not match) when training with model.fit.
Describe the expected behavior
Metrics names and values should match.
This seems to be an issue only of tf 1. Did not observe this in tf 2.1.
Code to reproduce the issue
import tensorflow as tf
from tensorflow.keras import layers

class InnerLayer(layers.Layer):

    def __init__(self):
        super(InnerLayer, self).__init__()

    def call(self, inputs):
        # Should always print 1.0
        self.add_metric(tf.constant(1.0), aggregation='mean',
                        name='should_be_1')
        return inputs


class OuterModel(tf.keras.Model):
    def __init__(self):
        super(OuterModel, self).__init__()
        self.inner = InnerLayer()

    def call(self, inputs):
        # Should always print 2.0
        self.add_metric(tf.constant(2.0), aggregation='mean',
                        name='should_be_2')
        return self.inner(inputs)


model = OuterModel()
model.compile('adam', loss='mse')
dataset = tf.random.normal((100, 5))
model.fit(dataset, dataset, epochs=10, steps_per_epoch=100, verbose=2)
Output (with bug):
&lt;denchmark-code&gt;Epoch 1/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 2/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 3/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 4/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 5/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 6/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 7/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 8/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 9/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
Epoch 10/10
100/100 - 0s - loss: 0.0000e+00 - should_be_1: 2.0000 - should_be_2: 1.0000
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kurka' date='2020-02-12T11:25:45Z'>
		Was able to reproduce the issue. Please find the Gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/970adef6e8e9d6d31d69a647ec342023/untitled1.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='kurka' date='2020-02-28T20:27:15Z'>
		&lt;denchmark-link:https://github.com/kurka&gt;@kurka&lt;/denchmark-link&gt;
 Thanks for the issue!
This is fixed in the latest tf-nightly: pip install -U tf-nightly
Unfortunately we are not able to backport fixes like this to earlier versions
		</comment>
		<comment id='3' author='kurka' date='2020-02-28T20:27:17Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36668&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36668&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>