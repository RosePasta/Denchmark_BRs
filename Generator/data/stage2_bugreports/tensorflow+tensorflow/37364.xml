<bug id='37364' author='nshoman' open_date='2020-03-05T19:37:30Z' closed_time='2020-03-06T13:12:26Z'>
	<summary>ConvLSTM2D Mixed Precision casting</summary>
	<description>
System information


Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): yes


OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Ubuntu 16.04


TensorFlow installed from (source or
binary): - TensorFlow version (use command below): 2.1.0


Describe the current behavior
Presumably, dtype isn't correctly cast for ConvLSTM2D when using mixed_precision policy. Issue is not present in other convolution layers such as Conv2D.
Describe the expected behavior
Filter of the Conv2D op for ConvLSTM2D should be float16 when using 'mixed_float16' mixed_precision policy
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

policy=tf.keras.mixed_precision.experimental.Policy('mixed_float16')
tf.keras.mixed_precision.experimental.set_policy(policy)

x=tf.keras.Input(shape=(1,10,10,3))



clstm1 =  tf.keras.layers.ConvLSTM2D(
    filters=1,
    strides=1,
    kernel_size=1,
    padding='same',
    return_sequences=True)(x)
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;/tensorflow-2.1.0/python3.6/tensorflow_core/python/framework/op_def_library.py in _apply_op_helper(op_type_name, name, **keywords)
    502                 "%s type %s of argument '%s'." %
    503                 (prefix, dtypes.as_dtype(attrs[input_arg.type_attr]).name,
--&gt; 504                  inferred_from[input_arg.type_attr]))
    505 
    506         types = [values.dtype]

TypeError: Input 'filter' of 'Conv2D' Op has type float32 that does not match type float16 of argument 'input'.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nshoman' date='2020-03-06T11:24:04Z'>
		&lt;denchmark-link:https://github.com/nshoman&gt;@nshoman&lt;/denchmark-link&gt;
,
I was able to reproduce the issue with &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/c45aca54869703bfd02b1e0b23203668/37364.ipynb&gt;TF2.1&lt;/denchmark-link&gt;
, however the issue seems to be fixed with &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/1d52785593f67345e46e6e9be01cf8e7/37364-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='nshoman' date='2020-03-06T13:12:28Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37364&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37364&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>