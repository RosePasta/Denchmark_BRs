<bug id='40609' author='dsandeep0138' open_date='2020-06-19T12:05:37Z' closed_time='2020-06-22T16:56:43Z'>
	<summary>Test set is empty for imdb.load_data() with low maxlen value</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): custom
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.2.0-rc4-8-g2b96f3662b 2.2.0
Python version: 3.6

Describe the current behavior
With the current imdb.load_data(), the following results are seen for different values of maxlen.
&lt;denchmark-code&gt;load_data                          (len(x_train), len(x_test))
------------------------------------------------------------ 
imdb.load_data(maxlen=50)    --&gt;    (1035, 0)
imdb.load_data(maxlen=100)   --&gt;    (5736, 0)
imdb.load_data(maxlen=200)   --&gt;    (25000, 3913)
imdb.load_data()             --&gt;    (25000, 25000)
&lt;/denchmark-code&gt;

Analysis: We can observe that when maxlen is low, the number of test samples can be 0. This is because the train and test data is concatenated, then the samples with length &gt; maxlen are removed, and the first 25,000 are considered as training data.
Describe the expected behavior
The number of test samples should not be zero.
Fix:This can be fixed when data can be filtered first to remove the ones with length &gt; maxlen, and then concatenate to process further. The following are the results after the fix.
&lt;denchmark-code&gt;load_data                              (len(x_train), len(x_test))
------------------------------------------------------------ 
imdb.load_data(maxlen=50)    --&gt;    (477, 558)
imdb.load_data(maxlen=100)   --&gt;    (2773, 2963)
imdb.load_data(maxlen=200)   --&gt;    (14244, 14669)
imdb.load_data()             --&gt;    (25000, 25000)
&lt;/denchmark-code&gt;

Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;from tensorflow.keras.datasets import imdb
(x_train, _), (x_test, _) = imdb.load_data(maxlen=50)
print((len(x_train), len(x_test)))  # This gives (1035, 0)

(x_train, _), (x_test, _) = imdb.load_data(maxlen=100)
print((len(x_train), len(x_test)))  # This gives (5736, 0)

(x_train, _), (x_test, _) = imdb.load_data(maxlen=200)
print((len(x_train), len(x_test)))  # This gives (25000, 3913)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dsandeep0138' date='2020-06-22T16:56:44Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40609&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40609&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>