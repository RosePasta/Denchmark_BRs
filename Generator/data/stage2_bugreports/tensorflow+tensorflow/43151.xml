<bug id='43151' author='Otakarlp' open_date='2020-09-11T14:38:46Z' closed_time='2020-09-12T15:08:27Z'>
	<summary>Using Hidden layers output in the loss function</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): *
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: *
TensorFlow installed from (source or binary):
TensorFlow version (use command below): 2.3 / tf-nightly
Python version: 3.6-3.7-3.8
Bazel version (if compiling from source): *
GCC/Compiler version (if compiling from source): *
CUDA/cuDNN version: *
GPU model and memory: *

Describe the current behavior
Hidden layers output of the model cannot be accessed outside of the function building code.
Describe the expected behavior
To be able to use hidden layers output in my loss function.
Standalone code to reproduce the issue
&lt;denchmark-link:https://colab.research.google.com/drive/1laEpykHax2QbAV4SB-8Srwfh9SvmAt4B?usp=sharing&gt;https://colab.research.google.com/drive/1laEpykHax2QbAV4SB-8Srwfh9SvmAt4B?usp=sharing&lt;/denchmark-link&gt;

Other info / logs
TypeError: An op outside of the function building code is being passed
a "Graph" tensor. It is possible to have Graph tensors
leak out of the function building context by including a
tf.init_scope in your function building code.
For example, the following function will fail:
@tf.function
def has_init_scope():
my_constant = tf.constant(1.)
with tf.init_scope():
added = my_constant * 2
The graph tensor has name: dense_6/Relu:0
During handling of the above exception, another exception occurred:
_SymbolicException                        Traceback (most recent call last)
9 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
72       raise core._SymbolicException(
73           "Inputs to eager execution function cannot be Keras symbolic "
---&gt; 74           "tensors, but found {}".format(keras_symbolic_tensors))
75     raise e
76   # pylint: enable=protected-access
_SymbolicException: Inputs to eager execution function cannot be Keras symbolic tensors, but found [&lt;tf.Tensor 'dense_6/Relu:0' shape=(None, 128) dtype=float32&gt;]
When i used tf.config.run_functions_eagerly(True)
I got my loss being equal to  0.0000e+00
	</description>
	<comments>
		<comment id='1' author='Otakarlp' date='2020-09-11T14:49:58Z'>
		Can you  for your case? Check &lt;denchmark-link:https://www.tensorflow.org/guide/keras/custom_layers_and_models#the_add_loss_method&gt;https://www.tensorflow.org/guide/keras/custom_layers_and_models#the_add_loss_method&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='Otakarlp' date='2020-09-11T15:06:38Z'>
		Thanks for your answer !
I'm actually getting a ValueError: No gradients provided for any variable error.
In fact, i'm trying to reproduce this model &lt;denchmark-link:url&gt;https://github.com/IAmSuyogJadhav/3d-mri-brain-tumor-segmentation-using-autoencoder-regularization/blob/master/model.py&lt;/denchmark-link&gt;

Using 2 model outputs, a dice loss for one ouput ( GT ) and a loss function ( VAE) depending on two layers (z_mean,z_var) of the model.
I think i've tried everything to get it work (layer output in loss function), so if someone can manage to make the standalone code i've made in the first post work, with ability to generalize for multiple outputs, it will be huge ! Thanks.
		</comment>
		<comment id='3' author='Otakarlp' date='2020-09-12T12:34:32Z'>
		&lt;denchmark-link:https://github.com/Otakarlp&gt;@Otakarlp&lt;/denchmark-link&gt;

I have tried in colab with TF nightly version() and i am not seeing any issue. Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/c16be7ff698abbc656c0aa968c77d6a6/untitled343.ipynb&gt;here&lt;/denchmark-link&gt;
.Please, verify once and close the issue. Thanks!
		</comment>
		<comment id='4' author='Otakarlp' date='2020-09-12T13:05:18Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 It seems to me that you have not reproduced the same user example with nightly cause on your Colab gist you are missing the  user original case inside .
&lt;denchmark-link:https://github.com/Otakarlp&gt;@Otakarlp&lt;/denchmark-link&gt;
 As I told you I think the you could follow the documentation example I mentioned with . Other then documentation you could see &lt;denchmark-link:https://github.com/keras-team/keras/issues/5563#issuecomment-283397931&gt;keras-team/keras#5563 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Otakarlp' date='2020-09-12T15:08:27Z'>
		First, thank you both for trying to help me.
Secondly, i want to make my mea culpa here, &lt;denchmark-link:https://github.com/bhack&gt;@bhack&lt;/denchmark-link&gt;
 was absolutely right, i used  and it worked perfectly ( before compiling the model(s) ), thank you again &lt;denchmark-link:https://github.com/bhack&gt;@bhack&lt;/denchmark-link&gt;
 you are huge.
For those who are trying to add intermediate layers to the loss function with respect to a certain path of the model, please use the gist &lt;denchmark-link:https://colab.research.google.com/drive/1qGZYgWRZoYXIeMKIEVKLf4hTo24b0CHv?usp=sharing&gt;Here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='Otakarlp' date='2020-09-12T15:08:29Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43151&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43151&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>