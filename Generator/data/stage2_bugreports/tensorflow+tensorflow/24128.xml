<bug id='24128' author='ZacharAdn' open_date='2018-12-03T17:01:33Z' closed_time='2019-01-28T18:44:13Z'>
	<summary>Error when loading frozen graph</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):


yes


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):


CentOS Linux 7


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):


source


TensorFlow version (use command below):


1.8.0


Python version:


2.7.15


Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):


4.8.2


CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
I trined GooglNet model and get the error when importing a frozen graph
ValueError: Input 0 of node save/Assign_41 was passed float from auxiliary_classifier_1/classifier/biases/Adam_1:0 incompatible with expected float_ref. 
Code to reproduce the issue
`def freeze_graph():
&lt;denchmark-code&gt;# We retrieve our checkpoint fullpath
checkpoint = tf.train.get_checkpoint_state(SAVE_PATH)
input_checkpoint = checkpoint.model_checkpoint_path
print(input_checkpoint)

# We precise the file fullname of our freezed graph
absolute_model_dir = "/".join(input_checkpoint.split('/')[:-1])
output_graph = absolute_model_dir + "/frozen_model.pb"

# We clear devices to allow TensorFlow to control on which device it will load operations
clear_devices = True

# We start a session using a temporary fresh Graph
with tf.Session(graph=tf.Graph()) as sess:
    # We import the meta graph in the current default Graph
    saver = tf.train.import_meta_graph(input_checkpoint + '.meta', clear_devices=clear_devices)

    # We restore the weights
    saver.restore(sess, input_checkpoint)

    gd = tf.get_default_graph().as_graph_def()

    # fix nodes
    for node in gd.node:
        if node.op == 'RefSwitch':
            node.op = 'Switch'
            for index in range(len(node.input)):
                if 'moving_' in node.input[index]:
                    node.input[index] = node.input[index] + '/read'
        elif node.op == 'AssignSub':
            node.op = 'Sub'
            if 'use_locking' in node.attr:
                del node.attr['use_locking']
        elif node.op == 'AssignAdd':
            node.op = 'Add'
            if 'use_locking' in node.attr:
                del node.attr['use_locking']
        else:
            print(node.op , node.name)
        # elif node.op == '':

    output_node_names = [n.name for n in gd.node]

    # We use a built-in TF helper to export variables to constants
    output_graph_def = tf.graph_util.convert_variables_to_constants(
        sess, # The session is used to retrieve the weights
        gd, # The graph_def is used to retrieve the nodes
        output_node_names # The output node names are used to select the usefull nodes
    )

    # Finally we serialize and dump the output graph to the filesystem
    with tf.gfile.GFile(output_graph, "wb") as f:
        f.write(output_graph_def.SerializeToString())
    print("%d ops in the final graph." % len(output_graph_def.node))`
&lt;/denchmark-code&gt;

None of the answers I found on the net (eg &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/3628&gt;#3628&lt;/denchmark-link&gt;
) do not answer this specific situation, where the problem is in the save op and Adam optimizer
	</description>
	<comments>
		<comment id='1' author='ZacharAdn' date='2018-12-27T23:39:33Z'>
		Apologies for the delay in response. Is this still an issue? Can you try with the latest version of TF and test again? Thanks!
		</comment>
		<comment id='2' author='ZacharAdn' date='2019-01-04T02:00:45Z'>
		I met this error when trying to convert the froze_eval_graph.pb into .tflite file using 'toco'
I followed the steps in the instruction &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/r1.12/tensorflow/contrib/quantize&gt;here&lt;/denchmark-link&gt;
, and here is my error trace:
&lt;denchmark-code&gt;$ toco --graph_def_file=frozen_eval_graph.pb --output_file=model.tflite --output_format=TFLITE --inference_type=QUANTIZED_UINT8 --input_shapes='1,28,28,1' --input_arrays=Lenet/conv1/Relu --output_arrays=Lenet/fc9/Relu

Traceback (most recent call last):
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/python/framework/importer.py", line 418, in import_graph_def
    graph._c_graph, serialized, options)  # pylint: disable=protected-access
tensorflow.python.framework.errors_impl.InvalidArgumentError: Input 0 of node Lenet/conv1/weights_quant/AssignMinLast was passed float from Lenet/conv1/weights_quant/min:0 incompatible with expected float_ref.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/chutz/.local/bin/toco", line 11, in &lt;module&gt;
    sys.exit(main())
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/contrib/lite/python/tflite_convert.py", line 320, in main
    app.run(main=run_main, argv=sys.argv[:1])
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/python/platform/app.py", line 125, in run
    _sys.exit(main(argv))
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/contrib/lite/python/tflite_convert.py", line 316, in run_main
    _convert_model(tflite_flags)
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/contrib/lite/python/tflite_convert.py", line 91, in _convert_model
    converter = _get_toco_converter(flags)
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/contrib/lite/python/tflite_convert.py", line 81, in _get_toco_converter
    return converter_fn(**converter_kwargs)
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/contrib/lite/python/lite.py", line 204, in from_frozen_graph
    import_graph_def(graph_def, name="")
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py", line 432, in new_func
    return func(*args, **kwargs)
  File "/home/chutz/.local/lib/python3.5/site-packages/tensorflow/python/framework/importer.py", line 422, in import_graph_def
    raise ValueError(str(e))
ValueError: Input 0 of node Lenet/conv1/weights_quant/AssignMinLast was passed float from Lenet/conv1/weights_quant/min:0 incompatible with expected float_ref.
&lt;/denchmark-code&gt;

And my environments are:
Python3.5
Tensorflow-gpu 1.9.0
cuDNN 7.5.0
CUDA 9.0
Any help is appreciated! Thanks a lot!
		</comment>
		<comment id='3' author='ZacharAdn' date='2019-01-26T18:36:44Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='4' author='ZacharAdn' date='2019-01-28T18:44:13Z'>
		&lt;denchmark-link:https://github.com/chutongz&gt;@chutongz&lt;/denchmark-link&gt;
 TF 1.9 version is low to carry updates for toco file conversions. Please use tf-nightly build and test again. Thanks!
		</comment>
	</comments>
</bug>