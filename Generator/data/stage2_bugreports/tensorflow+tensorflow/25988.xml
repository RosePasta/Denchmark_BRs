<bug id='25988' author='JTunis' open_date='2019-02-21T21:39:05Z' closed_time='2020-02-24T06:51:38Z'>
	<summary>[TF 2.0 API Docs] tf.keras.applications.MobileNetV2</summary>
	<description>

&lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/applications/MobileNetV2&gt;https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/applications/MobileNetV2&lt;/denchmark-link&gt;

Description of issue (what needs changing):

Correct Links:
https://github.com/tensorflow/tensorflow/blob/master/python/keras/applications/__init__.py is incorrect
The correct link should be:
https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/applications/__init__.py



Clear Description:
The description does not describe what this symbol does or when it should be


Usage Example:
No usage example is provided.


Parameters Defined:
Parameters are not defined.


Returns Defined:
Returns are not defined.


Raises Listed and Defined:
Errors are not listed or defined.


Visuals, if Applicable:
No visuals are included.


	</description>
	<comments>
		<comment id='1' author='JTunis' date='2019-02-22T14:55:04Z'>
		Since the actual model implementation, including parameters, returns, and errors, is in  (&lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/master/keras_applications/mobilenet_v2.py&gt;https://github.com/keras-team/keras-applications/blob/master/keras_applications/mobilenet_v2.py&lt;/denchmark-link&gt;
), I have a few questions:

What would be the best approach to reference this in TF docs?
Is it still worth pointing the definition link to __init__.py in python/keras/applications?
Is there already a plan for replicating/sharing documentation between Keras and tf.keras?

		</comment>
		<comment id='2' author='JTunis' date='2019-02-24T07:06:30Z'>
		&lt;denchmark-link:https://github.com/JTunis&gt;@JTunis&lt;/denchmark-link&gt;
 Thanks so much for the interest in contributing to TF 2.0 API documentation! We appreciate it, and these are excellent questions. I believe the best approach for modifying this endpoint in TF 2.0 docs would be to modify the docstrings for the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/applications/mobilenet_v2.py&gt;mobilenet_v2.py&lt;/denchmark-link&gt;
 file in .
All of the documentation for the models listed in &lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/applications&gt;tf.keras.applications&lt;/denchmark-link&gt;
 (VGG16, Xception, etc.) is currently pointing at the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/applications/__init__.py&gt;__init__.py&lt;/denchmark-link&gt;
 file; we'll want to make similar changes for each of them, as well, or confirm that we can safely point to the &lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/master/keras_applications/mobilenet_v2.py&gt;documentation you referenced&lt;/denchmark-link&gt;
 in the Keras project. There is no current plan to migrate documentation from Keras endpoints to their matching  symbols, but we would love to have help!
: these models are currently in the process of being migrated to TF 2.0: (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/25341&gt;#25341&lt;/denchmark-link&gt;
).
cc: &lt;denchmark-link:https://github.com/MarkDaoust&gt;@MarkDaoust&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/lamberta&gt;@lamberta&lt;/denchmark-link&gt;
 to make sure that I'm pointing you in the right direction. 
		</comment>
		<comment id='3' author='JTunis' date='2019-02-26T20:14:14Z'>
		Happy to take over the documentation of all tf.keras.applications. I do think I'd like to play with pointing to keras-applications, so that changes are reflected in the TF2.0 docs, or, minimally, adding a link to the actual implementations.
Maybe I'll start with migrating documentation from  to  manually so that there's some useful documentation for users, then depending on the progress of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/25341&gt;#25341&lt;/denchmark-link&gt;
, work on either pointing to  implementations or  implementations.
		</comment>
		<comment id='4' author='JTunis' date='2019-03-06T17:13:36Z'>
		&lt;denchmark-link:https://github.com/JTunis&gt;@JTunis&lt;/denchmark-link&gt;
 would love to help as well! Need help with anything?
		</comment>
		<comment id='5' author='JTunis' date='2019-03-06T18:47:50Z'>
		&lt;denchmark-link:https://github.com/Sri-vatsa&gt;@Sri-vatsa&lt;/denchmark-link&gt;
 Totally! I've been struggling to figure out how to point the docs generator to the appropriate file to generate the markdown docs. Some things that I've poked:

generate2.py located here. As it's looping through the results of the parser, it seems to be generating the doc from the markdown from the first appearance of the MobileNetV2 API that it encounters, which seems to be from python/keras/api/_v2/keras/applications/mobilenet_v2/__init__.py. Unfortunately, we can't change the docs there because the file is auto-generated from here
Maybe I'm making this harder than it has to be, but simply changing docstrings in mobilenet_v2.py doesn't change the generated markdown files.

Let me know if you can figure out how to resolve this, then it should be pretty easy to start banging out the docs for all of tf.keras.applications
		</comment>
		<comment id='6' author='JTunis' date='2019-03-11T15:20:10Z'>
		&lt;denchmark-link:https://github.com/JTunis&gt;@JTunis&lt;/denchmark-link&gt;
 I haven't had a lot of time to look at it yet but from an initial examination, it seems like the docstrings for Keras files have a different format than what is used in Tensorflow.
Take a look at the corresponding docstring &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/data/ops/dataset_ops.py&gt;here&lt;/denchmark-link&gt;
 for  api &lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/data/Dataset&gt;here&lt;/denchmark-link&gt;
.
For Keras, the modules are injected from  &lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/master/keras_applications/mobilenet_v2.py&gt;here&lt;/denchmark-link&gt;
. So, I believe that your approach of modifying the might be the solution. Can I check what you have tried changing in ?
		</comment>
		<comment id='7' author='JTunis' date='2019-03-15T14:58:42Z'>
		&lt;denchmark-link:https://github.com/JTunis&gt;@JTunis&lt;/denchmark-link&gt;
 Figured out how to fix the issue. It is an issue with docstrings within Python Decorators. I have tested the fix locally by checking the readme files generated through . It is a simple fix by wrapping the Keras functions using the  decorator from Python's  library.


Modify tensorflow/tensorflow/python/keras/applications/__init__.py here. Import wraps from functools by adding from functools import wraps to the top of the file. Add @wraps(base_fun) to the function keras_modules_injection(base_fun)


Add docstrings to mobilenet_v2.py or any other models in tf.keras.applications.


&lt;denchmark-link:https://github.com/dynamicwebpaige&gt;@dynamicwebpaige&lt;/denchmark-link&gt;
 Regarding the documentation for , what is the best way to update the documentation? For now, I am thinking of copying the relevant docstrings from . Would that be alright?
I will clean things up locally and make a PR over this weekend.
		</comment>
		<comment id='8' author='JTunis' date='2019-03-15T16:03:08Z'>
		&lt;denchmark-link:https://github.com/Sri-vatsa&gt;@Sri-vatsa&lt;/denchmark-link&gt;
 Awesome, once your PR is in we can work to divvy up the rest of the the  models.
As far as the docs for each model, I was also thinking of mostly copying relevant docstrings from keras_applications and maybe also linking to the implementation (at least until the tf.keras implementations are done). There was also a good transfer learning with tf.keras.applications models example that I wanted to link to, but I can't seem to find it right now.
Also not sure if it's worth editing the models' arguments to match those of keras_applications rather than just taking *args and **kwargs.
		</comment>
	</comments>
</bug>