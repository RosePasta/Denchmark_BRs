<bug id='5630' author='craymichael' open_date='2016-11-15T22:39:10Z' closed_time='2016-11-16T18:51:06Z'>
	<summary>`_bag_features` doesn't work properly in Random Forest (TensorForest)</summary>
	<description>
TensorFlow r0.10 , but code appears to be the same in master.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Create Random Forest (tf.contrib.learn.TensorForestEstimator) with default parameters (ForestHParams) with the exception of setting feature_bagging_fraction to anything below 1.0 e.g. 0.8. I believe the issue lies in the _bag_features implementation in tensor_forest.py.
&lt;denchmark-h:h3&gt;Traceback&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/.../train.py", line 55, in train
    monitors=monitors)
  File "/usr/local/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 240, in fit
    max_steps=max_steps)
  File "/usr/local/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 550, in _train_model
    train_op, loss_op = self._get_train_ops(features, targets)
  File "/usr/local/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/random_forest.py", line 163, in _get_train_ops
    **self.training_args),
  File "/usr/local/python2.7/dist-packages/tensorflow/contrib/tensor_forest/python/tensor_forest.py", line 369, in training_graph
    tree_data = self._bag_features(i, tree_data)
  File "/usr/local/python2.7/dist-packages/tensorflow/contrib/tensor_forest/python/tensor_forest.py", line 325, in _bag_features
    split_data = array_ops.split(1, self.params.num_features, input_data)
  File "/usr/local/python2.7/dist-packages/tensorflow/python/ops/array_ops.py", line 980, in split
    name=name)
  File "/usr/local/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py", line 2231, in _split
    num_split=num_split, name=name)
  File "/usr/local/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py", line 627, in apply_op
    (key, op_type_name, attr_value.i, attr_def.minimum))
ValueError: Attr 'num_split' of 'Split' Op passed 0 less than minimum 1.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='craymichael' date='2016-11-16T17:02:12Z'>
		I'll link in a tensorforest person shortly, but it seems like the best solution for this would be to make tf.split accept num_split == 0.  The correct behavior would be to bail if the input tensor isn't empty along that dimension.
		</comment>
		<comment id='2' author='craymichael' date='2016-11-16T17:50:40Z'>
		&lt;denchmark-link:https://github.com/ThomasColthurst&gt;@ThomasColthurst&lt;/denchmark-link&gt;
: Do you agree that this is an issue in , or is it a different bug in tensorforest?
		</comment>
		<comment id='3' author='craymichael' date='2016-11-16T17:57:19Z'>
		Hi, Geoffrey.  Can you give me more information about what isn't working?
(For example, a code snippet of how you are calling TensorForest, and any
relevant log output).  I assume you are setting the bagged_features
parameter to true, and that you are seeing a crash or something inside the
_bag_features function?
Thanks,
-Thomas C
On Wed, Nov 16, 2016 at 12:51 PM, Geoffrey Irving &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

@ThomasColthurst https://github.com/thomascolthurst: Do you agree that
this is an issue in tf.split, or is it a different bug in tensorforest?
â€”
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#5630 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AWasccnv1t8TJnsiwWmMtUjlsXNPzHiPks5q-0KngaJpZM4KzHLi
.

		</comment>
		<comment id='4' author='craymichael' date='2016-11-16T18:51:06Z'>
		Hi, I just realized that this is indeed a silly bug on my side and a non-issue. The above log can be reproduced by setting the num_features hyperparameter to 0, which isn't even the log I meant to include, my apologies. The error I was really experiencing involved having an embedding input to the Random Forest where I forgot to incorporate the embedding dimension for each embedded feature in the total number of features; the data could therefore not be bagged properly. I'll go ahead and close this non-issue.
		</comment>
		<comment id='5' author='craymichael' date='2016-11-18T15:04:18Z'>
		Just a heads up, _bagged_features will fail if the feature_bagging_fraction is less than the fraction of a single feature; the parameter bagged_num_features is calculated by self.bagged_num_features = int(self.feature_bagging_fraction * self.num_features), which will result in 0 bagged features, which results in the error ValueError: List argument 'values' to 'Concat' Op with length 0 shorter than minimum length 2. Additionally, this error is not entirely correct, as the values input to the Concat op can have a length of 1 and still work:
&lt;denchmark-code&gt;&gt;&gt;&gt; sess.run(tf.concat(1, [1]))
1
&gt;&gt;&gt; sess.run(tf.concat(1, 1))
1
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>