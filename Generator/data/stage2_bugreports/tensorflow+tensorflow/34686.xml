<bug id='34686' author='corwinliu' open_date='2019-11-28T12:00:45Z' closed_time='2020-09-22T00:22:27Z'>
	<summary>tf.cast with division impose different influence on python2 v.s. python3</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Mojave 10.14.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.12.0
Python version: 3.6.5, 2.7.10
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
v1.12.0-rc2-3-ga6d8ffae09 1.12.0
Describe the current behavior
When I run a tf.cast() including a division('/'), the change of random seed is different on python2 and python3
For example, if I run the following code
&lt;denchmark-code&gt;import tensorflow as tf
tf.set_random_seed(1)

with tf.Session() as sess:
    print('tf random_normal:{}'.format(sess.run(tf.random_normal([1, 2]))))
a = tf.cast(tf.constant(1)/tf.constant(2), tf.float32)
with tf.Session() as sess:
    print('tf random_normal:{}'.format(sess.run(tf.random_normal([1, 2]))))
&lt;/denchmark-code&gt;

I get following result on python2.7.10
&lt;denchmark-code&gt;tf random_normal:[[-0.67086124  0.22357143]]
tf random_normal:[[-0.3143593  0.6476281]]
&lt;/denchmark-code&gt;

But I get following result on python3.6.5
&lt;denchmark-code&gt;tf random_normal:[[-0.67086124  0.22357143]]
tf random_normal:[[-0.21253194  0.47261432]]
&lt;/denchmark-code&gt;

At first, py2 and py3 create the same random_normal. But after run the tf.cast, they get different result.
Describe the expected behavior
The tf.random_normal() of py2 and py3 with same seed should get the same result.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
&lt;denchmark-code&gt;import tensorflow as tf
tf.set_random_seed(1)

with tf.Session() as sess:
    print('tf random_normal:{}'.format(sess.run(tf.random_normal([1, 2]))))
a = tf.cast(tf.constant(1)/tf.constant(2), tf.float32)
with tf.Session() as sess:
    print('tf random_normal:{}'.format(sess.run(tf.random_normal([1, 2]))))
&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='corwinliu' date='2019-11-29T07:05:23Z'>
		Could see different result after tf.cast in Python 3 and Python 2 with Tf 1.12.
Please see the gist for Python3 &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/e2fce6a4c6ad349fc70137f7ec656a88/untitled280.ipynb&gt;here&lt;/denchmark-link&gt;
.
Please see the gist for Python2 &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/e099e0a14835a61670c16fcf9fee3122/untitled280.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='corwinliu' date='2019-11-29T09:08:48Z'>
		Could reproduce the issue with TF Version 1.15 as well.
		</comment>
		<comment id='3' author='corwinliu' date='2020-09-22T00:22:27Z'>
		I am closing this issue as python2 is not supported anymore with Tensorflow. Please feel free to reopen if I am mistaken. Thanks!
		</comment>
		<comment id='4' author='corwinliu' date='2020-09-22T00:22:29Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34686&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34686&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>