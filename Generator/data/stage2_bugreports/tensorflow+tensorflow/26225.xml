<bug id='26225' author='jpatts' open_date='2019-02-28T19:56:54Z' closed_time='2019-03-15T13:12:37Z'>
	<summary>record_summaries_every_n_global_steps() should not execute code unless global_step % n == 0</summary>
	<description>

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
No
TensorFlow installed from (source or binary):
Source
TensorFlow version (use command below):
b'v1.12.0-5845-g764109a352' 1.12.0
Python version:
3.6.7
Bazel version (if compiling from source):
Invocation ID: 42251854-036f-415c-8a52-76aac8520ea0
Build label: 0.21.0
Build time: Wed Dec 19 12:58:44 2018 (1545224324)
GCC/Compiler version (if compiling from source):
gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
CUDA/cuDNN version:
Cuda compilation tools, release 10.0, V10.0.130
GPU model and memory:
GTX 1060 Max Q, 6gb VRAM


 may not be recording summaries unless , HOWEVER, it is running the code within its block anyways. In my opinion this is a huge waste of resources, especially when image logging is being done and transformations are required. Furthermore, there is no information of this behaviour on the documentation. Finally, it defeats the purpose of the function.
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/contrib/summary/record_summaries_every_n_global_steps&gt;https://www.tensorflow.org/api_docs/python/tf/contrib/summary/record_summaries_every_n_global_steps&lt;/denchmark-link&gt;


It should not run the code within its "with" block when , or documentation should be added that describes the current behaviour. It defeats the purpose of it when I can combine an if statement with  to produce better results.

&lt;denchmark-code&gt;global_step = tf.train.get_or_create_global_step()
writer = tf.contrib.summary.create_file_writer('./test')
writer.set_as_default()

images = []
for i in range(100):
        images.append(np.random.uniform(0, 255, (32, 32, 3)).astype(np.float32))
images = np.array(images)
data = tf.data.Dataset.from_tensor_slices((images))

for i in range(10000):
        batch = data.batch(len(images))
        for image in batch:
                with tf.contrib.summary.record_summaries_every_n_global_steps(100, global_step):
                        print(global_step.numpy())
                        tf.contrib.summary.image('image', image)
        global_step.assign_add(1)
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;0
1
2
3
4
5
6
....
9999
&lt;/denchmark-code&gt;

The images were still logged every global_step % n == 0 iterations, yet as can be seen here, the code within the block still executed every global_step. I shouldn't need to add an if global_step % n == 0: outside of the with tf.contrib.summary.record_summaries_every_n_global_steps(n, global_step): function. It literally defeats the purpose of it, as I might as well just use with tf.contrib.summary.always_record_summaries(): inside of an if global_step % n == 0:.
	</description>
	<comments>
		<comment id='1' author='jpatts' date='2019-02-28T23:20:04Z'>
		&lt;denchmark-link:https://github.com/jpatts&gt;@jpatts&lt;/denchmark-link&gt;
 This is more related to tensorboard Repo. Please post the issue &lt;denchmark-link:https://github.com/tensorflow/tensorboard/issues&gt;here&lt;/denchmark-link&gt;
 and the Tboard Team will take care of that issue. Thanks!
		</comment>
		<comment id='2' author='jpatts' date='2019-03-15T12:54:10Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='3' author='jpatts' date='2019-03-15T13:12:37Z'>
		Closing due to lack of recent activity. Please update the issue when new information becomes available, and we will open a new issue. Thanks!
		</comment>
	</comments>
</bug>