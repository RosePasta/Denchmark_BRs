<bug id='12450' author='anandcu3' open_date='2017-08-21T12:04:07Z' closed_time='2017-11-29T23:29:51Z'>
	<summary>Freezing Model drops Output Accuracy</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10
TensorFlow installed from (source or binary):
Binary
TensorFlow version (use command below):
v1.2 and v1.3 (Same Problem repeats on both)
Python version:
3.5
CUDA/cuDNN version:
Cuda compilation tools, release 8.0, V8.0.44
cuDNN Version 5.1.10
GPU model and memory:
GeForce GTX 1060 - 6GB

I have a image segmentation network designed to classify roads and obstacles.  I want to freeze the model and serve it as a API. So I used the default TensorFlow tool for freezing the model. After freezing, the output given by the network are completely off and inaccurate.
Here is one sample.
The Input Image
&lt;denchmark-link:https://user-images.githubusercontent.com/13032916/29518128-d016402e-8695-11e7-95e5-1fdac3e5b0f6.png&gt;&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/13032916/29518247-3623ea56-8696-11e7-94e0-6eabe13ab066.png&gt;&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/13032916/29518258-4087803e-8696-11e7-9a56-4c5d45d7fda1.png&gt;&lt;/denchmark-link&gt;

I have tried to freeze using different versions of tensorflow, but that has not helped. Since the network is performing as excepted when tested against checkpoint, the issue, I think is in the Freeze Models Script. The network uses Batch_normalisation. Could this be the reason for this drop because I saw a couple of issues linked to that of similar nature? How can I avoid that?
	</description>
	<comments>
		<comment id='1' author='anandcu3' date='2017-08-28T04:21:39Z'>
		Are you able to provide code, an example image, and steps for us to reproduce this problem?
		</comment>
		<comment id='2' author='anandcu3' date='2017-08-29T07:50:04Z'>
		&lt;denchmark-link:https://github.com/ali01&gt;@ali01&lt;/denchmark-link&gt;
  I have added more details and code &lt;denchmark-link:https://stackoverflow.com/questions/45796759/freezing-model-drops-output-accuracy&gt;here&lt;/denchmark-link&gt;
..
		</comment>
		<comment id='3' author='anandcu3' date='2017-09-26T10:12:37Z'>
		&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10
TensorFlow installed from (source or binary):
Source
TensorFlow version (use command below):
v1.3
Python version:
3.5
CUDA/cuDNN version:
No GPU, we're trying to deploy on CPU
I've encountered the same problem with freezing the model. I'm working for a company where we want to serve the model in C++, so I've frozen the network and also found differences in network output.
I've double checked the output of the frozen network in C++ and Python and they are the same. However the output is significantly different when comparing it to the model loaded with a checkpoint. There is no workaround for us to continue other than trying older versions of TensorFlow to see if the issue is not there.
We also use Batch Normalization in the network.
		</comment>
		<comment id='4' author='anandcu3' date='2017-10-05T14:03:02Z'>
		I've managed to figure out the issue on our side. Some post-processing steps were frozen, which wasn't clear from our codebase.
		</comment>
		<comment id='5' author='anandcu3' date='2017-11-29T23:29:24Z'>
		&lt;denchmark-link:https://github.com/anandcu3&gt;@anandcu3&lt;/denchmark-link&gt;
  have you had any luck resolveing your issue?
		</comment>
		<comment id='6' author='anandcu3' date='2017-11-29T23:29:51Z'>
		Nevermind, read the stackoverflow.
		</comment>
		<comment id='7' author='anandcu3' date='2018-12-04T02:56:07Z'>
		&lt;denchmark-link:https://github.com/Jabba&gt;@Jabba&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/anandcu3&gt;@anandcu3&lt;/denchmark-link&gt;
  how do you solve itï¼Ÿ can you give some advises?
		</comment>
	</comments>
</bug>