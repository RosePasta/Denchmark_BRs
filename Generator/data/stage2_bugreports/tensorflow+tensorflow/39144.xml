<bug id='39144' author='ngc92' open_date='2020-05-04T09:13:00Z' closed_time='2020-05-13T10:07:14Z'>
	<summary>experimental_compile regression in 2.2.rc4</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Mint 19.3
TensorFlow installed from: pip
TensorFlow version 2.2.0-rc4 / v2.2.0-rc3-33-g70087ab4f4
Python version: 3.6

The following code worked with experimental_compile=True in 2.1, but causes an error in 2.2.rc4:
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

@tf.function(experimental_compile=True)
def process_line(line):
    return tf.strings.split(line, " ")

text = tf.data.Dataset.from_tensor_slices(["1 2"])
text = text.map(process_line)

for x in text:
    print(x)

# this one works in neither 2.1 nor 2.2rc4
# process_line("1 2")
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.InvalidArgumentError: Function invoked by the following node is not compilable: {{node PartitionedCall}} = PartitionedCall[Tin=[DT_STRING], Tout=[DT_STRING], _XlaMustCompile=true, _read_only_resource_inputs=[], config="", config_proto="\n\007\n\003GPU\020\000\n\007\n\003CPU\020\0012\002J\0008\001", executor_type="", f=__inference_process_line_84[]](args_0).
Uncompilable nodes:
PartitionedCall: could not instantiate call: '__inference_process_line_84'
	Stacktrace:
		Node: PartitionedCall, function: 

	 [[PartitionedCall]] [Op:MakeIterator]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ngc92' date='2020-05-04T10:04:04Z'>
		&lt;denchmark-link:https://github.com/ngc92&gt;@ngc92&lt;/denchmark-link&gt;

Looks like code is incomplete. Request you to share colab link or simple standalone code to reproduce the issue in our environment.It helps us in localizing the issue faster.Thanks!
		</comment>
		<comment id='2' author='ngc92' date='2020-05-04T11:10:42Z'>
		I spent some more time looking at my example, and testing in 2.1 and 2.2, and it might be that the code was silently broken in 2.1. I've updated the code above to reflect my new minimal example.
The last line that is commented out in my example fails in both 2.1 and 2.2, which indicates that XLA also did not work in 2.1.
It seems that in 2.1, when a function with unsupported experimental_compile was used in an input pipeline, the error might have been ignored (and the function used without XLA?), but in 2.2 the error bubbles up. If that is an intended change, then my report here does not show a regression.
		</comment>
		<comment id='3' author='ngc92' date='2020-05-04T12:08:39Z'>
		I have tried in colab with TF 2.1.0, 2.2-rc4 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/0db524d427199cd33fe6b193d290dc01/untitled853.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='4' author='ngc92' date='2020-05-04T21:55:30Z'>
		Hi, the error message should be improved, but it basically says that the code in tf.strings.split is not compilable by XLA. What is the expected behavior here if this is a bug?
		</comment>
		<comment id='5' author='ngc92' date='2020-05-05T06:12:35Z'>
		The question is whether there should be a non-XLA fallback. tf 2.1. seems to silently use a non-XLA implementation in this case, whereas tf 2.2 raises the error.
		</comment>
		<comment id='6' author='ngc92' date='2020-05-05T16:52:49Z'>
		The contract says that experimental_compile=True should fail explicitly, and not provide a fallback (cf. tensorflow.org/xla)
		</comment>
		<comment id='7' author='ngc92' date='2020-05-06T17:49:15Z'>
		so it's a bug in 2.1 that the tf.data pipelines silently fell back to non XLA, i guess.
		</comment>
		<comment id='8' author='ngc92' date='2020-05-13T10:07:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39144&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39144&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>