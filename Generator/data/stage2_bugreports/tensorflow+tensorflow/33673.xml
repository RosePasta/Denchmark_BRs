<bug id='33673' author='Yablon' open_date='2019-10-24T07:46:59Z' closed_time='2019-10-30T03:07:52Z'>
	<summary>[tf2.0] LSTMCell get_initial_state went wrong when batch_size is a Tensor</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
Not Clear
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
2.0.0
Python version:
3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
10.0
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
LSTMCell get_initial_state went wrong when batch_size is a Tensor
Describe the expected behavior
I think it should gives a good result
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
import tensorflow as tf
a = tf.keras.Input(shape=(10,), batch_size=2)
batch_size = tf.shape(a)[0]
cell = tf.keras.layers.LSTMCell(units=1024)
b = cell.get_initial_state(batch_size=batch_size, dtype=tf.float32)
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
Traceback (most recent call last):
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/array_ops.py", line 2355, in zeros
tensor_shape.TensorShape(shape))
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/tensor_shape.py", line 776, in init
self._dims = [as_dimension(d) for d in dims_iter]
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/tensor_shape.py", line 776, in 
self._dims = [as_dimension(d) for d in dims_iter]
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/tensor_shape.py", line 718, in as_dimension
return Dimension(value)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/tensor_shape.py", line 193, in init
self._value = int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'Tensor'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/ops.py", line 1610, in _create_c_op
c_op = c_api.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Duplicate node name in graph: 'zeros/packed'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "test7.py", line 10, in 
b = cell.get_initial_state(batch_size=batch_size, dtype=tf.float32)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/layers/recurrent.py", line 2314, in get_initial_state
self, inputs, batch_size, dtype))
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/layers/recurrent.py", line 2752, in _generate_zero_filled_state_for_cell
return _generate_zero_filled_state(batch_size, cell.state_size, dtype)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/layers/recurrent.py", line 2768, in _generate_zero_filled_state
return nest.map_structure(create_zeros, state_size)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/util/nest.py", line 535, in map_structure
structure[0], [func(*x) for x in entries],
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/util/nest.py", line 535, in 
structure[0], [func(*x) for x in entries],
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/layers/recurrent.py", line 2765, in create_zeros
return array_ops.zeros(init_state_size, dtype=dtype)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/array_ops.py", line 2358, in zeros
shape = ops.convert_to_tensor(shape, dtype=dtypes.int32)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/ops.py", line 1184, in convert_to_tensor
return convert_to_tensor_v2(value, dtype, preferred_dtype, name)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/ops.py", line 1242, in convert_to_tensor_v2
as_ref=False)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/ops.py", line 1296, in internal_convert_to_tensor
ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/array_ops.py", line 1278, in _autopacking_conversion_function
return _autopacking_helper(v, dtype, name or "packed")
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/array_ops.py", line 1214, in _autopacking_helper
return gen_array_ops.pack(elems_as_tensors, name=scope)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/gen_array_ops.py", line 6304, in pack
"Pack", values=values, axis=axis, name=name)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/op_def_library.py", line 793, in _apply_op_helper
op_def=op_def)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/func_graph.py", line 548, in create_op
compute_device)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/ops.py", line 3429, in _create_op_internal
op_def=op_def)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/ops.py", line 1773, in init
control_input_ops)
File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/ops.py", line 1613, in _create_c_op
raise ValueError(str(e))
ValueError: Duplicate node name in graph: 'zeros/packed'
	</description>
	<comments>
		<comment id='1' author='Yablon' date='2019-10-25T07:03:37Z'>
		I could reproduce the issue with TF 2.0 on colab. Please see colab &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/bb4f6ac37f07b5246b6eeabe8cdabf10/untitled226.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='Yablon' date='2019-10-25T18:48:53Z'>
		&lt;denchmark-link:https://github.com/Yablon&gt;@Yablon&lt;/denchmark-link&gt;
 Why do you want to pass batch_size as a tensor? obviously it will throw an error as it was not expecting a tensor. Please let us know any reason behind that change? Thanks!
		</comment>
		<comment id='3' author='Yablon' date='2019-10-26T15:05:07Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 my code is a little bit complicated and I try to simplify it like the following codes.
I use the official tensorflow_addons module in my code, which is in the original tf.contrib module.
I have to get the initial input for the decoder, and I want to use the batch_size from the input data, because I don't want a fixed batch in my training.
My code goes wrong and I spend a day to find the lstmcell problem.
Does I use tf2 in a wrong way ? how can I make the following codes work ?
Thank you for spending time on my issue. You are very appreciated, and I really want to benefit from the tensorflow 2.0. Hope you give me some advices one that issue.
&lt;denchmark-link:https://github.com/Yablon/test/blob/master/test.py&gt;my simplified script here&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Yablon' date='2019-10-29T17:54:00Z'>
		&lt;denchmark-link:https://github.com/Yablon&gt;@Yablon&lt;/denchmark-link&gt;
 Can you create a standalone code to reproduce the issue? Thanks!
		</comment>
		<comment id='5' author='Yablon' date='2019-10-30T03:07:52Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 Thank you for your reply !
After clearing my redundant codes, I think the problem is solved for now. I can train my model since 12 hours ago. I think TF2.0 is better to develop and debug than TF1.x.
Sorry for the interuption.
		</comment>
		<comment id='6' author='Yablon' date='2019-10-30T03:07:53Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33673&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33673&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='Yablon' date='2019-12-04T09:42:35Z'>
		lstm_cell =tf.keras.layers.LSTM(units=hidden_unit)
lstm_cell = tf.nn.RNNCellDropoutWrapper(lstm_cell, output_keep_prob=self.dropout_keep_prob)
self._initial_state = lstm_cell.get_initial_state(128, tf.float32)
Got  ERROR
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

ValueError: slice index 0 of dimension 0 out of bounds. for 'strided_slice' (op: 'StridedSlice') with input shapes: [0], [1], [1], [1] and with computed input tensors: input[1] = &lt;0&gt;, input[2] = &lt;1&gt;, input[3] = &lt;1&gt;.
may I know why I am getting this error?
		</comment>
		<comment id='8' author='Yablon' date='2019-12-04T18:23:50Z'>
		&lt;denchmark-link:https://github.com/niranjan8129&gt;@niranjan8129&lt;/denchmark-link&gt;
 Please open a new issue with details of issue and a simple standalone code to reproduce the issue. thanks!
		</comment>
	</comments>
</bug>