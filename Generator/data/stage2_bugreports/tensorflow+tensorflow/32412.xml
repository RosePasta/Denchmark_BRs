<bug id='32412' author='faizanahemad' open_date='2019-09-11T06:28:32Z' closed_time='2020-03-20T20:53:32Z'>
	<summary>[TF 2.0.0-rc0] Keras Model subclassing `dynamic=True` throws Error. Possible Regression bug of rc0</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):

Mac OSX 10.13.6, intel i7, MacBook Pro (Retina, 13-inch, Early 2015), Intel Iris Graphics 6100 1536 MB,
Google Colab (Both CPU and GPU)


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): Binary (pip)
TensorFlow version (use command below): 2.0.0-rc0
 pip install tensorflow==2.0.0-rc0
Python version: 3.7.3
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: NA
GPU model and memory: Intel Iris Graphics 6100 1536 MB (Stock Intel i7 CPU bundled)

Describe the current behavior
In 2.0.0-rc0, While using Model Subclassing of tf,keras.Model and passing dynamic=True. Then when I call model.fit it throws AttributeError: 'NoneType' object has no attribute 'dtype'
Describe the expected behavior
model.fit should not throw any error. Note this was working fine in 2.0.0-beta1
Code to reproduce the issue
import numpy as np
import tensorflow as tf
import os

print(tf.__version__)


class ConvBn2D(tf.keras.Model):
    def __init__(self, c_out, kernel_size=3):
        super().__init__()
        self.conv = tf.keras.layers.Conv2D(filters=c_out, kernel_size=kernel_size,
                                           strides=1, padding="SAME",
                                           use_bias=False)
        self.bn = tf.keras.layers.BatchNormalization(momentum=0.9, epsilon=1e-7)

    def call(self, inputs):
        res = tf.nn.relu(self.bn(self.conv(inputs)))
        return res


class FNet(tf.keras.Model):
    def __init__(self, start_kernels=64, weight=0.125, **kwargs):
        super().__init__(**kwargs)
        c = start_kernels
        self.max_pool = tf.keras.layers.MaxPooling2D()
        self.init_conv_bn = ConvBn2D(c, kernel_size=3)
        self.c0 = ConvBn2D(c, kernel_size=3)

        self.c1 = ConvBn2D(c * 2, kernel_size=3)
        self.c2 = ConvBn2D(c * 2, kernel_size=3)

        self.c3 = ConvBn2D(c * 2, kernel_size=3)
        self.c4 = ConvBn2D(c * 2, kernel_size=3)

        self.pool = tf.keras.layers.GlobalMaxPool2D()
        self.linear = tf.keras.layers.Dense(10, use_bias=False)
        self.weight = weight

    def call(self, x):
        h = self.max_pool(self.c0(self.init_conv_bn(x)))
        h = self.max_pool(self.c2(self.c1(h)))
        h = self.max_pool(self.c4(self.c3(h)))
        h = self.pool(h)
        h = self.linear(h) * self.weight
        return h


(x_train, y_train), (x_test, y_test) = tf.keras.datasets.cifar10.load_data()
train = tf.data.Dataset.from_tensor_slices((x_train, y_train))
train = train.map(lambda x,y:(tf.cast(x,tf.float32),tf.cast(y,tf.int64))).map(lambda x,y:(x/255.0,y)).batch(512)

# model = FNet(start_kernels=8)

model = FNet(start_kernels=8,dynamic=True)

loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
model.compile(optimizer=tf.keras.optimizers.RMSprop(0.01),
              loss=loss)

callbacks=[]
model.fit(train, epochs=2, callbacks=callbacks,verbose=1)
Other info / logs
Run code in 2.0.0-beta1 it works. in rc0 fails.
&lt;denchmark-link:https://colab.research.google.com/drive/1dZaIwlgKRk_8FSKkdyQlwXsT3auqV6VX&gt;Colab Notebook with same issue&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='faizanahemad' date='2019-09-12T06:19:53Z'>
		I have tried on colab with TF version 2.0.0-rc0 and was able to reproduce the issue.However i am not seeing any issue with TF 2.0.0-beta1 .Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/c1083c26816bb17ae69785f8d5a111cc/untitled174.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='faizanahemad' date='2020-03-18T05:59:36Z'>
		this issue is no longer seen with 2.2.0-rc0.
&lt;denchmark-link:https://github.com/faizanahemad&gt;@faizanahemad&lt;/denchmark-link&gt;
 could you please check and close if the issue if it is resolved.
		</comment>
		<comment id='3' author='faizanahemad' date='2020-03-20T20:53:31Z'>
		Closing this now, &lt;denchmark-link:https://github.com/faizanahemad&gt;@faizanahemad&lt;/denchmark-link&gt;
 please feel free to re-open if you still continue to see the issue.
		</comment>
		<comment id='4' author='faizanahemad' date='2020-03-20T20:53:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32412&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32412&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>