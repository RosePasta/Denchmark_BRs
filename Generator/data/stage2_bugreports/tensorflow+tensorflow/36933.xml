<bug id='36933' author='durandg12' open_date='2020-02-20T15:48:08Z' closed_time='2020-04-02T12:44:59Z'>
	<summary>API break between TF2.0.0 and TF2.1.0 on simple Keras code</summary>
	<description>

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.13.6
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.1.0-rc2-17-ge5bf8de410 2.1.0
Python version: v3.6.7:6ec5cf24b7, Oct 20 2018, 03:02:14


I have written a piece of code to answer &lt;denchmark-link:https://stackoverflow.com/questions/48309322/keras-multiply-layer-in-functional-api&gt;this stackoverflow question&lt;/denchmark-link&gt;
 (the code of ), and it worked well with tf2.0.0. But today I tested it coincidentally on tf2.1.0 and it raised an error. From the error message, the root cause seems to be that I didn't provide a  argument on my  calls.
Note that the second piece of code that I wrote in my stackoverflow answer, make_model_2, works with both tf2.0.0 and tf2.1.0.
Describe the expected behavior
There shouldn't be any backward incompatibility between tf2.1.0 and tf2.0.0.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

print(tf.version.VERSION)

toy_data = {'movie': [[0], [1], [0], [1]], 'user': [[10], [12], [12], [10]]}
dataset = tf.data.Dataset.from_tensor_slices(toy_data).batch(2)

for x in dataset:
    print(x)

def make_model():
    inp_movie = tf.keras.Input(shape=(1,))
    inp_user = tf.keras.Input(shape=(1,))
    movie_embedding = tf.keras.layers.Dense(
            units=40, activation=tf.keras.layers.Activation("relu"))(inp_movie)
    user_embedding = tf.keras.layers.Dense(
            units=40, activation=tf.keras.layers.Activation("relu"))(inp_user)
    combined = tf.concat([movie_embedding, user_embedding], 1)
    output = tf.keras.layers.Dense(
            units=1, activation=tf.keras.layers.Activation("sigmoid"))(combined)
    model = tf.keras.Model(inputs=[inp_movie, inp_user], outputs=output)
    return model

model = make_model()

for x in dataset:
    print(model(x))
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
&lt;ipython-input-1-cf28ddc4e239&gt; in &lt;module&gt;
     25 
     26 for x in dataset:
---&gt; 27     print(model(x))

~/path/to/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)
    820           with base_layer_utils.autocast_context_manager(
    821               self._compute_dtype):
--&gt; 822             outputs = self.call(cast_inputs, *args, **kwargs)
    823           self._handle_activity_regularization(inputs, outputs)
    824           self._set_mask_metadata(inputs, outputs, input_masks)

~/path/to/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py in call(self, inputs, training, mask)
    715     return self._run_internal_graph(
    716         inputs, training=training, mask=mask,
--&gt; 717         convert_kwargs_to_constants=base_layer_utils.call_context().saving)
    718 
    719   def compute_output_shape(self, input_shape):

~/path/to/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py in _run_internal_graph(self, inputs, training, mask, convert_kwargs_to_constants)
    820       # list. Matches dict keys to input names.
    821       inputs = [
--&gt; 822           inputs[inp._keras_history.layer.name] for inp in self._nested_inputs
    823       ]
    824     else:

~/path/to/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py in &lt;listcomp&gt;(.0)
    820       # list. Matches dict keys to input names.
    821       inputs = [
--&gt; 822           inputs[inp._keras_history.layer.name] for inp in self._nested_inputs
    823       ]
    824     else:

KeyError: 'input_1'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='durandg12' date='2020-02-25T10:42:43Z'>
		please find code run on &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/6fb4ef7e0a9c09e6d63bfd5e7dc3467f/untitled58.ipynb#scrollTo=BKeM8-zXlC5V&gt;TF2.0&lt;/denchmark-link&gt;
 [where it runs fine] and &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/5c01898963a04578dc23874d7cb708fc/untitled59.ipynb&gt;nightly&lt;/denchmark-link&gt;
, the error persist in nightly.
		</comment>
		<comment id='2' author='durandg12' date='2020-03-21T16:16:22Z'>
		&lt;denchmark-link:https://github.com/durandg12&gt;@durandg12&lt;/denchmark-link&gt;
 This is was resolved in recent . I ran your code with  and I don't see any issues. Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/189e26ad5f4b25fc34774cfe68142ead/untitled59.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Please close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='3' author='durandg12' date='2020-04-02T12:44:59Z'>
		Hello, I have tried your notebook and the issue  seems indeed closed. Thanks.
		</comment>
		<comment id='4' author='durandg12' date='2020-04-02T12:45:01Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36933&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36933&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>