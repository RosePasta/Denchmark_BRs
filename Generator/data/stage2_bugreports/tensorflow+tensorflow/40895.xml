<bug id='40895' author='aroig' open_date='2020-06-28T17:24:03Z' closed_time='2020-10-31T00:18:38Z'>
	<summary>nested gradients for convolution layer fail under tf.function</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no
TensorFlow installed from (source or binary): pip tf_nightly
TensorFlow version (use command below): v1.12.1-35353-gcbb94efa58 2.5.0-dev20200628
Python version:3.6.9
Bazel version (if compiling from source): -
GCC/Compiler version (if compiling from source): -
CUDA/cuDNN version: 10.1
GPU model and memory: GeForce GTX 1050 Ti with Max-Q 4 Gb

Describe the current behavior
The code below works in eager mode, but fails with the following error if using tf.function
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "bugreport.py", line 55, in &lt;module&gt;
    value = func(x)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py", line 780, in __call__
    result = self._call(*args, **kwds)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py", line 823, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py", line 697, in _initialize
    *args, **kwds))
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/function.py", line 2870, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/function.py", line 3227, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/function.py", line 3089, in _create_graph_function
    capture_by_value=self._capture_by_value),
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/func_graph.py", line 986, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py", line 600, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "bugreport.py", line 48, in func
    grads = tape.gradient(loss, variables)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py", line 1073, in gradient
    unconnected_gradients=unconnected_gradients)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/imperative_grad.py", line 77, in imperative_grad
    compat.as_str(unconnected_gradients.value))
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py", line 162, in _gradient_function
    return grad_fn(mock_op, *out_grads)
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/ops/nn_grad.py", line 50, in _Conv2DBackpropInputGrad
    strides=op.get_attr("strides"),
  File "/home/abdo/tmp/venv/lib/python3.6/site-packages/tensorflow/python/eager/backprop.py", line 121, in get_attr
    raise KeyError(attr)
KeyError: 'strides'
&lt;/denchmark-code&gt;

Describe the expected behavior
I would expect this code to work the same under eager mode or wrapped with tf.function.
Standalone code to reproduce the issue
import tensorflow as tf

shape = (2, 3, 3, 5, 7)
init = tf.random.normal(shape=shape, dtype=tf.float32)
weights = tf.Variable(initial_value=init, trainable=True, shape=shape, dtype=tf.float32)

def conv(x):
    kernel = tf.reshape(tf.eye(3 * 3, dtype=x.dtype), shape=(3, 3, 1, 3 * 3))

    x = tf.reshape(x, shape=(2 * 5, 1, 4, 4))
    x = tf.nn.conv2d(x, kernel, strides=(1,1), padding='SAME', data_format='NCHW')
    x = tf.reshape(x, shape=(2, 5 * 3 * 3, 4 * 4))

    W = tf.reshape(weights, shape=(2, 3 * 3, 5, 7))
    W = tf.transpose(W, perm=[0, 2, 1, 3])
    W = tf.reshape(W, shape=(2, 5 * 3 * 3, 7))
    
    y = tf.linalg.matmul(W, x, transpose_a=True)
    y = tf.reshape(y, shape=(2, 7, 4, 4))
    y = tf.square(y)

    return y

def func_flat(x_flat):
    x_unflat = tf.reshape(x_flat, shape=(2, 5, 4, 4))

    with tf.GradientTape() as tape:
        tape.watch(x_unflat)
        y = conv(x_unflat)
        u = tf.reduce_sum(y, axis=[-3, -2, -1])
        u = tf.reshape(u, shape=(2, 1))

    jac = tape.batch_jacobian(u, x_unflat)
    return jac

variables = [weights]

@tf.function(autograph=False)
def func(x):
    with tf.GradientTape() as tape:
        tape.watch(weights)

        y_flat = func_flat(x)
        loss = tf.reduce_sum(tf.square(y_flat))

    grads = tape.gradient(loss, variables)

    return tf.reduce_sum(grads)


x = tf.random.normal(shape=(2, 5 * 4 * 4), dtype=tf.float32)

value = func(x)
print(value)
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='aroig' date='2020-06-29T17:09:17Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  yes, I forgot to mention it in the report, there is some amount of non-determinism. sometimes it reports KeyError on strides, sometimes on the explicit_paddings, but the cause of the error seems to be the same I reported.
		</comment>
		<comment id='2' author='aroig' date='2020-06-29T17:48:23Z'>
		Also, let me clarify that this requires a notebook with GPU. If we remove the @tf.function(autograph=False) line, it works as expected on gpu, but would complain about an unrelated thing on cpu: no Conv2D kernel in the NCHW order.
		</comment>
		<comment id='3' author='aroig' date='2020-06-30T15:47:46Z'>
		I ran the code on different versions of tf and the error is different as reported, please find the gist here &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/3ba4a2f8f9f8f220fcee89398adfc6cf/untitled246.ipynb&gt;for nightly&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/135221a048088eedc9ab3d638e2f934e/untitled246.ipynb&gt;1.12&lt;/denchmark-link&gt;
,
		</comment>
		<comment id='4' author='aroig' date='2020-06-30T16:05:45Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 As I mentioned before, the error on the nightly gist above is almost the same. If you repeat the execution several times it changed back and forth between KeyError on strides, explicit_paddings or dilations.
The stack trace is identical. See an other execution on this &lt;denchmark-link:https://colab.research.google.com/drive/1v9ge0nrS8hpe5EChn251TNUeOXRcEKvw#scrollTo=SRWRfyFm8Zy9&gt;gist&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='aroig' date='2020-10-31T00:18:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40895&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40895&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='aroig' date='2020-11-23T23:53:01Z'>
		Hi,
Any update on this?
&lt;denchmark-link:https://github.com/aroig&gt;@aroig&lt;/denchmark-link&gt;
 did you find a solution?
		</comment>
		<comment id='7' author='aroig' date='2020-12-01T22:07:08Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/45063&gt;#45063&lt;/denchmark-link&gt;
 might be a duplicate, &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 you could consider that reproduction too.
		</comment>
	</comments>
</bug>