<bug id='33811' author='gekowa' open_date='2019-10-29T07:41:28Z' closed_time='2019-11-27T11:24:24Z'>
	<summary>Got "Data adapters should be mutually exclusive for handling inputs. Found multiple adapters to handle" error when calling `model.fit` with ImageDataGenerator</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04 aarch64
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): source
TensorFlow version (use command below) 2.0.0
Python version: 3.6.8
Bazel version (if compiling from source): 0.29.0
GCC/Compiler version (if compiling from source): 7.4
CUDA/cuDNN version: N/A
GPU model and memory: N/A

Describe the current behavior
When fitting a model with ImageDataGenerator, it raises this error "Data adapters should be mutually exclusive for handling inputs. Found multiple adapters 'GeneratorDataAdapter', 'KerasSequenceAdapter' to handle".
Describe the expected behavior

Log warning message if multiple data adapters found, instead of raising an error
Use the first available data adapter


Please refer to link below:
&lt;denchmark-link:https://colab.research.google.com/github/tensorflow/examples/blob/master/courses/udacity_intro_to_tensorflow_for_deep_learning/l05c02_dogs_vs_cats_with_augmentation.ipynb&gt;https://colab.research.google.com/github/tensorflow/examples/blob/master/courses/udacity_intro_to_tensorflow_for_deep_learning/l05c02_dogs_vs_cats_with_augmentation.ipynb&lt;/denchmark-link&gt;

I connected to my local jupyter instance with Colab UI.
BATCH_SIZE = 100
IMG_SHAPE  = 150

image_gen = ImageDataGenerator(rescale=1./255, horizontal_flip=True)
train_data_gen = image_gen.flow_from_directory(batch_size=BATCH_SIZE,
                                               directory=train_dir,
                                               shuffle=True,
                                               target_size=(IMG_SHAPE,IMG_SHAPE))
val_data_gen = image_gen.flow_from_directory(batch_size=BATCH_SIZE,
                                               directory=val_dir,
                                               shuffle=True,
                                               target_size=(IMG_SHAPE,IMG_SHAPE))
model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(150, 150, 3)),
    tf.keras.layers.MaxPooling2D(2, 2),

    tf.keras.layers.Conv2D(64, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),

    tf.keras.layers.Conv2D(128, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),

    tf.keras.layers.Conv2D(128, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),

    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(512, activation='relu'),
    tf.keras.layers.Dense(2, activation='softmax')
])
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
epochs = 100
model.fit(
    train_data_gen,
    steps_per_epoch=int(np.ceil(total_train / float(BATCH_SIZE))),
    epochs=epochs,
    validation_data=val_data_gen, 
    validation_steps=int(np.ceil(total_val / float(BATCH_SIZE)))
)
To avoid this issue, I'll have to manually exclude "KerasSequenceAdapter" before calling model.fit
from tensorflow.python.keras.engine import data_adapter
from tensorflow.python.keras.engine.data_adapter import ListsOfScalarsDataAdapter
from tensorflow.python.keras.engine.data_adapter import TensorLikeDataAdapter
from tensorflow.python.keras.engine.data_adapter import GenericArrayLikeDataAdapter
from tensorflow.python.keras.engine.data_adapter import DatasetAdapter
from tensorflow.python.keras.engine.data_adapter import GeneratorDataAdapter
from tensorflow.python.keras.engine.data_adapter import CompositeTensorDataAdapter

data_adapter.ALL_ADAPTER_CLS = [
 ListsOfScalarsDataAdapter,
 TensorLikeDataAdapter,
 GenericArrayLikeDataAdapter,
 DatasetAdapter,
 GeneratorDataAdapter,
#  tensorflow.python.keras.engine.data_adapter.KerasSequenceAdapter,
 CompositeTensorDataAdapter      
]

data_adapter.ALL_ADAPTER_CLS
Other info / logs
N/A.
	</description>
	<comments>
		<comment id='1' author='gekowa' date='2019-11-01T20:11:31Z'>
		Humm, seems that the Image Iterator class implements the interface for both generator and keras sequence object. Let me take a closer look to fix the issue.
		</comment>
		<comment id='2' author='gekowa' date='2019-11-14T18:09:21Z'>
		Hey, I think we did some recent update for data_adapter which might fix this issue. Could u have a try with latest nightly?
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/ac20030c96d37e980333b604402ef6dba48ef5e2&gt;ac20030&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='gekowa' date='2019-11-15T02:14:49Z'>
		Sure I will, thanks btw~
		</comment>
		<comment id='4' author='gekowa' date='2019-11-27T11:24:24Z'>
		&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 The fix works! Thank you!
		</comment>
		<comment id='5' author='gekowa' date='2019-11-27T11:24:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33811&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33811&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='gekowa' date='2020-07-11T15:18:14Z'>
		&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
, I'm having this same problem under TF 2.2, TF2.3, and tf-nightly (as of yesterday). The problem seems to be identical in description to that of &lt;denchmark-link:https://github.com/gekowa&gt;@gekowa&lt;/denchmark-link&gt;
. Any advice? Here is my system info...
System information
&lt;denchmark-code&gt;Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.2.0 (also tried 2.3 and tf-nightly)
Python version: 3.6.9
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.1 / 7.6.5
GPU model and memory: RTX 2080 Super, 8 GB
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>