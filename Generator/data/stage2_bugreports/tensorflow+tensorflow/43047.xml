<bug id='43047' author='lynochka' open_date='2020-09-08T14:01:38Z' closed_time='2020-09-08T16:33:42Z'>
	<summary>Cardinality returns unknown for a dataset with (string, float), but also for dataset with float variable alone</summary>
	<description>
Cardinality returns unknown from a dataset with (string, float) but also for dataset with float variable alone.
I created data stored in a csv files without header representing text and a float number corresponding to this text (NALU like dataset).
I susptect that it is not possible to find the size of the data since the first column is a string it gives me an UNKNOWN cardinality (-2) back.
Dataset creation:
import tensorflow_datasets as tfds
import tensorflow as tf

with open("file.csv", "w") as f:
    for text, number in [("one", 1.0), ("two", 2.0)]:
        f.write(f"{text:s}, {number:.1f}\n")

ds = tf.data.experimental.CsvDataset(
    filenames="file.csv", record_defaults=[tf.string, tf.float32], header=False)

tf.data.experimental.cardinality(ds)
One would expect that when creating a dataset with the float column only, or mapping the dataset to the target only, the cardinality would be returned properly, but the next mapping stil has UNKNOWN cardinality.
# check first method:
with open("file1.csv", "w") as f:
    for number in [1.0, 2.0]:
        f.write(f"{number:.1f}\n")

ds1 = tf.data.experimental.CsvDataset(
    filenames="file1.csv", record_defaults=[tf.float32], header=False)

tf.data.experimental.cardinality(ds1)
#returns -2

# check second method
def get_target_pyfn(text, target):
    target = tf.py_function(lambda text, target: target, inp=[text, target], Tout=tf.float32)
    target.set_shape([])
    return target

tf.data.experimental.cardinality( ds.map(get_target_pyfn))
#returns -2

tensorflow version = 2.3.0
Python virtual environment is setup with pyproject.toml in &lt;denchmark-link:https://github.com/lynochka/parser/blob/bf2a006bee210b62552618dceb181101655753ff/pyproject.toml&gt;https://github.com/lynochka/parser/blob/bf2a006bee210b62552618dceb181101655753ff/pyproject.toml&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='lynochka' date='2020-09-08T14:06:35Z'>
		&lt;denchmark-link:https://github.com/lynochka&gt;@lynochka&lt;/denchmark-link&gt;

Please fill in issue template for us to help. tf version, simple stand alone code to replicate the issue faced or share a colab gist with issue reported with error logs.
		</comment>
		<comment id='2' author='lynochka' date='2020-09-08T14:13:55Z'>
		Check &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/30529#issuecomment-510814608&gt;#30529 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='lynochka' date='2020-09-08T14:15:19Z'>
		Update the issue with tensorflow = 2.3.0, the code is standalone now that the imports are added
		</comment>
		<comment id='4' author='lynochka' date='2020-09-08T14:17:04Z'>
		From the link you gave, looks like it is less of a bug and more of a feature request ?
		</comment>
		<comment id='5' author='lynochka' date='2020-09-08T14:18:07Z'>
		
tf.data.experimental.UNKNOWN_CARDINALITY if the analysis fails to determine the number of elements in dataset (e.g. when the dataset source is a file).

		</comment>
		<comment id='6' author='lynochka' date='2020-09-08T14:30:59Z'>
		If you see I've just quoted the official documentation.
It Is by design.
		</comment>
		<comment id='7' author='lynochka' date='2020-09-08T16:08:42Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 Can we close this?
		</comment>
		<comment id='8' author='lynochka' date='2020-09-08T16:33:42Z'>
		Correct, this is working as intended. If you wish to compute the cardinality of a dataset whose cardinality is not known statically (and thus requires iterating over the entire dataset), you can do so via:
&lt;denchmark-code&gt;num_elements = 0
for _ in dataset:
  num_elements = num_elements + 1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='lynochka' date='2020-09-08T16:33:44Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43047&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43047&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>