<bug id='33255' author='arunumd' open_date='2019-10-11T16:04:39Z' closed_time='2020-02-21T18:49:19Z'>
	<summary>tcmalloc: large alloc on  Colab and Tensorflow killed on local machine due to over consumption of RAM</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04 LTS
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): Conda
TensorFlow version (use command below): tensorflow-gpu version 1.9.0
Python version: 3.6
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): 7.4.0
CUDA/cuDNN version:  V10.1.243
GPU model and memory: Quadro RTX 5000; and 16 GB RAM

Describe the current behavior
The tensorflow API always tries to consume the maximum RAM even when I have a GPU and the kernel gets killed while training my deep learning algorithm. I referred online on multiple sources (&lt;denchmark-link:https://stackoverflow.com/questions/45077571/tensorflow-training-killed-by-system&gt;1&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://stackoverflow.com/questions/42205205/tensorflow-python-script-getting-killed&gt;2&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://stackoverflow.com/questions/49442670/my-process-being-killed-the-moment-it-start-training-tensorflow-object-detectio&gt;3&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://stackoverflow.com/questions/45150773/tensorflow-object-detection-training-killed-resource-starvation&gt;4&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/models/issues/3497&gt;5&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29365&gt;6&lt;/denchmark-link&gt;
) and tried the following things :

Reduce the batch size
Change the optimizer from adam to momentum

However, none of these suggestions helped to solve the problem.
Describe the expected behavior
Be able to train without over consumption of memory and not cause the tensorflow kernel to get killed
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
I ran the following code in an ipython notebook in both my local machine (local GPU) and Google Colab :
&lt;denchmark-code&gt;!git clone https://github.com/charlesq34/pointnet.git
cd pointnet/sem_seg/
!sh download_data.sh
!python train.py --log_dir log6 --test_area 6
&lt;/denchmark-code&gt;

Other info / logs
The error log is very long and hence I am attaching it in a separate text file here :
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3718556/ERROR_LOG.txt&gt;ERROR_LOG.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='arunumd' date='2019-10-14T09:30:02Z'>
		&lt;denchmark-link:https://github.com/arunumd&gt;@arunumd&lt;/denchmark-link&gt;
, You would like to try with latest Tenosrflow version 2.0.0. Thanks!
		</comment>
		<comment id='2' author='arunumd' date='2019-10-14T14:46:05Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 I tried to install tensorflow 2 using the following command  and then ran the ipython notebook. But the symptoms still don't seem to change. I get the same error still. As you can see below, the  error still persists and there is also a new error related to lack of compatibility between tensorflow2 and tensorflow1
&lt;denchmark-code&gt;tcmalloc: large alloc 3477749760 bytes == 0xdbcc6000 @  0x7fdc37e4b1e7 0x7fdc33bf3d51 0x7fdc33c58a84 0x7fdc33c58bc3 0x7fdc33cf8ade 0x7fdc33cf9344 0x7fdc33cf9492 0x4f8925 0x4f98c7 0x4f6128 0x4f9023 0x6415b2 0x64166a 0x643730 0x62b26e 0x4b4cb0 0x7fdc37a48b97 0x5bdf6a
(23585, 4096, 9)
(23585, 4096)
tcmalloc: large alloc 2992029696 bytes == 0x1b0d8c000 @  0x7fdc37e4b1e7 0x7fdc33bf3d51 0x7fdc33c58a84 0x7fdc33c58bc3 0x7fdc33ce618a 0x7fdc33ce65d8 0x4f9ba9 0x4f6128 0x4f9023 0x6415b2 0x64166a 0x643730 0x62b26e 0x4b4cb0 0x7fdc37a48b97 0x5bdf6a
(20291, 4096, 9) (20291, 4096)
(3294, 4096, 9) (3294, 4096)
Traceback (most recent call last):
  File "train.py", line 276, in &lt;module&gt;
    train()
  File "train.py", line 126, in train
    pointclouds_pl, labels_pl = placeholder_inputs(BATCH_SIZE, NUM_POINT)
  File "/content/pointnet/sem_seg/model.py", line 13, in placeholder_inputs
    pointclouds_pl = tf.placeholder(tf.float32,
AttributeError: module 'tensorflow' has no attribute 'placeholder'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='arunumd' date='2019-10-15T10:22:45Z'>
		&lt;denchmark-link:https://github.com/arunumd&gt;@arunumd&lt;/denchmark-link&gt;
, Tensorflow supports manual device placement and limiting gpu memory growth. Please refer &lt;denchmark-link:https://www.tensorflow.org/guide/gpu#manual_device_placement&gt;this link&lt;/denchmark-link&gt;
. Please let us know if that helps. Thanks!
		</comment>
		<comment id='4' author='arunumd' date='2019-10-17T14:10:06Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 After running through a bunch of problems with tensorflow during initial development stage, we felt it was better to look for another reliable API. Hence we made a decision to move to PyTorch. I will be glad to look into this problem again later when I will have time. For now the issue is not resolved.
		</comment>
		<comment id='5' author='arunumd' date='2019-10-17T14:10:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33255&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33255&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='arunumd' date='2019-10-29T20:49:11Z'>
		&lt;denchmark-link:https://github.com/arunumd&gt;@arunumd&lt;/denchmark-link&gt;
 In Tensorflow 2.0, there is no placeholder. If you are using TF 1.x code, You need to update your TF1.x code to TF2.0 code and then run it.
Please take a look at this &lt;denchmark-link:https://stackoverflow.com/questions/56226284/why-do-i-get-attributeerror-module-tensorflow-has-no-attribute-placeholder&gt;question.&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='arunumd' date='2019-11-05T21:47:32Z'>
		&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 That suggestion sounds irrelevant to the problem. As per the original description, the stated Tensorflow version is 1.x. So technically there is no necessity to upgrade code to TF 2.x when the installed Tensorflow version is 1.x The code is supposed to run properly as a Tensorflow 1.x code. But it clearly doesn't (neither in 1.x nor in 2.x)
		</comment>
		<comment id='8' author='arunumd' date='2019-11-08T19:19:53Z'>
		
I tried to install tensorflow 2 using the following command pip install --upgrade tensorflow==2.0.0-rc0 and then ran the ipython notebook. But the symptoms still don't seem to change. I get the same error still. As you can see below, the tcmalloc error still persists and there is also a new error related to lack of compatibility between tensorflow2 and tensorflow1

I was referring this comment &lt;denchmark-link:https://github.com/arunumd&gt;@arunumd&lt;/denchmark-link&gt;
 as there is no concept of palce holders in TF2.0
		</comment>
		<comment id='9' author='arunumd' date='2019-11-08T19:36:11Z'>
		

I tried to install tensorflow 2 using the following command pip install --upgrade tensorflow==2.0.0-rc0 and then ran the ipython notebook. But the symptoms still don't seem to change. I get the same error still. As you can see below, the tcmalloc error still persists and there is also a new error related to lack of compatibility between tensorflow2 and tensorflow1

I was referring this comment @arunumd as there is no concept of palce holders in TF2.0

&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 suggested I try running the same code with TF2.0. So I tried. It didn't work neither. I am not sure if &lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 also expected me to refactor the whole code ? I do not want to refactor anything.. I am interested in knowing whether or not TF1.x is capable of running this code without the  error ? Why is this error being caused ? I think we have to focus on the root problem..
		</comment>
		<comment id='10' author='arunumd' date='2019-11-16T00:55:15Z'>
		We cannot exactly trace what the error is but please take a look at this issue &lt;denchmark-link:https://stackoverflow.com/questions/9077457/how-to-trace-tcmalloc-large-alloc&gt;here&lt;/denchmark-link&gt;
 and try to replicate it.
		</comment>
		<comment id='11' author='arunumd' date='2019-11-20T23:50:21Z'>
		Closing this issue due to the lack of recent activity. Please add additional comments and we can open this issue again. Thanks!
		</comment>
		<comment id='12' author='arunumd' date='2020-02-21T18:49:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33255&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33255&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='arunumd' date='2020-02-21T18:50:40Z'>
		We are closing this issue for now due to lack of activity. Please comment if this is still an issue for you. Thanks!
		</comment>
		<comment id='14' author='arunumd' date='2020-03-19T22:52:33Z'>
		&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 i faced the same issue .
tensorflow-gpu==1.15.0
keras==2.2.4
in colab
		</comment>
		<comment id='15' author='arunumd' date='2020-06-13T19:07:24Z'>
		same here.
torch==1.4.0
in colab
		</comment>
		<comment id='16' author='arunumd' date='2020-06-13T19:20:18Z'>
		I am interested in seeing a long term solution for this issue which seems to be quite common for many people who are using Tensorflow 1.x. For what it is worth based on the face value of it, it seems like an API issue which cannot be fixed by users. This issue is not resolved until it is proven that there is a permanent fix to this problem.
		</comment>
	</comments>
</bug>