<bug id='14292' author='ghendrymsft' open_date='2017-11-06T15:10:05Z' closed_time='2018-04-26T18:29:20Z'>
	<summary>Can't import contrib.boosted_trees</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
== cat /etc/issue ===============================================
Linux 5508912-0913 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014 x86_64 x86_64 x86_64 GNU/Linux
VERSION="16.04.3 LTS (Xenial Xerus)"
VERSION_ID="16.04"
VERSION_CODENAME=xenial

== are we in docker =============================================
No
== compiler =====================================================
c++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
== uname -a =====================================================
Linux 5508912-0913 4.4.0-43-Microsoft &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/1&gt;#1&lt;/denchmark-link&gt;
-Microsoft Wed Dec 31 14:42:53 PST 2014 x86_64 x86_64 x86_64 GNU/Linux
== check pips ===================================================
numpy (1.13.3)
protobuf (3.4.0)
tensorflow (1.4.0)
tensorflow-tensorboard (0.4.0rc1)
== check for virtualenv =========================================
False
== tensorflow import ============================================
tf.VERSION = 1.4.0
tf.GIT_VERSION = v1.4.0-0-gd752244
tf.COMPILER_VERSION = v1.4.0-0-gd752244
Sanity check: array([1], dtype=int32)
== env ==========================================================
LD_LIBRARY_PATH is unset
DYLD_LIBRARY_PATH is unset
== nvidia-smi ===================================================
../../tf_env_collect.sh: line 105: nvidia-smi: command not found
== cuda libs  ===================================================
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Can't import the boosted_trees module.
Boosted_trees isn't properly listed in contrib/init.py, so I get:



import tensorflow as tf
est = tf.contrib.boosted_trees.estimator_batch.estimator.GradientBoostedDecisionTreeClassifier()
Traceback (most recent call last):
File "", line 1, in 
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/lazy_loader.py", line 54, in getattr
return getattr(module, item)
AttributeError: 'module' object has no attribute 'boosted_trees'



&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

See above.
	</description>
	<comments>
		<comment id='1' author='ghendrymsft' date='2017-11-06T15:59:50Z'>
		&lt;denchmark-link:https://github.com/yk5&gt;@yk5&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tkoeppe&gt;@tkoeppe&lt;/denchmark-link&gt;
 Any particular reason why boosted_trees wouldn't be listed in ?
		</comment>
		<comment id='2' author='ghendrymsft' date='2017-11-06T16:12:57Z'>
		ask thomaswc@, nponomoreva@, or soroush@.  There may still be some loose ends left in the migration from learning/lib to third_party.
		</comment>
		<comment id='3' author='ghendrymsft' date='2017-11-06T17:22:47Z'>
		You can import the classifier the way in the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/boosted_trees/examples/boston.py#L42&gt;examples&lt;/denchmark-link&gt;
 like:
from tensorflow.contrib.boosted_trees.estimator_batch.estimator import GradientBoostedDecisionTreeRegressor
But I'm asking the team about whether there's any reason of being made not accessible directly.
		</comment>
		<comment id='4' author='ghendrymsft' date='2017-11-06T17:51:41Z'>
		Understood.  It's worth pointing out that using the 'nightly-gpu' container from the &lt;denchmark-link:https://hub.docker.com/r/tensorflow/tensorflow/tags/&gt;docker hub&lt;/denchmark-link&gt;
, I can't import the GBDTClassifier or the estimator python module:
Traceback (most recent call last):
File "/mnt/batch/tasks/shared/LS_root/mounts/azfileshare/scripts/train.py", line 9, in 
import models
File "/mnt/batch/tasks/shared/LS_root/mounts/azfileshare/scripts/models.py", line 4, in 
from tensorflow.contrib.boosted_trees.estimator_batch.estimator import GradientBoostedDecisionTreeClassifier
ImportError: No module named estimator
Using the '1.4.0-rc1' image works fine. I don't know if this is indicative of a problem introduced since the 1.4.0-rc1 image was cooked or not.  It says it was updated 4 days ago.
		</comment>
		<comment id='5' author='ghendrymsft' date='2017-11-06T18:16:01Z'>
		I don't have proper GPU/docker settings, so cannot test out that nightly, but can you try 1.4.0-gpu instead of rc1?
1.4.0 is released last week, and the import works fine with non-gpu pip installation (not the docker).
		</comment>
		<comment id='6' author='ghendrymsft' date='2017-11-06T21:28:17Z'>
		I think the issue is that with version 1.5 some of the python files are not included in the release. We have to investigate and add the proper dependencies. (Probably from boosted_trees:init_py to estimator_batch/estimator).
I just tried the nightly docker image and verified that in estimator_batch directory it only has:
__init__.py  __init__.pyc  custom_export_strategy.py  custom_export_strategy.pyc  trainer_hooks.py  trainer_hooks.pyc
		</comment>
		<comment id='7' author='ghendrymsft' date='2017-12-20T19:19:15Z'>
		It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='8' author='ghendrymsft' date='2018-01-04T19:11:04Z'>
		It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='9' author='ghendrymsft' date='2018-01-19T19:41:34Z'>
		Well, I wrote a response but it seems lost so writing again (please forgive if there appears a dupe).
I confirmed that the command I put on November 6 works for both tensorflow-1.4.1 and tensorflow-gpu-1.4.1, which are the latest versions.
from tensorflow.contrib.boosted_trees.estimator_batch.estimator import GradientBoostedDecisionTreeRegressor
Maybe the nightly would have been funky at the moment as I mentioned.
Closing the issue.
		</comment>
		<comment id='10' author='ghendrymsft' date='2018-01-19T19:50:43Z'>
		That wasn't what was asked.  I wanted:
import tensorflow as tf
est = tf.contrib.boosted_trees.estimator_batch.estimator.GradientBoostedDecisionTreeRegressor()
I realize there isn't a big difference, it's just more consistent to not have to say:

Ok, I can import other estimators with tf.contrib....
Huh, boosted_trees isn't found in tf.contrib, I wonder why


Oh, now I realize that I have to explicitly import it, unlike all the other estimators.

		</comment>
		<comment id='11' author='ghendrymsft' date='2018-01-19T20:06:58Z'>
		Yes, my last comment is to your response (Nov 6 9:51AM PST) : "in
nightly-gpu, I can't even explicitly import it" which sounds like a big
issue.
I confirmed that it's not the issue of the released tensorflow-gpu (nor
tensorflow) package.

For another issue you raised, many contrib libraries are not preloaded,
which is obvious for stability, and boosted_trees is one of them.
The reason of excluding boosted_trees had been Mac test failures, as I
know. I think the failures are resolved but it might take time to put it to
the list of preloaded packages.

If you want to keep the issue open for that reason, that's fine, and the
issue becomes
 "a feature request to include contrib.boosted_trees as a preloaded
package".
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Fri, Jan 19, 2018 at 11:53 AM Gilbert Hendry ***@***.***&gt; wrote:
 That wasn't what was asked. I wanted:
 import tensorflow as tf
 est =
 tf.contrib.boosted_trees.estimator_batch.estimator.GradientBoostedDecisionTreeRegressor()

 I realize there isn't a big difference, it's just more consistent to not
 have to say:

    1. Ok, I can import other estimators with tf.contrib....
    2. Huh, boosted_trees isn't found in tf.contrib, I wonder why
    3.
    4. Oh, now I realize that I have to explicitly import it, unlike all
    the other estimators.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#14292 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AXihKvVL2BVT2eoi4gpLlhJabO9YiwIfks5tMPKvgaJpZM4QTYbC&gt;
 .



		</comment>
		<comment id='12' author='ghendrymsft' date='2018-01-26T07:50:32Z'>
		the command "from tensorflow.contrib.boosted_trees.estimator_batch.estimator import GradientBoostedDecisionTreeRegressor" also couldn't work in Windows.
it raised error:
ImportError: No module named 'tensorflow.contrib.boosted_trees.python.training'
could it be fixed?
		</comment>
		<comment id='13' author='ghendrymsft' date='2018-02-09T19:13:59Z'>
		Nagging Awaiting TensorFlower: It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='14' author='ghendrymsft' date='2018-02-23T18:44:41Z'>
		
the command "from tensorflow.contrib.boosted_trees.estimator_batch.estimator import GradientBoostedDecisionTreeRegressor" also couldn't work in Windows.

even using ubuntu bash on windows doesn't work
		</comment>
		<comment id='15' author='ghendrymsft' date='2018-03-10T13:09:22Z'>
		Nagging Awaiting TensorFlower: It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='16' author='ghendrymsft' date='2018-03-13T00:54:56Z'>
		&lt;denchmark-link:https://github.com/sshrdp&gt;@sshrdp&lt;/denchmark-link&gt;
 Soroush, I found that the problem got worse since 1.5.0.
Not even Linux python 2.7 can import boosted_trees.
I installed 1.4.1 and 1.5.0 in different virtualenv, and checked the diffs.
$ (cd tf-1.4/lib/python2.7/site-packages/tensorflow/contrib/boosted_trees/estimator_batch &amp;&amp; ls *.py)
custom_export_strategy.py  custom_loss_head.py  estimator.py  .py  model.py  trainer_hooks.py
$ (cd tf-1.5/lib/python2.7/site-packages/tensorflow/contrib/boosted_trees/estimator_batch &amp;&amp; ls *.py)
custom_export_strategy.py  .py  trainer_hooks.py
Many files are taken out in tf-1.5.0, even though I cannot find significant changes regarding BUILD or init.py under boosted_trees between the two versions.
Could it be due to some BUILD file changes like &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/66b1615b6e2783c9ddce27e7b084fcc230c3a594#diff-133d898664bdd5d74926bf66659adb53&gt;this commit&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/966016b7f2382658e7c84baae0596d35f0a49bae#diff-133d898664bdd5d74926bf66659adb53&gt;another&lt;/denchmark-link&gt;
..?
		</comment>
		<comment id='17' author='ghendrymsft' date='2018-03-25T02:45:13Z'>
		&lt;denchmark-link:https://github.com/yk5&gt;@yk5&lt;/denchmark-link&gt;
: Yes indeed, the removal of the deps from  had the effect of removing the files from the PIP package. I think you can restore functionality by adding them back in (in ):
&lt;denchmark-code&gt;py_library(                                                                                                                                                                                                        
    name = "init_py",                                                                                                                                                                                              
    srcs = ["__init__.py"],                                                                                                                                                                                        
    srcs_version = "PY2AND3",                                                                                                                                                                                      
    deps = [                                                                                                                                                                                                       
        "custom_export_strategy",                                                                                                                                                                                  
        ":custom_loss_head",                                                                                                                                                                                       
        ":estimator",                                                                                                                                                                                              
        ":model",                                                                                                                                                                                                  
        ":trainer_hooks",                                                                                                                                                                                          
    ],                                                                                                                                                                                                             
)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='18' author='ghendrymsft' date='2018-03-26T20:31:14Z'>
		&lt;denchmark-link:https://github.com/ghendrymsft&gt;@ghendrymsft&lt;/denchmark-link&gt;
: Could you perhaps try to add  to the dependencies of ? (On top of fixing up what I said in the previous comment, which are already committed at head.)
		</comment>
		<comment id='19' author='ghendrymsft' date='2018-04-04T02:48:37Z'>
		I'm away this week, but will continue to investigate on it later.
At this moment, other platforms should be okay (confirmed on linux with
nightly), but I suspect cmake as the culprit for windows problem.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Tue, Apr 3, 2018, 6:58 PM Rohan Jain ***@***.***&gt; wrote:
 Assigned #14292 &lt;#14292&gt;
 to @yk5 &lt;https://github.com/yk5&gt;.

 —
 You are receiving this because you were assigned.


 Reply to this email directly, view it on GitHub
 &lt;#14292 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AXihKljaQ9d8qO2sTNbwvDOYNvNtgLZ7ks5tlCjXgaJpZM4QTYbC&gt;
 .



		</comment>
		<comment id='20' author='ghendrymsft' date='2018-04-18T12:35:39Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='21' author='ghendrymsft' date='2018-04-24T11:44:52Z'>
		any work around?I need this GradientBoostedDecisionTreeClassifier and could not import it.
ps. I am using tensorflow 1.5.0
		</comment>
		<comment id='22' author='ghendrymsft' date='2018-04-25T16:38:16Z'>
		It should be back in 1.8.0 for Linux/Mac, and you can test it out with 1.8.0rc1.
For Windows, we have some package problem, but it's not easy to find what's the cause. We placed several patches but not successful. I have another, hopefully would more likely fix it this time.
		</comment>
		<comment id='23' author='ghendrymsft' date='2018-05-01T23:28:20Z'>
		Despite the latest fix, I'm afraid TF on Windows will get contrib.boosted_trees in near future, after looking at the CMake documentation.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake#current-known-limitations-1&gt;Known limitation&lt;/denchmark-link&gt;
 section explains that CMake doesn't support tf.load_op_library(), which we use to load custom ops for contrib.boosted_trees (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/boosted_trees/python/ops/boosted_trees_ops_loader.py#L27&gt;link&lt;/denchmark-link&gt;
)
Until that functionality is implemented in CMake, it might not be possible to load contrib.boosted_trees packages properly due to lack of ops.
OTOH, we started to migrate contrib boosted_trees into core, and v0 implementation is pushed to 1.8.0 (e.g. &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/estimator/BoostedTreesClassifier&gt;BoostedTreesClassifier&lt;/denchmark-link&gt;
), so try it out.
Current limitation is that it only accepts bucketized_columns, however other features are being actively developed.
		</comment>
	</comments>
</bug>