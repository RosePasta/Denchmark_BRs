<bug id='33491' author='yxleung' open_date='2019-10-18T02:09:38Z' closed_time='2020-06-10T19:09:09Z'>
	<summary>[TF2.0.0]ValueError: The two structures don't have the same nested structure.</summary>
	<description>
I can run my code in tensorflow==2.0.0b1, but when I update tensorflow to 2.0.0; I got an error;
This is my code:
import tensorflow as tf
from tensorflow import feature_column

print('tf version:', tf.__version__)

feature_description = {
    'h_k_u_watchanch_his': tf.io.VarLenFeature(tf.string),
    'a_gender': tf.io.FixedLenFeature(shape=(1,), dtype=tf.int64),
    'l_label': tf.io.FixedLenFeature([], tf.int64)
}
feature_columns = []
thal = feature_column.categorical_column_with_hash_bucket(
    'h_k_u_watchanch_his', hash_bucket_size=100
)
thal_one_hot = feature_column.embedding_column(thal, dimension=10, combiner='mean')
feature_columns.append(thal_one_hot)

dataSet = tf.data.TFRecordDataset(
    "/Users/lyx/projects/recommend/embedding/tmp/PUSH.TFRecords/dt=20191012/hour=10/part-r-00000")


def _parse_function(serilized_example):
    feature = tf.io.parse_single_example(
        serilized_example,
        feature_description
    )
    label = feature.get('l_label')
    return feature, label


parsed_dataset = dataSet.map(_parse_function)

input1 = tf.keras.Input(shape=(), name='h_k_u_watchanch_his', sparse=True, dtype=tf.string)
input2 = tf.keras.Input(shape=(), name='a_gender', dtype=tf.int64)

input_layers = {'h_k_u_watchanch_his': input1, 'a_gender': input2}
feature_layer = tf.keras.layers.DenseFeatures(feature_columns, name='DenseFeatures')(input_layers)
outputs = tf.keras.layers.Dense(1, activation='sigmoid')(feature_layer)
model = tf.keras.Model(inputs=[input1, input2], outputs=outputs)

model.compile(
    optimizer='adam',
    loss='binary_crossentropy',
    metrics=['accuracy']
)

model.fit(
    x=parsed_dataset,
    validation_data=parsed_dataset,
    epochs=5,
)

loss, accuracy = model.evaluate(parsed_dataset)
print("Accuracy", accuracy)
Error output:
&lt;denchmark-code&gt;tf version: 2.0.0
2019-10-18 09:59:10.095365: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-10-18 09:59:10.118556: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fbcd9c21e00 executing computations on platform Host. Devices:
2019-10-18 09:59:10.118572: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/tensorflow_core/python/util/nest.py", line 318, in assert_same_structure
    expand_composites)
ValueError: The two structures don't have the same nested structure.

First structure: type=TensorSpec str=TensorSpec(shape=(1,), dtype=tf.int64, name=None)

Second structure: type=SparseTensor str=SparseTensor(indices=Tensor("h_k_u_watchanch_his/indices:0", shape=(None, 1), dtype=int64), values=Tensor("h_k_u_watchanch_his/values:0", shape=(None,), dtype=string), dense_shape=Tensor("h_k_u_watchanch_his/shape:0", shape=(1,), dtype=int64))

More specifically: Substructure "type=SparseTensor str=SparseTensor(indices=Tensor("h_k_u_watchanch_his/indices:0", shape=(None, 1), dtype=int64), values=Tensor("h_k_u_watchanch_his/values:0", shape=(None,), dtype=string), dense_shape=Tensor("h_k_u_watchanch_his/shape:0", shape=(1,), dtype=int64))" is a sequence, while substructure "type=TensorSpec str=TensorSpec(shape=(1,), dtype=tf.int64, name=None)" is not

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/lyx/projects/recommend/embedding/tmp/test.py", line 52, in &lt;module&gt;
    epochs=5,
  File "/usr/local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py", line 728, in fit
    use_multiprocessing=use_multiprocessing)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 224, in fit
    distribution_strategy=strategy)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 547, in _process_training_inputs
    use_multiprocessing=use_multiprocessing)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 594, in _process_inputs
    steps=steps)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py", line 2497, in _standardize_user_data
    nest.assert_same_structure(a, b, expand_composites=True)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_core/python/util/nest.py", line 325, in assert_same_structure
    % (str(e), str1, str2))
ValueError: The two structures don't have the same nested structure.

First structure: type=TensorSpec str=TensorSpec(shape=(1,), dtype=tf.int64, name=None)

Second structure: type=SparseTensor str=SparseTensor(indices=Tensor("h_k_u_watchanch_his/indices:0", shape=(None, 1), dtype=int64), values=Tensor("h_k_u_watchanch_his/values:0", shape=(None,), dtype=string), dense_shape=Tensor("h_k_u_watchanch_his/shape:0", shape=(1,), dtype=int64))

More specifically: Substructure "type=SparseTensor str=SparseTensor(indices=Tensor("h_k_u_watchanch_his/indices:0", shape=(None, 1), dtype=int64), values=Tensor("h_k_u_watchanch_his/values:0", shape=(None,), dtype=string), dense_shape=Tensor("h_k_u_watchanch_his/shape:0", shape=(1,), dtype=int64))" is a sequence, while substructure "type=TensorSpec str=TensorSpec(shape=(1,), dtype=tf.int64, name=None)" is not
Entire first structure:
.
Entire second structure:
.

&lt;/denchmark-code&gt;

Looking forward to your reply!
	</description>
	<comments>
		<comment id='1' author='yxleung' date='2019-10-21T05:39:19Z'>
		I am able to reproduce the issue with TF 2.0.0.Please see the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/5453b2363c7e9509292d8cb440236841/untitled212.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='yxleung' date='2019-10-23T05:16:56Z'>
		&lt;denchmark-link:https://github.com/yxleung&gt;@yxleung&lt;/denchmark-link&gt;
, Please provide the  file to verify with TF 2.0.0.beta1. Thanks!
		</comment>
		<comment id='3' author='yxleung' date='2019-10-23T08:35:02Z'>
		
@yxleung, Please provide the dataSet file to verify with TF 2.0.0.beta1. Thanks!

How can I upload the  TFRecord dataset?
		</comment>
		<comment id='4' author='yxleung' date='2019-10-23T10:00:18Z'>
		&lt;denchmark-link:https://github.com/yxleung&gt;@yxleung&lt;/denchmark-link&gt;
, Will it be possible to make zip file of dataSet and include it here. Thanks!
		</comment>
		<comment id='5' author='yxleung' date='2019-10-24T07:41:19Z'>
		
@yxleung, Will it be possible to make zip file of dataSet and include it here. Thanks!
This is tfrecord dataset.
part-r-00000.zip

		</comment>
		<comment id='6' author='yxleung' date='2019-11-04T08:48:02Z'>
		It works as expected with Tf 2.0 beta1. Please see the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/3730b5cf52560b399c05d1c236fb1555/untitled.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='7' author='yxleung' date='2019-11-06T06:29:41Z'>
		
It works as expected with Tf 2.0 beta1. Please see the gist here. Thanks!

yes,I can run my code in tensorflow==2.0.0b1, but when I update tensorflow to 2.0.0; I got an error; Is it tensorflow2.0.0 bug?
		</comment>
		<comment id='8' author='yxleung' date='2020-03-19T05:36:24Z'>
		same problem in tf2.1.0, any solution? &lt;denchmark-link:https://github.com/omalleyt12&gt;@omalleyt12&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='yxleung' date='2020-03-26T05:02:37Z'>
		
same problem in tf2.1.0, any solution? @omalleyt12

Same problem...
		</comment>
		<comment id='10' author='yxleung' date='2020-03-26T21:30:01Z'>
		I had a similar problem involving  and I solved it by indicating the , as advised &lt;denchmark-link:https://stackoverflow.com/questions/42776980/valueerror-the-two-structures-dont-have-the-same-number-of-elements&gt;here&lt;/denchmark-link&gt;
. I see that  is not involved here, but maybe something similar is happening where a  is not specified where it should be. For , it is actually indicated in the &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/map_fn&gt;docs&lt;/denchmark-link&gt;
 that you should provide it if the  of the output is not the same as the input.
		</comment>
		<comment id='11' author='yxleung' date='2020-05-27T18:07:13Z'>
		
I had a similar problem involving tf.map_fn and I solved it by indicating the dtype, as advised here. I see that map_fn is not involved here, but maybe something similar is happening where a dtype is not specified where it should be. For map_fn, it is actually indicated in the docs that you should provide it if the dtype of the output is not the same as the input.

&lt;denchmark-link:https://github.com/yxleung&gt;@yxleung&lt;/denchmark-link&gt;
,
Is this still an issue? Could you please check &lt;denchmark-link:https://github.com/zaccharieramzi&gt;@zaccharieramzi&lt;/denchmark-link&gt;
's comment and let us know if it helps. Thanks!
		</comment>
		<comment id='12' author='yxleung' date='2020-06-03T18:34:24Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='13' author='yxleung' date='2020-06-10T19:09:08Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='14' author='yxleung' date='2020-06-10T19:09:10Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33491&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33491&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='15' author='yxleung' date='2020-06-16T19:16:51Z'>
		

I had a similar problem involving tf.map_fn and I solved it by indicating the dtype, as advised here. I see that map_fn is not involved here, but maybe something similar is happening where a dtype is not specified where it should be. For map_fn, it is actually indicated in the docs that you should provide it if the dtype of the output is not the same as the input.

@yxleung,
Is this still an issue? Could you please check @zaccharieramzi's comment and let us know if it helps. Thanks!

I get this same error message. when I am trying to load a model with tf.keras.models.load.
		</comment>
		<comment id='16' author='yxleung' date='2020-06-18T04:26:08Z'>
		
I get this same error message. when I am trying to load a model with tf.keras.models.load.

&lt;denchmark-link:https://github.com/Santosh-Gupta&gt;@Santosh-Gupta&lt;/denchmark-link&gt;
,
Could you please submit a new issue from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;this link&lt;/denchmark-link&gt;
 and fill in the template so that we can track the issue there. Thanks!
		</comment>
		<comment id='17' author='yxleung' date='2020-06-18T05:12:20Z'>
		

I get this same error message. when I am trying to load a model with tf.keras.models.load.

@Santosh-Gupta,
Could you please submit a new issue from this link and fill in the template so that we can track the issue there. Thanks!

From my search it seems that it just may be due to using a custom model, so I am not 100% sure of if its a bug.
Here's is a stackoverflow post I made of this,
&lt;denchmark-link:https://stackoverflow.com/questions/62433195/tensorflow-keras-models-load-model-results-in-valueerror-the-two-structures&gt;https://stackoverflow.com/questions/62433195/tensorflow-keras-models-load-model-results-in-valueerror-the-two-structures&lt;/denchmark-link&gt;

If this looks like a bug I would be happy to fill out the form.
		</comment>
		<comment id='18' author='yxleung' date='2020-07-29T15:21:36Z'>
		&lt;denchmark-link:https://github.com/Santosh-Gupta&gt;@Santosh-Gupta&lt;/denchmark-link&gt;
 did you manage to find a solution?
		</comment>
		<comment id='19' author='yxleung' date='2020-08-05T21:29:56Z'>
		In tf.2.2.0 it's seems to be solved.
		</comment>
		<comment id='20' author='yxleung' date='2020-08-06T20:58:16Z'>
		I just used save_weights instead
		</comment>
		<comment id='21' author='yxleung' date='2020-09-23T15:23:38Z'>
		
I just used save_weights instead

You basically solved the issue by just avoiding it. I think this is still an important issue even in TF 2.3.0. I get the error on Transfer Learning with Hugging Face Bert models. I created my model and saved on the end of the training. To deploy with Flask, I simply tried to load the saved model but got:
ValueError: The two structures don't have the same nested structure.
First structure: type=TensorSpec str=TensorSpec(shape=(None, 512), dtype=tf.int32, name='inputs')
Second structure: type=dict str={'input_ids': TensorSpec(shape=(None, 5), dtype=tf.int32, name='input_ids')}
		</comment>
		<comment id='22' author='yxleung' date='2020-10-23T09:01:54Z'>
		&lt;denchmark-link:https://github.com/Subfly&gt;@Subfly&lt;/denchmark-link&gt;
 did you manage to solve this issue by any chance?
		</comment>
		<comment id='23' author='yxleung' date='2020-10-31T05:46:51Z'>
		

I just used save_weights instead

You basically solved the issue by just avoiding it. I think this is still an important issue even in TF 2.3.0. I get the error on Transfer Learning with Hugging Face Bert models. I created my model and saved on the end of the training. To deploy with Flask, I simply tried to load the saved model but got:
ValueError: The two structures don't have the same nested structure.
First structure: type=TensorSpec str=TensorSpec(shape=(None, 512), dtype=tf.int32, name='inputs')
Second structure: type=dict str={'input_ids': TensorSpec(shape=(None, 5), dtype=tf.int32, name='input_ids')}

not really solve your problem, but Flask should not be used to deploy tensorflow :) better user tensorflow-serving.
		</comment>
		<comment id='24' author='yxleung' date='2020-11-26T12:29:52Z'>
		Bump. This is still not solved on 2.3.
&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='yxleung' date='2020-12-05T11:38:15Z'>
		&lt;denchmark-link:https://github.com/dshahrokhian&gt;@dshahrokhian&lt;/denchmark-link&gt;
,
Could you please submit a new issue from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;this link&lt;/denchmark-link&gt;
 and fill in the template, so that we can track the issue there. Thanks!
		</comment>
		<comment id='26' author='yxleung' date='2020-12-06T19:44:56Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 I can confirm that this issue was solved in TF-nightly (2.4).
Thank you for the support!
		</comment>
		<comment id='27' author='yxleung' date='2020-12-23T09:22:57Z'>
		

I just used save_weights instead

You basically solved the issue by just avoiding it. I think this is still an important issue even in TF 2.3.0. I get the error on Transfer Learning with Hugging Face Bert models. I created my model and saved on the end of the training. To deploy with Flask, I simply tried to load the saved model but got:
ValueError: The two structures don't have the same nested structure.
First structure: type=TensorSpec str=TensorSpec(shape=(None, 512), dtype=tf.int32, name='inputs')
Second structure: type=dict str={'input_ids': TensorSpec(shape=(None, 5), dtype=tf.int32, name='input_ids')}

&lt;denchmark-link:https://github.com/Subfly&gt;@Subfly&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/MattdaVill&gt;@MattdaVill&lt;/denchmark-link&gt;

I solved it with

change
base_output = base_model([ids, mask, token_type_ids])
to
base_output = base_model.bert([ids, mask, token_type_ids])

here is the issue ablout this problem in huggingface-transformers &lt;denchmark-link:https://github.com/huggingface/transformers/issues/3627&gt;huggingface/transformers#3627&lt;/denchmark-link&gt;

I think the reason for that works may be that self.bert=TFBertMainLayer(config, name="bert")  and TFBertMainLayer is inherited from tf.keras.layers.Layer
		</comment>
	</comments>
</bug>