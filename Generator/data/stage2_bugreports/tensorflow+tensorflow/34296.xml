<bug id='34296' author='jvishnuvardhan' open_date='2019-11-15T01:28:55Z' closed_time='2020-01-16T22:06:50Z'>
	<summary>Error description is not clear with new experimental TF_lite_converter</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux, Colab
TensorFlow installed from (source or binary): binary
TensorFlow version (or github SHA if from source): tf-nightly

Command used to run the converter or code if youâ€™re using the Python API
&lt;denchmark-code&gt;import tensorflow as tf
mnist = tf.keras.datasets.mnist

(x_train, y_train),(x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0
# without the following two lines, it will throw
# ValueError: Cannot set tensor: Got value of type NOTYPE but expected type FLOAT32 for input 0, name: flatten_input 
#x_train = tf.dtypes.cast(x_train,tf.float32)
#x_test = tf.dtypes.cast(x_test,tf.float32)

model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=1)
model.evaluate(x_test, y_test)

converter = tf.lite.TFLiteConverter.from_keras_model(model)
converter.experimental_new_converter = True
#converter.experimental_enable_mlir_converter = True
tflite_model = converter.convert()

import numpy as np
expected = model.predict(x_test[0:1])

# Run the model with TensorFlow Lite
interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()
interpreter.set_tensor(input_details[0]["index"], x_test[0:1, :, :])
interpreter.invoke()
result = interpreter.get_tensor(output_details[0]["index"])

# Assert if the result of TFLite model is consistent with the TF model.
np.testing.assert_almost_equal(expected, result)
print("Done. The result of TensorFlow matches the result of TensorFLow Lite.")
&lt;/denchmark-code&gt;

The output from the converter invocation
ValueError: Cannot set tensor: Got value of type NOTYPE but expected type FLOAT32 for input 0, name: flatten_input
Failure details
Conversion is successful if the data type is float32. If the data type of input data is float64, then it will throw ValueError: Cannot set tensor: Got value of type NOTYPE but expected type FLOAT32 for input 0, name: flatten_input  which is not clear.  Most of the keras models In Tensorflow website under tutorials are with float64 datatype. So, if the user try to convert them into tf_lite model, they will end up in this ValueError. I think we need to update the Error description. Instead of showing NOTYPE, may it is better to use float64 or other data types that are not compatible.
Here is the link to colab &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/86eb0abb1cda9888d87c4d7c109a48c4/untitled632.ipynb&gt;gist&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='jvishnuvardhan' date='2019-11-15T17:21:17Z'>
		Over to &lt;denchmark-link:https://github.com/miaout17&gt;@miaout17&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/gargn&gt;@gargn&lt;/denchmark-link&gt;
 to investigate.
		</comment>
		<comment id='2' author='jvishnuvardhan' date='2020-01-16T22:06:50Z'>
		 isn't supported in the TFLite interpreter. The supported types are available &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/c/common.c#L183&gt;here&lt;/denchmark-link&gt;
.
Because it's not trivial to change the error message that is shown &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/python/interpreter_wrapper/interpreter_wrapper.cc#L363&gt;here&lt;/denchmark-link&gt;
 without adding support for , I am closing this issue.
		</comment>
		<comment id='3' author='jvishnuvardhan' date='2020-01-16T22:06:52Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34296&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34296&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>