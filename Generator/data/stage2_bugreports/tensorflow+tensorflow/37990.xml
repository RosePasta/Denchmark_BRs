<bug id='37990' author='briannemsick' open_date='2020-03-28T00:31:24Z' closed_time='2020-04-01T22:46:40Z'>
	<summary>[tf.keras] Model.metrics_names bug in TensorFlow 2.2.0</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): Y
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04):  Mac OS
TensorFlow version (use command below): 2.2.0rc0
Python version: 3.7

Describe the current behavior
Model.metrics_names returns an empty list (see below example) for a compiled model. This is new unexpected behavior as of TensorFlow 2.2.0 (not the case in TensorFlow 2.1.0)
These metrics names are important at compile time because they can be used to check against monitored quantities in callback. E.g. if a ModelCheckpoint callback is trying to monitor val_lss we can easily catch the typo before calling model.fit or finishing the first epoch of training.
Describe the expected behavior
Model.metric returns metrics and loss names (see below example).
Standalone code to reproduce the issue
import tensorflow as tf


inputs = tf.keras.layers.Input(shape=(3,))
outputs = tf.keras.layers.Dense(2, name="out_1")(inputs)
net = tf.keras.models.Model(inputs=inputs, outputs=outputs)
net.compile(optimizer="Adam", loss="mse", metrics=["mae"])

net.metrics_names = []  # TensorFlow 2.2.0rc2
net.metrics_names = ["loss", "mae"] # TensorFlow 2.1.0
	</description>
	<comments>
		<comment id='1' author='briannemsick' date='2020-03-28T05:26:21Z'>
		&lt;denchmark-link:https://github.com/briannemsick&gt;@briannemsick&lt;/denchmark-link&gt;
, In TF 2.2 , you need to call  or  before you call  .
		</comment>
		<comment id='2' author='briannemsick' date='2020-03-28T05:33:23Z'>
		This seems like a design regression. The new behavior is less functional and acts unexpectedly - the model is compiled...
Acessing the metrics names before calling model.fit can prevent wasted compute by checking the monitored metrics in callbacks against the models metrics.
		</comment>
		<comment id='3' author='briannemsick' date='2020-03-29T21:06:10Z'>
		Firstly we need to make proper layer in say sequential neural network as if before training the model if done the layering for doing the particular job we can easily use metrics_names as after the fit function or transform function can be used
		</comment>
		<comment id='4' author='briannemsick' date='2020-03-30T12:45:01Z'>
		This change also breaks several callbacks that rely on being able to read the and  with the  hook. In my case, it breaks the &lt;denchmark-link:https://github.com/tensorflow/addons&gt;TensorFlow Addons&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/tensorflow/addons/blob/master/tensorflow_addons/callbacks/tqdm_progress_bar.py&gt;callback&lt;/denchmark-link&gt;
.
Any idea as to how I can implement a work-around to this issue?
I had to upgrade to TF-2.2.0rc1 to fix a memory leak bug introduced in TF-2.1 and now I'm stuck with this instead.
		</comment>
		<comment id='5' author='briannemsick' date='2020-03-30T22:47:14Z'>
		&lt;denchmark-link:https://github.com/briannemsick&gt;@briannemsick&lt;/denchmark-link&gt;
 Thank you for pointing this out. This is definitely a breaking change but intended. Sorry about the lack of information on this on release notes and docs. We have fixed that now.
We refactored compile/fit quite a bit and with that we made functional and subclassed model behaviors consistent. Because of this you will be able to use some of these model properties only after your model has been trained/evaluated on actual data.
		</comment>
		<comment id='6' author='briannemsick' date='2020-03-30T23:20:02Z'>
		In this case, a warning or exception when these attributes are accessed before train/eval feels warranted.
		</comment>
		<comment id='7' author='briannemsick' date='2020-04-01T10:44:43Z'>
		&lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
 Can I ask what is the reasoning behind this change? You mention refactoring to make things consistent, but how was the previous behavior inconsistent?
		</comment>
		<comment id='8' author='briannemsick' date='2020-04-01T17:38:53Z'>
		&lt;denchmark-link:https://github.com/briannemsick&gt;@briannemsick&lt;/denchmark-link&gt;
 We are looking into adding a warning as well. Thank you.
&lt;denchmark-link:https://github.com/bjtho08&gt;@bjtho08&lt;/denchmark-link&gt;
 Earlier you will be able to see metrics_name after compile call for functional model but not for subclassed model.
		</comment>
		<comment id='9' author='briannemsick' date='2020-04-01T22:37:15Z'>
		&lt;denchmark-link:https://github.com/briannemsick&gt;@briannemsick&lt;/denchmark-link&gt;
 there are constraints because of which we will not be able to add a warning but we have updated the docs with a note and examples to clarify the behavior.
		</comment>
		<comment id='10' author='briannemsick' date='2020-04-01T22:46:42Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37990&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37990&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>