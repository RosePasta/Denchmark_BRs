<bug id='28248' author='KichangKim' open_date='2019-04-29T05:27:48Z' closed_time='2019-06-26T20:31:48Z'>
	<summary>[TF 2.0] Using tf.py_function which has tf.string type input in dataset.map() generates dtype warning.</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 x64 1809
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): unknown 2.0.0-dev20190428
Python version: 3.6.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: CUDA 10.0, cudnn-10.0-windows10-x64-v7.5.0.56
GPU model and memory: GeForce GTX 1070 8GB

Describe the current behavior
Using tf.py_function which has tf.string type input generates warning like this:

W0429 14:24:18.965364 13252 backprop.py:820] The dtype of the watched tensor must be floating (e.g. tf.float32), got tf.string

This warning did not shown with v1.12.0-9492-g2c319fb415 2.0.0-alpha0, but 2.0.0-dev20190428 does.
Describe the expected behavior
dtype warning should not be shown.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf


def transform_tag_python(x):
    return 1.0


dataset = tf.data.Dataset.from_tensor_slices(['tag1'])
dataset = dataset.map(lambda x: tf.py_function(
    transform_tag_python, (x,), (tf.float32,)))

for sample in dataset:
    print(sample)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='KichangKim' date='2019-04-30T01:42:57Z'>
		Look where tf.py_function is defined there is no such warning file present regarding dtype to be float. So why it is showing this?
		</comment>
		<comment id='2' author='KichangKim' date='2019-04-30T10:09:16Z'>
		I am facing the same issue.
		</comment>
		<comment id='3' author='KichangKim' date='2019-05-06T23:56:56Z'>
		&lt;denchmark-link:https://github.com/KichangKim&gt;@KichangKim&lt;/denchmark-link&gt;
 There was no warning when  or  was used. The issue was reproduced with . We will check for the source of error and resolve it. Thanks for finding this. Thanks!
		</comment>
		<comment id='4' author='KichangKim' date='2019-06-17T10:06:45Z'>
		Here:



tensorflow/tensorflow/python/eager/backprop.py


         Line 841
      in
      88ed977






 logging.WARN, "The dtype of the watched tensor must be " 





Having the same issue even though the statement is not within tf.GradientTape.
Even simpler example:
import tensorflow as tf

tensor = tf.constant([1,2,3])
tf.py_function(lambda x: x.numpy(), [tensor], tensor.dtype)
I am wondering why this code is called anyways. My example does not even use GradientTape.
Callstack of test.py (just includes code above):
&lt;denchmark-link:https://user-images.githubusercontent.com/9438971/59639047-54f5f480-915a-11e9-916c-a8e958fd6f14.png&gt;&lt;/denchmark-link&gt;

I am not sure it is intended that a py_function has a GradientTape by default.
		</comment>
		<comment id='5' author='KichangKim' date='2019-06-24T21:54:07Z'>
		It's likely the tape.watch here 


tensorflow/tensorflow/python/ops/script_ops.py


         Line 108
      in
      88520c4






 tape.watch(tensor) 




 which needs to be called only for floating dtypes.
		</comment>
		<comment id='6' author='KichangKim' date='2019-06-24T21:54:17Z'>
		I'll happily accept a PR to fix this.
		</comment>
		<comment id='7' author='KichangKim' date='2019-06-25T02:51:45Z'>
		The PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/30107&gt;#30107&lt;/denchmark-link&gt;
 is submitted to fix this issue.
cc &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='KichangKim' date='2019-06-26T06:30:32Z'>
		Looks like the PR failed a few checks. Is the issue still persisting?
		</comment>
		<comment id='9' author='KichangKim' date='2019-06-26T21:00:36Z'>
		This issue still exists in tf-2 version beta-1.
		</comment>
		<comment id='10' author='KichangKim' date='2019-06-27T08:10:26Z'>
		You have to use nightly builds
		</comment>
	</comments>
</bug>