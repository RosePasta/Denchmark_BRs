<bug id='32192' author='Telcoltar' open_date='2019-09-03T21:25:30Z' closed_time='2020-03-26T18:50:16Z'>
	<summary>JSON serializable issue at RemoteMonitor</summary>
	<description>
The Tensorflow implementation of RemoteMonitor callback raises the error
Object of type float32 is not JSON serializable.
Keras own implementation works fine with the same code.
I think the relevant code difference is
&lt;denchmark-code&gt;for k, v in logs.items():
      send[k] = v

&lt;/denchmark-code&gt;

in the Tensorflow implementation and
&lt;denchmark-code&gt;for k, v in logs.items():
            if isinstance(v, (np.ndarray, np.generic)):
                send[k] = v.item()
            else:
                send[k] = v
&lt;/denchmark-code&gt;

in the Keras implementation.
	</description>
	<comments>
		<comment id='1' author='Telcoltar' date='2019-09-04T06:08:52Z'>
		Please provide details about what platform you are using (operating system, architecture). Also include your TensorFlow version. Also, did you compile from source or install a binary?
Make sure you also include the minimal code snippet to reproduce the issue. If you are unclear what to include see the issue template displayed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;the Github new issue template&lt;/denchmark-link&gt;
.
We ask for this in the issue submission template, because it is really difficult to help without that information. Thanks!
		</comment>
		<comment id='2' author='Telcoltar' date='2019-09-04T12:08:37Z'>
		My description above was a little bit short. It was meant as a short notice that the tensorflow.keras RemoteMonitor class has a bug which the Keras RemoteMonitor class does not have. Let me explain it with a little bit more detail.
I have made a quick example which shows the error.
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
import tensorflow.keras as keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras.layers import Dense, Conv2D, Flatten, Activation, BatchNormalization, MaxPool2D
from tensorflow.keras.optimizers import Adam, Adadelta
import tensorflow.keras.losses as losses
import tensorflow.keras.metrics as metrics
from tensorflow.keras.callbacks import RemoteMonitor, LambdaCallback, Callback

(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()

x_train = x_train.reshape(-1,28,28,1) / 255
x_test = x_test.reshape(-1,28,28,1) / 255

y_train = y_train.astype(np.int32)
y_test = y_test.astype(np.int32)

remote_cb = RemoteMonitor(root="http://localhost:9000", path="/publish/epoch/end/", send_as_json=True)

model = Sequential()
model.add(Conv2D(64,(3,3), activation="relu", input_shape=(28,28,1)))
model.add(MaxPool2D((2,2)))
model.add(BatchNormalization())
model.add(Flatten())
model.add(Dense(256, activation="relu"))
model.add(Dense(10, activation="softmax"))

model.compile(loss=losses.sparse_categorical_crossentropy, optimizer=Adam(),
              metrics = ["accuracy"])

model.fit(x_train[:3000], y_train[:3000], epochs=5, batch_size=64, callbacks=[remote_cb])
&lt;/denchmark-code&gt;

This code gives a error
Object of type float32 is not JSON serializable.
But when delete the Tensorflow from the imports, so using the keras implementation, then the above code works fine.
So I looked at the tensorflow.keras  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/callbacks.py#L1264-L1316&gt;RemoteMonitor class&lt;/denchmark-link&gt;
 and compared it to the &lt;denchmark-link:https://github.com/keras-team/keras/blob/master/keras/callbacks.py#L847&gt;Remote Monitor class&lt;/denchmark-link&gt;
 from keras.
As stated above the relevant difference is
&lt;denchmark-code&gt;for k, v in logs.items():
      send[k] = v
&lt;/denchmark-code&gt;

in the Tensorflow.keras and
&lt;denchmark-code&gt;for k, v in logs.items():
            if isinstance(v, (np.ndarray, np.generic)):
                send[k] = v.item()
            else:
                send[k] = v
&lt;/denchmark-code&gt;

in the keras implementation.
I have also tried to replace the lines in the Tensorflow.keras callback.py file with the lines from the keras callbacks.py file and then the code works with the Tensorflow imports.
		</comment>
		<comment id='3' author='Telcoltar' date='2019-09-05T12:29:35Z'>
		I have tried on colab with 2.0.0-rc0 and was able to reproduce the issue.Please,find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/bf10dde754b4e8d73d8c021e4e014120/untitled156.ipynb&gt;gist &lt;/denchmark-link&gt;
 here.Please, let us know which TensorFlow version you are using?.Thanks!
		</comment>
		<comment id='4' author='Telcoltar' date='2019-09-05T12:43:35Z'>
		I have used 1.14.0, but the class RemoteMonitor is in 1.14.0 and 2.0.0-rc0 identical.
		</comment>
		<comment id='5' author='Telcoltar' date='2019-09-06T12:40:19Z'>
		I have tried on colab with 2.0.0-rc0,1.14,TF nightly versions and was able to reproduce the issue.Please,find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/1be5308bed758dc9cedb42e2a866983b/untitled156.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='6' author='Telcoltar' date='2019-09-23T18:21:41Z'>
		Hi, I would like to work on fixing this.
		</comment>
		<comment id='7' author='Telcoltar' date='2020-03-26T18:50:16Z'>
		As the PR has been merged, close the bug for now. Feel free to reopen it if needed.
		</comment>
		<comment id='8' author='Telcoltar' date='2020-03-26T18:50:18Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32192&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32192&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='Telcoltar' date='2020-04-22T13:57:09Z'>
		Is this issue resolved, which build has this issue resolved?
		</comment>
	</comments>
</bug>