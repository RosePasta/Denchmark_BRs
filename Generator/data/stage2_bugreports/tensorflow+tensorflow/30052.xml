<bug id='30052' author='mahzoon' open_date='2019-06-22T22:32:22Z' closed_time='2020-01-09T23:38:30Z'>
	<summary>ValueError: Arguments and signature arguments do not match -- when using dataset api, keras functional api and checkpoints callback (tf2.0)</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 10.13.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): GIT_VERSION='v1.12.1-4759-g9856697d8b' TF_VERSION='2.0.0-dev20190622'
Python version: 3.6.4
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: NA
GPU model and memory: NA

Describe the current behavior
Calling the fit function on a Keras model, when specifying a Dataset and a ModelCheckpoint callback, will crash after the first epoch with this error:
ValueError: Arguments and signature arguments do not match.
The error happens only when specifying both the training Dataset and validation Dataset.
The error happens because of the checkpoint callback.
Describe the expected behavior
The model should not crash, continue training and successfully save the checkpoints.
Code to reproduce the issue
import tensorflow as tf

# model architecture
inputs = tf.keras.Input(shape=(784,), name='flattened_image')
x = tf.keras.layers.Dense(64, activation='relu')(inputs)
x = tf.keras.layers.Dense(64, activation='relu')(x)
outputs = tf.keras.layers.Dense(10, activation='softmax', name='predictions')(x)
model = tf.keras.Model(inputs=inputs, outputs=outputs, name='error_showcase')

# loading mnist data
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()
x_train = x_train.reshape(60000, 784).astype('float32') / 255
x_test = x_test.reshape(10000, 784).astype('float32') / 255

# create the training dataset
train_dataset = tf.data.Dataset.from_tensor_slices((x_train, y_train))
# shuffle, batch and prefetch
train_dataset = train_dataset.shuffle(buffer_size=1024).batch(64).prefetch(1024)
# create the validation dataset.
val_dataset = tf.data.Dataset.from_tensor_slices((x_test, y_test))
# shuffle, batch and prefetch
val_dataset = val_dataset.batch(64).prefetch(1024)

# compile the model
model.compile(
    loss='sparse_categorical_crossentropy',
    optimizer='rmsprop',
    metrics=['accuracy']
)

# defining checkpoint callback
checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(
    './checkpoints/',
    monitor='val_accuracy',
    verbose=1,
    save_best_only=True,
    mode='max'
)

# fit the model
history = model.fit(
    train_dataset,
    validation_data=val_dataset,
    epochs=5,
    callbacks=[checkpoint_callback],
)

print('\nhistory dict:', history.history)
Other info / logs
&lt;denchmark-code&gt;2019-06-22 18:30:17.760500: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-06-22 18:30:17.777440: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f8d2bb0de30 executing computations on platform Host. Devices:
2019-06-22 18:30:17.777463: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): &lt;undefined&gt;, &lt;undefined&gt;
Epoch 1/5
WARNING: Logging before flag parsing goes to stderr.
W0622 18:30:18.333158 140736272085888 deprecation.py:323] From /temp/v36/lib/python3.6/site-packages/tensorflow_core/python/ops/math_grad.py:1251: add_dispatch_support.&lt;locals&gt;.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
W0622 18:30:18.374418 140736272085888 deprecation.py:323] From /temp/v36/lib/python3.6/site-packages/tensorflow_core/python/keras/optimizer_v2/optimizer_v2.py:460: BaseResourceVariable.constraint (from tensorflow.python.ops.resource_variable_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Apply a constraint manually following the optimizer update step.
2019-06-22 18:30:18.583083: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1541] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
911/938 [============================&gt;.] - ETA: 0s - loss: 0.3021 - accuracy: 0.9133  
Epoch 00001: val_accuracy improved from -inf to 0.94660, saving model to ./checkpoints/
2019-06-22 18:30:20.643797: W tensorflow/python/util/util.cc:268] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
W0622 18:30:20.653870 140736272085888 deprecation.py:506] From /temp/v36/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py:1775: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
938/938 [==============================] - 2s 3ms/step - loss: 0.2972 - accuracy: 0.9147 - val_loss: 0.1739 - val_accuracy: 0.9466
Epoch 2/5
Traceback (most recent call last):
  File "error_showcase_ckpt.py", line 46, in &lt;module&gt;
    callbacks=[checkpoint_callback],
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py", line 669, in fit
    use_multiprocessing=use_multiprocessing)
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training_generator.py", line 695, in fit
    steps_name='steps_per_epoch')
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training_generator.py", line 265, in model_iteration
    batch_outs = batch_function(*batch_data)
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py", line 939, in train_on_batch
    outputs = self.train_function(ins)  # pylint: disable=not-callable
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/keras/backend.py", line 3483, in __call__
    outputs = self._graph_fn(*converted_inputs)
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 583, in __call__
    return self._call_flat(args, self.captured_inputs)
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 685, in _call_flat
    outputs = self._inference_function.call(ctx, args)
  File "/temp/v36/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 436, in call
    (len(args), len(list(self.signature.input_arg))))
ValueError: Arguments and signature arguments do not match: 19 20 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mahzoon' date='2019-06-23T23:34:13Z'>
		I get the same issue.
		</comment>
		<comment id='2' author='mahzoon' date='2019-06-24T10:23:01Z'>
		I tried on colab with Tensorflow 2.0.0-dev20190623. I am able to reproduce the issue. Thanks!
		</comment>
		<comment id='3' author='mahzoon' date='2019-06-27T06:28:26Z'>
		get the same issue, without specifying a ModelCheckpoint callback
Traceback (most recent call last): File "/home/deeplearning/.vscode/extensions/ms-python.python-2019.6.22090/pythonFiles/ptvsd_launcher.py", line 43, in &lt;module&gt; main(ptvsdArgs) File "/home/deeplearning/.vscode/extensions/ms-python.python-2019.6.22090/pythonFiles/lib/python/ptvsd/__main__.py", line 434, in main run() File "/home/deeplearning/.vscode/extensions/ms-python.python-2019.6.22090/pythonFiles/lib/python/ptvsd/__main__.py", line 312, in run_file runpy.run_path(target, run_name='__main__') File "/usr/local/lib/python3.6/runpy.py", line 263, in run_path pkg_name=pkg_name, script_name=fname) File "/usr/local/lib/python3.6/runpy.py", line 96, in _run_module_code mod_name, mod_spec, pkg_name, script_name) File "/usr/local/lib/python3.6/runpy.py", line 85, in _run_code exec(code, run_globals) File "/home/deeplearning/work/Deeplearning/TensorFlow/DeepWritingID/DeepHWS_online_2/run.py", line 62, in &lt;module&gt; sys.exit(main()) File "/home/deeplearning/work/Deeplearning/TensorFlow/DeepWritingID/DeepHWS_online_2/run.py", line 56, in main train_model.fit(next(it), batch_size=params.batch_size, epochs=3) File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py", line 643, in fit use_multiprocessing=use_multiprocessing) File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py", line 664, in fit steps_name='steps_per_epoch') File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py", line 383, in model_iteration batch_outs = f(ins_batch) File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/backend.py", line 3510, in __call__ outputs = self._graph_fn(*converted_inputs) File "/usr/local/lib/python3.6/site-packages/tensorflow/python/eager/function.py", line 572, in __call__ return self._call_flat(args) File "/usr/local/lib/python3.6/site-packages/tensorflow/python/eager/function.py", line 671, in _call_flat outputs = self._inference_function.call(ctx, args) File "/usr/local/lib/python3.6/site-packages/tensorflow/python/eager/function.py", line 427, in call (len(args), len(list(self.signature.input_arg)))) ValueError: Arguments and signature arguments do not match: 97 98 
		</comment>
		<comment id='4' author='mahzoon' date='2019-06-27T07:58:56Z'>
		I get the same issue when I use the "callback" parameter:
checkpointer = keras.callbacks.ModelCheckpoint("./models/")
model.fit(train_ds, steps_per_epoch=train_steps_per_epoch, epochs=EPOCH, validation_steps=val_steps_per_epoch,
              validation_data=val_ds, callbacks=[checkpointer])
result = model.evaluate(val_ds)
Get error when start training 2 epoch.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/aaron/Workspace/tf2.0_sample/main.py", line 35, in &lt;module&gt;
    validation_data=val_ds, callbacks=[checkpointer])
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py", line 643, in fit
    use_multiprocessing=use_multiprocessing)
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_generator.py", line 694, in fit
    steps_name='steps_per_epoch')
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/keras/engine/training_generator.py", line 264, in model_iteration
    batch_outs = batch_function(*batch_data)
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py", line 918, in train_on_batch
    outputs = self.train_function(ins)  # pylint: disable=not-callable
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/keras/backend.py", line 3510, in __call__
    outputs = self._graph_fn(*converted_inputs)
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/eager/function.py", line 572, in __call__
    return self._call_flat(args)
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/eager/function.py", line 671, in _call_flat
    outputs = self._inference_function.call(ctx, args)
  File "/home/aaron/Soft/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/eager/function.py", line 427, in call
    (len(args), len(list(self.signature.input_arg))))
ValueError: Arguments and signature arguments do not match: 40 41
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='mahzoon' date='2019-06-28T22:19:03Z'>
		Hi &lt;denchmark-link:https://github.com/mahzoon&gt;@mahzoon&lt;/denchmark-link&gt;
, I got the same error as yours. But it only happens when I set  in the checkpoint callback. If and only if I set , it will work as usual.
Also, I'm confused by this warning "W tensorflow/python/util/util.cc:280] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them." It didn't show up after I set save_weights_only=True.
		</comment>
		<comment id='6' author='mahzoon' date='2019-07-08T22:55:18Z'>
		&lt;denchmark-link:https://github.com/rchao&gt;@rchao&lt;/denchmark-link&gt;
 -- can you take a look? There seems to be some delta in the inputs as created and as we try to do them.
(Can we improve the error message while fixing this? We should be able to print out what the mismatch is in that error message.)
		</comment>
		<comment id='7' author='mahzoon' date='2019-07-24T18:21:08Z'>
		&lt;denchmark-link:https://github.com/mahzoon&gt;@mahzoon&lt;/denchmark-link&gt;
 thanks for reporting the issue - we were able to repro and found that the mismatched argument is keras_learning_phase. We're actively working on training loop refactoring which will resolve the issue. Will post back here once we get more updates.
		</comment>
		<comment id='8' author='mahzoon' date='2019-07-29T16:53:42Z'>
		In jupyter notebook I noticed that if I don't have any metric, it works after the first fail. Just fyi, in case it helps
		</comment>
		<comment id='9' author='mahzoon' date='2019-08-01T06:55:27Z'>
		
Hi @mahzoon, I got the same error as yours. But it only happens when I set save_weights_only=False in the checkpoint callback. If and only if I set save_weights_only=True, it will work as usual.
Also, I'm confused by this warning "W tensorflow/python/util/util.cc:280] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them." It didn't show up after I set save_weights_only=True.

I got the same issue like &lt;denchmark-link:https://github.com/zihaozhihao&gt;@zihaozhihao&lt;/denchmark-link&gt;
 , setting 'save_weights_only=False' would cause the problem.
		</comment>
		<comment id='10' author='mahzoon' date='2019-09-06T14:18:23Z'>
		same issue here, running on rc0
		</comment>
		<comment id='11' author='mahzoon' date='2019-09-16T08:26:27Z'>
		I also hit this issue in my personal project :)
		</comment>
		<comment id='12' author='mahzoon' date='2019-10-13T06:10:58Z'>
		TF_VERSION='v2.0.0-rc2-26-g64c3d38'
Python version: 3.5.3
I am not sure if it is the same bug, but it states:
ValueError: Arguments and signature arguments do not match: 1229 1230
It occurs on model.fit_generator at the beginning  of the training. But if I use fit_generator with class_weights argument, the error would prompt on the end of the epoch and seems to be related to validation dataset evaluation:
ValueError: You must feed a value for placeholder Tensor("block1c_bn/block1c_bn_trainable:0", dtype=bool)
If using without validation_data argument the model works fine. Setting 'save_weights_only=True' doesn't help.
The workaround is to train 1 epoch without validation data, save the model, load afterwards. After this manipulation train can be done as usual.
		</comment>
		<comment id='13' author='mahzoon' date='2019-12-13T11:58:28Z'>
		I am currently dealing with the same problem here when using keras backend during the learning phase. I wondered if any solution has been found yet? :)
		</comment>
		<comment id='14' author='mahzoon' date='2020-01-09T23:38:04Z'>
		This is fixed with latest  build '2.1.0-dev20200109'
See &lt;denchmark-link:https://colab.sandbox.google.com/gist/ymodak/2e7ca2c039dd0c97a683d4132bb3465a/github_30052ipynb.ipynb&gt;gist&lt;/denchmark-link&gt;

Feel free to reopen if still have problems. Thanks!
		</comment>
		<comment id='15' author='mahzoon' date='2020-01-09T23:38:32Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30052&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30052&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='16' author='mahzoon' date='2020-02-13T23:59:29Z'>
		tried tf-nightly build '2.1.0-dev20200109' and the lastest TensorFlow-GPU also
Keras 2.3.1
problem not resolved when doing predict or predict_on_batch from model loaded from a file.

ValueError: Arguments and signature arguments do not match. got: 92, expected: 93

can someone confirm this? or my problem could be unrelated.
		</comment>
		<comment id='17' author='mahzoon' date='2020-02-15T16:42:03Z'>
		
tried tf-nightly build '2.1.0-dev20200109' and the lastest TensorFlow-GPU also
Keras 2.3.1
problem not resolved when doing predict or predict_on_batch from model loaded from a file.

ValueError: Arguments and signature arguments do not match. got: 92, expected: 93

can someone confirm this? or my problem could be unrelated.

I got similar issue, I was using
K.function(input, output, updates)
		</comment>
		<comment id='18' author='mahzoon' date='2020-05-20T07:27:50Z'>
		I'm having same issue with tensorflow-gpu: '2.1.0'. and python: 3.6.9  Any updates ?
ValueError: Arguments and signature arguments do not match. got: 37, expected: 39
		</comment>
		<comment id='19' author='mahzoon' date='2020-05-20T12:10:33Z'>
		
I'm having same issue with tensorflow-gpu: '2.1.0'. and python: 3.6.9  Any updates ?
ValueError: Arguments and signature arguments do not match. got: 37, expected: 39

The problem solved after replacing import keras by import tensorflow.keras and making the necessary modifications
		</comment>
	</comments>
</bug>