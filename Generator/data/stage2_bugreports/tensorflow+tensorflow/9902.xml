<bug id='9902' author='ruggeri' open_date='2017-05-15T01:38:20Z' closed_time='2018-01-21T00:30:41Z'>
	<summary>Session#run method's feed_dict argument implicitly converts types</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes?
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): OSX 10.12.3
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.1.0
Bazel version (if compiling from source): NA
CUDA/cuDNN version: None
GPU model and memory: None
Exact command to reproduce: (see below)

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Hi TensorFlow humans! Thanks so much for making TensorFlow!
Right now, if you feed a floating point array into a integral placeholder type, it will be converted implicitly. To my knowledge, most python operations will not implicitly convert.
The implicit conversion potentially creates convenience, but of course it also creates the opportunity for a hard-to-see bug. In my case, I lost about 1 day to find this bug and experienced great sadness. That probably says more about me than it does about TF.
Still, my feeling is that it is a more sensible default to require the user to do the conversion explicitly. Alternatively, perhaps it would be logical to log a warning to the user.
Note that, to my knowledge, TF operations like tf.equal require both tensors to have the same type. So users might have a belief that that TF and Session#run require them to be fairly explicit about types.
If it would be likely to be accepted, I am happy to write a patch for TF that warns the user when they feed a tensor of the wrong type.
Thanks for reading this issue!
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf

session = tf.Session()
convert_implicitly = tf.placeholder(tf.int64, [None])
float_input = np.random.uniform(size = 10)
result = session.run(
    convert_implicitly,
    feed_dict = { convert_implicitly: float_input }
)
print(result)
&lt;/denchmark-code&gt;

Output
&lt;denchmark-code&gt;&gt;&gt; python test.py
2017-05-14 18:20:22.524862: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2017-05-14 18:20:22.524890: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2017-05-14 18:20:22.524906: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine andcould speed up CPU computations.
[0 0 0 0 0 0 0 0 0 0]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ruggeri' date='2017-05-15T02:32:46Z'>
		I would say this is a bug, silently turning floats into ints is surprising
There was a similar one fixed by &lt;denchmark-link:https://github.com/suharshs&gt;@suharshs&lt;/denchmark-link&gt;
 where he added some code &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/a5b1fb8e56ceda0ee2794ee05f5a7642157875c5/tensorflow/python/framework/tensor_util.py#L391&gt;here&lt;/denchmark-link&gt;
 to prevent python integers &gt;2^31 being silently downcasted to int32.
		</comment>
		<comment id='2' author='ruggeri' date='2017-05-15T18:14:50Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 is changing our implicit conversion rules in placeholders breaking our API guarantees? I agree this is confusing and dangerous, but in theory some may rely on this behavior...
		</comment>
		<comment id='3' author='ruggeri' date='2017-05-15T18:22:33Z'>
		&lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
, the fix was actually by &lt;denchmark-link:https://github.com/saxenasaurabh&gt;@saxenasaurabh&lt;/denchmark-link&gt;
 :)
		</comment>
		<comment id='4' author='ruggeri' date='2017-12-22T07:29:37Z'>
		It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='5' author='ruggeri' date='2017-12-30T00:26:17Z'>
		Yeah, this is likely to break people. We should add a warning if we can, and we will change this behavior in 2.0.
		</comment>
		<comment id='6' author='ruggeri' date='2018-01-18T19:14:09Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='7' author='ruggeri' date='2018-01-21T00:30:41Z'>
		I will close this since we cannot do anything before 2.0. I noted this issue for 2.0.
		</comment>
	</comments>
</bug>