<bug id='44948' author='paultbd' open_date='2020-11-17T16:39:07Z' closed_time='2020-11-28T06:45:11Z'>
	<summary>Can't load GRUCell weights from TensorFlow 1 to TensorFlow 2</summary>
	<description>
&lt;denchmark-h:h1&gt;Issue ðŸ’»&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): True
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: False
TensorFlow installed from (source or binary): pip install tensorflow
TensorFlow version (use command below): v2.3.0-rc2-23-gb36436b087 2.3.0
Python version: 3.8.3
Bazel version (if compiling from source): None
GCC/Compiler version (if compiling from source): None
CUDA/cuDNN version: None
GPU model and memory: None

&lt;denchmark-h:h2&gt;Current Behavior&lt;/denchmark-h&gt;

I migrated a code written with tensorflow 1 to tensorflow 2. In addition I would like to convert the checkpoints of my tensorflow 1 model too. However, the GRUCell seems really different from tensorflow 1 to tensorflow 2 implementation, and can't load the saved weights from a compat.v1.nn.rnn_cell.GRUCell to a keras.layers.GRUCell.
The error is:
&lt;denchmark-code&gt;W tensorflow/core/framework/op_kernel.cc:1767] OP_REQUIRES failed at save_restore_v2_ops.cc:184 : Not found: Key gru_cell_1/bias:0 not found in checkpoint
&lt;/denchmark-code&gt;

So the error comes from the weights initialization. By looking closer to the structure of the GRUCell from the 1 and 2 versions, I noticed major differences:


The compat.v1.rnn_cell.GRUCell has four weights:

gru_cell/gates/kernel:0 of shape (S + H, 2 x H),
gru_cell/gates/bias:0 of shape (2 x H, ),
gru_cell/candidate/kernel:0 of shape (S + H, H),
gru_cell/candidate/bias:0 of shape (H, )



The tf.keras.layers.GRUCell has three weights:

gru_cell/kernel:0 of shape (S, 3 x H)
gru_cell/recurrent_kernel:0 of shape (H, 3 x H)
gru_cell/bias:0 of shape (2, 3 x H)



So the issue is that tensorflow struggles to load weights from the first version to a keras.layers.GRUCell - of course, the shape and length of the weights are different.
Is there a function to migrate compat.v1.nn.rnn_cell.GRUCell weights to keras.layers.GRUCell ? I have not seen in the documentation.
&lt;denchmark-h:h2&gt;To illustrate&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;1. Weights of compat.v1.nn.rnn_cell.GRUCell layer&lt;/denchmark-h&gt;

import tensorflow as tf

SEQ_LENGTH = 4
HIDDEN_SIZE = 512
BATCH_SIZE = 1
inputs = tf.random.normal([BATCH_SIZE, SEQ_LENGTH])

# GRU cell
gru = tf.compat.v1.nn.rnn_cell.GRUCell(HIDDEN_SIZE)
# Hidden state
state = gru.zero_state(BATCH_SIZE, tf.float32)
# Forward
output, state = gru(inputs, state)

for weight in gru.weights:
    print(weight.name, weight.shape)
Output:
&lt;denchmark-code&gt;gru_cell/gates/kernel:0 (516, 1024)
gru_cell/gates/bias:0 (1024,)
gru_cell/candidate/kernel:0 (516, 512)
gru_cell/candidate/bias:0 (512,)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;2. Weights of keras.layers.GRUCell layer&lt;/denchmark-h&gt;

import tensorflow as tf

SEQ_LENGTH = 4
HIDDEN_SIZE = 512
BATCH_SIZE = 1
inputs = tf.random.normal([BATCH_SIZE , SEQ_LENGTH])

# GRU cell
gru = tf.keras.layers.GRUCell(HIDDEN_SIZE)
# Hidden state
state = tf.zeros((BATCH_SIZE, HIDDEN_SIZE), dtype=tf.float32)
# Forward
output, state = gru(inputs, state)

# Display the weigths
for weight in gru.weights:
    print(weight.name, weight.shape)
Output:
&lt;denchmark-code&gt;gru_cell/kernel:0 (4, 1536)
gru_cell/recurrent_kernel:0 (512, 1536)
gru_cell/bias:0 (2, 1536)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Note&lt;/denchmark-h&gt;

I tried &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/c52ee536c045186476450cf76461d47fb2667e7d/tensorflow/python/keras/saving/hdf5_format.py#L404-L568&gt;_convert_rnn_weights tensorflow function&lt;/denchmark-link&gt;
 to convert the desired weights. It works but only for  weights, so I can't use it in my case.
	</description>
	<comments>
		<comment id='1' author='paultbd' date='2020-11-18T13:19:58Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/f9aabf8ec47e727fbde26a297a4adaf0/44948.ipynb&gt;TF v2.3&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/44cc623d82e2ad35605b21843094e035/44948-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='paultbd' date='2020-11-28T06:45:11Z'>
		Thanks for reporting the issue.
In short, the weights between compat.v1.nn.rnn_cell.GRUCell and keras.layers.GRUCell are not compatible between each other. We don't have a function to convert between them, and if you really want to do it, you will need to do it manually.
Math wise, if you have the numpy value of the v1 weights, the formula are:
B = batch_size
H = state_size

all_kernel = np.concat([gru_cell/gates/kernel, gru_cell/candidate/kernel], axis=1)  # shape (B+H, 3 * H)
kernel = all_kernel[:B]  # shape(B, 3 * H)
recurrent_kernel = all_kernel[B:] # shape (H, 3 * H)
bias = np.concat([gru_cell/gates/bias, gru_cell/candidate/bias], axis=0)  # shape (B, 3 * H)
zero_bias = np.zeros([B, 3 * H])
bias = np.concat([bias, zero_bias], axis=0)

		</comment>
		<comment id='3' author='paultbd' date='2020-11-28T06:45:13Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44948&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44948&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>