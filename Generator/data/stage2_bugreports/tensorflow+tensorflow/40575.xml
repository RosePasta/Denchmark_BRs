<bug id='40575' author='kurikinton105' open_date='2020-06-18T12:07:40Z' closed_time='2020-06-20T20:10:50Z'>
	<summary>TF2.2.0 model.train&amp;evaluate may have a display bug</summary>
	<description>
Please make sure that this may be a bug.
System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No. This is the code from (https://www.tensorflow.org/beta/tutorials/quickstart/beginner)


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab and mac OS Mojave  10.14.4


TensorFlow version (use command below): pip install tensorflow==2.2.0


Python version: 3.6.9


Describe the current behavior
There is a difference of result between TF2.1.0 and TF2.20 version in model.train  &amp; model.evaluate sections.
In TF2.1.0, result of model.train show 60000/60000.it is normal.
But in TF2.2.0, this show 1875/1875  . Despite the same shape of train data.
In case of evaluate is same.
In TF2.1.0, result of model.evaluate show 10000/10000.
But in TF2.2.0, this show 313/313.
This is may be bug.But it's also may normal.
So please check the problem.
Source code / logs
&lt;denchmark-code&gt;#install Tensorflow in Colab
!pip install tensorflow==2.2.0
import tensorflow as tf
print(tf.__version__)

#RUN the code 
from __future__ import absolute_import, division, print_function, unicode_literals
import tensorflow as tf

mnist = tf.keras.datasets.mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0
model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
print("fit") 
model.fit(x_train, y_train, epochs=1)
print("evaluate")
model.evaluate(x_test,  y_test)
&lt;/denchmark-code&gt;

[out]
Downloading data from &lt;denchmark-link:https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz&gt;https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz&lt;/denchmark-link&gt;

11493376/11490434 [==============================] - 0s 0us/step
fit
1875/1875 [==============================] - 3s 2ms/step - loss: 0.2957 - accuracy: 0.9136
evaluate
313/313 [==============================] - 0s 2ms/step - loss: 0.1342 - accuracy: 0.9594
[0.13421817123889923, 0.9593999981880188]
I uploaded to &lt;denchmark-link:https://colab.research.google.com/drive/1MxqnCskd43a9-cr3Gjv6Oaby04OzyDcc?usp=sharing&gt;Colab&lt;/denchmark-link&gt;

This ipynb file uses the TF2.1.0 and TF2.2.0. You can see the bug on TF 2.2.0.
	</description>
	<comments>
		<comment id='1' author='kurikinton105' date='2020-06-18T12:30:54Z'>
		I have tried in colab with TF version 2.2, nightly versions and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/2fc7cca38390186678550f8036c27a2a/untitled45.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='kurikinton105' date='2020-06-18T17:47:44Z'>
		&lt;denchmark-link:https://github.com/kurikinton105&gt;@kurikinton105&lt;/denchmark-link&gt;
  This is by design. The  argument in  if unspecified will default to . You can validate this by simply looking at 
See &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/Model#fit&gt;https://www.tensorflow.org/api_docs/python/tf/keras/Model#fit&lt;/denchmark-link&gt;
 arguments documentation.
Thanks!
		</comment>
		<comment id='3' author='kurikinton105' date='2020-06-20T05:40:30Z'>
		Thank you for your answering!!!!!
I checked the document and I understand this design changes.
This changes may be sudden change.
So users may be wondering may be wondering if they can learn from the data properly because there is no display.
Thanks!!!
		</comment>
		<comment id='4' author='kurikinton105' date='2020-06-20T20:10:50Z'>
		Glad to help. Closing now. Thanks for confirming.
		</comment>
		<comment id='5' author='kurikinton105' date='2020-06-20T20:10:52Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40575&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40575&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>