<bug id='39547' author='w19787' open_date='2020-05-14T15:28:18Z' closed_time='2020-05-21T00:15:21Z'>
	<summary>keras training parameter value incorrect</summary>
	<description>
tensorflow ver: 2.1.0
import tensorflow as tf
import numpy as np

class MyModel(tf.keras.Model):

    def __init__(self):
        super(MyModel, self).__init__()
        self.dense1 = tf.keras.layers.Dense(4, activation=tf.nn.relu)
        self.dense2 = tf.keras.layers.Dense(5, activation=tf.nn.softmax)
        self.dropout = tf.keras.layers.Dropout(0.5)

    def call(self, inputs, training=None):
        x = self.dense1(inputs)
        if training is True:
            print("in training")
            x = self.dropout(x, training=training)
        elif training is None:
            print("training None")
        else:
            print("not in training")
            
        return self.dense2(x)

model = MyModel()

optimizer = tf.keras.optimizers.Adam(1e-4)
loss = tf.keras.losses.CategoricalCrossentropy()
model.compile(optimizer, loss)
x = tf.random.normal((5,))
y = tf.ones((5,))
model.fit(x, y, epochs=1)
The system report "not in training first", then "in training".
&lt;denchmark-link:https://user-images.githubusercontent.com/731496/81953648-84e39b80-963a-11ea-8c4e-ac5b49afcb9e.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='w19787' date='2020-05-15T10:09:48Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/6b23743610aa062475517c8b99923420/39547.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
.
On running the code with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/f371dada0012444bf75b1e066629e285/39547.ipynb#scrollTo=oBTbHGrfovim&gt;TF v2.2&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/422599f4acaf4fa19ee7d223c0a92a80/39547-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
, facing an error stating . Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='w19787' date='2020-05-21T00:15:21Z'>
		&lt;denchmark-link:https://github.com/w19787&gt;@w19787&lt;/denchmark-link&gt;
 Thanks for the issue!
I fixed the example to pass batched tensors for x and y (IIUC these were just dummy values to show the error, not the root cause of the error).
It is now passing in TF2.2 for me:
import tensorflow as tf
import numpy as np

class MyModel(tf.keras.Model):

    def __init__(self):
        super(MyModel, self).__init__()
        self.dense1 = tf.keras.layers.Dense(4, activation=tf.nn.relu)
        self.dense2 = tf.keras.layers.Dense(5, activation=tf.nn.softmax)
        self.dropout = tf.keras.layers.Dropout(0.5)

    def call(self, inputs, training=None):
        x = self.dense1(inputs)
        if training is True:
            print("in training")
            x = self.dropout(x, training=training)
        elif training is None:
            print("training None")
        else:
            print("not in training")
            
        return self.dense2(x)

model = MyModel()

optimizer = tf.keras.optimizers.Adam(1e-4)
loss = tf.keras.losses.CategoricalCrossentropy()
model.compile(optimizer, loss)
x = tf.random.normal((1, 5))
y = tf.ones((1, 5))
model.fit(x, y, epochs=1)
Closing bc I can't repro, but if you are still seeing this issue with TF2.2 please reopen!
		</comment>
		<comment id='3' author='w19787' date='2020-05-21T00:15:24Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39547&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39547&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>