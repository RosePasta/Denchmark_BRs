<bug id='35824' author='nectario' open_date='2020-01-13T17:37:18Z' closed_time='2020-11-20T21:24:43Z'>
	<summary>TimeDistributed Layer Does Not Support Multiple Inputs</summary>
	<description>
Python Version: 3.76
TensorFlow Version: 2.1
OS: Windows 10
Issue:
It does not seem the TimeDistributed layer supports multiple inputs. See example code:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.layers import Dense, Concatenate, RepeatVector, Activation, Dot, Bidirectional, Embedding, Input, SpatialDropout1D, LSTM, Dropout, Lambda, Conv1D, Attention, AdditiveAttention, GlobalAveragePooling1D, TimeDistributed, AveragePooling1D
from tensorflow.keras.models import Model
import numpy as np

def example_2():
    # Encode each timestep
    input_1 = Input(shape=(None,), dtype='int64', name="Input1")
    input_2 = Input(shape=(None,), dtype='int64', name="Input2")

    output = Concatenate([input_1, input_2])
    output = TimeDistributed(output)([input_1, input_2])

    model = Model([input_1, input_2], output)
    model.compile(loss='categorical_crossentropy',
                  optimizer='rmsprop',
                  metrics=['accuracy'])

    return model


input_1 = np.array([[1, 2, 3, 4, 5, 6, 7]])
input_2 = np.array([[1, 1, 1, 1, 1, 1, 1]])
y = np.array([1, 0, 1, 1, 0, 0, 1])

example_2().fit(input=[input_1, input_2], output=y)
&lt;/denchmark-code&gt;

I get the following issue:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "C:/Development/Projects/TensorFlow_2.0_Hierarchical_Attention/TimeDistributed_Multiple_Inputs.py", line 26, in &lt;module&gt;
    example_2().fit(input=[input_1, input_2], output=y)
  File "C:/Development/Projects/TensorFlow_2.0_Hierarchical_Attention/TimeDistributed_Multiple_Inputs.py", line 12, in example_2
    output = TimeDistributed(output)([input_1, input_2])
  File "C:\Development\Python\Python37\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py", line 748, in __call__
    self._maybe_build(inputs)
  File "C:\Development\Python\Python37\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py", line 2116, in _maybe_build
    self.build(input_shapes)
  File "C:\Development\Python\Python37\lib\site-packages\tensorflow_core\python\keras\layers\wrappers.py", line 197, in build
    input_shape = tensor_shape.TensorShape(input_shape).as_list()
  File "C:\Development\Python\Python37\lib\site-packages\tensorflow_core\python\framework\tensor_shape.py", line 771, in __init__
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\Development\Python\Python37\lib\site-packages\tensorflow_core\python\framework\tensor_shape.py", line 771, in &lt;listcomp&gt;
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\Development\Python\Python37\lib\site-packages\tensorflow_core\python\framework\tensor_shape.py", line 716, in as_dimension
    return Dimension(value)
  File "C:\Development\Python\Python37\lib\site-packages\tensorflow_core\python\framework\tensor_shape.py", line 200, in __init__
    None)
  File "&lt;string&gt;", line 3, in raise_from
TypeError: Dimension value must be integer or None or have an __index__ method, got TensorShape([None, None])
&lt;/denchmark-code&gt;

Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
TensorFlow version (use command below):
Python version:
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
Describe the expected behavior
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='nectario' date='2020-01-14T11:00:31Z'>
		Issue replicating for given code in 2.1 and &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/5d1b14800f5f161a4de952e93c7e6482/35824.ipynb&gt;tf-nightly&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='nectario' date='2020-11-20T21:24:44Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35824&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35824&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>