<bug id='30564' author='pio-neil' open_date='2019-07-10T14:55:08Z' closed_time='2019-07-13T13:32:23Z'>
	<summary>Output of sysconfig.get_link_flags does not seem to be suitable for Mac</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac High Sierra 10.13.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): v1.14.0-rc1-22-gaf24dc91b5 1.14.0
Python version: Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 26 2018, 19:50:54)
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source): Apple LLVM version 9.0.0 (clang-900.0.39.2)
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
When running the example of creating a custom op from &lt;denchmark-link:https://www.tensorflow.org/guide/extend/op&gt;https://www.tensorflow.org/guide/extend/op&lt;/denchmark-link&gt;
 on a Mac the compilation stage (see (&lt;denchmark-link:https://www.tensorflow.org/guide/extend/op#build_the_op_library&gt;https://www.tensorflow.org/guide/extend/op#build_the_op_library&lt;/denchmark-link&gt;
) fails with the following error message:
&lt;denchmark-code&gt;ld: library not found for -l:libtensorflow_framework.1.dylib
clang: error: linker command failed with exit code 1 (use -v to see invocation)
&lt;/denchmark-code&gt;

This appears to be because the specified linker option -l:libtensorflow_framework.1.dylib (returned by sysconfig.get_link_flags) is not valid for ld on the Mac. The man page for ld says the following:
&lt;denchmark-code&gt;-lx         This option tells the linker to search for libx.dylib or libx.a in the library 
search path.  If string x is of the form y.o, then that file is searched for in the 
same places, but without prepending `lib' or appending `.a' or `.dylib' to the 
filename.
&lt;/denchmark-code&gt;

I believe that the correct format for this flag is -ltensorflow_framework.1 (since the linker will prepend lib and append .dylib).
A workaround for this is to replace this line
&lt;denchmark-code&gt;TF_LFLAGS=( $(python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()))') )
&lt;/denchmark-code&gt;

With this:
&lt;denchmark-code&gt;TF_LFLAGS=( $(python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()).replace("-l:libtensorflow_framework.1.dylib", "-ltensorflow_framework.1"))') )
&lt;/denchmark-code&gt;

Alternatively there is (I believe) a fix for the underlying cause here: &lt;denchmark-link:https://github.com/pio-neil/tensorflow/pull/1/files&gt;https://github.com/pio-neil/tensorflow/pull/1/files&lt;/denchmark-link&gt;

Describe the expected behavior
The linking process should be performed successfully and produce a library file called zero_out.so.
Code to reproduce the issue
On a Mac, create a file called zero_out.cc with the following code (copied from &lt;denchmark-link:https://www.tensorflow.org/guide/extend/op&gt;https://www.tensorflow.org/guide/extend/op&lt;/denchmark-link&gt;
):
&lt;denchmark-code&gt;#include "tensorflow/core/framework/op.h"
#include "tensorflow/core/framework/shape_inference.h"
#include "tensorflow/core/framework/op_kernel.h"


using namespace tensorflow;

REGISTER_OP("ZeroOut")
    .Input("to_zero: int32")
    .Output("zeroed: int32")
    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {
      c-&gt;set_output(0, c-&gt;input(0));
      return Status::OK();
    });

class ZeroOutOp : public OpKernel {
 public:
  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}

  void Compute(OpKernelContext* context) override {
    // Grab the input tensor
    const Tensor&amp; input_tensor = context-&gt;input(0);
    auto input = input_tensor.flat&lt;int32&gt;();

    // Create an output tensor
    Tensor* output_tensor = NULL;
    OP_REQUIRES_OK(context, context-&gt;allocate_output(0, input_tensor.shape(),
                                                     &amp;output_tensor));
    auto output_flat = output_tensor-&gt;flat&lt;int32&gt;();

    // Set all but the first element of the output tensor to 0.
    const int N = input.size();
    for (int i = 1; i &lt; N; i++) {
      output_flat(i) = 0;
    }

    // Preserve the first input value if possible.
    if (N &gt; 0) output_flat(0) = input(0);
  }
};

REGISTER_KERNEL_BUILDER(Name("ZeroOut").Device(DEVICE_CPU), ZeroOutOp);
&lt;/denchmark-code&gt;

Then run:
&lt;denchmark-code&gt;TF_CFLAGS=( $(python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_compile_flags()))') )
TF_LFLAGS=( $(python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()))') )
g++ -std=c++11 -shared zero_out.cc -o zero_out.so -fPIC ${TF_CFLAGS[@]} ${TF_LFLAGS[@]} -O2
&lt;/denchmark-code&gt;

You should see an error like this:
&lt;denchmark-code&gt;ld: library not found for -l:libtensorflow_framework.1.dylib
clang: error: linker command failed with exit code 1 (use -v to see invocation)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='pio-neil' date='2019-07-11T08:13:47Z'>
		I have seen the same issue. Suggested fix works for me
		</comment>
		<comment id='2' author='pio-neil' date='2019-07-13T13:32:23Z'>
		The issue has been fixed through PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/30656&gt;#30656&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='pio-neil' date='2019-07-13T13:32:25Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30564&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30564&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>