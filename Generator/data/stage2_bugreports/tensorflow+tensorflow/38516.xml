<bug id='38516' author='phemmer' open_date='2020-04-14T02:12:53Z' closed_time='2020-04-15T20:47:00Z'>
	<summary>Cannot use set_visible_devices with mixed_precision</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): kind of. Combination of 2 example scripts
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux - Fedora 31
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or
binary): source
TensorFlow version (use command below): v2.2.0-rc3-0-gaad398b5e9 2.2.0-rc3
Python version: 3.7.6
Bazel version (if compiling from source): 2.0.0
GCC/Compiler version (if compiling from source): gcc (GCC) 9.2.1 20190827 (Red Hat 9.2.1-1)
CUDA/cuDNN version: CUDA 10.2, cuDNN 7.6.5.33
GPU model and memory: 2x GeForce RTX 2080 Ti 12gb

Describe the current behavior
When attempting to use tf.config.set_visible_devices() in conjunction with tf.python.keras.mixed_precision.experimental.policy.set_policy(), the Tensorflow errors with:
&lt;denchmark-code&gt;RuntimeError: TensorFlow device (GPU:0) is being mapped to multiple CUDA devices (0 now, and 1 previously), which is not supported. This may be the result of providing different GPU configurations (ConfigProto.gpu_options, for example different visible_device_list) when creating multiple Sessions in the same process. This is not  currently supported, see https://github.com/tensorflow/tensorflow/issues/19083
&lt;/denchmark-code&gt;

Describe the expected behavior
No error
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
devices = tf.config.list_physical_devices('GPU')
tf.config.set_visible_devices(devices[1:], 'GPU')

from tensorflow.python.keras.mixed_precision.experimental import policy as mixed_precision
mixed_precision.set_policy(mixed_precision.Policy('mixed_float16'))
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='phemmer' date='2020-04-14T04:43:34Z'>
		&lt;denchmark-link:https://github.com/phemmer&gt;@phemmer&lt;/denchmark-link&gt;
, I have run this code on google colab GPU but i don't found any issue. For your reference link of gist is &lt;denchmark-link:https://gist.github.com/khimraj/262dbd66a71c266c81f17249f7ba67fe&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='phemmer' date='2020-04-14T04:49:59Z'>
		And google collab gives you multiple GPUs? I don't know what this will do if you only have 1 GPU
		</comment>
		<comment id='3' author='phemmer' date='2020-04-14T22:28:09Z'>
		Ugh I thought I fixed this in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/10e5748ddfcf0c60e5ef0a90bb72a34bc55190ec&gt;10e5748&lt;/denchmark-link&gt;
 but didn't. I still call  even though I intended not to call it.
I will fix, but I'm unsure if this can be cherrypicked into TF 2.2 this late in the process.
As a hacky workaround, you can fix by adding the following lines of code anywhere before setting the policy.
&lt;denchmark-code&gt;if tf.__version__.startswith('2.2.'):
  from tensorflow.python.keras.mixed_precision.experimental import device_compatibility_check
  device_compatibility_check.log_device_compatibility_check = lambda policy_name, skip_local: None
&lt;/denchmark-code&gt;

This replaces the problematic function with one that does nothing. The function normally just logs some info. Due to this bug, the function fails if list_physical_devices is called.
		</comment>
		<comment id='4' author='phemmer' date='2020-04-15T20:47:01Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38516&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38516&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>