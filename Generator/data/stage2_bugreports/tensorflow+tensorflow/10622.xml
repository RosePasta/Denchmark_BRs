<bug id='10622' author='ahundt' open_date='2017-06-11T02:50:23Z' closed_time='2018-08-11T01:39:58Z'>
	<summary>RecordInput Documentation in API doc site</summary>
	<description>
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/python/ops/data_flow_ops.py#L1602&gt;RecordInput is in the tf 1.2 code&lt;/denchmark-link&gt;
 but I don't see it in the &lt;denchmark-link:https://www.tensorflow.org/versions/r1.2/api_docs/python/&gt;tf 1.2 API docs&lt;/denchmark-link&gt;
. Should it be present?
	</description>
	<comments>
		<comment id='1' author='ahundt' date='2017-06-13T16:26:32Z'>
		This does seem like a documentation bug.
&lt;denchmark-link:https://github.com/ekelsen&gt;@ekelsen&lt;/denchmark-link&gt;
  (it seems you authored it) and &lt;denchmark-link:https://github.com/wolffg&gt;@wolffg&lt;/denchmark-link&gt;
 could you take a look?
		</comment>
		<comment id='2' author='ahundt' date='2017-06-13T17:07:48Z'>
		Mark, is this an issue with an unsealed library?
		</comment>
		<comment id='3' author='ahundt' date='2017-06-13T18:23:45Z'>
		The opposite problem actually. It's over-sealed and the objects are not exposed.
It is removed by the  in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/standard_ops.py&gt;standard_ops&lt;/denchmark-link&gt;
.
Its neighbor, , is made visible by the  in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/io_ops.py&gt;io_ops&lt;/denchmark-link&gt;
.
So if we want it exposed as tf.RecordInput we would just need to add @@RecordInput there. It's probably even better to move those @@s across to data_flow_ops where these things are defined.
The same situation seems to apply to Barrier and StagingArea.
		</comment>
		<comment id='4' author='ahundt' date='2017-06-13T19:30:28Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 can you comment on the intended API here? It look like these are meant to be public. Are they meant to go in the main  namespace of is there another place for them.
		</comment>
		<comment id='5' author='ahundt' date='2017-06-13T20:09:48Z'>
		I'm pretty sure that Barrier and StagingArea are intentionally not exposed, so the same ma apply here. Can you ask the authors to make sure these are not intentionally private?
		</comment>
		<comment id='6' author='ahundt' date='2017-06-13T20:20:27Z'>
		The current state is intentional.
		</comment>
		<comment id='7' author='ahundt' date='2017-07-08T11:13:39Z'>
		Why would it be intentional? Because the C++ backend  open (&lt;denchmark-link:https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/record-input&gt;source&lt;/denchmark-link&gt;
), and it's been described and recommended in the high performance models guide (&lt;denchmark-link:https://www.tensorflow.org/performance/performance_models&gt;source&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='8' author='ahundt' date='2017-07-09T00:23:15Z'>
		&lt;denchmark-link:https://github.com/TimZaman&gt;@TimZaman&lt;/denchmark-link&gt;
 has a valid point
		</comment>
		<comment id='9' author='ahundt' date='2017-07-09T05:56:49Z'>
		If they are used, we should expose them through a public endpoint in contrib. We don't want to expose them directly since that would subject them to API stability guarantees, and they're not ready for that yet.
		</comment>
		<comment id='10' author='ahundt' date='2017-07-09T18:22:32Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 There are some other TF APIs that have been both documented and clearly marked as experimental and subject to change, which I think would work well here. I agree regarding relocating to contrib as well.  How does that sounds as an approach?
		</comment>
		<comment id='11' author='ahundt' date='2017-07-09T18:24:09Z'>
		Considering recent discussion can this be reopened?
		</comment>
		<comment id='12' author='ahundt' date='2017-12-20T19:15:38Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='13' author='ahundt' date='2017-12-20T22:03:15Z'>
		I think this is still valid for the python api version
		</comment>
		<comment id='14' author='ahundt' date='2018-01-04T19:21:26Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='15' author='ahundt' date='2018-01-04T20:26:57Z'>
		&lt;denchmark-link:https://github.com/tfboyd&gt;@tfboyd&lt;/denchmark-link&gt;
, you seem to own the relevant docs. Is the recommendation to use  still up to date? I have the feeling that this been replaced by .
		</comment>
		<comment id='16' author='ahundt' date='2018-01-12T18:52:56Z'>
		These can definitely be exposed as symbols in contrib. Please send a PR. Sorry for the endless delays.
Exposing in contrib is (for now) our way of making as experimental.
		</comment>
		<comment id='17' author='ahundt' date='2018-01-23T23:07:38Z'>
		A member of the TensorFlow organization has replied after the stat:awaiting tensorflower label was applied.
		</comment>
		<comment id='18' author='ahundt' date='2018-02-07T13:47:40Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='19' author='ahundt' date='2018-02-07T23:55:23Z'>
		Who should provide this PR?
		</comment>
		<comment id='20' author='ahundt' date='2018-02-22T13:10:34Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='21' author='ahundt' date='2018-04-03T23:53:10Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/18223&gt;#18223&lt;/denchmark-link&gt;
 to expose  symbol and docs in .
		</comment>
	</comments>
</bug>