<bug id='7664' author='xiatian122' open_date='2017-02-19T10:04:04Z' closed_time='2017-12-21T02:31:39Z'>
	<summary>tf.nn has no attribute rnn_cell in version 1.0.1</summary>
	<description>
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System: Ubuntu 16.04
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
If installed from binary pip package, provide:
1.0.0
&lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;

` in makeGRUCells()
7
8         def makeGRUCells():
----&gt; 9             base_cell = tf.nn.rnn_cell.GRUCell(num_units=RNN_HIDDEN_SIZE,)
10             layered_cell = tf.nn.rnn_cell.MultiRNNCell([base_cell] * NUM_LAYERS,state_is_tuple=False)
11             attn_cell =tf.contrib.rnn.AttentionCellWrapper(cell=layered_cell,attn_length=ATTN_LENGTH,state_is_tuple=False)
AttributeError: 'module' object has no attribute 'rnn_cell'`
&lt;denchmark-h:h3&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Logs or other output that would be helpful&lt;/denchmark-h&gt;

(If logs are large, please upload as attachment or provide link).
	</description>
	<comments>
		<comment id='1' author='xiatian122' date='2017-02-19T10:48:11Z'>
		It was moved to contrib. Take a look &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/contrib/rnn&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='xiatian122' date='2017-02-19T14:32:42Z'>
		The change is not mentioned in release notes, conversion script doesn't notice it too.
		</comment>
		<comment id='3' author='xiatian122' date='2017-02-20T00:35:11Z'>
		&lt;denchmark-link:https://github.com/gaika&gt;@gaika&lt;/denchmark-link&gt;
, sorry about that. Unfortunately it appears a few things slipped through. I'll update the conversion script. &lt;denchmark-link:https://github.com/yifeif&gt;@yifeif&lt;/denchmark-link&gt;
, can you update the release notes, and &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 are there any rnn things that need to be added to the release notes?
		</comment>
		<comment id='4' author='xiatian122' date='2017-02-20T00:36:52Z'>
		##TODO

 fix converter script (aselle)
 fix release notes (yifeif)
 document anything else that is needed on release notes (ebrevdo)

		</comment>
		<comment id='5' author='xiatian122' date='2017-02-20T02:46:15Z'>
		&lt;denchmark-link:https://github.com/xiatian122&gt;@xiatian122&lt;/denchmark-link&gt;
 Why did you close it? A lot of people will run into this issue when migrating to 1.0.
		</comment>
		<comment id='6' author='xiatian122' date='2017-02-20T03:47:22Z'>
		Andrew, it does indeed seem that the move of many of the ops and cells to
tf.contrib.rnn was not mentioned in release.md.  mea culpa; i was hoping to
get them all back into core by 1.0.  Unfortunately looks like it won't
happen until TF 1.0.

So in the meantime, we should update the release notes to say that
tf.nn.rnn_cell.* and most functions in tf.nn.rnn.* (with the exception of
dynamic_rnn and raw_rnn) are temporarily in tf.contrib.rnn.  They will move
back into core (presumably) for TF 1.1.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Sun, Feb 19, 2017 at 6:46 PM, Joe Petviashvili ***@***.***&gt; wrote:
 Why did you close it? A lot of people will run into this issue when
 migrating to 1.0.

 —
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub
 &lt;#7664 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim5Z7eP4hB-Xl5x41Fwr4osdjdmMLks5reP6LgaJpZM4MFasF&gt;
 .



		</comment>
		<comment id='7' author='xiatian122' date='2017-02-23T02:22:39Z'>
		i also ran into this issue. I realized tf.nn.rnn_cell.DropoutWrapper is moved to Module: tf.contrib.rnn.core_rnn_cell. What is this? Why isn't all this included in the upgrade script??
I think i need to migrate back to 0.12 for now...
		</comment>
		<comment id='8' author='xiatian122' date='2017-04-13T12:30:34Z'>
		I also encountered such problems in Tensorflow 1.0:
lstm_cell = tf.nn.rnn_cell.BasicLSTMCell(size, forget_bias=0.0, state_is_tuple=True)
AttributeError: 'module' object has no attribute 'rnn_cell'
It can not find 'rnn_cell'. When I use tf.contrib.rnn.BasicLSTMCell, it worked. So i suggest you change the  nn.rnn_cell to contrib.rnn.
		</comment>
		<comment id='9' author='xiatian122' date='2017-04-13T14:53:06Z'>
		&lt;denchmark-link:https://github.com/yifeif&gt;@yifeif&lt;/denchmark-link&gt;
, could you update the release notes?
		</comment>
		<comment id='10' author='xiatian122' date='2017-04-13T17:16:52Z'>
		Release note was updated in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/7745&gt;#7745&lt;/denchmark-link&gt;
 to indicate that RNN is temporarily moved to contrib. But it also says it will be back in core in r1.1. We should update that part to 1.2, &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
?  Also cc &lt;denchmark-link:https://github.com/av8ramit&gt;@av8ramit&lt;/denchmark-link&gt;
 for release.
		</comment>
		<comment id='11' author='xiatian122' date='2017-04-13T21:25:00Z'>
		Yes; we should definitely update that to document the  move back in TF 1.2;
not 1.1.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Apr 13, 2017 at 10:17 AM, Yifei Feng ***@***.***&gt; wrote:
 Release note was updated in #7745
 &lt;#7745&gt; to indicate that RNN
 is temporarily moved to contrib. But it also says it will be back in core
 in r1.1. We should update that part to 1.2, @ebrevdo
 &lt;https://github.com/ebrevdo&gt;? Also cc @av8ramit
 &lt;https://github.com/av8ramit&gt; for release.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#7664 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim3sUUEoVMa-NPKBs5iwpQ2hcTBeWks5rvliagaJpZM4MFasF&gt;
 .



		</comment>
		<comment id='12' author='xiatian122' date='2017-04-20T01:58:11Z'>
		I am using tensorflow-1.1.0rc2, when I use the code for:
scell = tf.nn.rnn_cell.GRUCell(embedding_size)
I get the following error:
AttributeError: module 'tensorflow.python.ops.nn' has no attribute 'rnn_cell'
what should I use instead  of  tf.nn.rnn_cell.GRUCell for 1.1.0rc2 version?
		</comment>
		<comment id='13' author='xiatian122' date='2017-04-20T03:17:04Z'>
		tf.contrib.rnn.GRUCell
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Apr 19, 2017 6:58 PM, "davtalab" ***@***.***&gt; wrote:
 I am using tensorflow-1.1.0rc2, when I use the code for:
 scell = tf.nn.rnn_cell.GRUCell(embedding_size)

 I get the following error:
 AttributeError: module 'tensorflow.python.ops.nn' has no attribute
 'rnn_cell'

 what should I use instead of tf.nn.rnn_cell.GRUCell for 1.1.0rc2 version?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#7664 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim8DzDevSgw98DrX4Xrix4CJyanaCks5rxrvHgaJpZM4MFasF&gt;
 .



		</comment>
		<comment id='14' author='xiatian122' date='2017-04-28T22:18:48Z'>
		Added a PR to fix the release notes to indicate TF 1.2 rather than TF 1.1.
Looks like the only remaining thing to fix this now is to update the conversion script?
		</comment>
		<comment id='15' author='xiatian122' date='2017-04-28T22:51:31Z'>
		FYI now the release note should be updated in 1.0, 1.1 and master branches. Thanks &lt;denchmark-link:https://github.com/nealwu&gt;@nealwu&lt;/denchmark-link&gt;
!
		</comment>
		<comment id='16' author='xiatian122' date='2017-05-09T06:21:54Z'>
		One more question here. I saved a RNN model in TF 0.12, how can I restore it in TF1.0?
		</comment>
		<comment id='17' author='xiatian122' date='2017-05-15T16:52:56Z'>
		i got this error what i do
File "C:\Users\win-7\Downloads\Compressed\tensorflow_chatbot-master\seq2seq_model.py", line 98, in init
single_cell = tf.nn.rnn_cell.GRUCell(size)
AttributeError: module 'tensorflow.python.ops.nn' has no attribute 'rnn_cell'
and the error causing code is
&lt;denchmark-h:h1&gt;Create the internal multi-layer cell for our RNN.&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;single_cell = tf.nn.rnn_cell.GRUCell(size)                                   &lt;&lt;--- line 98
if use_lstm:
  single_cell = tf.nn.rnn_cell.BasicLSTMCell(size)                  
cell = single_cell
if num_layers &gt; 1:
  cell = tf.nn.rnn_cell.MultiRNNCell([single_cell] * num_layers)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='18' author='xiatian122' date='2017-05-15T18:19:30Z'>
		Hi &lt;denchmark-link:https://github.com/athuldevin&gt;@athuldevin&lt;/denchmark-link&gt;
, as mentioned above,  has moved to .
What you should actually do to solve the problem however is to pull your repository / grab the latest version of the code at &lt;denchmark-link:https://github.com/tensorflow/models/blob/master/tutorials/rnn/translate/seq2seq_model.py&gt;https://github.com/tensorflow/models/blob/master/tutorials/rnn/translate/seq2seq_model.py&lt;/denchmark-link&gt;
. Your current version is out of date, and there have been a few other bugs fixed since then.
		</comment>
		<comment id='19' author='xiatian122' date='2017-05-15T23:19:11Z'>
		The RNN definition for TF 0.12 is different from 1.0: tf.nn. * -&gt; tf.contrib.rnn. *
The model is not compatible, in other words, once we trained a model on TF 0.12, it is hard to restore it on TF 1.0.
I wrote an adapter, using which you can transfer TF 0.12 RNN model into TF 1.0.
Sample code ({k} indicates the k_th RNN layer):
replace_vars = {
'rnn/rnn/MultiRNNCell/Cell{k}/BasicLSTMCell/Linear/Matrix': 'rnn/rnn/multi_rnn_cell/cell_{k}/basic_lstm_cell/weights',
'rnn/rnn/MultiRNNCell/Cell{k}/BasicLSTMCell/Linear/Bias': 'rnn/rnn/multi_rnn_cell/cell_{k}/basic_lstm_cell/biases'}
saver.restore(sess, "old.ckpt")
names_to_vars = {v.op.name: v for v in tf.all_variables()}
for key in replace_vars.keys():
bias_var = names_to_vars[key]
names_to_vars[replace_vars[key]] = bias_var
del names_to_vars[key]
saver = tf.train.Saver(var_list=names_to_vars)
saver.save(sess, 'new.ckpt')
You may refer to this repo for a complete solution:
&lt;denchmark-link:https://github.com/physicso/TensorFlow_RNN_Adaptor&gt;https://github.com/physicso/TensorFlow_RNN_Adaptor&lt;/denchmark-link&gt;

		</comment>
		<comment id='20' author='xiatian122' date='2017-05-17T20:31:54Z'>
		FYI we'll try to bring the tf.nn.rnn_cell namespace back in TF 1.2.
		</comment>
		<comment id='21' author='xiatian122' date='2017-05-19T06:46:53Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 Great news, thanks!
		</comment>
		<comment id='22' author='xiatian122' date='2017-05-21T16:24:50Z'>
		upgraded to 1.2.0rc0
was rnn NOT moved back to core?
still getting:
AttributeError: module 'tensorflow.python.ops.nn' has no attribute 'rnn_cell'
		</comment>
		<comment id='23' author='xiatian122' date='2017-05-21T20:35:04Z'>
		I have a PR in place undergoing internal testing, should go out next week
in the nighties and then be in the final 1.2 release.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On May 21, 2017 9:25 AM, "LZ" ***@***.***&gt; wrote:
 upgraded to 1.2.0rc0
 was rnn NOT moved back to core?
 still getting:
 AttributeError: module 'tensorflow.python.ops.nn' has no attribute
 'rnn_cell'

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#7664 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim73dA2nmYdGLQq0ET72BrqpOpv1Qks5r8GVmgaJpZM4MFasF&gt;
 .



		</comment>
		<comment id='24' author='xiatian122' date='2017-05-21T20:35:34Z'>
		And it'll be tf.nn.rnn_cell as before.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On May 21, 2017 1:34 PM, "Eugene Brevdo" ***@***.***&gt; wrote:
 I have a PR in place undergoing internal testing, should go out next week
 in the nighties and then be in the final 1.2 release.

 On May 21, 2017 9:25 AM, "LZ" ***@***.***&gt; wrote:

&gt; upgraded to 1.2.0rc0
&gt; was rnn NOT moved back to core?
&gt; still getting:
&gt; AttributeError: module 'tensorflow.python.ops.nn' has no attribute
&gt; 'rnn_cell'
&gt;
&gt; —
&gt; You are receiving this because you were mentioned.
&gt; Reply to this email directly, view it on GitHub
&gt; &lt;#7664 (comment)&gt;,
&gt; or mute the thread
&gt; &lt;https://github.com/notifications/unsubscribe-auth/ABtim73dA2nmYdGLQq0ET72BrqpOpv1Qks5r8GVmgaJpZM4MFasF&gt;
&gt; .
&gt;



		</comment>
		<comment id='25' author='xiatian122' date='2017-05-27T01:56:21Z'>
		Is there a wheel for 1.2-rc1 gpu for windows? Can't seem to find it.
		</comment>
		<comment id='26' author='xiatian122' date='2017-05-31T08:19:35Z'>
		Hi,
I'm trying to move my LSTM network from TF v0.12 to v1.1, but its learning capabilities are very different:
in v0.12 I had:
cell = tf.nn.rnn_cell.BasicLSTMCell(num_units=n_hidden, state_is_tuple=True)
cell = tf.nn.rnn_cell.MultiRNNCell([cell] * num_layers)
cell = tf.nn.rnn_cell.DropoutWrapper(cell, output_keep_prob=dropout)
in my TFv1.1 code I have now:
cell = []
for _ in range(num_layers):
cell.append(tf.contrib.rnn.BasicLSTMCell(num_units=n_hidden, state_is_tuple=True) )
multicell = tf.contrib.rnn.MultiRNNCell([cell[i] for i in range(num_layers)])
multicell = tf.contrib.rnn.DropoutWrapper(multicell, output_keep_prob=dropout)
And these are not equivalent. The 0.12 version was learning much better than the one in 1.1. What is the reason? Did I move my code to 1.1 correctly?
		</comment>
		<comment id='27' author='xiatian122' date='2017-06-09T02:13:37Z'>
		This works:
cell = tf.contrib.rnn.BasicRNNCell(num_units = rnn_size) in current Tensorflow version
		</comment>
		<comment id='28' author='xiatian122' date='2017-06-28T05:27:02Z'>
		Use tf.nn.rnn_cell.MultiRNNCell.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Jun 26, 2017 1:25 AM, "Julian Niedermeier" ***@***.***&gt; wrote:
 There seems to be a discrepancy between tensorflow-gpu v1.2.0 from pip
 and tensorflow v1.2.0 from pip.
 I run the following within a model_fn for Estimator:

 import tensorflow.contrib.rnn as rnn
 def single_cell():
         return rnn.BasicLSTMCell(cell_size)
 cell = rnn.core_rnn_cell.MultiRNNCell(
             [single_cell() for _ in range(layers)])

 It throws the following error for tensorflow-gpu but works for tensorflow:

   File "/home/user/miniconda3/envs/pvalearning-gpu/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py", line 289, in new_func
     return func(*args, **kwargs)
   File "/home/user/miniconda3/envs/pvalearning-gpu/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 455, in fit
     loss = self._train_model(input_fn=input_fn, hooks=hooks)
   File "/home/user/miniconda3/envs/pvalearning-gpu/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 955, in _train_model
     model_fn_ops = self._get_train_ops(features, labels)
   File "/home/user/miniconda3/envs/pvalearning-gpu/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 1162, in _get_train_ops
     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)
   File "/home/user/miniconda3/envs/pvalearning-gpu/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py", line 1133, in _call_model_fn
     model_fn_results = self._model_fn(features, labels, **kwargs)
   File "/home/user/pva/learning/packages/model/my_model.py", line 67, in __model__
     cell = rnn.core_rnn_cell.MultiRNNCell(
 AttributeError: module 'tensorflow.contrib.rnn' has no attribute 'core_rnn_cell'

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#7664 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim1ZqMv07KGoo8CpW9DKfJlPDI56iks5sH2r8gaJpZM4MFasF&gt;
 .



		</comment>
		<comment id='29' author='xiatian122' date='2017-08-08T12:46:53Z'>
		my tensorflow version is 1.2.1, and I find these three things are the same thing.

tf.nn.rnn_cell.*
tf.contrib.rnn.*
tensorflow.python.ops.rnn_cell_impl.*

Proof it in ipython:
In [78]: tf.nn.rnn_cell.LSTMCell
Out[78]: tensorflow.python.ops.rnn_cell_impl.LSTMCell

In [79]: tf.contrib.rnn.LSTMCell
Out[79]: tensorflow.python.ops.rnn_cell_impl.LSTMCell
		</comment>
		<comment id='30' author='xiatian122' date='2017-12-20T19:28:09Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='31' author='xiatian122' date='2017-12-21T02:31:39Z'>
		&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/nn/rnn_cell&gt;tf.nn.rnn_cell&lt;/denchmark-link&gt;
 is available as of TensorFlow 1.2, so I think we can close this issue.
		</comment>
	</comments>
</bug>