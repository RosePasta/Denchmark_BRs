<bug id='37196' author='lutzroeder' open_date='2020-02-29T19:35:16Z' closed_time='2020-07-13T23:04:34Z'>
	<summary>Keras saves invalid JSON files containing NaN</summary>
	<description>
Describe the current behavior
JSON saved by Keras contains  which is invalid according to &lt;denchmark-link:https://tools.ietf.org/html/rfc7159&gt;RFC 7159&lt;/denchmark-link&gt;
:

"Numeric values that cannot be represented in the grammar below (such as Infinity and NaN) are not permitted."

Describe the expected behavior
Keras saves correct JSON format.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
i = tf.keras.layers.Input((600,600,3))
o = tf.keras.layers.Conv2D(16, (3, 3), padding='same', name='conv0',
       kernel_regularizer=tf.keras.regularizers.l2(1e-2),
       bias_regularizer=tf.keras.regularizers.l2(None),
       kernel_initializer=tf.keras.initializers.RandomNormal(stddev=0.01),
       bias_initializer=tf.keras.initializers.constant(0.0))(i)
model = tf.keras.models.Model(i, o)
with open('repro.json', 'w') as json_file:
    json_file.write(model.to_json())
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;~ node
&gt; JSON.parse(require('fs').readFileSync('repro.json', 'utf-8'))
Uncaught SyntaxError: Unexpected token N in JSON at position 861 
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4270871/repro.zip&gt;repro.zip&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/lutzroeder/netron/issues/435&gt;lutzroeder/netron#435&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='lutzroeder' date='2020-03-04T09:00:51Z'>
		I was able to replicate the issue Tf 2.1.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/d029a1da140e81b7b510335a0acf23db/untitled.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='lutzroeder' date='2020-03-13T02:34:58Z'>
		&lt;denchmark-link:https://github.com/lutzroeder&gt;@lutzroeder&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 I am willing to take a closer look, fix it and send a PR.
		</comment>
		<comment id='3' author='lutzroeder' date='2020-03-16T06:57:27Z'>
		&lt;denchmark-link:https://github.com/lutzroeder&gt;@lutzroeder&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;

This bug is caused by  which will convert  to JSON string when  is called.
 will convert to NumPy float first, it will be a .
Then  will be converted to Python float, it will be .
Finally,  will be converted to a JSON string, python's built-in JSON library allow dump  to string as  (&lt;denchmark-link:https://docs.python.org/3.6/library/json.html#infinite-and-nan-number-values&gt;https://docs.python.org/3.6/library/json.html#infinite-and-nan-number-values&lt;/denchmark-link&gt;
).
A gist for this can be found &lt;denchmark-link:https://colab.research.google.com/drive/1bOOODHoS9T1_gvFNA8PhqsSQigsj35__&gt;here&lt;/denchmark-link&gt;
.
&lt;denchmark-link:https://github.com/lutzroeder&gt;@lutzroeder&lt;/denchmark-link&gt;
 Use  instead of  can fix you problem.
I will submit a PR later to make sure tf.keras.regularizers.l2 don't accept None.
		</comment>
		<comment id='4' author='lutzroeder' date='2020-04-19T05:50:15Z'>
		Does this same issue apply to tf.keras.layers.BatchNormalization()?
I'm using the Pix2Pix example code and having a similar problem with NaN values in my one set of weights and in my model.json when created with tfjs.
		</comment>
		<comment id='5' author='lutzroeder' date='2020-04-19T07:45:43Z'>
		Hi &lt;denchmark-link:https://github.com/clkruse&gt;@clkruse&lt;/denchmark-link&gt;
, If your arguments contain None which not supposed to be. It's likely to be the same issue.
		</comment>
		<comment id='6' author='lutzroeder' date='2020-06-02T07:57:12Z'>
		&lt;denchmark-link:https://github.com/clkruse&gt;@clkruse&lt;/denchmark-link&gt;
 Can you submit an issue for your problem, so I can check and fix it.
		</comment>
		<comment id='7' author='lutzroeder' date='2020-06-03T05:34:36Z'>
		&lt;denchmark-link:https://github.com/howl-anderson&gt;@howl-anderson&lt;/denchmark-link&gt;
 I have an issue out for my version of the problem in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/38698&gt;#38698&lt;/denchmark-link&gt;
.
Note: the error only seems to occur when batchnorm is used with a batch size of 1.
		</comment>
		<comment id='8' author='lutzroeder' date='2020-06-03T05:48:19Z'>
		&lt;denchmark-link:https://github.com/clkruse&gt;@clkruse&lt;/denchmark-link&gt;
 I will take a close look to see if I can fix it.
		</comment>
		<comment id='9' author='lutzroeder' date='2020-07-13T20:50:02Z'>
		&lt;denchmark-link:https://github.com/lutzroeder&gt;@lutzroeder&lt;/denchmark-link&gt;
 can you confirm if your issue is fixed with the above commit by &lt;denchmark-link:https://github.com/howl-anderson&gt;@howl-anderson&lt;/denchmark-link&gt;
 , if so please close the issue.
		</comment>
		<comment id='10' author='lutzroeder' date='2020-07-13T23:04:35Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37196&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37196&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>