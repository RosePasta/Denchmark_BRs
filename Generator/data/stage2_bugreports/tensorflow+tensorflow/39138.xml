<bug id='39138' author='breadbread1984' open_date='2020-05-04T03:23:07Z' closed_time='2020-05-04T11:36:52Z'>
	<summary>can't save stacked lstm</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04 LTS
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.1.0
Python version: 3.6.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
the following model cause error. The error message is "RuntimeError: Unable to create link (name already exists)"
#!/usr/bin/python3
import tensorflow as tf;

def lstm():
  inputs = tf.keras.Input((25,256));
  results = tf.keras.layers.RNN([tf.keras.layers.LSTMCell(units = 512) for i in range(2)])(inputs);
  return tf.keras.Model(inputs = inputs, outputs = results);

if __name__ == "__main__":
  m = lstm();
  m.save('lstm.h5');
but model without stacking lstm can be serialized successfully.
#!/usr/bin/python3
import tensorflow as tf;

def lstm():
  inputs = tf.keras.Input((25,256));
  results = tf.keras.layers.RNN(tf.keras.layers.LSTMCell(units = 512))(inputs);
  return tf.keras.Model(inputs = inputs, outputs = results);

if __name__ == "__main__":
  m = lstm();
  m.save('lstm.h5');
Describe the expected behavior
the serialization should be processed without problem.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
#!/usr/bin/python3
import tensorflow as tf;

def lstm():
  inputs = tf.keras.Input((25,256));
  results = tf.keras.layers.RNN([tf.keras.layers.LSTMCell(units = 512) for i in range(2)])(inputs);
  return tf.keras.Model(inputs = inputs, outputs = results);

if __name__ == "__main__":
  m = lstm();
  m.save('lstm.h5');
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.

Traceback (most recent call last):
File "", line 3, in 
File "/home/xieyi/.local/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py", line 1008, in save
signatures, options)
File "/home/xieyi/.local/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/save.py", line 112, in save_model
model, filepath, overwrite, include_optimizer)
File "/home/xieyi/.local/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 109, in save_model_to_hdf5
save_weights_to_hdf5_group(model_weights_group, model_layers)
File "/home/xieyi/.local/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 631, in save_weights_to_hdf5_group
param_dset = g.create_dataset(name, val.shape, dtype=val.dtype)
File "/home/xieyi/.local/lib/python3.6/site-packages/h5py/_hl/group.py", line 139, in create_dataset
self[name] = dset
File "/home/xieyi/.local/lib/python3.6/site-packages/h5py/_hl/group.py", line 373, in setitem
h5o.link(obj.id, self.id, name, lcpl=lcpl, lapl=self._lapl)
File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
File "h5py/h5o.pyx", line 202, in h5py.h5o.link
RuntimeError: Unable to create link (name already exists)

	</description>
	<comments>
		<comment id='1' author='breadbread1984' date='2020-05-04T09:35:20Z'>
		&lt;denchmark-link:https://github.com/breadbread1984&gt;@breadbread1984&lt;/denchmark-link&gt;

Can you try with the latest TF version 2.2.0-rc4 ()
Looks like this issue got resolved in TF 2.2.0-rc4. Please check the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/8822e1e08c6c9d26c8b41676df3caa0f/untitled851.ipynb&gt;here&lt;/denchmark-link&gt;
.Please verify once and close the issue. Thanks!
		</comment>
		<comment id='2' author='breadbread1984' date='2020-05-04T11:36:52Z'>
		it solved the problem. thx
		</comment>
		<comment id='3' author='breadbread1984' date='2020-05-04T11:36:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39138&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39138&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>