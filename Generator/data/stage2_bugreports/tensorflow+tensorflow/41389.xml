<bug id='41389' author='ItsMeTheBee' open_date='2020-07-14T19:31:13Z' closed_time='2020-07-15T18:36:11Z'>
	<summary>Segmentation fault in subgraph.h when running tensorflow lite in ROS Foxy</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script
provided in TensorFlow): I used example code to write a Ros node
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ROS Foxy Docker Container (Ubuntu 20.04), currently testing on a x86_64 system but will deploy it to a aarch64 system
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue
happens on a mobile device: No
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): Git tag d855adf
Python version: None, I´m using C++
Bazel version (if compiling from source): None, I´m using Cmake 3.17
GCC/Compiler version (if compiling from source): 4:9.3.0-1ubuntu2
CUDA/cuDNN version: None
GPU model and memory: Google Coral Chip
Exact command to reproduce:

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I already described the problem &lt;denchmark-link:https://github.com/Namburger/edgetpu-minimal-example/issues/2&gt;here&lt;/denchmark-link&gt;

To make things short: I tried using &lt;denchmark-link:https://github.com/Namburger/edgetpu-minimal-example&gt;these examples&lt;/denchmark-link&gt;
 in ROS but got a Segmentation fault error when i tried calling interpreter.inputs()[index];
I´ve been told to ask here since it seems to be a Tensorflow API issue.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Start a docker container: docker run -it ros:foxy
Execute source /opt/ros/foxy/setup.bash
Run
&lt;denchmark-code&gt;apt update
apt install unzip
apt install curl
apt install libusb-1.0-0
&lt;/denchmark-code&gt;

Update cmake like this:
&lt;denchmark-code&gt;apt install -y wget
apt-get install libssl-dev
wget https://github.com/Kitware/CMake/releases/download/v3.17.0/cmake-3.17.0.tar.gz
tar xvf cmake-3.17.0.tar.gz
rm cmake-3.17.0.tar.gz
cd cmake-3.17.0/
./configure
make
make install
&lt;/denchmark-code&gt;

Create a dev_ws directory in the home folder
cd into /home/dev_ws
create a src folder
copy the zip file folder nn_tflite into the src folder
Directory structure should be
home
...|dev_ws
......| src
.........| dev_ws
............| nn_tflite
cd into /home/dev_ws and execute colcon build --packages-select nn_tflite --symlink-install
Execute  . install/setup.bash
Run the ros node with ros2 run nn_tflite tflite_nn
Running gbd:
cd install/nn_tflite/lib/nn_tflite/
gbd --args ./tflite_nn
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4925761/nn_tflite.zip&gt;nn_tflite.zip&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='ItsMeTheBee' date='2020-07-15T18:36:11Z'>
		This seems to be a system inconsistency.
After rebooting my pc and starting a new docker container it worked fine.
Sorry for the trouble!
		</comment>
		<comment id='2' author='ItsMeTheBee' date='2020-07-15T18:36:13Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41389&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41389&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>