<bug id='39925' author='getsanjeevdubey' open_date='2020-05-27T23:01:10Z' closed_time='2020-07-02T05:16:57Z'>
	<summary>Missing pre-processing for Mobilenet V2 model training</summary>
	<description>
Thank you for submitting a TensorFlow documentation issue. Per our GitHub
policy, we only address code/doc bugs, performance issues, feature requests, and
build/installation issues on GitHub.
The TensorFlow docs are open source! To get involved, read the documentation
contributor guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs&gt;https://www.tensorflow.org/community/contribute/docs&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

Please provide a link to the documentation entry, for example:
&lt;denchmark-link:https://colab.research.google.com/github/tensorflow/examples/blob/master/community/en/flowers_tf_lite.ipynb&gt;https://colab.research.google.com/github/tensorflow/examples/blob/master/community/en/flowers_tf_lite.ipynb&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/examples/blob/master/lite/codelabs/flower_classification/android/finish/app/src/main/java/org/tensorflow/lite/examples/classification/tflite/Classifier.java#L292&gt;https://github.com/tensorflow/examples/blob/master/lite/codelabs/flower_classification/android/finish/app/src/main/java/org/tensorflow/lite/examples/classification/tflite/Classifier.java#L292&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue (what needs changing):&lt;/denchmark-h&gt;

In the above codelabs tutorial, we see image has been rescaled to [0-1] by dividing by 255. Since pre-trained weights (imagenet) are trained by feed [-1 1] normalized image. Ideally tutorial should add that step to correctly leverage transfer learning.
&lt;denchmark-h:h3&gt;Clear description&lt;/denchmark-h&gt;

So what is happening is we create a tflite model trained with [0-1] based preprocessing. On android client we are doing [-1 1] based preprocessing before feeding to tflite model.
Can someone please clarify?
&lt;denchmark-h:h3&gt;Correct links&lt;/denchmark-h&gt;

Is the link to the source code correct?
&lt;denchmark-h:h3&gt;Parameters defined&lt;/denchmark-h&gt;

Are all parameters defined and formatted correctly?
&lt;denchmark-h:h3&gt;Returns defined&lt;/denchmark-h&gt;

Are return values defined?
&lt;denchmark-h:h3&gt;Raises listed and defined&lt;/denchmark-h&gt;

Are the errors defined? For example,
&lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file#raises&gt;https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file#raises&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Usage example&lt;/denchmark-h&gt;

Is there a usage example?
See the API guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_ref&gt;https://www.tensorflow.org/community/contribute/docs_ref&lt;/denchmark-link&gt;

on how to write testable usage examples.
&lt;denchmark-h:h3&gt;Request visuals, if applicable&lt;/denchmark-h&gt;

Are there currently visuals? If not, will it clarify the content?
&lt;denchmark-h:h3&gt;Submit a pull request?&lt;/denchmark-h&gt;

Are you planning to also submit a pull request to fix the issue? See the docs
contributor guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs&gt;https://www.tensorflow.org/community/contribute/docs&lt;/denchmark-link&gt;
,
docs API guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_ref&gt;https://www.tensorflow.org/community/contribute/docs_ref&lt;/denchmark-link&gt;
 and the
docs style guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_style&gt;https://www.tensorflow.org/community/contribute/docs_style&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='getsanjeevdubey' date='2020-06-11T21:27:41Z'>
		&lt;denchmark-link:https://github.com/yashk2810&gt;@yashk2810&lt;/denchmark-link&gt;
 Could you please help with this?
		</comment>
		<comment id='2' author='getsanjeevdubey' date='2020-06-12T03:34:15Z'>
		&lt;denchmark-link:https://github.com/xunkai55&gt;@xunkai55&lt;/denchmark-link&gt;
 Can you clarify why the TF Lite image classification seems to normalize image input to [-1, 1] instead of [0, 1]?
&lt;denchmark-link:https://github.com/tensorflow/examples/blob/master/lite/codelabs/flower_classification/android/finish/app/src/main/java/org/tensorflow/lite/examples/classification/tflite/Classifier.java#L292&gt;https://github.com/tensorflow/examples/blob/master/lite/codelabs/flower_classification/android/finish/app/src/main/java/org/tensorflow/lite/examples/classification/tflite/Classifier.java#L292&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/getsanjeevdubey&gt;@getsanjeevdubey&lt;/denchmark-link&gt;
 Btw have you tried out TF Lite Model Maker? It's an easier way to do transfer learning for TF Lite.
&lt;denchmark-link:https://www.tensorflow.org/lite/tutorials/model_maker_image_classification&gt;https://www.tensorflow.org/lite/tutorials/model_maker_image_classification&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='getsanjeevdubey' date='2020-06-12T04:26:43Z'>
		&lt;denchmark-link:https://github.com/khanhlvg&gt;@khanhlvg&lt;/denchmark-link&gt;
 Thanks for the response. I will look into TF Lite Model Maker.
Just to make my point clear, the issue is with: not having  preprocessing for both pipelines.
Had the original model was trained on [-1, 1] it would have been correct.
		</comment>
		<comment id='4' author='getsanjeevdubey' date='2020-07-02T05:16:57Z'>
		You're right. The image classification model in the codelab is trained with Model Maker, which emits models required input normalization to [0, 1]. We have fixed the Android app accordingly. Thanks for reporting the issue.
&lt;denchmark-link:https://github.com/tensorflow/examples/commit/bb26df46b498eb1a67630f29619705eaa043528f&gt;tensorflow/examples@bb26df4&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>