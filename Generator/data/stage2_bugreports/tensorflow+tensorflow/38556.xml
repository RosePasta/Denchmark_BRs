<bug id='38556' author='zhao1157' open_date='2020-04-15T02:25:25Z' closed_time='2020-04-19T04:14:42Z'>
	<summary>Can not create control inputs with tf.control_dependencies</summary>
	<description>
I was expecting to get some control inputs with tf.control_dependencies(), but the following test code did not give back what I expected.
&lt;denchmark-code&gt;import tensorflow as tf

a = tf.get_variable('a', shape = [2, 3])
b = tf.get_variable('b', shape = [2, 3])
c = tf.scalar_mul(2, a)
d = tf.scalar_mul(3, b)

with tf.control_dependencies([d, c]):
  f = d-c

print (f.op.control_inputs)
&lt;/denchmark-code&gt;

It returned []. If I did the other way
&lt;denchmark-code&gt;f = d-c
f.op._add_control_inputs([c.op, d.op])
print (f.op.control_inputs)
&lt;/denchmark-code&gt;

I got [&lt;tf.Operation 'Mul' type=Mul&gt;, &lt;tf.Operation 'Mul_1' type=Mul&gt;], which seems good.
So does tf.control_dependencies() create control dependencies? Or does op.control_inputs reflect all the control inputs? Could this be a bug?
	</description>
	<comments>
		<comment id='1' author='zhao1157' date='2020-04-15T10:20:52Z'>
		Was able to reproduce the issue with Tf1.15.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/481a920d74fafb5e1ed971e1dfd34231/untitled510.ipynb#scrollTo=0NrsY94pUuqc&gt;here&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/b590bda50bd92e63b3e28380c9b98718/untitled511.ipynb&gt;gist&lt;/denchmark-link&gt;
 without . Thanks
		</comment>
		<comment id='2' author='zhao1157' date='2020-04-17T01:13:19Z'>
		You have to use tf.Variable function instead of tf.get_Variable. I made a toy example to show tf.control_dependecies behavior.
import tensorflow as tf
tf.reset_default_graph()
a = tf.Variable(name='a', initial_value=2)
b = tf.Variable(name='b', initial_value=1) 
c = tf.multiply(2, a)
d = tf.multiply(3, b)

with tf.control_dependencies([c,d]):
  f = tf.subtract(a,b)

print(f.op.control_inputs)
output:
[&lt;tf.Operation 'Mul' type=Mul&gt;, &lt;tf.Operation 'Mul_1' type=Mul&gt;]
		</comment>
		<comment id='3' author='zhao1157' date='2020-04-17T01:43:12Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 Thanks, it solved my problem. I know there are some differences between  and  about variable sharing, but should control dependencies be one of them?
		</comment>
		<comment id='4' author='zhao1157' date='2020-04-17T02:20:18Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 I just found another problem with .
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.python.ops import control_flow_ops
tf.reset_default_graph()
a = tf.constant([2,3], dtype = tf.float32)
b = tf.constant([4,5], dtype = tf.float32)
c = tf.multiply(2., a)
d = tf.multiply(3., b)

f = tf.subtract(a, b)
control_flow_ops.with_dependencies([c, d], f)

print(f.op.control_inputs)
&lt;/denchmark-code&gt;

It returned [].
		</comment>
		<comment id='5' author='zhao1157' date='2020-04-19T04:14:11Z'>
		 is deprecated long time ago. We recommend using  &lt;denchmark-link:https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/Graph#control_dependencies&gt;tf.control_dependencies&lt;/denchmark-link&gt;
 with the  keyword which does the same things. Thanks!
		</comment>
		<comment id='6' author='zhao1157' date='2020-04-19T04:14:43Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38556&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38556&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>