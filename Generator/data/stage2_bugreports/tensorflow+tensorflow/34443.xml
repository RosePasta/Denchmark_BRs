<bug id='34443' author='ClementWalter' open_date='2019-11-20T09:40:25Z' closed_time='2019-12-11T22:50:50Z'>
	<summary>Metrics not added when tf.keras.Model is compiled without loss</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): âœ…
OS Platform and Distribution : Linux Ubuntu 18.04
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 2.0.0

&lt;denchmark-code&gt;print(tf.version.GIT_VERSION, tf.version.VERSION)
v2.0.0-rc2-26-g64c3d38 2.0.0
&lt;/denchmark-code&gt;


Python version:

&lt;denchmark-code&gt;Python 3.6.8 (default, Jan 14 2019, 11:02:34)
[GCC 8.0.1 20180414 (experimental) [trunk revision 259383]] on linux
&lt;/denchmark-code&gt;


Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
When compiling a tf.keras model without adding a loss, the metrics are not added.
Describe the expected behavior
metrics should be computed in any case to give insights about the training as it is based on model output and true value given by the data loader/sequence.
Code to reproduce the issue
&lt;denchmark-code&gt;from tensorflow.python.keras.layers import Conv2D, GlobalAveragePooling2D, Input, Dense
from tensorflow.python.keras.models import Sequential
from tensorflow.python.keras.regularizers import l2

model = Sequential([
    Input((224, 224, 3)),
    Conv2D(256, (3, 3), kernel_regularizer=l2()),
    GlobalAveragePooling2D(),
    Dense(10, activation='sigmoid'),
])

# Metrics are added
model.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=['accuracy'])
print(model.metrics)

# Metric are empty
model.compile(optimizer='Adam', metrics=['accuracy'])
print(model.metrics)
&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='ClementWalter' date='2019-11-21T06:03:01Z'>
		I have tried on colab with TF version 2.0 , 2.1.0-dev20191120 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/a2743456a47bd50e730f05bc6dea0261/untitled385.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='ClementWalter' date='2019-12-06T22:10:44Z'>
		&lt;denchmark-link:https://github.com/ClementWalter&gt;@ClementWalter&lt;/denchmark-link&gt;
 Heres the reason. If the loss function is not defined, then the out put of this function  will be skipped during total loss calculation and feed targets
preparation as shown &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/1cf0898dd4331baf93fe77205550f2c2e6c90ee5/tensorflow/python/keras/engine/training.py#L1655&gt;here&lt;/denchmark-link&gt;
.
And the model loss and weighted metric sub-graphs are compiled together and this is the reason why you don't see metrics as shown &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/1cf0898dd4331baf93fe77205550f2c2e6c90ee5/tensorflow/python/keras/engine/training.py#L1639&gt;here&lt;/denchmark-link&gt;
 and this should not a hurdle. But we will look into this in future.
		</comment>
		<comment id='3' author='ClementWalter' date='2019-12-11T22:50:50Z'>
		&lt;denchmark-link:https://github.com/ClementWalter&gt;@ClementWalter&lt;/denchmark-link&gt;
 Closing this issue as this is an expected behavior. Please add additional comments and we can open this issue again. Thanks!
		</comment>
		<comment id='4' author='ClementWalter' date='2019-12-11T22:50:52Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34443&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34443&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>