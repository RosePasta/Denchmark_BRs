<bug id='39595' author='sayakpaul' open_date='2020-05-16T01:37:03Z' closed_time='2020-10-06T07:29:28Z'>
	<summary>Pixel range issue with `image_dataset_from_directory` after applying `convert_image_dtype`</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.3.0-dev20200514
Python version:
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
After creating a dataset with image_dataset_from_directory I am mapping it to tf.image.convert_image_dtype for scaling the pixel values to the range of [0, 1] and also to convert them to tf.float32 data-type. Looks like the value range is not getting changed.
Here's the self-contained code:
import matplotlib.pyplot as plt
import tensorflow as tf

# Get the flowers dataset
flowers = tf.keras.utils.get_file(
    'flower_photos',
    'https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz',
    untar=True)

def scale(image, label):
    return tf.image.convert_image_dtype(image, tf.float32), label

batch = tf.keras.preprocessing.image_dataset_from_directory(flowers)
batch = batch.map(scale)

image_batch, label_batch = next(iter(batch))

print(tf.reduce_max(image_batch[1,:])) # outputs: tf.Tensor(248.96571, shape=(), dtype=float32)
print(image_batch.dtype) # outputs: &lt;dtype: 'float32'&gt;
Describe the expected behavior
If my understanding is correct, then batch = batch.map(scale) should already take care of the scaling step.
Standalone code to reproduce the issue
&lt;denchmark-link:https://colab.research.google.com/gist/sayakpaul/831f2a584f92cdcc97f81bf0eb344ad1/scratchpad.ipynb&gt;Colab Gist&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='sayakpaul' date='2020-05-16T01:37:25Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='sayakpaul' date='2020-05-18T09:34:49Z'>
		I have tried in colab with TF nIghtly version () and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/9d665bc0d9e4cfaea247e310eed3a8e8/untitled897.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='3' author='sayakpaul' date='2020-10-06T06:16:33Z'>
		 expects the image to be between 0,1 if the type is float which is your case.
I am attaching the excerpt from the &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/image/convert_image_dtype&gt;link&lt;/denchmark-link&gt;


Now coming back to your issue. Since image_dataset_from_directory does not provide rescaling option either you can use ImageDataGenerator which provides rescaling option and then convert it to tf.data.Dataset object using tf.data.Dataset.from_generator or process the output from image_dataset_from_directory as follows:
&lt;denchmark-code&gt;from tensorflow.keras.layers.experimental.preprocessing import Rescaling
dataset = image_dataset_from_directory(directory)
rescale = Rescaling(scale=1.0/255)
rescaled_dataset = dataset.map(lambda image,label:(rescale(image),label))
&lt;/denchmark-code&gt;

In your case map your  with this  layer. Also check the documentation for Rescaling &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/layers/experimental/preprocessing/Rescaling&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='sayakpaul' date='2020-10-06T07:29:28Z'>
		Makes sense, thank you. I am aware of the other options you suggested. I am gonna close this issue.
		</comment>
		<comment id='5' author='sayakpaul' date='2020-10-06T07:29:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39595&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39595&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>