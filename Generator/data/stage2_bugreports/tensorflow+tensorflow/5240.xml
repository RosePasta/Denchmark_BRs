<bug id='5240' author='sjperkins' open_date='2016-10-27T14:54:22Z' closed_time='2016-10-27T20:21:32Z'>
	<summary>0.11.0rc1 linux 2.7 GPU nightlies ignore CUDA 7.5 installation, wants CUDA 8.0</summary>
	<description>
A couple of days ago the 0.11.0rc1 nightly depended on CUDA 7.5 &lt;denchmark-link:https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-linux/269/&gt;#269 for example&lt;/denchmark-link&gt;
. I've just downloaded today's nightly and it seems to want CUDA 8.0. Is CUDA 8.0 the new pip binary dependency or is this a mistake?
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

N/A
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System: Ubuntu 16.04
Installed version of CUDA and cuDNN: CUDA 7.5 and cuDNN 4.0.7
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
&lt;denchmark-code&gt;$ ls -l /usr/lib/x86_64-linux-gnu/libcud*
-rw-r--r-- 1 root root   322936 Sep 19  2015 /usr/lib/x86_64-linux-gnu/libcudadevrt.a
lrwxrwxrwx 1 root root       16 Mar 30  2016 /usr/lib/x86_64-linux-gnu/libcudart.so -&gt; libcudart.so.7.5
lrwxrwxrwx 1 root root       19 Mar 30  2016 /usr/lib/x86_64-linux-gnu/libcudart.so.7.5 -&gt; libcudart.so.7.5.18
-rw-r--r-- 1 root root   383336 Sep 19  2015 /usr/lib/x86_64-linux-gnu/libcudart.so.7.5.18
-rw-r--r-- 1 root root   720192 Sep 19  2015 /usr/lib/x86_64-linux-gnu/libcudart_static.a
lrwxrwxrwx 1 root root       12 Jun  5 01:26 /usr/lib/x86_64-linux-gnu/libcuda.so -&gt; libcuda.so.1
lrwxrwxrwx 1 root root       17 Jun  5 01:26 /usr/lib/x86_64-linux-gnu/libcuda.so.1 -&gt; libcuda.so.364.19
-rw-r--r-- 1 root root 16963368 Apr 19  2016 /usr/lib/x86_64-linux-gnu/libcuda.so.364.19
lrwxrwxrwx 1 root root       13 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn.so -&gt; libcudnn.so.4
lrwxrwxrwx 1 root root       17 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn.so.4 -&gt; libcudnn.so.4.0.7
-rwxr-xr-x 1 root root 61453024 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn.so.4.0.7
-rw-r--r-- 1 root root 62025862 Aug 29 10:59 /usr/lib/x86_64-linux-gnu/libcudnn_static.a
&lt;/denchmark-code&gt;

If installed from binary pip package, provide:

A link to the pip package you installed:
link
The output from python -c "import tensorflow; print(tensorflow.__version__)".

&lt;denchmark-code&gt;$ python -c 'import tensorflow'
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/__init__.py", line 23, in &lt;module&gt;
    from tensorflow.python import *
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/__init__.py", line 60, in &lt;module&gt;
    raise ImportError(msg)
ImportError: Traceback (most recent call last):
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/__init__.py", line 49, in &lt;module&gt;
    from tensorflow.python import pywrap_tensorflow
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py", line 28, in &lt;module&gt;
    _pywrap_tensorflow = swig_import_helper()
  File "/home/sperkins/venv/tftest/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py", line 24, in swig_import_helper
    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)
ImportError: libcudart.so.8.0: cannot open shared object file: No such file or directory


Error importing tensorflow.  Unless you are using bazel,
you should not try to import tensorflow from its source directory;
please exit the tensorflow source tree, and relaunch your python interpreter
from there.
&lt;/denchmark-code&gt;

If installed from source, provide

The commit hash (git rev-parse HEAD)
The output of bazel version

&lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Logs or other output that would be helpful&lt;/denchmark-h&gt;

(If logs are large, please upload as attachment or provide link).
	</description>
	<comments>
		<comment id='1' author='sjperkins' date='2016-10-27T19:33:58Z'>
		Yes,
&lt;denchmark-code&gt;ldd /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so
&lt;/denchmark-code&gt;

shows the dependency. I don't know that we have a build for 7.5, so at this point I'd recommend building from source.
&lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
 for potential additional insights.
		</comment>
		<comment id='2' author='sjperkins' date='2016-10-27T20:13:02Z'>
		Thanks, might be worth changing the issue to track a documentation change - os_setup.md hints at CUDA 7.5 as the standard.
		</comment>
		<comment id='3' author='sjperkins' date='2016-10-27T20:50:14Z'>
		Looks like we updated the branch for rc1, but when merging it back into master we missed that diff, and stayed with cuda7.5
&lt;denchmark-link:https://github.com/yifeif&gt;@yifeif&lt;/denchmark-link&gt;
 FYI
		</comment>
	</comments>
</bug>