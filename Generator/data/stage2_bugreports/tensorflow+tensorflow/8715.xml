<bug id='8715' author='snnn' open_date='2017-03-25T16:08:06Z' closed_time='2017-06-16T20:51:43Z'>
	<summary>RecordReader reads disk without buffer</summary>
	<description>
tensorflow::io::RecordReader calls RandomAccessFile::Read() directly, without go through IoBuffer.
And RandomAccessFile::Read() will call pread(2) or ReadFile OS API.
If there is an IoBuffer between them, it could reduce a lot of syscalls.
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

None
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System:
Windows 10
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
None
if installed from source, provide


The commit hash (git rev-parse HEAD)
c7b80d5


The output of bazel version
(compiled by cmake and vs 2017)


&lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;

None
&lt;denchmark-h:h3&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;

None
&lt;denchmark-h:h3&gt;Logs or other output that would be helpful&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='snnn' date='2017-03-26T02:06:06Z'>
		That might be a good candidate for a PR if you're willing to contribute.
&lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='snnn' date='2017-03-26T03:01:33Z'>
		Hi &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 , I'll take this.
I just found the interface is a bit inconsistent.  For compressed file, it assumes that the file will be read sequentially and it will ignore the offset parameter in
&lt;denchmark-code&gt;class RecordReader{
  //...
  Status ReadRecord(uint64* offset, string* record);
}
&lt;/denchmark-code&gt;

So,  if this class is designed for sequential reads, I want to remove the 'offset' argument, and use ZlibInputStream for zipped file, SnappyInputStream for snappy file, RandomAccessInputStream for uncompressed file.
Is it ok?
		</comment>
		<comment id='3' author='snnn' date='2017-06-16T20:51:42Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
	</comments>
</bug>