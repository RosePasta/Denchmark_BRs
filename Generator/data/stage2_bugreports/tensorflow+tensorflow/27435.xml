<bug id='27435' author='timoveldt' open_date='2019-04-02T20:13:25Z' closed_time='2019-04-17T20:53:36Z'>
	<summary>AttributeError: module 'tensorflow' has no attribute 'enable_eager_execution' in Verify installation</summary>
	<description>
Please make sure that this is a build/installation issue. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 Pro
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: not applicable
TensorFlow installed from (source or binary): binary
TensorFlow version: tensorflow-gpu 2.0.0a0
Python version: 3.6.7
Installed using virtualenv? pip? conda?: virtualenv + pip
Bazel version (if compiling from source): -
GCC/Compiler version (if compiling from source): -
CUDA/cuDNN version: 10.0/7.5.0.56
GPU model and memory: NVIDIA GTX 1080 Max-Q

Describe the problem
I've just followed the installation guides for tensorflow 2.0 (see above) from:

https://www.tensorflow.org/install/pip
https://www.tensorflow.org/install/gpu#software_requirements
The final step is to "Verify the install" (see the pip link above) which gives me the following output:

&lt;denchmark-code&gt;$ python -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
AttributeError: module 'tensorflow' has no attribute 'enable_eager_execution'
&lt;/denchmark-code&gt;

Which I did not expect/hope to see.
Provide the exact sequence of commands / steps that you executed before running into the problem

Follow the guides mentioned above.
Create all the environment variables.
-- Path within venv then contains:

&lt;denchmark-code&gt;D:\dev\project\project-venv\
D:\dev\tools\cuda\cudnn-10.0-windows10-x64-v7.5.0.56\cuda\bin;
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\bin;
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\extras\CUPTI\libx64;
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\include;
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\libnvvp;
C:\ProgramData\DockerDesktop\version-bin;
C:\Program Files\Docker\Docker\Resources\bin;
D:\dev\tools\oraclexe\oraclexe\app\oracle\product\11.2.0\server\bin;
C:\Program Files\Python36\Scripts\;
C:\Program Files\Python36\;
C:\Program Files\Microsoft MPI\Bin\;
C:\Program Files (x86)\Common Files\Oracle\Java\javapath;
C:\ProgramData\Oracle\Java\javapath;
C:\WINDOWS\system32;
C:\WINDOWS;
C:\WINDOWS\System32\Wbem;
C:\WINDOWS\System32\WindowsPowerShell\v1.0\;
C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;
C:\Program Files\dotnet\;
C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;
D:\dev\tools\putty\;
C:\Program Files\TortoiseSVN\bin;
C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;
C:\Program Files\nodejs\;
C:\WINDOWS\system32;
C:\WINDOWS;
C:\WINDOWS\System32\Wbem;
C:\WINDOWS\System32\WindowsPowerShell\v1.0\;
C:\WINDOWS\System32\OpenSSH\;
C:\dev\tools\python\python3.6.7\Scripts\;
C:\dev\tools\python\python3.6.7\;
C:\Program Files\Python36\Scripts\;
C:\Program Files\Python36\;
C:\Users\tve21314\AppData\Local\Microsoft\WindowsApps;
D:\dev\tools\maven\apache-maven-3.5.3\bin;
C:\Program Files\Java\jdk1.8.0_201\bin;
C:\Program Files\Java\jre1.8.0_201\bin;
C:\Program Files\Git\bin;
C:\Users\tve21314\AppData\Local\Programs\Microsoft VS Code\bin;
C:\Users\tve21314\AppData\Roaming\npm;
&lt;/denchmark-code&gt;


Finally run from within the venv:
python -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"

Any other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.

The traceback again:

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
AttributeError: module 'tensorflow' has no attribute 'enable_eager_execution'
&lt;/denchmark-code&gt;


If I use python -c "import tensorflow as tf;print(tf.reduce_sum(tf.random_normal([1000, 1000])))" the error becomes:

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
AttributeError: module 'tensorflow' has no attribute 'random_normal'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='timoveldt' date='2019-04-03T18:50:12Z'>
		Hi, I have the same issue.
I install tensorflow on my MacBook pro based on the page: &lt;denchmark-link:https://www.tensorflow.org/install&gt;https://www.tensorflow.org/install&lt;/denchmark-link&gt;
,
$pip3 install tensorflow==2.0.0-alpha0
It works.
I install tensorflow with pip3 step by step too: &lt;denchmark-link:https://www.tensorflow.org/install/pip&gt;https://www.tensorflow.org/install/pip&lt;/denchmark-link&gt;
. It almost works, but the last step 'verify the install' has one Error, please refer to the sentence below:
$python -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"
Traceback (most recent call last):
File "&lt;string&gt;", line 1, in &lt;module&gt;

Python 3.7.3
macOS Mojave 10.14.4
Thank you.
		</comment>
		<comment id='2' author='timoveldt' date='2019-04-04T20:31:54Z'>
		Same issue here.
Ubuntu 18.04
CUDA 10.0
virtualenv + pip
NVIDIA GTX 1060
Python 3.6.7
Attribute errors for both eager execution &amp; random_normal, but installs successfully.
		</comment>
		<comment id='3' author='timoveldt' date='2019-04-17T18:46:14Z'>
		&lt;denchmark-link:https://github.com/timoveldt&gt;@timoveldt&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/p9i&gt;@p9i&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/lynscott&gt;@lynscott&lt;/denchmark-link&gt;
  Thanks for reporting this issue. We have to update our docs to address TF 2.0 installation verification.
AttributeError: module 'tensorflow' has no attribute 'enable_eager_execution'
Eager execution is enabled by default in TF 2.0 Therefore we need not enable it explicitly.

TF 2.0 comes with new &lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/random/normal#aliases&gt;aliases&lt;/denchmark-link&gt;
 for random_normal
Using  should execute successfully.
		</comment>
		<comment id='4' author='timoveldt' date='2019-04-17T19:44:56Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 That fixed it!
Nice to see that I was on the right track by removing the eager execution. I never would've guest that the next step was in the aliases.
I'm trying to contribute the actual fix, but I've got some hoops to jump through :)
		</comment>
		<comment id='5' author='timoveldt' date='2019-04-17T20:53:36Z'>
		Glad it worked. Thanks for submitting the PR. I will close this issue now.
		</comment>
	</comments>
</bug>