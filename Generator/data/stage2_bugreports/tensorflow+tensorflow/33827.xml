<bug id='33827' author='aptly-io' open_date='2019-10-29T15:11:58Z' closed_time='2020-02-01T09:16:39Z'>
	<summary>lowerbound not implemented (from searchsorted)</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.3 LTS
TensorFlow installed from (source or binary): pip3
TensorFlow version (or github SHA if from source): tensorflow           2.0.0

Provide the text output from tflite_convert
&lt;denchmark-code&gt;Some of the operators in the model are not supported by the standard TensorFlow Lite runtime and are not recognized by TensorFlow. If you have a custom implementation for them you can disable this error with --allow_custom_ops, or by setting allow_custom_ops=True when calling tf.lite.TFLiteConverter(). Here is a list of builtin operators you are using: . Here is a list of operators for which you will need custom implementations: LowerBound.
Traceback (most recent call last):
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/bin/toco_from_protos", line 8, in 
    sys.exit(main())
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow_core/lite/toco/python/toco_from_protos.py", line 89, in main
    app.run(main=execute, argv=[sys.argv[0]] + unparsed)
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow_core/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow_core/lite/toco/python/toco_from_protos.py", line 52, in execute
    enable_mlir_converter)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='aptly-io' date='2019-10-30T08:10:11Z'>
		&lt;denchmark-link:https://github.com/aptly-io&gt;@aptly-io&lt;/denchmark-link&gt;
,
In order to expedite the trouble-shooting process, please provide a code snippet to reproduce the issue reported here. Thanks!
		</comment>
		<comment id='2' author='aptly-io' date='2019-10-30T09:16:04Z'>
		This is a python snippit edited and invoked from within visual studio code. Hope this clarifies. Thanks a lot to look into it!
I tried to use the .  depends on  to do the actual work when the  parameter is . Note that for a full working version of searchsorted, also  might need to be supported (in this snippet it is not needed). See here:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L4771&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L4771&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;# This runs directly from within Visual Studio Code

#%%

# This example only works with # pip3 install tensorflow==1.14.0
import tensorflow as tf

# TF 2.0 does not support the low level api compared to 1.x version
# It continuously fails Interpreter.set_tensor() or Interpreter.invoke()
# import tensorflow.compat.v1 as tf
# tf.disable_v2_behavior()

print(tf.__version__)

#%%

# Dummy values taken from tensorflow searchsorted() man. page (https://www.tensorflow.org/api_docs/python/tf/searchsorted)
sorted_sequence = [[0, 3, 9, 9, 10], [1, 2, 3, 4, 5]]
imposter_table = tf.constant(sorted_sequence)

input_avg_scores = tf.placeholder(tf.int32, shape = (2, 3), name = 'input_avg_scores')

scores = tf.searchsorted(imposter_table, input_avg_scores)

#%%
with tf.Session() as session:
    # Dummy values taken from tensorflow searchsorted() man. page
    values = [[2, 4, 9], [0, 2, 6]]
    print(session.run(scores, feed_dict = {input_avg_scores: values}))    # should return [[1 2 2] [0 1 5]]

    converter = tf.lite.TFLiteConverter.from_session(session, [input_avg_scores], [scores])

    # since LowerBounds is not supported, try including whitelisted TensorFlow operations: it is not whitelisted
    # converter.target_ops = [tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS]
    # converter.target_ops = [tf.lite.OpsSet.SELECT_TF_OPS]

    tflite_model = converter.convert()
    open("fm_search_scores.tflite", "wb").write(tflite_model)
#%%
&lt;/denchmark-code&gt;

This is the full output when running the 3rd cell:
&lt;denchmark-code&gt;

with tf.Session() as session:...
[[1 2 2]
 [0 1 5]]
---------------------------------------------------------------------------
ConverterError                            Traceback (most recent call last)
~/dev/projects/cognisance/tensorflow/tf_averager.py in 
     10     # converter.target_ops = [tf.lite.OpsSet.SELECT_TF_OPS]
     11 
---&gt; 12     tflite_model = converter.convert()
     13     open("fm_search_scores.tflite", "wb").write(tflite_model)

~/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/lite/python/lite.py in convert(self)
    896           input_tensors=self._input_tensors,
    897           output_tensors=self._output_tensors,
--&gt; 898           **converter_kwargs)
    899     else:
    900       result = _toco_convert_graph_def(

~/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/lite/python/convert.py in toco_convert_impl(input_data, input_tensors, output_tensors, *args, **kwargs)
    402   data = toco_convert_protos(model_flags.SerializeToString(),
    403                              toco_flags.SerializeToString(),
--&gt; 404                              input_data.SerializeToString())
    405   return data
    406 

~/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/lite/python/convert.py in toco_convert_protos(model_flags_str, toco_flags_str, input_data_str)
    170       stderr = _try_convert_to_unicode(stderr)
    171       raise ConverterError(
--&gt; 172           "TOCO failed. See console for info.\n%s\n%s\n" % (stdout, stderr))
    173   finally:
    174     # Must manually cleanup files.

ConverterError: TOCO failed. See console for info.
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
2019-10-30 10:08:53.143716: I tensorflow/lite/toco/import_tensorflow.cc:1336] Converting unsupported operation: LowerBound
2019-10-30 10:08:53.151956: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 3 operators, 6 arrays (0 quantized)
2019-10-30 10:08:53.152029: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 3 operators, 6 arrays (0 quantized)
2019-10-30 10:08:53.152070: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 1 operators, 3 arrays (0 quantized)
2019-10-30 10:08:53.152085: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before Group bidirectional sequence lstm/rnn: 1 operators, 3 arrays (0 quantized)
2019-10-30 10:08:53.152096: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before dequantization graph transformations: 1 operators, 3 arrays (0 quantized)
2019-10-30 10:08:53.152109: I tensorflow/lite/toco/allocate_transient_arrays.cc:345] Total transient array allocated size: 0 bytes, theoretical optimal value: 0 bytes.
2019-10-30 10:08:53.152122: I tensorflow/lite/toco/toco_tooling.cc:433] Estimated count of arithmetic ops: 0 billion (note that a multiply-add is counted as 2 ops).
2019-10-30 10:08:53.152826: E tensorflow/lite/toco/toco_tooling.cc:456] We are continually in the process of adding support to TensorFlow Lite for more ops. It would be helpful if you could inform us of how this conversion went by opening a github issue at https://github.com/tensorflow/tensorflow/issues/new?template=40-tflite-op-request.md
 and pasting the following:

Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If those are native TensorFlow operators, you might be able to use the extended runtime by passing --enable_select_tf_ops, or by setting target_ops=TFLITE_BUILTINS,SELECT_TF_OPS when calling tf.lite.TFLiteConverter(). Otherwise, if you have a custom implementation for them you can disable this error with --allow_custom_ops, or by setting allow_custom_ops=True when calling tf.lite.TFLiteConverter(). Here is a list of builtin operators you are using: . Here is a list of operators for which you will need custom implementations: LowerBound.
Traceback (most recent call last):
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/bin/toco_from_protos", line 8, in 
    sys.exit(main())
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/lite/toco/python/toco_from_protos.py", line 59, in main
    app.run(main=execute, argv=[sys.argv[0]] + unparsed)
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "/home/francis/dev/projects/cognisance/tensorflow/venv37/lib/python3.7/site-packages/tensorflow/lite/toco/python/toco_from_protos.py", line 33, in execute
    output_str = tensorflow_wrap_toco.TocoConvert(model_str, toco_str, input_str)
Exception: We are continually in the process of adding support to TensorFlow Lite for more ops. It would be helpful if you could inform us of how this conversion went by opening a github issue at https://github.com/tensorflow/tensorflow/issues/new?template=40-tflite-op-request.md
 and pasting the following:

Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If those are native TensorFlow operators, you might be able to use the extended runtime by passing --enable_select_tf_ops, or by setting target_ops=TFLITE_BUILTINS,SELECT_TF_OPS when calling tf.lite.TFLiteConverter(). Otherwise, if you have a custom implementation for them you can disable this error with --allow_custom_ops, or by setting allow_custom_ops=True when calling tf.lite.TFLiteConverter(). Here is a list of builtin operators you are using: . Here is a list of operators for which you will need custom implementations: LowerBound.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='aptly-io' date='2020-01-31T23:51:38Z'>
		is it possible to not use searchsorted if you can achieve with basic ops?
		</comment>
		<comment id='4' author='aptly-io' date='2020-02-01T09:16:39Z'>
		&lt;denchmark-link:https://github.com/haozha111&gt;@haozha111&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 I switched to TorchScript. (I missed the time to look into a tensorflow workaround).
		</comment>
		<comment id='5' author='aptly-io' date='2020-02-01T09:16:41Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33827&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33827&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>