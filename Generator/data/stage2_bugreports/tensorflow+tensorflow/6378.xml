<bug id='6378' author='hosang' open_date='2016-12-17T17:55:00Z' closed_time='2017-12-21T11:18:35Z'>
	<summary>WhereOp: Race condition between counting the number of true elements and writing them</summary>
	<description>
I have the same problem as issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4033&gt;#4033&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/models/issues/486&gt;tensorflow/models#486&lt;/denchmark-link&gt;
 happening to me in my own project with the nightly wheel. It is running fine on CPU, the problem only happens on GPU (titan x pascal).
The code that's causing the problem is this:
pair_idxs = tf.where(tf.greater_equal(iou, params.thresh))
(iou is a tensor, params.thresh is a python float)
WIth the error message:
&lt;denchmark-code&gt;InvalidArgumentError (see above for traceback): WhereOp: Race condition between counting the number of true elements and writing them.  When counting, saw 31641 elements; but when writing their indices, saw 187 elements.
         [[Node: Where = Where[_device="/job:localhost/replica:0/task:0/cpu:0"](GreaterEqual/_25)]]
&lt;/denchmark-code&gt;

Cuda:
&lt;denchmark-code&gt;-rw-r--r-- 1 foo bar   52M Dec  8 20:06 libcublas_device.a
lrwxrwxrwx 1 foo bar    16 Dec  8 20:06 libcublas.so -&gt; libcublas.so.8.0
lrwxrwxrwx 1 foo bar    19 Dec  8 20:07 libcublas.so.8.0 -&gt; libcublas.so.8.0.45
-rwxr-xr-x 1 foo bar   40M Dec  8 20:06 libcublas.so.8.0.45
-rw-r--r-- 1 foo bar   46M Dec  8 20:07 libcublas_static.a
-rw-r--r-- 1 foo bar  546K Dec  8 20:07 libcudadevrt.a
lrwxrwxrwx 1 foo bar    16 Dec  8 20:06 libcudart.so -&gt; libcudart.so.8.0
lrwxrwxrwx 1 foo bar    19 Dec  8 20:07 libcudart.so.8.0 -&gt; libcudart.so.8.0.44
-rwxr-xr-x 1 foo bar  406K Dec  8 20:06 libcudart.so.8.0.44
-rw-r--r-- 1 foo bar  757K Dec  8 20:07 libcudart_static.a
lrwxrwxrwx 1 foo bar    15 Dec  8 20:06 libcufft.so -&gt; libcufft.so.8.0
lrwxrwxrwx 1 foo bar    18 Dec  8 20:07 libcufft.so.8.0 -&gt; libcufft.so.8.0.44
-rwxr-xr-x 1 foo bar  140M Dec  8 20:06 libcufft.so.8.0.44
-rw-r--r-- 1 foo bar  124M Dec  8 20:07 libcufft_static.a
lrwxrwxrwx 1 foo bar    16 Dec  8 20:06 libcufftw.so -&gt; libcufftw.so.8.0
lrwxrwxrwx 1 foo bar    19 Dec  8 20:07 libcufftw.so.8.0 -&gt; libcufftw.so.8.0.44
-rwxr-xr-x 1 foo bar  466K Dec  8 20:06 libcufftw.so.8.0.44
-rw-r--r-- 1 foo bar   42K Dec  8 20:07 libcufftw_static.a
lrwxrwxrwx 1 foo bar    17 Dec  8 20:06 libcuinj64.so -&gt; libcuinj64.so.8.0
lrwxrwxrwx 1 foo bar    20 Dec  8 20:06 libcuinj64.so.8.0 -&gt; libcuinj64.so.8.0.44
-rwxr-xr-x 1 foo bar  6.2M Dec  8 20:06 libcuinj64.so.8.0.44
-rw-r--r-- 1 foo bar  1.6M Dec  8 20:07 libculibos.a
lrwxrwxrwx 1 foo bar    16 Dec  8 20:06 libcurand.so -&gt; libcurand.so.8.0
lrwxrwxrwx 1 foo bar    19 Dec  8 20:07 libcurand.so.8.0 -&gt; libcurand.so.8.0.44
-rwxr-xr-x 1 foo bar   57M Dec  8 20:07 libcurand.so.8.0.44
-rw-r--r-- 1 foo bar   57M Dec  8 20:06 libcurand_static.a
lrwxrwxrwx 1 foo bar    18 Dec  8 20:06 libcusolver.so -&gt; libcusolver.so.8.0
lrwxrwxrwx 1 foo bar    21 Dec  8 20:07 libcusolver.so.8.0 -&gt; libcusolver.so.8.0.44
-rwxr-xr-x 1 foo bar   52M Dec  8 20:06 libcusolver.so.8.0.44
-rw-r--r-- 1 foo bar   22M Dec  8 20:07 libcusolver_static.a
lrwxrwxrwx 1 foo bar    18 Dec  8 20:07 libcusparse.so -&gt; libcusparse.so.8.0
lrwxrwxrwx 1 foo bar    21 Dec  8 20:06 libcusparse.so.8.0 -&gt; libcusparse.so.8.0.44
-rwxr-xr-x 1 foo bar   41M Dec  8 20:07 libcusparse.so.8.0.44
-rw-r--r-- 1 foo bar   50M Dec  8 20:06 libcusparse_static.a
&lt;/denchmark-code&gt;

cuDNN:
&lt;denchmark-code&gt;lrwxrwxrwx 1 foo bar  13 Jul 27 07:55 libcudnn.so -&gt; libcudnn.so.5
lrwxrwxrwx 1 foo bar  17 Jul 27 07:55 libcudnn.so.5 -&gt; libcudnn.so.5.1.5
-rwxr-xr-x 1 foo bar 76M Jul 27 07:53 libcudnn.so.5.1.5
-rw-r--r-- 1 foo bar 67M Jul 27 07:53 libcudnn_static.a
&lt;/denchmark-code&gt;

tenserflow.__version__: 0.12.head
	</description>
	<comments>
		<comment id='1' author='hosang' date='2016-12-17T18:13:46Z'>
		I managed to build a small reproducing example:
&lt;denchmark-code&gt;iou = tf.placeholder(shape=[1], dtype=tf.float32)
pair_idxs = tf.where(tf.greater_equal(iou, 0.5))

with tf.Session():
    tf.global_variables_initializer().run()
    idxs = pair_idxs.eval(feed_dict={iou: [0.1]})
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;InvalidArgumentError (see above for traceback): WhereOp: Race condition between counting the number of true elements and writing them.  When counting, saw 205 elements; but when writing their indices, saw 1 elements.
         [[Node: Where = Where[_device="/job:localhost/replica:0/task:0/cpu:0"](GreaterEqual/_3)]]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='hosang' date='2016-12-17T19:10:16Z'>
		This also fails, but commenting out the assignment makes it work.
&lt;denchmark-code&gt;iou = tf.placeholder(shape=[1], dtype=tf.float32)
cmp = tf.Variable([False], dtype=tf.bool)
cmp = cmp.assign(iou &gt;= 0.5)
pair_idxs = tf.where(cmp)

with tf.Session():
    tf.global_variables_initializer().run()
    idxs = pair_idxs.eval(feed_dict={iou: [0.1]})
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='hosang' date='2016-12-28T00:18:24Z'>
		&lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
, do you have any insights on the concurrency issue here. I don't see the problem with the Titan X Maxwell edition on current nightly.
		</comment>
		<comment id='4' author='hosang' date='2017-01-07T12:30:16Z'>
		On my system a similar error was produced as a result of the GPU running out of memory.
		</comment>
		<comment id='5' author='hosang' date='2017-09-26T16:55:04Z'>
		I met the same issue, turned out I already started a training instance so all my GPU memory are used up. After I killed that instance, the issue is gone.
		</comment>
		<comment id='6' author='hosang' date='2017-09-26T20:01:56Z'>
		&lt;denchmark-link:https://github.com/hosang&gt;@hosang&lt;/denchmark-link&gt;
, does this occur on a more recent version of TensorFlow? 0.12 is quite old at this point.
		</comment>
		<comment id='7' author='hosang' date='2017-12-20T19:27:25Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue? Please update the label and/or status accordingly.
		</comment>
		<comment id='8' author='hosang' date='2017-12-20T19:57:10Z'>
		&lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 updating to a newer version fixed the problem for me and I didn't encounter the problem again.
		</comment>
		<comment id='9' author='hosang' date='2017-12-21T00:02:29Z'>
		&lt;denchmark-link:https://github.com/hosang&gt;@hosang&lt;/denchmark-link&gt;
 Maybe you could close the issue then.
		</comment>
	</comments>
</bug>