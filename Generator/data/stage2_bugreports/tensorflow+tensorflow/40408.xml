<bug id='40408' author='ClementWalter' open_date='2020-06-12T12:27:59Z' closed_time='2020-08-29T00:22:18Z'>
	<summary>Calling predict with a keras.Sequence on a keras.saved_model fail if no previous call on numpy</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Python 3.6.9 (default, Mar 13 2020, 17:02:25)
[GCC 4.2.1 Compatible Apple LLVM 11.0.0 (clang-1100.0.33.17)] on darwin
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 2.1.1
Python version: 3.6.9
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
Tensorflow raises an error when calling the loaded model onto a keras.Sequence. Calling model.build does not solve the issue
Describe the expected behavior
It should be possible to call the model onto a keras.Sequence as it works with tf.data.Dataset
Standalone code to reproduce the issue
import numpy as np
import tensorflow as tf
from tensorflow.keras.layers import Input, GlobalAveragePooling2D, Dense
from tensorflow.keras.models import Sequential, load_model
from tensorflow.keras.utils import Sequence

#%% Create dummy Sequential
model = Sequential([Input((224, 224, 3)), GlobalAveragePooling2D(), Dense(1)])
model.summary()
assert model.built
model.input_shape
tf.saved_model.save(model, "model")

#%% Make prediction with loaded model and Sequence
tf_model = load_model("model")
class DataGen(Sequence):
    def __init__(self, data, batch_size):
        self.data = data
        self.batch_size = batch_size

    def __getitem__(self, index):
        return self.data[index * self.batch_size : (index + 1) * self.batch_size]

    def __len__(self):
        return len(self.data) // self.batch_size


X = np.random.rand(16, 224, 224, 3)
tf_model.predict(DataGen(X, batch_size=2))
# ValueError: Please provide model inputs as a list or tuple of 2 or 3 elements: (input, target) or (input, target, sample_weights) Received tf.Tensor(...)

#%% Manual build does not fix the issue
assert not tf_model.built
tf_model.build((None, 224, 224, 3))
assert tf_model.built
tf_model.predict(DataGen(X, batch_size=2))

#%% Try with tf.data.Dataset instead: OK
tf_model.predict(tf.data.Dataset.from_tensor_slices(X).batch(2))

#%% Call first on np.array does fix the issue
tf_model.predict(X[:2])
tf_model.predict(DataGen(X, batch_size=2))

#%% But model still does not have input_shape and has "multiple" in summary
tf_model.inputs
tf_model.input_shape
tf_model.summary()
	</description>
	<comments>
		<comment id='1' author='ClementWalter' date='2020-06-12T14:14:18Z'>
		&lt;denchmark-link:https://github.com/ClementWalter&gt;@ClementWalter&lt;/denchmark-link&gt;

I ran the code shared by you and face this error, please refer to the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/87d1cb1e22902f78346944ad9df181c1/untitled.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='ClementWalter' date='2020-06-15T08:01:22Z'>
		Hi, I have just rerun exactly your notebook and found the expected error, see this &lt;denchmark-link:https://colab.research.google.com/gist/ClementWalter/581e1bf23cfdf591ec7b4b77732fa5e0/untitled.ipynb&gt;gist&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='ClementWalter' date='2020-08-11T01:44:10Z'>
		&lt;denchmark-link:https://github.com/ClementWalter&gt;@ClementWalter&lt;/denchmark-link&gt;
 I think this was resolved in recent TF versions. I tried in  and I cannot reproduce the error you were facing with  version.
I noticed that you are trying to save a keras (Sequential) model using tensorflow saved_model tf.saved_model.save(model, "model"). However, best approach is to use keras model.save like model.save("model", save_format='tf').
Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='4' author='ClementWalter' date='2020-08-21T23:25:30Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='ClementWalter' date='2020-08-29T00:22:17Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='6' author='ClementWalter' date='2020-08-29T00:22:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40408&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40408&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>