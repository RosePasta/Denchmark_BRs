<bug id='34819' author='gramce' open_date='2019-12-04T09:31:00Z' closed_time='2019-12-23T07:57:52Z'>
	<summary>Java: The result of  SavedModelBundle is different every time!</summary>
	<description>
The model was trained by python and was saved using tf.train.Saver.
I use the SavedModelBundle api to load and predict in java. However, the result is different every time. It seems some tensor was not loaded randomly. And in the same main programeï¼Œthe result is same notever how many times I load the model. But in different programs, the result may be different.
PS: model maybe partial load. Because some median result was right, but unstable.
python==1.14 java==1.14
My code:
&lt;denchmark-code&gt;//load model
            String modelDir = "/data/model";
            File file = new File(modelDir);
            SavedModelBundle savedModelBundle = null;
            if (file.exists() &amp;&amp; file.isDirectory()) {
                savedModelBundle = SavedModelBundle.load(modelDir, "serve");
                System.out.println("load succ");
            } else {
                System.out.println("load fail");
            }
            Session session = savedModelBundle.session();
//feed
            ModelFeature modelFeature = new ModelFeature();
            buildModelFeature(modelFeature);
            Session.Runner tfrunner = session.runner();
            for (FeatureItem item : modelFeature.featureItems) {
                Tensor tensor;
                if (item.getValue().getClass().equals(String[][].class)) {
                    byte[][][] tmpString = new byte[1][1][1];
                    tmpString[0][0] = ((String)item.getValue()[0][0]).getBytes();
                    tensor = Tensor.create(tmpString, String.class);
                } else {
                    tensor = Tensor.create(item.getValue());
                }
                tfrunner = tfrunner.feed(item.getName(), tensor);
                System.out.println("succ to create tensor name = " + item.getName());
            }
//fetch
            //List&lt;Tensor&lt;?&gt;&gt; tensorList = tfrunner.fetch(output).run();
            List&lt;Tensor&lt;?&gt;&gt; tensorList = tfrunner.fetch("concat_input_layer_1/concat:0").run();
//print
            for (int ade = 0; ade &lt; tensorList.size(); ade++) {
                Tensor out;
                System.out.println("tensorList size is " + tensorList.size());
                out = tensorList.get(ade);
                System.out.println(out);

                final long[] shape = out.shape();
                float[][] trans = new float[(int)shape[0]][(int)shape[1]];
                out.copyTo(trans);
                for (int i = 0; i &lt; shape[0]; i++){
                    for (int j = 0; j &lt; shape[1]; j++){
                        System.out.println("final result = " + trans[i][j]);
                    }
                }
                out.close();
            }}         
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='gramce' date='2019-12-05T09:38:29Z'>
		&lt;denchmark-link:https://github.com/gramce&gt;@gramce&lt;/denchmark-link&gt;
, Please post the Tensorflow version and also provide the complete code snippet including all supporting files to reproduce the reported issue. Thanks!
		</comment>
		<comment id='2' author='gramce' date='2019-12-06T05:45:21Z'>
		
@gramce, Please post the Tensorflow version and also provide the complete code snippet including all supporting files to reproduce the reported issue. Thanks!

Sorry. The problem has been fixed. The problem is using the Object Float[] to init Tensor&lt;float&gt;. I fix this just by using float[]. However, I still think this is a problem.
		</comment>
		<comment id='3' author='gramce' date='2019-12-10T07:57:01Z'>
		&lt;denchmark-link:https://github.com/gramce&gt;@gramce&lt;/denchmark-link&gt;
, Glad it fixed. Please provide the complete standalone code to reproduce the issue. Thanks!
		</comment>
		<comment id='4' author='gramce' date='2019-12-23T07:57:52Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='5' author='gramce' date='2019-12-23T07:57:54Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34819&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34819&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>