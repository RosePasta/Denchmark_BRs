<bug id='41090' author='pstjohn' open_date='2020-07-05T01:01:18Z' closed_time='2020-10-27T14:15:28Z'>
	<summary>Issue using segment_prod in custom keras layer</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): colab
TensorFlow installed from (source or binary): nightly
TensorFlow version (use command below): nightly
Python version: colab

I'm trying to write a custom keras layer that uses segment_prod on model features, i.e., not the batch dimension. To do that, I've been using tf.transpose to put the feature dimensions first, and then transposing the resulting calculation. Forward calculation seems to work using this approach, but there appears to be an issue with gradients with segment_prod: the following code fails with LookupError: gradient registry has no entry for: SegmentProd:
class MyLayer1(layers.Layer):

  def call(self, inputs):

    segments = tf.constant([0, 0, 0, 1, 1])
    return tf.transpose(
        tf.math.segment_prod(tf.transpose(inputs), segments))

inputs = layers.Input(10)
embed = layers.Embedding(20, 5)(inputs)
output = MyLayer1()(embed)
output = layers.GlobalAveragePooling1D()(output)
model = tf.keras.Model(inputs, output)

X = np.random.randint(20, size=(100, 10))
y = np.random.randn(100,2)

model.compile(loss='mae')
model.fit(X, y)
Replacing tf.math.segment_prod with other operations, like tf.math.unsorted_segment_prod(..., num_segments=2) or tf.math.segment_sum seems to work, however.
Colab gist:
&lt;denchmark-link:https://colab.research.google.com/gist/pstjohn/8fa2faf274679742ba628290a94c2b2b/untitled0.ipynb&gt;https://colab.research.google.com/gist/pstjohn/8fa2faf274679742ba628290a94c2b2b/untitled0.ipynb&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='pstjohn' date='2020-07-06T05:59:45Z'>
		I have tried in colab with TF versions 2.2,2.3-rc0,nightly versions() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/95302a74087ba08432ece90213095b22/untitled83.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='pstjohn' date='2020-10-27T14:15:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41090&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41090&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>