<bug id='33261' author='artemmavrin' open_date='2019-10-11T19:15:58Z' closed_time='2020-01-21T22:06:43Z'>
	<summary>Can't save a Model with a TimeDistributed layer wrapping another Model</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution: Linux Ubuntu 18.04.2
TensorFlow installed from (source or binary): binary
TensorFlow version: 2.0.0
Python version: 3.7.3
CUDA/cuDNN version: CUDA 10.1 cuDNN 7.5.1
GPU model and memory: TITAN X

Describe the current behavior
I get a ValueError when trying to save a tf.keras.Model with a tf.keras.layers.TimeDistributed layer wrapping another tf.keras.Model that has convolutional layers. I am using tf.keras.Model.save with the default save_format (SavedModel). See below for examples.
There is no error when saving with save_format='h5'.
Describe the expected behavior
Successfully saving a SavedModel with the tf.keras.layers.TimeDistributed layer.
Code to reproduce the issue


Wrapping a 1-layer convolutional NN with tf.keras.layers.TimeDistributed:
import tensorflow as tf

input_shape = (100, 100, 3)

embedding_model = tf.keras.Sequential([
    tf.keras.layers.Input(input_shape),
    tf.keras.layers.Conv2D(filters=32, kernel_size=3, strides=1),
])

input_sequence = tf.keras.layers.Input((None,) + input_shape)
sequence_embedding = tf.keras.layers.TimeDistributed(embedding_model)
outputs = sequence_embedding(input_sequence)

model = tf.keras.Model(inputs=input_sequence, outputs=outputs)

model.save('model1')
Error:
ValueError: Input 0 of layer conv2d is incompatible with the layer: expected ndim=4, found ndim=5. Full shape received: [None, None, 100, 100, 3]



Wrapping a pre-trained tf.keras.applications model (closer to my actual use case):
import tensorflow as tf

input_shape = (224, 224, 3)

mobilenet = tf.keras.applications.MobileNet(
    input_shape=input_shape,
    include_top=False,
    weights='imagenet',
    pooling='avg',
)

input_sequence = tf.keras.layers.Input((None,) + input_shape)
sequence_embedding = tf.keras.layers.TimeDistributed(mobilenet)
outputs = sequence_embedding(input_sequence)

model = tf.keras.Model(inputs=input_sequence, outputs=outputs)

model.save('model2')
Error:
ValueError: Input 0 of layer conv1_pad is incompatible with the layer: expected ndim=4, found ndim=5. Full shape received: [None, None, 224, 224, 3]



Saving as an HDF5 file instead:
import tensorflow as tf

input_shape = (224, 224, 3)

mobilenet = tf.keras.applications.MobileNet(
    input_shape=input_shape,
    include_top=False,
    weights='imagenet',
    pooling='avg',
)

input_sequence = tf.keras.layers.Input((None,) + input_shape)
sequence_embedding = tf.keras.layers.TimeDistributed(mobilenet)
outputs = sequence_embedding(input_sequence)

model = tf.keras.Model(inputs=input_sequence, outputs=outputs)

model.save('model3.h5', save_format='h5')
This works without errors.


Saving to the SavedModel format works with just dense layers:
import tensorflow as tf

input_shape = (100,)

embedding_model = tf.keras.Sequential([
    tf.keras.layers.Input(input_shape),
    tf.keras.layers.Dense(units=10)
])

input_sequence = tf.keras.layers.Input((None,) + input_shape)
sequence_embedding = tf.keras.layers.TimeDistributed(embedding_model)
outputs = sequence_embedding(input_sequence)

model = tf.keras.Model(inputs=input_sequence, outputs=outputs)

model.save('model4')
This works without errors.


	</description>
	<comments>
		<comment id='1' author='artemmavrin' date='2019-10-14T10:29:41Z'>
		I have tried on colab with TF version 2.0  and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/00b7541a4eb2b6492c984d4201acce7f/untitled265.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='artemmavrin' date='2019-11-15T19:03:07Z'>
		Is there any update? I noticed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33094&gt;#33094&lt;/denchmark-link&gt;
 that there was a fix for saving  layers in the nightly release. I tried with , but I'm getting the same error.
		</comment>
		<comment id='3' author='artemmavrin' date='2019-11-20T04:24:34Z'>
		Any update?
		</comment>
		<comment id='4' author='artemmavrin' date='2019-12-03T01:42:33Z'>
		Same errors with tensorflow==2.1.0-rc0.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

By the way, there seems to be no problem saving a TimeDistributed layer wrapping a convolutional layer instead of a Model which has a convolutional layer in it.
For example, this works:
import tensorflow as tf

time_distributed_layer = tf.keras.layers.TimeDistributed(
    layer=tf.keras.layers.Conv2D(filters=16, kernel_size=3),
    input_shape=(None, 100, 100, 3),
)
model = tf.keras.Sequential([time_distributed_layer])
model.save('model')  # Works

# Check correct restoration
restored_model = tf.keras.models.load_model('model')
for weight, restored_weight in zip(model.weights, restored_model.weights):
    assert weight.name == restored_weight.name
    tf.debugging.assert_equal(weight, restored_weight)
Whereas this doesn't:
import tensorflow as tf

time_distributed_layer = tf.keras.layers.TimeDistributed(
    layer=tf.keras.Sequential(
        layers=[tf.keras.layers.Conv2D(filters=16, kernel_size=3)],
    ),
    input_shape=(None, 100, 100, 3),
)
model = tf.keras.Sequential([time_distributed_layer])
model.save('model')  # Same error as before
		</comment>
		<comment id='5' author='artemmavrin' date='2019-12-03T03:29:16Z'>
		I also encountered this bug , how can I solve it
		</comment>
		<comment id='6' author='artemmavrin' date='2019-12-03T03:34:35Z'>
		+1, Also running into this
		</comment>
		<comment id='7' author='artemmavrin' date='2019-12-04T18:13:32Z'>
		&lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 this is a pretty major limitation at the moment. Any idea on what needs to be changed to fix it?
		</comment>
		<comment id='8' author='artemmavrin' date='2019-12-09T19:00:19Z'>
		There appears to be a problem with saving layer masks using SavedModel. looking into this
		</comment>
		<comment id='9' author='artemmavrin' date='2019-12-26T03:54:43Z'>
		&lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 any update on this issue?
		</comment>
		<comment id='10' author='artemmavrin' date='2020-01-15T02:09:09Z'>
		Bump
		</comment>
		<comment id='11' author='artemmavrin' date='2020-01-21T22:06:43Z'>
		Appears to be fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/9f2aa61811b29e700b8325bb57b1f4b0093c1d4d&gt;9f2aa61&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='artemmavrin' date='2020-01-21T22:06:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33261&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33261&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='artemmavrin' date='2020-11-09T11:04:12Z'>
		Hi there,
I am using time distributed layer to apply another model on each frame and processing the final features by conv 3D. the model is trained properly. but when I want to load the model and use it for test, I face different issues:

first, the model cant be loaded because of the nested model
second, the model acc on the same val dataset is not reproducible

		</comment>
		<comment id='14' author='artemmavrin' date='2020-11-09T16:27:56Z'>
		&lt;denchmark-link:https://github.com/marziehoghbaie&gt;@marziehoghbaie&lt;/denchmark-link&gt;
 Please create a new issue with a simple standalone code to reproduce the error. Thanks!
		</comment>
	</comments>
</bug>