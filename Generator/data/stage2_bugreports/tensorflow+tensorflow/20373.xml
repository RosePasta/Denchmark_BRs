<bug id='20373' author='markdryan' open_date='2018-06-28T10:05:25Z' closed_time='2018-07-31T14:16:21Z'>
	<summary>kernel_tests:cwise_ops_test fails on AVX512 systems</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): ('v1.8.0-4021-g4292085', '1.9.0-rc0')
Python version: Python 2.7.12
Bazel version (if compiling from source):  0.15.0
GCC/Compiler version (if compiling from source): gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
CUDA/cuDNN version: n/a
GPU model and memory: n/a
Exact command to reproduce: bazel test --config=opt -- //tensorflow/python/kernel_tests:cwise_ops_test

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

The //tensorflow/python/kernel_tests:cwise_ops_test test fails on AVX512 machines.  Reproducing the problem is simple.  Just run the unit test.
&lt;denchmark-code&gt;bazel test --config=opt -- //tensorflow/python/kernel_tests:cwise_ops_test
&lt;/denchmark-code&gt;

The test is failing as there's a bug in Eigen's AVX512 implementation of the psqrt functions, which incorrectly compute the sqrt of negative numbers as 0 instead of NaN.  There's a pull request pending on Eigen that fixes the issue.
&lt;denchmark-link:https://bitbucket.org/eigen/eigen/pull-requests/412/fix-avx512-implementations-of-psqrt/diff&gt;https://bitbucket.org/eigen/eigen/pull-requests/412/fix-avx512-implementations-of-psqrt/diff&lt;/denchmark-link&gt;

A similar issue was fixed in Eigen's AVX2 implementations of psqrt a couple of years ago.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;cwise_ops_test.py:1920: RuntimeWarning: invalid value encountered in sqrt
  np_y = np.sqrt(x)
F
======================================================================
FAIL: testSqrt (__main__.IsFiniteInfNanTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "$HOME/.cache/bazel/_bazel_markus/59a925eeb655b30b5c683f8317fe569e/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/python/kernel_tests/cwise_ops_test.runfiles/org_tensorflow/tensorflow/python/kernel_tests/cwise_ops_test.py", line 1926, in testSqrt
    self.assertAllEqual(np_nan, tf_nan.eval())
  File "$HOME/.cache/bazel/_bazel_markus/59a925eeb655b30b5c683f8317fe569e/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/python/kernel_tests/cwise_ops_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py", line 1401, in assertAllEqual
    np.testing.assert_array_equal(a, b, err_msg=msg)
  File "$HOME/.local/lib/python2.7/site-packages/numpy/testing/nose_tools/utils.py", line 855, in assert_array_equal
    verbose=verbose, header='Arrays are not equal')
  File "$HOME/.local/lib/python2.7/site-packages/numpy/testing/nose_tools/utils.py", line 779, in assert_array_compare
    raise AssertionError(msg)
AssertionError: 
Arrays are not equal

(mismatch 76.1904761905%)
 x: array([ True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,...
 y: array([False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,...

----------------------------------------------------------------------
Ran 3 tests in 4.787s

FAILED (failures=1)
not equal where =  (array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]),)
not equal lhs =  [ True  True  True  True  True  True  True  True  True  True  True  True
  True  True  True  True  True  True  True  True  True  True  True  True
  True  True  True  True  True  True  True  True  True  True  True  True
  True  True  True  True  True  True  True  True  True  True  True  True]
not equal rhs =  [False False False False False False False False False False False False
 False False False False False False False False False False False False
 False False False False False False False False False False False False
 False False False False False False False False False False False False]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='markdryan' date='2018-07-13T19:00:53Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='2' author='markdryan' date='2018-07-28T18:52:09Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
: It has been 30 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='3' author='markdryan' date='2018-07-30T15:00:35Z'>
		Patch has been merged into Eigen.  The issue will be fixed when tensorflow updates the version of Eigen it uses.
		</comment>
		<comment id='4' author='markdryan' date='2018-07-31T14:27:06Z'>
		&lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
 This bug is still reproducible in tensorflow.  Fixing it requires an update to the version of Eigen used in tensorflow, so I think the bug should probably remain open.
		</comment>
	</comments>
</bug>