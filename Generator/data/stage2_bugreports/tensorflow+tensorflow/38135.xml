<bug id='38135' author='tripathysa' open_date='2020-04-01T17:38:46Z' closed_time='2020-06-03T20:16:25Z'>
	<summary>Keras Model Errors on Loading - 'list' object has no attribute 'items' with TF 2.1</summary>
	<description>
System information
Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ProductName:	Mac OS X, ProductVersion:	10.15.2, BuildVersion:	19C57
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 2.1.0
Python version: 3.6.8
CUDA/cuDNN version: None
GPU model and memory: None
Describe the current behavior
When trying to load one of my models using tf.keras.models.load_model an error is thrown at the following location:
&lt;denchmark-code&gt;tensorflow_core\python\keras\utils\generic_utils.py", line 254, in class_and_config_for_serialized_keras_object
for key, item in cls_config.items():
**AttributeError: 'list' object has no attribute 'items'**
&lt;/denchmark-code&gt;

This code expects cls_config to be a dictionary, while for this model it is a list of dictionaries.
I can successfully load and run this model using TensorFlow versions 2.0.0, 1.15.0 and 1.14.0.
This section of code was introduced when adding support for passive serialization in Keras
Describe the expected behavior
Can successfully load a model from a hdf5 file.
Code to reproduce the issue:
&lt;denchmark-code&gt;import tensorflow as tf

model = tf.keras.models.load_model('cnn_multichannel_dense_f0_b0.h5', compile=False)
&lt;/denchmark-code&gt;

Other info / logs:
I am also attaching a dummy hdf5 model below which can be used to test.
Complete Stacktrace of the error:
&lt;denchmark-code&gt;  File "/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/save.py", line 146, in load_model
    return hdf5_format.load_model_from_hdf5(filepath, custom_objects, compile)
  File "lib/python3.6/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 168, in load_model_from_hdf5
    custom_objects=custom_objects)
  File "lib/python3.6/site-packages/tensorflow_core/python/keras/saving/model_config.py", line 55, in model_from_config
    return deserialize(config, custom_objects=custom_objects)
  File "lib/python3.6/site-packages/tensorflow_core/python/keras/layers/serialization.py", line 106, in deserialize
    printable_module_name='layer')
  File "lib/python3.6/site-packages/tensorflow_core/python/keras/utils/generic_utils.py", line 292, in deserialize_keras_object
    config, module_objects, custom_objects, printable_module_name)
  File "lib/python3.6/site-packages/tensorflow_core/python/keras/utils/generic_utils.py", line 254, in class_and_config_for_serialized_keras_object
    for key, item in cls_config.items():
AttributeError: 'list' object has no attribute 'items'

&lt;/denchmark-code&gt;

When loaded with tf.keras in v2.0.0 the layers, model config, inputs, outputs, summary etc. are all parsed correctly, as well as being able to run data through the model.
	</description>
	<comments>
		<comment id='1' author='tripathysa' date='2020-04-01T17:40:42Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4416739/cnn_multichannel_dense_f0_b0.h5.zip&gt;cnn_multichannel_dense_f0_b0.h5.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='tripathysa' date='2020-04-02T11:27:51Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/8ffb93fe9c91670fb8e3e6d21038bbcd/38135-2-1.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/78f9cc5cc4fdcebbe9e8e62745af53aa/38135-2-2.ipynb&gt;TF v2.2.0-rc2&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/3f7747e2187f252273d49872d4615c48/38135-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Works fine on &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/e1c64f58d7da6e77b9a5dae802664dea/38135-2-0.ipynb&gt;TF v2.0&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='3' author='tripathysa' date='2020-04-02T15:03:28Z'>
		&lt;denchmark-link:https://github.com/tripathysa&gt;@tripathysa&lt;/denchmark-link&gt;
 Can you please share simple standalone code to reproduce the issue? The provided  file is not sufficient to find root-cause of the issue. If your code is proprietary code then please try to use public data to create a standalone code. Thanks!
		</comment>
		<comment id='4' author='tripathysa' date='2020-04-02T16:23:03Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 : Do you mean sharing train code? Yes its proprietary.  If some change is needed in the train code, then it will be a problem since the trained models are being supported by all TF versions except 2.1 and we don’t want to retrain them again.
&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 was already able to reproduce the issue with:
`import tensorflow as tf
model = tf.keras.models.load_model('cnn_multichannel_dense_f0_b0.h5', compile=False)’
		</comment>
		<comment id='5' author='tripathysa' date='2020-04-02T16:56:33Z'>
		It looks like  is expected to be a dictionary here in 2.1 while its a list(&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.1/tensorflow/python/keras/utils/generic_utils.py#L252&gt;https://github.com/tensorflow/tensorflow/blob/r2.1/tensorflow/python/keras/utils/generic_utils.py#L252&lt;/denchmark-link&gt;
) but in 2.0. no such assumed deserialization happens as I see it.
		</comment>
		<comment id='6' author='tripathysa' date='2020-04-08T03:13:20Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tripathysa&gt;@tripathysa&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/38339&gt;#38339&lt;/denchmark-link&gt;
 has been submitted to fix this issue.
		</comment>
		<comment id='7' author='tripathysa' date='2020-06-03T20:16:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38135&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38135&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>