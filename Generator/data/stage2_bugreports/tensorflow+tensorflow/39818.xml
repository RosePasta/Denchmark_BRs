<bug id='39818' author='anavanab99' open_date='2020-05-23T17:33:12Z' closed_time='2020-10-28T01:49:21Z'>
	<summary>tensorflow cannot use feature columns to keras model</summary>
	<description>
Thank you for submitting a TensorFlow documentation issue. Per our GitHub
policy, we only address code/doc bugs, performance issues, feature requests, and
build/installation issues on GitHub.
The TensorFlow docs are open source! To get involved, read the documentation
contributor guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs&gt;https://www.tensorflow.org/community/contribute/docs&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://tensorflow.google.cn/versions/r2.1/api_docs/python/tf/feature_column/numeric_column&gt;https://tensorflow.google.cn/versions/r2.1/api_docs/python/tf/feature_column/numeric_column&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue (what needs changing):&lt;/denchmark-h&gt;

I tried to input a feature column to the keras model, but it was not available and the error was as follows:
&lt;denchmark-code&gt;    input_wide2 = keras.layers.Dense(300, activation=dnn_activation, )(input_lstm)
  File "/home/zy/anaconda3/envs/tf2/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 818, in __call__
    self._maybe_build(inputs)
  File "/home/zy/anaconda3/envs/tf2/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 2098, in _maybe_build
    self.input_spec, inputs, self.name)
  File "/home/zy/anaconda3/envs/tf2/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/input_spec.py", line 163, in assert_input_compatibility
    if x.shape.ndims is None:
AttributeError: 'DenseFeatures' object has no attribute 'shape'
&lt;/denchmark-code&gt;

I tried to search the solution of the problem through google, and the answer I got was to use tf.keras.Sequential () to solve the problem, but my model cannot use tf.keras.Sequential (), because I need to make a multi-input and more complex model . Sequential () cannot meet my requirements. Is this error a bug? Or am I using the wrong method? My case
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4672214/text.txt&gt;text.txt&lt;/denchmark-link&gt;

code is as follows
&lt;denchmark-code&gt;from tensorflow import keras
from tensorflow import feature_column
from tensorflow.keras.layers import Dense
from tensorflow.keras import Input, Model
from tensorflow.keras import regularizers
import tensorflow as tf


def read_tfrecord_input( tf_dir, batch_size, df_columns_list, which_labels, output_size):
    raw_dataset = tf.data.TFRecordDataset(tf_dir)
    feature_description = {}

    def _parse_function(record):
        for n in df_columns_list:

            # if n =='KDJ_gold':                            
[text.txt](https://github.com/tensorflow/tensorflow/files/4672218/text.txt)

            #     feature_description['%s'%n]=tf.io.FixedLenFeature([], tf.string, default_value='')
            if 'pred' in n:
                pass
            else:
                feature_description['%s' % n] = tf.io.FixedLenFeature([], tf.float32, default_value=0.0)
            feature_description['pred'] = tf.io.FixedLenFeature([output_size], tf.float32)

        parsed = tf.io.parse_single_example(serialized=record, features=feature_description)

        labels = parsed['pred']
        # kdj_gold = tf.cast(parsed['KDJ_gold'], tf.string)
        input_dict = {}
        for n in df_columns_list:
            if 'pred' in n:
                print(n, 'pass')
                pass
            # elif n=='KDJ_gold':
            #     input_dict['%s'%n]=kdj_gold                
            else:
                input_dict['%s' % n] = parsed['%s' % n]
        return input_dict, labels

    parsed_dataset = raw_dataset.map(_parse_function, num_parallel_calls=24)  
    parsed_dataset = parsed_dataset.batch(batch_size, drop_remainder=True)
    parsed_dataset = parsed_dataset.repeat()

    return parsed_dataset
dropout_rate=0.5
dnn_activation='relu'
volume = tf.feature_column.numeric_column('volume', shape=(1,))
lstm_list=[volume]

input_deep = keras.layers.DenseFeatures(lstm_list)
input_lstm = keras.layers.DenseFeatures(lstm_list)
input_wide2 = keras.layers.Dense(300, activation=dnn_activation, )(input_lstm)
input_wide2 = keras.layers.Dropout(0.5)(input_wide2)
lstm = keras.layers.LSTM(units=300, return_sequences=True, return_state=True, activation='tanh')
whole_seq_output, final_memory_state, final_carry_state = lstm(input_wide2)
lstm_drop_layer = keras.layers.Dropout(0.5)(whole_seq_output)

dnn1 = keras.layers.Dense(units=800, activation=dnn_activation)(input_deep)
dnn1 = keras.layers.BatchNormalization(axis=1)(dnn1)
dnn1 = keras.layers.SpatialDropout1D(dropout_rate)(dnn1)
dnn2 = keras.layers.Dense(units=600, activation=dnn_activation)(dnn1)

cancat_all = keras.layers.concatenate([dnn2, lstm_drop_layer])
output = keras.layers.Dense(1, activation='tanh')(cancat_all)
model = Model(inputs=[input_lstm, input_deep], outputs=[output])

model.compile(loss="mae", optimizer="Adam")
estimatoer = keras.estimator.model_to_estimator(keras_model=model, model_dir='model/ld')
estimatoer.train(input_fn=lambda: read_tfrecord_input(
    tf_dir='data/train.tfrecord', batch_size=9600, df_columns_list=lstm_list,
    which_labels='pred_d', output_size=1), max_steps=500)
&lt;/denchmark-code&gt;

please help me ,thank you!!
&lt;denchmark-h:h3&gt;Clear description&lt;/denchmark-h&gt;

For example, why should someone use this method? How is it useful?
&lt;denchmark-h:h3&gt;Correct links&lt;/denchmark-h&gt;

Is the link to the source code correct?
&lt;denchmark-h:h3&gt;Parameters defined&lt;/denchmark-h&gt;

Are all parameters defined and formatted correctly?
&lt;denchmark-h:h3&gt;Returns defined&lt;/denchmark-h&gt;

Are return values defined?
&lt;denchmark-h:h3&gt;Raises listed and defined&lt;/denchmark-h&gt;

Are the errors defined? For example,
&lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file#raises&gt;https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file#raises&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Usage example&lt;/denchmark-h&gt;

Is there a usage example?
See the API guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_ref&gt;https://www.tensorflow.org/community/contribute/docs_ref&lt;/denchmark-link&gt;

on how to write testable usage examples.
&lt;denchmark-h:h3&gt;Request visuals, if applicable&lt;/denchmark-h&gt;

Are there currently visuals? If not, will it clarify the content?
&lt;denchmark-h:h3&gt;Submit a pull request?&lt;/denchmark-h&gt;

Are you planning to also submit a pull request to fix the issue? See the docs
contributor guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs&gt;https://www.tensorflow.org/community/contribute/docs&lt;/denchmark-link&gt;
,
docs API guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_ref&gt;https://www.tensorflow.org/community/contribute/docs_ref&lt;/denchmark-link&gt;
 and the
docs style guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_style&gt;https://www.tensorflow.org/community/contribute/docs_style&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='anavanab99' date='2020-05-26T15:05:29Z'>
		&lt;denchmark-link:https://github.com/anavanab99&gt;@anavanab99&lt;/denchmark-link&gt;

Can you share a simple stand alone code that replicates your issue, indented code.
		</comment>
		<comment id='2' author='anavanab99' date='2020-05-26T15:39:14Z'>
		
@anavanab99
Can you share a simple stand alone code that replicates your issue, indented code.

Ok, I have uploaded the code in txt format, if you can't receive it, you can give me your email address. Thank you.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4683301/the_code.txt&gt;the_code.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='anavanab99' date='2020-05-26T15:52:02Z'>
		&lt;denchmark-link:https://github.com/anavanab99&gt;@anavanab99&lt;/denchmark-link&gt;

I ran the code shared by you and face &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/266a4d82f620d7d8a2298b2ef4f1c83e/untitled200.ipynb&gt;this error&lt;/denchmark-link&gt;
, please share all dependencies.
		</comment>
		<comment id='4' author='anavanab99' date='2020-05-26T16:04:55Z'>
		
@anavanab99
I ran the code shared by you and face this error, please share all dependencies.
Okay, I use anaconda to configure the tensorflow environment, which is all my environment dependent files
tf2_env.txt

		</comment>
		<comment id='5' author='anavanab99' date='2020-05-27T02:46:20Z'>
		
@anavanab99
I ran the code shared by you and face this error, please share all dependencies.
@Saduf2019
tf2_env.txt

Okay, I use anaconda to configure the tensorflow environment, which is all my environment dependent files
		</comment>
		<comment id='6' author='anavanab99' date='2020-05-29T13:31:48Z'>
		&lt;denchmark-link:https://github.com/anavanab99&gt;@anavanab99&lt;/denchmark-link&gt;

The error is face is because the training data is missing, which needs to be shared for us to replicate.
		</comment>
		<comment id='7' author='anavanab99' date='2020-05-29T14:40:29Z'>
		
@anavanab99
The error is face is because the training data is missing, which needs to be shared for us to replicate.

This error is not a lack of training data. I do not want to train a neural network that can be used, but I want to make this program run even if it can not fit pred or loss nan. I solved some errors through the following methods.
the code:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4702368/feature_columns_solve.txt&gt;feature_columns_solve.txt&lt;/denchmark-link&gt;

By using this method ,feature columns like categorical_column_with_hash_bucket can already run smoothly.
However, using the same method,   feature columns such as sequence_categorical_column_with_hash_bucket that with sequence still cannot run.
Its error is as follows
ValueError: The two structures don't have the same nested structure.
First structure: type=TensorSpec str=TensorSpec(shape=(None,), dtype=tf.float64, name=None)
Second structure: type=SparseTensor str=SparseTensor(indices=Tensor("volume/indices:0", shape=(None, 2), dtype=int64), values=Tensor("volume/values:0", shape=(None,), dtype=float32), dense_shape=Tensor("volume/shape:0", shape=(2,), dtype=int64))
More specifically: Substructure "type=SparseTensor str=SparseTensor(indices=Tensor("volume/indices:0", shape=(None, 2), dtype=int64), values=Tensor("volume/values:0", shape=(None,), dtype=float32), dense_shape=Tensor("volume/shape:0", shape=(2,), dtype=int64))" is a sequence, while substructure "type=TensorSpec str=TensorSpec(shape=(None,), dtype=tf.float64, name=None)" is not
Entire first structure:
mycode：
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4702404/my_code.txt&gt;my_code.txt&lt;/denchmark-link&gt;

Thank you.
		</comment>
		<comment id='8' author='anavanab99' date='2020-05-31T03:16:42Z'>
		This is similar to this question &lt;denchmark-link:https://stackoverflow.com/questions/54375298/how-to-use-tensorflow-feature-columns-as-input-to-a-keras-model&gt;here&lt;/denchmark-link&gt;
 where the workaround has been provided.
		</comment>
		<comment id='9' author='anavanab99' date='2020-05-31T18:32:10Z'>
		
This is similar to this question here where the workaround has been provided.
Yes, this problem is indeed very similar, but he can only solve the feature series of dense layers. It is used to input the sequence characteristic column of the lstm layer, which cannot be run by this method. You can try my code. There will be an error that I cannot understand. thank you very much
my_code.txt

		</comment>
		<comment id='10' author='anavanab99' date='2020-06-01T18:03:13Z'>
		
This is similar to this question here where the workaround has been provided.


This is similar to this question here where the workaround has been provided.
@Saduf2019
Hello, my problem has not been solved, is it forgotten? Thank you

		</comment>
		<comment id='11' author='anavanab99' date='2020-10-12T18:36:04Z'>
		&lt;denchmark-link:https://github.com/anavanab99&gt;@anavanab99&lt;/denchmark-link&gt;

Is this still an issue, can you please try on tf-nigtly and let us know.
		</comment>
		<comment id='12' author='anavanab99' date='2020-10-21T01:22:54Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='13' author='anavanab99' date='2020-10-28T01:49:20Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='14' author='anavanab99' date='2020-10-28T01:49:23Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39818&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39818&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>