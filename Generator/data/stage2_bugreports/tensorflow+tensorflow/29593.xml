<bug id='29593' author='srihari-humbarwadi' open_date='2019-06-10T11:20:21Z' closed_time='2019-10-03T07:36:14Z'>
	<summary>tf.estimator.train_and_evaluate fails to print anything (loss/ accuracy) when used with  tf.keras.estimator.model_to_estimator [tf2.0 beta]</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):NO
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):binary
TensorFlow version (use command below): 2.0.0-beta0
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.0/ 7.5
GPU model and memory: 11gb GTX 1080ti

Describe the current behavior
When training an estimator which is got from a tf.keras.Model instance, the tf.estimator.train_and_evaluate method fails to log anything on the stdout.
&lt;denchmark-code&gt;tf.compat.v1.logging.set_verbosity(tf.compat.v1.logging.INFO)
&lt;/denchmark-code&gt;

However, if set the above flag, i can loss being logged (similar to that of API v1)
&lt;denchmark-code&gt;I0610 16:24:54.069874 140233725445952 basic_session_run_hooks.py:260] loss = 0.9756932, step = 600 (4.162 sec)
&lt;/denchmark-code&gt;


log the metrics and loss as described in the official docs
&lt;denchmark-link:&gt;https://www.tensorflow.org/beta/guide/migration_guide&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;W0608 04:37:53.280840 139724414916352 estimator.py:1811] Using temporary folder as model directory: /tmp/tmp4rht4njh W0608 04:37:54.037474 139724414916352 deprecation.py:323] From /tmpfs/src/tf_docs_env/lib/python3.5/site-packages/tensorflow/python/training/training_util.py:236: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version. Instructions for updating: Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts. W0608 04:37:58.233872 139724414916352 deprecation.py:323] From /tmpfs/src/tf_docs_env/lib/python3.5/site-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version. Instructions for updating: Use standard file APIs to check for files with this prefix. 
({'accuracy': 0.678125, 'global_step': 25, 'loss': 1.4507575}, [])
&lt;/denchmark-code&gt;

Code to reproduce the issue
&lt;denchmark-code&gt;from tensorflow.keras.applications.xception import Xception
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D
import tensorflow_datasets as tfds
import tensorflow as tf
import numpy as np
print('Tensorflow version', tf.__version__)

def input_fn(training=False):
    batch_size = 8
    def preprocess_map_func(image, label):
        image = tf.image.resize(image, size=[299, 299])
        image.set_shape([None, None, 3])
        image /=  127.5
        image -= 1
        return image, label
    
    def input_():
        if training:
            dataset = tfds.load(name='cats_vs_dogs', as_supervised=True, split=["train"])[0]
            train_dataset = dataset.skip(3000)
            train_dataset = train_dataset.map(preprocess_map_func, num_parallel_calls=tf.data.experimental.AUTOTUNE)
            train_dataset = train_dataset.shuffle(1024).batch(batch_size).repeat().prefetch(tf.data.experimental.AUTOTUNE)
            return train_dataset
        else:
            dataset = tfds.load(name='cats_vs_dogs', as_supervised=True, split=["train"])[0]
            test_dataset = dataset.take(3000)
            test_dataset = test_dataset.map(preprocess_map_func, num_parallel_calls=tf.data.experimental.AUTOTUNE)
            test_dataset = test_dataset.shuffle(1024).batch(batch_size).repeat().prefetch(tf.data.experimental.AUTOTUNE)
            return test_dataset
    return input_

epochs = 10
samples = 23000
batch_size = 8

base_model = Xception(input_shape=(299, 299, 3), include_top=False, weights='imagenet')
y = GlobalAveragePooling2D()(base_model.output)
y = Dense(units=1, activation='linear', kernel_initializer='he_normal')(y)
base_model.trainable = False
model = tf.keras.Model(base_model.input, y)
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

estimator = tf.keras.estimator.model_to_estimator(model)
train_spec = tf.estimator.TrainSpec(input_fn(training=True), max_steps=epochs * samples//batch_size)
eval_spec = tf.estimator.EvalSpec(input_fn(training=False), steps=3000//batch_size)
tf.estimator.train_and_evaluate(estimator, 
                                train_spec=train_spec, 
                                eval_spec=eval_spec)

&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='srihari-humbarwadi' date='2019-06-10T11:20:46Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='srihari-humbarwadi' date='2019-06-26T05:49:35Z'>
		any updates?
		</comment>
		<comment id='3' author='srihari-humbarwadi' date='2019-10-02T22:17:01Z'>
		&lt;denchmark-link:https://github.com/srihari-humbarwadi&gt;@srihari-humbarwadi&lt;/denchmark-link&gt;
 Can you check with  and let us know whether it was resolved your issue? I ran it in  and I see the following output (partial) that includes  at different steps.
&lt;denchmark-code&gt;INFO:tensorflow:loss = 1.3160852, step = 0
INFO:tensorflow:loss = 1.3160852, step = 0
INFO:tensorflow:global_step/sec: 15.5583
INFO:tensorflow:global_step/sec: 15.5583
INFO:tensorflow:loss = 0.26208925, step = 100 (6.430 sec)
INFO:tensorflow:loss = 0.26208925, step = 100 (6.430 sec)
INFO:tensorflow:global_step/sec: 16.0867
INFO:tensorflow:global_step/sec: 16.0867
INFO:tensorflow:loss = 8.357772, step = 200 (6.216 sec)
INFO:tensorflow:loss = 8.357772, step = 200 (6.216 sec)
INFO:tensorflow:global_step/sec: 15.8081
INFO:tensorflow:global_step/sec: 15.8081
INFO:tensorflow:loss = 1.9635394, step = 300 (6.326 sec)
INFO:tensorflow:loss = 1.9635394, step = 300 (6.326 sec)
INFO:tensorflow:global_step/sec: 15.7007
INFO:tensorflow:global_step/sec: 15.7007
INFO:tensorflow:loss = 0.044729847, step = 400 (6.370 sec)
INFO:tensorflow:loss = 0.044729847, step = 400 (6.370 sec)
INFO:tensorflow:global_step/sec: 15.5839
INFO:tensorflow:global_step/sec: 15.5839
INFO:tensorflow:loss = 0.24973816, step = 500 (6.420 sec)
INFO:tensorflow:loss = 0.24973816, step = 500 (6.420 sec)
&lt;/denchmark-code&gt;

Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/ceabd9bc9d5f4447a94d8c26344669a1/tf29593.ipynb&gt;gist here&lt;/denchmark-link&gt;
 and let us know what you think. If your issue was resolved by , then please close the issue. thanks!
		</comment>
		<comment id='4' author='srihari-humbarwadi' date='2019-10-03T07:36:14Z'>
		Looks like its working now, thanks!
		</comment>
		<comment id='5' author='srihari-humbarwadi' date='2019-10-03T07:36:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29593&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29593&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>