<bug id='13431' author='Utumno' open_date='2017-10-01T13:44:27Z' closed_time='2017-10-04T00:03:08Z'>
	<summary>Windows nightly build Dataset.from_generator fails with pyfunc error</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows-7
TensorFlow installed from (source or binary):pip
TensorFlow version:1.4.0-dev20170929
Python version: 3.5.2
Bazel version (if compiling from source):-
CUDA/cuDNN version:-
GPU model and memory:-
Exact command to reproduce:see below

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

As described in the SO question &lt;denchmark-link:https://stackoverflow.com/q/46511328/281545&gt;https://stackoverflow.com/q/46511328/281545&lt;/denchmark-link&gt;
 the code:
import tensorflow as tf

Dataset = tf.contrib.data.Dataset
it2 = Dataset.range(5).make_one_shot_iterator()

# Dataset.from_generator need tensorflow &gt; 1.3 !
with tf.Session() as sess:
    print(tf.__version__)
    def _dataset_generator():
        while True:
            try:
                yield sess.run(it2.get_next())
            except tf.errors.OutOfRangeError:
                return
    das_dataset = Dataset.from_generator(_dataset_generator, tf.int64)
    das_dataset_it = das_dataset.make_one_shot_iterator()
    while True:
        try:
            print(sess.run(das_dataset_it.get_next()))
        except tf.errors.OutOfRangeError:
            break
fails with:
&lt;denchmark-code&gt;C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\Scripts\python.exe C:/Dropbox/eclipse_workspaces/python/zebra/so_46511328_from_generator.py
1.4.0-dev20170929
2017-10-01 16:41:41.978576: W C:\tf_jenkins\home\workspace\tf-nightly-windows\M\windows\PY\35\tensorflow\core\framework\op_kernel.cc:1192] Invalid argument: 0-th value returned by pyfunc_0 is int32, but expects int64
	 [[Node: PyFunc = PyFunc[Tin=[], Tout=[DT_INT64], token="pyfunc_0"]()]]
Traceback (most recent call last):
  File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1323, in _do_call
    return fn(*args)
  File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1302, in _run_fn
    status, run_metadata)
  File "C:\_\Python35\lib\contextlib.py", line 66, in __exit__
    next(self.gen)
  File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\framework\errors_impl.py", line 467, in raise_exception_on_not_ok_status
    c_api.TF_GetCode(status.status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: 0-th value returned by pyfunc_0 is int32, but expects int64
	 [[Node: PyFunc = PyFunc[Tin=[], Tout=[DT_INT64], token="pyfunc_0"]()]]
	 [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[&lt;unknown&gt;], output_types=[DT_INT64], _device="/job:localhost/replica:0/task:0/cpu:0"](OneShotIterator_1)]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/Dropbox/eclipse_workspaces/python/zebra/so_46511328_from_generator.py", line 19, in &lt;module&gt;
    print(sess.run(das_dataset_it.get_next()))
  File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 889, in run
    run_metadata_ptr)
  File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1120, in _run
    feed_dict_tensor, options, run_metadata)
  File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1317, in _do_run
    options, run_metadata)
  File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1336, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: 0-th value returned by pyfunc_0 is int32, but expects int64
	 [[Node: PyFunc = PyFunc[Tin=[], Tout=[DT_INT64], token="pyfunc_0"]()]]
	 [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[&lt;unknown&gt;], output_types=[DT_INT64], _device="/job:localhost/replica:0/task:0/cpu:0"](OneShotIterator_1)]]

Process finished with exit code 1
&lt;/denchmark-code&gt;

That's a problem in windows nightly - installing the nightly on an Ubuntu machine works:
&lt;denchmark-code&gt;$ pipenv run python3 so_46511328_from_generator.py
2017-10-01 13:34:21.840423: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
1.4.0-dev20170929
0
1
2
3
4
2017-10-01 13:34:21.903201: W tensorflow/core/framework/op_kernel.cc:1192] Out of range: StopIteration: Iteration finished.
&lt;/denchmark-code&gt;

 Maybe related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/8196&gt;#8196&lt;/denchmark-link&gt;
 ?
	</description>
	<comments>
		<comment id='1' author='Utumno' date='2017-10-02T19:55:56Z'>
		Yes, I think is a result of  returning a different array type (when  is a Python ) on Windows and Linux. If I remember correctly, on Windows the array will have type  and on Linux the array will have type . This behavior in  is inherited from , which performs the NumPy conversion automatically (as discussed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/8196&gt;#8196&lt;/denchmark-link&gt;
). To write platform independent code that handles this case, you should explicitly wrap the return value in a NumPy array.
		</comment>
		<comment id='2' author='Utumno' date='2017-10-02T20:15:54Z'>
		On second thoughts... I think this is really easy to fix. I'm working on a patch.
		</comment>
	</comments>
</bug>