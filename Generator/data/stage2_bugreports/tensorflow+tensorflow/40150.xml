<bug id='40150' author='leandro-gracia-gil' open_date='2020-06-04T11:44:48Z' closed_time='2020-09-13T15:30:35Z'>
	<summary>tf.TensorArray.stack() fails inside tf.function when dtype is tf.uint32 or tf.uint64</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.2.0-rc4-8-g2b96f3662b 2.2.0
Python version: 3.7.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: none
GPU model and memory: N/A

Describe the current behavior
When used in a tf.function, calling stack() in a tf.TensorArray object fails with the following error when the dtype is tf.uint32 or tf.uint64.

tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
(0) Invalid argument:  Unsupported type in DataTypeToPrimitiveType: 'variant'
[[node TensorArrayV2Stack/TensorListStack (defined at ta_error.py:21) ]]
(1) Invalid argument:  Unsupported type in DataTypeToPrimitiveType: 'variant'
[[node TensorArrayV2Stack/TensorListStack (defined at ta_error.py:21) ]]
[[TensorArrayV2Stack/TensorListStack/_6]]
0 successful operations.
0 derived errors ignored. [Op:__inference_test_12]

Describe the expected behavior
Should not fail, but return a stacked tensor. Works correctly when the dtype is not tf.uint32 or tf.uint64. Also works correctly when executed in eager mode.
Standalone code to reproduce the issue
@tf.function
def test():
  ta = tf.TensorArray(tf.uint64, 1)
  ta = ta.write(0, 123)
  return ta.stack()
	</description>
	<comments>
		<comment id='1' author='leandro-gracia-gil' date='2020-06-05T05:47:21Z'>
		I have tried in colab with TF version 2.2 ,nightly version() and was able to reproduce the issue.Please,find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/7ec03b405f875dce2d345b2f22e5aec5/untitled50.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='leandro-gracia-gil' date='2020-09-13T15:30:35Z'>
		I think this issue is now fixed with tf-nightly. Closing issue. Please reopen if still there is a problem
		</comment>
		<comment id='3' author='leandro-gracia-gil' date='2020-09-13T15:30:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40150&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40150&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>