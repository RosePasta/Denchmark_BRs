<bug id='31636' author='mpdn' open_date='2019-08-15T06:38:58Z' closed_time='2020-01-08T18:39:58Z'>
	<summary>Masked GlobalAveragePooling1D fails when size of step axis is not known statically</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 1.14.0, 2.0.0b
Python version: 3.6.8

Code to reproduce the issue
This code:
&lt;denchmark-code&gt;import tensorflow as tf
input = tf.keras.layers.Input([None, 32])
mask = tf.keras.layers.Input([None], dtype=tf.bool)
tf.keras.layers.GlobalAveragePooling1D()(input, mask)
&lt;/denchmark-code&gt;

Fails with this exception:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py", line 662, in __call__
    outputs = call_fn(inputs, *args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/keras/layers/pooling.py", line 643, in call
    mask = array_ops.reshape(mask, broadcast_shape)
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/ops/gen_array_ops.py", line 7715, in reshape
    "Reshape", tensor=tensor, shape=shape, name=name)
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py", line 530, in _apply_op_helper
    raise err
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py", line 527, in _apply_op_helper
    preferred_dtype=default_dtype)
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/ops.py", line 1237, in internal_convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py", line 305, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py", line 246, in constant
    allow_broadcast=True)
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py", line 284, in _constant_impl
    allow_broadcast=allow_broadcast))
  File "/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/tensor_util.py", line 563, in make_tensor_proto
    "supported type." % (type(values), values))
TypeError: Failed to convert object of type &lt;class 'list'&gt; to Tensor. Contents: [-1, None, 1]. Consider casting elements to a supported type.
&lt;/denchmark-code&gt;

I would expect masked global average pooling to be no different than regular global average pooling (where unknown step axis is supported)
I think this is caused by the two lines here: 


tensorflow/tensorflow/python/keras/layers/pooling.py


        Lines 641 to 642
      in
      e19c354






 input_shape = inputs.shape.as_list() 



 broadcast_shape = [-1, input_shape[steps_axis], 1] 





Instead of finding the broadcast shape using as_list it should use the shape tensor directly and tf.concat them together (or whatever is an appropriate equivalent in the keras library).
	</description>
	<comments>
		<comment id='1' author='mpdn' date='2019-08-16T08:59:36Z'>
		Was able to replicate the issue on Colab with Tensorflow 2.0.0.beta1. Please see the gist &lt;denchmark-link:https://colab.sandbox.google.com/drive/1AijetZx2ofPuBztdlKovFiC7ZpiT2QFs#scrollTo=l9gPx9dqn4Uu&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='mpdn' date='2020-01-08T10:50:19Z'>
		Had the same issue when using masking and GlobalAveragePooling1D with the Keras Sequential.
For anyone else running into this - it is fixed in v2.1.0-rc0 and later versions.



tensorflow/tensorflow/python/keras/layers/pooling.py


        Lines 642 to 643
      in
      9837ece






 mask = array_ops.expand_dims( 



 mask, 2 if self.data_format == 'channels_last' else 1) 





		</comment>
		<comment id='3' author='mpdn' date='2020-01-08T18:39:58Z'>
		&lt;denchmark-link:https://github.com/mpdn&gt;@mpdn&lt;/denchmark-link&gt;
 As mentioned by &lt;denchmark-link:https://github.com/vsimkus&gt;@vsimkus&lt;/denchmark-link&gt;
, this issue was resolved in latest version. Please take a look at the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/42a3edc1d4fc4e771b0417e5f2b2675c/tf31636.ipynb&gt;gist&lt;/denchmark-link&gt;
 for your reference. Thanks!
I am closing this issue as it was resolved. Please feel free to open if the issue persists again. thanks!
		</comment>
		<comment id='4' author='mpdn' date='2020-01-08T18:40:00Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/31636&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/31636&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='mpdn' date='2020-02-27T00:13:14Z'>
		Yes, it is fixed in 2.1, while the issue still persists in 2.0.1.
And if I upgrade to 2.1, my model cannot predict since 'Error when checking model input'.
The issue can be reproduced with tf 2.1 by
&lt;denchmark-link:https://colab.research.google.com/drive/1hMLd5-r82FrnFnBub-B-fVW78Px4KPX1&gt;https://colab.research.google.com/drive/1hMLd5-r82FrnFnBub-B-fVW78Px4KPX1&lt;/denchmark-link&gt;

Anyone can fix it?
Thanks
		</comment>
	</comments>
</bug>