<bug id='28643' author='shkarupa-alex' open_date='2019-05-12T19:20:19Z' closed_time='2019-05-28T20:07:29Z'>
	<summary>Keras fit_generator fails in graph mode when input is dict</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): simple keras model combined from examples
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS X 10.14
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0-alpha0
Python version: 2.7
Bazel version (if compiling from source): no
GCC/Compiler version (if compiling from source): no
CUDA/cuDNN version: no, CPU-version
GPU model and memory: no, CPU-version

Describe the current behavior
When running provided code it fails only when fit_generator executed in graph mode.
In other cases fit() and fit_generator() work well.
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-2-11180391ba3c&gt; in &lt;module&gt;()
     61 # Fails
     62 model.run_eagerly = False
---&gt; 63 model.fit_generator(input_fn())

/usr/local/lib/python2.7/site-packages/tensorflow/python/keras/engine/training.pyc in fit_generator(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)
   1513         shuffle=shuffle,
   1514         initial_epoch=initial_epoch,
-&gt; 1515         steps_name='steps_per_epoch')
   1516 
   1517   def evaluate_generator(self,

/usr/local/lib/python2.7/site-packages/tensorflow/python/keras/engine/training_generator.pyc in model_iteration(model, data, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch, mode, batch_size, steps_name, **kwargs)
    255 
    256       is_deferred = not model._is_compiled
--&gt; 257       batch_outs = batch_function(*batch_data)
    258       if not isinstance(batch_outs, list):
    259         batch_outs = [batch_outs]

/usr/local/lib/python2.7/site-packages/tensorflow/python/keras/engine/training.pyc in train_on_batch(self, x, y, sample_weight, class_weight, reset_metrics)
   1248     else:
   1249       if not isinstance(K.symbolic_learning_phase(), int):
-&gt; 1250         ins = x + y + sample_weights + [True]
   1251       else:
   1252         ins = x + y + sample_weights

TypeError: unsupported operand type(s) for +: 'dict' and 'list'
Describe the expected behavior
tf.keras.Model().fit_generator() should work properly with input of type dict.
Code to reproduce the issue
import numpy as np
import tensorflow as tf


def input_fn():
    x = np.random.random((1024, 10))
    y = np.random.randint(2, size=(1024, 1))
    x = tf.cast(x, tf.float32)
    
    dataset = tf.data.Dataset.from_tensor_slices((x, y))
    dataset = dataset.shuffle(100)
    dataset = dataset.batch(32)
    dataset = dataset.repeat(10)
    
    def _extract_features(_x, _y):
        features = {
            'x': _x,
            'z': tf.zeros_like(_x)
        }
        
        return features, _y

    dataset = dataset.map(_extract_features)

    return dataset


class MyModel0(tf.keras.Model):
    def __init__(self):
        super(MyModel, self).__init__()
        
        self.features = tf.keras.layers.DenseFeatures([
            tf.feature_column.numeric_column('x', shape=(10,))
        ])
        self.dense1 = tf.keras.layers.Dense(16, activation='relu')
        self.dense2 = tf.keras.layers.Dense(1, activation='sigmoid')
        
    def call(self, inputs, training=None, mask=None):
        outputs = self.features(inputs)
        outputs = self.dense1(outputs)
        outputs = self.dense2(outputs)

        return outputs


model = MyModel()
model.compile(loss='binary_crossentropy', optimizer=tf.keras.optimizers.Adam(lr=0.05))

# Works
model.run_eagerly = True
model.fit(input_fn())

# Works
model.run_eagerly = False
model.fit(input_fn())

# Works
model.run_eagerly = True
model.fit_generator(input_fn())

# Fails
model.run_eagerly = False
model.fit_generator(input_fn())
	</description>
	<comments>
		<comment id='1' author='shkarupa-alex' date='2019-05-13T09:25:47Z'>
		&lt;denchmark-link:https://github.com/shkarupa-alex&gt;@shkarupa-alex&lt;/denchmark-link&gt;
 Able to reproduce the issue with the provided code.
&lt;denchmark-code&gt; 62 model.run_eagerly = False
&lt;/denchmark-code&gt;

---&gt; 63 model.fit_generator(input_fn())
2 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in train_on_batch(self, x, y, sample_weight, class_weight, reset_metrics)
1248     else:
1249       if not isinstance(K.symbolic_learning_phase(), int):
-&gt; 1250         ins = x + y + sample_weights + [True]
1251       else:
1252         ins = x + y + sample_weights
TypeError: unsupported operand type(s) for +: 'dict' and 'list'
		</comment>
		<comment id='2' author='shkarupa-alex' date='2019-05-13T10:16:20Z'>
		tf-nightly is free from this issue (but that is tf 1.x branch as i know)
		</comment>
		<comment id='3' author='shkarupa-alex' date='2019-05-28T20:07:28Z'>
		I think this issue has been fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/254e39f810fd88e14c3743a5aaf903e5dd6bb397&gt;254e39f&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='shkarupa-alex' date='2019-05-28T20:07:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28643&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28643&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>