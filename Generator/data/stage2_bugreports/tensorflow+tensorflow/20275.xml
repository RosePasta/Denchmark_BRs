<bug id='20275' author='voegtlel' open_date='2018-06-25T13:10:47Z' closed_time='2018-08-01T21:01:09Z'>
	<summary>`tf.profiler.profile` outputs negative number of flops</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.8.0
Python version: 3.6.5
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce: See below

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

tf.profiler.profile outputs negative number of flops for tf.nn.conv2d ops on large inputs because of np.int32 overflow.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

import tensorflow as tf
from tensorflow.python.framework.ops import get_stats_for_node_def

test_conv2d = tf.nn.conv2d(tf.zeros((1, 1024, 1024, 16)), tf.zeros((4, 4, 16, 4)), strides=[1, 1, 1, 1], padding='SAME')
# This function is used by tf.profiler.profile
stats = get_stats_for_node_def(tf.get_default_graph(), test_conv2d.op.node_def, 'flops')
# Compare the results: one is negative, the other is the actual result
# The size is exactly 2^31
print(stats.value, 1 * 1024 * 1024 * 4 * 16 * 4 * 4 * 2)
The reason is:



tensorflow/tensorflow/python/ops/nn_ops.py


         Line 2169
      in
      cfebbbc






 output_count = np.prod(output_shape.as_list()) 





here np.prod is used which returns an np.int32. This enforces the next product line



tensorflow/tensorflow/python/ops/nn_ops.py


         Line 2172
      in
      cfebbbc






 (output_count * filter_in_depth * filter_height * filter_width * 2)) 





to compute everything as np.int32. Actually, the protobuf supports int64:



tensorflow/tensorflow/core/profiler/tfprof_output.proto


         Line 105
      in
      cf375f0






 int64 float_ops = 5; 





so this line could be replaced by:
np.prod(output_shape.as_list(), dtype=np.int64)
There are more ops affected by this issue, as they also use np.prod.
PS: Sorry that I cannot submit the fix straight away, everything needed to fix this issue is mentioned above.
	</description>
	<comments>
		<comment id='1' author='voegtlel' date='2018-06-27T23:22:48Z'>
		Thanks for the clear problem diagnosis.  I'll push a fix internally.
		</comment>
		<comment id='2' author='voegtlel' date='2018-07-12T19:10:33Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/poxvoculi&gt;@poxvoculi&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='3' author='voegtlel' date='2018-07-27T18:54:29Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/poxvoculi&gt;@poxvoculi&lt;/denchmark-link&gt;
: It has been 29 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
	</comments>
</bug>