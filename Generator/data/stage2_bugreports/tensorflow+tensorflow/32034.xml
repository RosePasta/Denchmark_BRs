<bug id='32034' author='Khoa-NT' open_date='2019-08-28T06:06:43Z' closed_time='2019-08-28T20:12:01Z'>
	<summary>Customize Keras Tensorboard callback</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): install by pip in anaconda environment
TensorFlow version (use command below):  tensorflow-gpu==2.0.0-rc0; Tensorboard 1.14
Python version: 3.6.9
CUDA/cuDNN version:  cudatoolkit( 10.0.130); cudnn( 7.6.0)
GPU model and memory: GeForce GTX 1080 - 8117MiB

Describe the current behavior
In Tensorflow 1.13.1, I create my tensorboard callback to add image while training by customizing the keras.callbacks.TensorBoard.
: from this :&lt;denchmark-link:https://github.com/keras-team/keras/blob/master/keras/callbacks.py#L1114-L1122&gt;https://github.com/keras-team/keras/blob/master/keras/callbacks.py#L1114-L1122&lt;/denchmark-link&gt;

I add the code:
&lt;denchmark-code&gt;                if hasattr(layer, 'output'):
                    if isinstance(layer.output, list):
                        for i, output in enumerate(layer.output):
                            tf.summary.histogram('{}_out_{}'.format(layer.name, i),
                                                 output)
                    else:
                        tf.summary.histogram('{}_out'.format(layer.name),
                                             layer.output)

                # My code
                input1 = self.model.get_layer('input1').input
                tf.summary.image('input1', input1 , max_outputs=MAX_OUT)
                # End my code

        self.merged = tf.summary.merge_all()
&lt;/denchmark-code&gt;

Then I can see the image while training.
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/callbacks.py#L1491&gt;https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/callbacks.py#L1491&lt;/denchmark-link&gt;
.
I can't find   or
 in the 
Describe the expected behavior
Where I can add the
&lt;denchmark-code&gt;input1 = self.model.get_layer('input1').input
tf.summary.image('input1', input1 , max_outputs=MAX_OUT)
&lt;/denchmark-code&gt;

to see the image while training ?
	</description>
	<comments>
		<comment id='1' author='Khoa-NT' date='2019-08-28T20:11:59Z'>
		@shaolinkhoa Modifying the Callbacks in this way is not supported, but you can add tf.summaries inside of Layers and Models in the nightly preview of 2.0 like this:
&lt;denchmark-code&gt;class MyLayer(keras.layers.Layer):
  ...
  def call(self, inputs):
    tf.summary.image(inputs)
    return 2*inputs

model = Model(...)
tb = keras.callbacks.TensorBoard(log_dir, update_freq=1)
model.fit(x, y, callbacks=[tb])
&lt;/denchmark-code&gt;

That should be able to support your use case
		</comment>
		<comment id='2' author='Khoa-NT' date='2019-08-28T20:12:02Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32034&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32034&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Khoa-NT' date='2019-08-29T06:25:52Z'>
		&lt;denchmark-link:https://github.com/omalleyt12&gt;@omalleyt12&lt;/denchmark-link&gt;
 Thank you for replying.
So it really inconveniences in tf.keras and tf2 now.
It means I have to modify all the  of my layer in the model, even the existed core layers ( Dense, Conv2D,...), to add the  instead of modifying only my custom keras tensorboard callback as I did in tf 1.13.1.
And it only works on TF2-nightly preview ? not the TF2-rc ?
		</comment>
		<comment id='4' author='Khoa-NT' date='2020-05-08T21:48:07Z'>
		
@shaolinkhoa Modifying the Callbacks in this way is not supported, but you can add tf.summaries inside of Layers and Models in the nightly preview of 2.0 like this:
class MyLayer(keras.layers.Layer):
  ...
  def call(self, inputs):
    tf.summary.image(inputs)
    return 2*inputs

model = Model(...)
tb = keras.callbacks.TensorBoard(log_dir, update_freq=1)
model.fit(x, y, callbacks=[tb])

That should be able to support your use case

&lt;denchmark-link:https://github.com/omalleyt12&gt;@omalleyt12&lt;/denchmark-link&gt;
 Is this working anymore? I summary an image in this way but cannot find it in Tensorboard.
		</comment>
	</comments>
</bug>