<bug id='8676' author='AndreaFar' open_date='2017-03-24T04:30:50Z' closed_time='2017-04-07T16:51:22Z'>
	<summary>Tensorflow causes whole python to crash with error Python frozen importlib._bootstrap</summary>
	<description>
If I try to run a computer vision script python crashes with no error message at all.
If I run with python -m trace python console goes in loop with a message repeated continuously that is unreadable because lines are printed endless too fastly. I can see some line related to sre_compile.py text_format.py inspect.py and charmap codec can't encode \u2713 in cp1252.py and from tensorflow.contrib.keras
If I try to redirect the output to a file, the file content is
&lt;denchmark-code&gt;&lt;frozen importlib._bootstrap_external&gt;(376): &lt;frozen importlib._bootstrap_external&gt;(1258): &lt;frozen importlib._bootstrap_external&gt;(1255): &lt;frozen importlib._bootstrap_external&gt;(1256):  --- modulename: _bootstrap_external, funcname: _path_join
&lt;frozen importlib._bootstrap_external&gt;(59): &lt;frozen importlib._bootstrap_external&gt;(60):  --- modulename: _bootstrap_external, funcname: &lt;listcomp&gt;
...again and again
&lt;/denchmark-code&gt;

This isn't the first time that a tensorflow issue cause the whole python to go crazy.
I have tried both today nightly build, past days nightly build, stable version, no way to run and since causes python crash It's very hard to debug.
Tensorflow stable and nightly 1.0.1 on windows 10 x64.
To reproduce this issue run evaluate.py scipt of TensorBox project
	</description>
	<comments>
		<comment id='1' author='AndreaFar' date='2017-03-24T23:58:53Z'>
		Could you try running the same script in an Ubuntu VM and see if you experience the same problem? I wonder if this is a Windows-specific issue, given that it looks like TensorBox works for most users.
		</comment>
		<comment id='2' author='AndreaFar' date='2017-03-26T23:55:25Z'>
		&lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;
 happens only with Windows version of Tensorflow that is bugged as the hell.
		</comment>
		<comment id='3' author='AndreaFar' date='2017-03-28T23:30:57Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
, please take a look.
		</comment>
		<comment id='4' author='AndreaFar' date='2017-04-03T18:45:43Z'>
		I'm a little unclear on what the problem is here. If you run with python -m trace and redirect the output to a file, does the program crash or hang (for at least, say, 10 minutes) without appending to the file? It is expected that python -m trace will produce a lot of output, so it is not surprising that it fills your console.
(Judging by your previous issue, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/8627&gt;#8627&lt;/denchmark-link&gt;
, it seems like there might be a problem with your Python installation, as at least one problem was caused by interactions between third-party libraries.)
		</comment>
		<comment id='5' author='AndreaFar' date='2017-04-03T21:11:41Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 maybe the console crashes because It's filled with too many lines but something doesn't work correctly and broke whole Python environment judging to the content of -m trace where seems cannot log correctly what is going wrong.  My python installation seems working correctly, I don't know why if something goes wrong with certain Tensorflow libs python keep crashing preventing me to see exactly what is the error log (maybe could be related to the fact the error is with some compiled c lib??).
		</comment>
		<comment id='6' author='AndreaFar' date='2017-04-03T21:17:32Z'>
		We have seen instances of bad interactions between compiled Python extensions and TensorFlow, so that's certainly possible. However we're still going to need more information to help you.
Can you post the entire contents of the output of python -m trace evaluate.py (redirected to a file, to avoid crashing your console)?
Alternatively, can you confirm which library in that script causes Python to crash? A simple way to do this would be to add print() statements after importing each library, at the top of evaluate.py.
		</comment>
		<comment id='7' author='AndreaFar' date='2017-04-03T21:42:01Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 would be useless unless you want to read some billion of
&lt;denchmark-code&gt;&lt;frozen importlib._bootstrap_external&gt;(376): &lt;frozen importlib._bootstrap_external&gt;(1258): &lt;frozen importlib._bootstrap_external&gt;(1255): &lt;frozen importlib._bootstrap_external&gt;(1256):  --- modulename: _bootstrap_external, funcname: _path_join
&lt;frozen importlib._bootstrap_external&gt;(59): &lt;frozen importlib._bootstrap_external&gt;(60)
&lt;/denchmark-code&gt;

there is nothing else in the output. This time is unclear what is the specific lib involved, if I find something new that can be useful I'll update the report
		</comment>
		<comment id='8' author='AndreaFar' date='2017-04-03T22:19:55Z'>
		The entire log would still be useful... I imagine the lines immediately preceding those repeated importlib tracing would provide information about the last library successfully imported.
		</comment>
		<comment id='9' author='AndreaFar' date='2017-04-04T17:09:48Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 I'm sorry but there is only this error message nothing else. However now I'm trying a different configuration of Tensorflow that doesn't use python distribution of conda environment and cannot reproduce the issue anymore.
		</comment>
		<comment id='10' author='AndreaFar' date='2017-04-07T16:51:22Z'>
		Thanks for confirming that switching to conda fixes things. I suspect this is an environment problem caused by one of the libraries on which TensorFlow depends, but I don't think we'll be able to reproduce it. Feel free to reopen this if you can get any additional information about the crash.
		</comment>
	</comments>
</bug>