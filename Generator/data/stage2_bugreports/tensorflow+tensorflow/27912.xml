<bug id='27912' author='Meiyd' open_date='2019-04-17T09:09:49Z' closed_time='2019-04-29T04:18:16Z'>
	<summary>There is still bug with function tf.keras.layers.Conv3DTranspose when its input shape is None</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04.2


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:


TensorFlow installed from (source or binary): source


TensorFlow version (use command below): 1.13.1


Python version: 3.7


You can collect some of this information using our environment capture &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the current behavior
Hi, here's my code:
input_img = keras.layers.Input( shape=( None, len(params2), len(params2), 1 ) ) # adapt this if using channels_first image data format
conv1 = keras.layers.Conv3D(filters=32, kernel_size=(1, 3, 3), strides=(1, 1, 1), activation='selu', padding='same', data_format='channels_last', name='conv1')(input_img)
conv2 = keras.layers.Conv3D(filters=64, kernel_size=(1, 3, 3), strides=(1, 2, 2), activation='selu', padding='same', data_format='channels_last', name='conv2')(conv1)
conv3 = keras.layers.Conv3D(filters=128,kernel_size=(1, 3, 3), strides=(1, 2, 2), activation='selu', padding='same', data_format='channels_last', name='conv3')(conv2)
conv4 = keras.layers.Conv3D(filters=256,kernel_size=(1, 3, 3), strides=(1, 2, 2), activation='selu', padding='same', data_format='channels_last', name='conv4')(conv3)
convlstm1 = keras.layers.ConvLSTM2D(filters=32, return_sequences=True, kernel_size=(3, 3), strides=(1, 1), activation='selu', padding='same', data_format='channels_last', name='convlstm1')(conv1)
convlstm2 = keras.layers.ConvLSTM2D(filters=64, return_sequences=True, kernel_size=(3, 3), strides=(1, 1), activation='selu', padding='same', data_format='channels_last', name='convlstm2')(conv2)
convlstm3 = keras.layers.ConvLSTM2D(filters=128,return_sequences=True, kernel_size=(3, 3), strides=(1, 1), activation='selu', padding='same', data_format='channels_last', name='convlstm3')(conv3)
convlstm4 = keras.layers.ConvLSTM2D(filters=256,return_sequences=True, kernel_size=(3, 3), strides=(1, 1), activation='selu', padding='same', data_format='channels_last', name='convlstm4')(conv4)
deconv4 = keras.layers.Conv3DTranspose(filters=128, kernel_size=(1, 2, 2), strides=(1, 2, 2), activation='selu', padding='valid', output_padding=(0, -1, -1), data_format='channels_last', name='deconv4')(convlstm4)
concat4 = keras.layers.Concatenate(axis=4, name='concat4')([convlstm3, deconv4])
deconv3 = keras.layers.Conv3DTranspose(filters=64 , kernel_size=(1, 2, 2), strides=(1, 2, 2), activation='selu', padding='valid', output_padding=(0, -1, -1), data_format='channels_last', name='deconv3')(concat4)
concat3 = keras.layers.Concatenate(axis=4, name='concat3')([convlstm2, deconv3])
deconv2 = keras.layers.Conv3DTranspose(filters=32 , kernel_size=(1, 3, 3), strides=(1, 2, 2), activation='selu', padding='same' , data_format='channels_last', name='deconv2')(concat3)
concat2 = keras.layers.Concatenate(axis=4, name='concat2')([convlstm1, deconv2])
deconv1 = keras.layers.Conv3DTranspose(filters=1  , kernel_size=(1, 3, 3), strides=(1, 1, 1), activation='selu', padding='same' , data_format='channels_last', name='deconv1')(concat2)
autoencoder = keras.models.Model(input_img, deconv1)
autoencoder.compile(optimizer='adadelta', loss='binary_crossentropy')
autoencoder.summary()
and here's the error message:
TypeError                                 Traceback (most recent call last)
 in 
28     return autoencoder
29
---&gt; 30 autoencoder1(1700)
 in autoencoder1(file_length)
14     convlstm4 = keras.layers.ConvLSTM2D(filters=256,return_sequences=True, kernel_size=(3, 3), strides=(1, 1), activation='selu', padding='same', data_format='channels_last', name='convlstm4')(conv4)
15
---&gt; 16     deconv4 = keras.layers.Conv3DTranspose(filters=128, kernel_size=(1, 2, 2), strides=(1, 2, 2), activation='selu', padding='valid', output_padding=(0, -1, -1), data_format='channels_last', name='deconv4')(convlstm4)
17     concat4 = keras.layers.Concatenate(axis=4, name='concat4')([convlstm3, deconv4])
18     deconv3 = keras.layers.Conv3DTranspose(filters=64 , kernel_size=(1, 2, 2), strides=(1, 2, 2), activation='selu', padding='valid', output_padding=(0, -1, -1), data_format='channels_last', name='deconv3')(concat4)
~/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py in call(self, inputs, *args, **kwargs)
552             # In graph mode, failure to build the layer's graph
553             # implies a user-side bug. We don't catch exceptions.
--&gt; 554             outputs = self.call(inputs, *args, **kwargs)
555           else:
556             try:
~/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/layers/convolutional.py in call(self, inputs)
1138       else:
1139         outputs_4d = array_ops.reshape(outputs, [
-&gt; 1140             outputs_shape[0], outputs_shape[1] * outputs_shape[2],
1141             outputs_shape[3], outputs_shape[4]
1142         ])
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
You just said that this problem was solved. But I'm really not sure why I still have this problem today on April 2019.
	</description>
	<comments>
		<comment id='1' author='Meiyd' date='2019-04-17T09:10:40Z'>
		Someone said that this problem was solved in February, but I found that there is still error, that it doesn't work.
		</comment>
		<comment id='2' author='Meiyd' date='2019-04-18T04:48:45Z'>
		I encountered this problem too. It seems that this problem is fixed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/bae74d26f93872374b48c60a73d189df148a6f99#diff-aa6c341a4b212afc57b49be73e689dc2&gt;this commit&lt;/denchmark-link&gt;
, but it does not appear in version 1.13.1.
		</comment>
		<comment id='3' author='Meiyd' date='2019-04-23T11:06:04Z'>
		&lt;denchmark-link:https://github.com/Meiyd&gt;@Meiyd&lt;/denchmark-link&gt;
 : I observe that the merge is not included in version 1.13-rc2 or even 1.13.1 however it is not seen on 2.0.0-alpha0 version. Can you please try this and let us know?
		</comment>
		<comment id='4' author='Meiyd' date='2019-04-29T04:18:12Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='5' author='Meiyd' date='2019-04-29T04:18:17Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=27912&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=27912&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>