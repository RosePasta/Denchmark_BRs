<bug id='29917' author='xlambein' open_date='2019-06-18T16:21:28Z' closed_time='2019-08-09T20:23:00Z'>
	<summary>[TensorFlow 2.0] Taking a slice of a Keras Input layer gives a tensor with unknown shape</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS X 10.14.5
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.0.0-beta0-16-g1d91213fe7 2.0.0-beta1
Python version: 3.6.8
CUDA/cuDNN version: don't have a GPU
GPU model and memory: don't have a GPU

Describe the current behavior
If I create an input layer with Keras and take a slice of it, the slice has unknown shape:
&gt;&gt;&gt; inputs = tf.keras.Input((10, 10))
&gt;&gt;&gt; inputs.shape
TensorShape([None, 10, 10])
&gt;&gt;&gt; slice = inputs[:,:,:5]
&gt;&gt;&gt; slice.shape
TensorShape(None)
This is a problem when I want to use this slice in something else, e.g. here with a softmax:
&gt;&gt;&gt; tf.keras.activations.softmax(slice)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "[path_to_my_env]/lib/python3.6/site-packages/tensorflow/python/keras/activations.py", line 66, in softmax
    elif ndim &gt; 2:
TypeError: '&gt;' not supported between instances of 'NoneType' and 'int'
Describe the expected behavior
I'd expect slice to have shape TensorShape([None, 10, 5]).
Code to reproduce the issue
import tensorflow as tf

inputs = tf.keras.Input((10, 10))
assert inputs.shape.as_list() == [None, 10, 10]  # This works
assert inputs[:,:,:5].shape.as_list() == [None, 10, 5]  # Raises ValueError
	</description>
	<comments>
		<comment id='1' author='xlambein' date='2019-06-19T10:08:37Z'>
		I was able to reproduce the above mentioned issue on Colab with Tensorflow 2.0.0.beta1. Thanks!
		</comment>
		<comment id='2' author='xlambein' date='2019-06-21T06:51:07Z'>
		I have the problem, any solution?
		</comment>
		<comment id='3' author='xlambein' date='2019-06-21T07:15:42Z'>
		&lt;denchmark-link:https://github.com/aaronlyt&gt;@aaronlyt&lt;/denchmark-link&gt;
 I found a temporary fix to get my code running.  You can call  on a tensor to enforce a specific shape on it.  In my example it would look like this:
&gt;&gt;&gt; inputs = tf.keras.Input((10, 10))
&gt;&gt;&gt; slice = inputs[:,:,:5]
&gt;&gt;&gt; slice.shape
TensorShape(None)
&gt;&gt;&gt; slice.set_shape(inputs.shape[:-1].concatenate(5))
&gt;&gt;&gt; slice.shape
TensorShape([None, 10, 5])
		</comment>
		<comment id='4' author='xlambein' date='2019-06-21T07:31:49Z'>
		Thanks, it works
		</comment>
		<comment id='5' author='xlambein' date='2019-06-21T23:05:31Z'>
		I believe the object returned from Input is simply a Tensor -- so this looks like a bug or missing feature in the slide shape function? &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 is this known?
		</comment>
		<comment id='6' author='xlambein' date='2019-06-28T23:37:59Z'>
		The code snippet works in TF 1.14 .  However fails with TF 2.0 nightly (2.0.0-dev20190628)
		</comment>
		<comment id='7' author='xlambein' date='2019-08-09T18:23:30Z'>
		This is fixed with latest tf 2.0 nightly version '2.0.0-dev20190809'. Thanks!
		</comment>
		<comment id='8' author='xlambein' date='2019-08-09T18:32:59Z'>
		&lt;denchmark-link:https://github.com/omalleyt12&gt;@omalleyt12&lt;/denchmark-link&gt;
 was the fixing commit before or after 2.0 branch cut? I'd like to make sure the release has the fix.
		</comment>
		<comment id='9' author='xlambein' date='2019-08-09T20:23:00Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 oops sorry for not updating this, this (and other related loss-of-shape bugs) were fixed before the cut
		</comment>
		<comment id='10' author='xlambein' date='2019-08-09T20:23:01Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29917&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29917&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>