<bug id='39465' author='vasudev13' open_date='2020-05-12T18:30:13Z' closed_time='2020-08-24T22:05:40Z'>
	<summary>model.fit hangs if validation_steps is zero</summary>
	<description>
System information

I written custom code (as opposed to using a stock example script provided in TensorFlow)
OS Platform and Distribution: Kaggle Kernel, 'Linux-4.19.112+-x86_64-with-debian-buster-sid'
TensorFlow installed from (source or binary): installed from pip
TensorFlow version (use command below): 2.1
Python version: 3.7.6
CUDA/cuDNN version: V10.1.243
GPU model and memory: Tesla P100-PCIE-16GB

Current Behaviour
model.fit suspends  execution or hangs after training first epoch runs if value passed for validation_steps=len(valid_inputs)//BATCH_SIZE is equal to zero.
Moreover, validate for x steps is not printed before training starts.
I believe a ValueError could be raised if validation_steps is 0 and not None. (or execution could proceed further with next epoch over training set)
Standalone code to reproduce the issue
&lt;denchmark-code&gt;VALIDATION_STEPS=len(valid_noisy)//BATCH_SIZE # Results in 0
model.fit(
    train_dataset,
    steps_per_epoch=len(train_noisy)//BATCH_SIZE,
    epochs=200,
    validation_data=valid_dataset,
    validation_steps=VALIDATION_STEPS
)

&lt;/denchmark-code&gt;

&lt;denchmark-link:https://nbviewer.jupyter.org/github/vasudev13/No-Pain-No-GANz/blob/master/conv%20autoencoders/src/notebooks/denoising-dirty-documents.ipynb&gt;Complete Notebook&lt;/denchmark-link&gt;

If feasible, can I contribute via a PR if the above issue is valid and can be addressed by not a core contributor?
Thanks a bunch!
	</description>
	<comments>
		<comment id='1' author='vasudev13' date='2020-05-13T12:34:42Z'>
		&lt;denchmark-link:https://github.com/vasudev13&gt;@vasudev13&lt;/denchmark-link&gt;

I have tried in colab with TF version 2.2 .Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/13162b5144c0165282059bf06b3e420d/untitled886.ipynb&gt;here&lt;/denchmark-link&gt;
.Is this the expected behavior? Thanks!
		</comment>
		<comment id='2' author='vasudev13' date='2020-05-13T12:55:56Z'>
		Close enough, in
&lt;denchmark-code&gt;train_noisy,valid_noisy,train_clean,valid_clean=train_test_split(noisy_paths,clean_paths,test_size=0.1,random_state=SEED)

VALIDATION_STEPS=1 # len(valid_noisy)//BATCH_SIZE = 0
&lt;/denchmark-code&gt;

change the following:
VALIDATION_STEPS=len(valid_noisy)//BATCH_SIZE  and print the value, its probably going to be 0.
If fit is called with that argument (i.e. value 0) for parameter validatiton_steps value, it just hangs after first training epoch as opposed to print some message or moving ahead.
Thanks for quick response!
		</comment>
		<comment id='3' author='vasudev13' date='2020-06-27T19:06:06Z'>
		Can you please test with tf-nightly version? Thanks!
		</comment>
		<comment id='4' author='vasudev13' date='2020-07-04T19:19:32Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='vasudev13' date='2020-07-04T21:12:54Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 I tried with nightly and was getting an altogether different error, fit gives error on training itself. However, with 2.2 it does raise an error on validation (training epoch does occur) but not exactly to this issue in the error message.
I apologise for the late response (lockdown difficulties). Should I attach detail error logs?
		</comment>
		<comment id='6' author='vasudev13' date='2020-08-17T21:07:29Z'>
		Yes please attach new error logs. If you can share a colab that will be great.
I created a toy model that uses validation_steps = 0 and happens to execute successfully.
Please take a look at the &lt;denchmark-link:https://colab.research.google.com/gist/ymodak/817034ec377485f4383e822ae9dd50c7/39465.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='7' author='vasudev13' date='2020-08-24T21:25:37Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='8' author='vasudev13' date='2020-08-24T21:55:55Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 , checked with version 2.3, the execution is successful
Thanks for helping out to you and &lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 as well, you can close this issue!
		</comment>
		<comment id='9' author='vasudev13' date='2020-08-24T22:05:41Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39465&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39465&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='vasudev13' date='2020-08-24T22:22:16Z'>
		One peculiar thing, I noticed when changing validation_steps argument from 0 to say 1 (or any non-zero integer) in the following snippet, validation step is still not performed (see pic 1), as well as the vice-versa i.e. when changing from 1 to 0, validation is performed (see pic 2) as opposed to not being performed. This occurs only when rerunning the same code cell in the notebook without restarting.
&lt;denchmark-code&gt;model.fit(
    train_dataset,
    steps_per_epoch=len(train_noisy)//BATCH_SIZE,
    epochs=200,
    validation_data=valid_dataset,
    validation_steps=1
)
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/30664477/91100972-c943f600-e683-11ea-8ffa-b15515874078.PNG&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/30664477/91102044-08734680-e686-11ea-8faf-592ddd7454ab.png&gt;&lt;/denchmark-link&gt;

You can look into this if you get the time. Thanks for your patience and help!
		</comment>
	</comments>
</bug>