<bug id='41014' author='liuyibox' open_date='2020-07-02T05:27:42Z' closed_time='2020-07-07T07:21:37Z'>
	<summary>tf.estimator.predict cannot run consecutively on Colab TPU</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab TPU
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Colab Jupyter Notebook
TensorFlow version (use command below):1-15.2
Python version: 3.6
Bert-tensorflow version: 1.0.1

Describe the current behavior
I don't know if this is a good place to report the tf.estimator.predict API bug. I am trying to use bert-tensorflow to do fine tuning. After the estimator.train, I used tf.estimator.predict to predict the test dataset twice in sequence with 2 checkpoints (both different or same checkpoints). The two predict calls are in 2 separate jupyter cells. For the first predict, it runs ok, the prediction probabilities are returned as expected. For the second predict, it stuck in the logging info "Shutting down InfeedController thread" and not move further. I've tried several method to make the 2nd predict run as the 1st one, but it just not works out. To provide more information, I just paste the log where the 2nd predict stuck:

INFO:tensorflow:  name = bert/encoder/layer_23/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/pooler/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/pooler/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = output_weights:0, shape = (2, 1024)
INFO:tensorflow:  name = output_bias:0, shape = (2,)
INFO:tensorflow:Done calling model_fn.
INFO:tensorflow:TPU job name worker
INFO:tensorflow:Graph was finalized.
INFO:tensorflow:Restoring parameters from gs://sr2pr/liuyi_test_early_stop/early_stop_ckpts/model.ckpt-853
INFO:tensorflow:Running local_init_op.
INFO:tensorflow:Done running local_init_op.
INFO:tensorflow:Init TPU system
INFO:tensorflow:Initialized TPU in 0 seconds
INFO:tensorflow:Starting infeed thread controller.
INFO:tensorflow:Starting outfeed thread controller.
INFO:tensorflow:Initialized dataset iterators in 0 seconds
INFO:tensorflow:Enqueue next (1) batch(es) of data to infeed.
INFO:tensorflow:Dequeue next (1) batch(es) of data from outfeed.
INFO:tensorflow:Outfeed finished for iteration (0, 0)
INFO:tensorflow:Stop infeed thread controller
INFO:tensorflow:Shutting down InfeedController thread.

I do know the estimator.predict returns a iterator/generator, which prevents interleaving calls as indicated in the official tensorflow document. I think my case is not interleaving operation? I don't know if this is caused by colab or the predict API? and any idea to work around this bug?
Currently, I have no way to run predict twice unless I shutdown the Colab, close the browser tab, upload the jupyter notebook, and reinitialize everything and configure everything again.
Any possible discussions that may help are appreciated.
	</description>
	<comments>
		<comment id='1' author='liuyibox' date='2020-07-02T13:31:08Z'>
		&lt;denchmark-link:https://github.com/liuyibox&gt;@liuyibox&lt;/denchmark-link&gt;
,
In order to expedite the trouble-shooting process, could you please provide the complete code to reproduce the issue reported here.
Alternatively you can also share the gist of the Colab notebook you are running. Thanks!
		</comment>
		<comment id='2' author='liuyibox' date='2020-07-02T14:06:58Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;

Thanks for your reply. The main body of calling the predict is as follows. In the test code below, the multiple checkpoints are stored in a list which are traversed in sequence. The problem is that: the first checkpoint can be used to predict smoothly, the second will stuck in "Shutting down InfeedController thread".
&lt;denchmark-code&gt;  if FLAGS.do_test:

    test_examples = processor.get_test_examples(FLAGS.data_dir)
    test_labels, test_text = processor.get_test_labels(FLAGS.data_dir)
    num_actual_test_examples = len(test_examples)
    if FLAGS.use_tpu:
      # TPU requires a fixed batch size for all batches, therefore the number
      # of examples must be a multiple of the batch size, or else examples
      # will get dropped. So we pad with fake examples which are ignored
      # later on.
      while len(test_examples) % FLAGS.predict_batch_size != 0:
        test_examples.append(PaddingInputExample())
    test_file = os.path.join(FLAGS.output_dir, "test.tf_record")
    file_based_convert_examples_to_features(test_examples, label_list,
                                            FLAGS.max_seq_length, tokenizer,
                                            test_file)

    tf.logging.info("***** Running test prediction*****")
    tf.logging.info("  Num examples = %d (%d actual, %d padding)",
                    len(test_examples), num_actual_test_examples,
                    len(test_examples) - num_actual_test_examples)
    tf.logging.info("  Batch size = %d", FLAGS.predict_batch_size)

    test_drop_remainder = True if FLAGS.use_tpu else False
    test_input_fn = file_based_input_fn_builder(
        input_file=test_file,
        seq_length=FLAGS.max_seq_length,
        is_training=False,
        drop_remainder=test_drop_remainder)

    test_epoch_list = []
    test_result_file_list = []  

    print('checkpoints path is designated to be ',FLAGS.output_dir)
    print('num_train_steps: ', FLAGS.total_train_steps)
    print('FLAGS.iterations_per_loop: ', FLAGS.iterations_per_loop)
    ckpts = np.arange(0, FLAGS.total_train_steps, FLAGS.iterations_per_loop).tolist()
    if ckpts[-1] != FLAGS.total_train_steps:
      ckpts.append(FLAGS.total_train_steps) 
    print("checkpoints are: ", ckpts)  
    for ckpt_idx, ckpt in zip(range(len(ckpts)), ckpts):
      
      print('========== This is to test {} =========='.format(os.path.join(FLAGS.output_dir,"model.ckpt-"+str(ckpt))))
      test_ckpt_start = datetime.now()
      result = estimator.predict(input_fn=test_input_fn, checkpoint_path = os.path.join(FLAGS.output_dir,"model.ckpt-"+str(ckpt)))
      test_ckpt_time = datetime.now() - test_ckpt_start
      test_epoch_list.append(test_ckpt_time)

      output_test_file = os.path.join(FLAGS.output_dir, "model.ckpt-"+str(ckpt)+"-test_results.txt")
      test_result_file_list.append(output_test_file)
      with tf.gfile.GFile(output_test_file, "w") as writer:
        writer.write("\t".join(LABEL_NAMES) + "\tPredicted Label\tCorrect Label\tPred Correct\tText\n")
        tf.logging.info("***** Test results *****")
        num_tests = 0
        num_correct = 0
        true_positives = 0
        true_negatives = 0
        false_positives = 0
        false_negatives = 0
        result_counter = 0
        for prediction in result:
          result_counter += 1
          if result_counter &gt;= num_actual_test_examples:
            break
          num_tests += 1
          probabilities = prediction["probabilities"]

          pred = np.argmax(probabilities)
          pred_label = LABEL_NAMES[pred]
          pred = str(pred)  # Note: This string is still numeric, not the label name!
          pred_correct = ""
          if pred == test_labels[result_counter]:
            num_correct += 1
            pred_correct = "1"
            if pred_label == TEST_MEASURE_CLASS:
              true_positives += 1
            else:
              true_negatives += 1
          else:
            pred_correct = "0"
            if pred_label == TEST_MEASURE_CLASS:
              false_positives += 1
            else:
              false_negatives += 1
          
          output_line = "\t".join(
              str(class_probability)
              for class_probability in probabilities)
          output_line += "\t" + pred_label
          output_line += "\t" + LABEL_NAMES[int(test_labels[result_counter])]
          output_line += "\t" + pred_correct
          output_line += "\t" + test_text[result_counter] + "\n"
          writer.write(output_line)
        
        # Precision
        if true_positives + false_positives &gt; 0:
          precision = true_positives / (true_positives + false_positives)
        else:
          precision = 0
        # Recall
        if true_positives + false_negatives &gt; 0:
          recall = true_positives / (true_positives + false_negatives)
        else:
          recall = 0
        # F-score
        if precision + recall &gt; 0:
          fscore = 2 * (precision * recall) / (precision + recall)
        else:
          fscore = 0
        # Balanced Accuracy
        if true_negatives + false_positives &gt; 0:
          true_negative_rate = true_negatives / (true_negatives + false_positives)
          balanced_accuracy = (recall + true_negative_rate) / 2
        else:
          balanced_accuracy = 0

        writer.write("%s = %s\n" % ("Epoch", str(ckpt_idx)))
        writer.write("%s = %s\n" % ("Test Time", str(test_ckpt_time)))
        writer.write("%s = %s\n" % ("Test Count", str(num_tests)))
        writer.write("%s = %s\n" % ("Correct", str(num_correct)))
        writer.write("%s = %s\n" % ("Naive Accuracy", str(num_correct / num_tests)))
        writer.write("%s = %s\n" % ("True Positives", str(true_positives)))
        writer.write("%s = %s\n" % ("True Negatives", str(true_negatives)))
        writer.write("%s = %s\n" % ("False Positives", str(false_positives)))
        writer.write("%s = %s\n" % ("False Negatives", str(false_negatives)))
        writer.write("%s = %s\n" % ("Precision", str(precision)))
        writer.write("%s = %s\n" % ("Recall", str(recall)))
        writer.write("%s = %s\n" % ("F-score", str(fscore)))
        writer.write("%s = %s\n" % ("Balanced Accuracy", str(balanced_accuracy)))

        tf.logging.info("Scored %d tests", num_tests)
        tf.logging.info("Correct: %d", num_correct)
        tf.logging.info("Naive Accuracy: %f", num_correct / num_tests)
        tf.logging.info("True Positives: %d", true_positives)
        tf.logging.info("True Negatives: %d", true_negatives)
        tf.logging.info("False Positives: %d", false_positives)
        tf.logging.info("False Negatives: %d", false_negatives)
        tf.logging.info("Precision: %f", precision)
        tf.logging.info("Recall: %f", recall)
        tf.logging.info("F-score: %f", fscore)
        tf.logging.info("Balanced Accuracy: %f", balanced_accuracy)
&lt;/denchmark-code&gt;

In the estimator.predict, the test_input_fn is defined as the following 2 segments:
&lt;denchmark-code&gt;    test_input_fn = file_based_input_fn_builder(
        input_file=test_file,
        seq_length=FLAGS.max_seq_length,
        is_training=False,
        drop_remainder=test_drop_remainder)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;def file_based_input_fn_builder(input_file, seq_length, is_training,
                                drop_remainder):
  """Creates an `input_fn` closure to be passed to TPUEstimator."""

  name_to_features = {
      "input_ids": tf.FixedLenFeature([seq_length], tf.int64),
      "input_mask": tf.FixedLenFeature([seq_length], tf.int64),
      "segment_ids": tf.FixedLenFeature([seq_length], tf.int64),
      "label_ids": tf.FixedLenFeature([], tf.int64),
      "is_real_example": tf.FixedLenFeature([], tf.int64),
  }

  def _decode_record(record, name_to_features):
    """Decodes a record to a TensorFlow example."""
    example = tf.parse_single_example(record, name_to_features)

    # tf.Example only supports tf.int64, but the TPU only supports tf.int32.
    # So cast all int64 to int32.
    for name in list(example.keys()):
      t = example[name]
      if t.dtype == tf.int64:
        t = tf.to_int32(t)
      example[name] = t

    return example

  def input_fn(params):
    """The actual input function."""
    batch_size = params["batch_size"]

    # For training, we want a lot of parallel reading and shuffling.
    # For eval, we want no shuffling and parallel reading doesn't matter.
    d = tf.data.TFRecordDataset(input_file)
    if is_training:
      d = d.repeat()
      d = d.shuffle(buffer_size=100)

    d = d.apply(
        tf.contrib.data.map_and_batch(
            lambda record: _decode_record(record, name_to_features),
            batch_size=batch_size,
            drop_remainder=drop_remainder))

    return d

  return input_fn
&lt;/denchmark-code&gt;

Outside these definition, here is how I call the predict in another cell:
&lt;denchmark-code&gt;FLAGS.do_train = False
FLAGS.do_eval = False
FLAGS.do_test = True
FLAGS.do_predict = False
FLAGS.do_train_and_eval = False

start_time = datetime.now()
main(start_time)
print("Testing took:", datetime.now() - start_time)
&lt;/denchmark-code&gt;

For your reference, I just pasted the log information for the second predict run:

WARNING:tensorflow:Estimator's model_fn (&lt;function model_fn_builder..model_fn at 0x7fee467ad158&gt;) includes params argument, but params are not passed to Estimator.
INFO:tensorflow:Using config: {'_model_dir': 'gs://sr2pr/liuyi_test_early_stop/early_stop_ckpts', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
cluster_def {
job {
name: "worker"
tasks {
key: 0
value: "10.25.26.154:8470"
}
}
}
isolate_session_state: true
, '_keep_checkpoint_max': 100, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x7fee43408da0&gt;, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': 'grpc://10.25.26.154:8470', '_evaluation_master': 'grpc://10.25.26.154:8470', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=853, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2, experimental_host_call_every_n_steps=1), '_cluster': &lt;tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver.TPUClusterResolver object at 0x7fee434085c0&gt;}
INFO:tensorflow:_TPUContext: eval_on_tpu True
WARNING:tensorflow:Estimator's model_fn (&lt;function model_fn_builder..model_fn at 0x7fee467e4d08&gt;) includes params argument, but params are not passed to Estimator.
INFO:tensorflow:Using config: {'_model_dir': 'gs://sr2pr/liuyi_test_early_stop/early_stop_ckpts', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
cluster_def {
job {
name: "worker"
tasks {
key: 0
value: "10.25.26.154:8470"
}
}
}
isolate_session_state: true
, '_keep_checkpoint_max': 100, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x7fee422077f0&gt;, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': 'grpc://10.25.26.154:8470', '_evaluation_master': 'grpc://10.25.26.154:8470', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=853, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2, experimental_host_call_every_n_steps=1), '_cluster': &lt;tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver.TPUClusterResolver object at 0x7fee434085c0&gt;}
INFO:tensorflow:_TPUContext: eval_on_tpu True
INFO:tensorflow:Writing example 0 of 50272
INFO:tensorflow:*** Example ***
INFO:tensorflow:guid: test-0
INFO:tensorflow:tokens: [CLS] unable to authentic ##ate using ad account in view [SEP]
INFO:tensorflow:input_ids: 101 4039 2000 14469 3686 2478 4748 4070 1999 3193 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow🏷️ 0 (id = 0)
INFO:tensorflow:*** Example ***
INFO:tensorflow:guid: test-1
INFO:tensorflow:tokens: [CLS] unable to upgrade hosts to es ##xi 5 . 0 u ##3 and is getting an error " this operation is not supported on the selected inventory object " [SEP]
INFO:tensorflow:input_ids: 101 4039 2000 12200 6184 2000 9686 9048 1019 1012 1014 1057 2509 1998 2003 2893 2019 7561 1000 2023 3169 2003 2025 3569 2006 1996 3479 12612 4874 1000 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow🏷️ 0 (id = 0)
INFO:tensorflow:*** Example ***
INFO:tensorflow:guid: test-2
INFO:tensorflow:tokens: [CLS] we had 3 es ##xi 5 . 5 hosts disco ##nne ##ct from vc ##enter this morning . the v ##ms were still unaffected and still operational . i used this kb to troubles ##hoot : https : / / kb . v ##m ##ware . com / self ##ser ##vic ##e / micro ##sit ##es / search . do ? language = en _ us &amp; cm ##d = display ##k ##c &amp; external ##id = 100 ##34 ##0 ##9 . everything in the check ##list is good . what solved the issue was either restart ##ing the management agents , or specifically just restart ##ing vp ##xa rec ##onne ##cted the host just fine . i ' m attach ##ing the logs for all [SEP]
INFO:tensorflow:input_ids: 101 2057 2018 1017 9686 9048 1019 1012 1019 6184 12532 10087 6593 2013 18315 29110 2023 2851 1012 1996 1058 5244 2020 2145 24720 1998 2145 6515 1012 1045 2109 2023 21677 2000 13460 23416 1024 16770 1024 1013 1013 21677 1012 1058 2213 8059 1012 4012 1013 2969 8043 7903 2063 1013 12702 28032 2229 1013 3945 1012 2079 1029 2653 1027 4372 1035 2149 1004 4642 2094 1027 4653 2243 2278 1004 6327 3593 1027 2531 22022 2692 2683 1012 2673 1999 1996 4638 9863 2003 2204 1012 2054 13332 1996 3277 2001 2593 23818 2075 1996 2968 6074 1010 2030 4919 2074 23818 2075 21210 18684 28667 18256 10985 1996 3677 2074 2986 1012 1045 1005 1049 22476 2075 1996 15664 2005 2035 102
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow🏷️ 0 (id = 0)
INFO:tensorflow:*** Example ***
INFO:tensorflow:guid: test-3
INFO:tensorflow:tokens: [CLS] v ##m lost connection again during backup window . last sr i opened was 1750 ##38 ##0 ##6 ##90 ##7 and was told the issue was the v ##m tools . [SEP]
INFO:tensorflow:input_ids: 101 1058 2213 2439 4434 2153 2076 10200 3332 1012 2197 5034 1045 2441 2001 18171 22025 2692 2575 21057 2581 1998 2001 2409 1996 3277 2001 1996 1058 2213 5906 1012 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow🏷️ 0 (id = 0)
INFO:tensorflow:*** Example ***
INFO:tensorflow:guid: test-4
INFO:tensorflow:tokens: [CLS] https : / / its ##m . vo ##da ##fo ##ne . com / ars ##ys / / ser ##v ##let / view ##forms ##er ##v ##let ? form = nt ##e % 3a ##not ##ifier &amp; server = its ##m - pro ##d &amp; e ##id = nt ##s ##00 ##1 ##9 ##32 ##48 ##20 ##8 service type : user service request service : vt ##n - secure mobility manager - pro ##d priority : 3 - medium summary : creation of ta ##c - case regarding missing sync between apple de ##p and air ##watch [SEP]
INFO:tensorflow:input_ids: 101 16770 1024 1013 1013 2049 2213 1012 29536 2850 14876 2638 1012 4012 1013 29393 7274 1013 1013 14262 2615 7485 1013 3193 22694 2121 2615 7485 1029 2433 1027 23961 2063 1003 23842 17048 18095 1004 8241 1027 2049 2213 1011 4013 2094 1004 1041 3593 1027 23961 2015 8889 24096 2683 16703 18139 11387 2620 2326 2828 1024 5310 2326 5227 2326 1024 28879 2078 1011 5851 12969 3208 1011 4013 2094 9470 1024 1017 1011 5396 12654 1024 4325 1997 11937 2278 1011 2553 4953 4394 26351 2090 6207 2139 2361 1998 2250 18866 102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:input_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow:segment_ids: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
INFO:tensorflow🏷️ 0 (id = 0)
INFO:tensorflow:Writing example 10000 of 50272
INFO:tensorflow:Writing example 20000 of 50272
INFO:tensorflow:Writing example 30000 of 50272
INFO:tensorflow:Writing example 40000 of 50272
INFO:tensorflow:Writing example 50000 of 50272
INFO:tensorflow:***** Running test prediction*****
INFO:tensorflow:  Num examples = 50272 (50249 actual, 23 padding)
INFO:tensorflow:  Batch size = 32
checkpoints path is designated to be  gs://sr2pr/liuyi_test_early_stop/early_stop_ckpts
num_train_steps:  2559
FLAGS.iterations_per_loop:  853
checkpoints are:  [0, 853, 1706, 2559]
========== This is to test gs://sr2pr/liuyi_test_early_stop/early_stop_ckpts/model.ckpt-853 ==========
INFO:tensorflow:***** Test results *****
INFO:tensorflow:Querying Tensorflow master (grpc://10.25.26.154:8470) for TPU system metadata.
INFO:tensorflow:Found TPU system:
INFO:tensorflow:*** Num TPU Cores: 8
INFO:tensorflow:*** Num TPU Workers: 1
INFO:tensorflow:*** Num TPU Cores Per Worker: 8
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:CPU:0, CPU, -1, 8276302537946597306)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:0, TPU, 17179869184, 9000101427539453289)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:1, TPU, 17179869184, 8518970402231929580)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:2, TPU, 17179869184, 9502851374819066520)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:3, TPU, 17179869184, 10839553371045225842)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:4, TPU, 17179869184, 13839547643692205269)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:5, TPU, 17179869184, 3498128454668765351)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:6, TPU, 17179869184, 15451249720587501361)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:7, TPU, 17179869184, 17988533590690348132)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU_SYSTEM:0, TPU_SYSTEM, 8589934592, 7563947479981978740)
INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:XLA_CPU:0, XLA_CPU, 17179869184, 2712428284589480861)
INFO:tensorflow:Calling model_fn.
WARNING:tensorflow:Entity &lt;function file_based_input_fn_builder..input_fn.. at 0x7fee44d598c8&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Str'
WARNING: Entity &lt;function file_based_input_fn_builder..input_fn.. at 0x7fee44d598c8&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Str'
WARNING:tensorflow:Entity &lt;function _InputsWithStoppingSignals.insert_stopping_signal.._map_fn at 0x7fee44d599d8&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Num'
WARNING: Entity &lt;function _InputsWithStoppingSignals.insert_stopping_signal.._map_fn at 0x7fee44d599d8&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity &lt;function _InputsWithStoppingSignals.insert_stopping_signal.._map_fn at 0x7fee452502f0&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Num'
WARNING: Entity &lt;function _InputsWithStoppingSignals.insert_stopping_signal.._map_fn at 0x7fee452502f0&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity &lt;function _InputsWithStoppingSignals.init.._set_mask at 0x7fee45395840&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Num'
WARNING: Entity &lt;function _InputsWithStoppingSignals.init.._set_mask at 0x7fee45395840&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Num'
INFO:tensorflow:*** Features ***
INFO:tensorflow:  name = input_ids, shape = (4, 128)
INFO:tensorflow:  name = input_mask, shape = (4, 128)
INFO:tensorflow:  name = is_real_example, shape = (4,)
INFO:tensorflow:  name = label_ids, shape = (4,)
INFO:tensorflow:  name = segment_ids, shape = (4, 128)
INFO:tensorflow:**** Trainable Variables ****
INFO:tensorflow:  name = bert/embeddings/word_embeddings:0, shape = (30522, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/embeddings/token_type_embeddings:0, shape = (2, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/embeddings/position_embeddings:0, shape = (512, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/embeddings/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/embeddings/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_12/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_13/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_14/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_15/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_16/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_17/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_18/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_19/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_20/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_21/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_22/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/self/query/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/self/query/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/self/key/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/self/key/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/self/value/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/self/value/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/output/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/attention/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/intermediate/dense/kernel:0, shape = (1024, 4096), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/intermediate/dense/bias:0, shape = (4096,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/output/dense/kernel:0, shape = (4096, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/output/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/output/LayerNorm/beta:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/encoder/layer_23/output/LayerNorm/gamma:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/pooler/dense/kernel:0, shape = (1024, 1024), INIT_FROM_CKPT
INFO:tensorflow:  name = bert/pooler/dense/bias:0, shape = (1024,), INIT_FROM_CKPT
INFO:tensorflow:  name = output_weights:0, shape = (2, 1024)
INFO:tensorflow:  name = output_bias:0, shape = (2,)
INFO:tensorflow:Done calling model_fn.
INFO:tensorflow:TPU job name worker
INFO:tensorflow:Graph was finalized.
INFO:tensorflow:Restoring parameters from gs://sr2pr/liuyi_test_early_stop/early_stop_ckpts/model.ckpt-853
INFO:tensorflow:Running local_init_op.
INFO:tensorflow:Done running local_init_op.
INFO:tensorflow:Init TPU system
INFO:tensorflow:Initialized TPU in 0 seconds
INFO:tensorflow:Starting infeed thread controller.
INFO:tensorflow:Starting outfeed thread controller.
INFO:tensorflow:Initialized dataset iterators in 0 seconds
INFO:tensorflow:Enqueue next (1) batch(es) of data to infeed.
INFO:tensorflow:Dequeue next (1) batch(es) of data from outfeed.
INFO:tensorflow:Outfeed finished for iteration (0, 0)
INFO:tensorflow:Stop infeed thread controller
INFO:tensorflow:Shutting down InfeedController thread.

I hope this helps in explanation my problem.
		</comment>
		<comment id='3' author='liuyibox' date='2020-07-06T21:08:22Z'>
		Any assignee could take this issue? If necessary, I could paste the whole repo that produces the error.
		</comment>
		<comment id='4' author='liuyibox' date='2020-07-07T07:21:37Z'>
		It's confirmed when we want to iterate over the result returned from TPUEstimator.predict, we cannot use the enumerate. enumerate does not raise the StopIteration exception when it iterates over the generator result. However, if I understood the estimator source code correctly, TPUEstimator.predict needs this exception to provide something called Signal to TPU worker and shut down the TPU worker. In this way, the TPUEstimator can reinitialize from a new checkpoint when it is called with another checkpoint directory path.
By applying the normal next(result) instead of enumerate(result), this issue is resolved. So this issue can be closed.
		</comment>
		<comment id='5' author='liuyibox' date='2020-07-07T07:21:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41014&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41014&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>