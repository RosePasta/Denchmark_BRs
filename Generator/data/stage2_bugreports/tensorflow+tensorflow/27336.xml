<bug id='27336' author='lkuich' open_date='2019-03-31T06:43:34Z' closed_time='2019-04-18T17:19:10Z'>
	<summary>Add examples of loading model that has been saved with save_keras_model</summary>
	<description>
Please make sure that this is a documentation issue. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:doc_template
System information

TensorFlow version: 1.13
Doc Link: https://www.tensorflow.org/tutorials/images/hub_with_keras

Describe the documentation issue
The above example provides no example of loading the model after it's saved. I'm used to using the "old style" of freezing, optimizing (optimize_for_inference_lib.optimize_for_inference), and saving models with:
tf.train.write_graph(output_graph_def, output_dir, 'model.pb', as_text=False)
Which gives me a graph: model.pb. I run predictions on this graph locally on my mobile applications with full Tensorflow (in Unity, so not using TF-Lite).
In my local prediction script, I load the graph like this:
def load_graph(model_file):
  graph = tf.Graph()
  graph_def = tf.GraphDef()

  with open(model_file, "rb") as f:
    graph_def.ParseFromString(f.read())
  with graph.as_default():
    tf.import_graph_def(graph_def)
  return graph
Then grab the graph input and output ops and run a prediction session. This works pretty well.
However, this new example uses tf.contrib.saved_model.save_keras_model to export the model, which I would love to use because it exports all kinds of useful information (which I'd like to use in conjunction with TF Serving for certain applications), and it looks to be making it into TF 2.0 core.
With save_keras_model, I end up with:
assets  labels.csv  saved_model.pb  variables
When trying to use my old graph loading script with this newly generated model with save_keras_model, I get an error like this:
...
    graph_def.ParseFromString(f.read())
google.protobuf.message.DecodeError: Error parsing message
This had me puzzled, as I expected this .pb graph generated with the new API to work the same as the one I generated with tf.train.write_graph. Browsing through their contents, they look the same, but the newer API's model is smaller in file size. Which makes me wonder if it's missing something.
I found an alternative method to load it as a graph anyways, but I ran into issues down the road with running it's ops, so I'm not sure I'm approaching this correctly by loading it as a graph, or if there's a "new, Keras way" of loading a model and running predictions. Maybe I'm too far in the weeds with trying to load this model as a graph and run it's ops, I'd expect there's a higher level API to do this.
So I have a few questions:

Is the exported saved_model.pb frozen?
Is it optimized? If not, I can convert the model I have to a graph, then back to a model for something like save_keras_model?

Ultimately, can an example be added to this tutorial that demonstrates how to load a saved model?
I wrote our initial codebase using TF 1.7 a little while back and I haven't changed much since then, but the API is changing a lot and I want to take full advantage of the advancements. Also I understand if this issue should be moved, I assumed this was appropriate since there was no documentation demonstrating loading a saved model with the new API.
Thank you!
We welcome contributions by users. Will you be able to update submit a PR (use the doc style guide) to fix the doc Issue?
Yes
	</description>
	<comments>
		<comment id='1' author='lkuich' date='2019-03-31T07:39:58Z'>
		you want an example describing the loading saved models using save_keras_model to be added in its description.
		</comment>
		<comment id='2' author='lkuich' date='2019-03-31T07:46:55Z'>
		Thanks, I've added that to the footer of my issue and amended my title.
I just looked at the Codelab in the example, and it looks to use: &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/models/Model&gt;load_from_saved_model&lt;/denchmark-link&gt;
 which is listed as experimental, and I can't seem to access any of it's methods.
		</comment>
		<comment id='3' author='lkuich' date='2019-04-01T13:05:43Z'>
		&lt;denchmark-link:https://github.com/lkuich&gt;@lkuich&lt;/denchmark-link&gt;
 This question is better asked on &lt;denchmark-link:http://stackoverflow.com/questions/tagged/tensorflow&gt;StackOverflow&lt;/denchmark-link&gt;
 since it is not a bug or feature request. There is also a larger community that reads questions there.If you think we've misinterpreted a bug, please comment again with a clear explanation, as well as all of the information requested in the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;issue template&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='lkuich' date='2019-04-03T18:50:11Z'>
		&lt;denchmark-link:https://github.com/lkuich&gt;@lkuich&lt;/denchmark-link&gt;
 Could you please take a look at this &lt;denchmark-link:https://www.tensorflow.org/tutorials/keras/save_and_restore_models&gt;tutorial&lt;/denchmark-link&gt;
 ? Also, check under tutorials tab, there several tutorials that might be helpful. Please let me know what you think. Thanks!
		</comment>
		<comment id='5' author='lkuich' date='2019-04-18T17:19:10Z'>
		Closing due to lack of recent activity. Please update the issue when new information becomes available, and we will open a new issue. Thanks!
		</comment>
	</comments>
</bug>