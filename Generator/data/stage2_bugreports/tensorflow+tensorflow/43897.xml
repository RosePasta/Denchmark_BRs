<bug id='43897' author='iandreariley' open_date='2020-10-08T21:16:10Z' closed_time='2020-10-12T22:59:22Z'>
	<summary>Custom Op Output Shape is Unknown in TF 1.15</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): SLES 12.2
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.15.3
Python version: 3.5.2
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source): g++ 4.8 (for custom op)
CUDA/cuDNN version: 10.0 / 7.6
GPU model and memory: Tesla P100 / 12198MiB

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
Custom Op compiled against TF 1.15 has unknown output shape (&gt;&gt;&gt;print(repr(t.shape))  # TensorShape(None)) in following conditions:

Input tensor has a known shape.
Custom Op ShapeFn has been implemented to have the same output shape as input shape.

In TF 1.11, the output shape is identical to the input shape as expected.
Describe the expected behavior
Custom Op output shape should be identical to input shape (&gt;&gt;&gt;print(repr(t.shape))  #TensorShape([6]))
Standalone code to reproduce the issue
Based on the "Zero Out" example from &lt;denchmark-link:https://www.tensorflow.org/guide/create_op&gt;create an op&lt;/denchmark-link&gt;
. The following should get it up and running:

copy all files into the same directory
sh build.sh
python zero_out_shape_test.py

In TF 1.11 as_list will work and shape will be TensorShape([6]). In TF 1.15 as_list will fail (logs below) and shape will be TensorShape(None).
zero_out.cc
#include "tensorflow/core/framework/op.h"
#include "tensorflow/core/framework/shape_inference.h"
#include "tensorflow/core/framework/op_kernel.h"

using namespace tensorflow;

REGISTER_OP("ZeroOut")
    .Input("to_zero: int32")
    .Output("zeroed: int32")
    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {
      c-&gt;set_output(0, c-&gt;input(0));
      return Status::OK();
    });

class ZeroOutOp : public OpKernel {
 public:
  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}

  void Compute(OpKernelContext* context) override {
    // Grab the input tensor
    const Tensor&amp; input_tensor = context-&gt;input(0);
    auto input = input_tensor.flat&lt;int32&gt;();

    // Create an output tensor
    Tensor* output_tensor = NULL;
    OP_REQUIRES_OK(context, context-&gt;allocate_output(0, input_tensor.shape(),
                                                     &amp;output_tensor));
    auto output_flat = output_tensor-&gt;flat&lt;int32&gt;();

    // Set all but the first element of the output tensor to 0.
    const int N = input.size();
    for (int i = 1; i &lt; N; i++) {
      output_flat(i) = 0;
    }

    // Preserve the first input value if possible.
    if (N &gt; 0) output_flat(0) = input(0);
  }
};

REGISTER_KERNEL_BUILDER(Name("ZeroOut").Device(DEVICE_CPU), ZeroOutOp);
build.sh
TF_CFLAGS=( $(python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_compile_flags()))') )
TF_LFLAGS=( $(python -c 'import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()))') )
g++ -std=c++11 -shared zero_out.cc -o zero_out.so -fPIC ${TF_CFLAGS[@]} ${TF_LFLAGS[@]} -O2
zero_out_shape_test.py
import tensorflow as tf

_input = tf.constant([1, 2, 3, 4, 5, 6])
print('input shape:', _input.shape.as_list())

zero_out_module = tf.load_op_library('./zero_out.so')

zo_op = zero_out_module.zero_out(_input)
print(repr(zo_op.get_shape()))
print(zo_op.get_shape())
print(zo_op.get_shape().as_list())
Other info / logs Include any logs or source code that would be helpful to
TF 1.15 logs
&lt;denchmark-code&gt;input shape: [6]
TensorShape(None)
&lt;unknown&gt;
Traceback (most recent call last):
  File "zero_out_shape_test.py", line 11, in &lt;module&gt;
    print(zo_op.get_shape().as_list())
  File "******/python3.5/site-packages/tensorflow_core/python/framework/tensor_shape.py", line 1171, in as_list
    raise ValueError("as_list() is not defined on an unknown TensorShape.")
ValueError: as_list() is not defined on an unknown TensorShape.
&lt;/denchmark-code&gt;

TF 1.11 logs
&lt;denchmark-code&gt;input shape: [6]
TensorShape([Dimension(6)])
(6,)
[6]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='iandreariley' date='2020-10-09T12:09:20Z'>
		&lt;denchmark-link:https://github.com/iandreariley&gt;@iandreariley&lt;/denchmark-link&gt;
,
TensorFlow 1.x is not actively supported. Could you please update TensorFlow to v2.3 and check if you are facing the same issue? Thanks!
		</comment>
		<comment id='2' author='iandreariley' date='2020-10-12T22:59:22Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 I'm unable to reproduce in v2.3. Thanks.
		</comment>
		<comment id='3' author='iandreariley' date='2020-10-12T22:59:23Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43897&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43897&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>