<bug id='28598' author='decewei' open_date='2019-05-10T14:02:23Z' closed_time='2020-03-12T15:37:28Z'>
	<summary>Tensorflow 2.0 rejection resample not producing the proper target distribution</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution: Linux Ubuntu 16.04
TensorFlow installed from (source or binary): from binary pip3
TensorFlow version (use command below): 2.0-alpha
Python version: 3.5.2
CUDA/cuDNN version: 10.0
GPU model and memory: GTX Titan V 12GB

Issues
I am trying to test rejection sampling with the following code.
This is the result I got:
&lt;denchmark-code&gt;target_dist [0.5, 0.5] 
initial distribution [0.8333333333333334, 0.16666666666666666]
result counts [1500, 600] 
final dist 0.7142857142857143 0.2857142857142857
&lt;/denchmark-code&gt;

Expectation
The final distribution does not reflect the target distribution I set. I feel like this is a bug in the original algorithm because I can't seem to find what I did wrong in my code as shown below:
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
# everything is based on tensorflow 2.0
tf.random.set_seed(2342)


def map2label(sample):
    return tf.cast(tf.math.equal(sample, 2), tf.int32)

np_data = np.array([0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2])
target_dist = [0.5, 0.5]
init_dist = [(np_data.shape[0]-3)/np_data.shape[0], 3/np_data.shape[0]]

dataset = tf.data.Dataset.from_tensor_slices(np_data)
rej = tf.data.experimental.rejection_resample(map2label, target_dist, init_dist, 2342)   # set seed explicitly
dataset = dataset.apply(rej)

bucket_counts = [0, 0]
for i in range(100):
    for data in dataset:
        class_id, data_content = data
        bucket_counts[class_id.numpy()] += 1

print("This is your target_dist", target_dist, "This is your initial distribution", init_dist)
print("This is your result counts", bucket_counts,
      "This is your final dist", bucket_counts[0] / np.sum(bucket_counts), bucket_counts[1] / np.sum(bucket_counts))

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='decewei' date='2019-05-13T13:01:40Z'>
		@celinew1221 It looks like you haven't used a template to create this issue. Please resubmit your issue using a template from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;here&lt;/denchmark-link&gt;
. We ask users to use the template because it reduces overall time to resolve a new issue by avoiding extra communication to get to the root of the issue. We will close this issue in lieu of the new one you will create from the template. Thank you for your cooperation.
		</comment>
		<comment id='2' author='decewei' date='2019-05-13T13:27:10Z'>
		Sure. Can I just edit this post? Looks like I am missing some system info. Done. Please read edited post.
		</comment>
		<comment id='3' author='decewei' date='2019-05-14T05:53:04Z'>
		@celinew1221 Able to reproduce the issue with the provided code. In the template it is mentioned that it is not a custom written code, can you provide the link for this, to investigate further.
This is your target_dist [0.5, 0.5] This is your initial distribution [0.8333333333333334, 0.16666666666666666]
This is your result counts [1500, 600] This is your final dist 0.7142857142857143 0.2857142857142857
		</comment>
		<comment id='4' author='decewei' date='2019-05-14T13:11:00Z'>
		Sorry, I meant that I didn't create a custom made rejection_resample function. Everything else is what I wrote. I'll edit that.
		</comment>
		<comment id='5' author='decewei' date='2019-12-19T20:39:52Z'>
		Hi,
I had a similar issue. Initially, I was using shuffle and repeat separately. This caused the rejection resample to produce incorrect distribution.
Code
            self.data = self.data.shuffle(buffer_size=len(self.images)*2, seed= 1)
            self.data = self.data.repeat(count = 1)
            target_dist=[1.0/self.args.num_classes for cc in range(self.args.num_classes)]
            rej = tf.data.experimental.rejection_resample(
                          class_func=lambda _,__,___, y,____,_____:y,
                          initial_dist=self.class_weight.astype(np.float32),
                          target_dist=target_dist)
            self.data = self.data.apply(rej).map(lambda _,b:(b))
The incorrect result is provided below:
&lt;denchmark-code&gt;With seperate shuffle and repeat
[0 0 3 3 3 0 1 0 3 0 3 0 0 0 0 0]
&lt;/denchmark-code&gt;

However, when I replaced the shuffle and repeat using the function given below, it works as expected.
self.data = self.data.apply(tf.data.experimental.shuffle_and_repeat(buffer_size=len(self.images)*2,count=1))
Result with correct distribution is given below:
&lt;denchmark-code&gt;With combined shuffle and repeat
[3 1 3 1 3 3 0 1 3 0 1 4 2 4 3 0]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='decewei' date='2020-03-12T09:40:28Z'>
		Issue is replicating with ,
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/0501e4610fd758d4ba6e72a95d35604b/untitled443.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='7' author='decewei' date='2020-03-12T15:37:28Z'>
		This issue should be fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f313fdce45d4933938a89980f6ca9bb2c8cbd27a&gt;f313fdc&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='decewei' date='2020-03-12T15:37:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28598&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28598&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='decewei' date='2020-04-28T16:42:12Z'>
		Well, I'm stil able to reproduce the issue by running the gist &lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 provided using 2.2.0-rc3, and I'm also having a hard time getting it to properly resample using my own training scripts (which I don't think is important to provide since even for a simple script from that gist - it does not work).
@celinew1221 - this Issue should probably be reopened?
		</comment>
		<comment id='10' author='decewei' date='2020-07-17T12:14:37Z'>
		I still have this issue with my own data (TensorFlow 2.2) and I can reproduce the gist that is provided above even by version 2.4.0-dev20200717! it seems that the problem still exists.
I think the issue needs to be reopened. &lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>