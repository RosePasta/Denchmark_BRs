<bug id='32548' author='alon1samuel' open_date='2019-09-16T06:32:05Z' closed_time='2019-11-05T13:49:54Z'>
	<summary>tensorflow 2rc1 Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): - Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2rc1
Python version: 3.6.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.1
GPU model and memory: GeForce RTX 2070 - 8GRAM

Describe the current behavior
My program crashes when I try to execute it.
Describe the expected behavior
I want to fit my model to the dataset.
Code to reproduce the issue
&lt;denchmark-code&gt;from __future__ import absolute_import, division, print_function, unicode_literals

import numpy as np
import tensorflow as tf

DATA_URL = 'https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz'

path = tf.keras.utils.get_file('mnist.npz', DATA_URL)
with np.load(path) as data:
  train_examples = data['x_train']
  train_labels = data['y_train']
  test_examples = data['x_test']
  test_labels = data['y_test']


train_examples = train_examples.reshape((-1, 28, 28, 1))
train_dataset = tf.data.Dataset.from_tensor_slices((train_examples, train_labels))
test_dataset = tf.data.Dataset.from_tensor_slices((test_examples, test_labels))
BATCH_SIZE = 64
SHUFFLE_BUFFER_SIZE = 100

train_dataset = train_dataset.shuffle(SHUFFLE_BUFFER_SIZE).batch(BATCH_SIZE)

model = tf.keras.Sequential()
model.add(tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))
model.add(tf.keras.layers.MaxPooling2D((2, 2)))
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation='relu'))
model.add(tf.keras.layers.Dense(10, activation='softmax'))


model.compile(optimizer=tf.keras.optimizers.RMSprop(),
                loss=tf.keras.losses.SparseCategoricalCrossentropy(),
                metrics=[tf.keras.metrics.SparseCategoricalAccuracy()])

model.fit(train_dataset, epochs=10)
&lt;/denchmark-code&gt;

Provide a reproducible test case that is the bare minimum necessary to generate the problem.
Other info / logs
I've tried to do use these options which didn't help:
&lt;denchmark-code&gt;# 1st option
physical_devices = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(physical_devices[0], True)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;# 2nd option
config = tf.compat.v1.ConfigProto()
config.gpu_options.allow_growth = True
sess = tf.compat.v1.Session(config=config)
&lt;/denchmark-code&gt;

I would be grateful for help
	</description>
	<comments>
		<comment id='1' author='alon1samuel' date='2019-09-16T09:50:25Z'>
		You should add something like that
&lt;denchmark-code&gt;config = tf.ConfigProto()
config.gpu_options.allow_growth = True
tf.keras.backend.set_session(tf.Session(config=config))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='alon1samuel' date='2019-09-16T11:21:53Z'>
		
You should add something like that
config = tf.ConfigProto()
config.gpu_options.allow_growth = True
tf.keras.backend.set_session(tf.Session(config=config))


Hi,
I tried it but I get an error of -
Traceback (most recent call last): File "/media/alon/hdd/try1/tf2_example_load_numpy.py", line 15, in &lt;module&gt; tf.keras.backend.set_session(tf.compat.v1.Session(config=config)) AttributeError: module 'tensorflow_core.keras.backend' has no attribute 'set_session'
Are you sure it works on tf 2?
		</comment>
		<comment id='3' author='alon1samuel' date='2019-09-17T05:52:29Z'>
		&lt;denchmark-link:https://github.com/alon1samuel&gt;@alon1samuel&lt;/denchmark-link&gt;
, I tried on colab it executed as expected. Please take a look at colab &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/44b8bf34a49d3bf06307449a978053ca/untitled152.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='alon1samuel' date='2019-09-17T09:47:12Z'>
		
@alon1samuel, I tried on colab it executed as expected. Please take a look at colab gist. Thanks!

Hi,
Thanks for the response and the idea on how to run this.
I'm afraid my purpose was to run this algorithm locally on my computer.
Is there a way to add or change code lines in order for the algorithm to run locally?
Or would you say that in tf2 there's no way for that, currently?
Regards,
		</comment>
		<comment id='5' author='alon1samuel' date='2019-09-17T10:12:15Z'>
		Have you checked the warnings preceding that error?
I'm having the same issue after upgrading TF2 to the RC (release candidate) version. In my case it seems there is a mismatch between installed and compiled version of CuDNN (7.4.1 vs 7.6), which I'm trying to solve at the moment (without success so far)
		</comment>
		<comment id='6' author='alon1samuel' date='2019-09-17T13:02:37Z'>
		I'm getting the same error running the RC version in AWS AMI, so this is not just my environment. According to the &lt;denchmark-link:https://www.tensorflow.org/install/gpu&gt;TF2 documentation&lt;/denchmark-link&gt;
, it should be ok with CuDNN 7.4, right?
		</comment>
		<comment id='7' author='alon1samuel' date='2019-09-18T09:57:17Z'>
		
Have you checked the warnings preceding that error?
I'm having the same issue after upgrading TF2 to the RC (release candidate) version. In my case it seems there is a mismatch between installed and compiled version of CuDNN (7.4.1 vs 7.6), which I'm trying to solve at the moment (without success so far)

I'm not getting warnings when I'm running this code...
Maybe I can check some other stuff?
		</comment>
		<comment id='8' author='alon1samuel' date='2019-10-28T09:19:20Z'>
		Is there news regarding the bug? &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='alon1samuel' date='2019-10-28T09:19:53Z'>
		It happens to me also in version 2.0.0 (in the official release)
		</comment>
		<comment id='10' author='alon1samuel' date='2019-10-31T17:21:46Z'>
		&lt;denchmark-link:https://github.com/alon1samuel&gt;@alon1samuel&lt;/denchmark-link&gt;
 I tested it on colab and I don't see any error. May be this is more related to GPU drivers. Can you check a simple code that runs on GPU or just &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/test/is_gpu_available&gt;tf.test.is_gpu_available&lt;/denchmark-link&gt;
? I will check it later tomorrow on a GPU at home. Thanks!
		</comment>
		<comment id='11' author='alon1samuel' date='2019-11-02T04:32:55Z'>
		Hello. My system info is tf.__version__=2.0.0, cuda.version=10.0.130, cuDNN.version=7.6.4. And when I use tf.keras.layers.Conv2D, it shows the error "Failed to get convolution algorithm. This is probably because cuDNN failed to initialize.", howerver, it can use tf.keras.layers.Dense to train model without creating any problems.
My solution is
physical_devices = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(physical_devices[0], True) 
Then it will be good to train with Conv2D.
I want to know why this helps. And I know these instructions are to make GPU apply memory when it need.
Thanks a lot.
		</comment>
		<comment id='12' author='alon1samuel' date='2019-11-03T09:17:08Z'>
		
Hello. My system info is tf.__version__=2.0.0, cuda.version=10.0.130, cuDNN.version=7.6.4. And when I use tf.keras.layers.Conv2D, it shows the error "Failed to get convolution algorithm. This is probably because cuDNN failed to initialize.", howerver, it can use tf.keras.layers.Dense to train model without creating any problems.
My solution is
physical_devices = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(physical_devices[0], True) 
Then it will be good to train with Conv2D.
I want to know why this helps. And I know these instructions are to make GPU apply memory when it need.
Thanks a lot.

Thanks for this answer, it helped me know some more about the problem.
It still doesn't work. but now it also says that my CUDNN-7.4.2 and source was compiled with 7.6.0.
I've updated my cudnn to 7.6.4 and now it works!!! :) :) :) üëç üëç üíØ
Here is the error that was issued for if someone wants to know:
2019-11-03 09:20:32.326324: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
2019-11-03 09:20:32.326347: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
2019-11-03 09:20:32.326366: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
2019-11-03 09:20:32.326385: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
2019-11-03 09:20:32.326403: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
2019-11-03 09:20:32.326421: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
2019-11-03 09:20:32.326441: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2019-11-03 09:20:32.328514: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2019-11-03 09:20:32.338509: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
2019-11-03 09:20:32.340039: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-11-03 09:20:32.340055: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0
2019-11-03 09:20:32.340062: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N
2019-11-03 09:20:32.346288: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6761 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2070, pci bus id: 0000:17:00.0, compute capability: 7.5)
Epoch 1/10
2019-11-03 09:20:45.674047: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
2019-11-03 09:20:46.299255: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2019-11-03 09:20:48.026792: E tensorflow/stream_executor/cuda/cuda_dnn.cc:319] Loaded runtime CuDNN library: 7.4.2 but source was compiled with: 7.6.0.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration.
2019-11-03 09:20:48.028412: E tensorflow/stream_executor/cuda/cuda_dnn.cc:319] Loaded runtime CuDNN library: 7.4.2 but source was compiled with: 7.6.0.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration.
2019-11-03 09:20:48.029369: W tensorflow/core/common_runtime/base_collective_executor.cc:216] BaseCollectiveExecutor::StartAbort Unknown: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
[[{{node sequential/conv2d/Conv2D}}]]
		</comment>
		<comment id='13' author='alon1samuel' date='2019-11-04T17:07:37Z'>
		&lt;denchmark-link:https://github.com/alon1samuel&gt;@alon1samuel&lt;/denchmark-link&gt;
 Please close the issue if it was already resolved for you. If you have any more concerns, please let us know. Thanks!
		</comment>
		<comment id='14' author='alon1samuel' date='2019-11-05T13:49:57Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32548&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32548&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>