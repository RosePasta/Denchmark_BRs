<bug id='42286' author='dansitu' open_date='2020-08-12T21:44:00Z' closed_time='2020-08-27T19:33:56Z'>
	<summary>In TF2.3 Reshape is not converted correctly</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): OSX
TensorFlow installed from (source or binary): pip
TensorFlow version (or github SHA if from source): 2.3.0

Command used to run the converter or code if youâ€™re using the Python API
If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;converter = tf.lite.TFLiteConverter.from_saved_model(saved_model_dir)
tflite_model = converter.convert()
&lt;/denchmark-code&gt;

Also, please include a link to the saved model or GraphDef
Attached to issue
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/5065959/saved_model.zip&gt;saved_model.zip&lt;/denchmark-link&gt;

Failure details
If the conversion is successful, but the generated model is wrong,
state what is wrong:
When converting a reshape, the resulting model has extra ops. Here's the expected output, as produced with converter.experimental_new_converter = False:
&lt;denchmark-link:https://user-images.githubusercontent.com/379235/90071187-f8349200-dca9-11ea-882f-1ed354fbe36a.png&gt;&lt;/denchmark-link&gt;

And here's the output with the new converter, note the extra ops before the reshape:
&lt;denchmark-link:https://user-images.githubusercontent.com/379235/90071275-1f8b5f00-dcaa-11ea-90e6-0ee502e148c6.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='dansitu' date='2020-08-13T10:23:03Z'>
		&lt;denchmark-link:https://github.com/dansitu&gt;@dansitu&lt;/denchmark-link&gt;

I am unable to open the file shared, can you please share a colab gist with the error faced.
		</comment>
		<comment id='2' author='dansitu' date='2020-08-13T19:00:42Z'>
		I've checked the attached file and it works. It's extremely simple to reproduce; just extract the .zip file and do this:
&lt;denchmark-code&gt;import tensorflow as tf
converter = tf.lite.TFLiteConverter.from_saved_model(saved_model_dir)
tflite_model = converter.convert()
&lt;/denchmark-code&gt;

Then save and inspect the tflite_model.
		</comment>
		<comment id='3' author='dansitu' date='2020-08-20T07:38:18Z'>
		&lt;denchmark-link:https://github.com/dansitu&gt;@dansitu&lt;/denchmark-link&gt;

I ran your code as mentioned above on tf-nightly and did not face any error, please find &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/2a93aacc1403d6561356aca9fe072f1f/untitled377.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='dansitu' date='2020-08-20T23:28:40Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 The code executes, but it produces an incorrect output.
I've created a gist that demonstrates the issue:
&lt;denchmark-link:https://colab.research.google.com/gist/dansitu/fdf90b82ed194d592716f777cf92e7dc/untitled377.ipynb&gt;https://colab.research.google.com/gist/dansitu/fdf90b82ed194d592716f777cf92e7dc/untitled377.ipynb&lt;/denchmark-link&gt;

Note how when converter.experimental_new_converter=True, the output contains spurious ops and is missing another op.
I also noticed that tf-nightly crashes when converter.experimental_new_converter=True is set, but it does not crash with TF2.3.
		</comment>
		<comment id='5' author='dansitu' date='2020-08-26T20:50:08Z'>
		I am also facing this issue
		</comment>
		<comment id='6' author='dansitu' date='2020-08-27T00:00:47Z'>
		&lt;denchmark-link:https://github.com/dansitu&gt;@dansitu&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/idenc&gt;@idenc&lt;/denchmark-link&gt;

This is not an issue with the converter, actually it looks working as expected.
Let me explain why the extra nodes/discrepancy,


Why using old converter looks as working ?
The old converter didn't support dynamic shapes (tensors with unknown dimension like (None, 637). Incorrectly it used to set 1 for the dynamic dimension if it is batch dimension (first dimension).
This is incorrect, because
Assuming static shape allows the converter to do extra optimizations, that will be incorrect if you tried doing resize_input_tensor on the interpreter. (You can find many issues already created with old converter about failures during resizing).


Why the model using current converter has extra ops ?
The new converter now supports dynamic shapes, and if the graph has dynamic shape it will honor this, and passes this information to the runtime, so users can resize the input tensors correctly.


My use case doesn't need dynamic shape, what can i do ?
Then in your model set the shape to a static shape and things should work as expected.


I modified the conversion lines to set a static shape using something like below (I suggest you modify your original model instead)
model = tf.saved_model.load('/tmp/saved_model')
concrete_func = model.signatures['serving_default']
concrete_func.inputs[0].set_shape([1, 637])
converter = tf.lite.TFLiteConverter.from_concrete_functions([concrete_func])
model_new_converter = converter.convert()
open('/tmp/model_new_converter_static_input_shape.tflite', 'wb').write(model_new_converter)
Thanks
		</comment>
		<comment id='7' author='dansitu' date='2020-08-27T19:33:56Z'>
		Closing the issue. Please reopen or file new one.
Thanks
		</comment>
		<comment id='8' author='dansitu' date='2020-08-27T19:33:58Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42286&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42286&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='dansitu' date='2020-08-27T21:44:03Z'>
		This makes sense, thanks for the clarification &lt;denchmark-link:https://github.com/karimnosseir&gt;@karimnosseir&lt;/denchmark-link&gt;
!  Hope you are doing well :)
		</comment>
		<comment id='10' author='dansitu' date='2020-08-28T19:01:44Z'>
		FYI it's worth updating the converter docs with this info, since by default Keras models have a batch dimension of None.
		</comment>
		<comment id='11' author='dansitu' date='2020-09-01T16:47:04Z'>
		&lt;denchmark-link:https://github.com/dansitu&gt;@dansitu&lt;/denchmark-link&gt;
 Thanks, hope you are doing well too :)
Will update the docs.
Thanks
		</comment>
	</comments>
</bug>