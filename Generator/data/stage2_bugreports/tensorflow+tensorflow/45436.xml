<bug id='45436' author='sidhomj' open_date='2020-12-07T05:14:35Z' closed_time='2020-12-19T06:30:57Z'>
	<summary>Sparse.Softmax Example</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 2.3.1
Python version:3.8
CUDA/cuDNN version: unsure
GPU model and memory: unsure

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Executing code at the tensorflow example does not work as described.
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/sparse/softmax#returns&gt;https://www.tensorflow.org/api_docs/python/tf/sparse/softmax#returns&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

shape = [2, 2, 2]  # 3-D SparseTensor
values = np.asarray([[[0., np.e], [1., 0.]], [[np.e, 0.], [np.e, np.e]]])
indices = np.vstack(np.where(values)).astype(np.int64).T
result = tf.sparse.softmax(tf.sparse.SparseTensor(indices, values, shape))
&lt;/denchmark-code&gt;

Output:
Traceback (most recent call last):
File "/usr/local/pycharm-2020.1.2/plugins/python/helpers/pydev/_pydevd_bundle/pydevd_exec2.py", line 3, in Exec
exec(exp, global_vars, local_vars)
File "", line 7, in 
File "/home/jsidhom1/DeepTCR/venv/lib/python3.8/site-packages/tensorflow/python/framework/sparse_tensor.py", line 145, in init
values_shape = values.shape.with_rank(1)
File "/home/jsidhom1/DeepTCR/venv/lib/python3.8/site-packages/tensorflow/python/framework/tensor_shape.py", line 1034, in with_rank
raise ValueError("Shape %s must have rank %d" % (self, rank))
ValueError: Shape (2, 2, 2) must have rank 1
Expected behavior from website above.
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

shape = [2, 2, 2]  # 3-D SparseTensor
values = np.asarray([[[0., np.e], [1., 0.]], [[np.e, 0.], [np.e, np.e]]])
indices = np.vstack(np.where(values)).astype(np.int64).T
result = tf.sparse.softmax(tf.sparse.SparseTensor(indices, values, shape))
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sidhomj' date='2020-12-07T16:27:17Z'>
		Hi &lt;denchmark-link:https://github.com/sidhomj&gt;@sidhomj&lt;/denchmark-link&gt;

I tried this out, I too got the same error.
The reason for the error is SparseTensor accepts only 1-D tensor as values but in the docs a 3-D tensor is passed. So, to solve this you can get the non zero values from the tensor and store it in a list and then pass it to the SparseTensor.
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

shape = [2, 2, 2]  # 3-D SparseTensor
values = np.asarray([[[0., np.e], [1., 0.]], [[np.e, 0.], [np.e, np.e]]])
indices = np.vstack(np.where(values)).astype(np.int64).T

flat_values = tf.reshape(values,[-1])
val = [flat_values[i] for i in np.nonzero(flat_values)[0].tolist()]

result = tf.sparse.softmax(tf.sparse.SparseTensor(indices, val, shape))
tf.sparse.to_dense(result)
&lt;/denchmark-code&gt;

This is how I implemented it
		</comment>
		<comment id='2' author='sidhomj' date='2020-12-07T17:49:01Z'>
		Was able to reproduce the issue with TF v2.3 and TF-nightly. Please find the gist of it &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/17622f98bd68a4d0b489d5e41b2c1564/45436.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='sidhomj' date='2020-12-19T01:19:12Z'>
		&lt;denchmark-link:https://github.com/sidhomj&gt;@sidhomj&lt;/denchmark-link&gt;
 Agree that the code on that page is not working as  supposed to be a 1-D tensor of any type and shape [N]. Please check the &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor&gt;tf.sparse.SparseTensor&lt;/denchmark-link&gt;
.
I tried the following which works and the result is of shape (5,3). Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/ecb8f343e78d8a6b51959f925fdcd431/untitled68.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;shape = [2, 2, 2]  # 3-D SparseTensor
dense_values = np.asarray([[[0., np.e], [1., 0.]], [[np.e, 0.], [np.e, np.e]]])
values= [np.e, 1, np.e, np.e, np.e]
indices = np.vstack(np.where(dense_values)).astype(np.int64).T

result = tf.sparse.softmax(tf.sparse.SparseTensor(indices, values, shape))
&lt;/denchmark-code&gt;

Please close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='4' author='sidhomj' date='2020-12-19T06:30:58Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45436&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45436&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>