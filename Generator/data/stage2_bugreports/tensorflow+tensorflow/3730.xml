<bug id='3730' author='m-colombo' open_date='2016-08-10T14:46:31Z' closed_time='2019-12-17T20:20:29Z'>
	<summary>tf.round != np.round</summary>
	<description>
Looks like tensorflow and numpy use different tie-breaking rules:
&lt;denchmark-code&gt;tf.round(0.5) =&gt; 1
np.round(0.5) =&gt; 0
&lt;/denchmark-code&gt;

Both are sound, so actually there's no bug, however since tf and np are tightly coupled is worth considering to uniform them or at least to explictly mention it in the doc.
Especially because np is often used as ground truth for tf tests.
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;


Operating System: Mac OS X
TensorFlow: 0.10.0rc0
https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.10.0rc0-py2-none-any.whl

&lt;denchmark-h:h3&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

with tf.Session() as S:
    tf_round = S.run(tf.round(0.5))

np_round = np.round(0.5)

print "round(0.5) =&gt; tf: {:.2f}\t np:{:.2}".format(tf_round, np_round)

assert np_round == tf_round
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='m-colombo' date='2016-08-10T16:22:55Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 What's the status of native round?  We currently just use .
		</comment>
		<comment id='2' author='m-colombo' date='2016-08-10T16:32:49Z'>
		Never reinstated it. We should.
On Wed, Aug 10, 2016 at 09:23 Geoffrey Irving &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

@martinwicke https://github.com/martinwicke What's the status of native
round? We currently just use floor.
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#3730 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AAjO_UFL86WZW6cyRj0_ry_jBaGE34CRks5qefrsgaJpZM4JhOP5
.

		</comment>
		<comment id='3' author='m-colombo' date='2016-08-13T04:51:15Z'>
		on tensorflow the function rounds the value to the nearest integer, wherein numpy specify the decimal to return the ground truth.  print np.round(0.5, decimals=1)
e.g,



import tensorflow as tf
import numpy as np
with tf.Session() as S:
...     tf_round = S.run(tf.round(1.5))
...
np_round = np.round(1.5,1)
print "round(1.5) =&gt; tf: {:.2f}\t np:{:.2}".format(tf_round, np_round)
round(1.5) =&gt; tf: 2.00   np:1.5



		</comment>
		<comment id='4' author='m-colombo' date='2016-08-14T06:08:21Z'>
		&lt;denchmark-link:https://github.com/apmanikandan&gt;@apmanikandan&lt;/denchmark-link&gt;
 The decimals monstrosity is unfortunate but unrelated to the current discussion; &lt;denchmark-link:https://github.com/m-colombo&gt;@m-colombo&lt;/denchmark-link&gt;
's concern is with tie breaking behavior.
		</comment>
		<comment id='5' author='m-colombo' date='2016-08-15T19:44:11Z'>
		NumPy seems to be using an unusual rounding mode by default called . See &lt;denchmark-link:https://en.wikipedia.org/wiki/Rounding#Tie-breaking&gt;https://en.wikipedia.org/wiki/Rounding#Tie-breaking&lt;/denchmark-link&gt;

TensorFlow uses the same standard rounding as all other scientific tools I have available (Octave, Silverfrost Fortran and Gnu Fortran) called Round half away from zero
Edit: No tests should ever use round due to the 6 or so different ways to do it. Use floor or ceil (round to -inf and +inf) which offers no ambiguity.
		</comment>
		<comment id='6' author='m-colombo' date='2016-08-16T14:28:09Z'>
		Even if unusual it's the default mode in IEEE754, while  is the optional one added in IEEE754-2008. I tried R and Matlab, the first use  while Matlab  .
More over I did a brief search on low level rounding operation support and both &lt;denchmark-link:http://docs.nvidia.com/cuda/parallel-thread-execution/index.html#rounding-modifiers&gt;Cuda&lt;/denchmark-link&gt;
 and &lt;denchmark-link:http://www.intel.com/content/www/us/en/architecture-and-technology/64-ia-32-architectures-software-developer-manual-325462.html&gt;Intel architectures&lt;/denchmark-link&gt;
 (pg.104) do not natively support 
Wondering why so many scientific tools adopted that mode, which before 2008 wasn't even standard.
		</comment>
		<comment id='7' author='m-colombo' date='2016-08-28T06:02:50Z'>
		If someone wants to reinstate &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/1288&gt;#1288&lt;/denchmark-link&gt;
, I'd be very excited.
		</comment>
		<comment id='8' author='m-colombo' date='2016-08-28T19:00:10Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 seems the rint operator was merged and then unmerged? you want a rebased PR of that PR?
		</comment>
		<comment id='9' author='m-colombo' date='2016-08-28T19:20:58Z'>
		That would be great. Last time we had to revert because it failed some
postsubmits and I never got around to fixing it. The root cause was
someplace else and fixed I believe so this should work now.
On Sun, Aug 28, 2016 at 12:01 Fabrizio Milo &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

@martinwicke https://github.com/martinwicke seems the rint operator was
merged and then unmerged? you want a rebased PR of that PR?
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#3730 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AAjO_R9R05P_BpKGHqEZb801ab2rCKsiks5qkdsngaJpZM4JhOP5
.

		</comment>
		<comment id='10' author='m-colombo' date='2016-08-29T21:44:33Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 I took a look at this and updated to work for float32 and float64. But seems that the  operation for Eigen::half is not supported on Eigen. I think is a simple declaration of the round function, but how to proceed? Wait for Eigen? commit only the float32 and float64 version?
		</comment>
		<comment id='11' author='m-colombo' date='2016-08-30T05:57:49Z'>
		I think we should commit the float 32 and 64 version and we'll try to get the declaration into Eigen as soon as we can and then update tensorflow.
		</comment>
		<comment id='12' author='m-colombo' date='2016-08-31T01:56:54Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 see &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/4113&gt;#4113&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='m-colombo' date='2016-10-26T16:12:11Z'>
		Andrew, assigning to you to eventually close once all the new code is in.
		</comment>
		<comment id='14' author='m-colombo' date='2019-12-17T19:29:52Z'>
		We have implemented fast vectorized rounding in Eigen equivalent to std::round's round-half-away from zero. I wish we could make it the default.
		</comment>
		<comment id='15' author='m-colombo' date='2019-12-17T19:50:20Z'>
		Is there a reason we cannot make it the default?
I think this is a bug. &lt;denchmark-link:https://github.com/orgs/tensorflow/teams/api-owners&gt;@tensorflow/api-owners&lt;/denchmark-link&gt;

		</comment>
		<comment id='16' author='m-colombo' date='2019-12-17T19:57:48Z'>
		It is a bug. I'm all for making it the default if we can agree on that.
		</comment>
		<comment id='17' author='m-colombo' date='2019-12-17T19:58:07Z'>
		Context: &lt;denchmark-link:https://gitlab.com/libeigen/eigen/commit/06e99aaf409eff4693c4256e59bb58313052818d&gt;https://gitlab.com/libeigen/eigen/commit/06e99aaf409eff4693c4256e59bb58313052818d&lt;/denchmark-link&gt;

		</comment>
		<comment id='18' author='m-colombo' date='2019-12-17T20:07:33Z'>
		As &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 points out, round-to-even is used in numpy.ndrray.round, so perhaps we should keep it this way. We should provide a fast implementation of that however.
		</comment>
		<comment id='19' author='m-colombo' date='2019-12-17T20:20:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/3730&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/3730&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>