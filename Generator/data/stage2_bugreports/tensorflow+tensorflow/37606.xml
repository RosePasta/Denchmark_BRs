<bug id='37606' author='thisismygitrepo' open_date='2020-03-15T06:34:10Z' closed_time='2020-03-17T11:29:49Z'>
	<summary>Loaded runtime CuDNN library: 7.5.1 but source was compiled with: 7.6.5</summary>
	<description>
Constructing simple LSTM model, feed arbitrary stuff, then I get the error:

tensorflow.python.framework.errors_impl.UnknownError: Fail to find the dnn implementation. [Op:CudnnRNN]

I traced the error above a couple of lines, and I see it started with the error you see in the title.
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow):
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04):  Win10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if
the issue happens on mobile device:
TensorFlow installed from (source or
binary): - TensorFlow version (use command below):  2.1 and 2.2 nightly, same.
Python version: - 3.7
version (if compiling from source):
GCC/Compiler version (if compiling from
source):
CUDA/cuDNN version: - GPU model and memory: Cuda 10.1, CuDNN 7.6, exactly as recommended in installation guide.

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
Describe the expected behavior
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='thisismygitrepo' date='2020-03-16T06:18:04Z'>
		@kernelizd
Thanks for reporting the issue, can you please provide us with simple and standalone code to reproduce the issue?
could you please refer to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33148&gt;this link&lt;/denchmark-link&gt;
 and let us know if it helps
		</comment>
		<comment id='2' author='thisismygitrepo' date='2020-03-16T07:18:45Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 Thanks for the respose. As for the link you provided, it doesn't work whether I limit the memory growth or not.
As for standalone reproducible code, it is insanely simple:

model = tf.keras.models.Sequential()
model.add(LSTM(units=10))
model(tf.random.normal((20, 360, 10))

Wierd thing is that other types of layers work smoothly
		</comment>
		<comment id='3' author='thisismygitrepo' date='2020-03-16T10:09:13Z'>
		@kernelizd
Can you please share the complete error log for us to analyse
		</comment>
		<comment id='4' author='thisismygitrepo' date='2020-03-16T22:07:43Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;

Hi, this error is from the latest tf-nightly 16 March

2020-03-17 08:06:02.583711: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-03-17 08:06:02.691797: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1544] Found device 0 with properties:
pciBusID: 0000:17:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 24.00GiB deviceMemoryBandwidth: 625.94GiB/s
2020-03-17 08:06:02.692522: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1544] Found device 1 with properties:
pciBusID: 0000:65:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 24.00GiB deviceMemoryBandwidth: 625.94GiB/s
2020-03-17 08:06:02.693103: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-03-17 08:06:02.693332: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-03-17 08:06:02.693641: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-03-17 08:06:02.693900: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-03-17 08:06:03.208089: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-03-17 08:06:03.208349: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-03-17 08:06:03.208595: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-03-17 08:06:03.209998: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1686] Adding visible gpu devices: 0, 1
2020-03-17 08:06:03.210499: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-03-17 08:06:03.230197: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x28f9c9958f0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-03-17 08:06:03.230580: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-03-17 08:06:03.845408: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1544] Found device 0 with properties:
pciBusID: 0000:17:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 24.00GiB deviceMemoryBandwidth: 625.94GiB/s
2020-03-17 08:06:03.846167: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1544] Found device 1 with properties:
pciBusID: 0000:65:00.0 name: TITAN RTX computeCapability: 7.5
coreClock: 1.77GHz coreCount: 72 deviceMemorySize: 24.00GiB deviceMemoryBandwidth: 625.94GiB/s
2020-03-17 08:06:03.846592: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-03-17 08:06:03.846830: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-03-17 08:06:03.846966: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-03-17 08:06:03.847101: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-03-17 08:06:03.847545: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-03-17 08:06:03.847759: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-03-17 08:06:03.847988: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-03-17 08:06:03.849271: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1686] Adding visible gpu devices: 0, 1
2020-03-17 08:06:04.883261: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1085] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-03-17 08:06:04.883507: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1091]      0 1
2020-03-17 08:06:04.883685: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1104] 0:   N Y
2020-03-17 08:06:04.883871: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1104] 1:   Y N
2020-03-17 08:06:04.885212: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1230] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 19048 MB memory) -&gt; physical GPU (device: 0, name: TITAN RTX, pci bus id: 0000:17:00.0, compute capability: 7.5)
2020-03-17 08:06:04.887765: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1230] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 19048 MB memory) -&gt; physical GPU (device: 1, name: TITAN RTX, pci bus id: 0000:65:00.0, compute capability: 7.5)
2020-03-17 08:06:04.893249: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2905a357760 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-03-17 08:06:04.893609: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): TITAN RTX, Compute Capability 7.5
2020-03-17 08:06:04.893831: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (1): TITAN RTX, Compute Capability 7.5
2020-03-17 08:06:05.765330: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-03-17 08:06:07.052610: E tensorflow/stream_executor/cuda/cuda_dnn.cc:319] Loaded runtime CuDNN library: 7.5.1 but source was compiled with: 7.6.5.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration.
2020-03-17 08:06:07.054989: W tensorflow/core/framework/op_kernel.cc:1737] OP_REQUIRES failed at cudnn_rnn_ops.cc:1510 : Unknown: Fail to find the dnn implementation.
Traceback (most recent call last):
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\ops\gen_cudnn_rnn_ops.py", line 91, in cudnn_rnn
dropout, "seed", seed, "seed2", seed2, "is_training", is_training)
tensorflow.python.eager.core._FallbackException: Expecting float value for attr dropout, got int
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\IPython\core\interactiveshell.py", line 3331, in run_code
exec(code_obj, self.user_global_ns, self.user_ns)
File "", line 129, in 
print('Input shape = ', tmp.shape, ' , output shape = ', model(tmp).shape)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 967, in call
outputs = self.call(cast_inputs, *args, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 291, in call
outputs = layer(inputs, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 654, in call
return super(RNN, self).call(inputs, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 967, in call
outputs = self.call(cast_inputs, *args, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1171, in call
**gpu_lstm_kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1416, in gpu_lstm
rnn_mode='lstm')
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\ops\gen_cudnn_rnn_ops.py", line 100, in cudnn_rnn
ctx=_ctx)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\ops\gen_cudnn_rnn_ops.py", line 179, in cudnn_rnn_eager_fallback
attrs=_attrs, ctx=ctx, name=name)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\eager\execute.py", line 60, in quick_execute
inputs, attrs, num_outputs)
tensorflow.python.framework.errors_impl.UnknownError: Fail to find the dnn implementation. [Op:CudnnRNN]

		</comment>
		<comment id='5' author='thisismygitrepo' date='2020-03-16T22:12:04Z'>
		To be very precice, this is the bit that relates to the error

2020-03-17 08:11:02.441648: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-03-17 08:11:03.956571: E tensorflow/stream_executor/cuda/cuda_dnn.cc:319] Loaded runtime CuDNN library: 7.5.1 but source was compiled with: 7.6.5.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration.
2020-03-17 08:11:03.962154: W tensorflow/core/framework/op_kernel.cc:1737] OP_REQUIRES failed at cudnn_rnn_ops.cc:1510 : Unknown: Fail to find the dnn implementation.
Traceback (most recent call last):
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\ops\gen_cudnn_rnn_ops.py", line 91, in cudnn_rnn
dropout, "seed", seed, "seed2", seed2, "is_training", is_training)
tensorflow.python.eager.core._FallbackException: Expecting float value for attr dropout, got int
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\IPython\core\interactiveshell.py", line 3331, in run_code
exec(code_obj, self.user_global_ns, self.user_ns)
File "", line 1, in 
a = model(tmp)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 967, in call
outputs = self.call(cast_inputs, *args, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 291, in call
outputs = layer(inputs, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 654, in call
return super(RNN, self).call(inputs, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 967, in call
outputs = self.call(cast_inputs, *args, **kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1171, in call
**gpu_lstm_kwargs)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1416, in gpu_lstm
rnn_mode='lstm')
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\ops\gen_cudnn_rnn_ops.py", line 100, in cudnn_rnn
ctx=_ctx)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\ops\gen_cudnn_rnn_ops.py", line 179, in cudnn_rnn_eager_fallback
attrs=_attrs, ctx=ctx, name=name)
File "C:\Users\s4551072.conda\envs\gpuenv\lib\site-packages\tensorflow\python\eager\execute.py", line 60, in quick_execute
inputs, attrs, num_outputs)
tensorflow.python.framework.errors_impl.UnknownError: Fail to find the dnn implementation. [Op:CudnnRNN]

		</comment>
		<comment id='6' author='thisismygitrepo' date='2020-03-16T22:34:12Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;

Hi all, after hours of experiments. I got to the bottom of it.
It's surprising, look at this:
this is a  code that  work and throw errors as above:
&lt;denchmark-code&gt;import torch
import tensorflow as tf
from tensorflow.keras.layers import Dense, Flatten, Conv2D, LSTM, RNN, GRU
model = tf.keras.models.Sequential()
model.add(LSTM(units=10))
model.add(Dense(units=360, activation=tf.keras.activations.relu))
model.add(Dense(units=20))
tmp = tf.random.normal((32, 700, 3))
print('Input shape = ', tmp.shape, ' , output shape = ', model(tmp).shape)
&lt;/denchmark-code&gt;

Here's a code that works seamlessly:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.layers import Dense, Flatten, Conv2D, LSTM, RNN, GRU
model = tf.keras.models.Sequential()
model.add(LSTM(units=10))
model.add(Dense(units=360, activation=tf.keras.activations.relu))
model.add(Dense(units=20))
tmp = tf.random.normal((32, 700, 3))
print('Input shape = ', tmp.shape, ' , output shape = ', model(tmp).shape)
&lt;/denchmark-code&gt;

Difference? one line:
import torch 
Give it a try if you don't believe me.
While I was importing some help functions from other files, this import was happening there.
Now this takes me back to the link that &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 suggested, in which people talked about errors when the gpu is growth limited so that other processes can make use of it (e.g. run multiple models at the same time). From my experience, hell gates open when you try to run two models, use Pytorch and Tensorflow at the same time, even a single import of torch, with no use, cause the trouble above, even if it happened during an import !!
You can go ahead and close the issue if you feel this is not a problem that you should solve.
Thanks.
		</comment>
		<comment id='7' author='thisismygitrepo' date='2020-03-17T11:14:17Z'>
		@kernelizd
i have executed the code shared by you on nightly and do not face any issues, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/c5f0a6c6d523fe988915ff1668dd58b4/37606.ipynb&gt;gist here&lt;/denchmark-link&gt;
,
please note "import torch is not part of tensorflow".
As  the error does not exist please confirm if i may move this issue to closed status.
		</comment>
		<comment id='8' author='thisismygitrepo' date='2020-03-17T11:29:49Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 Hi, I just checked again, it doesn't work, unless I remove. The error is as above, nothing new. All I can add is that I'm using Pycharm, and a conda enviroment. It's wierd that it only happens on my side. I checked your gist, I see that it works smoothly.
Unfortunately, I cannot add more to what I said.
		</comment>
		<comment id='9' author='thisismygitrepo' date='2020-03-17T11:29:51Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37606&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37606&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='thisismygitrepo' date='2020-03-18T06:59:37Z'>
		@kernelizd
As i mentioned "import torch is not part of tensorflow" you see the errors on ide that are not from google, with colab due to compatibility the warnings are not present in the nightly version.
		</comment>
		<comment id='11' author='thisismygitrepo' date='2020-03-21T19:45:07Z'>
		try uninstalled cupy-cuda101?
		</comment>
		<comment id='12' author='thisismygitrepo' date='2020-03-21T19:46:45Z'>
		&lt;denchmark-link:https://github.com/liudengfeng&gt;@liudengfeng&lt;/denchmark-link&gt;
 Is that going to hurt anything? Where did I get this package in the first place ?
		</comment>
		<comment id='13' author='thisismygitrepo' date='2020-07-02T10:54:11Z'>
		I have similar issue when running StyleGAN2 on a Jetson Nano with JetPack 4.3,  TensorFlow 1.15.2+nv20.2
Any help will be appreciated, thanks!
&lt;denchmark-code&gt;Generating image for seed 6600 (0/26) ...
2020-07-02 18:49:09.547209: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
2020-07-02 18:49:12.161725: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-07-02 18:49:18.254447: E tensorflow/stream_executor/cuda/cuda_dnn.cc:320] Loaded runtime CuDNN library: 7.5.0 but source was compiled with: 7.6.3.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration.
2020-07-02 18:49:18.262843: E tensorflow/stream_executor/cuda/cuda_dnn.cc:320] Loaded runtime CuDNN library: 7.5.0 but source was compiled with: 7.6.3.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration.
Traceback (most recent call last):
  File "/home/swei/env/StyleGAN2/lib/python3.6/site-packages/tensorflow_core/python/client/session.py", line 1365, in _do_call
    return fn(*args)
  File "/home/swei/env/StyleGAN2/lib/python3.6/site-packages/tensorflow_core/python/client/session.py", line 1350, in _run_fn
    target_list, run_metadata)
  File "/home/swei/env/StyleGAN2/lib/python3.6/site-packages/tensorflow_core/python/client/session.py", line 1443, in _call_tf_sessionrun
    run_metadata)
tensorflow.python.framework.errors_impl.UnknownError: 2 root error(s) found.
  (0) Unknown: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
	 [[{{node Gs/_Run/Gs/G_synthesis/4x4/Conv/Conv2D}}]]
	 [[Gs/_Run/saturate_cast/_1519]]
  (1) Unknown: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
	 [[{{node Gs/_Run/Gs/G_synthesis/4x4/Conv/Conv2D}}]]
0 successful operations.
0 derived errors ignored.

During handling of the above exception, another exception occurred:
...
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='thisismygitrepo' date='2020-08-05T10:38:08Z'>
		Hi,
After a lot of search, I found another cudnn installation.
The command line  where cudnn* found cudnn in the following folder as expected.

"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1"

But the command line found also a folder in my anaconda env, which was being used by Tensorflow.
The solution that worked for me :
Remove cudnn installed in Anaconda env with conda uninstall cudnn and check again where where cudnn*
If the cudnn installed in Anaconda env is removed, that should be good !
Hope it helps !
		</comment>
	</comments>
</bug>