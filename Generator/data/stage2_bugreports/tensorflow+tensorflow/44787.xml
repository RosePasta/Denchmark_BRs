<bug id='44787' author='Maithri-CH' open_date='2020-11-12T00:39:39Z' closed_time='2021-01-04T23:55:48Z'>
	<summary>Newer version of tf nightly has changed the index order for the tensor output array</summary>
	<description>
when reading in the TFlite model for EfficientDet D0 there are 8 values to the 1st index and their meaning is defined. Older version had the below order and for the newer tfnighly version,the order has changed and couldn't find documentation for the newer order, and using the tflite converted with newer version of tf nightly breaks the android code
Please refer the image below
&lt;denchmark-link:https://user-images.githubusercontent.com/47469211/98880127-e8a91e80-243b-11eb-8a34-86aa403aaf53.png&gt;&lt;/denchmark-link&gt;

Colab that used older version of tfnightly (tf-nightly==2.4.0-dev20200929) for tflite conversion:
&lt;denchmark-link:https://colab.research.google.com/drive/1Ss4ZaO52gOBvhr-5DRXiiuPQ7I_vIt-Y?usp=sharing&gt;https://colab.research.google.com/drive/1Ss4ZaO52gOBvhr-5DRXiiuPQ7I_vIt-Y?usp=sharing&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/grewe/covidID_mask/blob/master/maskDetect/MaskDetectTflite.ipynb&gt;https://github.com/grewe/covidID_mask/blob/master/maskDetect/MaskDetectTflite.ipynb&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;INPUT DETAILS: 
	 [{'name': 'serving_default_input_tensor:0', 'index': 0, 'shape': array([  1, 512, 512,   3], dtype=int32), 'shape_signature': array([  1, 512, 512,   3], dtype=int32), 'dtype': &lt;class 'numpy.uint8'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}]
	OUTPUT DETAILS: 
	 [{'name': 'StatefulPartitionedCall:4', 'index': 66563, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:6', 'index': 66384, 'shape': array([    1, 49104,     4], dtype=int32), 'shape_signature': array([    1, 49104,     4], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:5', 'index': 66546, 'shape': array([1], dtype=int32), 'shape_signature': array([1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:1', 'index': 66642, 'shape': array([1, 1, 1], dtype=int32), 'shape_signature': array([ 1, -1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:2', 'index': 66620, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:7', 'index': 66405, 'shape': array([    1, 49104,     3], dtype=int32), 'shape_signature': array([    1, 49104,     3], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:3', 'index': 66603, 'shape': array([1, 1, 1], dtype=int32), 'shape_signature': array([ 1, -1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:0', 'index': 66581, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}]
&lt;/denchmark-code&gt;

Output array:
(1, 512, 512, 3)
[[0.9609589  0.0873408  0.06809524 0.05999154 0.05568287 0.03616852
0.03515935 0.03388214 0.02964088 0.02917778 0.02844885 0.02752271
0.02532643 0.02329737 0.02278286 0.0213418  0.0210638  0.02019128
0.01916748 0.01763159 0.01730308 0.0164015  0.01632011 0.01615366
0.01609802 0.01606014 0.01520342 0.01478559 0.01420614 0.0132328
0.01292685 0.01276404 0.01265842 0.01264325 0.01245722 0.01230013
0.01227069 0.01221645 0.01210919 0.01204768 0.01181906 0.01178762
0.01154467 0.01148716 0.01128137 0.01100454 0.01090339 0.01090035
0.01056659 0.01046374 0.01039562 0.01035801 0.0101763  0.01016143
0.01015401 0.0101212  0.00995958 0.00986671 0.00980252 0.00979534
0.00976944 0.00947464 0.00944296 0.00930616 0.00917202 0.00895733
0.00894633 0.00891778 0.00886655 0.00885886 0.00849381 0.00849113
0.00848216 0.00847018 0.00844333 0.00835618 0.00833991 0.00832459
0.00819856 0.0081273  0.00803497 0.00802234 0.00790223 0.0078285
0.0078209  0.00782064 0.00778884 0.00771174 0.00768062 0.00766596
0.0076198  0.00758222 0.00756696 0.00753024 0.00749895 0.00749457
0.00748292 0.00745744 0.00744084 0.00738394]]
output array length: 100
Colab that used later version of tfnightly(tf-nightly==2.4.0-dev20201019) for tflite conversion:
&lt;denchmark-link:https://colab.research.google.com/drive/1LVkk8aclpoxwmfdYeanpu6YKSEMoWxRJ?usp=sharing&gt;https://colab.research.google.com/drive/1LVkk8aclpoxwmfdYeanpu6YKSEMoWxRJ?usp=sharing&lt;/denchmark-link&gt;

INPUT DETAILS:
[{'name': 'serving_default_input_tensor:0', 'index': 0, 'shape': array([  1, 512, 512,   3], dtype=int32), 'shape_signature': array([  1, 512, 512,   3], dtype=int32), 'dtype': &lt;class 'numpy.uint8'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}]
OUTPUT DETAILS:
[{'name': 'StatefulPartitionedCall:5', 'index': 66546, 'shape': array([1], dtype=int32), 'shape_signature': array([1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:1', 'index': 66642, 'shape': array([1, 1, 1], dtype=int32), 'shape_signature': array([ 1, -1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:2', 'index': 66620, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:7', 'index': 66405, 'shape': array([    1, 49104,     3], dtype=int32), 'shape_signature': array([    1, 49104,     3], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:4', 'index': 66563, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:6', 'index': 66384, 'shape': array([    1, 49104,     4], dtype=int32), 'shape_signature': array([    1, 49104,     4], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:3', 'index': 66603, 'shape': array([1, 1, 1], dtype=int32), 'shape_signature': array([ 1, -1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, {'name': 'StatefulPartitionedCall:0', 'index': 66581, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}]
[  1 512 512   3]
[100.]
	</description>
	<comments>
		<comment id='1' author='Maithri-CH' date='2020-11-12T13:40:32Z'>
		&lt;denchmark-link:https://github.com/Maithri-CH&gt;@Maithri-CH&lt;/denchmark-link&gt;

I ran the code shared and face a different issue, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/6d39700afa98a5635187dcc1433733b0/untitled460.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='Maithri-CH' date='2020-11-13T01:19:04Z'>
		
@Maithri-CH
I ran the code shared and face a different issue, please find the gist here.

The above colab is to convert a saved model to tflite file. The error you got in your colab is because you're trying to access the saved model in my drive! You will have to upload a saved model to the mentioned path or change the path to where your saved model is
In case you want to use my saved model:
here is the link:  &lt;denchmark-link:https://drive.google.com/drive/folders/1JnaG61kW98NvB9XHt8Cz0PJQ7vi0Nt_I?usp=sharing&gt;https://drive.google.com/drive/folders/1JnaG61kW98NvB9XHt8Cz0PJQ7vi0Nt_I?usp=sharing&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Maithri-CH' date='2020-12-21T22:49:31Z'>
		Your model url throws 404 error. TF 2.4 final has released perhaps you can try testing it? Thanks!
		</comment>
		<comment id='4' author='Maithri-CH' date='2020-12-28T23:33:59Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='Maithri-CH' date='2021-01-04T23:55:45Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='6' author='Maithri-CH' date='2021-01-04T23:55:50Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44787&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44787&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>