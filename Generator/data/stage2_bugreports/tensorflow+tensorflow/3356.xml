<bug id='3356' author='whdc' open_date='2016-07-18T05:39:38Z' closed_time='2016-08-08T17:03:12Z'>
	<summary>can't construct gradient of gradient</summary>
	<description>
In general, I've had no trouble constructing the gradient of a gradient in Tensorflow, but I hit on a weird edge case involving complex numbers where I couldn't.  Below, I show a case where the double gradient works, and one that is minimally different where it doesn't.
Here's where double gradient works:
x = tf.Variable(tf.zeros([10]))
xx = x * x
g = tf.gradients(tf.reduce_sum(xx), x)
h = tf.gradients(tf.reduce_sum(g), x)
As expected, evaluating h produces:
&lt;denchmark-code&gt;&gt;&gt;&gt; sess.run(h, feed_dict={x:10*[1.]})
[array([ 2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.], dtype=float32)]
&lt;/denchmark-code&gt;

Here's where double gradient doesn't work:
x = tf.Variable(tf.zeros([10]))
xx = tf.real(tf.complex(x*x, tf.zeros([10])))
g = tf.gradients(tf.reduce_sum(xx), x)
h = tf.gradients(tf.reduce_sum(g), x)
Running the last line gives:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py", line 494, in gradients
    in_grad.set_shape(t_in.get_shape())
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 404, in set_shape
    self._shape = self._shape.merge_with(shape)
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 570, in merge_with
    (self, other))
ValueError: Shapes (10,) and () are not compatible
&lt;/denchmark-code&gt;

I'm running version 0.9.0, CPU only, in OS X.
	</description>
	<comments>
		<comment id='1' author='whdc' date='2016-07-18T23:25:06Z'>
		&lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
 Can you take a look?
		</comment>
		<comment id='2' author='whdc' date='2016-07-18T23:30:45Z'>
		In the complex case h = tf.gradients(tf.reduce_sum(g), x) is trying to take the gradient of 2 reals w.r.t. 10 reals, which TensorFlow doesn't support.  We only support gradients of single real scalars.  I believe h = tf.gradients(tf.real(tf.reduce_sum(g)), x) should work fine.
		</comment>
		<comment id='3' author='whdc' date='2016-07-19T00:48:12Z'>
		&lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
,  is a tensor of reals, so  is a gradient of a real w.r.t. reals.  Supporting this is the fact that the expression  produces the following error:
&lt;denchmark-code&gt;&gt;&gt;&gt; tf.real(tf.reduce_sum(g))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/math_ops.py", line 398, in real
    return gen_math_ops.real(input, Tout=input.dtype.real_dtype, name=name)
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.py", line 1516, in real
    result = _op_def_lib.apply_op("Real", input=input, Tout=Tout, name=name)
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py", line 530, in apply_op
    _Attr(op_def, input_arg.type_attr))
  File "/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py", line 61, in _SatisfiesTypeConstraint
    ", ".join(dtypes.as_dtype(x).name for x in allowed_list)))
TypeError: DataType float32 for attr 'T' not in list of allowed values: complex64, complex128
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='whdc' date='2016-07-19T19:47:11Z'>
		Whoops, you're right.  Apologies for misreading.
		</comment>
		<comment id='5' author='whdc' date='2016-07-19T22:34:57Z'>
		Assigning to &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 to take a look, although he's currently out.
		</comment>
		<comment id='6' author='whdc' date='2016-07-29T21:33:57Z'>
		I think this was fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/946f515fd3e541272a594ca239c9bc83e158239a&gt;946f515&lt;/denchmark-link&gt;
, which doesn't appear to be included in r0.9. It doesn't reproduce for me at HEAD, but it does with the 0.9 binary. Can you try upgrading to a nightly (or to the imminent r0.10rc0) and see if this is still a problem?
		</comment>
		<comment id='7' author='whdc' date='2016-08-08T17:03:12Z'>
		I'm going to assume this is fixed now, and close the issue. Feel free to reopen if the problem persists!
		</comment>
	</comments>
</bug>