<bug id='30728' author='pjspillai' open_date='2019-07-15T20:28:12Z' closed_time='2019-09-30T23:04:37Z'>
	<summary>AttributeError: '_TfDeviceCaptureOp' object has no attribute '_set_device_from_string'</summary>
	<description>
Tensorflow Version: 1.14.0
python3.6
Num of GPU's : 3
--- Sample keras code to reproduce this error ---
&lt;denchmark-code&gt;import tensorflow as tf
from keras.applications import Xception
from keras.utils import multi_gpu_model
import numpy as np

num_samples = 1000
height = 224
width = 224
num_classes = 1000

model = Xception(weights=None,
                     input_shape=(height, width, 3),
                     classes=num_classes)

gpus = tf.config.experimental.list_physical_devices('GPU')
print(gpus)
parallel_model = multi_gpu_model(model, gpus=2)
&lt;/denchmark-code&gt;

Error Message:
&lt;denchmark-code&gt;
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
device_string:  /device:GPU:0
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.6/dist-packages/keras/utils/multi_gpu_utils.py", line 227, in multi_gpu_model
    outputs = model(inputs)
  File "/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py", line 457, in __call__
    output = self.call(inputs, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/keras/engine/network.py", line 564, in call
    output_tensors, _, _ = self.run_internal_graph(inputs, masks)
  File "/usr/local/lib/python3.6/dist-packages/keras/engine/network.py", line 721, in run_internal_graph
    layer.call(computed_tensor, **kwargs))
  File "/usr/local/lib/python3.6/dist-packages/keras/layers/normalization.py", line 185, in call
    epsilon=self.epsilon)
  File "/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py", line 1858, in normalize_batch_in_training
    if not _has_nchw_support() and list(reduction_axes) == [0, 2, 3]:
  File "/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py", line 291, in _has_nchw_support
    explicitly_on_cpu = _is_current_explicit_device('CPU')
  File "/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py", line 266, in _is_current_explicit_device
    device = _get_current_tf_device()
  File "/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py", line 247, in _get_current_tf_device
    g._apply_device_functions(op)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py", line 4581, in _apply_device_functions
    op._set_device_from_string(device_string)
AttributeError: '_TfDeviceCaptureOp' object has no attribute '_set_device_from_string'
(arg: 2) 

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='pjspillai' date='2019-07-15T20:49:51Z'>
		Solved, It's a bug in tensorflow 1.14.0
When I downgraded to 1.13.1, it's back to normal :-/
I haven't figure out why 1.14.0 though. If someone solves this, it will help other idiots like me who after upgrading to TF 1.14 , unwittingly trained on a single gpu (instead of multi by default)
		</comment>
		<comment id='2' author='pjspillai' date='2019-07-15T21:13:51Z'>
		Same Problem Here
		</comment>
		<comment id='3' author='pjspillai' date='2019-07-24T13:57:53Z'>
		Any news regarding that problem?
		</comment>
		<comment id='4' author='pjspillai' date='2019-07-25T15:31:09Z'>
		Hi &lt;denchmark-link:https://github.com/robieta&gt;@robieta&lt;/denchmark-link&gt;
, seems you recently made changes to _TfDeviceCaptureOp, would you mind to take a look?
Thanks.
		</comment>
		<comment id='5' author='pjspillai' date='2019-07-29T17:45:09Z'>
		If it helps, I got the same error message with another traceback.
AttributeErrorTraceback (most recent call last)
 in ()
----&gt; 1 model = multi_gpu_model(model,gpus=2)
/usr/local/lib/python2.7/dist-packages/keras/utils/training_utils.pyc in multi_gpu_model(model, gpus)
173                 # Apply model on slice
174                 # (creating a model replica on the target device).
--&gt; 175                 outputs = model(inputs)
176                 if not isinstance(outputs, list):
177                     outputs = [outputs]
/usr/local/lib/python2.7/dist-packages/keras/engine/base_layer.pyc in call(self, inputs, **kwargs)
455             # Actually call the layer,
456             # collecting output(s), mask(s), and shape(s).
--&gt; 457             output = self.call(inputs, **kwargs)
458             output_mask = self.compute_mask(inputs, previous_mask)
459
/usr/local/lib/python2.7/dist-packages/keras/engine/network.pyc in call(self, inputs, mask)
562             return self._output_tensor_cache[cache_key]
563         else:
--&gt; 564             output_tensors, _, _ = self.run_internal_graph(inputs, masks)
565             return output_tensors
566
/usr/local/lib/python2.7/dist-packages/keras/engine/network.pyc in run_internal_graph(self, inputs, masks)
719                                     kwargs['mask'] = computed_mask
720                             output_tensors = to_list(
--&gt; 721                                 layer.call(computed_tensor, **kwargs))
722                             output_masks = layer.compute_mask(computed_tensor,
723                                                               computed_mask)
/usr/local/lib/python2.7/dist-packages/keras/layers/normalization.pyc in call(self, inputs, training)
183         normed_training, mean, variance = K.normalize_batch_in_training(
184             inputs, self.gamma, self.beta, reduction_axes,
--&gt; 185             epsilon=self.epsilon)
186
187         if K.backend() != 'cntk':
/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.pyc in normalize_batch_in_training(x, gamma, beta, reduction_axes, epsilon)
1856     """
1857     if ndim(x) == 4 and list(reduction_axes) in [[0, 1, 2], [0, 2, 3]]:
-&gt; 1858         if not _has_nchw_support() and list(reduction_axes) == [0, 2, 3]:
1859             return _broadcast_normalize_batch_in_training(x, gamma, beta,
1860                                                           reduction_axes,
/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.pyc in _has_nchw_support()
289         bool: if the current scope device placement would support nchw
290     """
--&gt; 291     explicitly_on_cpu = _is_current_explicit_device('CPU')
292     gpus_available = len(_get_available_gpus()) &gt; 0
293     return (not explicitly_on_cpu and gpus_available)
/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.pyc in _is_current_explicit_device(device_type)
264     if device_type not in ['CPU', 'GPU']:
265         raise ValueError('device_type should be either "CPU" or "GPU".')
--&gt; 266     device = _get_current_tf_device()
267     return (device is not None and device.device_type == device_type.upper())
268
/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.pyc in _get_current_tf_device()
245     g = tf.get_default_graph()
246     op = _TfDeviceCaptureOp()
--&gt; 247     g._apply_device_functions(op)
248     return op.device
249
/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.pyc in _apply_device_functions(self, op)
4579       # strings, since identity checks are faster than equality checks.
4580       if device_string is not prior_device_string:
-&gt; 4581         op._set_device_from_string(device_string)
4582         prior_device_string = device_string
4583     op._device_code_locations = self._snapshot_device_function_stack_metadata()
AttributeError: '_TfDeviceCaptureOp' object has no attribute '_set_device_from_string'
		</comment>
		<comment id='6' author='pjspillai' date='2019-08-12T03:53:21Z'>
		As a workaround, can you try tf.distribute.MirroredStrategy()? This is the recommended way going forward for multi-gpu training
		</comment>
		<comment id='7' author='pjspillai' date='2019-08-21T05:20:10Z'>
		Any update on this issues. I am still facing the issue when using multi gpu..
		</comment>
		<comment id='8' author='pjspillai' date='2019-08-21T21:25:36Z'>
		Any updates on this issue? This bug is preventing me from upgrading to tf1.14.
		</comment>
		<comment id='9' author='pjspillai' date='2019-08-28T20:44:22Z'>
		I'm having the same issue, downgrading to 1.13.1 solved it for me, please fix.
		</comment>
		<comment id='10' author='pjspillai' date='2019-09-10T23:34:23Z'>
		Downgrading to 1.13.1 worked for me as well!
Make sure when you downgrade, you downgrade other tensorflow packages that you have installed:
if python 2:
&lt;denchmark-code&gt;pip install tensorflow==1.13.1
pip install tensorflow-gpu==1.13.1
&lt;/denchmark-code&gt;

If python 3:
&lt;denchmark-code&gt;pip3 install tensorflow==1.13.1
pip3 install tensorflow-gpu==1.13.1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='pjspillai' date='2019-09-12T07:41:13Z'>
		There is also another way that results in same issue.
It does not even require multigpu model.
It crashes at any choice of device, with a way that is still official for TensorFlow, in docummentation and tutorials like &lt;denchmark-link:https://www.tensorflow.org/guide/using_gpu&gt;https://www.tensorflow.org/guide/using_gpu&lt;/denchmark-link&gt;
 :
with tf.device('/cpu:0'):  [any Keras code that compiles a model]
It will result in error with the following traceback:

Traceback (most recent call last):
File "/home/karol/Repozytoria/dnn_trayleveldetection/train.py", line 234, in 
train(from_preprocessed_dir=True, from_pretrained=start_from_previously_exported)
File "/home/karol/Repozytoria/dnn_trayleveldetection/train.py", line 192, in train
model = initalize_model(True)
File "/home/karol/Repozytoria/dnn_trayleveldetection/train.py", line 42, in initalize_model
models = model_func(img_rows, img_cols, classes, trainable)
File "/home/karol/Repozytoria/dnn_trayleveldetection/models.py", line 243, in UltraTinyModel
model.add(BatchNormalization())
File "/home/karol/.local/lib/python3.6/site-packages/keras/engine/sequential.py", line 181, in add
output_tensor = layer(self.outputs[0])
File "/home/karol/.local/lib/python3.6/site-packages/keras/engine/base_layer.py", line 457, in call
output = self.call(inputs, **kwargs)
File "/home/karol/.local/lib/python3.6/site-packages/keras/layers/normalization.py", line 185, in call
epsilon=self.epsilon)
File "/home/karol/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 1858, in normalize_batch_in_training
if not _has_nchw_support() and list(reduction_axes) == [0, 2, 3]:
File "/home/karol/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 291, in _has_nchw_support
explicitly_on_cpu = _is_current_explicit_device('CPU')
File "/home/karol/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 266, in _is_current_explicit_device
device = _get_current_tf_device()
File "/home/karol/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 247, in _get_current_tf_device
g._apply_device_functions(op)
File "/home/karol/.local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 4581, in _apply_device_functions
op._set_device_from_string(device_string)
AttributeError: '_TfDeviceCaptureOp' object has no attribute '_set_device_from_string'

		</comment>
		<comment id='12' author='pjspillai' date='2019-09-13T03:43:53Z'>
		&lt;denchmark-link:https://github.com/sephethus&gt;@sephethus&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ashkan-software&gt;@ashkan-software&lt;/denchmark-link&gt;
 This error is caused by keras, see the fix &lt;denchmark-link:https://github.com/keras-team/keras/pull/13255&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='pjspillai' date='2019-09-16T01:24:37Z'>
		&lt;denchmark-link:https://github.com/tuanzhangCS&gt;@tuanzhangCS&lt;/denchmark-link&gt;
 I installed keras from the master branch that has the PR you linked but I still get this error (downgrading tf and tf-gpu to 1.13.1 solved the issue for me):
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "run_cropmask.py", line 287, in &lt;module&gt;
    mode="training", config=config, model_dir=args.logs
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/cropmask/mrcnn/model.py", line 2025, in __init__
    self.keras_model = self.build(mode=mode, config=config)
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/cropmask/mrcnn/model.py", line 2345, in build
    model = ParallelModel(model, config.GPU_COUNT)
  File "/data/home/ryan/work/CropMask_RCNN/cropmask/mrcnn/parallel_model.py", line 33, in __init__
    merged_outputs = self.make_parallel(keras_model, gpu_count)
  File "/data/home/ryan/work/CropMask_RCNN/cropmask/mrcnn/parallel_model.py", line 79, in make_parallel
    outputs = inner_model(inputs)
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/engine/base_layer.py", line 457, in __call__
    output = self.call(inputs, **kwargs)
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/engine/network.py", line 564, in call
    output_tensors, _, _ = self.run_internal_graph(inputs, masks)
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/engine/network.py", line 721, in run_internal_graph
    layer.call(computed_tensor, **kwargs))
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/cropmask/mrcnn/model.py", line 71, in call
    return super(self.__class__, self).call(inputs, training=training)
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/layers/normalization.py", line 185, in call
    epsilon=self.epsilon)
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/backend/tensorflow_backend.py", line 1858, in normalize_batch_in_training
    if not _has_nchw_support() and list(reduction_axes) == [0, 2, 3]:
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/backend/tensorflow_backend.py", line 291, in _has_nchw_support
    explicitly_on_cpu = _is_current_explicit_device('CPU')
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/backend/tensorflow_backend.py", line 266, in _is_current_explicit_device
    device = _get_current_tf_device()
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/backend/tensorflow_backend.py", line 247, in _get_current_tf_device
    g._apply_device_functions(op)
  File "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/tensorflow/python/framework/ops.py", line 4581, in _apply_device_functions
    op._set_device_from_string(device_string)
AttributeError: '_TfDeviceCaptureOp' object has no attribute '_set_device_from_string'

&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='pjspillai' date='2019-09-16T02:14:47Z'>
		@rbavery  You can open the file "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/backend/tensorflow_backend.py" and check if there is the fix there.
The reason for this error is that "class  _TfDeviceCaptureOp" which declared in "keras/backend/tensorflow_backend.py" has no function '_set_device_from_string', so we can just add it.
So I think your package of keras doesn't have the change of this fix PR. My way is merge the code by myself, only need to add three lines code all. It runs well.
why your keras doesn't have this fix, I guess you install keras by pip?
		</comment>
		<comment id='15' author='pjspillai' date='2019-09-16T03:27:11Z'>
		Indeed. The fix is in for keras-team/keras, but conda/pip installs won't pick it up until the next keras release. &lt;denchmark-link:https://github.com/fchollet&gt;@fchollet&lt;/denchmark-link&gt;
 Do you think it's worth making a 2.2.6? (I'm not sure how far out 2.3.0 is, and if this is breaking enough to warrant an intermediate release.)
		</comment>
		<comment id='16' author='pjspillai' date='2019-09-30T22:26:08Z'>
		Does it get fixed on TF 2.0?
		</comment>
		<comment id='17' author='pjspillai' date='2019-09-30T23:04:37Z'>
		With the release of keras-team/keras 2.3.0, this should be fixed in both keras and tf.keras.
		</comment>
		<comment id='18' author='pjspillai' date='2019-09-30T23:04:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30728&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30728&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='19' author='pjspillai' date='2019-10-28T11:04:29Z'>
		
@rbavery You can open the file "/data/anaconda/envs/cropmask/lib/python3.7/site-packages/keras/backend/tensorflow_backend.py" and check if there is the fix there.
The reason for this error is that _"class TfDeviceCaptureOp" which declared in "keras/backend/tensorflow_backend.py" has no function _'set_device_from_string', so we can just add it.
So I think your package of keras doesn't have the change of this fix PR. My way is merge the code by myself, only need to add three lines code all. It runs well.
why your keras doesn't have this fix, I guess you install keras by pip?

name "tfdev" is not defined? where is the tfdev?
		</comment>
		<comment id='20' author='pjspillai' date='2019-10-28T11:53:03Z'>
		&lt;denchmark-link:https://github.com/sunanlin13174&gt;@sunanlin13174&lt;/denchmark-link&gt;
 Have you added  ? Make sure you added every line in 's commit. By the way, the last version of keras still doesn't work?
		</comment>
		<comment id='21' author='pjspillai' date='2019-10-28T12:14:38Z'>
		
@sunanlin13174 Have you added from tensorflow.python.framework import device as tfdev ? Make sure you added every line in robieta's commit. By the way, the last version of keras still doesn't work?

thanks very much,i upgraded keras to 2.3.0,and the issue solved. but i meet a new issue: "no model name control_flow_ops",so i modified keras.backend.init.py,add a code "from .load_backend import control_flow_ops" , but error:"cannot import name 'control_flow_ops' from 'keras.backend.load_backend' , tesorflow-gpu==1.14.0 , do you have a solution? thanks for reply!
		</comment>
		<comment id='22' author='pjspillai' date='2019-10-28T12:29:12Z'>
		

@sunanlin13174 Have you added from tensorflow.python.framework import device as tfdev ? Make sure you added every line in robieta's commit. By the way, the last version of keras still doesn't work?

thanks very much,i upgraded keras to 2.3.0,and the issue solved. but i meet a new issue: "no model name control_flow_ops",so i modified keras.backend.init.py,add a code "from .load_backend import control_flow_ops" , but error:"cannot import name 'control_flow_ops' from 'keras.backend.load_backend' , tesorflow-gpu==1.14.0 , do you have a solution? thanks for reply!

Keras doesn't support control_flow_ops now. So, you need use it from tensorflow directly.
		</comment>
		<comment id='23' author='pjspillai' date='2019-10-28T12:37:31Z'>
		yes,i got it ,thanks
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


------------------&amp;nbsp;原始邮件&amp;nbsp;------------------
发件人: "tuanzhangCS"&lt;notifications@github.com&amp;gt;;
发送时间: 2019年10月28日(星期一) 晚上8:36
收件人: "tensorflow/tensorflow"&lt;tensorflow@noreply.github.com&amp;gt;;
抄送: "梧桐"&lt;1317477457@qq.com&amp;gt;; "Mention"&lt;mention@noreply.github.com&amp;gt;;
主题: Re: [tensorflow/tensorflow] AttributeError: &amp;#39;_TfDeviceCaptureOp&amp;#39; object has no attribute &amp;#39;_set_device_from_string&amp;#39; (#30728)




@sunanlin13174 Have you added from tensorflow.python.framework import device as tfdev ? Make sure you added every line in robieta's commit. By the way, the last version of keras still doesn't work?

thanks very much,i upgraded keras to 2.3.0,and the issue solved. but i meet a new issue: "no model name control_flow_ops",so i modified keras.backend.init.py,add a code "from .load_backend import control_flow_ops" , but error:"cannot import name 'control_flow_ops' from 'keras.backend.load_backend' , tesorflow-gpu==1.14.0 , do you have a solution? thanks for reply!

Keras doesn't support control_flow_ops now. So, you need use it from tensorflow directly.

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or unsubscribe.

		</comment>
	</comments>
</bug>