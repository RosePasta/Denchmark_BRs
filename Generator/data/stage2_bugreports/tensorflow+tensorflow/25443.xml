<bug id='25443' author='mahmoud-abuzaina' open_date='2019-02-02T00:11:06Z' closed_time='2019-10-21T16:22:11Z'>
	<summary>Bug in embedding_ops.py Leads to Crash when importing Frozen Wide and Deep model/graph</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): 1.12, 1.13 and master
Python version: 2.7
Bazel version (if compiling from source): 0.19.2
GCC/Compiler version (if compiling from source): GCC 6.3
CUDA/cuDNN version: N/A
GPU model and memory: N/A


After successfully training and exporting the trained Wide and Deep model from here:
&lt;denchmark-link:https://github.com/tensorflow/models/tree/master/official/wide_deep&gt;https://github.com/tensorflow/models/tree/master/official/wide_deep&lt;/denchmark-link&gt;

Tried to freeze the exported model using freeze_graph.py. The frozen graph got generated without errors. However, when tried to load the frozen graph using the call tf.import_graph_def(graph_def), got the following error:
File "../python2.7/site-packages/tensorflow/python/framework/importer.py", line 430, in import_graph_def
raise ValueError(str(e))
ValueError: Input 0 of node import/linear/linear_model/linear_model/linear_model/age_bucketized/weighted_sum/embedding_lookup_sparse/embedding_lookup was passed float from import/linear/linear_model/age_bucketized/weights/part_0:0 incompatible with expected resource.
After inspecting the frozen graph, we found that ResourceGather Op is receiving float form Const node (which used to be VarHandleOP before freezing) but ResourceGather is expecting 'resource' data type.
The issue was resolved after changing this line &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/embedding_ops.py#L693&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/embedding_ops.py#L693&lt;/denchmark-link&gt;

by removing the if statement and calling convert_to_tensor() unconditionally.

The graph is expected to load and run successfully.

&lt;denchmark-link:https://github.com/tensorflow/models/tree/master/official/wide_deep&gt;https://github.com/tensorflow/models/tree/master/official/wide_deep&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='mahmoud-abuzaina' date='2019-02-02T02:22:26Z'>
		&lt;denchmark-link:https://github.com/zhenlinluo&gt;@zhenlinluo&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='mahmoud-abuzaina' date='2019-02-05T18:38:59Z'>
		I believe this is a bug in freeze_graph (or possibly our loading code) as freeze_graph doesn't seem to properly handle ResourceVariables. The fix in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/25501&gt;#25501&lt;/denchmark-link&gt;
 presents a regression when dealing with ResourceVariables.
&lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 is my hunch about freeze_graph correct?
		</comment>
		<comment id='3' author='mahmoud-abuzaina' date='2019-02-13T22:56:39Z'>
		&lt;denchmark-link:https://github.com/gargn&gt;@gargn&lt;/denchmark-link&gt;
 for freeze-resource-variables work
		</comment>
		<comment id='4' author='mahmoud-abuzaina' date='2019-02-27T07:46:54Z'>
		actually there are several issues reporting similar problem &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/25327&gt;#25327&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/25721&gt;#25721&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/hub/issues/208&gt;tensorflow/hub#208&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/947&gt;tensorflow/tfjs#947&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/21889&gt;#21889&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gargn&gt;@gargn&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/suharshs&gt;@suharshs&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='mahmoud-abuzaina' date='2019-03-21T18:19:44Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/cebce4a2b5e33a06a1c92772008082895568f10a&gt;cebce4a&lt;/denchmark-link&gt;
 should fix this issue. Please reopen if it's still an issue.
		</comment>
		<comment id='6' author='mahmoud-abuzaina' date='2019-03-21T18:19:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=25443&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=25443&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='mahmoud-abuzaina' date='2019-05-20T14:44:20Z'>
		When can we expect this in nightly or master?
edit:
Tested this in nightly and it didn't work in my scenario
		</comment>
		<comment id='8' author='mahmoud-abuzaina' date='2019-09-02T09:32:09Z'>
		Hi, I met the same problem for the wide and deep learning model. The redirect of the line 693 may have been changed, but according to the description of your, I've do the following changes:
from
embedding_weights= [ w if (isinstance(w, resource_variable_ops.ResourceVariable)  and dtype in (None, w.dtype))  else ops.convert_to_tensor(w, dtype=dtype)  for w in embedding_weights  ]
to
 embedding_weights = [ ops.convert_to_tensor(w,dtype=dtype) for w in embedding_weights ]
where the commented part is the original code.
However it still did not work.
Did I change the wrong part? Or the bug still remains?
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

update
Sry that I should have retrain the model, as the code changed influences the model def phrase.
But after I had frozen the graph, I found there was any input  ( which should be a "TextLineDataset" operation ) other than "IteratorV2" or "IteratorGetNext"
How should I organize the input dataset/ single data ?
		</comment>
		<comment id='9' author='mahmoud-abuzaina' date='2019-09-03T18:09:21Z'>
		&lt;denchmark-link:https://github.com/veqtor&gt;@veqtor&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/CharlesKung&gt;@CharlesKung&lt;/denchmark-link&gt;
 Can you both provide reproducible examples with the error that you are getting?
		</comment>
		<comment id='10' author='mahmoud-abuzaina' date='2019-09-04T02:12:19Z'>
		&lt;denchmark-link:https://github.com/gargn&gt;@gargn&lt;/denchmark-link&gt;
 I just changed the code in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/embedding_ops.py#L693&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/embedding_ops.py#L693&lt;/denchmark-link&gt;

from

to

then freeze the model and reload it.
&lt;denchmark-code&gt;saver = tf.train.import_meta_graph(export_path+"/model.ckpt-65160.meta",clear_devices=True)
with tf.Session(graph = tf.get_default_graph()) as sess:
    input_graph_def = sess.graph.as_graph_def()
    saver.restore(sess,export_path+"/model.ckpt-65160")
    output_graph_def = tf.graph_util.convert_variables_to_constants(sess,input_graph_def,output_nodes)
    output_file = export_path+"/frozen_model.pb"
    with open(output_file,"wb") as f:
        f.write(output_graph_def.SerializeToString())

with open(output_file, "rb") as f:
    graph_def = tf.GraphDef()
    graph_def.ParseFromString(f.read())

graph = tf.Graph()
with graph.as_default():
    tf.import_graph_def(graph_def, input_map=None, return_elements=output_nodes)
&lt;/denchmark-code&gt;

I was confused by the input of the frozen graph as the nodes left for processing were "IteratorV2" and "IteratorGetNext". I thought it was removed by the freezing parts because the previous nodes are doing data processing.
Is there any reference for the input of the frozen graph ? Like in the saved_model methods, the input should be wrapped as tf.Example and build a serving_input_receiver_fn function.
Thanks.
		</comment>
		<comment id='11' author='mahmoud-abuzaina' date='2019-09-06T20:15:38Z'>
		&lt;denchmark-link:https://github.com/CharlesKung&gt;@CharlesKung&lt;/denchmark-link&gt;
 A few questions/comments:

Can you attach the input files that are being used in your code snippet so that I can run it and reproduce it locally? Additionally, can you update your code snippet to work as a stand alone. I noticed output_nodes is not defined.
Why are you changing the logic in the embedding op? In general, freeze graph works by pattern matching. If you are changing the patterns then it will no longer work.
Iterator ops should not be removed unless you are specifying the output nodes as nodes before the Iterator ops. However, by default nothing happens to them in freeze graph.
The input of your frozen graph should be the same as the original graph that you created. The only thing that changes in freeze graph is that Variable ops are converted to Const ops (and other similar transformations relating to resources). The structure of the graph and the op names stay the same. I would suggest loading the frozen graph using TensorBoard to examine what the inputs should be if you are uncertain.

		</comment>
		<comment id='12' author='mahmoud-abuzaina' date='2019-10-21T16:22:11Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='13' author='mahmoud-abuzaina' date='2019-10-21T16:22:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/25443&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/25443&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>