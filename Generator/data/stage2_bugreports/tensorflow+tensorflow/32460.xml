<bug id='32460' author='jl-wynen' open_date='2019-09-12T09:12:20Z' closed_time='2020-03-21T01:26:23Z'>
	<summary>Executor error message in GradientTape.jacobian</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux-4.14.141-1-MANJARO-x86_64-with-arch-Manjaro-Linux
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: /
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.0.0-beta1-5101-gc75bb66 2.0.0-rc0
Python version: 3.7.4
Bazel version (if compiling from source): /
GCC/Compiler version (if compiling from source): /
CUDA/cuDNN version: /
GPU model and memory: /

Describe the current behavior
I am calculating the Jacobian of a model with respect to its parameters using a gradient tape. The method GradientTape.jacobian outputs an error message about a missing function library. The program does not abort however and the computed Jacobian is correct.
Describe the expected behavior
There should be no error message.
Code to reproduce the issue
import tensorflow as tf
from tensorflow import keras

model = keras.Sequential([
    keras.layers.Dense(2, input_shape=(2,)),
])
inputs = tf.Variable([[1, 2]], dtype=tf.float32)

with tf.GradientTape() as gtape:
    outputs = model(inputs)
gtape.jacobian(outputs, model.trainable_variables)
Other info / logs
The full output of the program shown above is:
&lt;denchmark-code&gt;2019-09-12 11:01:04.479226: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-09-12 11:01:04.498159: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2304500000 Hz
2019-09-12 11:01:04.498584: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x556260300c60 executing computations on platform Host. Devices:
2019-09-12 11:01:04.498609: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
2019-09-12 11:01:04.630899: E tensorflow/core/common_runtime/executor.cc:642] Executor failed to create kernel. Internal: No function library
	 [[{{node loop_body/MatMul_1/pfor/cond}}]]
&lt;/denchmark-code&gt;

With additional layers, more error messages like the one quoted above appear, one per matrix multiplication.
The problem persists when the Jacobian calculation is moved into a tf.function decorated function.
	</description>
	<comments>
		<comment id='1' author='jl-wynen' date='2019-09-13T08:38:39Z'>
		Was able to replicate the issue when tried in terminal for 
&lt;denchmark-link:https://user-images.githubusercontent.com/52397990/64848842-be898000-d62f-11e9-9ba4-0a4863e98b55.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='jl-wynen' date='2019-11-05T21:42:49Z'>
		It seems that I've found a solution. Try this:
gtape.jacobian(outputs, model.trainable_variables, experimental_use_pfor = False)
It has helped me
		</comment>
		<comment id='3' author='jl-wynen' date='2019-11-15T10:52:15Z'>
		&lt;denchmark-link:https://github.com/jl-wynen&gt;@jl-wynen&lt;/denchmark-link&gt;
, This issue is fixed in Tf 2.0.
Please take a look at gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/3cf63093471c1012746f5a77b75aa4be/untitled259.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='jl-wynen' date='2019-11-15T11:32:13Z'>
		I still get the same error message on my machine.
I installed TF into a new virtual environment using
&lt;denchmark-code&gt;pip install tensorflow=="2.0.0"
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='jl-wynen' date='2019-12-18T08:28:25Z'>
		Hi I think the provided gist by adagashwini is run on CPU. The issue happens when running on GPU.
		</comment>
		<comment id='6' author='jl-wynen' date='2019-12-19T06:02:48Z'>
		&lt;denchmark-link:https://github.com/jl-wynen&gt;@jl-wynen&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/pawelc&gt;@pawelc&lt;/denchmark-link&gt;
 , I didn't see error message with Tf GPU as well.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/3f3c64d01113dfc8ebcc8481ff652c14/untitled259.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='7' author='jl-wynen' date='2020-01-09T12:45:25Z'>
		I had this same issue and while using experimental_use_pfor=False works for most of my cases, I found a slight difference in the behavior compared to experimental_use_pfor=True. When running with tensors of batch shape 0, the former fails due to a type error, whereas the latter one works fine. Not sure if this is expected or not?
import tensorflow as tf


def main():
    variable = tf.Variable(1.0)
    inputs = (
        tf.constant(tf.random.uniform((0, 4))),
        tf.constant(tf.random.uniform((0, 3))),
    )

    with tf.GradientTape(persistent=True) as tape:
        outputs = variable * tf.pow(tf.concat(inputs, axis=-1), 2.0)

    jacobians_1 = tape.jacobian(
        outputs,
        variable,
        experimental_use_pfor=True,
    )
    print(jacobians_1)
    print("tape.jacobians(..., experimental_use_pfor=True) works!")

    try:
        jacobians_2 = tape.jacobian(
            outputs,
            variable,
            experimental_use_pfor=False,
        )
        print(jacobians_2)
        print("tape.jacobians(..., experimental_use_pfor=False) works!")
    except TypeError:
        print("tape.jacobians(..., experimental_use_pfor=False) doesn't work!")
        raise


if __name__ == '__main__':
    main()
This results in:
&lt;denchmark-code&gt;$ python ./tests/test_jacobian_with_empty_inputs.py
2020-01-09 12:41:21.118775: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-01-09 12:41:21.135469: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fc7e6242a00 executing computations on platform Host. Devices:
2020-01-09 12:41:21.135493: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
tf.Tensor([], shape=(0, 7), dtype=float32)
tape.jacobians(..., experimental_use_pfor=True) works!
tape.jacobians(..., experimental_use_pfor=False) doesn't work!
Traceback (most recent call last):
  File "./tests/test_jacobian_with_empty_inputs.py", line 36, in &lt;module&gt;
    main()
  File "./tests/test_jacobian_with_empty_inputs.py", line 26, in main
    experimental_use_pfor=False,
  File "/Users/hartikainen/conda/envs/softlearning-5/lib/python3.7/site-packages/tensorflow_core/python/eager/backprop.py", line 1115, in jacobian
    for i, out in enumerate(output):
TypeError: 'NoneType' object is not iterable
&lt;/denchmark-code&gt;

I'm running this with the following versions:
$ pip freeze | grep "tf\|tensor"
tensorboard==2.0.2
tensorflow==2.0.0
tensorflow-estimator==2.0.1
tensorflow-probability==0.8.0
tfp-nightly==0.9.0.dev20191207
$ python --version
Python 3.7.5
		</comment>
		<comment id='8' author='jl-wynen' date='2020-03-21T01:25:15Z'>
		The initial code snippet executes successfully in tf nightly on cpu as well gpu. Thanks!
&lt;denchmark-link:https://github.com/hartikainen&gt;@hartikainen&lt;/denchmark-link&gt;
 Can you please create a new issue thread for your repro code? Thank you.
		</comment>
		<comment id='9' author='jl-wynen' date='2020-03-21T01:26:25Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32460&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32460&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>