<bug id='36676' author='XMK233' open_date='2020-02-12T03:43:39Z' closed_time='2020-03-13T23:22:21Z'>
	<summary>TF2 SavedModel does not support multiple signatures?</summary>
	<description>
I used  and  to save and load TF2 SavedModel. According to &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/saved_model/save#used-in-the-notebooks&gt;this link&lt;/denchmark-link&gt;
, I created a signature and this signature is . Then I try to add a new function with the signature decorator in class . But after I loaded the model according to &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/saved_model/load&gt;this&lt;/denchmark-link&gt;
, I find that the signatures disappear in the model, i.e.,  prints no signature names. I don't find any information about how to use multiple signatures while saving models. So I think this may be a bug. If it is not, can anyone tell me how can I use multiple signatures in one model? Thank you very much.
Tensorflow 2.1.0, on Google Colab. The code looks like this:
&lt;denchmark-code&gt;import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
import os
import pandas as pd

class Adder(tf.Module):

  @tf.function(input_signature=[tf.TensorSpec(shape=None, dtype=tf.float32), tf.TensorSpec(shape=None, dtype=tf.float32)])# 
  def add(self, x, y):
    return x + y ** 2 + 1
  
  @tf.function(input_signature=[tf.TensorSpec(shape=None, dtype=tf.float32)])
  def square(self, x):
    return x ** 2

to_export = Adder()
tf.saved_model.save(
    to_export, 
    '/tmp/adder'            
)

adder1 = tf.saved_model.load("/tmp/adder")
print(adder1.signatures)
adder1_sig = adder1.signatures["serving_default"]
adder1_sig(x = tf.constant(1.), y = tf.constant(2.))
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='XMK233' date='2020-03-13T21:21:36Z'>
		If the signatures argument is omitted, obj will be searched for @tf.function-decorated methods. And as you have two such function so print(adder1.signatures) prints no signature names. You can use only one signature while saving models.
&lt;denchmark-code&gt;tf.saved_model.save(
    to_export, 
    '/tmp/adder',
    signatures=to_export.add
)
adder1 = tf.saved_model.load("/tmp/adder")
print(adder1.signatures)
adder1_sig = adder1.signatures["serving_default"]
adder1_sig(x = tf.constant(1.), y = tf.constant(2.))

#or 

to_export = Adder()
tf.saved_model.save(
    to_export, 
    '/tmp/adder' ,
    signatures=to_export.square        
)

adder1 = tf.saved_model.load("/tmp/adder")
adder1 = tf.saved_model.load("/tmp/adder")
print(adder1.signatures)
adder1_sig = adder1.signatures["serving_default"]
adder1_sig(x = tf.constant(1.))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='XMK233' date='2020-03-13T23:22:07Z'>
		&lt;denchmark-link:https://github.com/khimraj&gt;@khimraj&lt;/denchmark-link&gt;
 , you're close!
But you can export multiple signatures. You just need to pass a dictionary as the  argument. See &lt;denchmark-link:https://www.tensorflow.org/guide/concrete_function#example_setting_the_signature_names&gt;here&lt;/denchmark-link&gt;
. for example.
		</comment>
	</comments>
</bug>