<bug id='41304' author='tom970' open_date='2020-07-11T06:07:45Z' closed_time='2020-12-09T03:27:53Z'>
	<summary>tf.py_function fails on the tutorial code when running tensorflow-gpu 2.2 on Windows 10</summary>
	<description>
System information

OS Platform: Windows 10
TensorFlow installed: using pip
TensorFlow version: tensorflow gpu 2.2
Python version: 3.8.3
CUDA/cuDNN version: CUDA 10.1
GPU model and memory: GeForce GTX 1080, 8GB

Describe the current behavior
The serialized result without tf.py_function was normal.
But there were exception errors from eager_py_func when trying to get the serialized result with tf.py_function.
Describe the expected behavior
The serialized result without/with tf.py_fuction should be the same.

The issue can be reproduced by following code (from tensoflow tutorial, "TFRecord and tf.Example", &lt;denchmark-link:https://www.tensorflow.org/tutorials/load_data/tfrecord&gt;https://www.tensorflow.org/tutorials/load_data/tfrecord&lt;/denchmark-link&gt;
).
The code is running well on  Colab on the tutorial website but there are exception errors when running on Windows 10 with cmd or pycharm.
Here is the code:
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
import tensorflow as tf
def _bytes_feature(value):
"""Returns a bytes_list from a string / byte."""
if isinstance(value, type(tf.constant(0))):
value = value.numpy() # BytesList won't unpack a string from an EagerTensor.
return tf.train.Feature(bytes_list=tf.train.BytesList(value=[value]))
def _float_feature(value):
"""Returns a float_list from a float / double."""
return tf.train.Feature(float_list=tf.train.FloatList(value=[value]))
def _int64_feature(value):
"""Returns an int64_list from a bool / enum / int / uint."""
return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))
def serialize_example(feature0, feature1, feature2, feature3):
feature = {
'feature0': _int64_feature(feature0),
'feature1': _int64_feature(feature1),
'feature2': _bytes_feature(feature2),
'feature3': _float_feature(feature3),
}
example_proto = tf.train.Example(features=tf.train.Features(feature=feature))
return example_proto.SerializeToString()
def tf_serialize_example(f0,f1,f2,f3):
tf_string = tf.py_function(
serialize_example,
(f0,f1,f2,f3),
tf.string)
return tf.reshape(tf_string, ())
result_without_py_function = serialize_example(False, 4, b'goat', 0.9876)
print("result_without_py_function =",result_without_py_function)
result_with_py_function = tf_serialize_example(False, 4, b'goat', 0.9876)
print("result_with_py_function=",result_with_py_function)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
I only wrote extra lines to print out results from serialize_example() and tf_serialize_example() for comparison.
Running the above code on windows cmd or pycharm will get the exception errors when executing:
result_with_py_function = tf_serialize_example(False, 4, b'goat', 0.9876)
All the output including error messages:
020-07-10 20:36:22.730441: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-07-10 20:36:25.159732: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-07-10 20:36:25.298922: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 1080 computeCapability: 6.1
coreClock: 1.847GHz coreCount: 20 deviceMemorySize: 8.00GiB deviceMemoryBandwidth: 298.32GiB/s
2020-07-10 20:36:25.299515: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 1 with properties:
pciBusID: 0000:02:00.0 name: GeForce GTX 1080 computeCapability: 6.1
coreClock: 1.847GHz coreCount: 20 deviceMemorySize: 8.00GiB deviceMemoryBandwidth: 298.32GiB/s
2020-07-10 20:36:25.299855: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-07-10 20:36:25.330094: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-07-10 20:36:25.345517: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-07-10 20:36:25.375238: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-07-10 20:36:25.392428: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-07-10 20:36:25.412082: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-07-10 20:36:25.430892: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-07-10 20:36:25.432276: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0, 1
2020-07-10 20:36:25.432747: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-07-10 20:36:25.439470: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x18e19723790 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-10 20:36:25.439669: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-10 20:36:25.594336: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 1080 computeCapability: 6.1
coreClock: 1.847GHz coreCount: 20 deviceMemorySize: 8.00GiB deviceMemoryBandwidth: 298.32GiB/s
2020-07-10 20:36:25.594839: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 1 with properties:
pciBusID: 0000:02:00.0 name: GeForce GTX 1080 computeCapability: 6.1
coreClock: 1.847GHz coreCount: 20 deviceMemorySize: 8.00GiB deviceMemoryBandwidth: 298.32GiB/s
2020-07-10 20:36:25.595149: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-07-10 20:36:25.595311: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-07-10 20:36:25.595476: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-07-10 20:36:25.595637: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-07-10 20:36:25.595793: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-07-10 20:36:25.595953: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-07-10 20:36:25.596121: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-07-10 20:36:25.596974: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0, 1
2020-07-10 20:36:26.501843: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-07-10 20:36:26.502016: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 1
2020-07-10 20:36:26.502118: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N N
2020-07-10 20:36:26.502217: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 1:   N N
2020-07-10 20:36:26.503174: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6280 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)
2020-07-10 20:36:26.504471: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 6280 MB memory) -&gt; physical GPU (device: 1, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)
2020-07-10 20:36:26.507161: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x18e8a13a5e0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-07-10 20:36:26.507331: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce GTX 1080, Compute Capability 6.1
2020-07-10 20:36:26.507460: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (1): GeForce GTX 1080, Compute Capability 6.1
result_without_py_function = b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?'
2020-07-10 20:36:26.534597: W tensorflow/core/framework/op_kernel.cc:1741] Invalid argument: TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
Traceback (most recent call last):
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 43, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\script_ops.py", line 241, in call
return func(device, token, args)
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\script_ops.py", line 130, in call
ret = self._func(*args)
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\autograph\impl\api.py", line 309, in wrapper
return func(*args, **kwargs)
File "F:/python_projects/deep_learning/workspace/programs/dlcls/tf_py_function_test.py", line 20, in serialize_example
'feature0': _int64_feature(feature0),
File "F:/python_projects/deep_learning/workspace/programs/dlcls/tf_py_function_test.py", line 15, in _int64_feature
return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\python_message.py", line 542, in init
copy.extend(field_value)
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\containers.py", line 282, in extend
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\containers.py", line 282, in 
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\type_checkers.py", line 171, in CheckValue
raise TypeError(message)
TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
Traceback (most recent call last):
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 43, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "F:/python_projects/deep_learning/workspace/programs/dlcls/tf_py_function_test.py", line 40, in 
result_with_py_function = tf_serialize_example(False, 4, b'goat', 0.9876)
File "F:/python_projects/deep_learning/workspace/programs/dlcls/tf_py_function_test.py", line 30, in tf_serialize_example
tf_string = tf.py_function(
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\script_ops.py", line 454, in eager_py_func
return _internal_py_func(
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\script_ops.py", line 336, in _internal_py_func
result = gen_script_ops.eager_py_func(
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 50, in eager_py_func
return eager_py_func_eager_fallback(
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 99, in eager_py_func_eager_fallback
_result = _execute.execute(b"EagerPyFunc", len(Tout), inputs=_inputs_flat,
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InvalidArgumentError: TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
Traceback (most recent call last):
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 43, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\script_ops.py", line 241, in call
return func(device, token, args)
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\ops\script_ops.py", line 130, in call
ret = self._func(*args)
File "C:\Program Files\Python38\lib\site-packages\tensorflow\python\autograph\impl\api.py", line 309, in wrapper
return func(*args, **kwargs)
File "F:/python_projects/deep_learning/workspace/programs/dlcls/tf_py_function_test.py", line 20, in serialize_example
'feature0': _int64_feature(feature0),
File "F:/python_projects/deep_learning/workspace/programs/dlcls/tf_py_function_test.py", line 15, in _int64_feature
return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\python_message.py", line 542, in init
copy.extend(field_value)
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\containers.py", line 282, in extend
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\containers.py", line 282, in 
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "C:\Program Files\Python38\lib\site-packages\google\protobuf\internal\type_checkers.py", line 171, in CheckValue
raise TypeError(message)
TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
[Op:EagerPyFunc]
Process finished with exit code 1
	</description>
	<comments>
		<comment id='1' author='tom970' date='2020-07-13T12:11:46Z'>
		&lt;denchmark-link:https://github.com/tom970&gt;@tom970&lt;/denchmark-link&gt;
  Could you please try running this code on virtual environment and let us know if you are facing the same issue.Thanks!
		</comment>
		<comment id='2' author='tom970' date='2020-07-13T23:16:27Z'>
		Hi Saikumarchalla,
The code is running well on Colab on the tutorial website but there are the exception errors when running on Windows 10 with cmd or pycharm. (Assuming that the virtual environment you meant is Colab which I can only test on).
It seems that the problem only exists in the tensorflow-gpu 2.2 for Windows.
Thanks!
		</comment>
		<comment id='3' author='tom970' date='2020-07-14T23:50:34Z'>
		Hi Saikumarchalla,

The code is running well on Colab on the tutorial website but there are the
exception errors when running on Windows 10 with cmd or pycharm. (Assuming
that the virtual environment you meant is Colab which I can only test on).

It seems that the problem only exists in the tensorflow-gpu 2.2 for Windows.

Thanks!
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Jul 13, 2020 at 5:12 AM saikumarchalla ***@***.***&gt; wrote:
 @tom970 &lt;https://github.com/tom970&gt; Could you please try running this
 code on virtual environment and let us know if you are facing the same
 issue.Thanks!

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#41304 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQH3KMP2IEL34PEVVTZSLALR3L2ZNANCNFSM4OXE3UOQ&gt;
 .



		</comment>
		<comment id='4' author='tom970' date='2020-07-20T21:30:51Z'>
		&lt;denchmark-link:https://github.com/tom970&gt;@tom970&lt;/denchmark-link&gt;
 Can you please check with  and let us know whether the issue persists with the newer TF version? Is this an issue with  or with  also? Thanks!
		</comment>
		<comment id='5' author='tom970' date='2020-07-22T19:25:34Z'>
		Hi
I checked tf-nightly-gpu (2.4.0-dev20200721) and tencorflow-cpu 2.2.  The same error came out from both of them. 
Thanks,
		</comment>
		<comment id='6' author='tom970' date='2020-07-22T19:26:05Z'>
		Hi ,

I checked tf-nightly-gpu (2.4.0-dev20200721) and tencorflow-cpu 2.2.  The
same error came out from both of them.

Thanks,
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Jul 20, 2020 at 2:31 PM Vishnuvardhan Janapati &lt; ***@***.***&gt; wrote:
 @tom970 &lt;https://github.com/tom970&gt; Can you please check with tf-nightly
 and let us know whether the issue persists with the newer TF version? Is
 this an issue with tensorflow-gpu 2.2 or with cpu also? Thanks!

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#41304 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQH3KML4O4N2ZD2E6FUHBSDR4SZR5ANCNFSM4OXE3UOQ&gt;
 .



		</comment>
		<comment id='7' author='tom970' date='2020-07-22T20:10:21Z'>
		&lt;denchmark-link:https://github.com/tom970&gt;@tom970&lt;/denchmark-link&gt;
 I ran your code in my Windows10 without any issues.. Output is as follows. Please note that mine is  (don't have gpu). Thanks!
&lt;denchmark-code&gt;2020-07-22 13:06:15.442389: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-07-22 13:06:15.452911: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2364545cca0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-22 13:06:15.458004: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
bytes_list {
  value: "test_string"
}

bytes_list {
  value: "test_bytes"
}

float_list {
  value: 2.7182817459106445
}

int64_list {
  value: 1
}

int64_list {
  value: 1
}

tf.Tensor(False, shape=(), dtype=bool)
tf.Tensor(0, shape=(), dtype=int32)
tf.Tensor(b'cat', shape=(), dtype=string)
tf.Tensor(-0.3667049183424323, shape=(), dtype=float64)
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xbf\xc0\xbb\xbe'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xaa\x81x&gt;'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04a\x91c\xbf'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x01\n\x13\n\x08feature2\x12\x07\n\x05\n\x03dog\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04A\x81K\xbf'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nS\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x03\n\x15\n\x08feature2\x12\t\n\x07\n\x05horse\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xb8\xd5\x80\xbf'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nS\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x03\n\x15\n\x08feature2\x12\t\n\x07\n\x05horse\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\x0b\x10R\xbf'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xf4\x0eV?'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04:j\x12\xbf'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xb1\x93@?'&gt;
&lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x041\x12\x93\xbe'&gt;
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.3667049&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.24268213&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.88893706&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'dog'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.794941&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=3&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'horse'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-1.0065222&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=3&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'horse'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.8205573&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=4&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'goat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.83616567&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.5719334&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=4&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'goat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.7522536&gt;}
{'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.28724816&gt;}
features {
  feature {
    key: "feature0"
    value {
      int64_list {
        value: 0
      }
    }
  }
  feature {
    key: "feature1"
    value {
      int64_list {
        value: 0
      }
    }
  }
  feature {
    key: "feature2"
    value {
      bytes_list {
        value: "cat"
      }
    }
  }
  feature {
    key: "feature3"
    value {
      float_list {
        value: -0.36670491099357605
      }
    }
  }
}

features {
  feature {
    key: "depth"
    value {
      int64_list {
        value: 3
      }
    }
  }
  feature {
    key: "height"
    value {
      int64_list {
        value: 213
      }
...

&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='tom970' date='2020-07-22T22:45:27Z'>
		It seems that you didn't run the same code as mine since I have two printouts, "result_without_py_function" and "rusult_with_py_function" for comparison,  but I didn't find them in your outputs. Maybe I missed something.
By the way, what version of tensorflow-cpu did you run? I tested on tensoflow-cpu-2.2 and still have the issue. Here is the output:
2020-07-22 15:32:33.724032: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-07-22 15:32:33.729841: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x275ce3b9790 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-22 15:32:33.730128: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
result_without_py_function = b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?'
2020-07-22 15:32:33.815474: W tensorflow/core/framework/op_kernel.cc:1741] Invalid argument: TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
Traceback (most recent call last):
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 42, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py", line 241, in call
return func(device, token, args)
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py", line 130, in call
ret = self._func(*args)
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\autograph\impl\api.py", line 309, in wrapper
return func(*args, **kwargs)
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line 20, in serialize_example
'feature0': _int64_feature(feature0),
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line 15, in _int64_feature
return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\python_message.py", line 542, in init
copy.extend(field_value)
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py", line 282, in extend
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py", line 282, in 
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\type_checkers.py", line 171, in CheckValue
raise TypeError(message)
TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
Traceback (most recent call last):
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 42, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line 40, in 
result_with_py_function = tf_serialize_example(False, 4, b'goat', 0.9876)
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line 30, in tf_serialize_example
tf_string = tf.py_function(
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py", line 454, in eager_py_func
return _internal_py_func(
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py", line 336, in _internal_py_func
result = gen_script_ops.eager_py_func(
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 49, in eager_py_func
return eager_py_func_eager_fallback(
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 98, in eager_py_func_eager_fallback
_result = _execute.execute(b"EagerPyFunc", len(Tout), inputs=_inputs_flat,
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InvalidArgumentError: TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
Traceback (most recent call last):
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py", line 42, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py", line 241, in call
return func(device, token, args)
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py", line 130, in call
ret = self._func(*args)
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\autograph\impl\api.py", line 309, in wrapper
return func(*args, **kwargs)
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line 20, in serialize_example
'feature0': _int64_feature(feature0),
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line 15, in _int64_feature
return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\python_message.py", line 542, in init
copy.extend(field_value)
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py", line 282, in extend
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py", line 282, in 
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]
File "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\type_checkers.py", line 171, in CheckValue
raise TypeError(message)
TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of: (&lt;class 'int'&gt;,)
[Op:EagerPyFunc]
Process finished with exit code 1
		</comment>
		<comment id='9' author='tom970' date='2020-07-22T22:47:33Z'>
		It seems that you didn't run the same code as mine since I have two
printouts, "result_without_py_function" and "rusult_with_py_function" for
comparison, but I didn't find them in your outputs. Maybe I missed
something.

By the way, what version of tensorflow-cpu did you run? I tested on
tensoflow-cpu-2.2 and still have the issue. Here is the output:

2020-07-22 15:32:33.724032: I
tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports
instructions that this TensorFlow binary was not compiled to use: AVX2
2020-07-22 15:32:33.729841: I
tensorflow/compiler/xla/service/service.cc:168] XLA service 0x275ce3b9790
initialized for platform Host (this does not guarantee that XLA will be
used). Devices:
2020-07-22 15:32:33.730128: I
tensorflow/compiler/xla/service/service.cc:176] StreamExecutor device (0):
Host, Default Version
result_without_py_function =
b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?'
2020-07-22 15:32:33.815474: W tensorflow/core/framework/op_kernel.cc:1741]
Invalid argument: TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt;
has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but
expected one of: (&lt;class 'int'&gt;,)
Traceback (most recent call last):

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
line 42, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(

tensorflow.python.eager.core._FallbackException: This function does not
handle the case of the path where all inputs are not already EagerTensors.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
line 241, in call
return func(device, token, args)

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
line 130, in call
ret = self._func(*args)

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\autograph\impl\api.py",
line 309, in wrapper
return func(*args, **kwargs)

File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
20, in serialize_example
'feature0': _int64_feature(feature0),

File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
15, in _int64_feature
return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\python_message.py",
line 542, in init
copy.extend(field_value)

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
line 282, in extend
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
line 282, in
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\type_checkers.py",
line 171, in CheckValue
raise TypeError(message)

TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class
'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of:
(&lt;class 'int'&gt;,)

Traceback (most recent call last):
File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
line 42, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(
tensorflow.python.eager.core._FallbackException: This function does not
handle the case of the path where all inputs are not already EagerTensors.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
40, in
result_with_py_function = tf_serialize_example(False, 4, b'goat', 0.9876)
File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
30, in tf_serialize_example
tf_string = tf.py_function(
File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
line 454, in eager_py_func
return _internal_py_func(
File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
line 336, in _internal_py_func
result = gen_script_ops.eager_py_func(
File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
line 49, in eager_py_func
return eager_py_func_eager_fallback(
File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
line 98, in eager_py_func_eager_fallback
_result = _execute.execute(b"EagerPyFunc", len(Tout), inputs=_inputs_flat,
File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\eager\execute.py",
line 59, in quick_execute
tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InvalidArgumentError: TypeError:
&lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class
'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of:
(&lt;class 'int'&gt;,)
Traceback (most recent call last):

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
line 42, in eager_py_func
_result = pywrap_tfe.TFE_Py_FastPathExecute(

tensorflow.python.eager.core._FallbackException: This function does not
handle the case of the path where all inputs are not already EagerTensors.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
line 241, in call
return func(device, token, args)

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
line 130, in call
ret = self._func(*args)

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\autograph\impl\api.py",
line 309, in wrapper
return func(*args, **kwargs)

File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
20, in serialize_example
'feature0': _int64_feature(feature0),

File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
15, in _int64_feature
return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\python_message.py",
line 542, in init
copy.extend(field_value)

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
line 282, in extend
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
line 282, in
new_values = [self._type_checker.CheckValue(elem) for elem in elem_seq_iter]

File
"F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\type_checkers.py",
line 171, in CheckValue
raise TypeError(message)

TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class
'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of:
(&lt;class 'int'&gt;,)

[Op:EagerPyFunc]

Process finished with exit code 1
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Wed, Jul 22, 2020 at 1:10 PM Vishnu ***@***.***&gt; wrote:
 @tom970 &lt;https://github.com/tom970&gt; I ran your code in my Windows10
 without any issues.. Output is as follows. Please note that mine is
 tensorflow-cpu (don't have gpu). Thanks!

 2020-07-22 13:06:15.442389: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
 2020-07-22 13:06:15.452911: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2364545cca0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
 2020-07-22 13:06:15.458004: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
 bytes_list {
   value: "test_string"
 }

 bytes_list {
   value: "test_bytes"
 }

 float_list {
   value: 2.7182817459106445
 }

 int64_list {
   value: 1
 }

 int64_list {
   value: 1
 }

 tf.Tensor(False, shape=(), dtype=bool)
 tf.Tensor(0, shape=(), dtype=int32)
 tf.Tensor(b'cat', shape=(), dtype=string)
 tf.Tensor(-0.3667049183424323, shape=(), dtype=float64)
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xbf\xc0\xbb\xbe'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xaa\x81x&gt;'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04a\x91c\xbf'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x01\n\x13\n\x08feature2\x12\x07\n\x05\n\x03dog\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04A\x81K\xbf'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nS\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x03\n\x15\n\x08feature2\x12\t\n\x07\n\x05horse\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xb8\xd5\x80\xbf'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nS\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x03\n\x15\n\x08feature2\x12\t\n\x07\n\x05horse\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\x0b\x10R\xbf'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xf4\x0eV?'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04:j\x12\xbf'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xb1\x93@?'&gt;
 &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x041\x12\x93\xbe'&gt;
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.3667049&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.24268213&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.88893706&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'dog'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.794941&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=3&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'horse'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-1.0065222&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=3&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'horse'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.8205573&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=4&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'goat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.83616567&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.5719334&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=4&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'goat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.7522536&gt;}
 {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.28724816&gt;}
 features {
   feature {
     key: "feature0"
     value {
       int64_list {
         value: 0
       }
     }
   }
   feature {
     key: "feature1"
     value {
       int64_list {
         value: 0
       }
     }
   }
   feature {
     key: "feature2"
     value {
       bytes_list {
         value: "cat"
       }
     }
   }
   feature {
     key: "feature3"
     value {
       float_list {
         value: -0.36670491099357605
       }
     }
   }
 }

 features {
   feature {
     key: "depth"
     value {
       int64_list {
         value: 3
       }
     }
   }
   feature {
     key: "height"
     value {
       int64_list {
         value: 213
       }
 ...


 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#41304 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQH3KMI5QOOLCYLEPDDTSR3R45BUFANCNFSM4OXE3UOQ&gt;
 .



		</comment>
		<comment id='10' author='tom970' date='2020-07-23T06:34:48Z'>
		I just fresh installed the tensorflow-cpu 2.2.0 into another PC with windows 10 and tested the code. The same error came out.
		</comment>
		<comment id='11' author='tom970' date='2020-07-23T16:40:16Z'>
		I just fresh installed the tensorflow-cpu 2.2.0 into another PC with
windows 10 and tested the code. The same error came out.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Wed, Jul 22, 2020 at 3:51 PM Tom Huang ***@***.***&gt; wrote:
 It seems that you didn't run the same code as mine since I have two
 printouts, "result_without_py_function" and "rusult_with_py_function" for
 comparison, but I didn't find them in your outputs. Maybe I missed
 something.

 By the way, what version of tensorflow-cpu did you run? I tested on
 tensoflow-cpu-2.2 and still have the issue. Here is the output:

 2020-07-22 15:32:33.724032: I
 tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports
 instructions that this TensorFlow binary was not compiled to use: AVX2
 2020-07-22 15:32:33.729841: I
 tensorflow/compiler/xla/service/service.cc:168] XLA service 0x275ce3b9790
 initialized for platform Host (this does not guarantee that XLA will be
 used). Devices:
 2020-07-22 15:32:33.730128: I
 tensorflow/compiler/xla/service/service.cc:176] StreamExecutor device (0):
 Host, Default Version
 result_without_py_function =
 b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?'
 2020-07-22 15:32:33.815474: W tensorflow/core/framework/op_kernel.cc:1741]
 Invalid argument: TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt;
 has type &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;, but
 expected one of: (&lt;class 'int'&gt;,)
 Traceback (most recent call last):

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
 line 42, in eager_py_func
 _result = pywrap_tfe.TFE_Py_FastPathExecute(

 tensorflow.python.eager.core._FallbackException: This function does not
 handle the case of the path where all inputs are not already EagerTensors.

 During handling of the above exception, another exception occurred:

 Traceback (most recent call last):

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
 line 241, in call
 return func(device, token, args)

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
 line 130, in call
 ret = self._func(*args)

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\autograph\impl\api.py",
 line 309, in wrapper
 return func(*args, **kwargs)

 File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
 20, in serialize_example
 'feature0': _int64_feature(feature0),

 File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
 15, in _int64_feature
 return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\python_message.py",
 line 542, in init
 copy.extend(field_value)

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
 line 282, in extend
 new_values = [self._type_checker.CheckValue(elem) for elem in
 elem_seq_iter]

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
 line 282, in
 new_values = [self._type_checker.CheckValue(elem) for elem in
 elem_seq_iter]

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\type_checkers.py",
 line 171, in CheckValue
 raise TypeError(message)

 TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class
 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of:
 (&lt;class 'int'&gt;,)

 Traceback (most recent call last):
 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
 line 42, in eager_py_func
 _result = pywrap_tfe.TFE_Py_FastPathExecute(
 tensorflow.python.eager.core._FallbackException: This function does not
 handle the case of the path where all inputs are not already EagerTensors.

 During handling of the above exception, another exception occurred:

 Traceback (most recent call last):
 File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
 40, in
 result_with_py_function = tf_serialize_example(False, 4, b'goat', 0.9876)
 File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
 30, in tf_serialize_example
 tf_string = tf.py_function(
 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
 line 454, in eager_py_func
 return _internal_py_func(
 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
 line 336, in _internal_py_func
 result = gen_script_ops.eager_py_func(
 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
 line 49, in eager_py_func
 return eager_py_func_eager_fallback(
 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
 line 98, in eager_py_func_eager_fallback
 _result = _execute.execute(b"EagerPyFunc", len(Tout), inputs=_inputs_flat,
 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\eager\execute.py",
 line 59, in quick_execute
 tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
 tensorflow.python.framework.errors_impl.InvalidArgumentError: TypeError:
 &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class
 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of:
 (&lt;class 'int'&gt;,)
 Traceback (most recent call last):

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\gen_script_ops.py",
 line 42, in eager_py_func
 _result = pywrap_tfe.TFE_Py_FastPathExecute(

 tensorflow.python.eager.core._FallbackException: This function does not
 handle the case of the path where all inputs are not already EagerTensors.

 During handling of the above exception, another exception occurred:

 Traceback (most recent call last):

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
 line 241, in call
 return func(device, token, args)

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\ops\script_ops.py",
 line 130, in call
 ret = self._func(*args)

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\tensorflow\python\autograph\impl\api.py",
 line 309, in wrapper
 return func(*args, **kwargs)

 File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
 20, in serialize_example
 'feature0': _int64_feature(feature0),

 File "F:/python_projects/test_tesorflow_cpu/tf_py_function_test.py", line
 15, in _int64_feature
 return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\python_message.py",
 line 542, in init
 copy.extend(field_value)

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
 line 282, in extend
 new_values = [self._type_checker.CheckValue(elem) for elem in
 elem_seq_iter]

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\containers.py",
 line 282, in
 new_values = [self._type_checker.CheckValue(elem) for elem in
 elem_seq_iter]

 File
 "F:\python_projects\test_tesorflow_cpu\venv\lib\site-packages\google\protobuf\internal\type_checkers.py",
 line 171, in CheckValue
 raise TypeError(message)

 TypeError: &lt;tf.Tensor: shape=(), dtype=bool, numpy=False&gt; has type &lt;class
 'tensorflow.python.framework.ops.EagerTensor'&gt;, but expected one of:
 (&lt;class 'int'&gt;,)

 [Op:EagerPyFunc]

 Process finished with exit code 1

 On Wed, Jul 22, 2020 at 1:10 PM Vishnu ***@***.***&gt; wrote:

&gt; @tom970 &lt;https://github.com/tom970&gt; I ran your code in my Windows10
&gt; without any issues.. Output is as follows. Please note that mine is
&gt; tensorflow-cpu (don't have gpu). Thanks!
&gt;
&gt; 2020-07-22 13:06:15.442389: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
&gt; 2020-07-22 13:06:15.452911: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2364545cca0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
&gt; 2020-07-22 13:06:15.458004: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
&gt; bytes_list {
&gt;   value: "test_string"
&gt; }
&gt;
&gt; bytes_list {
&gt;   value: "test_bytes"
&gt; }
&gt;
&gt; float_list {
&gt;   value: 2.7182817459106445
&gt; }
&gt;
&gt; int64_list {
&gt;   value: 1
&gt; }
&gt;
&gt; int64_list {
&gt;   value: 1
&gt; }
&gt;
&gt; tf.Tensor(False, shape=(), dtype=bool)
&gt; tf.Tensor(0, shape=(), dtype=int32)
&gt; tf.Tensor(b'cat', shape=(), dtype=string)
&gt; tf.Tensor(-0.3667049183424323, shape=(), dtype=float64)
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xbf\xc0\xbb\xbe'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xaa\x81x&gt;'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04a\x91c\xbf'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x01\n\x13\n\x08feature2\x12\x07\n\x05\n\x03dog\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04A\x81K\xbf'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nS\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x03\n\x15\n\x08feature2\x12\t\n\x07\n\x05horse\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xb8\xd5\x80\xbf'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nS\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x03\n\x15\n\x08feature2\x12\t\n\x07\n\x05horse\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\x0b\x10R\xbf'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xf4\x0eV?'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04:j\x12\xbf'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x01\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04\xb1\x93@?'&gt;
&gt; &lt;tf.Tensor: shape=(), dtype=string, numpy=b'\nQ\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x00\n\x13\n\x08feature2\x12\x07\n\x05\n\x03cat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x041\x12\x93\xbe'&gt;
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.3667049&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.24268213&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.88893706&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'dog'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.794941&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=3&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'horse'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-1.0065222&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=3&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'horse'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.8205573&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=4&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'goat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.83616567&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.5719334&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=1&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=4&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'goat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.7522536&gt;}
&gt; {'feature0': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature1': &lt;tf.Tensor: shape=(), dtype=int64, numpy=0&gt;, 'feature2': &lt;tf.Tensor: shape=(), dtype=string, numpy=b'cat'&gt;, 'feature3': &lt;tf.Tensor: shape=(), dtype=float32, numpy=-0.28724816&gt;}
&gt; features {
&gt;   feature {
&gt;     key: "feature0"
&gt;     value {
&gt;       int64_list {
&gt;         value: 0
&gt;       }
&gt;     }
&gt;   }
&gt;   feature {
&gt;     key: "feature1"
&gt;     value {
&gt;       int64_list {
&gt;         value: 0
&gt;       }
&gt;     }
&gt;   }
&gt;   feature {
&gt;     key: "feature2"
&gt;     value {
&gt;       bytes_list {
&gt;         value: "cat"
&gt;       }
&gt;     }
&gt;   }
&gt;   feature {
&gt;     key: "feature3"
&gt;     value {
&gt;       float_list {
&gt;         value: -0.36670491099357605
&gt;       }
&gt;     }
&gt;   }
&gt; }
&gt;
&gt; features {
&gt;   feature {
&gt;     key: "depth"
&gt;     value {
&gt;       int64_list {
&gt;         value: 3
&gt;       }
&gt;     }
&gt;   }
&gt;   feature {
&gt;     key: "height"
&gt;     value {
&gt;       int64_list {
&gt;         value: 213
&gt;       }
&gt; ...
&gt;
&gt;
&gt; —
&gt; You are receiving this because you were mentioned.
&gt; Reply to this email directly, view it on GitHub
&gt; &lt;#41304 (comment)&gt;,
&gt; or unsubscribe
&gt; &lt;https://github.com/notifications/unsubscribe-auth/AQH3KMI5QOOLCYLEPDDTSR3R45BUFANCNFSM4OXE3UOQ&gt;
&gt; .
&gt;



		</comment>
		<comment id='12' author='tom970' date='2020-07-23T17:36:43Z'>
		I just ran one more time in my windows10 and I ran both printouts. Please check the output below.
&lt;denchmark-code&gt;2020-07-23 10:33:37.248345: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-07-23 10:33:37.281316: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x1e89bc25120 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-23 10:33:37.286097: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
result_without_py_function = b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?'
result_with_py_function= tf.Tensor(b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?', shape=(), dtype=string)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='tom970' date='2020-07-23T18:32:18Z'>
		What version of tensorflow-cpu are you using?
I fresh installed python and tensorflow-cpu in another machine and the issue still there.
Here is my environment:
OS: Windows10 64 bit
Python: 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:57:54) [MSC v.1924 64 bit (AMD64)]
Tensorflow-cpu: 2.2.0
		</comment>
		<comment id='14' author='tom970' date='2020-07-23T18:33:28Z'>
		What version of tensorflow-cpu are you using?
I fresh installed python and tensorflow-cpu in another machine and the
issue still there.
Here is my environment:
OS: Windows10 64 bit
Python: 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:57:54) [MSC v.1924 64
bit (AMD64)]
Tensorflow-cpu: 2.2.0
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Jul 23, 2020 at 10:37 AM Vishnu ***@***.***&gt; wrote:
 I just ran one more time in my windows10 and I ran both printouts. Please
 check the output below.

 2020-07-23 10:33:37.248345: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
 2020-07-23 10:33:37.281316: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x1e89bc25120 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
 2020-07-23 10:33:37.286097: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
 result_without_py_function = b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?'
 result_with_py_function= tf.Tensor(b'\nR\n\x11\n\x08feature0\x12\x05\x1a\x03\n\x01\x00\n\x11\n\x08feature1\x12\x05\x1a\x03\n\x01\x04\n\x14\n\x08feature2\x12\x08\n\x06\n\x04goat\n\x14\n\x08feature3\x12\x08\x12\x06\n\x04[\xd3|?', shape=(), dtype=string)

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#41304 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQH3KMMEO67G34MN4R3IIF3R5BYMBANCNFSM4OXE3UOQ&gt;
 .



		</comment>
		<comment id='15' author='tom970' date='2020-07-23T19:28:07Z'>
		Mine is also tensoflow-cpu, TF2.2, Window10 64bit, Python 3.6,6. Thanks!
		</comment>
		<comment id='16' author='tom970' date='2020-07-24T19:07:02Z'>
		Thanks for your testing. I did more testing with different versions of Python including your Python 3.6.6. And finally narrowed down the issue. Here are my test results for  tensorflow-cpu-2.2.0:
Python 3.6.6 --&gt; worked (your setting)
Python 3.7.6 --&gt; worked
Python 3.7.8 --&gt; worked (latest Python 3.7)
Python 3.8.0 --&gt; failed (first Python 3.8)
Python 3.8.3 --&gt; failed
Python 3.8.5 --&gt; failed (latest Python 3.8)
I also tested on tesnorflow-gpu-2.2.0
Python 3.7.8 --&gt; worked
Python 3.8.3 --&gt; failed
Obviously this issue was introduced from Python 3.8.0.
But in Tensorflow official web page &lt;denchmark-link:https://www.tensorflow.org/install/pip&gt;https://www.tensorflow.org/install/pip&lt;/denchmark-link&gt;

The "System requirements" says "Python 3.8 support requires TensorFlow 2.2 or later." .
So I believed that Tensorflow 2.2 requires Python 3.8 and then installed it.
However this seems opposite for this issue. Python 3.8 doesn't work while 3.7 and 3.6 works.
At this moment, I can use Python 3.7 to walk around this issue, but not sure something else in TF2.2 requires Python 3.8.
Thanks,
		</comment>
		<comment id='17' author='tom970' date='2020-07-24T19:07:48Z'>
		Thanks for your testing. I did more testing with different versions of
Python including your Python 3.6.6. And finally narrowed down the issue.
Here are my test results for  tensorflow-cpu-2.2.0:
Python 3.6.6 --&gt; worked (your setting)
Python 3.7.6 --&gt; worked
Python 3.7.8 --&gt; worked (latest Python 3.7)
Python 3.8.0 --&gt; failed (first Python 3.8)
Python 3.8.3 --&gt; failed
Python 3.8.5 --&gt; failed (latest Python 3.8)

I also tested on tesnorflow-gpu-2.2.0
Python 3.7.8 --&gt; worked
Python 3.8.3 --&gt; failed

Obviously this issue was introduced from Python 3.8.0.

But in Tensorflow official web page &lt;denchmark-link:https://www.tensorflow.org/install/pip&gt;https://www.tensorflow.org/install/pip&lt;/denchmark-link&gt;

The "System requirements" says "Python 3.8 support requires TensorFlow 2.2
or later." .
So I believed that Tensorflow 2.2 requires Python 3.8 and then installed it.
However this seems opposite for this issue. Python 3.8 doesn't work while
3.7 and 3.6 works.
At this moment, I can use Python 3.7 to walk around this issue, but not
sure something else in TF2.2 requires Python 3.8.

Thanks,
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Jul 23, 2020 at 12:28 PM Vishnu ***@***.***&gt; wrote:
 Mine is also tensoflow-cpu, TF2.2, Window10 64bit, Python 3.6,6. Thanks!

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#41304 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQH3KMMGVLLOFH2ACGE7C4TR5CFNXANCNFSM4OXE3UOQ&gt;
 .



		</comment>
		<comment id='18' author='tom970' date='2020-07-24T19:49:30Z'>
		&lt;denchmark-link:https://github.com/tom970&gt;@tom970&lt;/denchmark-link&gt;
 Thanks for testing different version. Is this problem related to this particular code or any other code also fails when Python3.8 is used? Can you please test any simple tutorial on TF website with Python 3.8 (cpu and gpu)? Thanks!
		</comment>
		<comment id='19' author='tom970' date='2020-07-24T20:20:56Z'>
		This problem is only related to "tf.py_function" as I mentioned in the title. So far I didn't see other issue related to Python3.8 when I ran simple tutorials on TF website.
		</comment>
		<comment id='20' author='tom970' date='2020-07-24T20:21:54Z'>
		This problem is only related to "tf.py_function" as I mentioned in the
title. So far I didn't see other issue related to Python3.8 when I ran
simple tutorials on TF website.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Fri, Jul 24, 2020 at 12:49 PM Vishnuvardhan Janapati &lt; ***@***.***&gt; wrote:
 @tom970 &lt;https://github.com/tom970&gt; Thanks for testing different version.
 Is this problem related to this particular code or any other code also
 fails when Python3.8 is used? Can you please test any simple tutorial on TF
 website with Python 3.8 (cpu and gpu)? Thanks!

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#41304 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQH3KMKVC4BOSRAUQZZRVKDR5HQVZANCNFSM4OXE3UOQ&gt;
 .



		</comment>
		<comment id='21' author='tom970' date='2020-07-27T17:40:59Z'>
		For python 3.8, does this issue only reproduce on Windows, or is this a problem for ubuntu, mac os as well?
		</comment>
		<comment id='22' author='tom970' date='2020-07-27T21:37:51Z'>
		I don't know if the issue is on linux or mac as well since I only have
Windows
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Jul 27, 2020 at 10:41 AM Rohan Jain ***@***.***&gt; wrote:
 For python 3.8, does this issue only reproduce on Windows, or is this a
 problem for ubuntu, mac os as well?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#41304 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQH3KMNRMMYL54NB4ALARI3R5W335ANCNFSM4OXE3UOQ&gt;
 .



		</comment>
		<comment id='23' author='tom970' date='2020-10-26T09:21:37Z'>
		Okay I ran this on a mac and ubuntu machine and they both seem to succeed (tensorflow 2.3.1) [with python 3.8]
		</comment>
		<comment id='24' author='tom970' date='2020-11-25T02:04:17Z'>
		&lt;denchmark-link:https://github.com/tom970&gt;@tom970&lt;/denchmark-link&gt;
 Can you please check with recent  and let us know how it progresses. Thanks!
		</comment>
		<comment id='25' author='tom970' date='2020-12-02T02:51:03Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='26' author='tom970' date='2020-12-09T03:27:52Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='27' author='tom970' date='2020-12-09T03:27:54Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41304&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41304&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>