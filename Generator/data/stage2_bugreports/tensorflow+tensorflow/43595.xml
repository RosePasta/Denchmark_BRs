<bug id='43595' author='sunzhe09' open_date='2020-09-27T06:55:52Z' closed_time='2020-11-07T09:16:31Z'>
	<summary>post quant keras model with  UpSample2D ，after post-quantized  get a false output shape</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
TensorFlow installed from (source or binary):pip
TensorFlow version (or github SHA if from source):2.3.0

Command used to run the converter or code if you’re using the Python API
If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;convert=tf.lite.TFLiteConvert.from_keras_model(model)
convert.target_ops=[tf.lite.OpsSet.TFLITE_BUILTINS_INT8]
convert.optimizations=[tf.lite.Optimize.DEFAULT]
convert.representative
&lt;/denchmark-code&gt;

The output from the converter invocation
&lt;denchmark-code&gt;got a false tflite model,ps: the up  layer is 1x10x10x64 with an UpSample2D in the tflite i got a 1x1x1x64 output
&lt;/denchmark-code&gt;

Also, please include a link to the saved model or GraphDef
&lt;denchmark-code&gt;# Put link here or attach to the issue.
&lt;/denchmark-code&gt;

Failure details
If the conversion is successful, but the generated model is wrong,
state what is wrong:

Producing wrong results and/or decrease in accuracy
Producing correct results, but the model is slower than expected (model generated from old converter)

RNN conversion support
If converting TF RNN to TFLite fused RNN ops, please prefix [RNN] in the title.
Any other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='sunzhe09' date='2020-09-27T15:29:44Z'>
		&lt;denchmark-link:https://github.com/sunzhe09&gt;@sunzhe09&lt;/denchmark-link&gt;

Please share stand alone code to replicate issue faced along with error logs, or if possible share a colab gist with the issue reported.
		</comment>
		<comment id='2' author='sunzhe09' date='2020-09-28T01:56:07Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/30410113/94382749-72dd4200-0170-11eb-9a6f-140c8302f291.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  I don't get an error,when I check my quantized tflite model,I found the UpSample2D resized make a false output;Here is my model code:
&lt;denchmark-link:https://user-images.githubusercontent.com/30410113/94382848-d0718e80-0170-11eb-9d6b-1367d0bc727d.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='sunzhe09' date='2020-09-28T23:49:55Z'>
		&lt;denchmark-link:https://github.com/sunzhe09&gt;@sunzhe09&lt;/denchmark-link&gt;
 Can you please share a simple standalone code to reproduce the issue? Did you check whether the model (before conversion) upsampling as you are expecting? Thanks!
		</comment>
		<comment id='4' author='sunzhe09' date='2020-09-29T02:05:26Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/30410113/94504138-ae444300-023a-11eb-815e-6ff926881cc1.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I have check my training model summary,the Upsample2D is right shape;here is my  produce tflite code：
&lt;denchmark-code&gt;    f=open("./vallabels.txt", 'r')
    filenames=f.readlines()

    def representative_dataset_gen():
        for line in filenames:
            # Get sample input data as a numpy array in a method of your choosing.
            line=line.strip()
            if 'str' not in str(type(line)):
                line = line.decode()
            image_path = line.split()[0]
        
            image=cv2.imread(image_path)
            image=cv2.resize(image,(320,320))
            image=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
            image=np.expand_dims(image,axis=-1)
            image=np.expand_dims(image,axis=0).astype(np.float32)/255.
            print(image_path)
            yield [image]
    
    converter = tf.lite.TFLiteConverter.from_keras_model(model)
    converter.target_ops = [tf.lite.OpsSet.TFLITE_BUILTINS_INT8]
    converter.optimizations = [tf.lite.Optimize.DEFAULT]
    converter.representative_dataset = tf.lite.RepresentativeDataset(
        representative_dataset_gen) 
    converter.inference_input_type = tf.int8
    converter.inference_output_type = tf.int8
    tflite_model_quant = converter.convert()
    import pathlib
    tflite_model_quant_file = pathlib.Path("./")/"test.tflite"
    tflite_model_quant_file.write_bytes(tflite_model_quant)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='sunzhe09' date='2020-10-13T06:27:00Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
  any update？
		</comment>
		<comment id='6' author='sunzhe09' date='2020-11-07T09:16:31Z'>
		within new model-optimizer,the bug has been fixed;
		</comment>
		<comment id='7' author='sunzhe09' date='2020-11-07T09:16:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43595&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43595&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>