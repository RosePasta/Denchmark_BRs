<bug id='24430' author='lgeo3' open_date='2018-12-18T15:36:57Z' closed_time='2019-12-31T23:24:54Z'>
	<summary>tf.nn.depthwise_conv2d issue with float16 =&amp;gt; nan output</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): binary (using docker image tensorflow/tensorflow:1.12.0-gpu)
TensorFlow version (use command below):  ('v1.12.0-0-ga6d8ffae09', '1.12.0')
Python version: 2.7.12
CUDA/cuDNN version: cuda 9.0, cudnn 7.2.1
GPU model and memory: nvidia Tesla V100-DGXS-16GB

Describe the current behavior
tf.nn.depthwise_conv2d_native returns nan when used with float16. Multiple call to same sess.run(op) return different results.
Describe the expected behavior
No nan in the output. Similar value when running same op multiple times.
Code to reproduce the issue
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf

with tf.Session() as sess:
    tf_input1 = tf.ones(shape=[1, 22, 28, 28], dtype=tf.float16) / 5.0
    tf_input2 = tf.ones(shape=[7, 7, 22, 1], dtype=tf.float16) / 10.0

    mat = tf.random.uniform( [4096,4096], minval=0, maxval=None, dtype=tf.float16, seed=0, name=None)
    res_mat = tf.matmul(mat, mat)
    #res_mat = tf.no_op()  # un-comment this line and the issue dissapears

    sess.run(res_mat)
    res = tf.nn.depthwise_conv2d_native(tf_input1, tf_input2, strides=[1, 1, 1, 1], padding="SAME", data_format='NCHW')
    v1 = sess.run(res)
    sess.run(res_mat)

    v2 = sess.run(res)
    if np.isnan(v2).any():
       print("issue: nan detected")
    np.testing.assert_equal(v1, v2)
&lt;/denchmark-code&gt;

Other info / logs
Issue occurs only on nvidia hardward that support float16 operation (on cpu no issue)
replacing res_mat with tf.no_op() =&gt; v1 and v2 are equal without nan
Using float32 =&gt; no nan
In my understanding the float16 version of the op does not reinitialized some buffer content.
	</description>
	<comments>
		<comment id='1' author='lgeo3' date='2019-02-15T22:32:11Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
, I'm not familiar with the inner workings of this function. Can you find someone more knowledgeable to check it out, please?
		</comment>
		<comment id='2' author='lgeo3' date='2019-02-19T18:37:23Z'>
		similar, I cannot really comment on this. Please reroute.
		</comment>
		<comment id='3' author='lgeo3' date='2019-04-03T00:10:58Z'>
		Assigning to &lt;denchmark-link:https://github.com/chsigg&gt;@chsigg&lt;/denchmark-link&gt;
, as I am not familiar with the depthwise conv code.
		</comment>
		<comment id='4' author='lgeo3' date='2019-12-31T23:24:53Z'>
		&lt;denchmark-link:https://github.com/lgeo3&gt;@lgeo3&lt;/denchmark-link&gt;
 Your reproducer seems to work fine with 1.14 so I suspect this has already been fixed.  I'll speculatively close this issue for now, but please reopen if there is something more to do here.
		</comment>
		<comment id='5' author='lgeo3' date='2019-12-31T23:24:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/24430&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/24430&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>