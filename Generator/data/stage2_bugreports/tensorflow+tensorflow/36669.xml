<bug id='36669' author='mindis' open_date='2020-02-11T17:58:03Z' closed_time='2020-04-28T17:47:33Z'>
	<summary>Error while reading resource variable _AnonymousVar12 from Container: localhost</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): centos 7.7
TensorFlow installed from (source or binary): yes
TensorFlow version (use command below): 2.1
Python version: 3.6

Describe the current behavior
Error when trying to update tf.Variable in data.Dataset pipeline
Describe the expected behavior
No error
Code to reproduce the issue
&lt;denchmark-code&gt;ds=tf.data.Dataset.from_tensor_slices(tf.constant([[9, 10, 11, 12]]))
def update(update):
    ref = tf.Variable([1, 2, 3, 4, 5, 6, 7, 8])
    indices = tf.constant([[4], [3], [1] ,[7]])
    updated = tf.tensor_scatter_nd_update(ref, indices, update)
    return updated
ds=ds.map(update)
for i in ds:
    print(i)
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;FailedPreconditionError: {{function_node __inference_Dataset_map_update_674}} Error while reading resource variable _AnonymousVar12 from Container: localhost. This could mean that the variable was uninitialized. Not found: Resource localhost/_AnonymousVar12/N10tensorflow3VarE does not exist.
	 [[{{node TensorScatterUpdate/ReadVariableOp}}]] [Op:IteratorGetNextSync]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mindis' date='2020-02-12T06:54:13Z'>
		I have tried on colab with TF version 2.1.0, 2.2.0-dev20200211 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/1a57753e62d5a898c3f565a6e53d0434/untitled641.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='mindis' date='2020-04-03T20:04:58Z'>
		Hi I am having  a similar issue any news?
		</comment>
		<comment id='3' author='mindis' date='2020-04-03T22:47:57Z'>
		You need to put the variable outside of the user-defined function:
&lt;denchmark-code&gt;import tensorflow as tf

ds=tf.data.Dataset.from_tensor_slices(tf.constant([[9, 10, 11, 12]]))
ref = tf.Variable([1, 2, 3, 4, 5, 6, 7, 8])
def update(update):
    indices = tf.constant([[4], [3], [1] ,[7]])
    updated = tf.tensor_scatter_nd_update(ref, indices, update)
    return updated
ds=ds.map(update)
for i in ds:
    print(i)
&lt;/denchmark-code&gt;

In your example, the Python object for the variable is destroyed when the tracing of the function completes, which results in the use-after-free error in your program.
		</comment>
		<comment id='4' author='mindis' date='2020-04-28T17:47:33Z'>
		Closing - the comment above provides a solution.
		</comment>
		<comment id='5' author='mindis' date='2020-04-28T17:47:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36669&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36669&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>