<bug id='42885' author='alvaro-garcia-carrasco' open_date='2020-09-02T08:44:51Z' closed_time='2020-09-08T06:24:06Z'>
	<summary>Unexpected behaviour of tf.keras.activations.relu</summary>
	<description>
System information
TensorFlow version: v2.3.0-0-gb36436b087 2.3.0
Describe the current behavior
When passing np.nan to tf.keras.activations.relu, it returns 0.0.
This only happens when using GPU. The relu activation behaves as expected under CPU (it returns nan).
Describe the expected behavior
When passing np.nan to tf.keras.activations.relu, it should return nan.

&lt;denchmark-link:https://colab.research.google.com/drive/1FhsgStZ_3tIIC3WJrCBl3TOjtgWyn2_2?usp=sharing&gt;https://colab.research.google.com/drive/1FhsgStZ_3tIIC3WJrCBl3TOjtgWyn2_2?usp=sharing&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/47107572/91958933-4583ac80-ed08-11ea-95d2-854e631c114e.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='alvaro-garcia-carrasco' date='2020-09-02T10:24:48Z'>
		&lt;denchmark-link:https://github.com/alvaro-garcia-carrasco&gt;@alvaro-garcia-carrasco&lt;/denchmark-link&gt;

I ran the code shared on tf-nightly and face a different error, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/341f62d0d325f5863ac2e545f1177504/untitled401.ipynb&gt;gist shared&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='alvaro-garcia-carrasco' date='2020-09-02T11:15:14Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;

The bug seems to be fixed in the tf-nightly version.
I don't know how to check that I am actually running on GPU in the tf-nightly version as the code I used to check for that in tf-2.3.0 now raises an error:
assert len(tf.config.list_physical_devices('GPU')) &gt; 0
But the important thing is that in the nightly version the relu activation returns a nan when passed a nan.
		</comment>
		<comment id='3' author='alvaro-garcia-carrasco' date='2020-09-04T12:20:34Z'>
		I am not sure that It Is solved in nightly:
See &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42957&gt;#42957&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='alvaro-garcia-carrasco' date='2020-09-04T12:25:06Z'>
		Moreover I think that this could be closed as a duplicate of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/40072&gt;#40072&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='alvaro-garcia-carrasco' date='2020-09-04T12:26:28Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 It seems that you was the triager also on June mentioned ticket.
		</comment>
		<comment id='6' author='alvaro-garcia-carrasco' date='2020-09-04T12:52:28Z'>
		To confirm &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42957&gt;#42957&lt;/denchmark-link&gt;
 claim it is not solved.
&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 if you check it is just a false negative:


		</comment>
		<comment id='7' author='alvaro-garcia-carrasco' date='2020-09-04T13:13:15Z'>
		This issue is about the unexpected behaviour of tf.keras.activations.relu. This is fixed in the nightly version.
Unfortunately, the code I provided to test it contained another issue which is addressed elsewhere ( &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42957&gt;#42957&lt;/denchmark-link&gt;
). I would consider this issue closed.
		</comment>
		<comment id='8' author='alvaro-garcia-carrasco' date='2020-09-04T13:38:54Z'>
		&lt;denchmark-link:https://github.com/alvaro-garcia-carrasco&gt;@alvaro-garcia-carrasco&lt;/denchmark-link&gt;
 I don't think so. We can close this just cause it is a duplicated of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/40072&gt;#40072&lt;/denchmark-link&gt;
 already triaged by &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 in June.
I don't know if it is limited to Colab instances but you can double test yourself in your machine:
with
 pip install tf-nightly==2.4.0.dev20200818
and
  pip install tf-nightly==2.4.0.dev20200819 or newer
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

tf.debugging.set_log_device_placement(True)
sample = np.array([[np.nan]], dtype=np.float32)
x=tf.keras.activations.relu(sample).numpy()
print(x.item())
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='alvaro-garcia-carrasco' date='2020-09-08T06:24:06Z'>
		
This issue is about the unexpected behaviour of tf.keras.activations.relu. This is fixed in the nightly version.
Unfortunately, the code I provided to test it contained another issue which is addressed elsewhere ( #42957). I would consider this issue closed.

Thank you for your update, Glad the issue is resolved in tf-nightly. In case of any new error please feel free to create a new issue.
Moving this issue to closed status with confirmation.
		</comment>
		<comment id='10' author='alvaro-garcia-carrasco' date='2020-09-08T06:24:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42885&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42885&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='alvaro-garcia-carrasco' date='2020-09-08T09:05:44Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 It Is not solved
		</comment>
	</comments>
</bug>