<bug id='45986' author='tulasiram58827' open_date='2020-12-27T11:26:26Z' closed_time='2020-12-28T09:33:36Z'>
	<summary>TFLite Benchmark Binary Erroring with FastSpeech Model</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
I used &lt;denchmark-link:https://storage.googleapis.com/tensorflow-nightly-public/prod/tensorflow/release/lite/tools/nightly/latest/android_aarch64_benchmark_model_plus_flex&gt;nightly pre-built binary&lt;/denchmark-link&gt;
 from &lt;denchmark-link:https://www.tensorflow.org/lite/performance/measurement#native_benchmark_binary&gt;here&lt;/denchmark-link&gt;

FastSpeech Model used for benchmark can be downloaded from &lt;denchmark-link:https://github.com/tulasiram58827/TTS_TFLite/blob/main/models/fastspeech_quant.tflite&gt;here&lt;/denchmark-link&gt;

Error :
&lt;denchmark-code&gt;The input model file size (MB): 31.1646
 Initialized session in 13.661ms.
Running benchmark for at least 1 iterations and at least 0.5 seconds but terminate if exceeding 150 seconds.
ERROR: tensorflow/lite/kernels/expand_dims.cc:40 axis &lt;= input_dims.size was not true.
ERROR: Node number 553 (EXPAND_DIMS) failed to prepare.

ERROR: tensorflow/lite/kernels/expand_dims.cc:40 axis &lt;= input_dims.size was not true.
ERROR: Node number 553 (EXPAND_DIMS) failed to prepare.

ERROR: tensorflow/lite/kernels/expand_dims.cc:40 axis &lt;= input_dims.size was not true.
ERROR: Node number 553 (EXPAND_DIMS) failed to prepare.

ERROR: tensorflow/lite/kernels/expand_dims.cc:40 axis &lt;= input_dims.size was not true.
ERROR: Node number 553 (EXPAND_DIMS) failed to prepare.

ERROR: tensorflow/lite/kernels/expand_dims.cc:40 axis &lt;= input_dims.size was not true.
&lt;/denchmark-code&gt;

After this error I converted the model with fixed size and I got this error.
&lt;denchmark-code&gt;The input model file size (MB): 31.1646
Initialized session in 13.661ms.
Running benchmark for at least 1 iterations and at least 0.5 seconds but terminate if exceeding 150 seconds.
ERROR: tensorflow/lite/kernels/range.cc:45 (start &gt;= limit &amp;&amp; delta &lt; 0) || (start &lt;= limit &amp;&amp; delta &gt; 0) was not true.
ERROR: Node number 477 (RANGE) failed to invoke.

ERROR: tensorflow/lite/kernels/range.cc:45 (start &gt;= limit &amp;&amp; delta &lt; 0) || (start &lt;= limit &amp;&amp; delta &gt; 0) was not true.
ERROR: Node number 477 (RANGE) failed to invoke.

ERROR: tensorflow/lite/kernels/range.cc:45 (start &gt;= limit &amp;&amp; delta &lt; 0) || (start &lt;= limit &amp;&amp; delta &gt; 0) was not true.
ERROR: Node number 477 (RANGE) failed to invoke.

ERROR: tensorflow/lite/kernels/range.cc:45 (start &gt;= limit &amp;&amp; delta &lt; 0) || (start &lt;= limit &amp;&amp; delta &gt; 0) was not true.
ERROR: Node number 477 (RANGE) failed to invoke.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tulasiram58827' date='2020-12-28T03:55:31Z'>
		The benchmark tool feeds random input data to the graph. The FastSpeech model may require some valid set of data. If the model requires that, the random input data may break like the above case. Could you make sure that? &lt;denchmark-link:https://github.com/tulasiram58827&gt;@tulasiram58827&lt;/denchmark-link&gt;

+CCing &lt;denchmark-link:https://github.com/multiverse-tf&gt;@multiverse-tf&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='tulasiram58827' date='2020-12-28T04:11:27Z'>
		How to provide custom input to the model while performing benchmark?
Is there any argument? I can't see anything like that in the benchmark guide page of tensorflow docs
&lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='tulasiram58827' date='2020-12-28T04:21:24Z'>
		I don't have good knowledge on that part neither. &lt;denchmark-link:https://github.com/multiverse-tf&gt;@multiverse-tf&lt;/denchmark-link&gt;
 can provide more information regarding the benchmark tool.
		</comment>
		<comment id='4' author='tulasiram58827' date='2020-12-28T04:32:52Z'>
		
How to provide custom input to the model while performing benchmark?
Is there any argument? I can't see anything like that in the benchmark guide page of tensorflow docs

We do provide parameters (i.e. --input_layer, --input_layer_shape, --input_layer_value_range, --input_layer_value_files) to help set values of input layers. Pls refer to definitions &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/benchmark/benchmark_tflite_model.cc#L289-L307&gt;here&lt;/denchmark-link&gt;
 in the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/benchmark/benchmark_tflite_model.cc&gt;benchmark_tflite_model.cc&lt;/denchmark-link&gt;

For example, if the model has 2 inputs, one could add "--input_layer=in0,in1 --input_layer_shape=1,30:1 --input_layer_value_range=in0,0,4" when running the benchmark tool. Noting that:


one has to specify all inputs of the model for --input_layer and --input_layer_shape. However, the input name doesn't need to match that of the model. The tool simply assumes the same input tensor order that TFLite interpreter sees. Admittedly, this will be a bit inconvenient as one has to learn the exact order of input tensors but a TFLite model visualization tool (like the one TFLite provides or the Netron) will help.


In this case, the value of the 1st input tensor (i.e. in0) will be initialized randomly but limited between 0 and 4.


We will document these parameters in related docs asap.

@abattery

		</comment>
		<comment id='5' author='tulasiram58827' date='2020-12-28T08:50:28Z'>
		Thanks &lt;denchmark-link:https://github.com/multiverse-tf&gt;@multiverse-tf&lt;/denchmark-link&gt;
 your suggestions worked out. Hope they will be added to docs in future.
Also as mentioned by &lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;
 random inputs are feeded while benchmarking so I ran benchmarking iteratively 3 or 4 times. Atleast once I got the results. So I think this hack can also be used. But yeah this depends on luck :).
Thanks &lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/multiverse-tf&gt;@multiverse-tf&lt;/denchmark-link&gt;
  once again
		</comment>
		<comment id='6' author='tulasiram58827' date='2020-12-28T09:33:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45986&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45986&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>