<bug id='28029' author='abirkmanis' open_date='2019-04-22T03:24:01Z' closed_time='2019-04-23T22:29:59Z'>
	<summary>sample_weight ignored</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
"Ubuntu 16.04.5 LTS"
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
N/A
TensorFlow installed from (source or binary):
Docker image from tensorflow/tensorflow:latest-py3-jupyter
TensorFlow version (use command below):
b'v1.13.1-0-g6612da8951' 1.13.1
Python version:
3.5.2 (default, Nov 12 2018, 13:43:14)
[GCC 5.4.0 20160609]
Bazel version (if compiling from source):
N/A
GCC/Compiler version (if compiling from source):
N/A
CUDA/cuDNN version:
N/A
GPU model and memory:
N/A

Describe the current behavior
sample_weight seems to be ignored by fit(), test_on_batch(), etc.
Describe the expected behavior
sample_weight should affect the loss.
Code to reproduce the issue
&lt;denchmark-code&gt;import numpy as np
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.losses import mse

# a dummy model that just returns the inputs
i=Input(shape=(1,))
m=Model(inputs=[i],outputs=[i])
m.compile(optimizer=Adam(),loss=[mse])

# the unweighted loss should be 1
xs=np.zeros((1,1))
ys=np.ones((1,1))

# expecting loss to be weighted by sample_weight (so be 0.1 for the second test)
print(m.test_on_batch(xs,ys))
print(m.test_on_batch(xs,ys,np.array([.1])))
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='abirkmanis' date='2019-04-22T03:34:17Z'>
		In TF 2.0.0-alpha0 the behavior is as expected - that led me to believe the behavior in 1.13.1 is a bug.
		</comment>
		<comment id='2' author='abirkmanis' date='2019-04-22T04:22:25Z'>
		Looks like behavior changed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/bacd851cf8281b3a87d782bbaf1888df571337a6#diff-4f0d455edc07c640cbb22c8e39a61dd5&gt;bacd851#diff-4f0d455edc07c640cbb22c8e39a61dd5&lt;/denchmark-link&gt;
.
Presuming I cannot update to a nightly, what is the workaround meanwhile?
		</comment>
		<comment id='3' author='abirkmanis' date='2019-04-23T21:15:01Z'>
		&lt;denchmark-link:https://github.com/abirkmanis&gt;@abirkmanis&lt;/denchmark-link&gt;
 I can reproduce the issue. Output from TF2.0 is 1.0, and 0.1 whereas output from TF1.13.1 is 1.0 and 1.0. Thanks!
		</comment>
		<comment id='4' author='abirkmanis' date='2019-04-23T22:29:57Z'>
		Hi &lt;denchmark-link:https://github.com/abirkmanis&gt;@abirkmanis&lt;/denchmark-link&gt;
 , looks like this was fixed as you say
IIRC, previous behavior was to divide the sample_weights by the mean of the sample_weights, which is why it looks like it is being ignored in this case. My suggestion is if the mean of your sample_weights is not 1, then to either rescale the sample_weights or rescale your loss_fn in order to get the desired behavior
		</comment>
		<comment id='5' author='abirkmanis' date='2019-04-23T22:30:01Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28029&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28029&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>