<bug id='5477' author='thjashin' open_date='2016-11-08T15:12:30Z' closed_time='2019-03-25T16:07:24Z'>
	<summary>Deal with _control_flow_context when copying op</summary>
	<description>
In the current implementation of copying ops (both tf.contrib.copy_graph and tf.contrib.graph_editor)
The code of copying an op looks like this
# copy inputs
inputs_ = copy_func(op.inputs)
# copy control_inputs
control_inputs_ = copy_func(control_inputs)
# copy _node_def, _op_def
node_def_ = deepcopy(op._node_def)
op_def_ = deepcopy(op._op_def)
output_types_ = op._output_types[:]
input_types_ = op._input_types[:]
# copy name
name_ = copy_func(op.name)
# init the new op with above copies
new_op = tf_ops.Operation(node_def_, ...)
# ... copy shape and add to graph
But the op._control_flow_context is not copied at all. This causes problems when trying to compute gradients on a copied subgraph with control flow op like tf.cond. The error looks like
    grads = optimizer.compute_gradients(-lower_bound)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/optimizer.py", line 253, in compute_gradients
    colocate_gradients_with_ops=colocate_gradients_with_ops)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py", line 461, in gradients
    out_grads[i] = control_flow_ops.ZerosLikeOutsideLoop(op, i)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py", line 1310, in ZerosLikeOutsideLoop
    pred = op_ctxt.pred
AttributeError: 'NoneType' object has no attribute 'pred'
This is because the function ZerosLikeOutsideLoop uses _control_flow_context when the op is tf.switch
&lt;denchmark-code&gt;def ZerosLikeOutsideLoop(op, index):
  """Create zeros_like for the specified output of an op."""
  val = op.outputs[index]
  if not IsSwitch(op):
    return array_ops.zeros_like(val, optimize=False)
  else:
    op_ctxt = op._get_control_flow_context()
    pred = op_ctxt.pred
    branch = op_ctxt.branch
    switch_val = switch(op.inputs[0], pred)[1 - branch]
    zeros_shape = array_ops.shape_internal(switch_val, optimize=False)
    return array_ops.zeros(zeros_shape, dtype=val.dtype)
&lt;/denchmark-code&gt;

I tried setting new_op. _control_flow_context as op._control_flow_context
Now the error step passed. But I'm not sure whether this is right for dealing with _control_flow_context copy. Do you have some advice?
	</description>
	<comments>
		<comment id='1' author='thjashin' date='2016-11-09T01:31:38Z'>
		You can use copy_scoped_meta_graph() in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/meta_graph.py&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/meta_graph.py&lt;/denchmark-link&gt;
.
You can find examples of how to import, export and copy scoped meta_graph in
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/meta_graph_test.py&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/meta_graph_test.py&lt;/denchmark-link&gt;

and
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver_test.py&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver_test.py&lt;/denchmark-link&gt;
.
Please let me know if that works for you.
Sherry
		</comment>
		<comment id='2' author='thjashin' date='2016-11-09T08:16:00Z'>
		&lt;denchmark-link:https://github.com/sherrym&gt;@sherrym&lt;/denchmark-link&gt;
 Thanks. This is very similar to what I want. But I feel there are some difficulties when using it to copy ops in a subgraph.
First these operations are not always in the same scope, so I have to copy them one by one. What I do is to traverse the subgraph and get those ops. However, some operations share the same name with their uproot scopes, e.g. tf.random_normal creates a name_scope named "random_normal" while the tf.add operation in it shares the same name. This causes problems when I'm trying to copy this tf.add using its name because copy_scoped_meta_graph() will copy the outer name_scope.
Do you have some workaround for this? Maybe a copy function accepting operation objects other than scope names could be more suitable for my case.
		</comment>
		<comment id='3' author='thjashin' date='2016-11-11T07:55:24Z'>
		&lt;denchmark-link:https://github.com/sherrym&gt;@sherrym&lt;/denchmark-link&gt;
 After spending more time figuring this out, I now think it should be of not that much effort to implement a copy_op_meta_graph(). I think I can work on it and will submit a PR.
Do you think it's okay to serve as an api in tensorflow main library? Because I'm writing some high-level library based on this and hope to keep the base utilities as stable as an api in tensorflow main library.
		</comment>
		<comment id='4' author='thjashin' date='2016-11-12T23:21:24Z'>
		&lt;denchmark-link:https://github.com/thjashin&gt;@thjashin&lt;/denchmark-link&gt;
 You are always welcome to submit a PR for contrib.
		</comment>
		<comment id='5' author='thjashin' date='2017-06-16T17:17:22Z'>
		Leaving this open despite being old because I don't think it's fixed. In addition, I don't think importing a metagraph will work either (I haven't actually tested but have been looking at this code recently).
		</comment>
		<comment id='6' author='thjashin' date='2018-02-08T00:18:44Z'>
		thjashin@ do you know if this issue is still happening/relevant?
		</comment>
		<comment id='7' author='thjashin' date='2018-03-09T13:48:15Z'>
		&lt;denchmark-link:https://github.com/annarev&gt;@annarev&lt;/denchmark-link&gt;
 Sorry I missed this comment. Yes, it's still happening.
		</comment>
		<comment id='8' author='thjashin' date='2018-10-31T15:49:16Z'>
		&lt;denchmark-link:https://github.com/annarev&gt;@annarev&lt;/denchmark-link&gt;
 - Hi, any updates on this ?
		</comment>
		<comment id='9' author='thjashin' date='2018-11-22T01:52:17Z'>
		Sorry for delay, I missed it somehow. I am actually not the right owner since I am unfamiliar with copy_graph and graph_editor code.
So, I am reassigning to &lt;denchmark-link:https://github.com/frankchn&gt;@frankchn&lt;/denchmark-link&gt;
 . Frank, I saw that you might own moving tf.contrib.copy_graph out of contrib. But feel free to reassign if there is a better owner.
		</comment>
		<comment id='10' author='thjashin' date='2018-11-26T20:20:46Z'>
		Hmm I am probably not the right person for this (the internal CL was from a sync pull) -- &lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;
 do you know who might know about this?
		</comment>
		<comment id='11' author='thjashin' date='2018-11-26T21:05:06Z'>
		We're currently reimplementing control flow in TF such that it no longer uses control flow contexts. It's still under construction, but you can set the environment variables TF_ENABLE_COND_V2=1 TF_ENABLE_WHILE_V2=1 to try it out. Please feel free to report any errors you see using the new control flow.
		</comment>
		<comment id='12' author='thjashin' date='2019-03-22T20:48:48Z'>
		&lt;denchmark-link:https://github.com/thjashin&gt;@thjashin&lt;/denchmark-link&gt;
 Is this issue resolved? Please close If it was resolved already. Thanks!
		</comment>
		<comment id='13' author='thjashin' date='2019-03-23T14:49:23Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
  I'm not sure because I don't use copy anymore. Feel free to close the issue.
		</comment>
		<comment id='14' author='thjashin' date='2019-03-25T16:07:24Z'>
		&lt;denchmark-link:https://github.com/thjashin&gt;@thjashin&lt;/denchmark-link&gt;
 Thanks! I am closing the issue. Please feel free to open a new ticket if the bug persists in latest version. Thanks!
		</comment>
		<comment id='15' author='thjashin' date='2019-03-25T16:07:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=5477&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=5477&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>