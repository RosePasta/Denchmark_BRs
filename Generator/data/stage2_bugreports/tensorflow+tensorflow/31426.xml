<bug id='31426' author='dsgupta' open_date='2019-08-07T23:02:15Z' closed_time='2019-08-15T18:45:19Z'>
	<summary>Optimizer other than GradientDescent throwing errors on first run</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colag
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
TensorFlow version (use command below): 1.14
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
On running the train method, it is throwing error despite initializing all variables before the optimize step.

It should not throw errors and initialize all variables.

Colab &lt;denchmark-link:https://colab.research.google.com/gist/dsgupta/bb90037cb95573f610ff2d974883286d/test.ipynb&gt;gist&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='dsgupta' date='2019-08-12T22:48:51Z'>
		You need to initialize the variables inside the session. For instance,
with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    # rest of your code 
See &lt;denchmark-link:https://www.tensorflow.org/guide/variables#initializing_variables&gt;https://www.tensorflow.org/guide/variables#initializing_variables&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='dsgupta' date='2019-08-14T23:44:33Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;

Doesn't the following take care of that?
&lt;denchmark-code&gt;with tf.Session() as sess:
    sess.run([var_init, iterator_init])
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='dsgupta' date='2019-08-15T00:31:00Z'>
		You need to slightly tweak the  arg in 
The  argument may be a single graph element, or an arbitrarily nested list, tuple.
See &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/Session#run&gt;https://www.tensorflow.org/api_docs/python/tf/Session#run&lt;/denchmark-link&gt;

You need to pass elements  as a tuple perhaps.
my_tuple = (var_init, iterator_init)
with tf.Session() as sess:
    sess.run(my_tuple)
Output
0.7025812
5.704461e-10
1.5058428e-13
2.5943065e-16
1.4000413e-18
1.699697e-20
3.7725005e-22
1.3543658e-23
7.2010655e-25
5.316337e-26
		</comment>
		<comment id='4' author='dsgupta' date='2019-08-15T18:45:19Z'>
		I think it's because global_variables() are read by global_variables_initializer before they are created by the train_step.
This works:
with mirrored_strategy.scope():
  input_iterator = dist_dataset.make_initializable_iterator()
  iterator_init = input_iterator.initialize()
  loss = train_step(input_iterator.get_next())
  var_init = tf.global_variables_initializer()  
  with tf.Session() as sess:
    sess.run([var_init, iterator_init])
    for _ in range(10):
      print(sess.run(loss))
Thanks for the colab.
		</comment>
		<comment id='5' author='dsgupta' date='2019-08-15T18:45:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31426&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31426&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>