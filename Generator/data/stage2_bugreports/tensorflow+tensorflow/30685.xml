<bug id='30685' author='mdanatg' open_date='2019-07-13T18:49:53Z' closed_time='2019-07-24T17:14:09Z'>
	<summary>`TensorArray` objects used as `Dataset.reduce` state lose inferred shapes</summary>
	<description>
System information

TensorFlow version (use command below): 2.0
Python version: 3

Describe the current behavior
TensorArray objects passed as accumulators to Dataset.reduce lose inferred shapes. Subsequent calls to TensorArray.concat returns a fully unknown shape.
Describe the expected behavior
The element shape of the TensorArray should be partially known, consistent with the behavior of an equivalent tf.while_loop.
Code to reproduce the issue
&lt;denchmark-code&gt;@tf.function
def compute():
    arr = tf.TensorArray(tf.float32, 1, dynamic_size=True)
    def body(i, arr):
        real_logits = tf.random.normal([5, 1])
        arr = arr.write(tf.cast(i, tf.int32), real_logits)
        i += 1
        return i, arr
    def cond(i, arr):
      return i &lt; 10
    _, arr = tf.while_loop(cond, body, (0, arr))

    c = arr.concat()
    tf.print('TensortArray.concat() shape:', c.shape, 'rank:', c.shape.rank)
    return c

@tf.function
def compute_ds():
    arr = tf.TensorArray(tf.float32, 1, dynamic_size=True)
    def body(state, _):
        i, arr = state
        real_logits = tf.random.normal([5, 1])
        arr = arr.write(tf.cast(i, tf.int32), real_logits)
        i += 1
        return i, arr
    en_ds = tf.data.Dataset.range(10).enumerate()
    _, arr = en_ds.reduce((0, arr), body)

    c = arr.concat()
    tf.print('TensortArray.concat() shape:', c.shape, 'rank:', c.shape.rank)
    return c

print('*** With tf.while_loop')
_ = compute()
print()
print('*** With tf.Dataset.reduce')
_ = compute_ds()
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;*** With tf.while_loop
TensortArray.concat() shape: TensorShape([None, 1]) rank: 2

*** With tf.Dataset.reduce
TensortArray.concat() shape: TensorShape(None) rank: None
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mdanatg' date='2019-07-13T18:56:26Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 could you triage the issue?
		</comment>
		<comment id='2' author='mdanatg' date='2019-07-22T17:40:44Z'>
		&lt;denchmark-link:https://github.com/aaudiber&gt;@aaudiber&lt;/denchmark-link&gt;
 could you please take a look?
		</comment>
		<comment id='3' author='mdanatg' date='2019-07-23T16:45:47Z'>
		&lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
 Thank you for reporting this and for including simple repro instructions!
The issue is with how we use TensorArraySpec to convert the TensorArray to/from Tensor components across the reduce boundary. As you noticed, it loses the shape information. I have a CL out to fix it, and will update once it is merged
		</comment>
		<comment id='4' author='mdanatg' date='2019-07-24T17:14:09Z'>
		Now that &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/6cd69820a7ec68363647bf918d312b5d10e0e07a&gt;6cd6982&lt;/denchmark-link&gt;
 has merged, inferred  shapes will be preserved across all tf.data operations.
		</comment>
		<comment id='5' author='mdanatg' date='2019-07-24T17:14:11Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30685&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30685&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>