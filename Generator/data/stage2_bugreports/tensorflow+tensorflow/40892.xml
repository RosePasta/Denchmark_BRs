<bug id='40892' author='fuzhenxin' open_date='2020-06-28T16:14:02Z' closed_time='2020-07-01T17:41:12Z'>
	<summary>model.set_inputs does not work for keras model</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux CentOS Linux release 7.7.1908 (Core)
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.2.0-rc4-8-g2b96f3662b 2.2.0
Python version: Python 3.6.10 :: Anaconda, Inc.
Bazel version (if compiling from source): No
GCC/Compiler version (if compiling from source): No
CUDA/cuDNN version: No
GPU model and memory: No

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
model.set_inputs does not work for keras model.
After setting model._set_inputs, the model.inputs and model.outputs are still all None.
The bug happens for tensorflow&gt;=2.2. It works fine for tensorflow&lt;2.2.
Describe the expected behavior
model.inputs will tell the shape [1,64] and model.outputs tell the shape [1,10]
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;import tensorflow as tf

class MYMODEL(tf.keras.Model):
    def __init__(self):
        super(MYMODEL, self).__init__()
        self.dense1 = tf.keras.layers.Dense(10)
    def call(self, inputs):
        output = self.dense1(inputs)
        return output

model_keras = MYMODEL()

input_spec = tf.TensorSpec([1, 64], tf.int32)
model_keras._set_inputs(input_spec, training=False)

# keras_input = tf.keras.Input([64], batch_size=1, dtype=tf.int32)
# keras_output = model_keras(keras_input, training=False)
# model_keras = tf.keras.Model(keras_input, keras_output)

print(model_keras.inputs)
print(model_keras.outputs)
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Although I can set inputs by adding an additional input layer before keras model as in the comment of source code as above.
I still want to know whether it is a bug.
	</description>
	<comments>
		<comment id='1' author='fuzhenxin' date='2020-06-29T17:01:01Z'>
		I am able to replicate the issue faced, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/2d061d8cb96bf1c8e6c204dd4bfb1745/untitled244.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='fuzhenxin' date='2020-06-30T22:08:12Z'>
		The code snippet works with TF 2.1
See attached &lt;denchmark-link:https://colab.research.google.com/gist/ymodak/3b05475603160bb0130be1e9ee1d81dd/untitled244.ipynb&gt;GitHub gist&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='fuzhenxin' date='2020-07-01T01:56:23Z'>
		Thanks! It wors on TF&lt;2.2. I am curious on whether it is a bug in TF&gt;=2.2 or the set_inputs does not be supported in TF&gt;=2.2.
If a bug, will It by fixed in the future version.
		</comment>
		<comment id='4' author='fuzhenxin' date='2020-07-01T17:41:11Z'>
		The  method is a private API, and is not intended to be called in user code. The solution you suggest (using an input layer) would work, or moving to the &lt;denchmark-link:https://keras.io/guides/functional_api/&gt;Functional API&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='fuzhenxin' date='2020-07-01T17:41:13Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40892&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40892&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='fuzhenxin' date='2020-07-02T02:11:53Z'>
		Thanks!
		</comment>
	</comments>
</bug>