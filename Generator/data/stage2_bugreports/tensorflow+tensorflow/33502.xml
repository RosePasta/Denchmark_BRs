<bug id='33502' author='ZackPashkin' open_date='2019-10-18T09:04:05Z' closed_time='2019-10-18T09:05:04Z'>
	<summary>please fix docs  converter = tf.lite.TFLiteConverter.from_keras_model(model) doesn't work</summary>
	<description>
Please update docs this example doesn't work
&lt;denchmark-link:https://www.tensorflow.org/lite/convert/python_api#converting_a_keras_model&gt;https://www.tensorflow.org/lite/convert/python_api#converting_a_keras_model&lt;/denchmark-link&gt;
_
Converting a Keras model
The following example shows how to convert a tf.keras model into a TensorFlow Lite FlatBuffer.
import tensorflow as tf
&lt;denchmark-h:h1&gt;Create a simple Keras model.&lt;/denchmark-h&gt;

x = [-1, 0, 1, 2, 3, 4]
y = [-3, -1, 1, 3, 5, 7]
model = tf.keras.models.Sequential(
[tf.keras.layers.Dense(units=1, input_shape=[1])])
model.compile(optimizer='sgd', loss='mean_squared_error')
model.fit(x, y, epochs=50)
&lt;denchmark-h:h1&gt;Convert the model.&lt;/denchmark-h&gt;

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()
tf.version
'1.15.0-rc3'
output in colab
AttributeError                            Traceback (most recent call last)
 in ()
11
12 # Convert the model.
---&gt; 13 converter = tf.lite.TFLiteConverter.get_input_arrays(model)
14 tflite_model = converter.convert()
/usr/local/lib/python3.6/dist-packages/tensorflow_core/lite/python/lite.py in get_input_arrays(self)
1001       List of strings.
1002     """
-&gt; 1003     if self._has_valid_tensors():
1004       return [_get_tensor_name(tensor) for tensor in self._input_tensors]
1005     else:
AttributeError: 'Sequential' object has no attribute '_has_valid_tensors'
	</description>
	<comments>
		<comment id='1' author='ZackPashkin' date='2019-10-18T09:05:24Z'>
		it was tf 2.0
		</comment>
	</comments>
</bug>