<bug id='38691' author='laghaout' open_date='2020-04-19T18:46:18Z' closed_time='2020-04-24T14:11:09Z'>
	<summary>WARNING:tensorflow:Entity &amp;lt;function &amp;lt;lambda&amp;gt; at 0x000002343DCF24C8&amp;gt; could not be transformed and will be executed as-is.</summary>
	<description>
What can be done to solve this warning?
&lt;denchmark-h:h2&gt;Warning message&lt;/denchmark-h&gt;

Below is the full warning:

WARNING:tensorflow:Entity &lt;function  at 0x000002343DCF24C8&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Str'
WARNING: Entity &lt;function  at 0x000002343DCF24C8&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: module 'gast' has no attribute 'Str'

&lt;denchmark-h:h2&gt;Minimum working example&lt;/denchmark-h&gt;

The code that generated the warning was discussed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/38471&gt;#38471&lt;/denchmark-link&gt;
 and stored in this &lt;denchmark-link:https://colab.research.google.com/drive/1gExuU2sCs6OeHtexI22srN7gAti9C9c4#scrollTo=8TvMWDmhlcSY&gt;gist&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;import tensorflow as tf

def compute_length(x): 
    return tf.strings.length(x)

def check_substring(x, substring):
    return tf.strings.regex_full_match(x,substring)


def compute_palindrome(x):
    extra_split = tf.strings.bytes_split(x)
    reverse = tf.reverse(extra_split,[0])
    reversedStr = tf.strings.reduce_join([reverse])
    return reversedStr
    
ds = tf.data.Dataset.from_tensor_slices(["Ottawa", "Stockholm", "Rabat"])

ds = ds.map(
    lambda city: (city, 
                  compute_length(city), 
                  check_substring(city, ".*lm.*"),
                  compute_palindrome(city),
                  ),
        )

num_elems = len(ds.element_spec)
for elem in ds:
   print(''.join([f"{elem[i]}" for i in range(num_elems)]))
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


python 3.7.4
tensorflow-gpu 2.0.0
tensorflow-datasets 1.3.0
gast 0.2.2

Running on Windows 10 under conda 4.8.3.
	</description>
	<comments>
		<comment id='1' author='laghaout' date='2020-04-20T07:32:26Z'>
		&lt;denchmark-link:https://github.com/laghaout&gt;@laghaout&lt;/denchmark-link&gt;

i ran the code shared on tf_nightly and do not find any error, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/963888703a1d8740f98f59418ab1a63f/38691_nightly.ipynb&gt;gist here&lt;/denchmark-link&gt;
 as well on &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/092b068dd0b449aebaf2e63034aef38a/38691_2.ipynb&gt;2.0&lt;/denchmark-link&gt;

could you please refer to these issues and let us know if it helps:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35504#issuecomment-571414212&gt;link1&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32383#issuecomment-535763496&gt;link2&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32949#issuecomment-541345618&gt;link3&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/36093&gt;link4&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32319#issuecomment-597946520&gt;link5&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='laghaout' date='2020-04-20T20:15:39Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
, I read the issues you linked to but I'm afraid none of them solve the problem. While the code seems to run without warnings on Colab, the warnings appear on two different machines I've tested it on (Windows 10 and Debian).
The exact versions of the packages are as follows:
&lt;denchmark-code&gt;user@user-G751J ~
$ conda list | grep -i gast
gast                      0.2.2                    pypi_0    pypi

user@user-G751J ~
$ conda list | grep -i tensorflow
tensorflow-datasets       1.3.0                    pypi_0    pypi
tensorflow-estimator      2.0.1                    pypi_0    pypi
tensorflow-gpu            2.0.0                    pypi_0    pypi
tensorflow-hub            0.6.0                    pypi_0    pypi
tensorflow-metadata       0.15.0                   pypi_0    pypi
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='laghaout' date='2020-04-21T00:18:21Z'>
		Please note that the problem persists even with the following upgrades:
&lt;denchmark-code&gt;gast                      0.3.3                    pypi_0    pypi
tensorflow-estimator      2.0.1                    pypi_0    pypi
tensorflow-gpu            2.1.0                    pypi_0    pypi
tensorflow-gpu-estimator  2.1.0                    pypi_0    pypi
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='laghaout' date='2020-04-22T16:35:58Z'>
		&lt;denchmark-link:https://github.com/laghaout&gt;@laghaout&lt;/denchmark-link&gt;
 Can you please test with  or  and let us know whether the error persists with latest versions also. Thanks!
		</comment>
		<comment id='5' author='laghaout' date='2020-04-22T16:47:03Z'>
		The following versions should work (note that pip install should pull the correct dependencies in TF 2.2 and later):



TF version
gast version




2.0, 2.1, 2.2
0.2.2


2.3, nightly
0.3.3



To make sure you have the correct version installed, please try force-installing it: pip install gast==&lt;version&gt; --force-reinstall.
		</comment>
		<comment id='6' author='laghaout' date='2020-04-23T20:14:26Z'>
		&lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
: I followed your suggestions, but just to double-check, my packages are
&lt;denchmark-code&gt;tensorflow-datasets       1.3.0                    pypi_0    pypi
tensorflow-estimator      2.0.1                    pypi_0    pypi
tensorflow-gpu            2.1.0                    pypi_0    pypi
tensorflow-gpu-estimator  2.1.0                    pypi_0    pypi
tensorflow-hub            0.6.0                    pypi_0    pypi
tensorflow-metadata       0.15.0                   pypi_0    pypi
&lt;/denchmark-code&gt;

and
&lt;denchmark-code&gt;gast                      0.2.2                    pypi_0    pypi
&lt;/denchmark-code&gt;

However, the mystery has now thickened: The message does not show up when the code is run in Jupyter, but persists when the code is run in Spyder. In the latter case, it is only when the code is re-run, i.e., the warning does not show the first time it is run.
Furthermore, the warning is still the same as that I posted initially but it has a slightly different wording:
&lt;denchmark-code&gt;WARNING:tensorflow:AutoGraph could not transform &lt;function &lt;lambda&gt; at 0x000002E2EC2049D8&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output.
Cause: 
WARNING: AutoGraph could not transform &lt;function &lt;lambda&gt; at 0x000002E2EC2049D8&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output.
Cause: 
b'Ottawa'6Falseb'awattO'
b'Stockholm'9Trueb'mlohkcotS'
b'Rabat'5Falseb'tabaR'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='laghaout' date='2020-04-23T20:35:01Z'>
		Thanks for checking. So long as you don't see any module 'gast' has no attribute "foo", then the version of gast is correct. So we must look for a different cause.
To get a bit more information, could you set this env var: export AUTOGRAPH_VERBOSITY=3 and replicate the warning messages? That should generate a lot of log output that will be useful to tell what's going on.
		</comment>
		<comment id='8' author='laghaout' date='2020-04-24T09:56:30Z'>
		&lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
, please find the log &lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4528080/log.txt&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='9' author='laghaout' date='2020-04-24T11:45:26Z'>
		&lt;denchmark-link:https://github.com/laghaout&gt;@laghaout&lt;/denchmark-link&gt;
 Thank you. The log doesn't seem to contain any errors - did the warning appear while collecting it?
		</comment>
		<comment id='10' author='laghaout' date='2020-04-24T12:43:13Z'>
		&lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
 I had forgotten that the warning does not show up on the first run. &lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4528876/log.txt&gt;Here&lt;/denchmark-link&gt;
 it is on the second run.
		</comment>
		<comment id='11' author='laghaout' date='2020-04-24T12:48:18Z'>
		Thank you, that helped! It seems that Spyder may decide to unload modules. Will send a fix.
		</comment>
		<comment id='12' author='laghaout' date='2020-04-24T14:11:09Z'>
		Actually, this should already be fixed in tf-nightly. The fix will be released in TF 2.3.
Closing the issue for now, but please re-open if you still see the warnings with tf-nightly.
		</comment>
		<comment id='13' author='laghaout' date='2020-04-24T14:11:11Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38691&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38691&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='laghaout' date='2020-12-26T20:24:09Z'>
		Hello,
I am witnessing identical issue with a very simple command. In fact, it is one of the demonstrated usages of the API.
Linux : Ubuntu 18.04
I am running docker container. Inside the docker container,
TensorFlow version : 1.15
Python version : 3.6.9
gast version : 0.2.2 ( checked with command 'pip freeze')
Command:
d = tf.data.Dataset.from_tensor_slices([1, 2, 3])  ( I was looking at &lt;denchmark-link:https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/data/Dataset#filter&gt;this&lt;/denchmark-link&gt;
 example )
d = d.filter(lambda x: x &lt; 3)
WARNING:tensorflow:Entity &lt;function  at 0x7ff0f804fb70&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: Unable to locate the source code of &lt;function  at 0x7ff0f804fb70&gt;. Note that functions defined in certain environments, like the interactive Python shell do not expose their source code. If that is the case, you should to define them in a .py source file. If you are certain the code is graph-compatible, wrap the call using @tf.autograph.do_not_convert. Original error: could not get source code
WARNING: Entity &lt;function  at 0x7ff0f804fb70&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause: Unable to locate the source code of &lt;function  at 0x7ff0f804fb70&gt;. Note that functions defined in certain environments, like the interactive Python shell do not expose their source code. If that is the case, you should to define them in a .py source file. If you are certain the code is graph-compatible, wrap the call using @tf.autograph.do_not_convert. Original error: could not get source code
Any idea why I am seeing this problem and how to fix it? Unfortunately, I cannot verify it in TF 2.X because I cannot install it easily on this machine as it needs other dependencies to be correctly (CUDA &gt; 11.0) installed.
		</comment>
		<comment id='15' author='laghaout' date='2020-12-28T14:22:13Z'>
		Hi &lt;denchmark-link:https://github.com/ssnirgudkar&gt;@ssnirgudkar&lt;/denchmark-link&gt;
, it appears that the error message indicates an environment related incompatibility. The root cause it indicated by this piece in the message: "Original error: could not get source code". &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/autograph/g3doc/reference/limitations.md#access-to-source-code&gt;This section&lt;/denchmark-link&gt;
 in the docs has a few details why.
Given that the lambda function is simple, you could try to wrap it into a tf.autograph.experimental.do_not_convert, but it is likely to see that error for all the other functions that might be involved. That type of error will also happen if you upgrade to a newer version of TF, so I think it's worth looking at the environment instead.
Are you getting this error when trying to run the code in an interactive Python or IPython shell? I know those to be incompatible. Running the code as a Python file, or using something like Jupyter should work though.
		</comment>
	</comments>
</bug>