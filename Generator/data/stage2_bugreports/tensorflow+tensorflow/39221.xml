<bug id='39221' author='kglapiak' open_date='2020-05-06T10:09:19Z' closed_time='2020-06-12T20:27:07Z'>
	<summary>Error in load/save models with FeatureLayer when refitting or reloading</summary>
	<description>
Hello,
My model has FeatureLayer and i want do flow like this:

Create, fit model  on basic data and save.
Load model and fit on new data and save updated model.
Do 2 step periodically e.g. 1 time in week.

When I do model  first time, it's no problem, also I can use it in tensorflow-serving and it works.
Then I can load this model, fit on new data and save updated model. But when I try to load updated model i have an error:
 raise ValueError('Passing a dictionary input to a Sequential Model ' ValueError: Passing a dictionary input to a Sequential Model which doesn't have FeatureLayer as the first layer is an error.
In tf v 2.0.0 problem is when load model:
&lt;denchmark-code&gt;model = tf_load.load_internal(path, loader_cls=KerasObjectLoader)
File "/usr/lib64/python3.6/site-packages/tensorflow_core/python/saved_model/load.py", line 541, in load_internal
export_dir)
File "/usr/lib64/python3.6/site-packages/tensorflow_core/python/keras/saving/saved_model/load.py", line 103, in __init__
self._finalize()
File "/usr/lib64/python3.6/site-packages/tensorflow_core/python/keras/saving/saved_model/load.py", line 132, in _finalize
node._set_inputs(inputs)
File "/usr/lib64/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py", line 2697, in _set_inputs
inputs = self._set_input_attrs(inputs)
File "/usr/lib64/python3.6/site-packages/tensorflow_core/python/training/tracking/base.py", line 457, in _method_wrapper
result = method(self, *args, **kwargs)
File "/usr/lib64/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py", line 2731, in _set_input_attrs
raise ValueError('Passing a dictionary input to a Sequential Model '
ValueError: Passing a dictionary input to a Sequential Model which doesn't have FeatureLayer as the first layer is an error.
&lt;/denchmark-code&gt;

I tested it and it's not problem with fitting model but with save or load, becouse when I only load first model and save as new model (without any interference in model) the error occurs when i try load updated model.
In version 2.1.0 its not error when load updated model, but when I try to fit. Final error is the same in both cases
&lt;denchmark-code&gt; File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training.py", line 819, in fit
    use_multiprocessing=use_multiprocessing)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training_v2.py", line 235, in fit
    use_multiprocessing=use_multiprocessing)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training_v2.py", line 593, in _process_training_inputs
    use_multiprocessing=use_multiprocessing)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training_v2.py", line 706, in _process_inputs
    use_multiprocessing=use_multiprocessing)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\data_adapter.py", line 702, in __init__
    x = standardize_function(x)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training_v2.py", line 660, in standardize_function
    standardize(dataset, extract_tensors_from_dataset=False)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training.py", line 2346, in _standardize_user_data
    all_inputs, y_input, dict_inputs = self._build_model_with_inputs(x, y)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training.py", line 2572, in _build_model_with_inputs
    self._set_inputs(cast_inputs)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training.py", line 2647, in _set_inputs
    inputs = self._set_input_attrs(inputs)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\training\tracking\base.py", line 457, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\Users\kglapiak\AppData\Local\Continuum\anaconda3\envs\tf_test2\lib\site-packages\tensorflow_core\python\keras\engine\training.py", line 2681, in _set_input_attrs
    raise ValueError('Passing a dictionary input to a Sequential Model '
ValueError: Passing a dictionary input to a Sequential Model which doesn't have FeatureLayer as the first layer is an error.
&lt;/denchmark-code&gt;

I save model by mehod:
model.save('original_model',save_format='tf')
Example of model:
&lt;denchmark-code&gt;feature_columns = []

categorical = tf.feature_column.categorical_column_with_vocabulary_list(
        key='f1', vocabulary_list=['x1','x2','x3'],
        num_oov_buckets=0)
one_hot = feature_column.indicator_column(categorical)
feature_columns.append(one_hot)

categorical = tf.feature_column.categorical_column_with_vocabulary_list(
        key='f2', vocabulary_list=['x1','x2','x3','x4','x5','x6'],
        num_oov_buckets=5)
embedding = feature_column.embedding_column(categorical, dimension=10)
feature_columns.append(embedding)

feature_layer = tf.keras.layers.DenseFeatures(feature_columns)

model = tf.keras.Sequential([
  feature_layer,
  layers.Dense(20, activation='relu'),
  layers.Dense(1,activation='softsign')
])
    
model.compile(optimizer='adam',
              loss=tf.keras.losses.BinaryCrossentropy(from_logits=True),
              metrics=['accuracy'])


def df_to_dataset(dataframe, shuffle=True, batch_size=32):
    dataframe = dataframe.copy()
    labels = dataframe.pop('target')
    ds = tf.data.Dataset.from_tensor_slices((dict(dataframe), labels))
    if shuffle:
        ds = ds.shuffle(buffer_size=len(dataframe))
    ds = ds.batch(batch_size)
    return ds

train = df_to_dataset(train)
val = df_to_dataset(val)

model.fit(train,
          validation_data=val,
          epochs=2)
&lt;/denchmark-code&gt;

I tested it on conda and pip distributions, on tf versions 2.0.0 and 2.1.0 and on Windows and Centos and several versions of Python and all time is the same problem.

OS Platform and Distribution (Windows, Centos):
TensorFlow version (2.0.0,2.1.0 also pip and conda distridutions ):
Python version: several versions from  3.6.5 to 3.7.1

	</description>
	<comments>
		<comment id='1' author='kglapiak' date='2020-05-07T07:19:52Z'>
		&lt;denchmark-link:https://github.com/kglapiak&gt;@kglapiak&lt;/denchmark-link&gt;

Code shared is incomplete we will not be able to replicate the issue, please share simple stand alone code or if possible a colab gist for us to analyse the issue faced
		</comment>
		<comment id='2' author='kglapiak' date='2020-05-08T08:44:38Z'>
		All code:
&lt;denchmark-code&gt;import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split

import tensorflow as tf
from tensorflow.keras.layers import Activation, Dropout, Flatten, Dense
from tensorflow.keras.models import Sequential
from tensorflow.keras.models import load_model,Model
from tensorflow import feature_column
from tensorflow.keras import layers


def df_to_dataset(dataframe, shuffle=True, batch_size=32):
  dataframe = dataframe.copy()
  labels = dataframe.pop('target')
  ds = tf.data.Dataset.from_tensor_slices((dict(dataframe), labels))
  if shuffle:
    ds = ds.shuffle(buffer_size=len(dataframe))
  ds = ds.batch(batch_size)
  return ds

###--------- sample dataset ---------
n = 10000
data = pd.DataFrame({'f1':np.random.choice(['x1','x2','x3'], n, replace=True),
                     'f2':np.random.choice(['x1','x2','x3','x4','x5','x6'], n, replace=True),
                     'target':np.random.choice([0,1], n, replace=True)})

train,val = train_test_split(data,test_size=0.2)
train,new_train = train_test_split(train,test_size=0.2)


###--------- define features columns ---------
feature_columns = []

categorical = tf.feature_column.categorical_column_with_vocabulary_list(
        key='f1', vocabulary_list=['x1','x2','x3'],
        num_oov_buckets=0)
one_hot = feature_column.indicator_column(categorical)
feature_columns.append(one_hot)

categorical = tf.feature_column.categorical_column_with_vocabulary_list(
        key='f2', vocabulary_list=['x1','x2','x3','x4','x5','x6'],
        num_oov_buckets=5)
embedding = feature_column.embedding_column(categorical, dimension=10)
feature_columns.append(embedding)

feature_layer = tf.keras.layers.DenseFeatures(feature_columns)

###--------- define and compile model ---------
model = tf.keras.Sequential([
  feature_layer,
  layers.Dense(20, activation='relu'),
  layers.Dense(1,activation='softsign')
])
    
model.compile(optimizer='adam',
              loss=tf.keras.losses.BinaryCrossentropy(from_logits=True),
              metrics=['accuracy'])


train = df_to_dataset(train)
val = df_to_dataset(val)
new_train = df_to_dataset(new_train)

#----------- train model first time - all its ok --------
model.fit(train,
          validation_data=val,
          epochs=2)

model.save('basic_model',save_format='tf')

###------------- first update, no errors -------------------------
model_update1 = tf.keras.models.load_model('basic_model')
model_update1.fit(new_train,
          validation_data=val,
          epochs=2)

model_update1.save('update1',save_format='tf')

###------------- 2nd update is problem and generate errors -------------------------
model_update2 = tf.keras.models.load_model('update1')
model_update2.fit(new_train,
          validation_data=val,
          epochs=2)

&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='kglapiak' date='2020-05-08T10:05:10Z'>
		&lt;denchmark-link:https://github.com/kglapiak&gt;@kglapiak&lt;/denchmark-link&gt;

I ran the code shared above on tf 2.1 but do not face any error as reported above, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/2b40a2625e180590b2ff6ec028dac7ac/2.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='kglapiak' date='2020-05-08T18:40:21Z'>
		For me this colab returns error:
&lt;denchmark-code&gt;ValueError                                Traceback (most recent call last)
&lt;ipython-input-4-b1ad4c6f08c2&gt; in &lt;module&gt;()
     82 model_update2.fit(new_train,
     83           validation_data=val,
---&gt; 84           epochs=2)

10 frames
/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/engine/training.py in _set_input_attrs(self, inputs)
   2679         # We assert that the first layer is a FeatureLayer.
   2680         if not training_utils.is_feature_layer(self.layers[0]):
-&gt; 2681           raise ValueError('Passing a dictionary input to a Sequential Model '
   2682                            'which doesn\'t have FeatureLayer as the first layer'
   2683                            ' is an error.')

ValueError: Passing a dictionary input to a Sequential Model which doesn't have FeatureLayer as the first layer is an error.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='kglapiak' date='2020-05-09T22:54:54Z'>
		Correct &lt;denchmark-link:https://github.com/kglapiak&gt;@kglapiak&lt;/denchmark-link&gt;
.
I've just tried taking a look at this issue, and yes -- it's breaking up exactly where you've pointed out.
&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  - have you tested out the linked gist?
		</comment>
		<comment id='6' author='kglapiak' date='2020-05-10T15:15:54Z'>
		&lt;denchmark-link:https://github.com/kglapiak&gt;@kglapiak&lt;/denchmark-link&gt;

I ran the code shared by you and do not face any error, in case you are still facing an error can you please share a colab gist so we could analyse the error faced. faced
		</comment>
		<comment id='7' author='kglapiak' date='2020-05-10T18:27:02Z'>
		Here colab &lt;denchmark-link:https://colab.research.google.com/drive/17h5_Tceuh8Pt7mjRdaJ6xOPZY6XovaIr?usp=sharing&gt;gist&lt;/denchmark-link&gt;
 exacly same like yours.
And the same error occurs.
I show this for some people and they all had the same.
If you are sure, its works for you, only explanation is it's work in US and dot't worki in EU.
Is it even possible?
		</comment>
		<comment id='8' author='kglapiak' date='2020-05-11T04:39:10Z'>
		&lt;denchmark-link:https://github.com/kglapiak&gt;@kglapiak&lt;/denchmark-link&gt;

Could you please give me permission to view the gist.
		</comment>
		<comment id='9' author='kglapiak' date='2020-05-11T10:45:10Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 yea - now should be ok
		</comment>
		<comment id='10' author='kglapiak' date='2020-05-11T11:05:20Z'>
		I am able to replicate the reported issue on tf 2.1,please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/3099abb57ef7134f37949a6b36d99f74/untitled177.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='11' author='kglapiak' date='2020-05-26T13:07:42Z'>
		Hi, &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 - something happends with that issue?
		</comment>
		<comment id='12' author='kglapiak' date='2020-06-08T04:32:34Z'>
		This is fixed with TensorFlow 2.2
See &lt;denchmark-link:https://colab.research.google.com/gist/ymodak/450ecd9a1e30e717794492cf2ea775a5/untitled5.ipynb&gt;gist&lt;/denchmark-link&gt;

Thanks!
		</comment>
		<comment id='13' author='kglapiak' date='2020-06-12T20:27:09Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39221&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39221&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='kglapiak' date='2020-06-16T11:10:11Z'>
		Yea, its works. Thanks !
		</comment>
	</comments>
</bug>