<bug id='41401' author='take0212' open_date='2020-07-15T07:16:25Z' closed_time='2020-07-29T04:56:08Z'>
	<summary>RuntimeError: cudaGetDevice() failed. Status: CUDA driver version is insufficient for CUDA runtime version</summary>
	<description>
I want to run tensorflow with CUDA 10.0 or 10.1 on Windows.

abstract

-- error message
RuntimeError: cudaGetDevice() failed. Status: CUDA driver version is insufficient for CUDA runtime version
-- system infomeation
tensorflow-gpu 2.2.0
Python 3.7.1
Windows 10 Pro
CUDA 10.1.105
cuDNN 7.6.4
NVIDIA driver 451.48
Visual Studio 2017
GeForce GTX 1080 Ti

detail

-- NVIDIA driver
nvidia-smi
&lt;denchmark-code&gt;Wed Jul 15 15:14:29 2020
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 451.48       Driver Version: 451.48       CUDA Version: 11.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name            TCC/WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX 108... WDDM  | 00000000:01:00.0 Off |                  N/A |
| 25%   30C    P8     9W / 250W |   1310MiB / 11264MiB |      1%      Default |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|    0   N/A  N/A      2228    C+G   ...es.TextInput.InputApp.exe    N/A      |
|    0   N/A  N/A      9272    C+G   Insufficient Permissions        N/A      |
|    0   N/A  N/A      9372    C+G   Insufficient Permissions        N/A      |
|    0   N/A  N/A     11260    C+G   C:\Windows\explorer.exe         N/A      |
|    0   N/A  N/A     11740    C+G   ...artMenuExperienceHost.exe    N/A      |
|    0   N/A  N/A     12340    C+G   ...w5n1h2txyewy\SearchUI.exe    N/A      |
|    0   N/A  N/A     12952    C+G   ...zf8qxf38zg5c\SkypeApp.exe    N/A      |
|    0   N/A  N/A     13272    C+G   ...y\ShellExperienceHost.exe    N/A      |
|    0   N/A  N/A     15784    C+G   ...me\Application\chrome.exe    N/A      |
|    0   N/A  N/A     16300    C+G   ...bbwe\Microsoft.Photos.exe    N/A      |
+-----------------------------------------------------------------------------+
&lt;/denchmark-code&gt;

-- CUDA
nvcc -V
&lt;denchmark-code&gt;nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation Built on Fri_Feb__8_19:08:26_Pacific_Standard_Time_2019
Cuda compilation tools, release 10.1, V10.1.105
&lt;/denchmark-code&gt;

-- cuDNN
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\include\cudnn.h
&lt;denchmark-code&gt;#define CUDNN_MAJOR 7
#define CUDNN_MINOR 6
#define CUDNN_PATCHLEVEL 4

&lt;/denchmark-code&gt;

-- Environment Variable
&lt;denchmark-code&gt;CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1 CUDA_PATH_V10_1=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1 CUDNN_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1 Path=
    ...
    C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\bin;
    C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\libnvvp;
    C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\extras\CUPTI\libx64;
    C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\include;
    ...
&lt;/denchmark-code&gt;

-- python
python -V
&lt;denchmark-code&gt;Python 3.7.1
&lt;/denchmark-code&gt;

-- pip list
&lt;denchmark-code&gt;Keras                    2.4.3
Keras-Preprocessing      1.1.2
...
tensorboard              2.2.2
tensorboard-plugin-wit   1.7.0
tensorflow-estimator     2.2.0
tensorflow-gpu           2.2.0
tensorflow-gpu-estimator 2.2.0
&lt;/denchmark-code&gt;

-- Error message
python -c "from tensorflow.python.client import device_lib; print(device_lib.list_local_devices())"
&lt;denchmark-code&gt;2020-07-15 15:00:36.136510: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-07-15 15:00:37.931078: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-07-15 15:00:37.946142: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x148edb04360 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-15 15:00:37.957182: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-15 15:00:37.965143: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-07-15 15:00:37.996562: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 1080 Ti computeCapability: 6.1
coreClock: 1.582GHz coreCount: 28 deviceMemorySize: 11.00GiB deviceMemoryBandwidth: 451.17GiB/s
2020-07-15 15:00:38.013444: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-07-15 15:00:38.026126: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-07-15 15:00:38.038540: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-07-15 15:00:38.049231: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-07-15 15:00:38.061932: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-07-15 15:00:38.074267: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-07-15 15:00:38.091257: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-07-15 15:00:38.100188: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0 Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
  File "D:\****\lib\site-packages\tensorflow\python\client\device_lib.py", line 43, in list_local_devices
    _convert(s) for s in _pywrap_device_lib.list_devices(serialized_config)
RuntimeError: cudaGetDevice() failed. Status: CUDA driver version is insufficient for CUDA runtime version
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='take0212' date='2020-07-15T15:44:09Z'>
		&lt;denchmark-link:https://github.com/take0212&gt;@take0212&lt;/denchmark-link&gt;
,
Could you please take a look at the software requirements listed &lt;denchmark-link:https://www.tensorflow.org/install/gpu#software_requirements&gt;here&lt;/denchmark-link&gt;
 and make sure you have the compatible version installed. Thanks!
		</comment>
		<comment id='2' author='take0212' date='2020-07-15T23:59:19Z'>
		Thank you for your advice.
But it would be helpful if you could point out which combination is bad.
I think the content of the error message is invalid.
I have tried variously with reference to various sites.
I did not solve it, so I posted  this.
There is a strange thing.
When I run it with debugging in Visual Studio, it works fine.
If I run it without debugging, I get the error.
		</comment>
		<comment id='3' author='take0212' date='2020-07-21T18:11:41Z'>
		&lt;denchmark-link:https://github.com/take0212&gt;@take0212&lt;/denchmark-link&gt;
,
As per the &lt;denchmark-link:https://www.tensorflow.org/install/source_windows#gpu&gt;tested build configurations&lt;/denchmark-link&gt;
 TensorFlow v2.2 works with CUDA 10.1 and cuDNN 7.4.
The output of nvidia-smi shows CUDA Version as 11.0, whereas nvcc -v shows the version as V10.1.105. There seems to be a driver mismatch error here.
Please check &lt;denchmark-link:https://stackoverflow.com/a/55351774&gt;this&lt;/denchmark-link&gt;
 similar StackOverflow comment and &lt;denchmark-link:https://forums.developer.nvidia.com/t/solved-why-is-my-cuda-driver-version-is-insufficient-for-cuda-runtime-version/112251&gt;this&lt;/denchmark-link&gt;
 thread on NVIDIA forums and let us know if it helps.
Also, could you please specify if you're running TensorFlow from Anaconda environment. Thanks!
		</comment>
		<comment id='4' author='take0212' date='2020-07-28T18:31:58Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='take0212' date='2020-07-29T04:55:32Z'>
		I have fixed the bug.
The cause was unexpected and it was ANSI64.dll.
The solution was to uninstall ANSI64.dll.
The script could run in debug mode of Visual Studio.
So I checked loaded DLLs and using Process Explorer.
I compared loaded DLLs between in case of that the script could run and that it couldn't run.
Then I noticed that ANSI64.dll was loaded.
ANSI64.dll is special and it is not important information.
The survey procedure will be helpful.
The combination of versions of each module was irrelevant.
The difference between pip and conda was irrelevant.
		</comment>
		<comment id='6' author='take0212' date='2020-07-29T04:56:10Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41401&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41401&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>