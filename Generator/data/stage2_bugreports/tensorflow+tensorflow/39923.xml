<bug id='39923' author='amitDaMan' open_date='2020-05-27T21:02:50Z' closed_time='2020-06-08T21:18:10Z'>
	<summary>NNAPI Reference does not output the same result as CPU for style transfer app on android for tensorflow lite</summary>
	<description>
I have altered this app significantly such that "StyleTransferModelExecutor" could configure the interpreter with more fine granularity:
For example:
StyleExecutor(appContext, quant = true, device = Device.NNAPI, NNAcc = "nnapi-reference")
I am more than willing to share all that code, however the main point is:
running inference with:
style_predict_quantized_256.tflite"
style_transfer_quantized_384.tflite
On CPU is different than NNAPI reference.
This is how I set the options for nnapi reference:
&lt;denchmark-code&gt;val tfliteOptions = Interpreter.Options()
var opts = NnApiDelegate.Options()
opts.setAcceleratorName("nnapi-reference")
tfliteOptions.addDelegate(NnApiDelegate(opts))
Interpreter(loadModelFile(context, modelName), tfliteOptions)
&lt;/denchmark-code&gt;

I have an instrumented test that essentially runs noise through the models, and compares the results, and the results are significantly different.
I believe this is a bigger issue than just transfer style, and really relates to quantized models on nnapi not agreeing with cpu. I just use this app as a basis for re reproducibility
Feeding in noise:
&lt;denchmark-link:https://user-images.githubusercontent.com/16094320/83071496-10d5ca00-a022-11ea-8a42-98d64db06e93.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/16094320/83071511-13d0ba80-a022-11ea-81da-79234966b65a.png&gt;&lt;/denchmark-link&gt;

CPU and GPU inference agree:
&lt;denchmark-link:https://user-images.githubusercontent.com/16094320/83071501-1206f700-a022-11ea-87fd-46bda36dceee.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/16094320/83071504-129f8d80-a022-11ea-97ee-a0c37960ea1d.png&gt;&lt;/denchmark-link&gt;

NNAPI Reference differs:
&lt;denchmark-link:https://user-images.githubusercontent.com/16094320/83071508-13382400-a022-11ea-9a1f-b26f9d849aac.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='amitDaMan' date='2020-05-28T16:17:28Z'>
		(Further information)
The models are taken from the tflite example project "style transfer" and looking at this particular gradle file, you can see the links where the models are stored:
&lt;denchmark-link:https://github.com/tensorflow/examples/blob/master/lite/examples/style_transfer/android/app/download_model.gradle&gt;https://github.com/tensorflow/examples/blob/master/lite/examples/style_transfer/android/app/download_model.gradle&lt;/denchmark-link&gt;

or:
&lt;denchmark-link:https://www.tensorflow.org/lite/models/style_transfer/overview&gt;https://www.tensorflow.org/lite/models/style_transfer/overview&lt;/denchmark-link&gt;

at the bottom of this page, the models are there (though I used the gradle links)
And I will include them in this message as well
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4696938/quantized_models.zip&gt;quantized_models.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='amitDaMan' date='2020-05-29T18:30:42Z'>
		Can confirm that the output is different for NNAPI vs CPU using the inference tool:
&lt;denchmark-code&gt;$ blaze build -c opt   --config=android_arm64   //third_party/tensorflow/lite/tools/evaluation/tasks/inference_diff:run_eval &amp;&amp; adb push blaze-bin/third_party/tensorflow/lite/tools/evaluation/tasks/inference_diff/run_eval /data/local/tmp
...
$ adb shell /data/local/tmp/run_eval \
  --model_file=/data/local/tmp/style_predict_quantized_256.tflite \
  --delegate=nnapi
...
OutputDiff[0]: avg_error=2.25797, std_dev=0.0116284
&lt;/denchmark-code&gt;

This shows a raw error of 2.2 averaged across all elements of the output tensor. For comparison, delegate=hexagon gives an error of ~0.008. I tried delegating only half the graph by modifying the delegate, and the error is still ~0.99.
Adding Miao from NNAPI.
		</comment>
		<comment id='3' author='amitDaMan' date='2020-06-08T21:18:10Z'>
		The issue has been found in NNAPI delegate and the fix has been submitted internally.
You should be able to sync later today and verify the fix.
Thanks for reporting the issue!
		</comment>
		<comment id='4' author='amitDaMan' date='2020-06-08T21:18:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39923&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39923&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>