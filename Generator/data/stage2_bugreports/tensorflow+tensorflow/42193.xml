<bug id='42193' author='drasmuss' open_date='2020-08-10T16:44:54Z' closed_time='2020-08-18T22:11:25Z'>
	<summary>Keras RNNs do not respect get_initial_state if stateful=True</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.3.0
Python version: 3.8
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Describe the current behavior
RNNs created with stateful=True always start with all-zero initial state, even if there is a get_initial_state function defined.
Describe the expected behavior
The state variables should be initialized with the values returned by get_initial_state
Standalone code to reproduce the issue
import tensorflow as tf
import numpy as np


class TestCell(tf.keras.layers.Layer):
    state_size = 1
    output_size = 1

    def get_initial_state(self, inputs=None, batch_size=None, dtype=None):
        return tf.ones((batch_size, 1), dtype=dtype)

    def call(self, inputs, states):
        tf.assert_equal(states, 1.0)
        return inputs, states


layer = tf.keras.layers.RNN(TestCell(), stateful=True)

x = np.ones((1, 10, 1), dtype=np.float32)

layer(x)
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.InvalidArgumentError: Condition x == y did not hold.
First 1 elements of x:
[0.]
First 1 elements of y:
[1.]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='drasmuss' date='2020-08-11T07:37:10Z'>
		Was able to reproduce the issue with TF v2.3 and TF-nightly. Please find the gist of it &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/9f76798b4dc0a8c77468dfe9ff58b31d/42193-tf-nightly.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='drasmuss' date='2020-08-18T22:11:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42193&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42193&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>