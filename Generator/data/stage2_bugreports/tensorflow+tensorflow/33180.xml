<bug id='33180' author='cottrell' open_date='2019-10-09T16:33:17Z' closed_time='2019-10-28T16:57:39Z'>
	<summary>_list_all_concrete_functions_for_serialization doubles the trace count when called?</summary>
	<description>
I'm seeing the new warning "triggered tf.function retracing. Tracing is expensive and the excessive number of tracings" and was digging into it. When I printed everything that went through the offending function I only saw two tensors by (type, shape). This lead me to notice the following weird event that bumps (doubles) the trace count.
Is there some reason for this? If this is normal, I will try a minimal reproduction of the warning message that seems to not make sense.
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf

@tf.function
def f(a):
    tf.print(a.shape)
    return a


f(tf.convert_to_tensor(np.random.randn(4, 3).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 3).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 3).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 2).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 1).astype(np.float32))); print(f._get_tracing_count())
print(f._list_all_concrete_functions_for_serialization())
print(f._get_tracing_count())
&lt;/denchmark-code&gt;

Results in
&lt;denchmark-code&gt;TensorShape([4, 3])
1
TensorShape([4, 3])
1
TensorShape([4, 3])
1
TensorShape([4, 2])
2
TensorShape([4, 1])
3
[&lt;tensorflow.python.eager.function.ConcreteFunction object at 0x7fa32c03b438&gt;, &lt;tensorflow.python.eager.function.ConcreteFunction object at 0x7fa3247f4438&gt;, &lt;tensorflow.python.eager.function.ConcreteFunction object at 0x7fa3247f4f60&gt;]
6
&lt;/denchmark-code&gt;

System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
Describe the expected behavior
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='cottrell' date='2019-10-10T06:43:52Z'>
		I have tried on colab with TF version 2.0.0 ,2.0.0-dev20191002 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/39c39a352dfea0cd9375a6b6235ce995/untitled252.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='cottrell' date='2019-10-15T06:12:45Z'>
		&lt;denchmark-link:https://github.com/cottrell&gt;@cottrell&lt;/denchmark-link&gt;

Can you please let us know is this the expected behavior in the attached &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/39c39a352dfea0cd9375a6b6235ce995/untitled252.ipynb#scrollTo=x89GS3WvYGAK&gt;gist&lt;/denchmark-link&gt;
. I am not seeing any warning message . Can you please elaborate the issue with the context. Thanks!
		</comment>
		<comment id='3' author='cottrell' date='2019-10-15T06:39:23Z'>
		I think you just need a few more calls to trigger the tracing warning (see more below).
The tracing warning is mererly why I was looking into this. The doubling of the tracing count is something I don't understand at this point. Could be a feature not sure.
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf

@tf.function
def f(a):
    tf.print(a.shape)
    return a


f(tf.convert_to_tensor(np.random.randn(4, 3).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 3).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 3).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 2).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 1).astype(np.float32))); print(f._get_tracing_count())

f(tf.convert_to_tensor(np.random.randn(4, 12).astype(np.float32))); print(f._get_tracing_count())

f(tf.convert_to_tensor(np.random.randn(4, 11).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 15).astype(np.float32))); print(f._get_tracing_count())
f(tf.convert_to_tensor(np.random.randn(4, 18).astype(np.float32))); print(f._get_tracing_count())
print(f._list_all_concrete_functions_for_serialization())
print(f._get_tracing_count())
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='cottrell' date='2019-10-21T20:25:47Z'>
		Hi,
f._get_tracing_count() counts the number of times that the function is traced. When f._list_all_concrete_functions_for_serialization() is called, the function is actually traced again 3 times in your example.  You can verify that by inserting print('Traced') in the f's function body.
For the warning message, it doesn't use f._get_tracing_count(), it uses f._call_counter.get_tracing_count() to count the tracing and that's not increased with f._list_all_concrete_functions_for_serialization()
		</comment>
		<comment id='5' author='cottrell' date='2019-10-28T16:57:41Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33180&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33180&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>