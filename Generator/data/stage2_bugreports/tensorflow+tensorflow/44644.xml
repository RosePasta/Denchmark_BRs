<bug id='44644' author='tail-island' open_date='2020-11-06T10:51:52Z' closed_time='2020-11-06T11:34:22Z'>
	<summary>tf.keras.models.load_model fails if tf.linalg.band_part is used.</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution: Arch Linux (5.9.4-arch1-1)
TensorFlow installed from: binary
TensorFlow version: 2.3.1
Python version: 3.8.6
CUDA/cuDNN version: 11.1/8.0.4
GPU model and memory: NVIDIA GeForce GTX 1080 Ti/10.91GiB

Describe the current behavior
tf.keras.models.load_model fails when tf.linalg.band_part is used.
&lt;denchmark-code&gt;ValueError: Inconsistent values for attr 'Tindex' DT_INT32 vs. DT_INT64 while building NodeDef 'tf_op_layer_MatrixBandPart/MatrixBandPart' using Op&lt;name=MatrixBandPart; signature=input:T, num_lower:Tindex, num_upper:Tindex -&gt; band:T; attr=T:type; attr=Tindex:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]&gt;
&lt;/denchmark-code&gt;

Describe the expected behavior
Model is loaded without error.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

x = tf.keras.Input(shape=(3, 3))
y = tf.linalg.band_part(x, -1, 0)  # getting lower triangle part. I need band_part() for making look-ahead-mask on Transformer.
# y = tf.reshape(x, (-1, 9))

model = tf.keras.Model(x, y)
print(model.predict([[[1, 2, 3], [4, 5, 6], [7, 8, 9]],
                     [[9, 8, 7], [6, 5, 4], [3, 2, 1]]]))
model.save('model')

tf.keras.models.load_model('model')
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.InvalidArgumentError: Inconsistent values for attr 'Tindex' DT_INT32 vs. DT_INT64 while building NodeDef 'tf_op_layer_MatrixBandPart/MatrixBandPart' using Op&lt;name=MatrixBandPart; signature=input:T, num_lower:Tindex, num_upper:Tindex -&gt; band:T; attr=T:type; attr=Tindex:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "test_band_part.py", line 11, in &lt;module&gt;
    tf.keras.models.load_model('model')
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/saving/save.py", line 187, in load_model
    return saved_model_load.load(filepath, compile, options)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 120, in load
    model = tf_load.load_internal(
  File "/usr/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py", line 632, in load_internal
    loader = loader_cls(object_graph_proto, saved_model_proto, export_dir,
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 194, in __init__
    super(KerasObjectLoader, self).__init__(*args, **kwargs)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py", line 130, in __init__
    self._load_all()
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 221, in _load_all
    self._finalize_objects()
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 530, in _finalize_objects
    self._reconstruct_all_models()
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 548, in _reconstruct_all_models
    self._reconstruct_model(model_id, model, layers)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py", line 588, in _reconstruct_model
    created_layers) = functional_lib.reconstruct_from_config(
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/functional.py", line 1214, in reconstruct_from_config
    process_node(layer, node_data)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/functional.py", line 1162, in process_node
    output_tensors = layer(input_tensors, **kwargs)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 925, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 1117, in _functional_construction_call
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 3099, in call
    return self._make_op(inputs)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 3121, in _make_op
    c_op = ops._create_c_op(graph, node_def, inputs, control_inputs=[])
  File "/usr/lib/python3.8/site-packages/tensorflow/python/framework/ops.py", line 1815, in _create_c_op
    raise ValueError(str(e))
ValueError: Inconsistent values for attr 'Tindex' DT_INT32 vs. DT_INT64 while building NodeDef 'tf_op_layer_MatrixBandPart/MatrixBandPart' using Op&lt;name=MatrixBandPart; signature=input:T, num_lower:Tindex, num_upper:Tindex -&gt; band:T; attr=T:type; attr=Tindex:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]&gt;
&lt;/denchmark-code&gt;

Same as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42301&gt;#42301&lt;/denchmark-link&gt;
. I just wrote standalone code.
	</description>
	<comments>
		<comment id='1' author='tail-island' date='2020-11-06T11:30:30Z'>
		The issue is resolved in TF 2.4-rc0 version.I have tried in colab with TF 2.4-rc0 and i am not seeing any issue. Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/895d7ea9e27adcce336e891a746964ff/untitled491.ipynb&gt;here&lt;/denchmark-link&gt;
.Please, verify once and close the issue. Thanks!
		</comment>
		<comment id='2' author='tail-island' date='2020-11-06T11:34:22Z'>
		Thanks. And sorry I forgot to check latest version...
		</comment>
		<comment id='3' author='tail-island' date='2020-11-06T11:34:24Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44644&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44644&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>