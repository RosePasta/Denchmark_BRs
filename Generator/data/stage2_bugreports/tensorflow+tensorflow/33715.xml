<bug id='33715' author='christiansprecher' open_date='2019-10-25T09:20:52Z' closed_time='2019-11-15T22:33:30Z'>
	<summary>TF Keras fails to concatenate batches in predict when using distributed strategy</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): -
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): HPC Cluster
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): via pip
TensorFlow version (use command below): 2.0.0
Python version: 3.7.1
Bazel version (if compiling from source): -
GCC/Compiler version (if compiling from source): -
CUDA/cuDNN version: cuDNN 7.6.4, CUDA 10.0.130
GPU model and memory: 8x GeForce GTX 1080 Ti with 10479 MB memory each

Describe the current behavior
When using the distributed mirrored strategy to train the network on multiple GPU's, the predict step fails with this error code:

File "/cluster/home/user/localization/base_model.py", line 76, in predict
prediction = self.model.predict(x, use_multiprocessing = False)
File "/cluster/home/cspreche/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py", line 909, in predict
use_multiprocessing=use_multiprocessing)
File "/cluster/home/user/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 462, in predict
steps=steps, callbacks=callbacks, **kwargs)
File "/cluster/home/user/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 444, in _model_iteration
total_epochs=1)
File "/cluster/home/user/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 161, in run_one_epoch
batch_outs = _aggregate_predict_results(strategy, batch_outs, model)
File "/cluster/home/user/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 631, in _aggregate_predict_results
dist_utils.concat_along_batch_dimension(nest.flatten(nested_outs)))
File "/cluster/home/user/.local/lib/python3.7/site-packages/tensorflow_core/python/keras/distribute/distributed_training_utils.py", line 1205, in concat_along_batch_dimension
return np.concatenate(outputs)
ValueError: all the input array dimensions except for the concatenation axis must match exactly

When I print the dimensions of the elements in the concatenation, I get the following output:

(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(32, 320, 320, 1)
(10, 320, 320, 1)
(0, 0, 0, 1)
(0, 0, 0, 1)
(0, 0, 0, 1)

It seems, that the empty sets do not inherit the dimensions of full ones and lead therefore to a crash with the numpy concatenate function.
I could solve the issue with replacing

return np.concatenate(outputs)

with

out = [z for z in outputs if z.shape[0] &gt; 0]
return np.concatenate(out)

Code to reproduce the issue

ds_train = tfds.load(..)
ds_val = tfds.load(..)
strategy = tf.distribute.MirroredStrategy()
num_gpu = strategy.num_replicas_in_sync
ds_train = ds_train.batch(32 * num_gpu)
ds_val = ds_val.batch(32 * num_gpu)
with strategy.scope():
input_image = Input(...)
....
output = ....
model = tf.keras.Model(inputs=[input_image], outputs=[output])
model.compile(...)
model.fit(ds_train, validation_data = ds_val)
model.predict(ds_val, use_multiprocessing = True)

	</description>
	<comments>
		<comment id='1' author='christiansprecher' date='2019-10-28T22:51:46Z'>
		&lt;denchmark-link:https://github.com/christiansprecher&gt;@christiansprecher&lt;/denchmark-link&gt;
 Can you please provide a simple standalone code to reproduce the issue? Thanks!
		</comment>
		<comment id='2' author='christiansprecher' date='2019-11-15T22:33:30Z'>
		Closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='3' author='christiansprecher' date='2019-11-15T22:33:32Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33715&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33715&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>