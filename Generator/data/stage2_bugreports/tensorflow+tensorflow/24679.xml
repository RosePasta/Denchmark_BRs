<bug id='24679' author='ageron' open_date='2019-01-03T08:28:19Z' closed_time='2019-01-24T18:03:38Z'>
	<summary>Out of bounds error while iterating on the rows of a RaggedTensor</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mac OS X 10.13.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
N/A
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
VERSION="1.13.0-dev20181226" (this is the TF 2.0-preview)
GIT_VERSION="b'v1.12.0-5133-gc343196842'"
Python version:
3.6.6
Bazel version (if compiling from source):
N/A
GCC/Compiler version (if compiling from source):
N/A
CUDA/cuDNN version:
N/A
GPU model and memory:
N/A

Describe the current behavior
Iterating over the elements of a RaggedTensor results in an tf.errors.InvalidArgumentError after the last element.
Describe the expected behavior
I expect to be able to iterate over the rows of a RaggedTensor without any error.
Code to reproduce the issue
import tensorflow as tf
r = tf.ragged.constant([[1., 2.], [3., 4., 5.], [6.]])
for elem in r:
    print(elem)
Other info / logs
Here is the output of the program above:
&lt;denchmark-code&gt;tf.Tensor([1. 2.], shape=(2,), dtype=float32)
tf.Tensor([3. 4. 5.], shape=(3,), dtype=float32)
tf.Tensor([6.], shape=(1,), dtype=float32)
2019-01-03 16:27:36.084103: W tensorflow/core/framework/op_kernel.cc:1408] OP_REQUIRES failed at strided_slice_op.cc:106 : Invalid argument: slice index 3 of dimension 0 out of bounds.
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/ragged/ragged_getitem.py", line 104, in ragged_tensor_getitem
    return _ragged_getitem(self, key)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/ragged/ragged_getitem.py", line 153, in _ragged_getitem
    row = rt_input.values[starts[row_key]:limits[row_key]]
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py", line 654, in _slice_helper
    name=name)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py", line 820, in strided_slice
    shrink_axis_mask=shrink_axis_mask)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py", line 9334, in strided_slice
    _six.raise_from(_core._status_to_exception(e.code, message), None)
  File "&lt;string&gt;", line 3, in raise_from
tensorflow.python.framework.errors_impl.InvalidArgumentError: slice index 3 of dimension 0 out of bounds. [Op:StridedSlice] name: RaggedGetItem/strided_slice/
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ageron' date='2019-01-03T08:38:32Z'>
		Here is a simple workaround:
for elem in r.to_list():
    print(elem)
However, it moves all the data to Python. To preserve Tensors and remain within TensorFlow:
for row_index in tf.range(r.nrows()):
    print(r[row_index])
		</comment>
		<comment id='2' author='ageron' date='2019-01-06T07:10:28Z'>
		The issue was that, the __getitem__ in RaggedTensor should throw out IndexError (vs. InvalidArgumentError) in order to allow python to process iteration correctly (translated to StopIteration in next/__next__()).
Created a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/24723&gt;#24723&lt;/denchmark-link&gt;
 for the fix.
The fix will only work with eager mode as non-eager mode will not be able to find out the out-of-bound errors before session run.
		</comment>
	</comments>
</bug>