<bug id='31625' author='kvablack' open_date='2019-08-14T22:03:55Z' closed_time='2019-08-16T21:05:10Z'>
	<summary>Strange result when fetching variables under a distributed strategy</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Mojave 10.14.5
TensorFlow installed from (source or binary): binary (tf-nightly)
TensorFlow version (use command below): 1.15.0-dev20190729
Python version: 3.7.4

Describe the current behavior
When I am using any distributed strategy, and I fetch a tf.Variable, I get a result that looks like: [array([( 10,), ( 44,), ( 47,),  ...], dtype=[('resource', 'u1')])]. Instead, I have to wrap the variable in a tf.identity call in order to get its value properly.
Describe the expected behavior
The fetched result should be the value of the variable.
Code to reproduce the issue
import tensorflow as tf
import numpy as np
import sys

class RunHook(tf.train.SessionRunHook):
  def before_run(self, run_context):
    return tf.train.SessionRunArgs(fetches=['var:0'])

  def after_run(self, run_context, run_values):
    print(run_values.results)
    sys.exit(0)

def model_fn(features, labels, mode, params):
  var = tf.get_variable(
    initializer=tf.constant([1.0], dtype=tf.float32),
    name="var",
    dtype=tf.float32,
    trainable=True,
  )
  loss = tf.identity(var)
  opt = tf.train.AdamOptimizer(0.001)
  global_step = tf.train.get_or_create_global_step()
  train_op = opt.minimize(loss, global_step=global_step)
  return tf.estimator.EstimatorSpec(mode=mode, loss=loss, train_op=train_op)

strategy = tf.distribute.MirroredStrategy()
session_config = tf.ConfigProto()
config = tf.estimator.RunConfig(train_distribute=strategy, session_config=session_config,
                                log_step_count_steps=1, save_checkpoints_steps=float('inf'))
classifier = tf.estimator.Estimator(model_fn=model_fn, config=config)


x = np.array([1, 2, 3, 4])
y = np.array([5, 6, 7, 8])
train_input_fn = tf.estimator.inputs.numpy_input_fn(x, y, batch_size=1, num_epochs=None, shuffle=True)

tf.estimator.train_and_evaluate(
  classifier,
  train_spec=tf.estimator.TrainSpec(input_fn=lambda: train_input_fn, hooks=[RunHook()]),
  eval_spec=tf.estimator.EvalSpec(input_fn=lambda: train_input_fn)
)
	</description>
	<comments>
		<comment id='1' author='kvablack' date='2019-08-16T10:53:14Z'>
		I have tried on colab with TF version 1.15.0-dev20190729 and i was getting the below error`ImportError: cannot import name 'dense_features' .Please, find the &lt;denchmark-link:https://colab.research.google.com/drive/1EWycvv6DE-xDmvzhzNKkudeEjMcmrKDz&gt;gist &lt;/denchmark-link&gt;
here.However i tried with latest nightly version and was able to reproduce the issue.Please, find the &lt;denchmark-link:https://colab.research.google.com/drive/1cJ61uL5_cnJU-AGAurpaQgmGkTo2bbC7&gt;gist &lt;/denchmark-link&gt;
here.Thanks!
		</comment>
		<comment id='2' author='kvablack' date='2019-08-16T21:05:10Z'>
		This shouldn't affect correctness.
It is caused by the variable becoming a resource variable.  Your current code leave use_resource=None, yet the distribution strategy force use_resource=True on the variable.  That's why it looks like the behavior is different between the case without distribution strategy and the case with distribution strategy.   You can also see that if you remove distribution strategy, but add use_resource=True to your variable you will get the confusing print out.
Fetching the resource variables by python reference works, however.  You can accept the references in the constructor argument of RunHook() and return the hook using EstimatorSpec.training_hooks.
Hope this helps.
		</comment>
		<comment id='3' author='kvablack' date='2019-08-16T21:05:11Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31625&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31625&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>