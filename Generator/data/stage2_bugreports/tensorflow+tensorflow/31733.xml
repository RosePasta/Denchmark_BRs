<bug id='31733' author='Guzzii' open_date='2019-08-18T03:32:37Z' closed_time='2019-08-30T04:12:52Z'>
	<summary>Error when subclassing for stock example: Expected D2 of index to be 2 got 3 at position 1</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes. The code is derived from one of the integration test cases.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Stock example in Google Colab https://colab.research.google.com/github/tensorflow/docs/blob/r2.0rc/site/en/r2/tutorials/keras/feature_columns.ipynb
TensorFlow version (use command below):
tf.version.GIT_VERSION = v2.0.0-beta0-16-g1d91213fe7
tf.version.VERSION = 2.0.0-beta1
Python version:
3.6

Describe the current behavior
The following feature_column creates the issue when subclassing keras.models.Model, which works alright with sequential API.
crossed_feature = feature_column.crossed_column([age_buckets, thal], hash_bucket_size=1000)
crossed_feature = feature_column.indicator_column(crossed_feature)

Not failing with  when subclassing. The integration test here, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/engine/feature_columns_integration_test.py#L161-L183&gt;https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/engine/feature_columns_integration_test.py#L161-L183&lt;/denchmark-link&gt;
, didn't catch this problem.
Code to reproduce the issue
Running the following at the end of the notebook will reproduce the error.
class FeatureColumnDsModel(tf.keras.models.Model):
    def __init__(self, feature_columns, **kwargs):
        super().__init__(name=None, **kwargs)
        self._input_layer = tf.keras.layers.DenseFeatures(feature_columns)
        self._dense1 = tf.keras.layers.Dense(128, activation='relu')
        self._dense2 = tf.keras.layers.Dense(128, activation='relu')
        self._output_layer = tf.keras.layers.Dense(1, activation='sigmoid')
        
    def call(self, features):
        x = self._input_layer(features)
        x = self._dense1(x)
        x = self._dense2(x)
        y = self._output_layer(x)
        return y
    
model = FeatureColumnDsModel(feature_columns)
model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'],)

model.fit(train_ds,
          validation_data=val_ds,
          epochs=5)
Other info / logs
Epoch 1/5
---------------------------------------------------------------------------
InvalidArgumentError                      Traceback (most recent call last)
&lt;ipython-input-27-fa952c9e276b&gt; in &lt;module&gt;()
     21 model.fit(train_ds,
     22           validation_data=val_ds,
---&gt; 23           epochs=5)

9 frames
/tensorflow-2.0.0b1/python3.6/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)
    641         max_queue_size=max_queue_size,
    642         workers=workers,
--&gt; 643         use_multiprocessing=use_multiprocessing)
    644 
    645   def evaluate(self,

/tensorflow-2.0.0b1/python3.6/tensorflow/python/keras/engine/training_generator.py in fit(self, model, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, **kwargs)
    692         shuffle=shuffle,
    693         initial_epoch=initial_epoch,
--&gt; 694         steps_name='steps_per_epoch')
    695 
    696   def evaluate(self,

/tensorflow-2.0.0b1/python3.6/tensorflow/python/keras/engine/training_generator.py in model_iteration(model, data, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch, mode, batch_size, steps_name, **kwargs)
    262 
    263       is_deferred = not model._is_compiled
--&gt; 264       batch_outs = batch_function(*batch_data)
    265       if not isinstance(batch_outs, list):
    266         batch_outs = [batch_outs]

/tensorflow-2.0.0b1/python3.6/tensorflow/python/keras/engine/training.py in train_on_batch(self, x, y, sample_weight, class_weight, reset_metrics)
    916       self._update_sample_weight_modes(sample_weights=sample_weights)
    917       self._make_train_function()
--&gt; 918       outputs = self.train_function(ins)  # pylint: disable=not-callable
    919 
    920     if reset_metrics:

/tensorflow-2.0.0b1/python3.6/tensorflow/python/keras/backend.py in __call__(self, inputs)
   3508         value = math_ops.cast(value, tensor.dtype)
   3509       converted_inputs.append(value)
-&gt; 3510     outputs = self._graph_fn(*converted_inputs)
   3511 
   3512     # EagerTensor.numpy() will often make a copy to ensure memory safety.

/tensorflow-2.0.0b1/python3.6/tensorflow/python/eager/function.py in __call__(self, *args, **kwargs)
    570       raise TypeError("Keyword arguments {} unknown. Expected {}.".format(
    571           list(kwargs.keys()), list(self._arg_keywords)))
--&gt; 572     return self._call_flat(args)
    573 
    574   def _filtered_call(self, args, kwargs):

/tensorflow-2.0.0b1/python3.6/tensorflow/python/eager/function.py in _call_flat(self, args)
    669     # Only need to override the gradient in graph mode and when we have outputs.
    670     if context.executing_eagerly() or not self.outputs:
--&gt; 671       outputs = self._inference_function.call(ctx, args)
    672     else:
    673       self._register_gradient()

/tensorflow-2.0.0b1/python3.6/tensorflow/python/eager/function.py in call(self, ctx, args)
    443             attrs=("executor_type", executor_type,
    444                    "config_proto", config),
--&gt; 445             ctx=ctx)
    446       # Replace empty list with None
    447       outputs = outputs or None

/tensorflow-2.0.0b1/python3.6/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
     65     else:
     66       message = e.message
---&gt; 67     six.raise_from(core._status_to_exception(e.code, message), None)
     68   except TypeError as e:
     69     if any(ops._is_keras_symbolic_tensor(x) for x in inputs):

/usr/local/lib/python3.6/dist-packages/six.py in raise_from(value, from_value)

InvalidArgumentError:  Expected D2 of index to be 2 got 3 at position 1
	 [[node feature_column_ds_model/dense_features_7/age_bucketized_X_thal_indicator/SparseCross (defined at &lt;ipython-input-27-fa952c9e276b&gt;:23) ]] [Op:__inference_keras_scratch_graph_32547]

Function call stack:
keras_scratch_graph
	</description>
	<comments>
		<comment id='1' author='Guzzii' date='2019-08-19T08:19:26Z'>
		&lt;denchmark-link:https://github.com/Guzzii&gt;@Guzzii&lt;/denchmark-link&gt;

Is it possible for you to try latest TF versions (!pip install tf-nightly-2.0-preview==2.0.0.dev20190818)and let us know whether the issue persists? There were lots of performance improvements in the latest versions. I am not seeing the mentioned error in nightly versions.Thanks!
		</comment>
		<comment id='2' author='Guzzii' date='2019-08-19T19:58:20Z'>
		Thanks for the reply. I am trying to see if the error still exists in the latest version. The following code block still doesn't import the tf-nightly.
try:
    # %tensorflow_version only exists in Colab.
    %tensorflow_version 2.x
except Exception:
    pass

import tensorflow as tf
Without the try except block, it import version 1.12. Any suggestions on how to import the nightly build on colab? Thanks
		</comment>
		<comment id='3' author='Guzzii' date='2019-08-20T06:08:38Z'>
		&lt;denchmark-link:https://github.com/Guzzii&gt;@Guzzii&lt;/denchmark-link&gt;

I tried with nightly versions ('2.0.0-dev20190819') in colab and i am not seeing any error. I am able to reproduce the issue with TF 2.0.0-beta1 version. Please install  (and try again and let me know if the issue still persists. Thanks!
&lt;denchmark-link:https://user-images.githubusercontent.com/51902062/63321485-83e93c00-c33e-11e9-9332-ac3d09d4ee46.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Guzzii' date='2019-08-21T18:17:15Z'>
		This should be fixed with tf2 nightly.
		</comment>
		<comment id='5' author='Guzzii' date='2019-08-29T08:57:04Z'>
		&lt;denchmark-link:https://github.com/Guzzii&gt;@Guzzii&lt;/denchmark-link&gt;

Can you try tf2-nighly and let us know if the issue still persists. Thanks!
		</comment>
		<comment id='6' author='Guzzii' date='2019-08-29T18:25:20Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 I confirm the problem is fixed in .
		</comment>
		<comment id='7' author='Guzzii' date='2019-08-30T04:12:52Z'>
		I am closing the issue since the query is been resolved.Thanks!
		</comment>
		<comment id='8' author='Guzzii' date='2019-08-30T04:12:53Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31733&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31733&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>