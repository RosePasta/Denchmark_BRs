<bug id='506' author='LDoubleZhi' open_date='2019-09-18T07:48:15Z' closed_time='2019-09-26T11:04:13Z'>
	<summary>KeyError: 'cls_pw'</summary>
	<description>
Describe the bug
Yolov3-tiny get error when traing
To Reproduce
Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
0%|                                                                                                  | 0/19 [00:00&lt;?, ?it/s]Traceback (most recent call last):
File "train.py", line 416, in 
train()  # train normally
File "train.py", line 265, in train
loss, loss_items = compute_loss(pred, targets, model)
File "/mnt/xfs1/home/liulinzhi/CV/yolov3-master/utils/utils.py", line 325, in compute_loss
BCEcls = nn.BCEWithLogitsLoss(pos_weight=ft([h['cls_pw']]))
KeyError: 'cls_pw'
0%|
	</description>
	<comments>
		<comment id='1' author='LDoubleZhi' date='2019-09-18T08:06:59Z'>
		This is my second time to train yolov3-tiny. At the first time I have not set the --arc and there have no error. But this time if I don't set --arc to uCE or uBCE, the keyerror accured.
		</comment>
		<comment id='2' author='LDoubleZhi' date='2019-09-18T08:12:38Z'>
		When I set --arc to uBCE. The log info like this.
Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
5/99     3.75G     0.403     0.016         0     0.419        38       416: 100%|███████| 19/19 [00:10&lt;00:00,  1.77it/s]
Class    Images   Targets         P         R       mAP        F1: 100%|█████████| 5/5 [00:02&lt;00:00,  2.04it/s]
all       158       218         0         0         0         0
The P, T,mAP is zero.
		</comment>
		<comment id='3' author='LDoubleZhi' date='2019-09-18T09:11:25Z'>
		There is still a error as
File "/mnt/xfs1/home/liulinzhi/CV/yolov3/utils/utils.py", line 60, in labels_to_class_weights
labels = np.concatenate(labels, 0)  # labels.shape = (866643, 5) for COCO
File "&lt;array_function internals&gt;", line 6, in concatenate
ValueError: zero-dimensional arrays cannot be concatenated
		</comment>
		<comment id='4' author='LDoubleZhi' date='2019-09-18T10:12:01Z'>
		&lt;denchmark-link:https://github.com/LDoubleZhi&gt;@LDoubleZhi&lt;/denchmark-link&gt;
 you should download the latest with , or simply start from a fresh . The repo is constantly changing.
		</comment>
		<comment id='5' author='LDoubleZhi' date='2019-09-24T06:36:15Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 Thanks! It works. But I still have a problem. I just write a single img detection function reference the detect.py.  The preprocess cost 0.01s (letterbox()), the net cost 0.01s (model(img)), and the postprocess cost 0.004s(nms).so one img maybe cost 0.025s. It seems far from yolov3-tiny's speed.
		</comment>
		<comment id='6' author='LDoubleZhi' date='2019-09-24T06:54:06Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 I have to detect every frame come from the camera. The camera's sdk using c++. I should tansfer type mat to numpy, and then feed it in the model. and it seems 25ms per img.
		</comment>
		<comment id='7' author='LDoubleZhi' date='2019-09-25T11:01:10Z'>
		&lt;denchmark-link:https://github.com/LDoubleZhi&gt;@LDoubleZhi&lt;/denchmark-link&gt;
 speed comes from batching multiple images together.
		</comment>
		<comment id='8' author='LDoubleZhi' date='2019-09-26T02:34:28Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 So it is different from the speed from camera's detection?
		</comment>
		<comment id='9' author='LDoubleZhi' date='2019-09-26T09:51:49Z'>
		&lt;denchmark-link:https://github.com/LDoubleZhi&gt;@LDoubleZhi&lt;/denchmark-link&gt;
 we don't have inference speed benchmarks, but you can see in the training speed benchmarks that we can train YOLOv3-SPP (not tiny) at about 115 images per second (416 resolution) on a V100 at batch size 32. Therefore the inference throughput would be some multiple of this value, perhaps twice the speed.
&lt;denchmark-link:https://github.com/ultralytics/yolov3#speed&gt;https://github.com/ultralytics/yolov3#speed&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='LDoubleZhi' date='2019-09-26T11:04:13Z'>
		&lt;denchmark-link:https://github.com/LDoubleZhi&gt;@LDoubleZhi&lt;/denchmark-link&gt;
 in any case, the original thread seems to be resolved, so I will close the issue.
		</comment>
	</comments>
</bug>