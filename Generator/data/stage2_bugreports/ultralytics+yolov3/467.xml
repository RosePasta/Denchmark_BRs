<bug id='467' author='TOMLEUNGKS' open_date='2019-08-23T07:19:27Z' closed_time='2019-08-23T18:18:11Z'>
	<summary>training got stuck when working out the mAP</summary>
	<description>
Hello! First of all, thanks for all the contributors to this amazing project. I was trying to train a model with 4 classes, by custom data (containing 1,233 images). And I followed the tutorial: &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&gt;https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&lt;/denchmark-link&gt;

When I started training, it got stuck at epoch 0 when working out the mAP without any error. Here's how it looks like:
&lt;denchmark-link:https://user-images.githubusercontent.com/51043693/63573933-30ceed80-c5b9-11e9-9042-0447db39815e.png&gt;&lt;/denchmark-link&gt;

This is where it stops.
Does anyone have any idea on how to solve this issue? Million thanks!!
(here's the link to the all the files: &lt;denchmark-link:https://github.com/TOMLEUNGKS/YOLO_V4.git&gt;https://github.com/TOMLEUNGKS/YOLO_V4.git&lt;/denchmark-link&gt;
)
	</description>
	<comments>
		<comment id='1' author='TOMLEUNGKS' date='2019-08-23T10:21:22Z'>
		&lt;denchmark-link:https://github.com/TOMLEUNGKS&gt;@TOMLEUNGKS&lt;/denchmark-link&gt;
 try --nosave, it will save only the final epoch and skip mAP calculation of the first 10 epochs.
Your dataset is likely producing many false positives, causing NMS to proceed slowly.
		</comment>
		<comment id='2' author='TOMLEUNGKS' date='2019-08-23T14:24:06Z'>
		Thank you so much Glenn Jocher &lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
. It works! Just passed 10th epoch and hopefully will get the first model next week. :)
		</comment>
		<comment id='3' author='TOMLEUNGKS' date='2019-08-23T14:49:32Z'>
		Hmm ok. Yes, in some cases you don't want to test your model right away, especially if the model trains on a small dataset, because it won't be trained sufficiently well and may produce many FPs initially which slows down testing. In the extreme cases it may take hours to run test.py this way.
On the other hand large datasets like COCO you can test right away after the first epoch, since each epoch runs through 120,000 images, it has trained sufficiently after just one epoch to test normally.
		</comment>
		<comment id='4' author='TOMLEUNGKS' date='2019-08-23T15:11:49Z'>
		Thank you so much &lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 for sharing your experience! Now I have a better idea on the mechanism behind. Many thanks!
May I ask one more question? From the train.py, the epoch was set to be 100, which turns out to be 273. If I would like to adjust the epoch number (e.g. make it to 100 or 500), how should I do it?
		</comment>
		<comment id='5' author='TOMLEUNGKS' date='2019-08-23T18:18:11Z'>
		&lt;denchmark-link:https://github.com/TOMLEUNGKS&gt;@TOMLEUNGKS&lt;/denchmark-link&gt;
 actually we just updated train.py to remove the duplicate entry locations.
To change your epochs to 300 simply do python3 train.py --epochs 300
		</comment>
		<comment id='6' author='TOMLEUNGKS' date='2019-08-24T04:47:50Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 Thank you so much for your generous help. Everything works perfectly! :)
		</comment>
		<comment id='7' author='TOMLEUNGKS' date='2019-08-24T11:28:27Z'>
		great!
		</comment>
	</comments>
</bug>