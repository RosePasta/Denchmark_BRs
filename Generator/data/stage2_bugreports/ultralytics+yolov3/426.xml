<bug id='426' author='vamsime' open_date='2019-08-06T06:42:57Z' closed_time='2019-08-09T14:27:40Z'>
	<summary>Unable to convert alexnet.pt to .weights</summary>
	<description>
Describe the bug
When I tried to convert alexnet PyTorch weights to darknet .weights format, I have encountered an error:
Traceback (most recent call last):
/home/ultralytics/yolov3/models.py", line 353, in convert
model.load_state_dict(torch.load(weights, map_location='cpu')['model'])
TypeError: 'AlexNet' object is not subscriptable
To Reproduce
Steps to reproduce the behavior:

Go to https://github.com/pjreddie/darknet/blob/master/cfg/alexnet.cfg
Get the configuration file and save it in cfg directory of ultralytics directory
Use torchvision.models and torch to save the alexnet weights:

from torchvision import models
import torch
dir(models)
alexnet = models.alexnet(pretrained=True)
torch.save(alexnet, "/home/alexenetweights/alexnetweights.pt")

Save alexnetweights.pt in weights directory of ultralytics directory.

Expected behavior
I wanted to explore the ultralytics as I have a requirement to convert a PyTorch model weights to darknet .weights format.
To start with, I wanted to get alexnet weights in .weights format.
I have used the command: python3  -c "from models import *; convert('cfg/alexnet.cfg', 'weights/alexnetweights.pt')"
Desktop (please complete the following information):

OS: [e.g. iOS]
Version [e.g. 22]

Ubuntu 18.04.2 LTS
Additional context
Please let me know how to get the proper cfg file if the cfg file that I have used is not expected. Also, if the way I got the alexnet weights is correct
	</description>
	<comments>
		<comment id='1' author='vamsime' date='2019-08-06T11:16:58Z'>
		Hmmm. I think if you want to do this, the easiest method would be to find a pretrained alexnet.weights model if they are available, and then pass that in along with alexnet.cfg to convert to a working pytorch alexnet that is translatable to darknet.
Another option would be to train alexnet on alexyab/darknet, and then you could convert your trained alexnet.weights and alexnet.cfg to alexnet.pt to work with this repo. The complication arises from the fact that while this is a PyTorch repo, it is linked closely to darknet, so models trained here are exportable to darknet, and darknet trained models are usable here (but not so much torchvision models).
In your example you have the model originating from one source (torchvision) and the cfg from another (darknet), and this is the reason for the incompatibility.
		</comment>
	</comments>
</bug>