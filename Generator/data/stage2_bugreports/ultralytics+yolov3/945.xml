<bug id='945' author='Jungmo' open_date='2020-03-20T07:50:22Z' closed_time='2020-03-28T06:22:59Z'>
	<summary>Use yolov3-spp-ultralytics.pt for c# yolo (Alturos.Yolo)</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

I don't think this is a bug because I am sure that your nice model will work properly on Python environment, but I think there is no reason that the yolov3-spp-ultralytics.pt cannot work properly on C# project using Alturos.Yolo. I'd like to know your idea or intuition for my next action.
When I use cfg/yolov3-spp.cfg and yolov3-spp.weights downloaded in AlexeyAB's YOLO repository, my c# program can output the results of object detection properly.
However, when I use cfg/yolo3-spp.cfg and yolov3-spp-ultralytics.pt for my c# project using Alturos.Yolo, the model always outputs "no object" in the video though the model can be loaded.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;


open vs 2019, make c# package, install Alturos.Yolo from Nuget package manager
load yolov3-spp.weight with cfg/yolov3-spp.cfg and see result (working good)
load yolov3-spp-ultralytics.pt with cfg/yolov3-spp.cfg and see result (working bad)

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;


load yolov3-spp-ultralytics.pt with cfg/yolov3-spp.cfg and see result (working bad)
-&gt;
load yolov3-spp-ultralytics.pt with cfg/yolov3-spp.cfg and see result (working good)

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

Windows 10, vs 2019, Alturos.Yolo
Desktop (please complete the following information):

OS: Windows 10

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;




	</description>
	<comments>
		<comment id='1' author='Jungmo' date='2020-03-20T07:50:58Z'>
		Hello &lt;denchmark-link:https://github.com/Jungmo&gt;@Jungmo&lt;/denchmark-link&gt;
, thank you for your interest in our work! Please visit our &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&gt;Custom Training Tutorial&lt;/denchmark-link&gt;
 to get started, and see our &lt;denchmark-link:https://colab.research.google.com/drive/1G8T-VFxQkjDe4idzN8F-hbIBqkkkQnxw&gt;Google Colab Notebook&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://hub.docker.com/r/ultralytics/yolov3&gt;Docker Image&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart&gt;GCP Quickstart Guide&lt;/denchmark-link&gt;
 for example environments.
If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
		</comment>
		<comment id='2' author='Jungmo' date='2020-03-23T00:38:44Z'>
		&lt;denchmark-link:https://github.com/Jungmo&gt;@Jungmo&lt;/denchmark-link&gt;
 I don't know what Alturos is. The repo only supports export via ONNX and then from there anywhere you want.
		</comment>
		<comment id='3' author='Jungmo' date='2020-03-23T05:13:32Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 Thanks for your comment.
The main question is not for the entire repo, just for your pretrained weight "yolov3-spp-ultralytics.pt". Alturo's yolo is just wrapper of alexeyab's yolo for using yolo on c#. It uses the same cfg file and weight file as yours and alexeyab's and pjreddie's. I just wonder that what makes your pretrained yolov3-spp-ultralytics.pt cannot detect object on c# program even the model is loaded well (I checked it console log). What is the main difference between .weight and .pt? I conjecture that the only difference might be how to save the model.
		</comment>
	</comments>
</bug>