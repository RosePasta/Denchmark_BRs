<bug id='311' author='kashyapj2793' open_date='2019-06-01T11:38:50Z' closed_time='2019-06-30T13:33:38Z'>
	<summary>Yolov3 model trained on custom data returns Nan when used in OpenCV 3.4.6 C++ project</summary>
	<description>
Description
I trained a yolov3 model on python using pytorch. It works perfectly well in any python implementation. But when I try to use the same model in C++ using openCV 3.4.6 the model returns Nan. I have tested the openCV C++ code using the yolov3.weights model that is provided by you. It works fine with that model too. Any idea as to what I am doing wrong?
PS: This model is trained to predict only one class.
To Reproduce
Steps to reproduce the behavior:

Train model in python using pytorch
Convert the model_weights.pt file to model_weights.weights
Import model in openCV C++ project
Forward pass of model in openCV C++ project returns Nan

PS: OpenCV version used for training is 3.4.2 and that used for testing on C++ is 3.4.6
	</description>
	<comments>
		<comment id='1' author='kashyapj2793' date='2019-06-01T15:22:35Z'>
		&lt;denchmark-link:https://github.com/kashyapj2793&gt;@kashyapj2793&lt;/denchmark-link&gt;
 this may be related to &lt;denchmark-link:https://github.com/AlexeyAB/darknet/issues/2914&gt;AlexeyAB/darknet#2914&lt;/denchmark-link&gt;

Apparently ultralytics/yolov3 works equally well with *.pt or *.weights files, but darknet will not work correctly with *.pt file exported to darknet, due to different headers possibly. I think the fix is simply to update the header info to the latest spec, but your results will also then depend on if you are using the original darknet or alexyab/darknet.
		</comment>
	</comments>
</bug>