<bug id='740' author='YANGYUFEI1234' open_date='2019-12-24T14:52:31Z' closed_time='2020-01-16T19:11:58Z'>
	<summary>Train custom data issue</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Thank you for sharing your project !!!
Training custom data which has two classes, if I don't modify the filtersize and numclasses in '.cfg' file, everything works fine, I can train and detect normally. (Actually I forget to change the 'cfg' file at the beginning)
However if I modify the filtersize to 21, which is (3*(5+2)), and numclasses in yolo layer to 2.
P, R, mAP are always zero, I don't know whether it is a bug or my fault.
I know it seems like I should set default weights to nothing rather than the former default value as training from scratch, but it still doesn't work.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:

Download ZIP from https://drive.google.com/file/d/17Fi8F1G138cMuD8tYdWP4BZC9cs32cZ/view?usp=sharing
Move all the files except 'yolov3-spp-swim.cfg' in this ZIP to 'data' folder in yolov3 project
Move 'yolov3-spp-swim.cfg' to 'cfg' folder in yolov3 project
run python3 train.py --device 0 --data data/swim.data --cfg cfg/yolov3-spp-swim.cfg

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

read 96 images for training and corresponding labels
read 10 images for training and corresponding labels
And then comes with P, R, mAP are all equals to zero no matter how many epochs
&lt;denchmark-link:https://user-images.githubusercontent.com/48313636/71417620-45271200-26a1-11ea-98e0-0f1039dd911d.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

If applicable, add screenshots to help explain your problem.
Desktop (please complete the following information):

OS: [e.g. iOS]
Version [e.g. 22]

Smartphone (please complete the following information):

Device: [e.g. iPhoneXS]
OS: [e.g. iOS8.1]
Version [e.g. 22]

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='YANGYUFEI1234' date='2019-12-24T22:06:29Z'>
		&lt;denchmark-link:https://github.com/YANGYUFEI1234&gt;@YANGYUFEI1234&lt;/denchmark-link&gt;
 this is normal behavior. yolov3-spp.cfg (the default) is configured for 80 classes, so you can use it to train datasets with up to 80 classes (labelled with class numbers 0-79).
		</comment>
		<comment id='2' author='YANGYUFEI1234' date='2019-12-24T22:12:05Z'>
		
@YANGYUFEI1234 this is normal behavior. yolov3-spp.cfg (the default) is configured for 80 classes, so you can use it to train datasets with up to 80 classes (labelled with class numbers 0-79).

Thank you for replying so quickly.
What should I do if I want to train custom data, I follow the everything in 'train custom data example', It always won't work if I change default cfg file....
		</comment>
		<comment id='3' author='YANGYUFEI1234' date='2019-12-24T22:13:32Z'>
		
@YANGYUFEI1234 this is normal behavior. yolov3-spp.cfg (the default) is configured for 80 classes, so you can use it to train datasets with up to 80 classes (labelled with class numbers 0-79).

My dataset is pretty small, which is only 52 MB, so maybe you can try to reproduce the bug and see what will happen
		</comment>
		<comment id='4' author='YANGYUFEI1234' date='2019-12-24T22:16:56Z'>
		&lt;denchmark-link:https://github.com/YANGYUFEI1234&gt;@YANGYUFEI1234&lt;/denchmark-link&gt;
 we don't have time to look at individual user's data, but rest assured the training code is error free if your dataset is configured correctly. See &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&gt;https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&lt;/denchmark-link&gt;
 for directions on exactly how to format your data and cfg files according to your class count.
Alternatively, if the default cfg is working for you, you can simply use that as well.
		</comment>
		<comment id='5' author='YANGYUFEI1234' date='2019-12-24T22:18:34Z'>
		&lt;denchmark-link:https://github.com/YANGYUFEI1234&gt;@YANGYUFEI1234&lt;/denchmark-link&gt;
 also there are several other premade cfg files available in the cfg folder, such as yolov3-spp-1cls.cfg for single class datasets. Lastly, zero mAP after a few epochs doesn't mean anything, you need to train for hundreds of epochs, or thousands possibly, to achieve best results.
		</comment>
		<comment id='6' author='YANGYUFEI1234' date='2019-12-24T22:34:20Z'>
		
@YANGYUFEI1234 also there are several other premade cfg files available in the cfg folder, such as yolov3-spp-1cls.cfg for single class datasets. Lastly, zero mAP after a few epochs doesn't mean anything, you need to train for hundreds of epochs, or thousands possibly, to achieve best results.

ok, thanks
		</comment>
		<comment id='7' author='YANGYUFEI1234' date='2019-12-25T22:01:31Z'>
		Hi,
I am having the same issue, in my case there are 6 classes, so finding a suitable cfg file is a bit problematic.
Is there a way to train the network without loading initial weights? I saw some tutorials that add the variable: --weights '' to train.py , but it does not seem to work.
If it is not possible, then what are the alternatives?
		</comment>
		<comment id='8' author='YANGYUFEI1234' date='2019-12-27T22:45:02Z'>
		&lt;denchmark-link:https://github.com/Galalon&gt;@Galalon&lt;/denchmark-link&gt;
 to train with no initial weights use 
		</comment>
		<comment id='9' author='YANGYUFEI1234' date='2020-01-16T19:11:58Z'>
		I'll close this issue for now as the original issue appears to have been resolved, and/or no activity has been seen for some time. Feel free to comment if this is not the case.
		</comment>
	</comments>
</bug>