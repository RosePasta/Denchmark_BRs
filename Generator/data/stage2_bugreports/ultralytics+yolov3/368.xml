<bug id='368' author='rayjan0114' open_date='2019-07-14T04:15:42Z' closed_time='2019-07-16T21:02:32Z'>
	<summary>the txt outputs from detect.py are out of boundary</summary>
	<description>
Describe the bug
Some boxes' xyxy that my model detects exceed the original image size.
Any ideas would be grateful.
Thanks
To Reproduce
Steps to reproduce the behavior:

turn conf_thres=0.001
turn save_txt=True
run detect.py

Version
cloned at 5 days ago
	</description>
	<comments>
		<comment id='1' author='rayjan0114' date='2019-07-14T10:59:23Z'>
		&lt;denchmark-link:https://github.com/rayjan0114&gt;@rayjan0114&lt;/denchmark-link&gt;
 yes you are correct, I've observed this in the past as well.
The repo automatically clamps to 0 at the moment to prevent negative valued box coordinates in detect.py but does not clamp to a ceiling. I'll add a TODO for this, though ideally this clamping should be commonly located so both test.py and detect.py can use it. The current zero clamping in detect.py occurs in the scale_coords() function, on line 133 of utils.py:



yolov3/utils/utils.py


        Lines 127 to 135
      in
      3fc676b






 def scale_coords(img1_shape, coords, img0_shape): 



 # Rescale coords1 (xyxy) from img1_shape to img0_shape 



 gain = max(img1_shape) / max(img0_shape)  # gain  = old / new 



 coords[:, [0, 2]] -= (img1_shape[1] - img0_shape[1] * gain) / 2 # x padding 



 coords[:, [1, 3]] -= (img1_shape[0] - img0_shape[0] * gain) / 2 # y padding 



 coords[:, :4] /= gain 



 coords[:, :4] = coords[:, :4].clamp(min=0) 



 return coords 



 





		</comment>
		<comment id='2' author='rayjan0114' date='2019-07-15T14:08:11Z'>
		&lt;denchmark-link:https://github.com/rayjan0114&gt;@rayjan0114&lt;/denchmark-link&gt;
 this should be fixed now in &lt;denchmark-link:https://github.com/ultralytics/yolov3/commit/e73e24744265e8fb9ce7982ff61fbde30c23d911&gt;e73e247&lt;/denchmark-link&gt;
.
I'm working on verifying this doesn't occur in test.py as well.
		</comment>
	</comments>
</bug>