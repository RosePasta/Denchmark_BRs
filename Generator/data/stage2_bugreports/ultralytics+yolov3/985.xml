<bug id='985' author='tinothy22' open_date='2020-03-30T12:29:58Z' closed_time='2020-04-01T11:25:20Z'>
	<summary>why my loss is so big?</summary>
	<description>
I used yolov3.cfg migration to learn my custom data set (two classes). The following is my loss for the first ten cycles. Why is it so big? Can you help me see where is the problem
Namespace(accumulate=4, adam=False, batch_size=8, bucket='', cache_images=False, cfg='cfg/yolov3.cfg', data='data/coco1.data', device='', epochs=100, evolve=False, img_size=[416], multi_scale=False, name='', nosave=False, notest=False, rect=False, resume=False, single_cls=False, weights='weights/yolov3.pt') Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1660 Ti with Max-Q Design', total_memory=6144MB)
Model Summary: 222 layers, 6.15291e+07 parameters, 6.15291e+07 gradients
Caching labels (6367 found, 0 missing, 0 empty, 0 duplicate, for 6367 images): 100%|██████████| 6367/6367 [00:01&lt;00:00, 6270.53it/s]
Caching labels (1592 found, 0 missing, 0 empty, 0 duplicate, for 1592 images): 100%|██████████| 1592/1592 [00:00&lt;00:00, 5994.82it/s]
Using 8 dataloader workers
Starting training for 100 epochs...
Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
0/99     4.26G      5.74      2.97       101       110        20       416: 100%|██████████| 796/796 [09:33&lt;00:00,  1.39it/s]
Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:45&lt;00:00,  4.34it/s]
all  1.59e+03  3.18e+03         0         0  2.94e-05         0
&lt;denchmark-code&gt; Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  1/99     4.27G       5.5      2.94      60.1      68.5        16       416: 100%|██████████| 796/796 [09:34&lt;00:00,  1.39it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:40&lt;00:00,  4.86it/s]
             all  1.59e+03  3.18e+03         0         0         0         0

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  2/99     4.27G      5.35      2.89      52.1      60.3        12       416: 100%|██████████| 796/796 [09:32&lt;00:00,  1.39it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:40&lt;00:00,  4.86it/s]
             all  1.59e+03  3.18e+03         0         0         0         0
&lt;/denchmark-code&gt;

Model Bias Summary:    layer        regression        objectness    classification
82      -0.31+/-0.39      -5.68+/-1.21      -0.66+/-3.97
94       0.07+/-0.22      -6.01+/-0.07      -0.18+/-1.44
106       0.09+/-0.19      -6.95+/-0.08       0.01+/-2.92
&lt;denchmark-code&gt; Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  3/99     4.27G      5.18      1.62      46.6      53.4        21       416: 100%|██████████| 796/796 [09:35&lt;00:00,  1.38it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:39&lt;00:00,  5.09it/s]
             all  1.59e+03  3.18e+03         0         0         0         0

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  4/99     4.27G       5.1      1.63      43.2      49.9        19       416: 100%|██████████| 796/796 [09:34&lt;00:00,  1.38it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:42&lt;00:00,  4.73it/s]
             all  1.59e+03  3.18e+03       0.5  0.000627    0.0123   0.00125

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  5/99     4.27G      4.98      1.63        43      49.6        16       416: 100%|██████████| 796/796 [09:31&lt;00:00,  1.39it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:50&lt;00:00,  3.98it/s]
             all  1.59e+03  3.18e+03         0         0    0.0157         0

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  6/99     4.27G      4.96      1.63      42.6      49.2        13       416: 100%|██████████| 796/796 [09:32&lt;00:00,  1.39it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:42&lt;00:00,  4.72it/s]
             all  1.59e+03  3.18e+03       0.5  0.000627    0.0114   0.00125

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  7/99     4.27G      4.86      1.65      40.9      47.4        19       416: 100%|██████████| 796/796 [09:43&lt;00:00,  1.36it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:53&lt;00:00,  3.70it/s]
             all  1.59e+03  3.18e+03       0.5  0.000627    0.0313   0.00125

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  8/99     4.27G      4.78      1.65      40.8      47.3        23       416: 100%|██████████| 796/796 [09:38&lt;00:00,  1.38it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:47&lt;00:00,  4.20it/s]
             all  1.59e+03  3.18e+03         0         0    0.0171         0

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
  9/99     4.27G      4.78      1.64      39.4      45.9        16       416: 100%|██████████| 796/796 [09:36&lt;00:00,  1.38it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:47&lt;00:00,  4.15it/s]
             all  1.59e+03  3.18e+03       0.5  0.000627    0.0283   0.00125

 Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
 10/99     4.27G      4.71      1.67      39.5      45.8        17       416: 100%|██████████| 796/796 [09:33&lt;00:00,  1.39it/s]
           Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:50&lt;00:00,  3.91it/s]
             all  1.59e+03  3.18e+03       0.5  0.000627    0.0208   0.00125
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tinothy22' date='2020-03-30T12:33:04Z'>
		I used yolov3.cfg  to transfer learning my custom data set (two classes). The following is my loss for the first ten epochs. Why is it so big? Can you help me see where is the problem
		</comment>
		<comment id='2' author='tinothy22' date='2020-03-30T16:51:37Z'>
		&lt;denchmark-link:https://github.com/tinothy22&gt;@tinothy22&lt;/denchmark-link&gt;
 your class loss is too large compared to your other 2. You should git pull to make sure you are using the latest code, and if it persists then reduce your cls loss hyperparameter in train.py.
		</comment>
		<comment id='3' author='tinothy22' date='2020-03-31T01:06:15Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 Thank you very much for your reply and guidance. I used the latest code. I reduced the cls loss, and the loss was around 10 in the first epoch.
		</comment>
		<comment id='4' author='tinothy22' date='2020-03-31T03:55:26Z'>
		&lt;denchmark-link:https://github.com/tinothy22&gt;@tinothy22&lt;/denchmark-link&gt;
 that might still be too big. You want your losses to be evenly balanced, so perhaps reduce a bit further so it matches your second highest loss (GIoU).
		</comment>
		<comment id='5' author='tinothy22' date='2020-03-31T04:31:54Z'>
		hyp = {'giou': 3.54,  # giou loss gain
'cls': 5.0,  # cls loss gain
'cls_pw': 1.0,  # cls BCELoss positive_weight
'obj': 64.3,  # obj loss gain (*=img_size/320 if img_size != 320)
'obj_pw': 1.0,  # obj BCELoss positive_weight
'iou_t': 0.225,  # iou training threshold
'lr0': 0.01,  # initial learning rate (SGD=5E-3, Adam=5E-4)
'lrf': 0.0005,  # final learning rate (with cos scheduler)
'momentum': 0.937,  # SGD momentum
'weight_decay': 0.000484,  # optimizer weight decay
'fl_gamma': 0.0,  # focal loss gamma (efficientDet default is gamma=1.5)
'hsv_h': 0.0138,  # image HSV-Hue augmentation (fraction)
'hsv_s': 0.678,  # image HSV-Saturation augmentation (fraction)
'hsv_v': 0.36,  # image HSV-Value augmentation (fraction)
'degrees': 1.98 * 0,  # image rotation (+/- deg)
'translate': 0.05 * 0,  # image translation (+/- fraction)
'scale': 0.05 * 0,  # image scale (+/- gain)
'shear': 0.641 * 0}  # image shear (+/- deg)
I only changed the default value of cls loss and reduced it to 5. This is the result of 19 epochs. Maybe I need to reduce it to 2-3? One more question, do I need to set lr0 to 5E-3?
&lt;denchmark-code&gt;Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
     18/99     4.27G      2.18     0.699      1.14      4.02        40       416: 100%|██████████| 796/796 [09:31&lt;00:00,  1.39it/s]
               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 199/199 [00:56&lt;00:00,  3.53it/s]
                 all  1.59e+03  3.18e+03     0.845     0.844     0.857     0.844
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='tinothy22' date='2020-03-31T18:33:21Z'>
		&lt;denchmark-link:https://github.com/tinothy22&gt;@tinothy22&lt;/denchmark-link&gt;
 looks fine to me, the losses are similar in magnitude.
		</comment>
		<comment id='7' author='tinothy22' date='2020-04-01T11:24:49Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 thank you for your guidence
		</comment>
	</comments>
</bug>