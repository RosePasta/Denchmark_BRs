<bug id='983' author='houzeyu2683' open_date='2020-03-30T03:54:05Z' closed_time='2020-05-08T00:07:43Z'>
	<summary>Problem in test loader when training the model.</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

A clear and concise description of what the bug is.
I use the simple coco data to learn how to training the custom data.
In the train part is work and no problem.
After the first epoch, I get the error blow.
&lt;denchmark-code&gt;img = cv2.copyMakeBorder(img, top, bottom, left, right, cv2.BORDER_CONSTANT, value=color)  # add border
cv2.error: OpenCV(4.2.0) C:\projects\opencv-python\opencv\modules\core\src\copy.cpp:1421: error: (-215:Assertion failed) top &gt;= 0 &amp;&amp; bottom &gt;= 0 &amp;&amp; left &gt;= 0 &amp;&amp; right &gt;= 0 &amp;&amp; _src.dims() &lt;= 2 in function 'cv::copyMakeBorder'
&lt;/denchmark-code&gt;

Take a look in the code.

The error happen in test loader when starting iteration.


In the loader, I find the error happen in the letterbox function.

&lt;denchmark-code&gt;def letterbox(img, new_shape=(416, 416), color=(128, 128, 128),
              auto=True, scaleFill=False, scaleup=True, interp=cv2.INTER_AREA):
    # Resize image to a 32-pixel-multiple rectangle https://github.com/ultralytics/yolov3/issues/232
    shape = img.shape[:2]  # current shape [height, width]
    if isinstance(new_shape, int):
        new_shape = (new_shape, new_shape)

    # Scale ratio (new / old)
    r = max(new_shape) / max(shape)
    if not scaleup:  # only scale down, do not scale up (for better test mAP)
        r = min(r, 1.0)

    # Compute padding
    ratio = r, r  # width, height ratios
    new_unpad = int(round(shape[1] * r)), int(round(shape[0] * r))
    dw, dh = new_shape[1] - new_unpad[0], new_shape[0] - new_unpad[1]  # wh padding
    if auto:  # minimum rectangle
        dw, dh = np.mod(dw, 32), np.mod(dh, 32)  # wh padding
    elif scaleFill:  # stretch
        dw, dh = 0.0, 0.0
        new_unpad = new_shape
        ratio = new_shape[0] / shape[1], new_shape[1] / shape[0]  # width, height ratios

    dw /= 2  # divide padding into 2 sides
    dh /= 2

    if shape[::-1] != new_unpad:  # resize
        img = cv2.resize(img, new_unpad, interpolation=interp)  # INTER_AREA is better, INTER_LINEAR is faster
    top, bottom = int(round(dh - 0.1)), int(round(dh + 0.1))
    left, right = int(round(dw - 0.1)), int(round(dw + 0.1))
    # return(img, top, bottom, left, right, cv2.BORDER_CONSTANT, color)
    img = cv2.copyMakeBorder(img, top, bottom, left, right, cv2.BORDER_CONSTANT, value=color)  # add border
    return img, ratio, (dw, dh)
&lt;/denchmark-code&gt;


The cv2.copyMakeBorder happen error because there are negative number in the top, bottom, left, right.
The negative number happen in this line.
dw, dh = new_shape[1] - new_unpad[0], new_shape[0] - new_unpad[1]  # wh padding

	</description>
	<comments>
		<comment id='1' author='houzeyu2683' date='2020-03-30T04:11:06Z'>
		&lt;denchmark-link:https://github.com/houzeyu2683&gt;@houzeyu2683&lt;/denchmark-link&gt;
 thanks! Several people have commented on this error. Do you know what the exact values were that were being passed? It looks like we should modify this calculation, or at least prevent negative values.
		</comment>
		<comment id='2' author='houzeyu2683' date='2020-03-30T04:11:07Z'>
		I had the same problem when I was training my dataset, but I looked for a while and couldn't figure out how to change the code
		</comment>
		<comment id='3' author='houzeyu2683' date='2020-03-30T04:22:09Z'>
		OK, I will take a look in here and try to fix it. But I need to known the goal of this function. For bounding box or just padding the image to the specific size?
		</comment>
		<comment id='4' author='houzeyu2683' date='2020-03-30T04:27:57Z'>
		This might be a function of changing the size of the original image by padding or cropping. I trained on the dataset of wearing masks, and debug showed that two variables were around -76, but it suggested that all variables were greater than or equal to zero
		</comment>
		<comment id='5' author='houzeyu2683' date='2020-03-30T04:33:44Z'>
		@ChrisHaooooooo You means the test loader return is equal to train loader? If yes, I will modified the test loader like train loader.
		</comment>
		<comment id='6' author='houzeyu2683' date='2020-03-30T04:37:19Z'>
		I'm sorry, I didn't quite catch your meaning, but my problem is the same as yours, if you can find the problem, I will be very grateful to you!
		</comment>
		<comment id='7' author='houzeyu2683' date='2020-03-30T16:58:22Z'>
		&lt;denchmark-link:https://github.com/houzeyu2683&gt;@houzeyu2683&lt;/denchmark-link&gt;
 this function letterboxes an image. In other words it takes an image and pads the shorter side to .
&lt;denchmark-link:https://en.wikipedia.org/wiki/Letterboxing_(filming)&gt;https://en.wikipedia.org/wiki/Letterboxing_(filming)&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='houzeyu2683' date='2020-03-30T19:09:16Z'>
		&lt;denchmark-link:https://github.com/houzeyu2683&gt;@houzeyu2683&lt;/denchmark-link&gt;
 if you could supply the the image that was causing the bug, or the dataset you are using then we might be able to reproduce.
Since this does not occur on COCO images (nor a few other datasets we have used), we can not  reproduce here.
		</comment>
		<comment id='9' author='houzeyu2683' date='2020-03-31T06:35:19Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 I can provide the dataset, but I override the  class.
I try to separate the annotation and image to different folder.
&lt;denchmark-link:https://drive.google.com/file/d/1FjFcehC_Uo1FuuSTa1fOjRi5C7Q8p7Xi/view?usp=sharing&gt;Data link is here&lt;/denchmark-link&gt;

I set  look like train loader, and it's work.
But the evaluation of test is look wired.
&lt;denchmark-link:https://user-images.githubusercontent.com/42731603/77995334-2f8b4d80-735e-11ea-903b-3ef058a93081.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='houzeyu2683' date='2020-03-31T18:39:11Z'>
		&lt;denchmark-link:https://github.com/houzeyu2683&gt;@houzeyu2683&lt;/denchmark-link&gt;
 augment=True creates a mosaic and bypasses the letterboxing function, but this is definitely not recommended for testing.
If you knew the exact image, or the batch of images that it occurs, all I need are those images to use with test.py to reproduce the error.
		</comment>
		<comment id='11' author='houzeyu2683' date='2020-04-01T02:44:06Z'>
		Does letterbox function padding the origin image to the specific size?
For example, two images, shapes are (192, 412), (428 587). Resize or pad to the (416, 416)?
		</comment>
		<comment id='12' author='houzeyu2683' date='2020-04-01T04:54:49Z'>
		&lt;denchmark-link:https://github.com/houzeyu2683&gt;@houzeyu2683&lt;/denchmark-link&gt;
 it pads them to the requested size. Aspect ratio is maintained. You can see this in test_batch0.jpg etc.
		</comment>
		<comment id='13' author='houzeyu2683' date='2020-05-02T00:07:38Z'>
		This issue is stale because it has been open 30 days with no activity. Remove Stale label or comment or this will be closed in 5 days.
		</comment>
	</comments>
</bug>