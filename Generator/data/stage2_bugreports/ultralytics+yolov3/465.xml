<bug id='465' author='zhzgithub' open_date='2019-08-22T01:21:37Z' closed_time='2019-09-26T11:03:40Z'>
	<summary>test mAP: img-size 416  is bigger than img-size 608</summary>
	<description>
Hello! When I test my model, the mAP of img-size 416  is bigger than img-size 608. What's wrong? Looking forward to your reply！
608:
&lt;denchmark-code&gt;Namespace(batch_size=16, cfg='cfg/yolov3-voc.cfg', conf_thres=0.001, data='data/voc.data', gpus='3', img_size=608, iou_thres=0.5, nms_thres=0.5, save_json=False, weights='weights/last.pt')           
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080 Ti', total_memory=11178MB)

                         Class    Images   Targets         P         R       mAP        F1: 100%|████████████████████████████████████████████████████████████████████████████████ 310/310 [08:24&lt;00:00,  1.63s/it]
                           all  4.95e+03   1.2e+04    0.0301     0.892     0.642     0.058
&lt;/denchmark-code&gt;

416:
&lt;denchmark-code&gt;Namespace(batch_size=16, cfg='cfg/yolov3-voc.cfg', conf_thres=0.001, data='data/voc.data', gpus='1', img_size=416, iou_thres=0.5, nms_thres=0.5, save_json=False, weights='weights/best.pt')
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080 Ti', total_memory=11178MB)

                         Class    Images   Targets         P         R       mAP        F1: 100%|█████████████████████████████████████████████████████████████████████████████████| 310/310 [06:30&lt;00:00,  1.26s/it]
                           all  4.95e+03   1.2e+04    0.0531     0.878     0.695    0.0983
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zhzgithub' date='2019-08-22T09:53:42Z'>
		&lt;denchmark-link:https://github.com/zhzgithub&gt;@zhzgithub&lt;/denchmark-link&gt;
 nothing's wrong.
If you train at 416 your results will be best at 416. If you want best results at 608, then train at 608. If you want results across a variety of resolutions you can use --multi-scale, setting img-size at the middle of the desired resolution range.
		</comment>
		<comment id='2' author='zhzgithub' date='2019-08-23T02:59:07Z'>
		
@glenn-jocher

I do use --multi-scale. Here is my test-results:
&lt;denchmark-code&gt;size: mAP     
384: 0.669            
416: 0.681        
448: 0.683       
480: 0.686          
512: 0.681         
544: 0.674          
576: 0.667        
608: 0.667        
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='zhzgithub' date='2019-08-23T09:26:54Z'>
		&lt;denchmark-link:https://github.com/zhzgithub&gt;@zhzgithub&lt;/denchmark-link&gt;

When you are testing on the voc datasets, can you send out all your AP values for reference?
		</comment>
		<comment id='4' author='zhzgithub' date='2019-08-23T10:18:35Z'>
		&lt;denchmark-link:https://github.com/zhzgithub&gt;@zhzgithub&lt;/denchmark-link&gt;
 looks fine, I don't see anything wrong. multi-scale is centered about your , and randomly varies the shape +/- 50% about that.
What is the image size distribution of your training set?
		</comment>
		<comment id='5' author='zhzgithub' date='2019-09-26T11:03:40Z'>
		Closing for 30 days of inactivity.
		</comment>
	</comments>
</bug>