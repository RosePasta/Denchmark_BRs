<bug id='866' author='KochPJ' open_date='2020-02-24T10:53:15Z' closed_time='2020-02-24T20:16:57Z'>
	<summary>why does the target include image</summary>
	<description>
Hello,
the dataset (LoadImagesAndLabels) used in the train.py for training returns the target as shape (number of labels, 6) in the getitem call. Why is it 6? It sets the labels[:, 1:] = [class, x,y,w,h] but the labe[:, 0] index is left zero. In build_targets function called in the compute_loss function I found that the target is supposed to be [image, class, x, y, w, h]. However, I can not find any point in the code where this image is added to the target. Did I miss anything or why is this zero image inside the label? Does it have any purpose?
I hope you can help me with my confusion.
Thanks
	</description>
	<comments>
		<comment id='1' author='KochPJ' date='2020-02-24T19:33:44Z'>
		&lt;denchmark-link:https://github.com/KochPJ&gt;@KochPJ&lt;/denchmark-link&gt;
 index 0 in targets is the image in the batch (i.e. 0-15 with default settings). These values are defined in the batch collate function:



yolov3/utils/datasets.py


        Lines 502 to 507
      in
      ef3bd7e






 def collate_fn(batch): 



 img, label, path, shapes = zip(*batch)  # transposed 



 for i, l in enumerate(label): 



 l[:, 0] = i # add target image index for build_targets() 



 return torch.stack(img, 0), torch.cat(label, 0), path, shapes 



 





		</comment>
		<comment id='2' author='KochPJ' date='2020-02-24T20:16:57Z'>
		Ahhh that does explain it. Thank you very much. Havnt meet this collate_fn function yet.
		</comment>
	</comments>
</bug>