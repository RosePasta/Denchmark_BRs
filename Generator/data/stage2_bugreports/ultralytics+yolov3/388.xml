<bug id='388' author='yyx1107' open_date='2019-07-24T10:31:53Z' closed_time='2019-07-24T12:08:03Z'>
	<summary>new version error||test map</summary>
	<description>
Hi! I was trying to train coco and  had some questions~
1.
I download the newest version and run the train.py with coco_16img.data.I met an error but training process is finished.
Epoch   gpu_mem   GIoU/xy        wh       obj       cls     total   targets  img_size
99/99     7.96G     0.332         0     0.492     0.827      1.65        73       416: 100%|██████████████████████████████████████| 1/1 [00:00&lt;00:00,  1.76it/s]
&lt;denchmark-code&gt;   Class    Images   Targets         P         R       mAP        F1: 
&lt;/denchmark-code&gt;

100%|██████████████████████████████████████| 1/1 [00:00&lt;00:00,  2.08it/s]
all        16        76     0.561     0.587     0.554     0.551
100 epochs completed in 0.123 hours.
Traceback (most recent call last):
File "train.py", line 381, in 
accumulate=opt.accumulate)
File "train.py", line 321, in train
del model, optimizer, loss, dataset, dataloader, scaled_loss, scheduler
UnboundLocalError: local variable 'scaled_loss' referenced before assignment
So I commented the "# del model, optimizer, loss, dataset, dataloader, scaled_loss, scheduler"
Does the comment statement have any effect?
&lt;denchmark-link:https://user-images.githubusercontent.com/50829614/61786719-e7b43e00-ae40-11e9-8ba9-87855b064ae0.png&gt;&lt;/denchmark-link&gt;


Test mAP
I tested the yolov3.weights and got 54.1%.Is this result normal?
(batch_size=1, cfg='cfg/yolov3.cfg', conf_thres=0.001, data_cfg='data/coco.data', img_size=416, iou_thres=0.5, nms_thres=0.5, save_json=False, weights='weights/yolov3.weights')

	</description>
	<comments>
		<comment id='1' author='yyx1107' date='2019-07-24T11:34:12Z'>
		&lt;denchmark-link:https://github.com/yyx1107&gt;@yyx1107&lt;/denchmark-link&gt;
 ah yes you are correct. This variable is only defined if Apex is used. We just submitted a fix so if you git pull everything should run smoothly now!
Yes your result is good! 54.1% sounds about right. We are always adjusting the hyperparameters but this looks good to me.
		</comment>
		<comment id='2' author='yyx1107' date='2019-07-24T11:41:49Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 Thanks for your reply! I just train with coco_500val.data and test the best.pt.
Class    Images   Targets         P         R       mAP        F1:
all       500  3.14e+03   0.00799     0.257     0.104    0.0151
It is because of small images ,right?
Since the result is ok , now I will train with darknet53.conv.74 with the full coco. Thanks for your excellent work !
		</comment>
	</comments>
</bug>