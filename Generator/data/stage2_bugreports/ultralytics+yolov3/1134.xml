<bug id='1134' author='kaishijeng' open_date='2020-05-06T02:49:51Z' closed_time='2020-06-20T00:15:41Z'>
	<summary>train yolov4</summary>
	<description>
I change yolov4-relu.cfg to 10 classes and run train.py.
Why does it still download yolov3-spp-ultralytics.pt?
Shouldn't it use yolov4-spp-ultralytics.pt instead?
Thanks,
	</description>
	<comments>
		<comment id='1' author='kaishijeng' date='2020-05-06T02:50:32Z'>
		Hello &lt;denchmark-link:https://github.com/kaishijeng&gt;@kaishijeng&lt;/denchmark-link&gt;
, thank you for your interest in our work! Please visit our &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&gt;Custom Training Tutorial&lt;/denchmark-link&gt;
 to get started, and see our &lt;denchmark-link:https://github.com/ultralytics/yolov3/blob/master/tutorial.ipynb&gt;Google Colab Notebook&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://hub.docker.com/r/ultralytics/yolov3&gt;Docker Image&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart&gt;GCP Quickstart Guide&lt;/denchmark-link&gt;
 for example environments.
If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
		</comment>
		<comment id='2' author='kaishijeng' date='2020-05-06T05:40:41Z'>
		It downloads the weights you ask for. yolov3-spp-ultralytics.pt is the default —weights. To train from scratch use —weights ‘’
		</comment>
		<comment id='3' author='kaishijeng' date='2020-05-06T05:59:00Z'>
		Can I train yolov4 by simply downloading yolov4.cfg and yolov4.weights from the recently version?
In other word is, can I use old version of this repo with yolov4? or the code of train.py, uilts.py......and so on, are changed to fit yolov4?
Thanks!
		</comment>
		<comment id='4' author='kaishijeng' date='2020-05-06T06:18:03Z'>
		Yes, it should work.
		</comment>
		<comment id='5' author='kaishijeng' date='2020-05-06T06:22:28Z'>
		
Yes, it should work.

Thanks for your reply!
		</comment>
		<comment id='6' author='kaishijeng' date='2020-05-07T02:38:20Z'>
		How do you convert   yolov4.weights to yolov4.pt for an initial weight?
Thanks,
		</comment>
		<comment id='7' author='kaishijeng' date='2020-05-07T02:45:06Z'>
		&lt;denchmark-link:https://github.com/kaishijeng&gt;@kaishijeng&lt;/denchmark-link&gt;
 ah, you might be able to pass  directly to train, test and detect.py. Have you tried this?
		</comment>
		<comment id='8' author='kaishijeng' date='2020-05-07T03:46:38Z'>
		
How do you convert yolov4.weights to yolov4.pt for an initial weight?
Thanks,

Hi,
for this repo, it allows both .pt (or pth) and .weights files!
		</comment>
		<comment id='9' author='kaishijeng' date='2020-05-07T06:12:39Z'>
		I just use empty weight now and haven't tried it  with yolov4.weight. yet.
Will try it next time
		</comment>
		<comment id='10' author='kaishijeng' date='2020-05-08T18:26:20Z'>
		It works with yolov4.weight
Does your code support MAP evaluation after training?
Another question, do you plan to support CONV_LSTM? I have been looking to conv_lstm in the darknet repository and am not able to figure out how to put contents in the train.txt.
Thanks,
		</comment>
		<comment id='11' author='kaishijeng' date='2020-05-08T19:39:50Z'>
		&lt;denchmark-link:https://github.com/kaishijeng&gt;@kaishijeng&lt;/denchmark-link&gt;
 ah great, thanks for the confirmation!
Yes, train.py evaluates mAP after every epoch, unless you use the --notest flag, in which case it only evaluates mAP after training is complete.
Be aware there is a bug with numpy-pycocotools, if you are training on coco you should use numpy == 1.17
		</comment>
		<comment id='12' author='kaishijeng' date='2020-05-08T19:40:24Z'>
		Oh and to answer your other question, we do not currently support LSTM ops, but if you'd like to help us and submit a PR that would be welcome!
		</comment>
		<comment id='13' author='kaishijeng' date='2020-05-08T20:14:12Z'>
		

Be aware there is a bug with numpy-pycocotools, if you are training on coco you should use numpy == 1.17
Do I need to worry this for my own dataset?


		</comment>
		<comment id='14' author='kaishijeng' date='2020-05-09T08:47:45Z'>
		There are several pytorch conv_lstm implementations in github. Can't we just use one of these?
Thanks
		</comment>
		<comment id='15' author='kaishijeng' date='2020-05-09T08:50:27Z'>
		&lt;denchmark-link:https://github.com/kaishijeng&gt;@kaishijeng&lt;/denchmark-link&gt;
 we have limited resources at the moment, so we can not do this ourselves. If you'd like to submit a PR, we'd be happy to review.
		</comment>
		<comment id='16' author='kaishijeng' date='2020-05-09T08:57:25Z'>
		Will try, but it may take a while because I am not familiar with pytorch.
Thanks,
		</comment>
		<comment id='17' author='kaishijeng' date='2020-05-09T16:58:16Z'>
		&lt;denchmark-link:https://github.com/kaishijeng&gt;@kaishijeng&lt;/denchmark-link&gt;
 ok! In any case, LSTM networks only help videos and sequential-image datasets, they will not affect metrics on COCO for example.
		</comment>
		<comment id='18' author='kaishijeng' date='2020-05-12T20:06:05Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;



Yes, train.py evaluates mAP after every epoch, unless you use the --notest flag, in which case it only &gt;&gt;evaluates mAP after training is complete.
Can train.py evaluates mAP without doing training if a pretrained weight is provided?
Thanks,


		</comment>
		<comment id='19' author='kaishijeng' date='2020-05-12T20:09:56Z'>
		&lt;denchmark-link:https://github.com/kaishijeng&gt;@kaishijeng&lt;/denchmark-link&gt;
 train.py only trains. test.py evaluates mAP.
		</comment>
		<comment id='20' author='kaishijeng' date='2020-05-12T23:50:54Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;

Should I run test.py with task "study" mode for mAP evaluation?
Thanks,
		</comment>
		<comment id='21' author='kaishijeng' date='2020-05-13T00:00:58Z'>
		&lt;denchmark-link:https://github.com/kaishijeng&gt;@kaishijeng&lt;/denchmark-link&gt;
 no, just run it normally.
		</comment>
		<comment id='22' author='kaishijeng' date='2020-05-13T21:39:18Z'>
		test.py works. But it only generates mA@0.5.
Does it support mAP@[0.5..0.95]?
Thanks,
		</comment>
		<comment id='23' author='kaishijeng' date='2020-05-13T22:12:38Z'>
		


yolov3/test.py


         Line 58
      in
      b2fcfc5






 iouv = iouv[0].view(1)  # comment for mAP@0.5:0.95 





		</comment>
		<comment id='24' author='kaishijeng' date='2020-05-14T01:01:31Z'>
		Below is output from test.py:
&lt;denchmark-code&gt;             all  8.86e+03  1.73e+05     0.491      0.48     **0.462**     0.482
             car  8.86e+03   9.1e+04     0.671     0.713     **0.712**     0.691
             bus  8.86e+03  1.44e+03     0.521      0.59     **0.583**     0.553
          person  8.86e+03  1.28e+04     0.598     0.542      **0.54**     0.569
            bike  8.86e+03       937     0.428     0.493     **0.445**     0.458
           truck  8.86e+03  3.73e+03     0.535     0.611     **0.584**     0.571
           motor  8.86e+03       406     0.463     0.419     **0.388**      0.44
           train  8.86e+03        13         0         0         0         0
           rider  8.86e+03       605      0.47     0.441     **0.401**     0.455
    traffic sign  8.86e+03  3.49e+04     0.593     0.561     **0.544**     0.576
   traffic light  8.86e+03  2.69e+04     0.636     0.425     **0.425**      0.51
&lt;/denchmark-code&gt;

Are these values in BoldFace mAP@[0.5..0.95] scores?
Thanks,
		</comment>
		<comment id='25' author='kaishijeng' date='2020-05-14T03:33:57Z'>
		Yup
		</comment>
		<comment id='26' author='kaishijeng' date='2020-05-14T07:14:55Z'>
		Thanks
		</comment>
		<comment id='27' author='kaishijeng' date='2020-06-14T00:16:35Z'>
		This issue is stale because it has been open 30 days with no activity. Remove Stale label or comment or this will be closed in 5 days.
		</comment>
	</comments>
</bug>