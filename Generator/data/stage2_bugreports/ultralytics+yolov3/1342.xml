<bug id='1342' author='prathik-naidu' open_date='2020-06-25T15:09:36Z' closed_time='2020-07-31T00:23:30Z'>
	<summary>LoadImages not resizing images correctly</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

When running detect.py,
&lt;denchmark-code&gt;imgsz = (320, 192) if ONNX_EXPORT else opt.img_size  # (320, 192) or (416, 256) or (608, 352) for (height, width)
&lt;/denchmark-code&gt;

implies that this is (height, width) from the comment. Then when you run the following line:
&lt;denchmark-code&gt;dataset = LoadImages(source, img_size=imgsz)
&lt;/denchmark-code&gt;

this should load images with the desired input imgsz. However, the resulting images are not of that size. For example, zidane.jpg is of size (720, 1280) in (height, width), but the returned image from LoadImages is of shape (128, 192, 3). The reason is because of the letterbox function in LoadImages which takes in the imgsz of (320,192). However, if that imgsz is (192, 320), which correctly corresponds to (height, width), then the returned result has shape (192, 320, 3).
Is this expected behavior?
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Input
&lt;denchmark-code&gt;imgsz = (320, 192)
img0 = cv2.imread('./data/samples/zidane.jpg')
img = letterbox(img0, new_shape=imgsz)[0]
print(img.shape)
&lt;/denchmark-code&gt;

Output:
&lt;denchmark-code&gt;(128, 192, 3) #this should be resized so the image has 320 in one dimension
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='prathik-naidu' date='2020-06-25T15:10:17Z'>
		Hello &lt;denchmark-link:https://github.com/prathik-naidu&gt;@prathik-naidu&lt;/denchmark-link&gt;
, thank you for your interest in our work! Ultralytics has open-sourced YOLOv5 at &lt;denchmark-link:https://github.com/ultralytics/yolov5&gt;https://github.com/ultralytics/yolov5&lt;/denchmark-link&gt;
, featuring faster, lighter and more accurate object detection. YOLOv5 is recommended for all new projects.


&lt;denchmark-link:https://user-images.githubusercontent.com/26833433/85340570-30360a80-b49b-11ea-87cf-bdf33d53ae15.png&gt;&lt;/denchmark-link&gt;

To continue with this repo, please visit our &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&gt;Custom Training Tutorial&lt;/denchmark-link&gt;
 to get started, and see our &lt;denchmark-link:https://github.com/ultralytics/yolov3/blob/master/tutorial.ipynb&gt;Google Colab Notebook&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://hub.docker.com/r/ultralytics/yolov3&gt;Docker Image&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart&gt;GCP Quickstart Guide&lt;/denchmark-link&gt;
 for example environments.
If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
If this is a custom model or data training question, please note that Ultralytics does not provide free personal support. As a leader in vision ML and AI, we do offer professional consulting, from simple expert advice up to delivery of fully customized, end-to-end production solutions for our clients, such as:

Cloud-based AI systems operating on hundreds of HD video streams in realtime.
Edge AI integrated into custom iOS and Android apps for realtime 30 FPS video inference.
Custom data training, hyperparameter evolution, and model exportation to any destination.

For more information please visit &lt;denchmark-link:https://www.ultralytics.com&gt;https://www.ultralytics.com&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='prathik-naidu' date='2020-07-26T00:23:09Z'>
		This issue is stale because it has been open 30 days with no activity. Remove Stale label or comment or this will be closed in 5 days.
		</comment>
	</comments>
</bug>