<bug id='639' author='MengtianLee' open_date='2019-11-20T10:38:20Z' closed_time='2019-11-22T06:41:38Z'>
	<summary>RuntimeError: invalid argument 1</summary>
	<description>
&lt;denchmark-link:https://user-images.githubusercontent.com/42642078/69231191-9edc7e00-0bc3-11ea-8890-579e8306cf07.png&gt;&lt;/denchmark-link&gt;

I had met this bug twice, when i trained on yolov3 .I am really confused about why i can train on yolov3-tiny without any bugs and why i can train on yolov3 before the 268th epoch without any bugs. why always 268th epochs? Please help me deal with this problem, thank you so much.
error:
Traceback (most recent call last):
File "train.py", line 247, in 
num_workers=opt.num_workers
File "train.py", line 151, in train
target_list = build_targets(model, targets)
File "/home/jeff/Research/lmt/yolov3/utils/utils.py", line 328, in build_targets
assert c.max() &lt;= layer.nC, 'Target classes exceed model classes'
RuntimeError: invalid argument 1: cannot perform reduction function max on tensor with no elements because the operation does not have an identity at /pytorch/aten/src/THC/generic/THCTensorMathReduce.cu:85
	</description>
	<comments>
		<comment id='1' author='MengtianLee' date='2019-11-20T17:25:23Z'>
		The error is telling you that you are supplying targets with more classes than youâ€™ve created the model for.
This will happen with yolov3.cfg for example if you have more than 80 classes in your training data.
		</comment>
		<comment id='2' author='MengtianLee' date='2019-11-20T18:49:20Z'>
		&lt;denchmark-link:https://github.com/MengtianLee&gt;@MengtianLee&lt;/denchmark-link&gt;
 two other points are:

The runs are always initialized with the same seed (0), so training twice on the same data should produce the exact same results as you observed.
You should try to run in Pycharm with debug mode for example, so that rather than breaking the code would stop and enter debug at that point, so you could analyze what caused the error exactly, as it is odd that it did not occur on the first epoch.

Since the error is not reproducible in COCO it likely has to do with your custom data.
		</comment>
		<comment id='3' author='MengtianLee' date='2019-11-22T06:41:27Z'>
		
@MengtianLee two other points are:

The runs are always initialized with the same seed (0), so training twice on the same data should produce the exact same results as you observed.
You should try to run in Pycharm with debug mode for example, so that rather than breaking the code would stop and enter debug at that point, so you could analyze what caused the error exactly, as it is odd that it did not occur on the first epoch.

Since the error is not reproducible in COCO it likely has to do with your custom data.

thank you, this problem is solved. You are so kind.
		</comment>
		<comment id='4' author='MengtianLee' date='2020-03-05T03:04:02Z'>
		

@MengtianLee two other points are:

The runs are always initialized with the same seed (0), so training twice on the same data should produce the exact same results as you observed.
You should try to run in Pycharm with debug mode for example, so that rather than breaking the code would stop and enter debug at that point, so you could analyze what caused the error exactly, as it is odd that it did not occur on the first epoch.

Since the error is not reproducible in COCO it likely has to do with your custom data.

thank you, this problem is solved. You are so kind.

how do you solve it ,i have met the same problem.
		</comment>
	</comments>
</bug>