<bug id='166' author='asifkareem03' open_date='2019-03-26T03:16:23Z' closed_time='2019-03-29T11:02:15Z'>
	<summary>CUSTOM DATASET: RuntimeError: reduce failed to synchronize: device-side assert triggered</summary>
	<description>
iam using the latest version but it still showing this error
&lt;denchmark-code&gt;   Epoch       Batch        xy        wh      conf       cls     total  nTargets      time
   0/269        0/17     0.247      5.34       136     0.887       142       197      18.7
/pytorch/aten/src/THCUNN/ClassNLLCriterion.cu:105: void cunn_ClassNLLCriterion_updateOutput_kernel(Dtype *, Dtype *, Dtype *, long *, Dtype *, int, int, int, int, long) [with Dtype = float, Acctype = float]: block: [0,0,0], thread: [10,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.
/pytorch/aten/src/THCUNN/ClassNLLCriterion.cu:105: void cunn_ClassNLLCriterion_updateOutput_kernel(Dtype *, Dtype *, Dtype *, long *, Dtype *, int, int, int, int, long) [with Dtype = float, Acctype = float]: block: [0,0,0], thread: [11,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.
/pytorch/aten/src/THCUNN/ClassNLLCriterion.cu:105: void cunn_ClassNLLCriterion_updateOutput_kernel(Dtype *, Dtype *, Dtype *, long *, Dtype *, int, int, int, int, long) [with Dtype = float, Acctype = float]: block: [0,0,0], thread: [12,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.
/pytorch/aten/src/THCUNN/ClassNLLCriterion.cu:105: void cunn_ClassNLLCriterion_updateOutput_kernel(Dtype *, Dtype *, Dtype *, long *, Dtype *, int, int, int, int, long) [with Dtype = float, Acctype = float]: block: [0,0,0], thread: [13,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.
/pytorch/aten/src/THCUNN/ClassNLLCriterion.cu:105: void cunn_ClassNLLCriterion_updateOutput_kernel(Dtype *, Dtype *, Dtype *, long *, Dtype *, int, int, int, int, long) [with Dtype = float, Acctype = float]: block: [0,0,0], thread: [14,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.
/pytorch/aten/src/THCUNN/ClassNLLCriterion.cu:105: void cunn_ClassNLLCriterion_updateOutput_kernel(Dtype *, Dtype *, Dtype *, long *, Dtype *, int, int, int, int, long) [with Dtype = float, Acctype = float]: block: [0,0,0], thread: [15,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.
/pytorch/aten/src/THCUNN/ClassNLLCriterion.cu:105: void cunn_ClassNLLCriterion_updateOutput_kernel(Dtype *, Dtype *, Dtype *, long *, Dtype *, int, int, int, int, long) [with Dtype = float, Acctype = float]: block: [0,0,0], thread: [16,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.
Traceback (most recent call last):
  File "train.py", line 229, in &lt;module&gt;
    num_workers=opt.num_workers
  File "train.py", line 142, in train
    loss, loss_dict = compute_loss(pred, target_list)
  File "/content/drive/My Drive/yolov3/utils/utils.py", line 271, in compute_loss
    lxy += k * MSE(torch.sigmoid(pi[..., 0:2]), txy[i])  # xy
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/loss.py", line 435, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py", line 2156, in mse_loss
    ret = torch._C._nn.mse_loss(expanded_input, expanded_target, _Reduction.get_enum(reduction))
RuntimeError: reduce failed to synchronize: device-side assert triggered
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='asifkareem03' date='2019-03-26T14:38:59Z'>
		You may have incorrectly installed dependencies, or you may have incorrectly formatted your custom data.  Recommend you start off in a well understood environment and start training on COCO using the default settings, which are known to work correctly: &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart&gt;https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart&lt;/denchmark-link&gt;

From there its your responsibility to adapt your data correctly and provide a functioning environment that meets all the requirements outlines in the README. If you suspect issues due to the multithreaded DataLoader you always have the option to disable multithreading by setting --num-workers 0:
sudo rm -rf yolov3 &amp;&amp; git clone https://github.com/ultralytics/yolov3
cd yolov3
python3 train.py --num-workers 0
		</comment>
	</comments>
</bug>