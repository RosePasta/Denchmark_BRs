<bug id='968' author='sssmost' open_date='2020-03-26T12:44:06Z' closed_time='2020-04-28T10:07:34Z'>
	<summary>How to extract all class probabilities for each bounding box?</summary>
	<description>
Hello,
I am trying to extract all class probabilities for each bb returned by YOLOv3 using detect.py. However, they are loss and it is only extracted one class per bb. How I could do it? They are loss in non_max_suppression process?
Thanks in advance
	</description>
	<comments>
		<comment id='1' author='sssmost' date='2020-03-26T12:44:46Z'>
		Hello &lt;denchmark-link:https://github.com/sssmost&gt;@sssmost&lt;/denchmark-link&gt;
, thank you for your interest in our work! Please visit our &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&gt;Custom Training Tutorial&lt;/denchmark-link&gt;
 to get started, and see our &lt;denchmark-link:https://colab.research.google.com/drive/1G8T-VFxQkjDe4idzN8F-hbIBqkkkQnxw&gt;Google Colab Notebook&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://hub.docker.com/r/ultralytics/yolov3&gt;Docker Image&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart&gt;GCP Quickstart Guide&lt;/denchmark-link&gt;
 for example environments.
If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
		</comment>
		<comment id='2' author='sssmost' date='2020-03-26T21:31:08Z'>
		&lt;denchmark-link:https://github.com/sssmost&gt;@sssmost&lt;/denchmark-link&gt;
 the inference output is here:


		</comment>
		<comment id='3' author='sssmost' date='2020-03-27T04:54:49Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;

I try pull your new code, bit I get some problem.
&lt;denchmark-code&gt;in non_max_suppression
    x[i, :4] = torch.mm(weights.T, x[:, :4])
RuntimeError: expected dtype Float but got dtype Half ?
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='sssmost' date='2020-03-27T17:29:17Z'>
		&lt;denchmark-link:https://github.com/Lornatang&gt;@Lornatang&lt;/denchmark-link&gt;
 oh, that's interesting. This is part of new NMS. Can you supply code to reproduce? Is this running detect.py --half?
		</comment>
		<comment id='5' author='sssmost' date='2020-03-27T23:29:14Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;

Oh, no, It happened only when I was training, and it happened when I called test for the first time.
My command is
python3 train.py
		</comment>
		<comment id='6' author='sssmost' date='2020-03-28T02:10:07Z'>
		&lt;denchmark-link:https://github.com/Lornatang&gt;@Lornatang&lt;/denchmark-link&gt;
 I can't reproduce. I git cloned the repo in a new colab notebook and am unable to reproduce the error using:

&lt;denchmark-link:https://user-images.githubusercontent.com/26833433/77812436-8ba05a00-705e-11ea-8f66-edf5b11a2096.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='sssmost' date='2020-03-28T04:39:56Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;

I'll try to see if my code is wrong with you. Thank you for your prompt reply.
		</comment>
		<comment id='8' author='sssmost' date='2020-04-28T00:07:37Z'>
		This issue is stale because it has been open 30 days with no activity. Remove Stale label or comment or this will be closed in 5 days.
		</comment>
		<comment id='9' author='sssmost' date='2020-04-28T09:46:59Z'>
		I found a solution. The probabilities are deleted inside # Apply NMS
pred = non_max_suppression(pred, opt.conf_thres, opt.iou_thres, classes=opt.classes, agnostic=opt.agnostic_nms)
I modified the call to return all probabilities for each bounding box in pred_complete:
pred, pred_complete = non_max_suppression(pred, opt.conf_thres, opt.iou_thres, classes=opt.classes, agnostic=opt.agnostic_nms)
And inside the function:
`def non_max_suppression(prediction, conf_thres=0.1, iou_thres=0.5, multi_cls=True, classes=None, agnostic=False):
&lt;denchmark-code&gt;    # Detections matrix nx6 (xyxy, conf, cls)
    if multi_cls:
        i, j = (pred[:, 5:] &gt; conf_thres).nonzero().t()
        ######
        # Save entire predictions
        #Each pred_aux will have 30 values -&gt; cx cy w h + 25 probabilities (in my case I have 25 classes)
        pred_aux = torch.cat((box[i], pred[i, 5].unsqueeze(1)), 1)
        for id_aux in range(len(pred[0])-6):
            pred_aux = torch.cat((pred_aux, pred[i, id_aux + 6].unsqueeze(1)), 1)
        ######
        pred = torch.cat((box[i], pred[i, j + 5].unsqueeze(1), j.float().unsqueeze(1)), 1) 
    else:  # best class only
        conf, j = pred[:, 5:].max(1)
        pred = torch.cat((box, conf.unsqueeze(1), j.float().unsqueeze(1)), 1)

    # Filter by class
    if classes:
        pred = pred[(j.view(-1, 1) == torch.tensor(classes, device=j.device)).any(1)]

    # Apply finite constraint
    if not torch.isfinite(pred).all():
        pred = pred[torch.isfinite(pred).all(1)]

    # Batched NMS
    if method == 'vision_batch':
        c = pred[:, 5] * 0 if agnostic else pred[:, 5]  # class-agnostic NMS
        #####
        index_bbs_keep_nms = torchvision.ops.boxes.batched_nms(pred[:, :4], pred[:, 4], c, iou_thres)
        output[image_i] = pred[index_bbs_keep_nms]
        output_complete[image_i] = pred_aux[index_bbs_keep_nms]
        ####
        continue
&lt;/denchmark-code&gt;

`
return output, output_complete
		</comment>
	</comments>
</bug>