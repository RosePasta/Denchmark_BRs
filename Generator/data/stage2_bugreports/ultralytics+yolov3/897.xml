<bug id='897' author='changyu98' open_date='2020-03-05T11:24:07Z' closed_time='2020-04-11T00:07:00Z'>
	<summary>Access EXIF data using pillow without accessing a protected member</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

_getexif() is underscored because they don't want to commit to it always working the way it does now - the code says "This method is highly experimental, and is likely to be replaced with something better in a future version." Although, as far as I know, it's said that in PIL for ages.
More answer please see: &lt;denchmark-link:https://stackoverflow.com/questions/48426771/access-exif-data-using-pillow-without-accessing-a-protected-member?rq=1&gt;https://stackoverflow.com/questions/48426771/access-exif-data-using-pillow-without-accessing-a-protected-member?rq=1&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:

This problem exists in utils/datasets.py33 line.

rotation = dict(img._getexif().items())[orientation]

I propose to change it:

rotation = dict(img.info.get("exif").items())[orientation]
&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

Clear this error
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

Python==3.8.2
PyTorch==1.4
CUDA==10.1
CUDNN==7.4
Desktop (please complete the following information):

OS: [Ubuntu]
Version [18.04]

Smartphone (please complete the following information):

Device: [iPhoneX]
OS: [iOS]
Version [13.3]

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Good luck it.
	</description>
	<comments>
		<comment id='1' author='changyu98' date='2020-03-05T19:19:21Z'>
		&lt;denchmark-link:https://github.com/changyu98&gt;@changyu98&lt;/denchmark-link&gt;
 thanks buddy. I tried this change, but could not get it to work. I used an image from my iPhone for this, but you can test any with exif. One change that did work though was removing the underscore in the function, from  to . I'm not sure if that makes any difference. The rotation detection is mainly for 3rd party data, I don't think COCO images have any exif.
img = Image.open('IMG_2487.jpg')
   ...: orientation = 274
   ...: rotation = dict(img._getexif().items())[orientation]
   ...: print(rotation)
   ...: 
1

rotation2 = dict(img.info.get("exif").items())[orientation]
   ...: print(rotation2)
   ...: 
Traceback (most recent call last):
  File "/Users/glennjocher/opt/anaconda3/envs/env0/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 3331, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-26-531a29e2dc12&gt;", line 1, in &lt;module&gt;
    rotation2 = dict(img.info.get("exif").items())[orientation]
AttributeError: 'bytes' object has no attribute 'items'
		</comment>
		<comment id='2' author='changyu98' date='2020-03-06T03:16:29Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;

Yes, when I read the original paper, I found that the author didn't rotate the pictures randomly, because in the real world, we are all standing under the influence of gravity, so rotating pictures will not bring any improvement in accuracy, because rotating pictures are very effective for object classification, but not for object detection.
		</comment>
		<comment id='3' author='changyu98' date='2020-03-06T19:17:44Z'>
		&lt;denchmark-link:https://github.com/changyu98&gt;@changyu98&lt;/denchmark-link&gt;
 it depends on the task, satellite imagery object detection can benefit from rotation, but this an augmentation setting. This exif tag is meant to read rotated images correctly with their bounding boxes, because in the past some annotation tools and operating systems display images with or without reading the exif information. It really depends on your dataset, which is why its important to plot many batches of train_batch*.jpg for manually verify the labels are correct.
		</comment>
		<comment id='4' author='changyu98' date='2020-04-06T00:06:14Z'>
		This issue is stale because it has been open 30 days with no activity. Remove Stale label or comment or this will be closed in 5 days.
		</comment>
	</comments>
</bug>