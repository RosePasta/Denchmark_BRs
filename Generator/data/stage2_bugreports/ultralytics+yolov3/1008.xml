<bug id='1008' author='jonguo111' open_date='2020-04-04T03:52:28Z' closed_time='2020-05-17T00:09:21Z'>
	<summary>how to get the mAR results?</summary>
	<description>
Hi there.
I can have the mAP results through the test.py, however there is no mAR info like cocoEVAL methods?
Could you pls help me figure it out? Also, how can I print out the  precision and recall values of the training process?
	</description>
	<comments>
		<comment id='1' author='jonguo111' date='2020-04-04T04:30:07Z'>
		&lt;denchmark-link:https://github.com/jonguo111&gt;@jonguo111&lt;/denchmark-link&gt;
 results.png is saved automatically after training completes. You can plot it yourself manually using plot_results() in utils.
mAR is shown on COCO training results automatically, for example if test on COCO pycocotools will present mAP, mAR, etc:
python3 test.py --data coco2014.data
		</comment>
		<comment id='2' author='jonguo111' date='2020-04-09T18:30:12Z'>
		
@jonguo111 results.png is saved automatically after training completes. You can plot it yourself manually using plot_results() in utils.
mAR is shown on COCO training results automatically, for example if test on COCO pycocotools will present mAP, mAR, etc:
python3 test.py --data coco2014.data

&lt;denchmark-link:https://user-images.githubusercontent.com/43916561/78928378-7ec43300-7a6e-11ea-89df-23aa3cf1e2f0.png&gt;&lt;/denchmark-link&gt;

Hi. I followed your instructions, however, it didn't show any coco style evaluation results and no json output files? Could you pls help me figure it out?
		</comment>
		<comment id='3' author='jonguo111' date='2020-04-09T18:36:16Z'>
		&lt;denchmark-link:https://github.com/jonguo111&gt;@jonguo111&lt;/denchmark-link&gt;
 coco output results are created by , and : coco2014.data or coco2017.data.
You can force test.py to create a coco-style json using python3 test.py --save-json for your custom data, but since pycocotools does not know your ground truth an error will occur after testing. You can ignore this error though.
		</comment>
		<comment id='4' author='jonguo111' date='2020-04-09T18:56:08Z'>
		yes. actually, I modified my custom data based on the coco file. I replaced the content of coco.names, train2017.txt, val2017.txt, images, annotations, and labels. But I cannot understand why i cannot output json files. I also have the ground truth json file for for validation. if i have the output json, i can test on my script to evaluate the map and mar. since i am working on my paper, i need to have the same metric to evaluate different methods. i finished other models, but stopped here since no coco style evaluation results...
		</comment>
		<comment id='5' author='jonguo111' date='2020-04-09T19:22:16Z'>
		&lt;denchmark-link:https://github.com/jonguo111&gt;@jonguo111&lt;/denchmark-link&gt;
 ah I see. Well  to test.py you can generate the results.json (with the predictions) using:

To force pycocotools to use your json ground truth you should be able to modify the code here:



yolov3/test.py


        Lines 208 to 211
      in
      d1601ae






 # https://github.com/cocodataset/cocoapi/blob/master/PythonAPI/pycocoEvalDemo.ipynb 



 cocoGt = COCO(glob.glob('../coco/annotations/instances_val*.json')[0])  # initialize COCO ground truth api 



 cocoDt = cocoGt.loadRes('results.json')  # initialize COCO pred api 



 





		</comment>
		<comment id='6' author='jonguo111' date='2020-04-09T20:09:47Z'>
		Thank you so much. i only have three classes. but why does the output json file have some category id: 62? there must be something wrong with the classnames. could you pls help me figure it out?
		</comment>
		<comment id='7' author='jonguo111' date='2020-04-09T20:13:51Z'>
		&lt;denchmark-link:https://github.com/jonguo111&gt;@jonguo111&lt;/denchmark-link&gt;
 ah yes, the save code is mapping classes 0-80 with the pycocotools classes 0-91. You can remove the coco91class[] vector here on L135 to prevent this for custom datasets:



yolov3/test.py


        Lines 133 to 138
      in
      d1601ae






 for p, b in zip(pred.tolist(), box.tolist()): 



 jdict.append({'image_id': image_id, 



 'category_id': coco91class[int(p[5])], 



 'bbox': [round(x, 3) for x in b], 



 'score': round(p[4], 5)}) 



 





		</comment>
		<comment id='8' author='jonguo111' date='2020-04-09T20:40:50Z'>
		
@jonguo111 ah yes, the save code is mapping classes 0-80 with the pycocotools classes 0-91. You can remove the coco91class[] vector here on L135 to prevent this for custom datasets:



yolov3/test.py


        Lines 133 to 138
      in
      d1601ae






 for p, b in zip(pred.tolist(), box.tolist()): 



 jdict.append({'image_id': image_id, 



 'category_id': coco91class[int(p[5])], 



 'bbox': [round(x, 3) for x in b], 



 'score': round(p[4], 5)}) 



 






I trill to change it to 'category_id': [int(p[5])],
but it didn't work. how to build a new map bettween coco name and category id
		</comment>
		<comment id='9' author='jonguo111' date='2020-04-09T20:51:49Z'>
		'category_id': int(p[5])
		</comment>
		<comment id='10' author='jonguo111' date='2020-04-09T20:56:49Z'>
		
'category_id': int(p[5])

It didn't work. still show
AssertionError: Results do not correspond to current coco set
		</comment>
		<comment id='11' author='jonguo111' date='2020-04-09T21:00:47Z'>
		&lt;denchmark-link:https://github.com/jonguo111&gt;@jonguo111&lt;/denchmark-link&gt;
 this is a pycocotools error, so you should probably raise your issue on the pycocotools repo.
		</comment>
		<comment id='12' author='jonguo111' date='2020-04-09T21:34:47Z'>
		
@jonguo111 this is a pycocotools error, so you should probably raise your issue on the pycocotools repo.

ok thanks!
		</comment>
		<comment id='13' author='jonguo111' date='2020-04-09T22:25:29Z'>
		i am sorry to bother you again. i checked my training results. it shows mAP@0.5 is 0.92 and P is 0.935, R is 0.662. However, when I run the python detect.py, there is no detection result and just has the original image. When I run the python test.py, it showed test_batch0.png with accurate result. So, what can I do now...
		</comment>
		<comment id='14' author='jonguo111' date='2020-04-09T23:29:43Z'>
		&lt;denchmark-link:https://github.com/jonguo111&gt;@jonguo111&lt;/denchmark-link&gt;
 then your trained model is not generalizing well to whatever images you are trying to detect. You need a larger and more diverse dataset.
		</comment>
		<comment id='15' author='jonguo111' date='2020-04-10T01:20:19Z'>
		
@jonguo111 then your trained model is not generalizing well to whatever images you are trying to detect. You need a larger and more diverse dataset.

i solved this issue by  converting weight format from .pt  to .weights
		</comment>
		<comment id='16' author='jonguo111' date='2020-04-10T02:48:29Z'>
		oh, ok!
		</comment>
		<comment id='17' author='jonguo111' date='2020-05-11T00:09:11Z'>
		This issue is stale because it has been open 30 days with no activity. Remove Stale label or comment or this will be closed in 5 days.
		</comment>
	</comments>
</bug>