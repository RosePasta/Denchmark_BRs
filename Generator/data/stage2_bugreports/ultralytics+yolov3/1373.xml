<bug id='1373' author='tengjunvan' open_date='2020-07-09T02:21:57Z' closed_time='2020-08-16T00:26:24Z'>
	<summary>Rect training might be wrong.</summary>
	<description>
In datasets.py line308-328:
if self.rect:
# Sort by aspect ratio
s = self.shapes  # wh
ar = s[:, 1] / s[:, 0]  # aspect ratio
irect = ar.argsort()
self.img_files = [self.img_files[i] for i in irect]
self.label_files = [self.label_files[i] for i in irect]
self.shapes = s[irect]  # wh
ar = ar[irect]
&lt;denchmark-code&gt;        # Set training image shapes
        shapes = [[1, 1]] * nb
        for i in range(nb):
            ari = ar[bi == i]
            mini, maxi = ari.min(), ari.max()
            if maxi &lt; 1:
                shapes[i] = [maxi, 1]
            elif mini &gt; 1:
                shapes[i] = [1, 1 / mini]

        self.batch_shapes = np.ceil(np.array(shapes) * img_size / 32. + pad).astype(np.int) * 32
&lt;/denchmark-code&gt;

maxi or mini  is caculated as a result of W/H(becuase s is (H, W)), so shapes[i] = [maxi, 1] = [W/H, 1] = [W, H]. Batch_shapes is not (H, W) form any more.
	</description>
	<comments>
		<comment id='1' author='tengjunvan' date='2020-07-09T02:22:39Z'>
		Hello &lt;denchmark-link:https://github.com/tengjunvan&gt;@tengjunvan&lt;/denchmark-link&gt;
, thank you for your interest in our work! Ultralytics has open-sourced YOLOv5 at &lt;denchmark-link:https://github.com/ultralytics/yolov5&gt;https://github.com/ultralytics/yolov5&lt;/denchmark-link&gt;
, featuring faster, lighter and more accurate object detection. YOLOv5 is recommended for all new projects.


&lt;denchmark-link:https://user-images.githubusercontent.com/26833433/85340570-30360a80-b49b-11ea-87cf-bdf33d53ae15.png&gt;&lt;/denchmark-link&gt;

To continue with this repo, please visit our &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data&gt;Custom Training Tutorial&lt;/denchmark-link&gt;
 to get started, and see our &lt;denchmark-link:https://github.com/ultralytics/yolov3/blob/master/tutorial.ipynb&gt;Google Colab Notebook&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://hub.docker.com/r/ultralytics/yolov3&gt;Docker Image&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart&gt;GCP Quickstart Guide&lt;/denchmark-link&gt;
 for example environments.
If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
If this is a custom model or data training question, please note that Ultralytics does not provide free personal support. As a leader in vision ML and AI, we do offer professional consulting, from simple expert advice up to delivery of fully customized, end-to-end production solutions for our clients, such as:

Cloud-based AI systems operating on hundreds of HD video streams in realtime.
Edge AI integrated into custom iOS and Android apps for realtime 30 FPS video inference.
Custom data training, hyperparameter evolution, and model exportation to any destination.

For more information please visit &lt;denchmark-link:https://www.ultralytics.com&gt;https://www.ultralytics.com&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='tengjunvan' date='2020-07-09T03:21:00Z'>
		&lt;denchmark-link:https://github.com/tengjunvan&gt;@tengjunvan&lt;/denchmark-link&gt;
 thank you for spotting this! Can you submit a PR if you find a fix?
		</comment>
		<comment id='3' author='tengjunvan' date='2020-07-09T09:03:31Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 , I just get started using github and learning deep learning by myself, I don't know how to do PR exactly. By the way, I am reading your code line by line and I'm confused by “burn-in” step in train.py. Can you explain it, or just give me some reference so I can understand the reason behind it.
		</comment>
		<comment id='4' author='tengjunvan' date='2020-07-09T16:46:15Z'>
		&lt;denchmark-link:https://github.com/tengjunvan&gt;@tengjunvan&lt;/denchmark-link&gt;
 burnin is just an LR warmup. Can you copy and paste your proposed fix here then for the rect training issue?
		</comment>
		<comment id='5' author='tengjunvan' date='2020-07-10T02:19:33Z'>
		It's simple, just change line 311
from:
ar = s[:, 1] / s[:, 0]
to:
ar = s[:, 0] / s[:, 1]
		</comment>
		<comment id='6' author='tengjunvan' date='2020-08-10T00:25:10Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>