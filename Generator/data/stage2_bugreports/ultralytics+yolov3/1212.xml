<bug id='1212' author='lunasdejavu' open_date='2020-05-21T07:58:32Z' closed_time='2020-05-25T08:35:34Z'>
	<summary>IndexError: list index out of range</summary>
	<description>
Before submitting a bug report, please ensure that you are using the latest versions of:

Python 3.6
PyTorch 1.5
This repository (run git fetch &amp;&amp; git status -uno to check and git pull to update)

Your issue must be reproducible on a public dataset (i.e COCO) using the latest version of the repository, and you must supply code to reproduce, or we can not help you.
If this is a custom training question we suggest you include your ,  and  figures.
the upper image is the test_batch0_gt.jpg
the down image is the train_batch0.jpg
&lt;denchmark-link:https://imgur.com/a/QYlVeoc&gt;https://imgur.com/a/QYlVeoc&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

A clear and concise description of what the bug is.
I git pull the latest code and trained with an old license dataset
but the error showed up when it plot the testloader
&lt;denchmark-code&gt;Caching labels (8824 found, 0 missing, 0 empty, 0 duplicate, for 8824 images): 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 8824/8824 [00:01&lt;00:00, 5224.90it/s]
Caching labels (1103 found, 0 missing, 0 empty, 0 duplicate, for 1103 images): 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 1103/1103 [00:00&lt;00:00, 5140.54it/s]
Image sizes 320 - 640 train, 640 test
Using 2 dataloader workers
Starting training for 300 epochs...

     Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
     0/299     6.37G      1.29      2.29     0.834      4.41        13       512: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4412/4412 [09:52&lt;00:00,  7.45it/s]
               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|                                              | 0/552 [00:01&lt;?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 414, in &lt;module&gt;
    train(hyp)  # train normally
  File "train.py", line 317, in train
    dataloader=testloader)
  File "/data/workspace/willy_sung/yolov3/test.py", line 170, in test
    plot_images(imgs, output_to_target(output, width, height), paths=paths, names=names, fname=f)  # predictions
  File "/data/workspace/willy_sung/yolov3/utils/utils.py", line 915, in plot_images
    cls = names[cls] if names else cls
IndexError: list index out of range
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

REQUIRED: Code to reproduce your issue below
&lt;denchmark-code&gt;python train.py ...
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

A clear and concise description of what you expected to happen.
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

If applicable, add screenshots to help explain your problem.

OS: [e.g. Ubuntu] 16.04
GPU [e.g. 2080 Ti] 1080 Ti
CUDA 10.2

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='lunasdejavu' date='2020-05-21T08:33:53Z'>
		and I print the result
&lt;denchmark-code&gt;targets [[0 6 tensor(0.50022, device='cuda:0') ... tensor(0.16544, device='cuda:0') tensor(0.48768, device='cuda:0') tensor(0.01074, device='cuda:0')]
 [0 69 tensor(0.49448, device='cuda:0') ... tensor(0.16313, device='cuda:0') tensor(0.45694, device='cuda:0') tensor(0.00929, device='cuda:0')]
 [0 1 tensor(0.49461, device='cuda:0') ... tensor(0.16228, device='cuda:0') tensor(0.44544, device='cuda:0') tensor(0.00909, device='cuda:0')]
 ...
 [7 1 tensor(0.56775, device='cuda:0') ... tensor(0.10563, device='cuda:0') tensor(0.30660, device='cuda:0') tensor(0.00103, device='cuda:0')]
 [7 24 tensor(0.49726, device='cuda:0') ... tensor(0.04715, device='cuda:0') tensor(0.14271, device='cuda:0') tensor(0.00102, device='cuda:0')]
 [7 16 tensor(0.43041, device='cuda:0') ... tensor(0.01920, device='cuda:0') tensor(0.52090, device='cuda:0') tensor(0.00100, device='cuda:0')]]
image_targets [[0 6 tensor(0.50022, device='cuda:0') tensor(0.51859, device='cuda:0') tensor(0.16544, device='cuda:0') tensor(0.48768, device='cuda:0') tensor(0.01074, device='cuda:0')]
 [0 69 tensor(0.49448, device='cuda:0') tensor(0.53081, device='cuda:0') tensor(0.16313, device='cuda:0') tensor(0.45694, device='cuda:0') tensor(0.00929, device='cuda:0')]
 [0 1 tensor(0.49461, device='cuda:0') tensor(0.53472, device='cuda:0') tensor(0.16228, device='cuda:0') tensor(0.44544, device='cuda:0') tensor(0.00909, device='cuda:0')]
 [0 13 tensor(0.50100, device='cuda:0') tensor(0.52327, device='cuda:0') tensor(0.16538, device='cuda:0') tensor(0.47461, device='cuda:0') tensor(0.00891, device='cuda:0')]
 [0 62 tensor(0.50321, device='cuda:0') tensor(0.53506, device='cuda:0') tensor(0.16482, device='cuda:0') tensor(0.48672, device='cuda:0') tensor(0.00637, device='cuda:0')]
 [0 5 tensor(0.49998, device='cuda:0') tensor(0.53385, device='cuda:0') tensor(0.16530, device='cuda:0') tensor(0.48866, device='cuda:0') tensor(0.00578, device='cuda:0')]
 [0 69 tensor(0.50033, device='cuda:0') tensor(0.52412, device='cuda:0') tensor(0.17935, device='cuda:0') tensor(0.55288, device='cuda:0') tensor(0.00571, device='cuda:0')]
 [0 6 tensor(0.50227, device='cuda:0') tensor(0.50534, device='cuda:0') tensor(0.15491, device='cuda:0') tensor(0.21401, device='cuda:0') tensor(0.00389, device='cuda:0')]
 [0 1 tensor(0.49959, device='cuda:0') tensor(0.53768, device='cuda:0') tensor(0.16975, device='cuda:0') tensor(0.51288, device='cuda:0') tensor(0.00320, device='cuda:0')]
 [0 3 tensor(0.49096, device='cuda:0') tensor(0.53590, device='cuda:0') tensor(0.16228, device='cuda:0') tensor(0.46033, device='cuda:0') tensor(0.00261, device='cuda:0')]
 [0 8 tensor(0.50027, device='cuda:0') tensor(0.55663, device='cuda:0') tensor(0.16762, device='cuda:0') tensor(0.52326, device='cuda:0') tensor(0.00254, device='cuda:0')]
 [0 56 tensor(0.54150, device='cuda:0') tensor(0.50256, device='cuda:0') tensor(0.01474, device='cuda:0') tensor(0.04292, device='cuda:0') tensor(0.00242, device='cuda:0')]
 [0 13 tensor(0.50120, device='cuda:0') tensor(0.50516, device='cuda:0') tensor(0.18320, device='cuda:0') tensor(0.59038, device='cuda:0') tensor(0.00231, device='cuda:0')]
 [0 13 tensor(0.09217, device='cuda:0') tensor(0.52232, device='cuda:0') tensor(0.16878, device='cuda:0') tensor(0.89222, device='cuda:0') tensor(0.00220, device='cuda:0')]
 [0 62 tensor(0.50730, device='cuda:0') tensor(0.51166, device='cuda:0') tensor(0.15655, device='cuda:0') tensor(0.22933, device='cuda:0') tensor(0.00219, device='cuda:0')]
 [0 13 tensor(0.50730, device='cuda:0') tensor(0.51166, device='cuda:0') tensor(0.15655, device='cuda:0') tensor(0.22933, device='cuda:0') tensor(0.00219, device='cuda:0')]
 [0 5 tensor(0.50730, device='cuda:0') tensor(0.51166, device='cuda:0') tensor(0.15655, device='cuda:0') tensor(0.22933, device='cuda:0') tensor(0.00193, device='cuda:0')]
 [0 56 tensor(0.54114, device='cuda:0') tensor(0.50193, device='cuda:0') tensor(0.01923, device='cuda:0') tensor(0.06028, device='cuda:0') tensor(0.00158, device='cuda:0')]
 [0 56 tensor(0.57640, device='cuda:0') tensor(0.50365, device='cuda:0') tensor(0.01025, device='cuda:0') tensor(0.03435, device='cuda:0') tensor(0.00152, device='cuda:0')]
 [0 0 tensor(0.50884, device='cuda:0') tensor(0.53748, device='cuda:0') tensor(0.16689, device='cuda:0') tensor(0.56829, device='cuda:0') tensor(0.00142, device='cuda:0')]
 [0 6 tensor(0.50368, device='cuda:0') tensor(0.49908, device='cuda:0') tensor(0.14416, device='cuda:0') tensor(0.18147, device='cuda:0') tensor(0.00133, device='cuda:0')]
 [0 69 tensor(0.50156, device='cuda:0') tensor(0.49420, device='cuda:0') tensor(0.22092, device='cuda:0') tensor(0.65423, device='cuda:0') tensor(0.00125, device='cuda:0')]
 [0 13 tensor(0.09756, device='cuda:0') tensor(0.51056, device='cuda:0') tensor(0.17404, device='cuda:0') tensor(0.94447, device='cuda:0') tensor(0.00123, device='cuda:0')]
 [0 4 tensor(0.50623, device='cuda:0') tensor(0.51778, device='cuda:0') tensor(0.16212, device='cuda:0') tensor(0.43526, device='cuda:0') tensor(0.00120, device='cuda:0')]
 [0 56 tensor(0.56499, device='cuda:0') tensor(0.50280, device='cuda:0') tensor(0.01702, device='cuda:0') tensor(0.04066, device='cuda:0') tensor(0.00113, device='cuda:0')]
 [0 13 tensor(0.50949, device='cuda:0') tensor(0.51015, device='cuda:0') tensor(0.12393, device='cuda:0') tensor(0.16303, device='cuda:0') tensor(0.00109, device='cuda:0')]]
classes [ 6 69  1 13 62  5 69  6  1  3  8 56 13 13 62 13  5 56 56  0  6 69 13  4 56 13]
&lt;/denchmark-code&gt;

there is something wrong with the target, it should be
&lt;denchmark-code&gt;targets [[          0          25     0.44141     0.50469    0.023438    0.084375]
 [          0          10     0.46016     0.50469    0.020312    0.084375]
 [          0          23     0.47891     0.50469    0.020312    0.078125]
 [          0           1     0.50313         0.5    0.021875       0.075]
 [          0           5     0.52188     0.50156    0.020312    0.078125]
 [          0           0     0.54141     0.50094       0.025       0.075]
 [          0          20     0.56344     0.50281    0.020312    0.078125]
 [          1           8     0.45547      0.4875    0.015625     0.05625]
 [          1          13     0.47031     0.48906    0.017188    0.059375]
 [          1           7     0.49297     0.48906    0.015625    0.059375]
 [          1           8     0.50859      0.4875    0.015625     0.05625]
 [          1           0       0.525      0.4875    0.017188     0.05625]
 [          1           8     0.54062     0.48594    0.017188    0.053125]
 [          2           5     0.45078     0.49531    0.017188    0.078125]

&lt;/denchmark-code&gt;

and I am pretty sure the dataset is correct
		</comment>
		<comment id='2' author='lunasdejavu' date='2020-05-21T09:33:59Z'>
		Your *.names file is missing or incorrect.
		</comment>
		<comment id='3' author='lunasdejavu' date='2020-05-21T09:48:24Z'>
		
Your *.names file is missing or incorrect.

when you call plot_images()  in train.py and test.py you didn't set the names....
plot_images(imgs=imgs, targets=targets, paths=paths, fname=f)
what should I set?
I printed it all
it showed the names is correct
but the target is not  so is the class
&lt;denchmark-code&gt;names ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'Military', 'Foregin', 'Shi']
cls 59
&lt;/denchmark-code&gt;

is it related to pytorch 1.5?
		</comment>
		<comment id='4' author='lunasdejavu' date='2020-05-21T11:14:45Z'>
		1.5 is fine. See wiki custom training tutorial for guidance.
		</comment>
		<comment id='5' author='lunasdejavu' date='2020-05-21T11:18:20Z'>
		I already checked the guidance, and my dataset is fine.
the problem is why target  should be like
&lt;denchmark-code&gt;targets [[          0          25     0.44141     0.50469    0.023438    0.084375]
 [          0          10     0.46016     0.50469    0.020312    0.084375]
 [          0          23     0.47891     0.50469    0.020312    0.078125]
 [          0           1     0.50313         0.5    0.021875       0.075]
 [          0           5     0.52188     0.50156    0.020312    0.078125]
 [          0           0     0.54141     0.50094       0.025       0.075]
 [          0          20     0.56344     0.50281    0.020312    0.078125]
 [          1           8     0.45547      0.4875    0.015625     0.05625]
 [          1          13     0.47031     0.48906    0.017188    0.059375]
 [          1           7     0.49297     0.48906    0.015625    0.059375]
 [          1           8     0.50859      0.4875    0.015625     0.05625]
 [          1           0       0.525      0.4875    0.017188     0.05625]
 [          1           8     0.54062     0.48594    0.017188    0.053125]
 [          2           5     0.45078     0.49531    0.017188    0.078125]
&lt;/denchmark-code&gt;

but it showed :
&lt;denchmark-code&gt;targets [[0 6 tensor(0.50022, device='cuda:0') ... tensor(0.16544, device='cuda:0') tensor(0.48768, device='cuda:0') tensor(0.01074, device='cuda:0')]
 [0 69 tensor(0.49448, device='cuda:0') ... tensor(0.16313, device='cuda:0') tensor(0.45694, device='cuda:0') tensor(0.00929, device='cuda:0')]
 [0 1 tensor(0.49461, device='cuda:0') ... tensor(0.16228, device='cuda:0') tensor(0.44544, device='cuda:0') tensor(0.00909, device='cuda:0')]

&lt;/denchmark-code&gt;

when the error happened.
		</comment>
		<comment id='6' author='lunasdejavu' date='2020-05-21T11:48:06Z'>
		This error is not reproducible using your code to reproduce.
In order to debug we need you to supply minimum code to reproduce on coco data.
		</comment>
		<comment id='7' author='lunasdejavu' date='2020-05-21T11:50:12Z'>
		Hello, thank you for your interest in our work! This issue seems to lack the minimum requirements for a proper response, or is insufficiently detailed for us to help you. Please note that most technical problems are due to:

Your changes to the default repository. If your issue is not reproducible in a fresh git clone version of this repository we can not debug it. Before going further run this code and ensure your issue persists:

sudo rm -rf yolov3  # remove existing
git clone https://github.com/ultralytics/yolov3 &amp;&amp; cd yolov3 # clone latest
python3 detect.py  # verify detection
python3 train.py  # verify training (a few batches only)
# CODE TO REPRODUCE YOUR ISSUE HERE

Your custom data. If your issue is not reproducible with COCO data we can not debug it. Visit our Custom Training Tutorial for exact details on how to format your custom data. Examine train_batch0.jpg and test_batch0.jpg for a sanity check of training and testing data.
Your environment. If your issue is not reproducible in a GCP Quickstart Guide VM we can not debug it. Ensure you meet the requirements specified in the README: Unix, MacOS, or Windows with Python &gt;= 3.7, PyTorch &gt;= 1.4 etc. You can also use our Google Colab Notebook and our Docker Image to test your code in a working environment.

If none of these apply to you, we suggest you close this issue and raise a new one using the Bug Report template, providing screenshots and minimum viable code to reproduce your issue. Thank you!
		</comment>
		<comment id='8' author='lunasdejavu' date='2020-05-25T08:35:34Z'>
		ah I found the problem, I forgot to modify the number of classes in  cfg. To be honest, most of people modify these parameters in the code instead of by hands.....
		</comment>
	</comments>
</bug>