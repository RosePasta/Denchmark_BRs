<bug id='1367' author='logogin' open_date='2020-09-18T09:48:18Z' closed_time='2020-09-20T03:55:09Z'>
	<summary>Wrong order of positional parameters in calls to Seq2SeqEncoder</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Seq2SeqEncoder has next signature for the call:
def __call__(self, inputs, valid_length=None, states=None)
but both child implementations, TransformerEncoder and BERTEncoder have signatures
def __call__(self, inputs, states=None, valid_length=None)
i.e. flipped order of states and valid_length positions. Both implementations also call super with positional arguments.
The bug gets compensated by the fact that Seq2SeqEncoder simply passes through parameters without transformation and parameters flip back to the original positions.
	</description>
	<comments>
		<comment id='1' author='logogin' date='2020-09-20T03:55:09Z'>
		&lt;denchmark-link:https://github.com/logogin&gt;@logogin&lt;/denchmark-link&gt;
 I think this should have been solved via &lt;denchmark-link:https://github.com/dmlc/gluon-nlp/pull/1368&gt;#1368&lt;/denchmark-link&gt;
 so I closed the issue.
		</comment>
	</comments>
</bug>