<bug id='3207' author='mrstegeman' open_date='2020-07-31T23:21:50Z' closed_time='2020-08-04T09:12:19Z'>
	<summary>generate_scorer_package segfaults on linux/armv7 and linux/arm64</summary>
	<description>
Trying to run the  from &lt;denchmark-link:https://github.com/mozilla/DeepSpeech/releases/download/v0.8.0/native_client.rpi3.cpu.linux.tar.xz&gt;here&lt;/denchmark-link&gt;
 on Raspbian (in my case, on a Raspberry Pi 4) generates a segfault:
&lt;denchmark-code&gt;$ ./generate_scorer_package
Segmentation fault
&lt;/denchmark-code&gt;

Here's a (tiny) backtrace from gdb:
&lt;denchmark-code&gt;$ gdb ./generate_scorer_package
GNU gdb (Raspbian 8.2.1-2) 8.2.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "arm-linux-gnueabihf".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
&lt;http://www.gnu.org/software/gdb/bugs/&gt;.
Find the GDB manual and other documentation resources online at:
    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./generate_scorer_package...done.
(gdb) r
Starting program: /home/pi/.mozilla-iot/addons/voice-addon/bin/generate_scorer_package

Program received signal SIGSEGV, Segmentation fault.
0xb6fe061c in std::string::_Rep::_M_dispose(std::allocator&lt;char&gt; const&amp;) [clone .part.2] ()
(gdb) bt
#0  0xb6fe061c in std::string::_Rep::_M_dispose(std::allocator&lt;char&gt; const&amp;) [clone .part.2] ()
&lt;/denchmark-code&gt;

Some additional info:
&lt;denchmark-code&gt;$ ldd generate_scorer_package
	linux-vdso.so.1 (0xbef0a000)
	/usr/lib/arm-linux-gnueabihf/libarmmem-${PLATFORM}.so =&gt; /usr/lib/arm-linux-gnueabihf/libarmmem-v7l.so (0xb6eac000)
	libstdc++.so.6 =&gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6 (0xb6d65000)
	libm.so.6 =&gt; /lib/arm-linux-gnueabihf/libm.so.6 (0xb6ce3000)
	libpthread.so.0 =&gt; /lib/arm-linux-gnueabihf/libpthread.so.0 (0xb6cb9000)
	libdl.so.2 =&gt; /lib/arm-linux-gnueabihf/libdl.so.2 (0xb6ca6000)
	libgcc_s.so.1 =&gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1 (0xb6c79000)
	libc.so.6 =&gt; /lib/arm-linux-gnueabihf/libc.so.6 (0xb6b2b000)
	/lib/ld-linux-armhf.so.3 (0xb6eeb000)
$ lsb_release -a
No LSB modules are available.
Distributor ID:	Raspbian
Description:	Raspbian GNU/Linux 10 (buster)
Release:	10
Codename:	buster
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mrstegeman' date='2020-08-01T00:47:38Z'>
		Even
&lt;denchmark-code&gt;$ cat native_client/generate_scorer_package.cpp 
int
main(int argc, char** argv)
{
    return 0;
}
&lt;/denchmark-code&gt;

Does segfault ...
		</comment>
		<comment id='2' author='mrstegeman' date='2020-08-01T01:09:33Z'>
		Debug build with --copt=-D_GLIBCXX_USE_CXX11_ABI=1:
&lt;denchmark-code&gt;(gdb) run
Starting program: /home/pi/ds-0.8/generate_scorer_package 

Program received signal SIGSEGV, Segmentation fault.
0x0000a134 in ?? ()
(gdb) bt
#0  0x0000a134 in ?? ()
#1  0xb6fe0592 in _GLOBAL__sub_I__Z14create_packageN4absl8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_S6_S6_NS0_IbEEff ()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='mrstegeman' date='2020-08-01T01:49:14Z'>
		Ok, looks like using TensorFlow's gcc 6.5 from RPi it's working, when it is not with our Linaro Gcc 7.2.
		</comment>
		<comment id='4' author='mrstegeman' date='2020-08-01T02:23:06Z'>
		removing  works: &lt;denchmark-link:https://github.com/mozilla/tensorflow/blob/r2.2/tools/arm_compiler/linaro-gcc72-armeabi/linaro_toolchain_config.bzl#L383&gt;https://github.com/mozilla/tensorflow/blob/r2.2/tools/arm_compiler/linaro-gcc72-armeabi/linaro_toolchain_config.bzl#L383&lt;/denchmark-link&gt;

so I think there's something still wrong in our toolchain definition ...
		</comment>
		<comment id='5' author='mrstegeman' date='2020-08-01T02:40:53Z'>
		
removing -shared works: https://github.com/mozilla/tensorflow/blob/r2.2/tools/arm_compiler/linaro-gcc72-armeabi/linaro_toolchain_config.bzl#L383
so I think there's something still wrong in our toolchain definition ...

well, it's just dumb as hell: it's just wrong for executables ...
		</comment>
		<comment id='6' author='mrstegeman' date='2020-08-01T02:41:48Z'>
		I could verify it is working on linux/rpi3 and linux/arm64 so it should be green on CI quite easily ...
		</comment>
		<comment id='7' author='mrstegeman' date='2020-08-01T14:37:16Z'>
		Once again what was supposed to be a tiny patch with "quite easy green CI" turns into a huge mess ...
macOS infra is overloaded and takes ages, taskcluster workers are dying out of disk space ...
		</comment>
	</comments>
</bug>