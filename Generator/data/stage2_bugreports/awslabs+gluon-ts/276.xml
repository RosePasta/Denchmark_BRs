<bug id='276' author='andmib' open_date='2019-08-31T14:22:36Z' closed_time='2019-09-10T19:53:48Z'>
	<summary>SampleForecast Plot `isfinite` not supported</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I have a SampleForecast object that was outputted from the make_evaluations_predictions function. I get an error when trying to plot the SampleForecast using the plot method. The error relates to isfinite not supported.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;from gluonts.model.forecast import SampleForecast
import numpy as np
import pandas as pd

values = np.array([[ 42.497143 ],
                   [ 46.864033 ],
                   [ 32.84226  ],
                   [ 54.569046 ],
                   [ 34.969734 ],
                   [ 34.121456 ],
                   [ 25.532644 ],
                   [ 33.56731  ]])

example = SampleForecast(samples = values,
                         start_date = pd.Timestamp('2019-07-21 00:00:00', freq='W-SUN'),
                         freq='W')

example.plot()
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Error Message&lt;/denchmark-h&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

TypeError                          Traceback (most recent call last)
 in 
----&gt; 1 example.plot()
~/anaconda3/envs/gluon/lib/python3.6/site-packages/gluonts/model/forecast.py in plot(self, prediction_intervals, show_mean, color, label, output_file, *args, **kwargs)
357                 interpolate=True,
358                 *args,
--&gt; 359                 **kwargs,
360             )
361             # Hack to create labels for the error intervals.
~/anaconda3/envs/gluon/lib/python3.6/site-packages/matplotlib/pyplot.py in fill_between(x, y1, y2, where, interpolate, step, data, **kwargs)
2606     return gca().fill_between(
2607         x, y1, y2=y2, where=where, interpolate=interpolate, step=step,
-&gt; 2608         **({"data": data} if data is not None else {}), **kwargs)
2609
2610
~/anaconda3/envs/gluon/lib/python3.6/site-packages/matplotlib/init.py in inner(ax, data, *args, **kwargs)
1808                         "the Matplotlib list!)" % (label_namer, func.name),
1809                         RuntimeWarning, stacklevel=2)
-&gt; 1810             return func(ax, *args, **kwargs)
1811
1812         inner.doc = _add_data_doc(inner.doc,
~/anaconda3/envs/gluon/lib/python3.6/site-packages/matplotlib/axes/_axes.py in fill_between(self, x, y1, y2, where, interpolate, step, **kwargs)
5045
5046         # Convert the arrays so we can work with them
-&gt; 5047         x = ma.masked_invalid(self.convert_xunits(x))
5048         y1 = ma.masked_invalid(self.convert_yunits(y1))
5049         y2 = ma.masked_invalid(self.convert_yunits(y2))
~/anaconda3/envs/gluon/lib/python3.6/site-packages/numpy/ma/core.py in masked_invalid(a, copy)
2362         cls = type(a)
2363     else:
-&gt; 2364         condition = ~(np.isfinite(a))
2365         cls = MaskedArray
2366     result = a.view(cls)
TypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


Operating system: Ubuntu 16.04
Python version: 3.6.8
GluonTS version: 0.1.
Anaconda Environment:
_anaconda_depends=2019.03=py36_0

_libgcc_mutex=0.1=main
_tflow_select=2.3.0=mkl
absl-py=0.7.1=py36_0
alabaster=0.7.12=py36_0
anaconda=custom=py36_1
anaconda-client=1.7.2=py36_0
anaconda-project=0.8.2=py36_0
asn1crypto=0.24.0=py36_0
astor=0.8.0=py36_0
astroid=2.2.5=py36_0
astropy=3.1.2=py36h7b6447c_0
atomicwrites=1.3.0=py36_1
attrs=19.1.0=py36_1
babel=2.6.0=py36_0
backcall=0.1.0=py36_0
backports=1.0=py36_1
backports.os=0.1.1=py36_0
backports.shutil_get_terminal_size=1.0.0=py36_2
beautifulsoup4=4.7.1=py36_1
bitarray=0.8.3=py36h14c3975_0
bkcharts=0.2=py36h735825a_0
blas=1.0=mkl
bleach=3.1.0=py36_0
blosc=1.15.0=hd408876_0
bokeh=1.0.4=py36_0
boto=2.49.0=py36_0
bottleneck=1.2.1=py36h035aef0_1
bzip2=1.0.6=h14c3975_5
c-ares=1.15.0=h7b6447c_1001
ca-certificates=2019.5.15=1
cairo=1.14.12=h8948797_3
certifi=2019.6.16=py36_1
cffi=1.12.2=py36h2e261b9_1
chardet=3.0.4=py36_1
cloudpickle=0.8.0=py36_0
clyent=1.2.2=py36_1
colorama=0.4.1=py36_0
contextlib2=0.5.5=py36h6c84a62_0
cryptography=2.6.1=py36h1ba5d50_0
curl=7.64.0=hbc83047_2
cycler=0.10.0=py36h93f1223_0
cython=0.29.6=py36he6710b0_0
cytoolz=0.9.0.1=py36h14c3975_1
dask=1.1.4=py36_1
dask-core=1.1.4=py36_1
dbus=1.13.6=h746ee38_0
decorator=4.4.0=py36_1
defusedxml=0.5.0=py36_1
distributed=1.26.0=py36_1
docutils=0.14=py36hb0f60f5_0
entrypoints=0.3=py36_0
et_xmlfile=1.0.1=py36hd6bccc3_0
expat=2.2.6=he6710b0_0
fastcache=1.0.2=py36h14c3975_2
flask=1.0.2=py36_1
fontconfig=2.13.0=h9420a91_0
freetype=2.9.1=h8a8886c_1
fribidi=1.0.5=h7b6447c_0
gast=0.2.2=py36_0
get_terminal_size=1.0.0=haa9412d_0
gevent=1.4.0=py36h7b6447c_0
glib=2.56.2=hd408876_0
gmp=6.1.2=h6c8ec71_1
gmpy2=2.0.8=py36h10f8cd9_2
google-pasta=0.1.7=py_0
graphite2=1.3.13=h23475e2_0
greenlet=0.4.15=py36h7b6447c_0
grpcio=1.16.1=py36hf8bcb03_1
gst-plugins-base=1.14.0=hbbd80ab_1
gstreamer=1.14.0=hb453b48_1
h5py=2.9.0=py36h7918eee_0
harfbuzz=1.8.8=hffaf4a1_0
hdf5=1.10.4=hb1b8bf9_0
heapdict=1.0.0=py36_2
html5lib=1.0.1=py36_0
icu=58.2=h9c2bf20_1
idna=2.8=py36_0
imageio=2.5.0=py36_0
imagesize=1.1.0=py36_0
importlib_metadata=0.8=py36_0
intel-openmp=2019.3=199
ipykernel=5.1.0=py36h39e3cac_0
ipython=7.4.0=py36h39e3cac_0
ipython_genutils=0.2.0=py36hb52b0d5_0
ipywidgets=7.4.2=py36_0
isort=4.3.16=py36_0
itsdangerous=1.1.0=py36_0
jbig=2.1=hdba287a_0
jdcal=1.4=py36_0
jedi=0.13.3=py36_0
jeepney=0.4=py36_0
jinja2=2.10=py36_0
jpeg=9b=h024ee3a_2
jsonschema=3.0.1=py36_0
jupyter=1.0.0=py36_7
jupyter_client=5.2.4=py36_0
jupyter_console=6.0.0=py36_0
jupyter_core=4.4.0=py36_0
jupyterlab=0.35.4=py36hf63ae98_0
jupyterlab_server=0.2.0=py36_0
keras-applications=1.0.8=py_0
keras-preprocessing=1.1.0=py_1
keyring=18.0.0=py36_0
kiwisolver=1.0.1=py36hf484d3e_0
krb5=1.16.1=h173b8e3_7
lazy-object-proxy=1.3.1=py36h14c3975_2
libcurl=7.64.0=h20c2e04_2
libedit=3.1.20181209=hc058e9b_0
libffi=3.2.1=hd88cf55_4
libgcc-ng=8.2.0=hdf63c60_1
libgfortran-ng=7.3.0=hdf63c60_0
libpng=1.6.36=hbc83047_0
libprotobuf=3.8.0=hd408876_0
libsodium=1.0.16=h1bed415_0
libssh2=1.8.0=h1ba5d50_4
libstdcxx-ng=8.2.0=hdf63c60_1
libtiff=4.0.10=h2733197_2
libtool=2.4.6=h7b6447c_5
libuuid=1.0.3=h1bed415_2
libxcb=1.13=h1bed415_1
libxml2=2.9.9=he19cac6_0
libxslt=1.1.33=h7d1a2b0_0
llvmlite=0.28.0=py36hd408876_0
locket=0.2.0=py36h787c0ad_1
lxml=4.3.2=py36hefd8a0e_0
lzo=2.10=h49e0be7_2
markdown=3.1.1=py36_0
markupsafe=1.1.1=py36h7b6447c_0
matplotlib=3.0.3=py36h5429711_0
mccabe=0.6.1=py36_1
mistune=0.8.4=py36h7b6447c_0
mkl=2019.3=199
mkl-service=1.1.2=py36he904b0f_5
mkl_fft=1.0.10=py36ha843d7b_0
mkl_random=1.0.2=py36hd81dba3_0
more-itertools=6.0.0=py36_0
mpc=1.1.0=h10f8cd9_1
mpfr=4.0.1=hdf1c602_3
mpmath=1.1.0=py36_0
msgpack-python=0.6.1=py36hfd86e86_1
multipledispatch=0.6.0=py36_0
nbconvert=5.4.1=py36_3
nbformat=4.4.0=py36h31c9010_0
ncurses=6.1=he6710b0_1
networkx=2.2=py36_1
nltk=3.4=py36_1
nose=1.3.7=py36_2
notebook=5.7.8=py36_0
numba=0.43.1=py36h962f231_0
numexpr=2.6.9=py36h9e4a6bb_0
numpydoc=0.8.0=py36_0
olefile=0.46=py36_0
openpyxl=2.6.1=py36_1
openssl=1.1.1c=h7b6447c_1
packaging=19.0=py36_0
pandas=0.24.2=py36he6710b0_0
pandoc=2.2.3.2=0
pandocfilters=1.4.2=py36_1
pango=1.42.4=h049681c_0
parso=0.3.4=py36_0
partd=0.3.10=py36_1
path.py=11.5.0=py36_0
pathlib2=2.3.3=py36_0
patsy=0.5.1=py36_0
pcre=8.43=he6710b0_0
pep8=1.7.1=py36_0
pexpect=4.6.0=py36_0
pickleshare=0.7.5=py36_0
pillow=5.4.1=py36h34e0f95_0
pip=19.0.3=py36_0
pixman=0.38.0=h7b6447c_0
pluggy=0.9.0=py36_0
ply=3.11=py36_0
prometheus_client=0.6.0=py36_0
prompt_toolkit=2.0.9=py36_0
psutil=5.6.1=py36h7b6447c_0
ptyprocess=0.6.0=py36_0
py=1.8.0=py36_0
pycosat=0.6.3=py36h14c3975_0
pycparser=2.19=py36_0
pycrypto=2.6.1=py36h14c3975_9
pycurl=7.43.0.2=py36h1ba5d50_0
pygments=2.3.1=py36_0
pylint=2.3.1=py36_0
pyodbc=4.0.26=py36he6710b0_0
pyopenssl=19.0.0=py36_0
pyparsing=2.3.1=py36_0
pyqt=5.9.2=py36h05f1152_2
pyrsistent=0.14.11=py36h7b6447c_0
pysocks=1.6.8=py36_0
pytables=3.5.1=py36h71ec239_0
pytest-arraydiff=0.3=py36h39e3cac_0
pytest-astropy=0.5.0=py36_0
pytest-doctestplus=0.3.0=py36_0
pytest-openfiles=0.3.2=py36_0
pytest-remotedata=0.3.1=py36_0
python=3.6.8=h0371630_0
python-dateutil=2.8.0=py36_0
pytz=2018.9=py36_0
pywavelets=1.0.2=py36hdd07704_0
pyyaml=5.1=py36h7b6447c_0
pyzmq=18.0.0=py36he6710b0_0
qt=5.9.7=h5867ecd_1
qtawesome=0.5.7=py36_1
qtconsole=4.4.3=py36_0
qtpy=1.7.0=py36_1
readline=7.0=h7b6447c_5
requests=2.21.0=py36_0
rope=0.12.0=py36_0
ruamel_yaml=0.15.46=py36h14c3975_0
scikit-image=0.14.2=py36he6710b0_0
scikit-learn=0.20.3=py36hd81dba3_0
scipy=1.2.1=py36h7c811a0_0
seaborn=0.9.0=py36_0
secretstorage=3.1.1=py36_0
send2trash=1.5.0=py36_0
setuptools=40.8.0=py36_0
simplegeneric=0.8.1=py36_2
singledispatch=3.4.0.3=py36h7a266c3_0
sip=4.19.8=py36hf484d3e_0
six=1.12.0=py36_0
snappy=1.1.7=hbae5bb6_3
snowballstemmer=1.2.1=py36h6febd40_0
sortedcollections=1.1.2=py36_0
sortedcontainers=2.1.0=py36_0
soupsieve=1.8=py36_0
sphinxcontrib=1.0=py36_1
sphinxcontrib-websupport=1.1.0=py36_1
spyder=3.3.3=py36_0
spyder-kernels=0.4.2=py36_0
sqlite=3.27.2=h7b6447c_0
statsmodels=0.9.0=py36h035aef0_0
sympy=1.3=py36_0
tblib=1.3.2=py36h34cf8b6_0
tensorboard=1.14.0=py36hf484d3e_0
tensorflow=1.14.0=mkl_py36h2526735_0
tensorflow-base=1.14.0=mkl_py36h7ce6ba3_0
tensorflow-estimator=1.14.0=py_0
termcolor=1.1.0=py36_1
terminado=0.8.1=py36_1
testpath=0.4.2=py36_0
tk=8.6.8=hbc83047_0
toolz=0.9.0=py36_0
traitlets=4.3.2=py36h674d592_0
unicodecsv=0.14.1=py36ha668878_0
unixodbc=2.3.7=h14c3975_0
urllib3=1.24.1=py36_0
wcwidth=0.1.7=py36hdf4376a_0
webencodings=0.5.1=py36_1
werkzeug=0.14.1=py36_0
wheel=0.33.1=py36_0
widgetsnbextension=3.4.2=py36_0
wrapt=1.11.1=py36h7b6447c_0
wurlitzer=1.0.2=py36_0
xlrd=1.2.0=py36_0
xlsxwriter=1.1.5=py36_0
xlwt=1.3.0=py36h7b00a1f_0
xz=5.2.4=h14c3975_4
yaml=0.1.7=had09818_2
zeromq=4.3.1=he6710b0_3
zict=0.1.4=py36_0
zipp=0.3.3=py36_1
zlib=1.2.11=h7b6447c_3
zstd=1.3.7=h0b5b093_0
pip:

alembic==1.0.10
amqp==2.5.0
apipkg==1.5
appdirs==1.4.3
argh==0.26.2
argparse==1.4.0
black==18.6b4
boto3==1.9.163
botocore==1.12.164
cachetools==3.1.1
click==6.7
commonmark==0.9.0
convertdate==2.1.3
coverage==4.5.3
cx-oracle==7.1.3
debtcollector==1.21.0
dnspython==1.16.0
dogpile-cache==0.7.1
ephem==3.7.6.0
eventlet==0.25.0
execnet==1.6.0
extras==1.0.0
fasteners==0.15
fbprophet==0.5
feather-format==0.4.0
fixtures==3.0.0
flake8==3.4.1
future==0.17.1
futurist==1.8.1
gluon==1.1.0
gluonts==0.1.2
google-api-core==1.11.1
google-auth==1.6.3
google-auth-oauthlib==0.3.0
google-cloud-bigquery==1.14.0
google-cloud-core==1.0.1
google-resumable-media==0.3.2
googleapis-common-protos==1.6.0
holidays==0.9.10
iso8601==0.1.12
jmespath==0.9.4
keras==2.2.5
keystoneauth1==3.14.0
keystonemiddleware==6.0.0
kombu==4.6.1
linecache2==1.0.0
livereload==2.6.1
logutils==0.3.5
lunardate==0.2.0
mako==1.0.12
merf==0.3
monotonic==1.5
mxnet==1.4.1
mxtheme==0.2
mypy==0.630
mypy-extensions==0.4.1
nbsphinx==0.3.5
netaddr==0.7.19
netifaces==0.10.9
numpy==1.14.6
oauthlib==3.0.1
os-service-types==1.7.0
oslo-cache==1.35.0
oslo-concurrency==3.29.1
oslo-config==6.9.0
oslo-context==2.22.1
oslo-db==5.0.0
oslo-i18n==3.23.1
oslo-log==3.44.0
oslo-messaging==9.7.1
oslo-middleware==3.38.0
oslo-policy==2.2.0
oslo-serialization==2.29.1
oslo-service==1.40.0
oslo-utils==3.41.0
oslo-versionedobjects==1.36.0
pandas-gbq==0.10.0
paste==3.0.8
pastedeploy==2.0.1
pathtools==0.1.2
pbr==5.2.1
pecan==1.3.3
port-for==0.3.1
prettytable==0.7.2
protobuf==3.8.0
pyarrow==0.13.0
pyasn1==0.4.5
pyasn1-modules==0.2.5
pycadf==2.9.0
pycodestyle==2.3.1
pydantic==0.12.1
pydata-google-auth==0.1.3
pyflakes==1.5.0
pyinotify==0.9.6
pymssql==2.1.4
pystan==2.19.0.0
pytest==3.10.1
pytest-cov==2.6.1
pytest-forked==1.0.2
pytest-runner==2.11.1
pytest-timeout==1.2.1
pytest-xdist==1.27.0
python-editor==1.0.4
python-etcd==0.4.5
python-graphviz==0.8.4
python-keystoneclient==3.19.0
python-mimeparse==1.6.0
recommonmark==0.5.0
repoze-lru==0.7
requests-oauthlib==1.2.0
rfc3986==1.3.2
routes==2.4.1
rpy2==3.0.4
rsa==4.0
s3transfer==0.2.1
setuptools-git==1.2
sphinx==1.7.9
sphinx-autobuild==0.7.1
sphinx-autorun==1.1.0
sphinx-gallery==0.3.1
sphinx-rtd-theme==0.4.3
sqlalchemy==1.0.19
sqlalchemy-migrate==0.12.0
sqlparse==0.3.0
statsd==3.3.0
stevedore==1.30.1
tempita==0.5.2
testresources==2.0.1
testscenarios==0.5.0
testtools==2.3.0
toml==0.10.0
tornado==5.1.1
tqdm==4.32.1
traceback2==1.4.0
tsfresh==0.11.2
typed-ast==1.1.2
tzlocal==1.5.1
ujson==1.35
unittest2==1.1.0
vine==1.3.0
waitress==1.3.0
watchdog==0.9.0
webob==1.8.5
webtest==2.0.33
wsme==0.9.3
xgboost==0.90
yappi==1.0





	</description>
	<comments>
		<comment id='1' author='andmib' date='2019-09-10T12:02:43Z'>
		&lt;denchmark-link:https://github.com/andmib&gt;@andmib&lt;/denchmark-link&gt;
 thanks for submitting this: this must have to do with the fact that the time axis in your example has length 1. In fact, everything works fine in the following, modified example:
from gluonts.model.forecast import SampleForecast
import numpy as np
import pandas as pd

values = np.array([[ 42.497143 , 42.497143 ],
                   [ 46.864033 , 46.864033 ],
                   [ 32.84226  , 32.84226  ],
                   [ 54.569046 , 54.569046 ],
                   [ 34.969734 , 34.969734 ],
                   [ 34.121456 , 34.121456 ],
                   [ 25.532644 , 25.532644 ],
                   [ 33.56731  , 33.56731  ]])

example = SampleForecast(samples = values,
                         start_date = pd.Timestamp('2019-07-21 00:00:00', freq='W-SUN'),
                         freq='W')

example.plot()
Intuitively, the case prediction_length=1 is a bit of an edge case for plotting. Do you have in mind what plot should display in that case?
		</comment>
		<comment id='2' author='andmib' date='2019-09-10T19:53:48Z'>
		&lt;denchmark-link:https://github.com/lostella&gt;@lostella&lt;/denchmark-link&gt;
 Thank you for the response - I was only interested in the forecast 1-week out, and had set the length to reflect that.
Now that I think about it, the only way to display that would be via markers for the mean and intervals. But that would look fairly ugly.
		</comment>
	</comments>
</bug>