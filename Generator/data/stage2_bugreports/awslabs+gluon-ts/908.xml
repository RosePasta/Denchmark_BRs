<bug id='908' author='parimuns' open_date='2020-07-03T16:56:04Z' closed_time='2020-07-13T16:59:18Z'>
	<summary>Issue in  DeepstateEstimator for "prediction length=1 "</summary>
	<description>
I am using DeepStateEstimator for forecasting purposes with Hourly data .But if I set prediction length=1,means prediction for next hour ,it gives me error and if I set prediction length&gt;=2,its working fine.Please find the error below for prediction length=1.
If I run
&lt;denchmark-code&gt;forecasts = list(forecast_it)
tss = list(ts_it)
&lt;/denchmark-code&gt;

then it gives me error
&lt;denchmark-code&gt;MXNetError                                Traceback (most recent call last)
&lt;ipython-input-38-19e7d512cf80&gt; in &lt;module&gt;
----&gt; 1 forecasts = list(forecast_it)
      2 tss = list(ts_it)

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\model\predictor.py in predict(self, dataset, num_samples, num_workers, num_prefetch, **kwargs)
    340             freq=self.freq,
    341             output_transform=self.output_transform,
--&gt; 342             num_samples=num_samples,
    343         )
    344 

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\model\forecast_generator.py in __call__(self, inference_data_loader, prediction_net, input_names, freq, output_transform, num_samples, **kwargs)
    195         for batch in inference_data_loader:
    196             inputs = [batch[k] for k in input_names]
--&gt; 197             outputs = prediction_net(*inputs).asnumpy()
    198             if output_transform is not None:
    199                 outputs = output_transform(batch, outputs)

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\gluon\block.py in __call__(self, *args)
    691             hook(self, args)
    692 
--&gt; 693         out = self.forward(*args)
    694 
    695         for hook in self._forward_hooks.values():

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\gluon\block.py in forward(self, x, *args)
   1156                     params = {k: v.data(ctx) for k, v in self._reg_params.items()}
   1157 
-&gt; 1158                 return self.hybrid_forward(ndarray, x, *args, **params)
   1159 
   1160         params = {i: j.var() for i, j in self._reg_params.items()}

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\model\deepstate\_network.py in hybrid_forward(self, F, feat_static_cat, past_observed_values, past_seasonal_indicators, past_time_feat, past_target, future_seasonal_indicators, future_time_feat)
    263 
    264         samples = lds_prediction.sample(
--&gt; 265             num_samples=self.num_parallel_samples, scale=scale
    266         )
    267 

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\mx\distribution\lds.py in sample(self, num_samples, scale)
    382                 F.linalg_gemm2(emission_coeff_t, samples_lat_state)
    383                 + residual_t
--&gt; 384                 + samples_eps_obs[t]
    385             )
    386             samples_t = (

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\ndarray\register.py in linalg_gemm2(A, B, transpose_a, transpose_b, alpha, axis, out, name, **kwargs)

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\_ctypes\ndarray.py in _imperative_invoke(handle, ndargs, keys, vals, out, is_np_op)
    105         c_str_array(keys),
    106         c_str_array([str(s) for s in vals]),
--&gt; 107         ctypes.byref(out_stypes)))
    108 
    109     create_ndarray_fn = _np_ndarray_cls if is_np_op else _ndarray_cls

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\base.py in check_call(ret)
    253     """
    254     if ret != 0:
--&gt; 255         raise MXNetError(py_str(_LIB.MXGetLastError()))
    256 
    257 

MXNetError: [22:14:24] c:\jenkins\workspace\mxnet-tag\mxnet\src\imperative\./imperative_utils.h:146: Operator _linalg_gemm2 inferring shapes failed.
input shapes:
[100,1,33]
[100,1,33,1]
output shapes:
None
operator attributes:

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='parimuns' date='2020-07-13T13:13:27Z'>
		This is a minimal working example raising the bug:
import pandas as pd
import mxnet as mx

from gluonts.dataset.common import ListDataset
from gluonts.model.deepstate import DeepStateEstimator
from gluonts.mx.trainer import Trainer

prediction_length = 1
freq = "1h"

train_ds = ListDataset(
    [{'target': [10.0] * 2000, 'start': pd.Timestamp("2020-01-01 00:00:00", freq=freq)}],
    freq=freq
)

estimator = DeepStateEstimator(
    prediction_length=prediction_length,
    cardinality=[1],
    use_feat_static_cat=False,
    freq=freq,
    trainer=Trainer(
        ctx=mx.context.cpu(),
        epochs=1,
        learning_rate=1E-3,
        hybridize=True,
        num_batches_per_epoch=2
    ),
)

predictor = estimator.train(train_ds)

predictions = list(predictor.predict(train_ds))
		</comment>
		<comment id='2' author='parimuns' date='2020-07-13T16:59:53Z'>
		&lt;denchmark-link:https://github.com/parimuns&gt;@parimuns&lt;/denchmark-link&gt;
 Can you confirm that the code on master works fine now?
		</comment>
		<comment id='3' author='parimuns' date='2020-07-13T17:09:36Z'>
		Hello &lt;denchmark-link:https://github.com/lostella&gt;@lostella&lt;/denchmark-link&gt;

I have checked the code and its not working again.
		</comment>
		<comment id='4' author='parimuns' date='2020-07-13T18:32:09Z'>
		&lt;denchmark-link:https://github.com/parimuns&gt;@parimuns&lt;/denchmark-link&gt;
 the example I included above is now working, could you provide one that doesn't work and raises the error?
		</comment>
		<comment id='5' author='parimuns' date='2020-07-14T04:44:15Z'>
		&lt;denchmark-link:https://github.com/lostella&gt;@lostella&lt;/denchmark-link&gt;
 ..While running your sample code,it gives me error :
&lt;denchmark-code&gt;WARNING:root:You have set `num_workers` to a non zero value, however, currently multiprocessing is not supported on windows and therefore`num_workers will be set to 0 

MXNetError                                Traceback (most recent call last)
&lt;ipython-input-1-16117a8ef732&gt; in &lt;module&gt;
     30 predictor = estimator.train(train_ds)
     31 
---&gt; 32 predictions = list(predictor.predict(train_ds))

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\model\predictor.py in predict(self, dataset, num_samples, num_workers, num_prefetch, **kwargs)
    340             freq=self.freq,
    341             output_transform=self.output_transform,
--&gt; 342             num_samples=num_samples,
    343         )
    344 

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\model\forecast_generator.py in __call__(self, inference_data_loader, prediction_net, input_names, freq, output_transform, num_samples, **kwargs)
    195         for batch in inference_data_loader:
    196             inputs = [batch[k] for k in input_names]
--&gt; 197             outputs = prediction_net(*inputs).asnumpy()
    198             if output_transform is not None:
    199                 outputs = output_transform(batch, outputs)

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\gluon\block.py in __call__(self, *args)
    691             hook(self, args)
    692 
--&gt; 693         out = self.forward(*args)
    694 
    695         for hook in self._forward_hooks.values():

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\gluon\block.py in forward(self, x, *args)
   1156                     params = {k: v.data(ctx) for k, v in self._reg_params.items()}
   1157 
-&gt; 1158                 return self.hybrid_forward(ndarray, x, *args, **params)
   1159 
   1160         params = {i: j.var() for i, j in self._reg_params.items()}

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\model\deepstate\_network.py in hybrid_forward(self, F, feat_static_cat, past_observed_values, past_seasonal_indicators, past_time_feat, past_target, future_seasonal_indicators, future_time_feat)
    263 
    264         samples = lds_prediction.sample(
--&gt; 265             num_samples=self.num_parallel_samples, scale=scale
    266         )
    267 

c:\users\appdata\local\programs\python\python37\lib\site-packages\gluonts\mx\distribution\lds.py in sample(self, num_samples, scale)
    382                 F.linalg_gemm2(emission_coeff_t, samples_lat_state)
    383                 + residual_t
--&gt; 384                 + samples_eps_obs[t]
    385             )
    386             samples_t = (

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\ndarray\register.py in linalg_gemm2(A, B, transpose_a, transpose_b, alpha, axis, out, name, **kwargs)

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\_ctypes\ndarray.py in _imperative_invoke(handle, ndargs, keys, vals, out, is_np_op)
    105         c_str_array(keys),
    106         c_str_array([str(s) for s in vals]),
--&gt; 107         ctypes.byref(out_stypes)))
    108 
    109     create_ndarray_fn = _np_ndarray_cls if is_np_op else _ndarray_cls

c:\users\appdata\local\programs\python\python37\lib\site-packages\mxnet\base.py in check_call(ret)
    253     """
    254     if ret != 0:
--&gt; 255         raise MXNetError(py_str(_LIB.MXGetLastError()))
    256 
    257 

MXNetError: [09:31:05] c:\jenkins\workspace\mxnet-tag\mxnet\src\imperative\./imperative_utils.h:146: Operator _linalg_gemm2 inferring shapes failed.
input shapes:
[100,1,32]
[100,1,32,1]
output shapes:
None
operator attributes:
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='parimuns' date='2020-07-14T04:45:26Z'>
		I guess there is some issue in running on windows.
		</comment>
		<comment id='7' author='parimuns' date='2020-07-14T05:08:47Z'>
		&lt;denchmark-link:https://github.com/parimuns&gt;@parimuns&lt;/denchmark-link&gt;
 did you pull the latest changes from the master branch?
		</comment>
		<comment id='8' author='parimuns' date='2020-09-01T04:11:15Z'>
		I got same problem running on windows. It doesn't work when using prediction_length=1 (training seems success but prediction raises an error). When change prediction_length=2 both of training and prediction work well.
&lt;denchmark-link:https://github.com/lostella&gt;@lostella&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/parimuns&gt;@parimuns&lt;/denchmark-link&gt;
 did you solve this issue ?
thank you
		</comment>
		<comment id='9' author='parimuns' date='2020-09-01T10:14:55Z'>
		&lt;denchmark-link:https://github.com/ramdhan1989&gt;@ramdhan1989&lt;/denchmark-link&gt;
 can you confirm that this is fixed in 0.5.2?
		</comment>
		<comment id='10' author='parimuns' date='2020-09-02T01:06:02Z'>
		
@ramdhan1989 can you confirm that this is fixed in 0.5.2?

Thanks, it is solved!
		</comment>
	</comments>
</bug>