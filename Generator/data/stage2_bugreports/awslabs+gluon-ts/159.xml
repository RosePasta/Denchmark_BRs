<bug id='159' author='cyrusmvahid' open_date='2019-07-01T11:26:25Z' closed_time='2019-09-10T12:32:44Z'>
	<summary>Wavenet Estimator does not take minute frequency</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

(A clear and concise description of what the bug is.)
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

(Please provide minimal example of code snippet that reproduces the error. For existing examples, please provide link.)
&lt;denchmark-h:h2&gt;Error Message&lt;/denchmark-h&gt;

(Paste the complete error message, including stack trace.)
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


Operating system:
Python version:
GluonTS version:

(Add as much information about your environment as possible, e.g. dependencies versions.)
	</description>
	<comments>
		<comment id='1' author='cyrusmvahid' date='2019-07-01T11:30:12Z'>
		Description:
I am trying to replicate the twit example with different estimators and compare the results.
&lt;denchmark-code&gt;wavenet_estimator = WaveNetEstimator(freq="5min", prediction_length=12, trainer=Trainer(epochs=EPOCHS))
&lt;/denchmark-code&gt;

I get the following result
&lt;denchmark-code&gt;---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
&lt;ipython-input-130-bea3fc1bb39e&gt; in &lt;module&gt;()
----&gt; 1 wavenet_estimator = WaveNetEstimator(freq="5min", prediction_length=12, trainer=Trainer(epochs=EPOCHS))

~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/gluonts/core/component.py in init_wrapper(*args, **kwargs)
    395                 self.__class__.__repr__ = validated_repr
    396 
--&gt; 397             return init(self, **all_args)
    398 
    399         # attach the Pydantic model as the attribute of the initializer wrapper

~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/gluonts/model/wavenet/_estimator.py in __init__(self, freq, prediction_length, trainer, num_eval_samples, cardinality, embedding_dimension, num_bins, hybridize_prediction_net, n_residue, n_skip, dilation_depth, n_stacks, temperature, act_type)
    162 
    163         seasonality = _get_seasonality(
--&gt; 164             self.freq, {'H': 7 * 24, 'D': 7, 'W': 52, 'M': 12, 'B': 7 * 5}
    165         )
    166         goal_receptive_length = max(seasonality, 2 * self.prediction_length)

~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/gluonts/model/wavenet/_estimator.py in _get_seasonality(freq, seasonality_dict)
     87         else {'H': 7 * 24, 'D': 7, 'W': 52, 'M': 12, 'B': 7 * 5}
     88     )
---&gt; 89     seasonality = sdict[base_freq]
     90     if seasonality % multiple != 0:
     91         logging.warning(

KeyError: 'min'
&lt;/denchmark-code&gt;

Environment
Amazon SageMaker - mxnet-py36
I have installed gluonts manually
Linux ip-172-16-8-18 4.14.121-85.96.amzn1.x86_64 &lt;denchmark-link:https://github.com/awslabs/gluon-ts/pull/1&gt;#1&lt;/denchmark-link&gt;
 SMP Wed May 22 00:45:50 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
mx.: '1.4.1'
		</comment>
		<comment id='2' author='cyrusmvahid' date='2019-07-01T12:10:20Z'>
		Looks like just adding the support 'min' to the keys might work -- however I'm not sure if 'min': 60 * 7 * 24 could create memory issues
cc &lt;denchmark-link:https://github.com/geoalgo&gt;@geoalgo&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='3' author='cyrusmvahid' date='2019-07-01T12:13:07Z'>
		I think it wont because the code has this safeguard:
goal_receptive_length = max(seasonality, 2 * self.prediction_length)
		</comment>
		<comment id='4' author='cyrusmvahid' date='2019-09-10T12:32:44Z'>
		Solved in &lt;denchmark-link:https://github.com/awslabs/gluon-ts/pull/262&gt;#262&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>