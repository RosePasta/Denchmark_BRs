<bug id='581' author='canerturkmen' open_date='2020-01-30T16:48:40Z' closed_time='2020-01-30T20:06:26Z'>
	<summary>HybridBlock to SymbolBlock conversion forgets about input/output formats</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Currently, GluonTS uses the HybridBlock.export and SymbolBlock.imports facilities to convert a HybridBlock to SymbolBlock. However, during this conversion, mxnet "forgets" about the _in_format and _out_format member variables which keep track of how a block object's inputs (resp. outputs) are nested within the call signature.
This leads to several unexpected behaviors when converting blocks.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

import mxnet as mx

from gluonts.support import util

class TestBlock(mx.gluon.HybridBlock):
    def hybrid_forward(self, F, x1, x2):
        return F.broadcast_mul(x1, x2[0]) 
    
x1 = mx.nd.array([1, 2, 3])
x2 = [mx.nd.array([1, 5, 5])]

my_block = TestBlock()
my_block.collect_params().initialize()
my_block.hybridize()
my_block(x1, x2)

sb = util.hybrid_block_to_symbol_block(my_block, [x1, x2])
&lt;denchmark-h:h2&gt;Error Message&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-18-f8f4e08a1a43&gt; in &lt;module&gt;
      7 my_block(x1, x2)
      8 
----&gt; 9 sb = util.hybrid_block_to_symbol_block(my_block, [x1, x2])

~/code/gluon-ts/src/gluonts/support/util.py in hybrid_block_to_symbol_block(hb, data_batch)
    216             net=hb,
    217             hybridize=True,
--&gt; 218             data_batch=data_batch,
    219             static_alloc=True,
    220             static_shape=True,

~/code/gluon-ts/src/gluonts/support/util.py in import_symb_block(num_inputs, model_dir, model_name, epoch)
    276         The deserialized block.
    277     """
--&gt; 278     if num_inputs == 1:
    279         input_names = ["data"]
    280     else:

~/VENVS/gluonts/lib/python3.6/site-packages/mxnet/gluon/block.py in imports(symbol_file, input_names, param_file, ctx)
   1022         ret = SymbolBlock(sym, inputs)
   1023         if param_file is not None:
-&gt; 1024             ret.collect_params().load(param_file, ctx=ctx)
   1025         return ret
   1026 

~/VENVS/gluonts/lib/python3.6/site-packages/mxnet/gluon/parameter.py in load(self, filename, ctx, allow_missing, ignore_extra, restore_prefix)
    902         lprefix = len(restore_prefix)
    903         loaded = [(k[4:] if k.startswith('arg:') or k.startswith('aux:') else k, v) \
--&gt; 904                   for k, v in ndarray.load(filename).items()]
    905         arg_dict = {restore_prefix+k: v for k, v in loaded}
    906         if not allow_missing:

AttributeError: 'list' object has no attribute 'items'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='canerturkmen' date='2020-01-30T16:52:39Z'>
		&lt;denchmark-link:https://github.com/canerturkmen&gt;@canerturkmen&lt;/denchmark-link&gt;
 looks like someone has a fix in the making ;-)
		</comment>
	</comments>
</bug>