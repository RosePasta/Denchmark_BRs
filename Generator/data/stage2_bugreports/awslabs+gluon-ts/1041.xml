<bug id='1041' author='elenaehrlich' open_date='2020-09-16T11:37:39Z' closed_time='2020-09-21T11:29:32Z'>
	<summary>Sample function of MixtureDistribution class errors for (d,)-shaped distributions when num_samples&amp;gt;1</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I came across a bug in the MixtureDistribution class, where sampling is prohibited by an incompatible shapes broadcast (see MWEs 1 and 2 below).
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

MWE-1 demonstrates where sampling is prohibited by an incompatible shapes broadcast
&lt;denchmark-code&gt;import mxnet as mx
from mxnet import nd
import numpy as np
gaussian = Gaussian(mu=nd.array([0.]), sigma=nd.array([1.]))
gamma = Gamma(alpha=nd.array([9.]), beta=nd.array([2.]))
mixture = MixtureDistribution(mixture_probs=nd.array([0.9, 0.1]), components=[gaussian, gamma])
mixture.sample(num_samples=1) # WORKS
mixture.sample(num_samples=10) # DOESN"T WORK
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;MWE-1 Error message or code output&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3417, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-30-52d279ea9fbf&gt;", line 9, in &lt;module&gt;
    mixture.sample(num_samples=10) # DOESN"T WORK
  File "/Users/eeehrlic/Documents/projects/capstone/gluon-ts/src/gluonts/mx/distribution/mixture.py", line 155, in sample
    # idx = idx.broadcast_like(samples_list[0])
  File "/usr/local/lib/python3.8/site-packages/mxnet/ndarray/ndarray.py", line 2333, in broadcast_like
    return self.broadcast_to(other.shape)
  File "/usr/local/lib/python3.8/site-packages/mxnet/ndarray/ndarray.py", line 2290, in broadcast_to
    raise ValueError(err_str)
ValueError: operands could not be broadcast together with remapped shapes[original-&gt;remapped]: (10,) and requeste
&lt;/denchmark-code&gt;

MWE-2 Incompatible shapes broadcast also prohibits sampling from mixture of multivariate distributions.
&lt;denchmark-code&gt;from gluonts.mx.distribution import MixtureDistribution
from gluonts.mx.distribution.multivariate_gaussian import *
mu1_bi = mx.nd.array([0., 0.])
mu2_bi = mx.nd.array([2., 2.])
sigma_bi = mx.nd.array([[0.01, 0.], [0., 0.01]])
mvgaussian1 = MultivariateGaussian(mu=mu1_bi, L=sigma_bi)
mvgaussian2 = MultivariateGaussian(mu=mu2_bi, L=sigma_bi)
p = mx.nd.array([0.6])
mix_prob_tensor = mx.nd.stack(p, 1.0 - p, axis=-1)
mixture = MixtureDistribution(mixture_probs=mix_prob_tensor, components=[mvgaussian1, mvgaussian2])
samples = mixture.sample() # DOESN'T WORK
samples = mixture.sample(1) # DOESN'T WORK
samples = mixture.sample(10) # DOESN'T WORK
&lt;/denchmark-code&gt;

MWE-2 Error message or code output
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3417, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-5-6d163038db74&gt;", line 1, in &lt;module&gt;
    samples = mixture.sample() # DOESN'T WORK
  File "/Users/eeehrlic/Documents/projects/capstone/gluon-ts/src/gluonts/mx/distribution/mixture.py", line 155, in sample
    idx = idx.broadcast_like(samples_list[0])
  File "/usr/local/lib/python3.8/site-packages/mxnet/ndarray/ndarray.py", line 2333, in broadcast_like
    return self.broadcast_to(other.shape)
  File "/usr/local/lib/python3.8/site-packages/mxnet/ndarray/ndarray.py", line 2285, in broadcast_to
    raise ValueError(err_str)
ValueError: operands could not be broadcast together with remapped shapes[original-&gt;remapped]: (1, 1) and requested shape (2,)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


Operating system: MacOs 10.14.6
Python version: Python 3.8.5
GluonTS version: 0.5.1.dev92+g14a1ec8
MXNet version: 1.6.0

	</description>
	<comments>
		<comment id='1' author='elenaehrlich' date='2020-09-21T08:33:48Z'>
		Hey &lt;denchmark-link:https://github.com/elenaehrlich&gt;@elenaehrlich&lt;/denchmark-link&gt;
,
I think this is not a bug, but we should maybe catch this with an assertion... The mixture_probs have to be of shape (1,2). This will work:
import mxnet as mx
from mxnet import nd
import numpy as np
gaussian = Gaussian(mu=nd.array([0.]), sigma=nd.array([1.]))
gamma = Gamma(alpha=nd.array([9.]), beta=nd.array([2.]))
mixture = MixtureDistribution(mixture_probs=nd.array([[0.9, 0.1]]), components=[gaussian, gamma])
mixture.sample(num_samples=1) # WORKS
mixture.sample(num_samples=10) # WORKS
The reason is that the one dimensional batch shape is a special case of higher dimensional batch shapes:
gaussian = Gaussian(mu=nd.array([0., 0.1]), sigma=nd.array([1., 1.1]))
gamma = Gamma(alpha=nd.array([9., 1.]), beta=nd.array([2., 3.]))
mixture = MixtureDistribution(mixture_probs=nd.array([[0.9, 0.1], [0.1, 0.9]]), components=[gaussian, gamma])
mixture.sample(num_samples=1) # WORKS
mixture.sample(num_samples=10) # WORKS
		</comment>
		<comment id='2' author='elenaehrlich' date='2020-09-21T08:59:53Z'>
		Never mind, I just saw your &lt;denchmark-link:https://github.com/awslabs/gluon-ts/pull/1042&gt;PR&lt;/denchmark-link&gt;
 regarding this and I think this can be closed.
		</comment>
	</comments>
</bug>