<bug id='535' author='rshyamsundar' open_date='2019-12-17T23:12:41Z' closed_time='2019-12-19T10:26:57Z'>
	<summary>Binned distribution gives wrong quantiles if the probability of first bin is nonzero</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

While expanding bin centers, &lt;denchmark-link:https://github.com/awslabs/gluon-ts/blob/a9cde7bf92178b4cf8010a4c8600940b595f2ae3/src/gluonts/distribution/binned.py#L154&gt;the code&lt;/denchmark-link&gt;
 incorrectly adds the probabilities of the first bin to the bin centers (&lt;denchmark-link:https://github.com/awslabs/gluon-ts/blob/a9cde7bf92178b4cf8010a4c8600940b595f2ae3/src/gluonts/distribution/binned.py#L138&gt;zeros_cdf has the probabilities of the initial bin for all batch elements/time points&lt;/denchmark-link&gt;
).
Also the &lt;denchmark-link:https://github.com/awslabs/gluon-ts/blob/a9cde7bf92178b4cf8010a4c8600940b595f2ae3/src/gluonts/distribution/binned.py#L146&gt;index&lt;/denchmark-link&gt;
 returned is always zero and hence the quantile returned is the first bin + probability of the first bin, unless the initial bin probability is zero which is always the case in &lt;denchmark-link:https://github.com/awslabs/gluon-ts/blob/a9cde7bf92178b4cf8010a4c8600940b595f2ae3/test/distribution/test_distribution_sampling.py#L84&gt;tests&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;In [1]: import mxnet as mx                                                                                                                                                                     
from
In [2]: from gluonts.distribution import Binned                                                                                                                                                

In [3]: binned = Binned(bin_probs=mx.nd.array([[0.5, 0.2, 0.15, 0.15]]), bin_centers=mx.nd.array([[1e-4, 1e-3, 1e-2, 1e-1]]))                                                                  

In [4]: binned.quantile(mx.nd.array([0.1, 0.5, 0.7, 0.9, 0.999]))                                                                                                                              
Out[4]: 

[[0.5001]
 [0.5001]
 [0.5001]
 [0.5001]
 [0.5001]]
&lt;NDArray 5x1 @cpu(0)&gt;

&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Fix&lt;/denchmark-h&gt;

Replacing  by  &lt;denchmark-link:https://github.com/awslabs/gluon-ts/blob/a9cde7bf92178b4cf8010a4c8600940b595f2ae3/src/gluonts/distribution/binned.py#L138&gt;here&lt;/denchmark-link&gt;
 seems to solve both  problems. I think  was meant to be zeros not the probabilities of the first bin.
After fix:
&lt;denchmark-code&gt;In [4]: binned.quantile(mx.nd.array([0.1, 0.5, 0.7, 0.9, 0.999]))                                                                                                                              
Out[4]: 

[[1.e-04]
 [1.e-03]
 [1.e-02]
 [1.e-01]
 [1.e-01]]
&lt;NDArray 5x1 @cpu(0)&gt;

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='rshyamsundar' date='2019-12-17T23:30:13Z'>
		&lt;denchmark-link:https://github.com/rshyamsundar&gt;@rshyamsundar&lt;/denchmark-link&gt;
 the bin centers appear not to be sorted in your example: does the distribution assume that they are?
		</comment>
		<comment id='2' author='rshyamsundar' date='2019-12-17T23:34:13Z'>
		Right, it assumes it is sorted but the result would still be wrong. Let me update the example.
		</comment>
	</comments>
</bug>