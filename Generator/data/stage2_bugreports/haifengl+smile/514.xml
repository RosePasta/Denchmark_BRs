<bug id='514' author='jhorstmann' open_date='2020-02-02T18:39:29Z' closed_time='2020-02-03T22:17:40Z'>
	<summary>Null handling when reading arrow data looks incorrect</summary>
	<description>
I was looking at the data import functionality, especially the support for apache arrow and noticed something suspicious. In &lt;denchmark-link:https://github.com/haifengl/smile/blob/master/io/src/main/java/smile/io/Arrow.java#L408&gt;smile.io.Arrow&lt;/denchmark-link&gt;
 the following pattern is used multiple times:
&lt;denchmark-code&gt;    if (fieldVector.getField().isNullable()) {
        // copies data without null checks
    } else {
        ...
        for (int i = 0; i &lt; count; i++) {
            if (vector.isNull(i))
                a[i] = null;
            else
                a[i] = ...
        }
&lt;/denchmark-code&gt;

Unless the isNullable method has a completely misleading name this looks like a bug.
This seems to have been &lt;denchmark-link:https://github.com/haifengl/smile/commit/63cc7a33fea247ed3d6fda5955a5ad767d35e0a2#diff-28f3a8cfa33ecb28f66842a2959743b9L280&gt;introduced during a refactoring that incorrectly replaced fieldVector.getNullCount() == 0 with fieldVector.getField().isNullable()&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='jhorstmann' date='2020-02-02T19:14:28Z'>
		Thanks for the report. The fix is in master branch now.
		</comment>
		<comment id='2' author='jhorstmann' date='2020-02-03T22:17:39Z'>
		Thanks, looks good to me. And that was an impressively fast time for a fix.
		</comment>
	</comments>
</bug>