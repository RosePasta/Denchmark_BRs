<bug id='370' author='beachygreg' open_date='2018-10-18T18:00:03Z' closed_time='2018-10-19T00:24:51Z'>
	<summary>Index out of bounds for ConfusionMatrix when incomplete test set labels.</summary>
	<description>
&lt;denchmark-h:h2&gt;Expected behaviour&lt;/denchmark-h&gt;

When using the ConfusionMatrix class and the labeled truth and predicted types does not include all possible labels you should still get a confusion matrix.
&lt;denchmark-h:h2&gt;Actual behaviour&lt;/denchmark-h&gt;

A array out of bounds exception is thrown.
For the code snippet you get java.lang.ArrayIndexOutOfBoundsException: 3
&lt;denchmark-h:h2&gt;Code snippet&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import smile.validation._

val pred =Array(0,2,3)
val truth =Array(0,3,3)
confusion(truth, pred)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Input data&lt;/denchmark-h&gt;

see the code snippet
&lt;denchmark-h:h2&gt;Information&lt;/denchmark-h&gt;

smile 1.5.2 in using the scala api but the bug seems to be in the java code.
	</description>
	<comments>
		<comment id='1' author='beachygreg' date='2018-10-18T19:19:57Z'>
		I implemented it in scala for fun if you want want it
&lt;denchmark-code&gt;class ConfusionMatrix(truth:Seq[Int], prediction: Seq[Int]) {

  private val labelsToIndex = (truth.toSet ++  prediction.toSet).toSeq.sorted.zipWithIndex.toMap

  private val matrixSize = labelsToIndex.toSeq.length

  private val positionsAndCounts:Map[Position, Int] = truth.zip(prediction).groupBy(tp =&gt; Position(labelsToIndex(tp._1), labelsToIndex(tp._2))).mapValues(_.length)

  private val matrix = Array.tabulate[Int](matrixSize, matrixSize)((x, y) =&gt; positionsAndCounts.getOrElse(Position(x, y), 0))

  override def toString(): String = {
    "ROW=truth and COL=predicted\n" +
    matrix.map(row =&gt; {
      row.mkString("\t")
    }).mkString("\n")
  }
}

case class Position(truth:Int, prediction:Int)

&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='beachygreg' date='2018-10-18T19:25:44Z'>
		Thanks. Is it a real case of missing category?
		</comment>
		<comment id='3' author='beachygreg' date='2018-10-18T19:40:16Z'>
		The code snippet is not the real case, but I did hit the case. We have 19 categories and it happens on some subsampling test sets that we get this exception.
		</comment>
		<comment id='4' author='beachygreg' date='2018-10-19T00:10:22Z'>
		I see. Will fix it.
		</comment>
		<comment id='5' author='beachygreg' date='2018-10-19T00:24:51Z'>
		The bug fix is in the master branch now. Note that the old implementation assume that the training data has all classes, which is reasonable.
Now since you trigger this bug, some of your sub test sets miss some class at all. The trained model (and test results) may not be trustable.
		</comment>
		<comment id='6' author='beachygreg' date='2018-10-19T18:03:22Z'>
		Cool thanks, it was only in the test set that it did not have all the labels because it was a smaller dataset.
		</comment>
	</comments>
</bug>