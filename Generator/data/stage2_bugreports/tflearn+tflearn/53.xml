<bug id='53' author='zluo-miovision' open_date='2016-04-26T22:04:17Z' closed_time='2016-04-27T02:32:22Z'>
	<summary>How to initializer the weights by using a tensor</summary>
	<description>
&lt;denchmark-code&gt;    self.Fea_In_C3 = tflearn.conv_2d(vgg.pool5, 256, 11,
                                     weights_init= tf.random_normal_initializer(stddev=0.0001),
                                     padding='valid',
                                     activation= 'relu',
                                     name='Fea_In_C3')
&lt;/denchmark-code&gt;

I want to initializer the weights by using a small deviation, and I use the code showing above, but it gives error.
File "/home/zluo/PycharmProjects/DeepActiveContour/deepnet/Model.py", line 25, in build_model
name='Fea_In_C3')
File "/usr/local/lib/python2.7/dist-packages/tflearn/layers/conv.py", line 64, in conv_2d
W_init = initializations.get(weights_init)()
TypeError: _initializer() takes at least 1 argument (0 given)
	</description>
	<comments>
		<comment id='1' author='zluo-miovision' date='2016-04-27T02:34:37Z'>
		I fixed the issue, for some reasons it wasn't accepting custom tf initializer.
You can update TFLearn and it should work fine:
&lt;denchmark-code&gt;pip uninstall tflearn
pip install git+https://github.com/tflearn/tflearn.git
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>