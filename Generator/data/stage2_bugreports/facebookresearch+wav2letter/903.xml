<bug id='903' author='yyan7223' open_date='2020-11-25T07:47:16Z' closed_time='2020-11-28T01:18:43Z'>
	<summary>Why there are no "Train" "Test" "Decode" binaries files after building wav2letter?</summary>
	<description>
&lt;denchmark-h:h3&gt;Bug Description&lt;/denchmark-h&gt;

I build wav2letter++ follow the tutorial. But there are no "Train" "Test" "Decode" binaries files inside the "build
folder after building. Please help~
####All Building output
Cloning into 'wav2letter'...
remote: Enumerating objects: 33, done.
remote: Counting objects: 100% (33/33), done.
remote: Compressing objects: 100% (29/29), done.
remote: Total 6258 (delta 4), reused 14 (delta 3), pack-reused 6225
Receiving objects: 100% (6258/6258), 5.98 MiB | 24.10 MiB/s, done.
Resolving deltas: 100% (4019/4019), done.
/content/wav2letter
/content/wav2letter/build
-- The CXX compiler identification is GNU 7.5.0
-- The C compiler identification is GNU 7.5.0
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Found OpenMP_C: -fopenmp (found version "4.5")
-- Found OpenMP_CXX: -fopenmp (found version "4.5")
-- Found OpenMP: TRUE (found version "4.5")
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE
-- Could NOT find FFTW3 (missing: FFTW3_DIR)
-- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
-- FindFFTW using pkgconfig: FOUND=1 LIBRARIES=fftw3 LIBRARY_DIRS= LIBDIR=/usr/lib/x86_64-linux-gnu LINK_LIBRARIES=/usr/lib/x86_64-linux-gnu/libfftw3.so
-- FindFTTW using pkgconfig: INCLUDE_DIRS= INCLUDEDIR=/usr/include
-- Found FFTW3: /usr/include
-- Could NOT find Ogg (missing: Ogg_DIR)
-- Found Ogg: /usr/lib/x86_64-linux-gnu/libogg.so (found version "1.3.2")
-- Could NOT find Vorbis (missing: Vorbis_DIR)
-- Could NOT find Ogg (missing: Ogg_DIR)
-- Found Vorbis: /usr/lib/x86_64-linux-gnu/libvorbis.so (found version "1.3.5")
-- Found VorbisEnc: /usr/lib/x86_64-linux-gnu/libvorbisenc.so (found version "1.3.5")
-- Could NOT find Ogg (missing: Ogg_DIR)
-- Found FLAC: /usr/lib/x86_64-linux-gnu/libFLAC.so (found version "1.3.2")
-- Could NOT find SndFile (missing: SndFile_DIR)
-- Found SndFile: /usr/include
-- Found libsndfile: (lib: /usr/lib/x86_64-linux-gnu/libsndfile.so include: /usr/include
-- The CUDA compiler identification is NVIDIA 10.1.243
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Configuring done
-- Generating done
-- Build files have been written to: /content/wav2letter/build
Scanning dependencies of target analyze_pseudo_label_dataset
Scanning dependencies of target SerializeConvLM
[ 14%] Building CXX object recipes/utilities/convlm_serializer/CMakeFiles/SerializeConvLM.dir/Utils.cpp.o
[ 28%] Building CXX object recipes/utilities/convlm_serializer/CMakeFiles/SerializeConvLM.dir/Serialize.cpp.o
[ 42%] Building CXX object recipes/self_training/pseudo_labeling/CMakeFiles/analyze_pseudo_label_dataset.dir/AnalyzeDataset.cpp.o
[ 57%] Linking CUDA device code CMakeFiles/analyze_pseudo_label_dataset.dir/cmake_device_link.o
[ 71%] Linking CXX executable analyze_pseudo_label_dataset
[ 71%] Built target analyze_pseudo_label_dataset
[ 85%] Linking CUDA device code CMakeFiles/SerializeConvLM.dir/cmake_device_link.o
[100%] Linking CXX executable SerializeConvLM
[100%] Built target SerializeConvLM
	</description>
	<comments>
		<comment id='1' author='yyan7223' date='2020-11-25T11:13:00Z'>
		&lt;denchmark-link:https://github.com/yyan7223&gt;@yyan7223&lt;/denchmark-link&gt;
: What is your  command? For example, mine looks like the following:
cmake -DCMAKE_BUILD_TYPE=Debug -DW2L_BUILD_TESTS=OFF -DW2L_INFERENCE_BUILD_TESTS=OFF -DW2L_BUILD_TOOLS=ON -DW2L_BUILD_INFERENCE=ON -DW2L_INFERENCE_BACKEND=fbgemm -G "CodeBlocks - Unix Makefiles" /home/w2luser/Projects/wav2letter
		</comment>
		<comment id='2' author='yyan7223' date='2020-11-25T11:24:48Z'>
		
@yyan7223: What is your cmake command? For example, mine looks like the following:
cmake -DCMAKE_BUILD_TYPE=Debug -DW2L_BUILD_TESTS=OFF -DW2L_INFERENCE_BUILD_TESTS=OFF -DW2L_BUILD_TOOLS=ON -DW2L_BUILD_INFERENCE=ON -DW2L_INFERENCE_BACKEND=fbgemm -G "CodeBlocks - Unix Makefiles" /home/w2luser/Projects/wav2letter

It's a pure cmakeâ€¦
Do I need to clone the specific branch of flashlight and wav2letter++? Like v0.2?
		</comment>
		<comment id='3' author='yyan7223' date='2020-11-25T11:54:19Z'>
		&lt;denchmark-link:https://github.com/yyan7223&gt;@yyan7223&lt;/denchmark-link&gt;
: The build instructions are noted &lt;denchmark-link:https://github.com/facebookresearch/wav2letter/wiki/General-building-instructions&gt;here&lt;/denchmark-link&gt;
. Broadly speaking, you would build for training or inference (or both). Similarly, you can build for CPU or CUDA backend.
Also, when in doubt, you can always try to exactly specify the build commands in the respective Dockerfiles (train/inference).
		</comment>
		<comment id='4' author='yyan7223' date='2020-11-25T22:15:21Z'>
		
@yyan7223: The build instructions are noted here. Broadly speaking, you would build for training or inference (or both). Similarly, you can build for CPU or CUDA backend.
Also, when in doubt, you can always try to exactly specify the build commands in the respective Dockerfiles (train/inference).

I copied your command, but it still builds nothing...
The output shows that the "Manually-specified variables were not used by the project:"
Here is the output:
Cloning into 'wav2letter'...
remote: Enumerating objects: 33, done.
remote: Counting objects: 100% (33/33), done.
remote: Compressing objects: 100% (29/29), done.
remote: Total 6258 (delta 4), reused 14 (delta 3), pack-reused 6225
Receiving objects: 100% (6258/6258), 5.98 MiB | 25.30 MiB/s, done.
Resolving deltas: 100% (4019/4019), done.
/content/wav2letter
/content/wav2letter/build
-- The CXX compiler identification is GNU 7.5.0
-- The C compiler identification is GNU 7.5.0
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Found OpenMP_C: -fopenmp (found version "4.5")
-- Found OpenMP_CXX: -fopenmp (found version "4.5")
-- Found OpenMP: TRUE (found version "4.5")
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE
-- Could NOT find FFTW3 (missing: FFTW3_DIR)
-- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
-- FindFFTW using pkgconfig: FOUND=1 LIBRARIES=fftw3 LIBRARY_DIRS= LIBDIR=/usr/lib/x86_64-linux-gnu LINK_LIBRARIES=/usr/lib/x86_64-linux-gnu/libfftw3.so
-- FindFTTW using pkgconfig: INCLUDE_DIRS= INCLUDEDIR=/usr/include
-- Found FFTW3: /usr/include
-- Could NOT find Ogg (missing: Ogg_DIR)
-- Found Ogg: /usr/lib/x86_64-linux-gnu/libogg.so (found version "1.3.2")
-- Could NOT find Vorbis (missing: Vorbis_DIR)
-- Could NOT find Ogg (missing: Ogg_DIR)
-- Found Vorbis: /usr/lib/x86_64-linux-gnu/libvorbis.so (found version "1.3.5")
-- Found VorbisEnc: /usr/lib/x86_64-linux-gnu/libvorbisenc.so (found version "1.3.5")
-- Could NOT find Ogg (missing: Ogg_DIR)
-- Found FLAC: /usr/lib/x86_64-linux-gnu/libFLAC.so (found version "1.3.2")
-- Could NOT find SndFile (missing: SndFile_DIR)
-- Found SndFile: /usr/include
-- Found libsndfile: (lib: /usr/lib/x86_64-linux-gnu/libsndfile.so include: /usr/include
-- The CUDA compiler identification is NVIDIA 10.1.243
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Configuring done
-- Generating done
CMake Warning:
Manually-specified variables were not used by the project:
&lt;denchmark-code&gt;W2L_BUILD_INFERENCE
W2L_BUILD_TESTS
W2L_BUILD_TOOLS
W2L_INFERENCE_BACKEND
W2L_INFERENCE_BUILD_TESTS
&lt;/denchmark-code&gt;

-- Build files have been written to: /content/wav2letter/build
Scanning dependencies of target SerializeConvLM
Scanning dependencies of target analyze_pseudo_label_dataset
[ 14%] Building CXX object recipes/utilities/convlm_serializer/CMakeFiles/SerializeConvLM.dir/Utils.cpp.o
[ 28%] Building CXX object recipes/self_training/pseudo_labeling/CMakeFiles/analyze_pseudo_label_dataset.dir/AnalyzeDataset.cpp.o
[ 42%] Building CXX object recipes/utilities/convlm_serializer/CMakeFiles/SerializeConvLM.dir/Serialize.cpp.o
[ 57%] Linking CUDA device code CMakeFiles/analyze_pseudo_label_dataset.dir/cmake_device_link.o
[ 71%] Linking CXX executable analyze_pseudo_label_dataset
[ 71%] Built target analyze_pseudo_label_dataset
[ 85%] Linking CUDA device code CMakeFiles/SerializeConvLM.dir/cmake_device_link.o
[100%] Linking CXX executable SerializeConvLM
[100%] Built target SerializeConvLM
		</comment>
		<comment id='5' author='yyan7223' date='2020-11-25T22:53:54Z'>
		&lt;denchmark-link:https://github.com/abhinavkulkarni&gt;@abhinavkulkarni&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='yyan7223' date='2020-11-28T01:18:43Z'>
		Please see the answer here &lt;denchmark-link:https://github.com/facebookresearch/wav2letter/issues/906&gt;#906&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>