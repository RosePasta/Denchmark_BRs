<bug id='982' author='xternalz' open_date='2020-10-27T21:49:12Z' closed_time='2020-12-22T21:59:29Z'>
	<summary>Conversion fails with PyTorch v1.7.0</summary>
	<description>
coremltools unified conversion API fails with traced model from PyTorch v1.7.0. It was fine with PyTorch v1.6.0.
&lt;denchmark-h:h2&gt;Trace&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test_interpolate.py", line 18, in &lt;module&gt;
    mlmodel = ct.convert(
  File ".../coremltools/converters/_converters_entry.py", line 176, in convert
    mlmodel = mil_convert(
  File ".../coremltools/converters/mil/converter.py", line 128, in mil_convert
    proto = mil_convert_to_proto(model, convert_from, convert_to,
  File ".../coremltools/converters/mil/converter.py", line 171, in mil_convert_to_proto
    prog = frontend_converter(model, **kwargs)
  File ".../coremltools/converters/mil/converter.py", line 85, in __call__
    return load(*args, **kwargs)
  File ".../coremltools/converters/mil/frontend/torch/load.py", line 85, in load
    raise e
  File ".../coremltools/converters/mil/frontend/torch/load.py", line 75, in load
    prog = converter.convert()
  File ".../coremltools/converters/mil/frontend/torch/converter.py", line 224, in convert
    convert_nodes(self.context, self.graph)
  File ".../coremltools/converters/mil/frontend/torch/ops.py", line 56, in convert_nodes
    _add_op(context, node)
  File ".../coremltools/converters/mil/frontend/torch/ops.py", line 417, in _convolution
    raise ValueError(
ValueError: unexpected number of inputs for node 11 (_convolution): 13
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;


If a python script can reproduce the error, please paste the code snippet

&lt;denchmark-code&gt;import torch.nn.functional as F
import torch.nn as nn
import torch
import coremltools as ct

class Model(nn.Module):
    def __init__(self):
        super(Model, self).__init__()
        self.conv = nn.Conv2d(3, 3, 3, 1, 1)
    
    def forward(self, x):
        return self.conv(x)

input_batch = torch.randn(1,3,10,10)
model = Model()
trace = torch.jit.trace(model, input_batch)

mlmodel = ct.convert(
    trace,
    inputs=[ct.TensorType(name="input", shape=input_batch.shape)],
)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;System environment (please complete the following information):&lt;/denchmark-h&gt;

coremltools 4.0
PyTorch v1.7.0
	</description>
	<comments>
		<comment id='1' author='xternalz' date='2020-11-21T20:56:49Z'>
		I had the same issue. I fix it by downgrading to PyTorch v1.6.0
		</comment>
		<comment id='2' author='xternalz' date='2020-11-25T13:50:34Z'>
		I had the same issue, a bit of digging revealed that the coremltools documentation states:

Currently, the latest supported version of PyTorch is 1.5.1

&lt;denchmark-link:https://coremltools.readme.io/docs/pytorch-conversion&gt;https://coremltools.readme.io/docs/pytorch-conversion&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='xternalz' date='2020-12-04T22:52:25Z'>
		I have solved it here &lt;denchmark-link:https://github.com/apple/coremltools/pull/1020&gt;#1020&lt;/denchmark-link&gt;
. Also there are couple other fix for 1.7.0.
		</comment>
		<comment id='4' author='xternalz' date='2020-12-22T21:59:29Z'>
		Hi &lt;denchmark-link:https://github.com/xternalz&gt;@xternalz&lt;/denchmark-link&gt;
, this issue should have been resolved as a result of the above mentioned PR. Please feel free to file a new issue if you believe this is not the case, or have additional concerns!
		</comment>
	</comments>
</bug>