<bug id='576' author='yurijvolkov' open_date='2020-01-11T17:54:14Z' closed_time='2020-01-11T18:51:29Z'>
	<summary>Bug in  fuse_conv_mul_add_into_batchnorm optimisation?</summary>
	<description>
&lt;denchmark-h:h2&gt;üêûDescribe the bug&lt;/denchmark-h&gt;

Note: seems like some functions were renamed in master after 3.1 release that I use. But I still provide links to master code just for clearness of explanation of problem.
Here 


coremltools/coremltools/converters/nnssa/coreml/graph_pass/op_fusions.py


         Line 723
      in
      9e3a20d






 def _fuse_batch_norm(graph): 





I have some node generator/concat_1 with next property:
&gt;&gt;&gt; graph['generator/concat_1'].inputs
['generator/add_26', 'generator/gen_4/batch_norm/FusedBatchNorm/Add', 'generator/concat_1/axis']
But at the end of this function I see that order of inputs to this node changed to:
['generator/add_26', 'generator/concat_1/axis', 'generator/gen_4/batch_norm/FusedBatchNorm/Add_batch_norm']
It happened because this node was the output of some other node that was optimised with batch norm optimisation. Here 


coremltools/coremltools/converters/nnssa/commons/basic_graph_ops.py


         Line 7
      in
      9e3a20d






 def connect_edge(g, source, dest): 





new connections are APPENDED to the end input/output lists of the instead of placing them in the old place where they were before optimisation.
It seems that the order of inputs/outputs really matters because here in ssa converter



coremltools/coremltools/converters/nnssa/coreml/ssa_converter.py


         Line 1260
      in
      9e3a20d






 axis = input_nodes[-1].value.val if node.op == 'ConcatV2' else input_nodes[0].value.val 





last item in input nodes is removed.So in my case it incorrectly removes generator/gen_4/batch_norm/FusedBatchNorm/Add_batch_norm from the list instead of generator/concat_1/axis. I get some shitty error later.
I am not 100% sure that this is really bug, but really seems like.
&lt;denchmark-h:h2&gt;System environment (please complete the following information):&lt;/denchmark-h&gt;


coremltools version  (e.g., 3.0b5): 3.1
OS (e.g., MacOS, Linux): ubuntu Ubuntu 18.04.3 LTS
How you install python (anaconda, virtualenv, system): anaconda
python version (e.g. 3.7): 3.6

	</description>
	<comments>
		<comment id='1' author='yurijvolkov' date='2020-01-11T18:34:53Z'>
		&lt;denchmark-link:https://github.com/yurijvolkov&gt;@yurijvolkov&lt;/denchmark-link&gt;
 Right, we encountered this bug as well. I was hoping that the fix for it is already in the master. Could you please try building coremltools from the source and re-convert the model to see if it resolves your issue?
		</comment>
		<comment id='2' author='yurijvolkov' date='2020-01-11T18:51:29Z'>
		&lt;denchmark-link:https://github.com/DawerG&gt;@DawerG&lt;/denchmark-link&gt;

It works, thx
Could you please point me to PR where it was fixed?
		</comment>
	</comments>
</bug>