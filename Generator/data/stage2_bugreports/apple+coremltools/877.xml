<bug id='877' author='apivovarov' open_date='2020-08-26T02:46:56Z' closed_time='2020-08-30T01:58:04Z'>
	<summary>Can not use -1 for batch in shape</summary>
	<description>
&lt;denchmark-h:h2&gt;üêûDescribe the bug&lt;/denchmark-h&gt;

When I used version 4.0b2 I was able to use -1 for batch in shape.
Now with version 4.0b3 it shows me error - Dimension cannot be None of -1. Use ct.RangeDim for runtime determined dimension. Dim 0: -1 See https://coremltools.readme.io/docs/flexible-inputs
&lt;denchmark-h:h2&gt;Trace&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import coremltools as ct
shape = ct.Shape(shape=(-1,224,224,3), default=(1,224,224,3))

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.6/dist-packages/coremltools/converters/mil/input_types.py", line 300, in __init__
    raise ValueError(msg.format(idx, s))
ValueError: Dimension cannot be None of -1. Use ct.RangeDim for runtime determined dimension. Dim 0: -1 See https://coremltools.readme.io/docs/flexible-inputs
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;


If a python script can reproduce the error, please paste the code snippet

&lt;denchmark-code&gt;import coremltools as ct
shape = ct.Shape(shape=(-1,224,224,3), default=(1,224,224,3))
&lt;/denchmark-code&gt;


If applicable, please attach the source model

If the model cannot be shared publicly, please attach it via filing a bug report at https://developer.apple.com/bug-reporting/  and provide the reference number here


If it is a model conversion issue and the conversion succeeds, however, if there is a numerical mismatch between the original and the coreml model, please paste script used for comparison.

&lt;denchmark-h:h2&gt;System environment (please complete the following information):&lt;/denchmark-h&gt;


coremltools version  (e.g., 3.0b5):4.0b3
OS (e.g., MacOS, Linux): Linux
macOS version (if applicable):
XCode version (if applicable):
How you install python (anaconda, virtualenv, system): pip install
python version (e.g. 3.7): 3.7
any other relevant information: Tensorflow 2.2.0

e.g. keras version if using keras conversion etc.



&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='apivovarov' date='2020-08-26T19:41:33Z'>
		Have you tried something like ct.Shape(shape=(ct.RangeDim(1, 32),224,224,3))  ?
Per examples in &lt;denchmark-link:https://coremltools.readme.io/docs/flexible-inputs&gt;https://coremltools.readme.io/docs/flexible-inputs&lt;/denchmark-link&gt;

In any case, the documentation might need an update if '-'1 is retired in favor of RangeDim()
		</comment>
		<comment id='2' author='apivovarov' date='2020-08-26T19:47:02Z'>
		Yes, RangeDim works. But I need the batch to be -1 (any batch size). And it worked in 4.0b2.
		</comment>
		<comment id='3' author='apivovarov' date='2020-08-27T01:23:03Z'>
		Looks like  or  are not allowed. Related PR &lt;denchmark-link:https://github.com/apple/coremltools/pull/858&gt;#858&lt;/denchmark-link&gt;

Docs should be updated: &lt;denchmark-link:https://coremltools.readme.io/docs/flexible-inputs&gt;https://coremltools.readme.io/docs/flexible-inputs&lt;/denchmark-link&gt;

It still says
&lt;denchmark-code&gt;A -1 denoted in shape acts like None in Tensorflow's placeholder. It allows arbitrary size of input in that dimension.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='apivovarov' date='2020-08-28T22:06:49Z'>
		related &lt;denchmark-link:https://github.com/apple/coremltools/issues/886&gt;#886&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='apivovarov' date='2020-08-28T23:15:43Z'>
		&lt;denchmark-link:https://github.com/apivovarov&gt;@apivovarov&lt;/denchmark-link&gt;
 The API for the coremltools 4.0b3 is changed,
now you need to use  instead if .
Please reopen the issue if it doesn't fix your problem.
		</comment>
		<comment id='6' author='apivovarov' date='2020-08-29T04:34:14Z'>
		Nice! The doc has been updated for the new API:
&lt;denchmark-link:https://coremltools.readme.io/docs/flexible-inputs&gt;https://coremltools.readme.io/docs/flexible-inputs&lt;/denchmark-link&gt;
.
Let us know if you get further question.
		</comment>
		<comment id='7' author='apivovarov' date='2020-08-29T04:48:46Z'>
		Thank you for looking into it.
I still see a couple places in the documentation which might be misleading
Case 1
&lt;denchmark-code&gt;It's a natural choice of using -1 for all flexible shaped dimension. However, it is recommended to use EnumeratedShapes for best performance
&lt;/denchmark-code&gt;

Not it is not a recommendation any more. -1 is not allowed.
Case 2
&lt;denchmark-code&gt;shape = ct.Shape(shape=(1, -1, 1024), default=(1, 50, 1024))
&lt;/denchmark-code&gt;

It is going to fail
		</comment>
		<comment id='8' author='apivovarov' date='2020-08-30T01:58:04Z'>
		&lt;denchmark-link:https://github.com/apivovarov&gt;@apivovarov&lt;/denchmark-link&gt;
 I did a pass on the docs for this page. Hopefully it's more accurate now. Thanks for the feedback!
		</comment>
	</comments>
</bug>