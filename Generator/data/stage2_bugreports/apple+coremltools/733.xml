<bug id='733' author='emirkin' open_date='2020-06-24T00:39:36Z' closed_time='2020-06-24T16:20:52Z'>
	<summary>Error in save_model (h5-&amp;gt;mlmodel): 'MLModel' object has no attribute 'description'</summary>
	<description>
Environment:
python 3.7.6
coremltools 3.4
tfcoreml 1.1
Error:
&lt;denchmark-code&gt;    coremltools.utils.save_spec(coreml_model, model_path)
  File "/opt/anaconda3/lib/python3.7/site-packages/coremltools/models/utils.py", line 65, in save_spec
    spec.description.metadata.userDefined['coremltoolsVersion'] = __version__
AttributeError: 'MLModel' object has no attribute 'description'
&lt;/denchmark-code&gt;

Code:
&lt;denchmark-code&gt;import os
import sys
from tensorflow import keras
import coremltools

def relu6(x):
    return keras.backend.relu(x, max_value=6)

if __name__=="__main__":
    m_file = sys.argv[1] # XXXXXXX.h5
    model_path = sys.argv[2] # XXXXXXX.mlmodel

    with keras.utils.CustomObjectScope({'relu6' : relu6}):
        coreml_model = coremltools.converters.tensorflow.convert(m_file)
        coremltools.utils.save_spec(coreml_model, model_path)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='emirkin' date='2020-06-24T01:40:43Z'>
		coreml_model is of type MLModel, whereas the function save_spec expects an object of type Spec.
Please try either coreml_model.save(coreml_model, model_path) or
&lt;denchmark-code&gt;spec = coreml_model.get_spec()
coremltools.utils.save_spec(spec, model_path)
&lt;/denchmark-code&gt;

Also, please try  to convert  models, which is now the updated API for conversion, with the &lt;denchmark-link:https://coremltools.readme.io/docs&gt;latest version of coremltools&lt;/denchmark-link&gt;
, which is 4.0b1.
		</comment>
		<comment id='2' author='emirkin' date='2020-06-24T02:11:09Z'>
		Thanks!
Installed 4.0b1 and ran:
&lt;denchmark-code&gt;    with keras.utils.CustomObjectScope({'relu6' : relu6}):
        coreml_model = coremltools.convert(m_file, source='tensorflow')
        spec = coreml_model.get_spec()
        coremltools.utils.save_spec(spec, model_path)
&lt;/denchmark-code&gt;

gives this error
&lt;denchmark-code&gt;    coreml_model = coremltools.convert(m_file, source='tensorflow')
  File "/opt/anaconda3/lib/python3.7/site-packages/coremltools/converters/_converters_entry.py", line 258, in convert
    **kwargs
  File "/opt/anaconda3/lib/python3.7/site-packages/coremltools/converters/mil/converter.py", line 120, in _convert
    prog = frontend_converter(model, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/coremltools/converters/mil/converter.py", line 52, in __call__
    return tf2_loader.load()
  File "/opt/anaconda3/lib/python3.7/site-packages/coremltools/converters/mil/frontend/tensorflow/load.py", line 58, in load
    self._graph_def = self._graph_def_from_model(outputs)
  File "/opt/anaconda3/lib/python3.7/site-packages/coremltools/converters/mil/frontend/tensorflow2/load.py", line 99, in _graph_def_from_model
    cfs = self._concrete_fn_from_tf_keras_or_h5(self.model)
  File "/opt/anaconda3/lib/python3.7/site-packages/coremltools/converters/mil/frontend/tensorflow2/load.py", line 293, in _concrete_fn_from_tf_keras_or_h5
    keras_model = _tf.keras.models.load_model(keras_model)
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/save.py", line 184, in load_model
    return hdf5_format.load_model_from_hdf5(filepath, custom_objects, compile)
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 194, in load_model_from_hdf5
    training_config, custom_objects))
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/saving_utils.py", line 215, in compile_args_from_training_config
    loss = _deserialize_nested_config(losses.deserialize, loss_config)
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/saving_utils.py", line 259, in _deserialize_nested_config
    for k, v in config.items()
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/saving_utils.py", line 259, in &lt;dictcomp&gt;
    for k, v in config.items()
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/saving_utils.py", line 255, in _deserialize_nested_config
    return deserialize_fn(config)
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/losses.py", line 1835, in deserialize
    printable_module_name='loss function')
  File "/opt/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 392, in deserialize_keras_object
    raise ValueError('Unknown ' + printable_module_name + ':' + object_name)
ValueError: Unknown loss function:combined_loss
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='emirkin' date='2020-06-24T02:12:47Z'>
		Is there the right way to suppress it without having to add compile=False in /coremltools/converters/mil/converter.py ?
		</comment>
		<comment id='4' author='emirkin' date='2020-06-24T16:20:48Z'>
		Problem solved:
&lt;denchmark-code&gt;    dependencies = {'relu6' : relu6}
    &gt;&gt;&gt;model = keras.models.load_model(m_file, dependencies, compile=False) &lt;&lt;&lt;

    with keras.utils.CustomObjectScope(dependencies):
        coreml_model = coremltools.convert(&gt;&gt;&gt;model&lt;&lt;&lt;, source='tensorflow')
        spec = coreml_model.get_spec()
        coremltools.utils.save_spec(spec, model_path)

&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>