<bug id='846' author='Utku-Savas' open_date='2020-08-07T14:35:30Z' closed_time='2020-08-08T03:51:39Z'>
	<summary>ValueError: Keras layer '&amp;lt;class 'tensorflow.python.keras.engine.input_layer.InputLayer'&amp;gt;' not supported.</summary>
	<description>
&lt;denchmark-h:h2&gt;üêûDescribe the bug&lt;/denchmark-h&gt;


I have successfully converted a coco pretrained yolov4-tiny model to .h5. Then using the h5 model, I tried to convert it coreml, but it gave error.

&lt;denchmark-h:h2&gt;Trace&lt;/denchmark-h&gt;


ValueError                                Traceback (most recent call last)
 in 
3                                                     image_input_names = 'image',
4                                                     image_scale=1/255.,
----&gt; 5                                                     input_name_shape_dict={'image': [None, 416, 416, 3]}
6                                                     )
~/venv/v4/lib/python3.6/site-packages/coremltools/converters/keras/_keras_converter.py in convert(model, input_names, output_names, image_input_names, input_name_shape_dict, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, model_precision, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, input_shapes, output_shapes, respect_trainable, use_float_arraytype)
828         output_shapes=output_shapes,
829         respect_trainable=respect_trainable,
--&gt; 830         use_float_arraytype=use_float_arraytype,
831     )
832
~/venv/v4/lib/python3.6/site-packages/coremltools/converters/keras/_keras_converter.py in _convert_to_spec(model, input_names, output_names, image_input_names, input_name_shape_dict, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, model_precision, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_objects, input_shapes, output_shapes, respect_trainable, use_float_arraytype)
605             output_shapes=output_shapes,
606             respect_trainable=respect_trainable,
--&gt; 607             use_float_arraytype=use_float_arraytype,
608         )
609     else:
~/venv/v4/lib/python3.6/site-packages/coremltools/converters/keras/_keras2_converter.py in _convert(model, input_names, output_names, image_input_names, input_name_shape_dict, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_objects, input_shapes, output_shapes, respect_trainable, use_float_arraytype)
356
357     # Check valid versions
--&gt; 358     _check_unsupported_layers(model, add_custom_layers)
359
360     # Build network graph to represent Keras model
~/venv/v4/lib/python3.6/site-packages/coremltools/converters/keras/_keras2_converter.py in _check_unsupported_layers(model, add_custom_layers)
123         else:
124             if type(layer) not in _KERAS_LAYER_REGISTRY:
--&gt; 125                 raise ValueError("Keras layer '%s' not supported. " % str(type(layer)))
126             if isinstance(layer, _keras.layers.wrappers.TimeDistributed):
127                 if type(layer.layer) not in _KERAS_LAYER_REGISTRY:
ValueError: Keras layer '&lt;class 'tensorflow.python.keras.engine.input_layer.InputLayer'&gt;' not supported.

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;from tensorflow.keras.models import load_model  
import tensorflow.keras.backend as K
import coremltools

model = load_model("venv/v4/yolov44-tiny.h5")

coreml_model_float32 = coremltools.converters.keras.convert(model,
                                                    input_names = 'image',
                                                    image_input_names = 'image',
                                                    image_scale=1/255.,
                                                    input_name_shape_dict={'image': [None, 416, 416, 3]}
                                                    )
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;System environment (please complete the following information):&lt;/denchmark-h&gt;


coremltools version  (4.0b2):
OS (Linux):
How you install python (virtualenv):
python version (3.6.10):
any other relevant information:
tf.keras.version = 2.3.0
tf.__version = 2.2.0

	</description>
	<comments>
		<comment id='1' author='Utku-Savas' date='2020-08-07T19:32:47Z'>
		Hi &lt;denchmark-link:https://github.com/Utku-Savas&gt;@Utku-Savas&lt;/denchmark-link&gt;
, I see you have installed TF 2.x+, do you mind switching to  instead of Keras? Try out this:
&lt;denchmark-code&gt;coreml_model_float32 = coremltools.convert(model, ...)
&lt;/denchmark-code&gt;

And what's the original source of the model? (is it from tf.keras or Keras?)
		</comment>
		<comment id='2' author='Utku-Savas' date='2020-08-08T03:51:31Z'>
		Original source of the model is tf.keras.  I tried coreml_model_float32 = coremltools.convert(model, ...)  and didn't give any error  during conversion. Thank you for reply. I will close the issue.
		</comment>
		<comment id='3' author='Utku-Savas' date='2020-11-18T12:03:35Z'>
		Hello,
I'm fetching the same issue here is my convert script :
&lt;denchmark-code&gt;from tensorflow import keras
import coremltools as ct

keras_model = keras.models.load_model('detection_2.h5')

model = ct.converters.keras.convert(
    keras_model, input_names = 'image', 
    image_input_names = 'image',
    image_scale=1/255.,
    input_name_shape_dict={'image': [None, 416, 416, 3]})

    model.save("test7.mlmodel")
&lt;/denchmark-code&gt;

Error : raise ValueError("Keras layer '%s' not supported. " % str(type(layer)))
ValueError: Keras layer '&lt;class 'tensorflow.python.keras.engine.input_layer.InputLayer'&gt;' not supported.
System environment
coremltools version 4.0
OS : MacOS
python version (3.8.0)
		</comment>
	</comments>
</bug>