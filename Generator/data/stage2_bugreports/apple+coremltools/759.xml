<bug id='759' author='leovinus2001' open_date='2020-07-07T19:04:41Z' closed_time='2020-07-09T18:48:16Z'>
	<summary>Conversion of PyTorch to .mlmodel fails on functional F.max_pool2d where stride is NOT explicitly specified.</summary>
	<description>
Maybe I missed something but I have an issue with the PyTorch Functional F.max_pool2d() when the stride is NOT explicit specified, and then convert to .mlmodel.
In the attached testcase, the model conversion from PyTorch to .mlmodel fails on that operation.
There are workarounds (Pooling layer is fine) but the functional pool fails, see test case.
Python 3.7.6
macOS Catalina latest
Torch version : 1.5.0
Testcase
&lt;denchmark-link:https://github.com/apple/coremltools/files/4886685/testPool.txt&gt;testPool.txt&lt;/denchmark-link&gt;

CoreML tools version : 4.0b1
Log:
&lt;denchmark-code&gt;Converting Frontend ==&gt; MIL Ops:  83%
Traceback (most recent call last):
  File "testPool.py", line 93, in &lt;module&gt;
    inputs=[ ct.TensorType(name="input1", shape=dummy_input.shape) ],
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/_converters_entry.py", line 299, in convert
    **kwargs
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/converter.py", line 120, in _convert
    prog = frontend_converter(model, **kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/converter.py", line 62, in __call__
    return load(*args, **kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/frontend/torch/load.py", line 86, in load
    raise e
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/frontend/torch/load.py", line 76, in load
    prog = converter.convert()
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/frontend/torch/converter.py", line 302, in convert
    convert_nodes(self.context, self.graph)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/frontend/torch/ops.py", line 55, in convert_nodes
    _add_op(context, node)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/frontend/torch/ops.py", line 520, in max_pool2d
    name=node.name,
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/mil/ops/registry.py", line 62, in add_op
    return cls._add_op(op_cls, **kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/mil/builder.py", line 188, in _add_op
    new_op = op_cls(**kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/mil/ops/defs/pool.py", line 180, in __init__
    super(max_pool, self).__init__(**kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/mil/ops/defs/pool.py", line 25, in __init__
    super(Pooling, self).__init__(**kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/mil/operation.py", line 151, in __init__
    self._validate_and_set_inputs(**kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/mil/operation.py", line 368, in _validate_and_set_inputs
    parsed_inputs = self.input_spec.parse_inputs(kwargs)
  File "~/Library/Python/3.7/lib/python/site-packages/coremltools/converters/mil/mil/input_type.py", line 67, in parse_inputs
    raise TypeError(msg)
TypeError: Input strides has type &lt;class 'coremltools.converters.mil.mil.types.type_tensor.tensor.&lt;locals&gt;.tensor'&gt; not compatible with expected type IntTensorInputType 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='leovinus2001' date='2020-07-08T20:19:37Z'>
		&lt;denchmark-link:https://github.com/leovinus2001&gt;@leovinus2001&lt;/denchmark-link&gt;
 This PR &lt;denchmark-link:https://github.com/apple/coremltools/pull/769&gt;#769&lt;/denchmark-link&gt;
 fixes the reported issue. Thanks for raising it.
		</comment>
		<comment id='2' author='leovinus2001' date='2020-07-09T14:08:02Z'>
		Welcome. FYI, I tested your changes from &lt;denchmark-link:https://github.com/apple/coremltools/pull/769&gt;#769&lt;/denchmark-link&gt;
 in
coremltools/converters/mil/frontend/torch/ops.py
and
coremltools/converters/mil/mil/ops/defs/tensor_operation.py
and it solves the issue and test case.
Both conversion from PyTorch to CoreML and correct inference in CoreML i.e. seems good to me.
Thanks.
		</comment>
		<comment id='3' author='leovinus2001' date='2020-07-09T18:48:16Z'>
		Thanks for verifying. Closing it.
		</comment>
	</comments>
</bug>