<bug id='577' author='mortendahl' open_date='2019-06-18T13:02:19Z' closed_time='2019-07-25T11:23:17Z'>
	<summary>Wrong results on Windows</summary>
	<description>
The following script produces correct results on macOS+Linux but fails on Windows:
import tensorflow as tf
import tf_encrypted as tfe

x = tfe.define_private_variable(tf.constant([1,2,3,4], shape=[2,2]))
y = tfe.matmul(x, x)
z = y.reveal()

sess = tfe.Session()
sess.run(tf.global_variables_initializer())
sess.run(z)
On macOS the output is
&lt;denchmark-code&gt;array([[ 7., 10.],
       [15., 22.]])
&lt;/denchmark-code&gt;

while on Windows it is:
&lt;denchmark-code&gt;array([[-2.48975022e+14, -2.48975022e+14],
       [-2.48975022e+14, -2.48975022e+14]])
&lt;/denchmark-code&gt;

I've tried both with and without secure random on macOS, both give correct results.
	</description>
	<comments>
		<comment id='1' author='mortendahl' date='2019-06-18T14:01:22Z'>
		Even simpler things fail as well:
import tensorflow as tf
import tf_encrypted as tfe

x = tfe.define_private_variable(tf.constant([1,2,3,4], shape=[2,2]))
y = x * 1
z = y.reveal()

sess = tfe.Session()
sess.run(tf.global_variables_initializer())
sess.run(z)
The culprit seems to be truncation: removing z = prot.truncate(z) ... in _mul_private_public fixes the above snippet.
		</comment>
		<comment id='2' author='mortendahl' date='2019-07-08T15:46:54Z'>
		&lt;denchmark-link:https://github.com/mortendahl&gt;@mortendahl&lt;/denchmark-link&gt;
 is going to investigate this bug and decide on windows support based on how difficult it is to resolve this bug.
		</comment>
		<comment id='3' author='mortendahl' date='2019-07-18T16:29:15Z'>
		&lt;denchmark-link:https://stackoverflow.com/questions/36278590/numpy-array-dtype-is-coming-as-int32-by-default-in-a-windows-10-64-bit-machine&gt;Different int size&lt;/denchmark-link&gt;
 messing with &lt;denchmark-link:https://github.com/tf-encrypted/tf-encrypted/blob/master/tf_encrypted/protocol/pond/pond.py#L725&gt;_encode&lt;/denchmark-link&gt;
 is best guess at a culprit at this point:
np.array([617673396283947]).astype(int)
returns 617673396283947 on macOS but 1264544299 = 617673396283947 % 2**32 on Windows.
Will patch this and see if it's enough to solve the problem.
		</comment>
		<comment id='4' author='mortendahl' date='2019-07-25T11:23:16Z'>
		Issue resolved on main branches of TFE and PySyft.
		</comment>
	</comments>
</bug>