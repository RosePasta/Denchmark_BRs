<bug id='742' author='palver7' open_date='2020-05-30T02:01:27Z' closed_time='2020-07-20T16:09:18Z'>
	<summary>got internal server error when trying to invoke sagemaker endpoint</summary>
	<description>

I am following the tutorial described in &lt;denchmark-link:https://docs.bentoml.org/en/latest/deployment/aws_sagemaker.html&gt;https://docs.bentoml.org/en/latest/deployment/aws_sagemaker.html&lt;/denchmark-link&gt;
. I got the expected results until I get to this part
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83316687-6e039280-a251-11ea-835f-d0c459f250f8.png&gt;&lt;/denchmark-link&gt;

Instead of the output with the red characters, I got this message :
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83316763-10237a80-a252-11ea-9409-6ae6d666d6dc.png&gt;&lt;/denchmark-link&gt;

I did as the message said and checked the associated CloudWatch log and this are the error messages
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83316799-5082f880-a252-11ea-8b3d-a45b331273ba.png&gt;&lt;/denchmark-link&gt;

To Reproduce
Steps to reproduce the behavior:

follow the tutorial described in  https://docs.bentoml.org/en/latest/deployment/aws_sagemaker.html . (The only thing different is the region, I set it to ap-southeast-1)

Expected behavior
the output should be like the first screenshot above.
Environment:

OS: [Linux Mint 19.3 Tricia Cinnamon]
Python/BentoML Version [e.g. Python 3.7.4, BentoML 0.7.8]

Additional context
What I tried  to solve this error:
The first message about unpickling svm created with scikit-learn 0.21.3 with scikit-learn 0.23.1 may causes errors made me upgrade my local scikit-learn package from 0.21.3 to 0.23.1 but it did nothing. I assume that the scikit-learn package referred here is the scikit-learn inside the docker image for aws sagemaker ?
	</description>
	<comments>
		<comment id='1' author='palver7' date='2020-06-01T10:55:57Z'>
		&lt;denchmark-link:https://github.com/yubozhao&gt;@yubozhao&lt;/denchmark-link&gt;
 update: I tried another tutorial, this time the tensorflow Fashion-MNIST classifier (&lt;denchmark-link:https://github.com/bentoml/gallery/blob/master/tensorflow/fashion-mnist/tensorflow_2_fashion_mnist.ipynb&gt;https://github.com/bentoml/gallery/blob/master/tensorflow/fashion-mnist/tensorflow_2_fashion_mnist.ipynb&lt;/denchmark-link&gt;
) and tried the to deploy the bentoML service to AWS sagemaker. I ran the tutorial with JupyterLab on my computer.  When I get to the invoke endpoint step, a similar error occurred :
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83401771-c55f5980-a42f-11ea-8172-c863ca0d3a22.png&gt;&lt;/denchmark-link&gt;

and the CloudWatch logs show these error messages :
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83402263-9695b300-a430-11ea-9a01-6f1bb4acbe86.png&gt;&lt;/denchmark-link&gt;

It seems that the bug is not specific to iris classifier tutorial then.
		</comment>
		<comment id='2' author='palver7' date='2020-06-01T20:23:44Z'>
		Hi &lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;

It looks like this is an issue of decoding  for the webserver. I was unable to reproduce it with the fashion mnist example notebook with the latest master branch with the latest commit of &lt;denchmark-link:https://github.com/bentoml/BentoML/commit/5d23859bb34f7e1942db31435273f9255929efc0&gt;5d23859&lt;/denchmark-link&gt;
 and with the latest release version 


Can you make sure the request is properly encoded with utf-8?


Can you share the bentoml.yml file that is generated in your BentoService archive?  It should be located in the BentoML repository directory(~/bentoml/repository/BENTO_SERVICE_NAME/VERSION).


Can you build and run a docker container and then try to make a request to see if it works properly? It is in the Build realtime prediction service in docker with BentoService section of the fashion mnist notebook.

To make a curl request:
echo '{\"instances\":[{\"b64\":\"'$(base64 test.png)'\"}]}' &gt; test.json
curl -X POST "http://127.0.0.1:5000/predict" -H "Content-Type: application/json" --data-binary @test.json




		</comment>
		<comment id='3' author='palver7' date='2020-06-02T04:23:10Z'>
		&lt;denchmark-link:https://github.com/yubozhao&gt;@yubozhao&lt;/denchmark-link&gt;
  Here is the bentoml.yml file
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83476487-1700f600-a4bb-11ea-8453-42f756123bf5.png&gt;&lt;/denchmark-link&gt;

Regarding point 1, how to check the encoding of the request ?
About point 3. I ran the docker and ran the curl request but I get a 400 bad request error
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83479587-3734b300-a4c3-11ea-8a78-a90805b6b003.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='palver7' date='2020-06-02T04:29:10Z'>
		&lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
 for bullet point 1.  Can you try either  and/or  in your terminal and see what is the result is?
For my MacOS, the value is . Yours should be something similar.
		</comment>
		<comment id='5' author='palver7' date='2020-06-02T05:09:20Z'>
		&lt;denchmark-link:https://github.com/yubozhao&gt;@yubozhao&lt;/denchmark-link&gt;
  typing echo $LC_CTYPE prints empty line but typing echo $LANG prints en_US.UTF-8
		</comment>
		<comment id='6' author='palver7' date='2020-06-02T06:17:12Z'>
		Hi &lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
 could you share what's the output of  after the  line?
Could you also try sending the prediction request from the docker container running the API server? You will need to first get the ID of the docker container running the BentoML model server, it can be found in the docker ps list after running the container. You can access the running container with the follow command:
docker exec -it 3afe2f815c3b bash
And then within the container, try sending the request to localhost:
apt-get update
apt-get install curl
echo "..." &gt; test.json
curl ...
		</comment>
		<comment id='7' author='palver7' date='2020-06-02T07:50:54Z'>
		&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;
 the output of file -i test.json: test.json:
text/plain; charset=us-ascii
sending the request to localhost inside the container still give the same error message as before :
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/83494415-6f96ba00-a4e0-11ea-90b8-8c7c9be6362a.png&gt;&lt;/denchmark-link&gt;

However, if I edit the test.json file inside the container so that the double quotes inside the braces are not preceded by backslashes then the prediction 'ankleboot' is printed out.
		</comment>
		<comment id='8' author='palver7' date='2020-06-24T04:30:41Z'>
		Hi &lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
, sorry for the delayed reply on this one,  could you add  option to your curl command so we can see the full request header? thanks!
		</comment>
		<comment id='9' author='palver7' date='2020-06-24T16:17:13Z'>
		
Hi @palver7, sorry for the delayed reply on this one, could you add -v option to your curl command so we can see the full request header? thanks!

&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;
, here is the output with the test.json created as directed
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/85592892-c1aaa580-b670-11ea-98cf-48c5c34e8c57.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='palver7' date='2020-06-24T16:31:12Z'>
		&lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
 did you specify content-type header in this CURL command? could you include the curl command used in the screenshot?
		</comment>
		<comment id='11' author='palver7' date='2020-06-24T16:35:25Z'>
		&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;
 here is the command that produces the output:
curl -X POST "&lt;denchmark-link:http://127.0.0.1:5000/predict&gt;http://127.0.0.1:5000/predict&lt;/denchmark-link&gt;
" -H "Content-Type: application/json" --data-binary @test.json -v
		</comment>
		<comment id='12' author='palver7' date='2020-06-24T16:41:40Z'>
		&lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
  I see, I think it should not be  in this case, can you try changing it from  to  instead?
		</comment>
		<comment id='13' author='palver7' date='2020-06-24T16:48:26Z'>
		&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;
 with this command : curl -X POST "&lt;denchmark-link:http://127.0.0.1:5000/predict&gt;http://127.0.0.1:5000/predict&lt;/denchmark-link&gt;
" -H "Content-Type: application/json" -d @test.json -v
the error message is still the same, ending with
The browser (or proxy) sent a request that this server could not understand.

* Closing connection 0
      
		</comment>
		<comment id='14' author='palver7' date='2020-06-26T13:20:25Z'>
		&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;
 I have four  cases in trying to deploy prediction on my local machine:

if I change the content of test.json file from
{"instances":[{"b64":"..."}]}
to
{"instances":[{"b64":"..."}]}
and run the the curl as above then I get "Ankle boot" with no error messages.

2. if I changed the test.json file as above but implementing my custom tensorflow handler class in the service bundle file as per your suggestion I got the error.
&lt;denchmark-link:https://user-images.githubusercontent.com/42964197/85861580-cb581880-b7ea-11ea-8f94-05fac4141553.png&gt;&lt;/denchmark-link&gt;

As you can see, I got the 500 internal server error message instead of bad request.


If I do as 2. but creating the custom tensor handler class by copy pasting the content of the tensorflow tensor handler.py into the service bundle python file then I get the prediction "Ankle boot".


Finally, whether I created the custom tensor handler class or not, if I left the content of the test.json file as generated by the notebook tutorial :
{"instances":[{"b64":"..."}]}
I would get the bad request and the proxy sent a request that the server could not understand like the previous post.


Edit: The error in &lt;denchmark-link:https://github.com/bentoml/BentoML/pull/2&gt;#2&lt;/denchmark-link&gt;
 is not because of your suggestion but because I was incomplete in defining my custom tensor handler class.  I need to  import several functions needed in the custom handle_request method.
		</comment>
		<comment id='15' author='palver7' date='2020-07-12T03:07:22Z'>
		Hey &lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
 - are you still experiencing this issue with the latest release of BentoML?  It might be helpful for us to do a quick call and have you show me how you reproduce the issue and we can do an interactive debug session.  Feel free to ping me in the BentoML community slack channel if you'd like to do that.
		</comment>
		<comment id='16' author='palver7' date='2020-07-14T12:25:16Z'>
		
Hey @palver7 - are you still experiencing this issue with the latest release of BentoML? It might be helpful for us to do a quick call and have you show me how you reproduce the issue and we can do an interactive debug session. Feel free to ping me in the BentoML community slack channel if you'd like to do that.

&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;
  What time are you available for the interactive debug session ?
		</comment>
		<comment id='17' author='palver7' date='2020-07-14T16:53:41Z'>
		&lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
 could you email me or DM me in BentoML slack?
		</comment>
		<comment id='18' author='palver7' date='2020-07-20T16:09:18Z'>
		Discussed with &lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;
 - turns out this is an issue with our gallery notebook:
&lt;denchmark-link:https://github.com/bentoml/gallery/blob/master/tensorflow/fashion-mnist/tensorflow_2_fashion_mnist.ipynb&gt;https://github.com/bentoml/gallery/blob/master/tensorflow/fashion-mnist/tensorflow_2_fashion_mnist.ipynb&lt;/denchmark-link&gt;

Closing this issue for now since the descriptions and discussions here are no longer relevant to this issue. We will investigate the issue with the tensorflow_2_fashion_mnist notebook and open a new issue if necessary.
Thanks &lt;denchmark-link:https://github.com/palver7&gt;@palver7&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>