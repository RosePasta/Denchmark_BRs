<bug id='372' author='Rexhaif' open_date='2019-11-11T14:09:06Z' closed_time='2019-11-14T00:18:10Z'>
	<summary>Docker container deployment: No module named 'gunicorn.six'</summary>
	<description>
Describe the bug
I've previously operated bentoml service without any problems until today. I've made several changes at my service's code and repackaged it into bentoml service. Then i've builded container and runned it, but got error(see in Logs section).
To Reproduce
Steps to reproduce the behavior:

Clone the repo https://github.com/tchewik/unsupervised_openie
go to unsupervised_openie/qa_service/QAService/20191111132908_E71721
docker build -t qa_service .
docker run -ti qa_service
See the error

Expected behavior
Container should start without errors and report to logs about booting the workers.
Screenshots/Logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/opt/conda/bin/bentoml", line 8, in &lt;module&gt;
    sys.exit(cli())
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 764, in __call__
    return self.main(*args, **kwargs)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 717, in main
    rv = self.invoke(ctx)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 1137, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 956, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 555, in invoke
    return callback(*args, **kwargs)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/cli/__init__.py", line 276, in serve_gunicorn
    from bentoml.server.gunicorn_server import GunicornBentoServer
  File "/opt/conda/lib/python3.6/site-packages/bentoml/server/gunicorn_server.py", line 21, in &lt;module&gt;
    from gunicorn.six import iteritems
ModuleNotFoundError: No module named 'gunicorn.six'
&lt;/denchmark-code&gt;

Environment:
OS:
&lt;denchmark-code&gt;uname -a
Linux rexhaif-ml 5.2.15-200.fc30.x86_64 #1 SMP Mon Sep 16 15:17:36 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
&lt;/denchmark-code&gt;

Docker:
&lt;denchmark-code&gt;Client: Docker Engine - Community
 Version:           19.03.2
 API version:       1.40
 Go version:        go1.12.8
 Git commit:        6a30dfc
 Built:             Thu Aug 29 05:29:33 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          19.03.2
  API version:      1.40 (minimum version 1.12)
  Go version:       go1.12.8
  Git commit:       6a30dfc
  Built:            Thu Aug 29 05:28:12 2019
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.2.6
  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb
 runc:
  Version:          1.0.0-rc8
  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f
 docker-init:
  Version:          0.18.0
  GitCommit:        fec3683
&lt;/denchmark-code&gt;

Python 3.6, BentoML: 0.4.8
Additional context
I guess it can be caused by new release of miniconda container, because bentoml's generated Dockerfile does not have fixed version of base image. Also, it can be related to something like new release of gunicorn because again, bentoml always installs the latest release of gunicorn.
	</description>
	<comments>
		<comment id='1' author='Rexhaif' date='2019-11-11T16:48:32Z'>
		Thanks for reporting the issue &lt;denchmark-link:https://github.com/Rexhaif&gt;@Rexhaif&lt;/denchmark-link&gt;
, it's indeed an issue with the new release of gunicorn, we are working on a fix.
And thanks a lot for the feedback, we are actually working on improving the docker build workflow, by pinning miniconda and all dependency version in the dockerfile for every release of BentoML. It should be included in the next 1-2 releases.
		</comment>
		<comment id='2' author='Rexhaif' date='2019-11-11T18:59:08Z'>
		Thanks for quick response)
I'll be waiting for the fix.
		</comment>
		<comment id='3' author='Rexhaif' date='2019-11-11T22:43:45Z'>
		&lt;denchmark-link:https://github.com/Rexhaif&gt;@Rexhaif&lt;/denchmark-link&gt;
 the fix has been merged and included in the latest release BentoML-0.4.9, you should be able to get it by upgrading bentoml now: 
		</comment>
		<comment id='4' author='Rexhaif' date='2019-11-12T08:22:17Z'>
		I was having the same gunicorn.six issue, after updating there's another issue. Please check!
docker run -p 5000:5000 bento-service
&lt;denchmark-code&gt;[2019-11-12 08:19:56 +0000] [1] [INFO] Starting gunicorn 20.0.0
[2019-11-12 08:19:56 +0000] [1] [INFO] Listening at: http://0.0.0.0:5000 (1)
[2019-11-12 08:19:56 +0000] [1] [INFO] Using worker: sync
[2019-11-12 08:19:56 +0000] [10] [INFO] Booting worker with pid: 10
[2019-11-12 08:19:56 +0000] [11] [INFO] Booting worker with pid: 11
[2019-11-12 08:19:56 +0000] [12] [INFO] Booting worker with pid: 12
[2019-11-12 08:19:57 +0000] [12] [ERROR] Exception in worker process
Traceback (most recent call last):
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/arbiter.py", line 583, in spawn_worker
    worker.init_process()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/workers/base.py", line 133, in init_process
    self.load_wsgi()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/workers/base.py", line 142, in load_wsgi
    self.wsgi = self.app.wsgi()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/app/base.py", line 67, in wsgi
    self.callable = self.load()
  File "/opt/conda/lib/python3.6/site-packages/bentoml/server/gunicorn_server.py", line 76, in load
    bento_service = load(self.bento_archive_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/archive/loader.py", line 169, in load
    svc = svc_cls.load_from_dir(archive_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/service.py", line 563, in load_from_dir
    artifacts = ArtifactCollection.load(artifacts_path, cls._artifacts_spec)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/artifact/artifact.py", line 133, in load
    artifact_instance = artifact_spec.load(load_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/artifact/pickle_artifact.py", line 55, in load
    obj = self._pickle.load(pkl_file)
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 270, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 472, in load
    obj = StockUnpickler.load(self)
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 827, in _import_module
    return getattr(__import__(module, None, None, [obj]), obj)
AttributeError: module 'numpy.core' has no attribute '_multiarray_umath'
[2019-11-12 08:19:57 +0000] [12] [INFO] Worker exiting (pid: 12)
[2019-11-12 08:19:57 +0000] [10] [ERROR] Exception in worker process
Traceback (most recent call last):
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/arbiter.py", line 583, in spawn_worker
    worker.init_process()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/workers/base.py", line 133, in init_process
    self.load_wsgi()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/workers/base.py", line 142, in load_wsgi
    self.wsgi = self.app.wsgi()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/app/base.py", line 67, in wsgi
    self.callable = self.load()
  File "/opt/conda/lib/python3.6/site-packages/bentoml/server/gunicorn_server.py", line 76, in load
    bento_service = load(self.bento_archive_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/archive/loader.py", line 169, in load
    svc = svc_cls.load_from_dir(archive_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/service.py", line 563, in load_from_dir
    artifacts = ArtifactCollection.load(artifacts_path, cls._artifacts_spec)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/artifact/artifact.py", line 133, in load
    artifact_instance = artifact_spec.load(load_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/artifact/pickle_artifact.py", line 55, in load
    obj = self._pickle.load(pkl_file)
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 270, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 472, in load
    obj = StockUnpickler.load(self)
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 827, in _import_module
    return getattr(__import__(module, None, None, [obj]), obj)
AttributeError: module 'numpy.core' has no attribute '_multiarray_umath'
[2019-11-12 08:19:57 +0000] [10] [INFO] Worker exiting (pid: 10)
[2019-11-12 08:19:57 +0000] [11] [ERROR] Exception in worker process
Traceback (most recent call last):
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/arbiter.py", line 583, in spawn_worker
    worker.init_process()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/workers/base.py", line 133, in init_process
    self.load_wsgi()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/workers/base.py", line 142, in load_wsgi
    self.wsgi = self.app.wsgi()
  File "/opt/conda/lib/python3.6/site-packages/gunicorn/app/base.py", line 67, in wsgi
    self.callable = self.load()
  File "/opt/conda/lib/python3.6/site-packages/bentoml/server/gunicorn_server.py", line 76, in load
    bento_service = load(self.bento_archive_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/archive/loader.py", line 169, in load
    svc = svc_cls.load_from_dir(archive_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/service.py", line 563, in load_from_dir
    artifacts = ArtifactCollection.load(artifacts_path, cls._artifacts_spec)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/artifact/artifact.py", line 133, in load
    artifact_instance = artifact_spec.load(load_path)
  File "/opt/conda/lib/python3.6/site-packages/bentoml/artifact/pickle_artifact.py", line 55, in load
    obj = self._pickle.load(pkl_file)
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 270, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 472, in load
    obj = StockUnpickler.load(self)
  File "/opt/conda/lib/python3.6/site-packages/dill/_dill.py", line 827, in _import_module
    return getattr(__import__(module, None, None, [obj]), obj)
AttributeError: module 'numpy.core' has no attribute '_multiarray_umath'
[2019-11-12 08:19:57 +0000] [11] [INFO] Worker exiting (pid: 11)
[2019-11-12 08:19:59 +0000] [1] [INFO] Shutting down: Master
[2019-11-12 08:19:59 +0000] [1] [INFO] Reason: Worker failed to boot.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='Rexhaif' date='2019-11-12T08:34:18Z'>
		&lt;denchmark-link:https://github.com/Deninc&gt;@Deninc&lt;/denchmark-link&gt;
 did you save a new BentoService bundle with updated version of BentoML? Do you mind share the saved bundle files for me to investigate? either push to a github repository or ping me in BentoML slack if you don't want to share it publically.
		</comment>
		<comment id='6' author='Rexhaif' date='2019-11-12T08:58:58Z'>
		
did you save a new BentoService bundle with updated version of BentoML?

Yes I did.
Actually I managed to fix the issue. Checking around the Internet it seems the issue is of numpy version:
&lt;denchmark-link:https://github.com/alpacahq/pylivetrader/issues/73&gt;alpacahq/pylivetrader#73&lt;/denchmark-link&gt;

I inspected the bento Docker image and it was numpy version 1.14.2. So I tried upgrading numpy in the Dockerfile:
&lt;denchmark-code&gt;# update conda base env
RUN conda env update -n base -f /bento/environment.yml
RUN pip install -r /bento/requirements.txt
RUN pip install -U numpy # added this
&lt;/denchmark-code&gt;

Rebuild the image and it worked. Could you incorporate this fix into the repo?
		</comment>
		<comment id='7' author='Rexhaif' date='2019-11-12T09:07:08Z'>
		Thanks for the feedback &lt;denchmark-link:https://github.com/Deninc&gt;@Deninc&lt;/denchmark-link&gt;
, yes that will be part of our upcoming fix to get a more reliable docker build. The issue you ran into was because in the dockerfile, it was installing numpy with conda instead of pip.
One workaround for you for now, is to add numpy with pinned version to the @env definition when defining your BentoService, for example:
@env(pip_dependencies=["numpy=1.17", ...])
class MyPredictionService(BentoService):
    ...
Which should be able to force install a new version of numpy in docker build, similar to what you did manually in the generated dockerfile.
		</comment>
		<comment id='8' author='Rexhaif' date='2019-11-13T15:08:38Z'>
		I've tested new release and everything seems to be ok. Thanks to quick fix:3
		</comment>
		<comment id='9' author='Rexhaif' date='2019-11-14T00:18:10Z'>
		Thanks again &lt;denchmark-link:https://github.com/Rexhaif&gt;@Rexhaif&lt;/denchmark-link&gt;
, closing this issue now
		</comment>
		<comment id='10' author='Rexhaif' date='2019-11-14T00:20:02Z'>
		&lt;denchmark-link:https://github.com/Deninc&gt;@Deninc&lt;/denchmark-link&gt;
 were you using a modified version of BentoML? we just fixed an issue when the service bundle was created when there's local changes in your BentoML source tree. If that was the case, try pull from master again and it should solve that problem you were running into.
		</comment>
	</comments>
</bug>