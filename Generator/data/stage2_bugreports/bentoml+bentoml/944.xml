<bug id='944' author='quantum-fusion' open_date='2020-07-30T12:05:20Z' closed_time='2020-08-01T07:23:31Z'>
	<summary>BentoML install failed with ERROR version 0+unknown</summary>
	<description>
Describe the bug
A clear and concise description of what the bug is.
I installed bentoml on MACOS.
using
pip install bentoml
I then ran the example:
bentoml serve IrisClassifier:latest
[2020-07-30 08:00:58,038] INFO - Getting latest version IrisClassifier:20200729153118_5AD487
[2020-07-30 08:00:58,039] INFO - Starting BentoML API server in development mode..
[2020-07-30 08:00:58,282] WARNING - Using BentoML installed in editable model, the local BentoML repository including all code changes will be packaged together with saved bundle created, under the './bundled_pip_dependencies' directory of the saved bundle.
Error: bentoml-cli serve failed: Saved BentoService bundle version mismatch: loading BentoService bundle create with BentoML version 0.8.3, but loading from BentoML version 0+unknown
To Reproduce
pip install bentoml
bentoml serve IrisClassifier:latest
Expected behavior
I am expecting there to be no error.
Screenshots/Logs
If applicable, add screenshots, logs or error outputs to help explain your problem.
To give us more information for diagnosing the issue, make sure to enable debug logging:
Add the following lines to your Python code before invoking BentoML:
import bentoml
import logging
bentoml.config().set('core', 'debug', 'true')
bentoml.configure_logging(logging.DEBUG)
And use the --verbose option when running bentoml CLI command, e.g.:
bentoml get IrisClassifier --verbose
get IrisClassifier --verbose
[2020-07-30 08:03:34,757] DEBUG - Setting debug mode: ON for current session
[2020-07-30 08:03:35,246] DEBUG - Creating local YataiService instance
[2020-07-30 08:03:35,491] DEBUG - Upgrading tables to the latest revision
BENTO_SERVICE                         AGE                      APIS                                   ARTIFACTS
IrisClassifier:20200729153118_5AD487  16 hours and 32 minutes  predictDataframeInput:DefaultOutput  model
IrisClassifier:20200729151401_10F66D  16 hours and 49 minutes  predictDataframeInput:DefaultOutput  model
IrisClassifier:20200729150144_86FE7D  17 hours and 1 minute    predictDataframeInput:DefaultOutput  model
IrisClassifier:20200729145151_7A89E5  17 hours and 11 minutes  predictDataframeInput:DefaultOutput  model
[2020-07-30 08:03:35,544] DEBUG - HTTPSConnectionPool(host='api.amplitude.com', port=443): Max retries exceeded with url: /httpapi (Caused by NewConnectionError('&lt;urllib3.connection.VerifiedHTTPSConnection object at 0x7fa5f83b4790&gt;: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))
Environment:

OS: [e.g. MacOS 10.15.6]
Python/BentoML Version [e.g. Python 3.7.6, BentoML-0.8.3]

Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='quantum-fusion' date='2020-07-31T06:49:45Z'>
		hi &lt;denchmark-link:https://github.com/quantum-fusion&gt;@quantum-fusion&lt;/denchmark-link&gt;
,
It looks like you also tried installing BentoML from source code? could you verify a few things for me:

what's the output of CLI command bentoml --version?
what's the output of import bentoml; print(bentoml.__version__)?
what's the output of import bentoml; print(bentoml.__path__)?

		</comment>
		<comment id='2' author='quantum-fusion' date='2020-07-31T10:46:39Z'>
		I downloaded your GitHub repo, and I noticed when I run in the ./BentoML directory:
bentoml --version
bentoml, version 0+unknown
However, If I run in any other directory.
bentoml --version
bentoml, version 0.8.3
I discovered the resolution path was broken because it could not find where bentoML was installed, and which version.
pip install BentoML==0.8.3
bentoml —version
I can not explain why when running in the ./BentoML path with the downloaded Github repo results in the bentoml, version 0+unknown, other than I deleted the bentML binary file in that location, and then purged the directory of garbage cache files.
find . | grep -E “(pycache|.pyc|.pyo$)” | xargs rm -rf
The result was still the same in the ./BentoML directory
bentoml, version 0+unknown
I am not sure why that is the case, however I did learn that I can run anywhere else in the file system.
Perhaps you know the answer?
		</comment>
		<comment id='3' author='quantum-fusion' date='2020-08-01T07:23:30Z'>
		&lt;denchmark-link:https://github.com/quantum-fusion&gt;@quantum-fusion&lt;/denchmark-link&gt;
 it is just how python import works. &lt;denchmark-link:https://docs.python.org/3/tutorial/modules.html#the-module-search-path&gt;https://docs.python.org/3/tutorial/modules.html#the-module-search-path&lt;/denchmark-link&gt;


When a module named spam is imported, the interpreter first searches for a built-in module with that name. If not found, it then searches for a file named spam.py in a list of directories given by the variable sys.path. sys.path is initialized from these locations:
The directory containing the input script (or the current directory when no file is specified).
PYTHONPATH (a list of directory names, with the same syntax as the shell variable PATH).
The installation-dependent default.

When you run the CLI command in the bentoml project directory, it imports the  folder(which is a valid python package because it contains a  file) instead of the installed package(version 0.8.3 in your case).  &lt;denchmark-link:https://docs.python.org/3/reference/import.html#searching&gt;https://docs.python.org/3/reference/import.html#searching&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>