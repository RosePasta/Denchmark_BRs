<bug id='1371' author='bojiang' open_date='2021-01-04T09:25:44Z' closed_time='2021-01-11T22:37:41Z'>
	<summary>Avoid ambiguous sources for conda-forge packages in `environment.yml`</summary>
	<description>
Describe the bug
The current channel priority setting causes unpredictable behavior during building model-server docker images.
This is also the reason for the eventual failures of integration tests using TensorFlow.
Take the default conda requirement  as an example.
Since the first channel in  is "conda-forge", conda will  pick the first package named  in the forge (&lt;denchmark-link:https://anaconda.org/search?q=pip&gt;https://anaconda.org/search?q=pip&lt;/denchmark-link&gt;
).
More specifically, on macOS, in half cases, it got pip of pypy installed. And then it will fail when running pip install tensorflow==1.14.0 because there is no tensorflow release for pypy.
refs:

https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html?highlight=channel_priority#strict-channel-priority
https://github.com/bentoml/bentoml/blob/1e452e9575d455136dd441e7a1c7190bc0231cf7/bentoml/service/env.py#L57

How to reproduce:

step 1: prepare an environment with TensorFlow==1.14.0 and bentoml[test] installed
step 2: run pytest -s tests/integration/test_tensorflow_v1_savedmodel_artifact.py
step 3: try 1 and 2 for several times until errors occured

Environment:

OS: All
Python Version: All
BentoML Version: 0.10.1 and before

Additional context
	</description>
	<comments>
		<comment id='1' author='bojiang' date='2021-01-04T14:55:15Z'>
		Running from docker image bentoml/model-server:0.10.1-py37
&lt;denchmark-code&gt;(base) root@a101ba16670b:/# conda install conda-forge::python=3.7
Collecting package metadata (current_repodata.json): done
Solving environment: failed with initial frozen solve. Retrying with flexible solve.
Solving environment: done
Collecting package metadata (repodata.json): done
Solving environment: done

## Package Plan ##

  environment location: /opt/conda

  added / updated specs:
    - conda-forge::python=3.7


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    bzip2-1.0.8                |       h7b6447c_0          78 KB
    cffi-1.14.0                |   py37h2e261b9_0         224 KB
    expat-2.2.10               |       he6710b0_2         153 KB
    gdbm-1.18                  |       h941a26a_0         187 KB  conda-forge
    libffi-3.2.1               |    hf484d3e_1007          48 KB
    pypy3.7-7.3.3              |       h0effd1a_1        33.6 MB  conda-forge
    python-3.7.9               |        4_73_pypy           5 KB  conda-forge
    python_abi-3.7             |    1_pypy37_pp73           4 KB  conda-forge
    ------------------------------------------------------------
                                           Total:        34.3 MB

The following NEW packages will be INSTALLED:

  bzip2              pkgs/main/linux-64::bzip2-1.0.8-h7b6447c_0
  expat              pkgs/main/linux-64::expat-2.2.10-he6710b0_2
  gdbm               conda-forge/linux-64::gdbm-1.18-h941a26a_0
  pypy3.7            conda-forge/linux-64::pypy3.7-7.3.3-h0effd1a_1
  python_abi         conda-forge/linux-64::python_abi-3.7-1_pypy37_pp73

The following packages will be UPDATED:

  python                 pkgs/main::python-3.7.6-h0371630_2 --&gt; conda-forge::python-3.7.9-4_73_pypy

The following packages will be DOWNGRADED:

  cffi                                1.14.1-py37he30daa8_0 --&gt; 1.14.0-py37h2e261b9_0
  libffi                                     3.3-he6710b0_2 --&gt; 3.2.1-hf484d3e_1007


Proceed ([y]/n)?
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='bojiang' date='2021-01-04T15:00:00Z'>
		&lt;denchmark-code&gt;(base) root@a101ba16670b:/# conda install defaults::python=3.7
Collecting package metadata (current_repodata.json): done
Solving environment: done

# All requested packages already installed.

&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='bojiang' date='2021-01-08T06:58:26Z'>
		Hi, &lt;denchmark-link:https://github.com/bojiang&gt;@bojiang&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;

We're suffering this issue with BentoML 0.10.1 on the production environment now. How can we avoid this as workaround?
		</comment>
		<comment id='4' author='bojiang' date='2021-01-08T08:09:38Z'>
		&lt;denchmark-link:https://github.com/withsmilo&gt;@withsmilo&lt;/denchmark-link&gt;
 I just spoke to &lt;denchmark-link:https://github.com/bojiang&gt;@bojiang&lt;/denchmark-link&gt;
 about &lt;denchmark-link:https://github.com/bentoml/BentoML/pull/1375&gt;#1375&lt;/denchmark-link&gt;
, we are going to remove  from the default conda-channels list, which was causing this issue. We are planning to release a new version next Monday which will contain this fix.
One workaround you can try is to manually remove the conda-forge channel, in the environment.yml file, under the saved BentoService directory.
		</comment>
		<comment id='5' author='bojiang' date='2021-01-08T08:40:11Z'>
		&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;

I'm so glad to hear the good news! Thanks for quick patch. I'will wait for new release next Monday. 
		</comment>
		<comment id='6' author='bojiang' date='2021-01-08T09:48:04Z'>
		&lt;denchmark-link:https://github.com/withsmilo&gt;@withsmilo&lt;/denchmark-link&gt;


How can we avoid this as workaround?

It depends.
For a service like this
@bentoml.artifacts([H2oModelArtifact('model')])
@bentoml.env(
  pip_packages=['pandas', 'tersorflow==1.14.0'],
)
class ExamplePredictionService(bentoml.BentoService):

  @bentoml.api(input=DataframeInput(), batch=True)
  def predict(self, df):
      return self.artifacts.model.predict(df)
Just put "pkgs/main::python=&lt;your_python_version&gt;" into the conda_dependencies should do the trick. It prevents conda from installing python from channel conda-forge.
&lt;denchmark-code&gt;@bentoml.env(
  pip_packages=['pandas'],
  conda_dependencies=['tersorflow==1.14.0', "pkgs/main::python=3.7"]
)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='bojiang' date='2021-01-08T19:44:48Z'>
		&lt;denchmark-link:https://github.com/bojiang&gt;@bojiang&lt;/denchmark-link&gt;

Wow! Thanks for great workaround.
		</comment>
	</comments>
</bug>