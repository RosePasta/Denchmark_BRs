<bug id='893' author='omrihar' open_date='2020-07-14T11:54:52Z' closed_time='2020-08-01T18:00:06Z'>
	<summary>Testing `Content-Type` directly is problematic in JsonInput adapter</summary>
	<description>
Describe the bug
In the AWS Lambda part of the code for the JsonInput adapter, there is a test which tests for request["headers"]["Content-Type"] == "application/json". This causes problems when content type is provided as lowercase, or is missing completely. According to the RFC specs, header names are case insensitive, which is also a problem.
This was changed in a previous version of BentoML, where it was assumed that the input is valid json unless the json.loads raised an exception. I would suggest returning to that behavior, since testing for the content-type in this way is not robust.
I can provide a PR for the JsonInput adapter, but would recommend that this becomes part of the spec for any adapter, since this is also repeated (I think) in the DataFrame adapter.
	</description>
	<comments>
		<comment id='1' author='omrihar' date='2020-07-15T15:13:28Z'>
		Thanks for reporting this &lt;denchmark-link:https://github.com/omrihar&gt;@omrihar&lt;/denchmark-link&gt;

The previous version of BentoML actually handles input JSON the exact same way in , you can find the implementation in  file, which is identical to the old JsonHandler/JsonInput. According to &lt;denchmark-link:https://github.com/yubozhao&gt;@yubozhao&lt;/denchmark-link&gt;
 's comment here &lt;denchmark-link:https://github.com/bentoml/BentoML/pull/828#discussion_r443989965&gt;#828 (comment)&lt;/denchmark-link&gt;
:

The request is coming from API gateway to the backend Lambda, AWS wraps the entire client request to the input event parameter of the backend Lambda function. For headers, it is still in the format of the income client request header.


I found the documentation about this topic here: https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format

Based on this, I think it should work when it is in lower case but it doesn't seem to handle when the content-type is missing. I think in the case of JsonInput, we should assume the content-type is JSON when it is missing.
		</comment>
	</comments>
</bug>