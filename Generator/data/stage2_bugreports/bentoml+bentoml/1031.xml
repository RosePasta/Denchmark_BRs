<bug id='1031' author='jiyer2016' open_date='2020-08-26T14:55:47Z' closed_time='2020-09-08T04:39:45Z'>
	<summary>bento flask service not accessible from outside the docker container</summary>
	<description>
Describe the bug
On my RHEL docker container:
If I use plain-flask - the Model API is NOT accessible outside of the container:
bentoml serve /&lt;some_dir&gt;
However, if I ssh into the container and try invoking the Model API - it works.
If I use gunicorn - the Model API is accessible from outside the container.
bentoml serve-gunicorn --workers=2 /&lt;some_dir&gt;
There is some difference in the way  gunicorn and plain-flask are configured that is causing flask to NOT be accessible. I don't know enough of either to tell.
However, one thing i note is the following in /bentoml/server/api_server.py:
&lt;denchmark-code&gt;def start(self):
	"""
	Start an REST server at the specific port on the instance or parameter.
	"""
	# Bentoml api service is not thread safe.
	# Flask dev server enabled threaded by default, disable it.
	self.app.run(
		port=self.port, threaded=False, debug=get_debug_mode(), use_reloader=False,
	)
&lt;/denchmark-code&gt;

Should the call to app.run() include the host for it to be accessible outside the container ?
app.run(host='0.0.0.0')
To Reproduce
Steps to reproduce the behavior:

Run on Docker
bentoml serve /&lt;some_dir&gt;

Environment:

OS: RHEL Docker
Python 3.8, BentoML-0.8.4]

	</description>
	<comments>
		<comment id='1' author='jiyer2016' date='2020-08-26T19:25:55Z'>
		&lt;denchmark-link:https://github.com/jiyer2016&gt;@jiyer2016&lt;/denchmark-link&gt;
 Yep. I can reproduce it. We should include the host there.
Just curious, what's the reason/use-case that you want to run flask via bentoml serve instead of using gunicorn with bentoml serve-gunicorn?
We were thinking that if users are containerizing, they are probably using it for production; hence gunicorn is a better choice. I would love to learn about your use-cases more, so we can have a better design in future versions.
		</comment>
		<comment id='2' author='jiyer2016' date='2020-08-27T05:16:16Z'>
		Yes, gunicorn is good for me.
Just that I took the (default) route of running flask to prove this works on my environment.
		</comment>
		<comment id='3' author='jiyer2016' date='2020-08-27T21:57:26Z'>
		&lt;denchmark-link:https://github.com/jiyer2016&gt;@jiyer2016&lt;/denchmark-link&gt;
 do you mind sharing a bit more context about the environment you're working with and the requirements there? That'd help us understand what's the best way to support those requirements.
		</comment>
		<comment id='4' author='jiyer2016' date='2020-08-28T13:21:11Z'>
		&lt;denchmark-link:https://github.com/parano&gt;@parano&lt;/denchmark-link&gt;
 - Let me get back to you on this in a few days.
		</comment>
		<comment id='5' author='jiyer2016' date='2020-08-28T17:24:00Z'>
		&lt;denchmark-link:https://github.com/jiyer2016&gt;@jiyer2016&lt;/denchmark-link&gt;
 feel free to reach us directly on slack or email us at &lt;denchmark-link:mailto:bo@bentoml.ai&gt;bo@bentoml.ai&lt;/denchmark-link&gt;
 or &lt;denchmark-link:mailto:chaoyu@bentoml.ai&gt;chaoyu@bentoml.ai&lt;/denchmark-link&gt;
, if sharing in public is a concern.
		</comment>
		<comment id='6' author='jiyer2016' date='2020-09-08T01:42:02Z'>
		The server launched by bentoml serve is for debug only, thus bentoml gets it bound to 127.0.0.1. The default docker container is behind an NAT, which means we can not access it from 127.0.0.1 when outside of the container.
Since the server is not production ready(many unexcepted exceptions and security issues), I think this default behaviour is okay.
		</comment>
		<comment id='7' author='jiyer2016' date='2020-09-08T01:53:42Z'>
		&lt;denchmark-link:https://github.com/jiyer2016&gt;@jiyer2016&lt;/denchmark-link&gt;
 It would be dangerous to expose debug service to public (bind to ).
		</comment>
		<comment id='8' author='jiyer2016' date='2020-09-08T04:39:45Z'>
		&lt;denchmark-link:https://github.com/bojiang&gt;@bojiang&lt;/denchmark-link&gt;
 - Thanks, Fine with this behavior. Not high priority - but does it make sense to add a warning during startup to make users aware that the service would not be accessible outside the host. OR perhaps add it to documentation OR even in the output of .
Closing this issue.
		</comment>
	</comments>
</bug>