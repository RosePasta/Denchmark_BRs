<bug id='758' author='muthupl' open_date='2017-01-20T07:43:21Z' closed_time='2017-03-31T12:01:58Z'>
	<summary>ParserStateError</summary>
	<description>
Hi,
We are getting a parser state error.
Here is our test:
&lt;denchmark-code&gt;nlp = spacy.en.English()
nlp.matcher.add('splash', 'my entity', {},[ [{LEMMA: 'splash'}, {LEMMA: 'on'}]])
nlp('splash On')
&lt;/denchmark-code&gt;

Here is the trace:
&lt;denchmark-code&gt;Traceback (most recent call last):
File "lib/python3.5/site-packages/spacy/language.py", line 328, in call
proc(doc)
File "spacy/syntax/parser.pyx", line 146, in spacy.syntax.parser.Parser.call (spacy/syntax/parser.cpp:6114)
spacy.syntax.parser.ParserStateError: Error analysing doc -- no valid actions available. This should never happen, so please report the error on the issue tracker. Here's the thread to do so --- reopen it if it's closed:
#429
Please include the text that the parser failed on, which is:
'splash On'
&lt;/denchmark-code&gt;

Our spacy version: spacy==1.3.0
Python 3.5.1
Mac OSX EI Capitan
Any help or fix is much appreciated! Let us know if you need more details.
	</description>
	<comments>
		<comment id='1' author='muthupl' date='2017-01-20T09:00:13Z'>
		Thanks! Will investigate.
		</comment>
		<comment id='2' author='muthupl' date='2017-02-01T23:04:17Z'>
		Hi.  Thanks for all your work.  For what it's worth, I'm running into the same issue in version 1.5.0.  I added a comment to issue &lt;denchmark-link:https://github.com/explosion/spaCy/issues/429&gt;#429&lt;/denchmark-link&gt;
 describing the code (match rule, with callback, doing a span merge) and the text I'm parsing, but I'm thinking that's not really the issue where it belongs.
Additionally, I'm able to do this to work around the ParserStateError:



d = nlp.tokenizer("Located 16 km southwest of the Ceres find, the Hebe-1 well tested at 5,956 BOPD.")
nlp.tagger(d)
nlp.parser(d)
nlp.entity(d)
nlp.matcher(d)



The resulting doc has "5,956 BOPD." merged into a single token, but the entity type is ORG, and not QUANTITY.  However, the match rule for {like_num,"BOPD."} does try to define the match as a QUANTITY, as does the span.merge in the on_match callback.
One more update...
At least in 1.5.0, passing keyword args to span.merge didn't work for me.
&lt;denchmark-code&gt;        newspan = span.merge(ent_type='QUANTITY',tag='NNP')
&lt;/denchmark-code&gt;

However, this (I think deprecated form) did:
&lt;denchmark-code&gt;        newspan = span.merge('NNP',span.text,'QUANTITY')
&lt;/denchmark-code&gt;

I'm not a Python programmer, so this might be a noob issue on my part.
		</comment>
		<comment id='3' author='muthupl' date='2017-03-31T12:01:58Z'>
		I think this is fixed now. The code in this doc.merge() method is still quite poor, and needs to be rewritten. But there's now a passing test for this specific issue. Thanks again for reporting!
		</comment>
		<comment id='4' author='muthupl' date='2018-05-09T00:39:03Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>