<bug id='543' author='michaelcapizzi' open_date='2016-10-20T18:50:09Z' closed_time='2016-10-23T15:53:11Z'>
	<summary>can't load instance of English() because of json error</summary>
	<description>
When trying to instantiate an instance of English(), I get the following error:
&lt;denchmark-code&gt;&gt;&gt;&gt; from spacy.en import English
&gt;&gt;&gt; p = English()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/site-packages/spacy/language.py", line 247, in __init__
    if 'vocab' not in overrides \
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/site-packages/spacy/language.py", line 46, in create_vocab
    lemmatizer = cls.create_lemmatizer(nlp)
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/site-packages/spacy/language.py", line 42, in create_lemmatizer
    return Lemmatizer.load(nlp.path)
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/site-packages/spacy/lemmatizer.py", line 33, in load
    rules = json.load(file_)
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/json/__init__.py", line 268, in load
    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/json/__init__.py", line 312, in loads
    s.__class__.__name__))
TypeError: the JSON object must be str, not 'bytes'
&lt;/denchmark-code&gt;

So I looked in the source code, and lemmatizer.py has the following line (line 31):
with (path / 'vocab' / 'lemma_rules.json').open('rb') as file_:
If I remove the b flag, the above error goes away, only to be replaced with a similar one, this time in matcher.pyx:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/site-packages/spacy/language.py", line 262, in __init__
    if 'matcher' not in overrides \
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/site-packages/spacy/language.py", line 111, in create_matcher
    return Matcher.load(nlp.path / 'vocab', nlp.vocab)
  File "spacy/matcher.pyx", line 178, in spacy.matcher.Matcher.load (spacy/matcher.cpp:5432)
  File "spacy/matcher.pyx", line 179, in spacy.matcher.Matcher.load (spacy/matcher.cpp:5375)
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/json/__init__.py", line 268, in load
    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
  File "/Users/mcapizzi/miniconda3/envs/spacy_test/lib/python3.5/json/__init__.py", line 312, in loads
    s.__class__.__name__))
TypeError: the JSON object must be str, not 'bytes'
&lt;/denchmark-code&gt;

However, this time, the error persists even when I remove the b flag from line 178 of matcher.pyx.
If I run p = English(matcher=False), I no longer get an error.  But presumably, that's only because I've disabled the matcher portion of the annotator.
	</description>
	<comments>
		<comment id='1' author='michaelcapizzi' date='2016-10-20T19:00:33Z'>
		Hmm. I don't see why this should be working for me, but not for you. Let me check the JSON docs.
		</comment>
		<comment id='2' author='michaelcapizzi' date='2016-10-20T19:03:31Z'>
		What version are you using?
		</comment>
		<comment id='3' author='michaelcapizzi' date='2016-10-20T19:04:57Z'>
		That was in 1.0.4. When I just tried 1.0.3, however I didn't have a problem:
&lt;denchmark-code&gt;Successfully installed spacy-1.0.3
(spacy_test) Michaels-MacBook-Air:~ mcapizzi$ python -m spacy.en.download parser
Downloading parsing model
Model already installed. Please run 'python -m spacy.en.download --force' to reinstall.
(spacy_test) Michaels-MacBook-Air:~ mcapizzi$ python
Python 3.5.2 |Continuum Analytics, Inc.| (default, Jul  2 2016, 17:52:12) 
[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; from spacy.en import English
&gt;&gt;&gt; p = English()
&gt;&gt;&gt; doc = p("I hate dogs")
&gt;&gt;&gt; [s for s in doc.sents]
[I hate dogs]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='michaelcapizzi' date='2016-10-20T19:16:05Z'>
		Hm. Do you have ujson installed?
		</comment>
		<comment id='5' author='michaelcapizzi' date='2016-10-20T19:27:23Z'>
		I don't.  And it doesn't look like it got installed into my environment as a dependency for spacy.
But interestingly enough, when I did install usjon into my environment, and tried to load an instance of English(), it worked just fine!
&lt;denchmark-code&gt;&gt;&gt;&gt; from spacy.en import English
&gt;&gt;&gt; p = English()
&gt;&gt;&gt; 
&lt;/denchmark-code&gt;

So it must have something to do with the difference between json and ujson packages, since it seems that spacy looks for usjon first, and then only uses json if it can't find usjon.
from lemmatizer.py:
&lt;denchmark-code&gt;try:
    import ujson as json
except ImportError:
    import json
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='michaelcapizzi' date='2016-10-20T19:46:21Z'>
		Seems to me that when conda packaged spaCy, they left out the ujson requirement — probably to get the wheel installation working.
I can't figure out whether ujson expects bytes or string. I don't understand how the C extension is built, and there's zero docs. Frustrating.
I've just pushed a version for testing that uses unicode buffers for json save/load. I'll see how this goes.
		</comment>
		<comment id='7' author='michaelcapizzi' date='2016-10-20T19:52:39Z'>
		Well, once again, I appreciate your quick reply.  I've simply installed ujson and all is working fine.  :)
		</comment>
		<comment id='8' author='michaelcapizzi' date='2016-10-20T19:57:56Z'>
		Well, what I'm caring about is fixing the underlying issue :)
So, thanks for your report. I'll keep this open until I figure out a good resolution.
		</comment>
		<comment id='9' author='michaelcapizzi' date='2016-10-20T20:02:18Z'>
		Happy to help.
		</comment>
		<comment id='10' author='michaelcapizzi' date='2016-10-20T20:32:47Z'>
		Just ran into the same trouble .. will try it with ujson
		</comment>
		<comment id='11' author='michaelcapizzi' date='2016-10-20T20:36:33Z'>
		I just pushed v1.0.5, although I doubt it's on conda — try that, if you haven't already.
		</comment>
		<comment id='12' author='michaelcapizzi' date='2016-10-20T20:37:49Z'>
		installing ujson also solved it for me
		</comment>
		<comment id='13' author='michaelcapizzi' date='2016-10-21T13:17:27Z'>
		I also had this issue installing Spacy through pip using python 3.4. Installing ujson also fixed the issue.
		</comment>
		<comment id='14' author='michaelcapizzi' date='2016-10-23T15:53:11Z'>
		This should be fixed in 1.1.0 — please reopen if it's not!
		</comment>
		<comment id='15' author='michaelcapizzi' date='2018-05-09T07:39:03Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>