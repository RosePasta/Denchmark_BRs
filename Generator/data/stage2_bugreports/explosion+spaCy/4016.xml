<bug id='4016' author='ChrisPalmerNZ' open_date='2019-07-24T07:39:54Z' closed_time='2019-07-24T09:12:04Z'>
	<summary>PhraseMatcher only uses the last label when more than one PhraseMatcher is defined</summary>
	<description>
This is the same as other people have reported, however I am trying to make it clear that the error seems to be that only the last label is used for any entity that is identified. It's clear that the entities are correctly identified if you examine matcher._docs, but the last label is the one used - this should clarify that in this case its not a situation of multiple labels for an entity not being handled, its simply that multiple matchers always get the label of the last matcher
&lt;denchmark-code&gt;import spacy
from spacy.matcher import PhraseMatcher
from spacy.tokens import Doc, Span

nlp = spacy.load('en')
matcher = PhraseMatcher(nlp.vocab)
login_name_pattern = list(nlp.pipe(['jimbrown','jackblack']))
matcher.add('LOGIN_NAME', None, *login_name_pattern )

def login_name_component(doc):
    # Apply the matcher to the doc
    matches = matcher(doc)
    # Create a Span for each match and assign the label 'LOGIN_NAME'
    spans = [Span(doc, start, end, label="LOGIN_NAME") for match_id, start, end in matches]
    # Overwrite the doc.ents with the matched spans
    doc.ents = spans
    return doc

# Add the component to the pipeline before the 'ner' component
nlp.add_pipe(login_name_component, before="ner")
print(nlp.pipe_names)
# ['tagger', 'parser', 'login_name_component', 'ner']

txt = 'jimbrown: was it in ACT or NSW we saw jackblack in the Casino? Or maybe with MOMA?'
doc = nlp(txt)
print([(ent.text, ent.label_) for ent in doc.ents])
# [('jimbrown', 'LOGIN_NAME'), ('ACT', 'ORG'), ('NSW', 'ORG'), ('jackblack', 'LOGIN_NAME'), ('Casino', 'LOC'), ('MOMA', 'ORG')]

state_terr_pattern = list(nlp.pipe(['ACT', 'NSW', 'NT', 'QLD', 'SA', 'TAS', 'VIC', 'WA']))
matcher.add('STATE_TERR', None, *state_terr_pattern)

def state_terr_component(doc):
    # Apply the matcher to the doc
    matches = matcher(doc)
    # Create a Span for each match and assign the label 'STATE_TERR'
    spans = [Span(doc, start, end, label="STATE_TERR") for match_id, start, end in matches]
    # Overwrite the doc.ents with the matched spans
    doc.ents = spans
    return doc

# Add the component to the pipeline before the 'login_name_component'
nlp.add_pipe(state_terr_component, before="login_name_component")
print(nlp.pipe_names)
# ['tagger', 'parser', 'state_terr_component', 'login_name_component', 'ner']

test_doc = nlp(txt)
print([(ent.text, ent.label_) for ent in test_doc.ents])
# [('jimbrown', 'LOGIN_NAME'), ('ACT', 'LOGIN_NAME'), ('NSW', 'LOGIN_NAME'), ('jackblack', 'LOGIN_NAME'), ('Casino', 'LOC'), ('MOMA', 'ORG')]

parents_pattern = list(nlp.pipe(['MOMA', 'POPA']))
matcher.add('PARENT', None, *parents_pattern)

def parent_component(doc):
    # Apply the matcher to the doc
    matches = matcher(doc)
    # Create a Span for each match and assign the label 'PARENT'
    spans = [Span(doc, start, end, label="PARENT") for match_id, start, end in matches]
    # Overwrite the doc.ents with the matched spans
    doc.ents = spans
    return doc

# Add the component to the pipeline **after** the 'login_name_component'
nlp.add_pipe(parent_component, after="login_name_component")
print(nlp.pipe_names)
# ['tagger', 'parser', 'state_terr_component', 'login_name_component', 'parent_component', 'ner']

test_doc = nlp(txt)
print([(ent.text, ent.label_) for ent in test_doc.ents])
# [('jimbrown', 'PARENT'), ('ACT', 'PARENT'), ('NSW', 'PARENT'), ('jackblack', 'PARENT'), ('Casino', 'LOC'), ('MOMA', 'PARENT')]

matcher._docs
# {7038724010617191: (jimbrown, jackblack),
# 5513256235797150270: (ACT, NSW, NT, QLD, SA, TAS, VIC, WA),
# 11213764556427237819: (MOMA, POPA)}
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System: Windows 10
Python Version Used: 3.6.5
spaCy Version Used: 2.1.6
Environment Information:

	</description>
	<comments>
		<comment id='1' author='ChrisPalmerNZ' date='2019-07-24T08:51:38Z'>
		Thanks for the detailed report and code! This definitely looks like a bug indeed.
		</comment>
		<comment id='2' author='ChrisPalmerNZ' date='2019-07-24T09:12:04Z'>
		Thanks! I already have a regression test for this in &lt;denchmark-link:https://github.com/explosion/spaCy/issues/3972&gt;#3972&lt;/denchmark-link&gt;
, so I'll merge the two issues because they definitely seem related 
		</comment>
		<comment id='3' author='ChrisPalmerNZ' date='2019-08-23T09:42:34Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>