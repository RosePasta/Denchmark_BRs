<bug id='2407' author='aburkov' open_date='2018-06-04T01:24:33Z' closed_time='2018-12-08T12:11:55Z'>
	<summary>spaCy freezes on nlp("some input")</summary>
	<description>
I have a strange problem. I run a Flask webservice, it downloads web pages and applies some analysis to the text, including named entity extraction with spaCy. The spaCy related code works well on my laptop (mac), it also works on the server from the python console, but it freezes when it's called as part of the Flask application on the server.
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;        nlp = spacy.load('en_core_web_sm')
        print "I test spacy nlp"
        doc = nlp(u"London is the capital of the Great Britain.")
        #more code
&lt;/denchmark-code&gt;

The part "#more code" is not executed. The process freezes right after "nlp(u"London is the capital of the Great Britain.")"
As I said, in python console it works. All other ML/NLP libraries work OK in both cases.
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Python version: 2.7.12
Platform: Linux-4.4.0-127-generic-x86_64-with-Ubuntu-16.04-xenial
spaCy version: 2.0.7
Models: en_core_web_sm

	</description>
	<comments>
		<comment id='1' author='aburkov' date='2018-06-04T22:26:29Z'>
		Hmm. I haven't seen this problem before, but my best guess is that the web server is calling spaCy from a subprocess, and then somehow when numpy launches multiple threads, the threads are deadlocking. Could you try setting the environment variable OPENMP_NUM_THREADS=1, to check that the problem still occurs when only one thread is launched?
		</comment>
		<comment id='2' author='aburkov' date='2018-08-31T21:00:09Z'>
		Exactly the same problem running spaCy with Django.
Adding os.environ["OPENMP_NUM_THREADS"] = "1" to manage.py gives no result

Python version: 2.7.12
Platform: Linux-2.6.32-042stab130.1-x86_64-with-Ubuntu-16.04-xenial
spaCy version: 2.0.12
Models: en-core-web-sm-2.0.0

		</comment>
		<comment id='3' author='aburkov' date='2018-12-08T12:11:55Z'>
		This should now be resolved in the new spacy-nightly versions. Instead of relying on numpy, which called into linear algebra libraries which weren't necessarily thread-safe, we've now managed to package the Blis linear algebra routines into a standalone library. This library is fully thread-safe, preventing these problems.
		</comment>
		<comment id='4' author='aburkov' date='2019-01-07T12:28:13Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>