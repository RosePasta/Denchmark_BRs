<bug id='4651' author='GuiGel' open_date='2019-11-15T08:13:23Z' closed_time='2019-11-21T20:28:10Z'>
	<summary>EntityRuler from_disk method doesn't work when phrase_matcher_attr is specified</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

import spacy
from spacy.lang.en import English
from spacy.pipeline import EntityRuler
nlp = English()
ruler = EntityRuler(nlp, phrase_matcher_attr='LOWER')
patterns = [{"label": "PYTHON_LIB", "pattern": "spacy", "id": "spaCy"}]
ruler.add_patterns(patterns)
nlp.add_pipe(ruler)
nlp.to_disk('spacy2.2_model')
text = "Spacy is a python library for nlp"
doc = nlp(text)
print('{}\n{}'.format(text, '-'*100))
print("original model\n")
detection = [(ent.text, ent.label_, ent.ent_id_) for ent in doc.ents]
print('ENT TEXT -&gt; {}\nENT LABEL &gt; {}\nENT ID ---&gt; {}\n'.format(*detection[0]))
nlp_loaded = spacy.load('spacy2.2_model')
print("{}\nload model\n".format('-'*100))
loaded_doc = nlp_loaded("Spacy is a python library for nlp.")
detection = [(ent.text, ent.label_, ent.ent_id_) for ent in loaded_doc.ents]
print(detection)
--&gt; OUTPUT
&lt;denchmark-h:h2&gt;Spacy is a python library for nlp&lt;/denchmark-h&gt;

original model
ENT TEXT -&gt; Spacy
ENT LABEL &gt; PYTHON_LIB
ENT ID ---&gt; spaCy
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

load model
[]
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


spaCy version: 2.2.2
Platform: Linux-4.9.0-11-amd64-x86_64-with-debian-9.11
Python version: 3.7.3

Temporarily, I have modified the EntityRuler from_disk method in order to have my exemple working.
I have split the deserializer in 2 parts. One in order to deserialize the cfg first and and other one in order to deserialize the patterns. By this way the phrase_matcher_attr attribute can be take into account when the add_patterns method is called by the line: from_disk(path, deserializers_patterns, {})
&lt;denchmark-h:h3&gt;Info&lt;/denchmark-h&gt;

The code that I have used to solved the bug in order to continue working...
def from_disk(self, path, **kwargs):
"""Load the entity ruler from a file. Expects a file containing
newline-delimited JSON (JSONL) with one entry per line.
&lt;denchmark-code&gt;    path (unicode / Path): The JSONL file to load.
    **kwargs: Other config paramters, mostly for consistency.
    RETURNS (EntityRuler): The loaded entity ruler.

    DOCS: https://spacy.io/api/entityruler#from_disk
    """
    path = ensure_path(path)
    depr_patterns_path = path.with_suffix(".jsonl")
    if depr_patterns_path.is_file():
        patterns = srsly.read_jsonl(depr_patterns_path)
        self.add_patterns(patterns)
    else:
        cfg = {}
&lt;/denchmark-code&gt;

'---------------------------------- MODIF ---------- SPLIT SERIALIZER -----------------------------'
deserializers_patterns = {
"patterns": lambda p: self.add_patterns(
srsly.read_jsonl(p.with_suffix(".jsonl"))
)}
deserializers_cfg = {
"cfg": lambda p: cfg.update(srsly.read_json(p))
}
from_disk(path, deserializers_cfg, {})
'--------------------------------------------------------------------------------------------------------------'
self.overwrite = cfg.get("overwrite", False)
self.phrase_matcher_attr = cfg.get("phrase_matcher_attr")
self.ent_id_sep = cfg.get("ent_id_sep", DEFAULT_ENT_ID_SEP)
&lt;denchmark-code&gt;        if self.phrase_matcher_attr is not None:
            self.phrase_matcher = PhraseMatcher(
                self.nlp.vocab, attr=self.phrase_matcher_attr
            )
&lt;/denchmark-code&gt;

'---------------------------------- MODIF ---------- DESERIALIZE PATTERNS ----------------------'
from_disk(path, deserializers_patterns, {})
return self
Can anyone reproduce the error?
	</description>
	<comments>
		<comment id='1' author='GuiGel' date='2019-11-15T08:43:06Z'>
		Thanks for the report and the test case! That does look like a bug and that looks the right kind of solution, thanks! Would you like to submit a PR? (I can also do it, but if you'd like to, that would be great!)
		</comment>
		<comment id='2' author='GuiGel' date='2019-11-15T08:58:22Z'>
		Yes I can try, It will be my first PR....
		</comment>
		<comment id='3' author='GuiGel' date='2019-11-21T20:28:10Z'>
		Thanks again for the PR!
		</comment>
		<comment id='4' author='GuiGel' date='2019-12-22T00:48:10Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>