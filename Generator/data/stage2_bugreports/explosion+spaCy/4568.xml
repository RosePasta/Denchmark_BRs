<bug id='4568' author='graftim' open_date='2019-11-01T09:59:45Z' closed_time='2019-11-01T11:46:22Z'>
	<summary>Error loading german model in newest version</summary>
	<description>
In the latest version of Spacy, loading the standard model does not work:
&lt;denchmark-code&gt;&gt;&gt;&gt; spacy.load("de")
Traceback (most recent call last):
  File "pipes.pyx", line 640, in spacy.pipeline.pipes.Tagger.from_disk.load_model
  File "/data/spacy-test/lib/python3.7/site-packages/thinc/neural/_classes/model.py", line 375, in from_bytes
    dest = getattr(layer, name)
AttributeError: 'FunctionLayer' object has no attribute 'vectors'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/__init__.py", line 30, in load
    return util.load_model(name, **overrides)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/util.py", line 213, in load_model
    return load_model_from_link(name, **overrides)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/util.py", line 230, in load_model_from_link
    return cls.load(**overrides)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/data/de/__init__.py", line 12, in load
    return load_model_from_init_py(__file__, **overrides)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/util.py", line 279, in load_model_from_init_py
    return load_model_from_path(data_path, meta, **overrides)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/util.py", line 262, in load_model_from_path
    return nlp.from_disk(model_path)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/language.py", line 940, in from_disk
    util.from_disk(path, deserializers, exclude)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/util.py", line 733, in from_disk
    reader(path / key)
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/language.py", line 935, in &lt;lambda&gt;
    p, exclude=["vocab"]
  File "pipes.pyx", line 658, in spacy.pipeline.pipes.Tagger.from_disk
  File "/data/spacy-test/lib/python3.7/site-packages/spacy/util.py", line 733, in from_disk
    reader(path / key)
  File "pipes.pyx", line 638, in spacy.pipeline.pipes.Tagger.from_disk.load_model
  File "pipes.pyx", line 642, in spacy.pipeline.pipes.Tagger.from_disk.load_model
ValueError: [E149] Error deserializing model. Check that the config used to create the component matches the model being loaded.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;How to reproduce:&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;pip install spacy
python -m download de
&lt;/denchmark-code&gt;

Then fails with spacy.load("de")
&lt;denchmark-h:h2&gt;Info about spaCy&lt;/denchmark-h&gt;


spaCy version: 2.2.1
Platform: Linux-4.19.0-6-amd64-x86_64-with-debian-10.1
Python version: 3.7.3
Models: de

&lt;denchmark-h:h2&gt;Fix&lt;/denchmark-h&gt;

I can solve this problem by downgrading to spacy 2.2.1
	</description>
	<comments>
		<comment id='1' author='graftim' date='2019-11-01T10:34:47Z'>
		Thanks for the report! We'll look into it and get an update released as soon as we can.
I think the 2.2.0 German model should work if you don't want to downgrade spacy. You can download a model directly: &lt;denchmark-link:https://github.com/explosion/spacy-models/releases/download/de_core_news_sm-2.2.0/de_core_news_sm-2.2.0.tar.gz&gt;https://github.com/explosion/spacy-models/releases/download/de_core_news_sm-2.2.0/de_core_news_sm-2.2.0.tar.gz&lt;/denchmark-link&gt;

Then run pip install de_core_news_sm-2.2.0.tar.gz. This doesn't create the shortcut symlink, but if you need that you can add it by hand: spacy link de_core_news_sm de.
		</comment>
		<comment id='2' author='graftim' date='2019-11-01T10:43:30Z'>
		Thanks ;)
		</comment>
		<comment id='3' author='graftim' date='2019-11-01T11:45:49Z'>
		Sorry, this was my fault :(
Earlier I had merged a refactor of the tok2vec model config code onto master, but we wanted to cut a patch release (v2.2.2) from master and there were some backwards compatibility problems with the new code. So I restored the old function and put the new implementation behind a feature flag.
The problem is that meanwhile, I triggered retraining of a subset of the models, to incorporate new lookups data for German and Greek. Those models were trained from master, using the new tok2vec function --- which the previous implementation isn't forwards-compatible with.
We've removed those models from the compatibility table, and I'm now retriggering the training to produce replacements.
		</comment>
		<comment id='4' author='graftim' date='2019-12-01T11:57:01Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>