<bug id='1474' author='chaturv3di' open_date='2017-10-31T12:39:46Z' closed_time='2018-05-20T23:55:03Z'>
	<summary>spaCy v2.0.0 `Span.merge()` method has bugs</summary>
	<description>
[Update 1] You can now copy the above code snippet as-is in a Jupyter notebook and test.
[Update 2] This indeed seems to be a bug in v2. I do not face this problem in v1.9.0. In fact, NER in v1.9.0 already recognizes all the dates properly.
&lt;denchmark-h:h3&gt;Original message&lt;/denchmark-h&gt;

For my text corpus, spaCy NER tagger is consistently mislabeling DATE. So I have written a simple script to check whether there is a CARDINAL which is immediately followed by DATE, and if yes then I merge the two spans and apply the DATE label. Consider the following script.
`
&lt;denchmark-code&gt;import spacy
from spacy import displacy

nlp = spacy.load('en')
txt = 'In a letter dated 17 April 2007 Mr. X wrote to Mr. Y about the impending merger of \
      Big Canyon Inc. and Little Mushroom Co Ltd. questioning two stock sell-offs.\
      \n1. 01 September 2006: US$ 10000.00 worth of stocks.\
      \n2. 03 October 2006: US$ 50000.00 worth of stocks.'

doc = nlp(txt)
lastCardinal = None
for e in doc.ents:
    if e.label_ == 'CARDINAL':
        lastCardinal = e
    if e.label_ == 'DATE' and lastCardinal:
         # The script does not produce the intended output if 
         # this print statement is deleted or commented out.
         print("{} CARDINAL[{}, {}], {} DATE[{}, {}]".format(lastCardinal.text, 
                                                             lastCardinal.start, 
                                                             lastCardinal.end, 
                                                             e.text, e.start, e.end))
        if lastCardinal.end == e.start:
            # A DATE span immediately follows a CARDINAL span.
            # So merge them, and apply DATE label to the result.
            doc[lastCardinal.start:e.end].merge(label=e.label)
        lastCardinal = None

displacy.render(doc, style='ent', jupyter=True)
&lt;/denchmark-code&gt;

`
Now, if I comment out the print statement, it's as if the script is nearly ineffective . I see the following result.
&lt;denchmark-link:https://user-images.githubusercontent.com/22843902/32223791-d74f5978-be64-11e7-9c19-426ad16f7ae1.png&gt;&lt;/denchmark-link&gt;

If I execute the script as is, i.e. with the print statement, I see the intended effect of my script.
&lt;denchmark-link:https://user-images.githubusercontent.com/22843902/32223843-141c843e-be65-11e7-9890-6b7de286980a.png&gt;&lt;/denchmark-link&gt;

Note however, that the first date 17 April 2007 was affected by the script (as is seen from the output of the print statement) in both cases. But the other two dates seem unaffected in the first case.
AFAIK, there is no multi-threading at this level, which is usually a source of such unexpected behaviors. Is this a bug? How can I provide more detail to help trace it?
Thanks in advance.
&lt;denchmark-h:h2&gt;My Environment&lt;/denchmark-h&gt;


Python version: 3.5.4
Platform: Linux-4.10.0-38-generic-x86_64-with-debian-stretch-sid
spaCy version: 2.0.0a17
Models: en

	</description>
	<comments>
		<comment id='1' author='chaturv3di' date='2017-11-02T08:20:01Z'>
		It took me a little while to understand this, but yes I think there's a bug here --- thanks for pointing it out!
I think what you're showing here probably points to a memory error -- spaCy is reading to or writing to memory out-of-bounds, and that means the print statement changes the calculations.
Just to exclude something simple: could you also change the if lastCardinal conditionals to if lastCardinal is None? I don't remember whether checking bool(span) does something sensible.
		</comment>
		<comment id='2' author='chaturv3di' date='2017-11-02T08:46:57Z'>
		I tried both: lastCardinal is not None and bool(lastCardinal). I get the intended output only with the print statement in place.
		</comment>
		<comment id='3' author='chaturv3di' date='2017-11-03T08:59:49Z'>
		I dug into this a little bit more. Hopefully the below picture helps in tracing the root cause. Short of actually tweaking with the C code (of which I'm not confident), this is what I could do.
&lt;denchmark-link:https://user-images.githubusercontent.com/22843902/32366098-aee8e004-c0a2-11e7-9232-937d16068a54.png&gt;&lt;/denchmark-link&gt;

So Span.merge() method seems to be working fine(?)
		</comment>
		<comment id='4' author='chaturv3di' date='2018-05-20T23:55:03Z'>
		Merging this with &lt;denchmark-link:https://github.com/explosion/spaCy/issues/1487&gt;#1487&lt;/denchmark-link&gt;
 â€“ the  method is already included as an experimental feature in v2.0.11 and will be shipped with the coming v2.1.0 (nightly) with more features. Also see my comment in &lt;denchmark-link:https://github.com/explosion/spaCy/issues/2061&gt;#2061&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='5' author='chaturv3di' date='2018-06-20T00:46:01Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>