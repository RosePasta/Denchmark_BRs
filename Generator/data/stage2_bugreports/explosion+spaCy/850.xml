<bug id='850' author='jmugan' open_date='2017-02-20T06:59:41Z' closed_time='2017-03-11T23:35:26Z'>
	<summary>matcher doesn't match with '*' operator and Boolean flag</summary>
	<description>
I want to match anything where 'frank' follows 'bob'; e.g., 'bob and and and cat frank'.
&lt;denchmark-code&gt;IS_ANY_TOKEN = matcher.vocab.add_flag(lambda x: True)
matcher.add_pattern("FarAway",[{LOWER: "bob"},{'OP': '*', IS_ANY_TOKEN: True},{LOWER: 'frank'}])
&lt;/denchmark-code&gt;

This code does not match 'bob and and and cat frank'.
IS_ANY_TOKEN works for one token if I don't use the + or * operator. It does kind of work for the ? operator.
For example
matcher.add_pattern("FarAway",[{LOWER: "bob"},{'OP': '?',IS_ANY_TOKEN: True},{LOWER:'frank'}])
matches 'bob and frank' but not 'bob frank'.
Is this a bug or is there something obvious I am doing wrong?
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System: mac
Python Version Used: 2.7
spaCy Version Used: 1.1.2
Environment Information:

	</description>
	<comments>
		<comment id='1' author='jmugan' date='2017-02-24T12:59:56Z'>
		Hi,
Try the more recent version --- 1.6.0. Issue &lt;denchmark-link:https://github.com/explosion/spaCy/issues/766&gt;#766&lt;/denchmark-link&gt;
 might be relevant here though.
Thanks,
Matt
		</comment>
		<comment id='2' author='jmugan' date='2017-02-28T19:29:07Z'>
		Upgrading to 1.6.0 didn't fix it. I get the same behavior.
		</comment>
		<comment id='3' author='jmugan' date='2017-03-07T15:12:38Z'>
		Confirmed --- thanks for giving a test case; added it as a regression.
The bug is triggered because your variable-length pattern matches the next token as well. I implemented the matcher in a fairly hacky way, instead of as a proper DFA. This bug is a symptom of that: I'm not handling the ambiguity properly here.
I'll have a think about what to do. If I can't fix this quickly i can at least add a mitigation, that checks whether user patterns are subject to this problem.
		</comment>
		<comment id='4' author='jmugan' date='2017-03-07T15:50:18Z'>
		Difficult case to handle with the current code.
The code currently works like this:

Start with a list of potential patterns, an empty queue of open patterns, and an empty list of matches.


For each token:
1.1 For each open pattern,
1.1.1 Choose an action, apply it.
1.2 Check each potential pattern. Add matches to the open patterns.

Currently the * operator triggers the REPEAT action, which keeps the pattern in the queue, at the same position. This way, we'll check the same again on the next token in the document. This is wrong: we need to keep it on the queue, but we also need to open another option. None of the other actions cause this to happen, and I didn't think of this case ahead of time.
There are a few fixes that could be applied here, and in the short term none of them seem terribly complicated. But I'm hesitating a bit, because it feels like we're in a hole here, and it might not be smart to keep digging. It might be better to redesign this, instead of programming our way out of the immediate problem.
		</comment>
		<comment id='5' author='jmugan' date='2017-03-11T23:35:26Z'>
		Moving discussion to &lt;denchmark-link:https://github.com/explosion/spaCy/issues/864&gt;#864&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='jmugan' date='2018-05-09T02:38:33Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>