<bug id='3526' author='chingan-tsc' open_date='2019-04-02T03:33:59Z' closed_time='2019-07-08T15:28:29Z'>
	<summary>Saving model with EntityRuler pipeline doesn't preserve the overwrite flag</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

    # Create the model
    nlp = spacy.load("xx")
    ruler = EntityRuler(nlp, overwrite_ents=True)
    ruler.add_patterns([{"label": "ORG", "pattern": "Apple"}])
    nlp.add_pipe(ruler)
    nlp.to_disk("test_model")

    print(nlp.pipeline)
    print(nlp.pipeline[-1][-1].patterns)
    print(nlp.pipeline[-1][-1].overwrite) # This prints True

    # Load the saved model
    nlp3 = spacy.load("test_model")
    print(nlp3.pipeline)
    print(nlp3.pipeline[-1][-1].patterns)
    print(nlp3.pipeline[-1][-1].overwrite) # This prints False
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System: Mac Mojave
Python Version Used: 3.6
spaCy Version Used: 2.1.3
Environment Information:

I am trying to use EntityRuler by adding it to the existing xx model and saving the model to disk as described in the docs but I noticed after reloading the model from disk the overwrite_ents flag is not preserved. Any ideas?
	</description>
	<comments>
		<comment id='1' author='chingan-tsc' date='2019-04-02T09:04:36Z'>
		Thanks, good point! It looks like we're currently not serializing the config of the component. So we should probably be writing out an additional  or something like that and also include that information in the serialized bytes, similar to how the  is doing it (&lt;denchmark-link:https://github.com/explosion/spaCy/blob/24cecdb44fe7349f7382dddeeb6ce047c32db813/spacy/pipeline/pipes.pyx#L1156&gt;see here&lt;/denchmark-link&gt;
).
In the meantime, you should be able to overwrite it manually after loading the model:
nlp = spacy.load("test_model")
ruler = nlp.get_pipe("entity_ruler")
ruler.overwrite_ents = True
		</comment>
		<comment id='2' author='chingan-tsc' date='2019-04-02T09:43:57Z'>
		Yeah I am actually am doing that right now as a workaround solution. Thanks for the advice.
		</comment>
		<comment id='3' author='chingan-tsc' date='2019-08-07T15:42:26Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>