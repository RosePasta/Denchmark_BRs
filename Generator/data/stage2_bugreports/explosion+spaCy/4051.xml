<bug id='4051' author='prashantbudania' open_date='2019-07-30T22:46:02Z' closed_time='2019-09-08T11:04:50Z'>
	<summary>Retokenizer not setting POS tags correctly</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

I am trying to merge entities and noun chunks for a custom application without having to use merge_entities or merge_noun_chunks pipeline. But the pos tag information is inaccurate. Here's one example:
&lt;denchmark-code&gt;import spacy 
from spacy import displacy
from spacy.util import filter_spans

nlp = spacy.load('en_2.1.0_md')
doc = nlp("While our net charge-off rate improved from a year ago, our provision expense increased due to a $150 million reserve build in the first quarter of 2019 compared with a $550 million reserve release a year ago.")

spans = list(doc.ents) + list(doc.noun_chunks)
spans = filter_spans(spans)

with doc.retokenize() as retokenizer:
    for span in spans:
        retokenizer.merge(span)

for i, tkn in enumerate(doc):
    print("{:&lt;2}{:&lt;2}{:&lt;32}{:&lt;2}{:&lt;8}{:&lt;2}{:&lt;8}{:&lt;2}{:&lt;2}".format(i, '|', tkn.text, '|', tkn.pos_, '|', tkn.dep_, '|', tkn.ent_type_))
&lt;/denchmark-code&gt;

But if I specifically set the pos attribute to be the same as the root's attribute, it works fine:
&lt;denchmark-code&gt;with doc.retokenize() as retokenizer:
    for span in spans:
        retokenizer.merge(span, attrs={"POS": span.root.pos_})
&lt;/denchmark-code&gt;

I remember this being the default behaviour in 2.0. And also, even after the fix, displacy would show the incorrect pos tag information:
&lt;denchmark-code&gt;displacy.render(doc, style='dep')
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System: MacOS
Python Version Used: 3.6
spaCy Version Used: 2.1.4

	</description>
	<comments>
		<comment id='1' author='prashantbudania' date='2019-07-31T08:46:21Z'>
		Thanks for the report. I think what you're obversing here in displaCy might be related to a recent change that made the pos attribute writable (but possibly doesn't always account for the pos → tag) relationship. What happens if you set both the POS and the TAG?
And yes, I do think it makes sense for those attribute to default to the root – not sure why this isn't happening here.
		</comment>
		<comment id='2' author='prashantbudania' date='2019-07-31T14:44:38Z'>
		Yeah, it works fine if both the POS and the TAG attributes are set.
		</comment>
		<comment id='3' author='prashantbudania' date='2019-10-08T11:42:58Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>