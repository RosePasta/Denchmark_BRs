<bug id='6261' author='pmbaumgartner' open_date='2020-10-16T00:30:54Z' closed_time='2020-10-20T08:06:15Z'>
	<summary>Should spaCy 3.0 require jinja2? (spacy-nightly)</summary>
	<description>
Following the Training &lt;denchmark-link:https://nightly.spacy.io/usage/training&gt;Quickstart&lt;/denchmark-link&gt;
, I came to the step about initializing the config and got this error:
python -m spacy init config base_config.cfg                                                                                                                                                     
‚úò This command requires jinja2
My personal expectation is that something provided as a "Quickstart" should be fully executable from start to finish without installing additional packages or undocumented intermediate steps (even if the very helpful error message specifically directs me to the solution üòÅ). Even if adding jinja to the requirements is undesirable, I think a line in the docs to expect this (or an additional install jinja step) would be nice.
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


spaCy version: 3.0.0rc1
Platform: macOS-10.14.6-x86_64-i386-64bit
Python version: 3.8.6
Pipelines: en_core_web_lg (3.0.0a0), en_core_web_trf (3.0.0a0)

	</description>
	<comments>
		<comment id='1' author='pmbaumgartner' date='2020-10-16T06:40:07Z'>
		Good point! I think we should just add it to the dependencies because this is a pretty core CLI command now, but I'll wait to see what the others think.
After some minimal testing, the earliest version I could get to work was 2.7, but we might want to have a tighter range based on some of the bug fixes. Maybe jinja2&gt;=2.10.1,&lt;3.0?
		</comment>
		<comment id='2' author='pmbaumgartner' date='2020-10-16T13:51:55Z'>
		
Good point! I think we should just add it to the dependencies because this is a pretty core CLI command now, but I'll wait to see what the others think.

Yeah, I think &lt;denchmark-link:https://github.com/pmbaumgartner&gt;@pmbaumgartner&lt;/denchmark-link&gt;
 is right and we should just suck it up and add the extra dependency  We're generally very cautious when it comes to introducing new dependencies and it feels weird to introduce a runtime dependency for a single command... but then again, it's a core workflow and  is fairly standard anyways and many other packages require it, too.
		</comment>
	</comments>
</bug>