<bug id='934' author='jreeter' open_date='2017-03-28T04:18:25Z' closed_time='2017-03-31T07:04:57Z'>
	<summary>Linking to model success but not visible under spacy info.</summary>
	<description>
I have downloaded the md model and running the link with:
&lt;denchmark-code&gt;PS C:\dev\rasa_nlu&gt; python -m spacy link c:\Python27\Lib\site-packages\en_core_web_sm en --force
Invalid switch - "Python27".

    Linking successful

    c:/Python27/Lib/site-packages/en_core_web_sm --&gt;
    C:/Python27/lib/site-packages/spacy/data/en

    You can now load the model via spacy.load('en').
&lt;/denchmark-code&gt;

However it doesn't seem to be linked under spacy :
    Info about spaCy

    Python version     2.7.13
    Platform           Windows-10-10.0.14393
    spaCy version      1.7.3
    Installed models
    Location           C:\Python27\lib\site-packages\spacy
&lt;denchmark-h:h2&gt;Info about spaCy&lt;/denchmark-h&gt;


Python version: 2.7.13
Platform: Windows-10-10.0.14393
spaCy version: 1.7.3
Installed models:

	</description>
	<comments>
		<comment id='1' author='jreeter' date='2017-03-28T09:50:05Z'>
		Thanks for the report! This is interesting... I need to test this, might be related to the  issues with symlinks on Windows / Python 2 (see &lt;denchmark-link:https://github.com/explosion/spaCy/issues/909&gt;#909&lt;/denchmark-link&gt;
). Maybe the symlinks are not recognised correctly as directories &lt;denchmark-link:https://github.com/explosion/spaCy/blob/master/spacy/cli/info.py#L52&gt;here&lt;/denchmark-link&gt;
 (which, according to , should work fine).
When you have a second, could you run the following code and tell me if it's getting the paths correctly and if not, which one fails / returns an empty list?
from spacy.util import get_data_path

data_path = get_data_path()
print([p for p in data_path.iterdir()])
print([p for p in data_path.iterdir() if p.is_dir()])
print([p.parts[-1] for p in data_path.iterdir()])
print([p.parts[-1] for p in data_path.iterdir() if p.is_dir()])
		</comment>
		<comment id='2' author='jreeter' date='2017-03-29T03:18:21Z'>
		&lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
 per your request:
&lt;denchmark-code&gt;PS C:\dev\rasa_nlu&gt; python .\ines.py
[WindowsPath('C:/Python27/lib/site-packages/spacy/data/__init__.py'), WindowsPath('C:/Python27/lib/site-packages/spacy/data/__init__.pyc')]
[]
['__init__.py', '__init__.pyc']
[]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='jreeter' date='2017-03-29T08:01:16Z'>
		Thanks! So it looks like the is_dir isn't actually the problem here and the symlink simply wasn't created in the first place. (And the success message shouldn't have been displayed, because clearly, it wasn't successful. Hm.)
I think the problem might be this:
&lt;denchmark-code&gt;Invalid switch - "Python27".
&lt;/denchmark-code&gt;

It somehow seems to be confused by the Windows path and thinks it's supposed to be a switch. What happens if you put the local path in quotes?
		</comment>
		<comment id='4' author='jreeter' date='2017-03-30T02:25:27Z'>
		&lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
 Same result
&lt;denchmark-code&gt;PS C:\dev\rasa_nlu&gt; python -m spacy link "c:\Python27\Lib\site-packages\en_core_web_sm" en
Invalid switch - "Python27".

    Linking successful

    c:/Python27/Lib/site-packages/en_core_web_sm --&gt;
    C:/Python27/lib/site-packages/spacy/data/en

    You can now load the model via spacy.load('en').

PS C:\dev\rasa_nlu&gt; python -m spacy info

    Info about spaCy

    Python version     2.7.13
    Platform           Windows-10-10.0.14393
    spaCy version      1.7.3
    Installed models
    Location           C:\Python27\lib\site-packages\spacy
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='jreeter' date='2017-03-31T03:18:55Z'>
		&lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
 digging around some more I noticed that in the util\link code it tests for python 2.x and if os is windows, it tries to use mlink.
&lt;denchmark-code&gt;if util.is_python2() and util.is_windows():
        import subprocess
        command = ['mklink', '/d', link_path.as_posix(), model_path.as_posix()]
        subprocess.call(command, shell=True)
&lt;/denchmark-code&gt;



mklink doesn't seem to be recognized by Powershell not sure if the executing link.py in Powershell will execute the call to mklink subprocess in Powershell as well. If it does then that's an issue.


mklink expects the link and targets paths to use the windows back slash convention. Other wise you get the invalid switch  error as seen above. So correct me if I am wrong but calling .as_posix() under the windows env is not correct.


I was able to manually link my model by calling the follow in cmd prompt (not powershell):
mklink /d C:\Python27\lib\site-packages\spacy\data\en c:\dev\rasa_nlu\en_core_web_md
Which resulted in spaCy recognizing my installed model:
&lt;denchmark-code&gt;PS C:\dev\rasa_nlu&gt; python -m spacy info

    Info about spaCy

    Python version     2.7.13
    Platform           Windows-10-10.0.14393
    spaCy version      1.7.3
    Installed models    en
    Location           C:\Python27\lib\site-packages\spacy
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='jreeter' date='2017-03-31T04:57:55Z'>
		I have submitted a pull request to fix the issue of bad paths sent to mklink: &lt;denchmark-link:https://github.com/explosion/spaCy/pull/942&gt;#942&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='jreeter' date='2017-03-31T07:03:23Z'>
		Thanks so much for your analysis and submitting the PR üëç
The  fix originates from the symlink issues described in &lt;denchmark-link:https://github.com/explosion/spaCy/issues/909&gt;#909&lt;/denchmark-link&gt;
 and it seems to have solved the issue for this particular case. So I can only guess that in some setups,  is resolved correctly to the backslash Windows path, and in others, like yours, it isn't?
I hope there's no other pathlib bug or weirdness going on here and the Path is really interpreted correctly across Windows versions etc. Otherwise we might have to introduce some additional checks.
		</comment>
		<comment id='8' author='jreeter' date='2018-05-09T01:38:17Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>