<bug id='3830' author='wbwseeker' open_date='2019-06-07T10:17:44Z' closed_time='2019-08-23T15:54:04Z'>
	<summary>German model leaks internal symbol and can't seem to handle quotes as before</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

Parse the following sentence with de_core_news_sm, spacy version 2.1.4:
Kaufen Sie diese schöne "Altbau-Wohnung". (quotes are important)
I get the following parse:
&lt;denchmark-code&gt;0	Kaufen	Kaufen	VVFIN	0	ROOT
1	Sie	ich	PPER	0	sb

2	diese	dies	PDAT	5	nk
3	schöne	schöne	ADJA	5	nk
4	"	"	XY	3	cd
5	Altbau-Wohnung	Altbau-Wohnung	NN	5	ROOT

6	"	"	XY	7	subtok
7	.	.	$.	7	ROOT
&lt;/denchmark-code&gt;

The PoS tags and dependency labels for the quotation marks are incorrect. The label "subtok" doesn't even exist in the German TiGer treebank. The messed-up sentence boundaries are probably a follow-up error.
For comparison: with spacy version 2.0.9 and the same model (de_core_news_sm), I get the correct analysis:
&lt;denchmark-code&gt;0	Kaufen	Kaufen	VVFIN	0	ROOT
1	Sie	Sie	PPER	0	sb
2	diese	dies	PDAT	5	nk
3	schöne	schöne	ADJA	5	nk
4	"	"	$.	3	punct
5	Altbau-Wohnung	Altbau-Wohnung	NN	0	oa
6	"	"	$.	5	punct
7	.	.	$.	0	punct
&lt;/denchmark-code&gt;

I have a couple of ideas/thoughts why this happens. They may be wrong since I don't know exactly how the model was trained but maybe they can help you find the problem:

Quotation marks should actually be easy to annotate (at least pos-tag) since they always get the same annotation. However, in the TiGer corpus (which used to be the training data), the double quote (") doesn't actually exist but was replaced with `` and '' (two single quotes) to mark leading and closing quotation marks. For the first German spacy model, the TiGer quotes were randomly replaced so the model would learn the other quotation marks as well. Since the parser seems to have a problem with even recognizing it as a quotation mark (labeling it as XY instead of $.), maybe this or other preprocessing went wrong.
"subtok" is not a dependency label in the dependency version of the TiGer corpus. Without having dug deeper into the code, it looks to me like some kind of internal label of the parser that is leaking out.

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


spaCy version: 2.1.4
Platform: Darwin-16.3.0-x86_64-i386-64bit
Python version: 3.6.6

Thanks a lot and please keep up the great work!
	</description>
	<comments>
		<comment id='1' author='wbwseeker' date='2019-06-07T18:38:56Z'>
		Thanks for the report. I'd say your analysis is definitely correct. The replacement rules have gone missing from the training procedure, leading to the poor performance. We need to annotate some small auxiliary corpora so that our evaluation metrics are more robust. The root problem is that we're only evaluating on a corpus that's pre-processed the same way as the training data.
The subtok thing is an additional bug. In v2.1, the parser has a mode where it's able to learn a special symbol, subtok, so that it can partially do joint tokenization and parsing. There's a setting that can be enabled during training which allows this to occur. If this setting is enabled, there should be a post-process that runs after parsing, to merge the tokens as indicated by the subtok label.
So the parser is really predicting that ". is a single token, that's been incorrectly tokenized. The tokenizer does sometimes over-segment punctuation, so I can see how it's come up with this solution given that it doesn't know about the " quote character. The bug is that the merge_subtokens post-process isn't triggering.
There are two places we could put this post-process. It could run as a pipeline component, or it can run the same way the deprojectivize function runs, as part of the parser.postprocesses list. I think it's better to put it in postprocesses.
		</comment>
		<comment id='2' author='wbwseeker' date='2019-06-09T10:32:55Z'>
		Hmm the subtok symbol gets added to the gold standard and the parser even if that flag isn't set. Damn.
		</comment>
		<comment id='3' author='wbwseeker' date='2019-09-22T16:42:50Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>