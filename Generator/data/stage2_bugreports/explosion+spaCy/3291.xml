<bug id='3291' author='tomkomt' open_date='2019-02-19T08:45:56Z' closed_time='2019-02-19T09:37:07Z'>
	<summary>match_id from Matcher in v2.1.0a7 doesn't alway works for StringStore</summary>
	<description>
Hello,
I have this weird behaviour. I am using spacy-nightly v2.1.0a7 with Python3 running following code:

import spacy
from spacy.tokens import Token, Doc, Span
from spacy.matcher import Matcher, PhraseMatcher
def main():
pipeline = spacy.load('en', disable=['ner'])
matcher = Matcher(pipeline.vocab)
pattern = [
    {'ORTH': 'I'},
    {'ORTH': 'have'},
    {'_': {'Extension_1': 'True'}, 'OP':'*'}
]
patterns = []
patterns.append(pattern)
matcher.add('1234ABCD', None, *patterns)

doc = pipeline(u"I have issues issues issues issues")

Token.set_extension('Extension_1', default=False)
Doc.set_extension('Extension_1', default=[])
[token._.set('Extension_1', 'True') for token in Span(doc, 2, 3)]
[token._.set('Extension_1', 'True') for token in Span(doc, 3, 4)]
[token._.set('Extension_1', 'True') for token in Span(doc, 4, 5)]
[token._.set('Extension_1', 'True') for token in Span(doc, 5, 6)]

matches = matcher(doc)
for match_id, start, end in matches:
    try:
        span = Span(doc, start, end, label=match_id)
        print(span.text)
    except (ValueError, KeyError) as error:
        print(error)
        pass

main()

(Sorry, code wrapper doesn't work properly with this bit)
It will produce following results:

I have
I have issues
I have issues issues
I have issues issues issues
[E084] Error assigning label ID 5764616307934706824 to span: not in StringStore.

However, if I don't try to fetch Span, but print doc[start:end], it works. Unfortunately it's not a solution for following actions, like span.merge and etc.
Expected result:

I have
I have issues
I have issues issues
I have issues issues issues
I have issues issues issues issues

If you replace pattern {'_': {'Extension_1': 'True'}, 'OP':'*'} with {'ORTH':'issues', 'OP':'*'}, you will get an expected result.
spacy version: spacy-nightly v2.1.0a7
python: Python 3.7.2 64-bit
OS: macOS High Sierra 10.13.6
	</description>
	<comments>
		<comment id='1' author='tomkomt' date='2019-02-19T09:37:06Z'>
		Thanks for the report! I think what you're experiencing here is similar to another problem that was reported in &lt;denchmark-link:https://github.com/explosion/spaCy/issues/1971&gt;#1971&lt;/denchmark-link&gt;
, which I've outlined in this (xfailing) test:



spaCy/spacy/tests/regression/test_issue1971.py


        Lines 9 to 25
      in
      3b66778






 @pytest.mark.xfail 



 def test_issue1971(en_vocab): 



 # Possibly related to #2675 and #2671? 



 matcher = Matcher(en_vocab) 



 pattern = [ 



         {"ORTH": "Doe"}, 



         {"ORTH": "!", "OP": "?"}, 



         {"_": {"optional": True}, "OP": "?"}, 



         {"ORTH": "!", "OP": "?"}, 



     ] 



 Token.set_extension("optional", default=False) 



 matcher.add("TEST", None, pattern) 



 doc = Doc(en_vocab, words=["Hello", "John", "Doe", "!"]) 



 # We could also assert length 1 here, but this is more conclusive, because 



 # the real problem here is that it returns a duplicate match for a match_id 



 # that's not actually in the vocab! 



 assert all(match_id in en_vocab.strings for match_id, start, end in matcher(doc)) 





Basically, the  seems to create "ghost matches" that don't actually have the true match ID, which is why looking it up in the string store fails. I'll merge this issue with &lt;denchmark-link:https://github.com/explosion/spaCy/issues/1971&gt;#1971&lt;/denchmark-link&gt;
 â€“ I suspect there might be one or two bugs in the new match patterns implementation that pretty much account for all of the reported problematic cases.
		</comment>
		<comment id='2' author='tomkomt' date='2019-02-19T09:39:13Z'>
		Ok, thank you
		</comment>
		<comment id='3' author='tomkomt' date='2019-02-19T12:56:47Z'>
		&lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
 Is there any kind of workaround when I have this ghost match? How reliable it would be to use the last working match Id, for example?
		</comment>
		<comment id='4' author='tomkomt' date='2019-03-21T13:38:10Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>