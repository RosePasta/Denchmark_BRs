<bug id='5648' author='Redds2' open_date='2020-06-25T11:28:18Z' closed_time='2020-06-26T07:23:22Z'>
	<summary>part of speech tagger training example from documentation doesn't seem to work after update</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/explosion/spaCy/blob/master/examples/training/train_parser.py&gt;https://github.com/explosion/spaCy/blob/master/examples/training/train_parser.py&lt;/denchmark-link&gt;

It worked fine for version 2.0.16, now I have tried it using v2.3.0 and faced the following problem: on every iteration loss is zero, the resulting model assigns '_SP' tag to every token.
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


spaCy version: 2.3.0
Platform: Windows-10-10.0.18362-SP0
Python version: 3.8.3

	</description>
	<comments>
		<comment id='1' author='Redds2' date='2020-06-25T11:55:56Z'>
		I ran across this bug yesterday (see &lt;denchmark-link:https://github.com/explosion/spaCy/pull/5641&gt;#5641&lt;/denchmark-link&gt;
) and it should be fixed in the next release, v2.3.1.
		</comment>
		<comment id='2' author='Redds2' date='2020-06-25T12:08:33Z'>
		Sorry, my first reply was a bit curt. Thanks for the report!
The only workaround in v2.3.0 is to use the internal spacy JSON training format and train from a GoldCorpus instead of the simplified training format that's used in the example scripts. With the spacy JSON training format you can use the train CLI, which is also what we use internally. Then it reads the tags from the training data (instead of using tagger.add_label) and doesn't have this bug when it initializes the tag map. The main difference is that tagger.begin_training() goes through all the training example to look for which tags to add:
&lt;denchmark-code&gt;nlp.begin_training(lambda: gold_corpus.train_tuples)
&lt;/denchmark-code&gt;

We should probably try to have some automatic checks that run on the example scripts before each release to catch bugs like this sooner.
		</comment>
	</comments>
</bug>