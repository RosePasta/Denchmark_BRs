<bug id='3338' author='mr-bjerre' open_date='2019-02-27T07:41:25Z' closed_time='2019-03-08T22:15:35Z'>
	<summary>EntityRuler bugs and docs</summary>
	<description>
I made som comments in &lt;denchmark-link:https://github.com/explosion/spaCy/pull/2513&gt;2513&lt;/denchmark-link&gt;
, but it's probably better to add them here.
First of all - very neat new feature for sure! I am gonna refactor my code to simplify things a lot.


Accepts both token patterns (one dict per token describing its attributes) or phrase patterns (exact string matches).



How do you add one or the other matcher? Is that just giving it either a string or a list as pattern? I see that phrase matcher can match on token attributes as well. How would I then do that here if I can only submit a str and not a dict?


NEW: Allow PhraseMatcher to match on token attributes other than ORTH, e.g. LOWER (for case-insensitive matching) or even POS or TAG.



How does it handle overlapping matches? Say it matches United and United States in United States is a country. Will this be true: [ent for ent in doc.ents] == ['United States', ] or what will be the output of doc.ents?


I get this error inconsistently when running nlp(text) where EntityRuler is in my pipeline. How can I check what is wrong? If I get error with source code A then I change it to B and run it. It might work. I change it back to A and then it still works. So I'm clueless here. It seems to be related to having multiple optional wildcards after eachother in a pattern, {'OP': '?'}, {'OP': '?'}. Using {'OP': '*'} seems to give the same issue.
ValueError: [E084] Error assigning label ID 39067104 to span: not in StringStore.


And now I also come across this one. Can't really narrow down whats going on. Maybe you can advice on how to investigate?
Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)


&lt;denchmark-h:h2&gt;Info about spaCy&lt;/denchmark-h&gt;


spaCy version: 2.1.0a9
Platform: Linux-4.15.0-45-generic-x86_64-with-Ubuntu-18.04-bionic
Python version: 3.6.7
Models: en

	</description>
	<comments>
		<comment id='1' author='mr-bjerre' date='2019-02-27T09:24:44Z'>
		Have you seen the alpha docs on the EntityRuler yet? They should answer some of the questions you have on how it behaves and how to overwrite existing entities.

https://spacy.netlify.com/usage/rule-based-matching#entityruler
https://spacy.netlify.com/api/entityruler

And do you have a simple, reproducible example for 3 and 4?
		</comment>
		<comment id='2' author='mr-bjerre' date='2019-02-27T09:31:01Z'>
		Uhh alpha notes. Didn't know they existed! - thanks.
But they don't answer how to use the PhraseMatcher on token attributes since I can only use a str as pattern? I don't really see them answering what it does on overlapping matches either but it seems to prioritize superspans (not spans part of other matched spans). Can you confirm?
Right now I don't have reproducible examples since my examples are quite large and can't seem to figure out when the errors happens but I'll work on some examples now.
		</comment>
		<comment id='3' author='mr-bjerre' date='2019-02-27T10:09:11Z'>
		
But they don't answer how to use the PhraseMatcher on token attributes since I can only use a str as pattern?

Oh, I think I missed that. At the moment, that's not supported – the entity ruler can either do token patterns or exact string matches. Anything else (like Doc objects) wouldn't work because the patterns need to be JSON-serializable. So if you want to match on other attributes, you'd have to use token patterns instead.

I don't really see them answering what it does on overlapping matches either but it seems to prioritize superspans (not spans part of other matched spans). Can you confirm?

Yes, in the case of the entity ruler, keep in mind that each token can only be part of one entity span. So it prioritises the largest span matched by the patterns and if you have two identical matches, I think it adds whichever comes first. If overwrite_ents=True is set, existing entities in doc.ents (like the ones set by the statistical entity recognizer) are overwritten if necessary.
It might be good to add a note about this to the docs as well, but in general, entity ruler patterns should be straightforward. Even if it's technically possible, you probably want to avoid using very complex patterns with operators and quantifiers etc. because this can easily make your patterns unpredictable. If you're just matching over your text, that's one thing – but here, you're trying to make a definitive decision about each token's entity tag. You'd rather have 10,000 exact string matches than 20 patterns with operator, wildcard token slots etc.

Right now I don't have reproducible examples since my examples are quite large and can't seem to figure out when the errors happens but I'll work on some examples now.

No worries! The segfault (the SIGSEGV one) is a C-level error and definitely very interesting. It indicates that the underlying objects may end up in a weird state – like, if there are already existing entities set and the overwriting doesn't work properly, of if we're not accounting for overlaps correctly.

ValueError: [E084]

Could you check the traceback and see where exactly that error is raised?
		</comment>
		<comment id='4' author='mr-bjerre' date='2019-03-08T22:15:35Z'>
		Merging this with &lt;denchmark-link:https://github.com/explosion/spaCy/issues/3338&gt;#3338&lt;/denchmark-link&gt;
 so we have the entity ruler segfault stuff in one place!
		</comment>
		<comment id='5' author='mr-bjerre' date='2019-04-07T22:29:32Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>