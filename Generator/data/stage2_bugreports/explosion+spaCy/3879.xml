<bug id='3879' author='marina-sp' open_date='2019-06-25T12:14:42Z' closed_time='2019-08-20T14:42:45Z'>
	<summary>False positive matches on subsequent OPs in the Matcher patterns</summary>
	<description>
Hello, I'm working with spacy a lot, and I especially like the spacy.matchers! But I think I found something that is not working properly (yet).
If a pattern contains a pattern element with a specified OP followed by another optional pattern element with OP=?, then all other restrictions one the first element (like ORTH or REGEX) are ignored.
&lt;denchmark-h:h2&gt;How to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;
import spacy
import de_core_news_sm
from spacy.matcher import Matcher

nlp = de_core_news_sm.load()

text = 'Das ist ein Test.'
doc = nlp(text)
assert(len(doc) == 5)

pattern1 = [
    {'ORTH': 'Das', 'OP': '?'}, 
    {'OP': '?'},
    {'ORTH': 'Test'}
]
matcher = Matcher(nlp.vocab)
matcher.add('rule1', None, pattern1)
matches = matcher(doc) 
assert(len(matches) == 2)   # fails because of a FP match 'ist ein Test'
&lt;/denchmark-code&gt;


False positives appear on other OPs as well:
pattern2 = [
    {'ORTH': 'Das', 'OP': '+'}, 
    {'OP': '?'},
    {'ORTH': 'Test'}
]
matcher = Matcher(nlp.vocab)
matcher.add('rule1', None, pattern2)
matches = matcher(doc) 
assert(len(matches) == 0)   # fails because of a FP match 'Das ist ein Test'

pattern3 = [
    {'ORTH': 'Das', 'OP': '*'}, 
    {'OP': '?'},
    {'ORTH': 'Test'}
]
matcher = Matcher(nlp.vocab)
matcher.add('rule1', None, pattern3)
matches = matcher(doc) 
assert(len(matches) == 2)   # fails because of a 2 FP matches 'Das ist ein Test' and 'ist ein Test'

The ? operator seems to respect ORTH restrictions normally, when there is only a single operator:
pattern4 = [
    {'ORTH': 'Das', 'OP': '?'}, 
    {'ORTH': 'Test'}
]
matcher = Matcher(nlp.vocab)
matcher.add('rule1', None, pattern4)
matches = matcher(doc) 
assert(len(matches) == 1) 


&lt;denchmark-h:h2&gt;My Environment&lt;/denchmark-h&gt;


spaCy version: 2.1.4
Platform: Windows-10-10.0.17763-SP0
Python version: 3.7.3

I hope this is helpful and you will be able to look into it. Thank you in advance!
	</description>
	<comments>
		<comment id='1' author='marina-sp' date='2019-07-10T12:07:30Z'>
		Thanks for the report. I think this is the same bug as &lt;denchmark-link:https://github.com/explosion/spaCy/issues/3839&gt;#3839&lt;/denchmark-link&gt;
. Merging this with that issue.
		</comment>
		<comment id='2' author='marina-sp' date='2019-07-16T13:50:52Z'>
		It seems as the fix that fixed &lt;denchmark-link:https://github.com/explosion/spaCy/issues/3839&gt;#3839&lt;/denchmark-link&gt;
, did not fix this issue.
The above snippet still fails with v2.1.6
		</comment>
		<comment id='3' author='marina-sp' date='2019-08-08T14:57:43Z'>
		&lt;denchmark-link:https://github.com/paulrinckens&gt;@paulrinckens&lt;/denchmark-link&gt;
 : you're right, the matcher still produces one false positive match by misinterpreting  the first token of the pattern. Reopening and wrote a unit test with &lt;denchmark-link:https://github.com/marina-sp&gt;@marina-sp&lt;/denchmark-link&gt;
's example.
		</comment>
		<comment id='4' author='marina-sp' date='2019-08-20T14:42:45Z'>
		Merging this with &lt;denchmark-link:https://github.com/explosion/spaCy/issues/4154&gt;#4154&lt;/denchmark-link&gt;
!
		</comment>
		<comment id='5' author='marina-sp' date='2019-09-19T15:42:54Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>