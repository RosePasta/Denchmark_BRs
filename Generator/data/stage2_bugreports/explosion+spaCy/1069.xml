<bug id='1069' author='raphael0202' open_date='2017-05-18T07:47:01Z' closed_time='2017-07-21T23:15:58Z'>
	<summary>`Doc.sents` returns a generator even when a non-co-routine user-hook is defined</summary>
	<description>
Here is a snippet to reproduce the bug:
&lt;denchmark-code&gt;import spacy

class SentenceBoundaryDetector:
    def __init__(self, model):
        self._model = model

    def __call__(self, doc):
        doc.user_hooks['sents'] = self.sents

    @staticmethod
    def sents(doc):
        print("In SentenceBoundaryDetector.sents")
        return list(range(5))


def load_nlp(lang_id='en'):
    def create_pipeline(nlp):
        return [nlp.tagger, nlp.entity, SentenceBoundaryDetector('test')]
    return spacy.load(lang_id, create_pipeline=create_pipeline)

nlp = load_nlp('fr')
doc = nlp("Here is a sentence. Here is another one.")

print(doc.sents)
print(list(doc.sents))
&lt;/denchmark-code&gt;

Stdout:
&lt;denchmark-code&gt;&lt;generator object at 0x7fe916f028c8&gt;
In SentenceBoundaryDetector.sents
[]
&lt;/denchmark-code&gt;

The problem comes from Doc.sents being a generator, so returning self.user_hooks['sents'](self) (line 434) break the generator, which is therefore empty.
We need to iterate over self.user_hooks['sents'](self), and yield each sentence from this.
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System: linux
Python Version Used: 3.5
spaCy Version Used: HEAD
Environment Information:

	</description>
	<comments>
		<comment id='1' author='raphael0202' date='2018-05-08T19:27:39Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>