<bug id='4569' author='filievski' open_date='2019-11-01T11:46:01Z' closed_time='2019-11-04T09:17:31Z'>
	<summary>spacy.gold.align function misses some mappings</summary>
	<description>
The aligning function seems to work good in most cases, but for some reason, it fails in the case below. Namely, it is unable to map the first two SpaCy tokens to the initial 6 BERT tokens.
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;    bert_tokens=['[CLS]', 'Sy', '##mpi', '##esis', 'kara', '##gios', '##is', 'is', 'een', 'vliesvleugelig', 'insect', 'uit', 'de', 'familie', 'Eulophidae', '.', '[SEP]']
    our_tokens=['Sympiesis', 'karagiosis', 'is', 'een', 'vliesvleugelig', 'insect', 'uit', 'de', 'familie', 'Eulophidae', '.']
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System: Ubuntu 18.04
Python Version Used: 3.7
spaCy Version Used: 2.1.4

	</description>
	<comments>
		<comment id='1' author='filievski' date='2019-11-01T14:51:09Z'>
		The  function is intended to align raw texts with a sequence of tokens where the tokens are identical or nearly identical to the raw text other than whitespace and things like ASCII vs. unicode quotes. It is a little buggy (see &lt;denchmark-link:https://github.com/explosion/spaCy/issues/4554&gt;#4554&lt;/denchmark-link&gt;
) and we're working on updating it. This is definitely a bug and it's a good test case to add, thanks!
If you strip the special tokens and characters, you could try the newer, simpler align function in v2.2.2 that only handles cases where the character strings are identical other than whitespace:
&lt;denchmark-code&gt;# set this flag to switch to the newer function
spacy.gold.USE_NEW_ALIGN = True
cleaned_bert_tokens = ['', 'Sy', 'mpi', 'esis', 'kara', 'gios', 'is', 'is', 'een', 'vliesvleugelig', 'insect', 'uit', 'de', 'familie', 'Eulophidae', '.', '']
cost, i2j, j2i, i2j_multi, j2i_multi = spacy.gold.align(cleaned_bert_tokens, our_tokens)
assert list(i2j) == [-1, -1, -1, -1, -1, -1, -1,  2,  3,  4,  5,  6,  7,  8,  9, 10, -1]
assert i2j_multi == {1: 0, 2: 0, 3: 0, 4: 1, 5: 1, 6: 1}
&lt;/denchmark-code&gt;

This is just for testing right now and we're not making any promises about how this will work in future versions of spacy. Spacy isn't intending to provide a general-purpose alignment tool with this functionality, so in general I'd recommend using another library that's focused on string alignment.
		</comment>
		<comment id='2' author='filievski' date='2019-11-02T08:58:50Z'>
		Thanks! Indeed, this specific example seems to work in v2.2.2.
And I understand that it is not spacy's intent to provide an alignment tool.
In case you have any such library for string alignment in mind, please share.
And, feel free to close the issue.
		</comment>
		<comment id='3' author='filievski' date='2019-11-04T09:17:31Z'>
		I'm afraid I'm not familiar enough with python string alignment libraries to make any recommendations.
I'm a little confused about why you're doing string alignment at all in this case when it's easy to use the special characters/tokens to do the alignment, but maybe this is just an example? In any case, spacy is not the right tool for this.
		</comment>
		<comment id='4' author='filievski' date='2019-12-04T10:05:34Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>