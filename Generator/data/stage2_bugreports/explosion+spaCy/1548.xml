<bug id='1548' author='thomasopsomer' open_date='2017-11-10T19:37:49Z' closed_time='2018-01-15T14:37:32Z'>
	<summary>Wrong lemmatization in v2 (POS not used)</summary>
	<description>
It seems that lemmatization isn't working correctly in v2:
import spacy
nlp = spacy.load("en")

doc = nlp("machine learning is a field of computer science")
doc[1].pos_   # 'NOUN'
doc[1].lemma_   # 'learn' :/
Whereas is 1.9, I get the correct lemma: "learning".
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


spaCy version: 2.0.2
Platform: Darwin-16.7.0-x86_64-i386-64bit
Python version: 3.6.2
Models: en, en_core_web_lg, en_vectors_web_lg

	</description>
	<comments>
		<comment id='1' author='thomasopsomer' date='2017-11-10T21:35:55Z'>
		Ah damn, I think this might be caused by a lemmatization fix introduced in v2.0 which uses the lookup tables plus the lemmatization rules. I think what's happening here is that the lemma set by the Lemmatizer is overwritten by lookup table – or not overwritten correctly by the lemma rules.
		</comment>
		<comment id='2' author='thomasopsomer' date='2017-11-12T16:08:35Z'>
		&lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
 the problem seems to sit here in the &lt;denchmark-link:https://github.com/explosion/spaCy/blob/master/spacy/pipeline.pyx#L412&gt;set_annotations method&lt;/denchmark-link&gt;
:
for j, tag_id in enumerate(doc_tag_ids):
    # Don't clobber preset POS tags
    if doc.c[j].tag == 0 and doc.c[j].pos == 0:
        # Don't clobber preset lemmas
        lemma = doc.c[j].lemma
        vocab.morphology.assign_tag_id(&amp;doc.c[j], tag_id)
        if lemma != 0 and lemma != doc.c[j].lex.orth:
            doc.c[j].lemma = lemma
    idx += 1
vocab.morphology.assign_tag_id sets the right lemma on the token according to its tag. But then the condition if lemma != 0 and lemma != doc.c[j].lex.orth: set it back to the preset lemma. I don't really get the intent of this condition ^^
		</comment>
		<comment id='3' author='thomasopsomer' date='2017-11-12T16:39:06Z'>
		Thanks for getting to the bottom of this. Just had a look at the blame log and it looks like my initial suspicion was right then... The condition was added only 6 days ago (see &lt;denchmark-link:https://github.com/explosion/spaCy/commit/75e1618ec32a5a06c78f5737e11aa869f60d3b20&gt;75e1618&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/explosion/spaCy/commit/31babe3c3f7b02a76b817d00fa78e2583a229659&gt;31babe3&lt;/denchmark-link&gt;
) and I think the original intent was to prevent lemmas set by the  from being overwritten. This was something we noticed in the final tests for v2.0... but unfortunately, we didn't test property for the other cases  Sorry about that!
I'll add a help wanted label in case someone from the community wants to help out – otherwise, we'll just fix it for the next release.
		</comment>
		<comment id='4' author='thomasopsomer' date='2018-01-15T14:37:32Z'>
		Fixed as of v2.0.5. Thank!
		</comment>
		<comment id='5' author='thomasopsomer' date='2018-05-08T02:55:31Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>