<bug id='4229' author='adrianeboyd' open_date='2019-09-03T19:42:10Z' closed_time='2019-09-04T13:02:33Z'>
	<summary>Multi-word EntityRuler entities cause NER model to stop working</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

I've seen quite a few people noticing that using the EntityRuler before NER causes major changes in the NER model predictions (like &lt;denchmark-link:https://github.com/explosion/spaCy/issues/3775&gt;#3775&lt;/denchmark-link&gt;
). I tried a few examples and it's pretty drastic.
I think there must be a bug in how it manages its internal state when skipping over multi-word entities or something like that. If the EntityRuler entity is one token long, the NER model seems to keep working, but as soon as there's a pre-existing multi-word entity it doesn't label anything else after that point, even if the text is much longer.
&lt;denchmark-code&gt;import spacy
from spacy.pipeline import EntityRuler

patterns1 = [{'label': 'car', "pattern": [{'LOWER': 'cars'}]}]
patterns2 = [{'label': 'driving_car', "pattern": [{'LOWER': 'driving'}, {'LOWER': 'cars'}]}]

text = ("When Sebastian Thrun started working on self-driving cars at "
        "Google in 2007, few people outside of the company took him "
        "seriously. “I can tell you very senior CEOs of major American "
        "car companies would shake my hand and turn away because I wasn’t "
        "worth talking to,” said Thrun, in an interview with Recode earlier "
        "this week.")

## no EntityRuler
nlp = spacy.load('en')
print([(ent.text, ent.label_, ent.start, ent.end) for ent in nlp(text).ents])
# [('Sebastian Thrun', 'PERSON', 1, 3), ('Google', 'ORG', 11, 12),
# ('2007', 'DATE', 13, 14), ('American', 'NORP', 35, 36),
# ('Thrun', 'PERSON', 55, 56), ('Recode', 'ORG', 61, 62),
# ('earlier this week', 'DATE', 62, 65)]

## EntityRuler with one-token pattern
nlp = spacy.load('en')
ruler = EntityRuler(nlp, validate=True, overwrite_ents=True)
ruler.add_patterns(patterns1)
nlp.add_pipe(ruler, before='ner')
print([(ent.text, ent.label_, ent.start, ent.end) for ent in nlp(text).ents])
# [('Sebastian Thrun', 'PERSON', 1, 3), ('cars', 'car', 9, 10),
# ('Google', 'ORG', 11, 12), ('2007', 'DATE', 13, 14),
# ('American', 'NORP', 35, 36), ('Thrun', 'PERSON', 55, 56),
# ('Recode', 'ORG', 61, 62), ('earlier this week', 'DATE', 62, 65)]

## EntityRuler with two-token pattern
nlp = spacy.load('en')
ruler = EntityRuler(nlp, validate=True, overwrite_ents=True)
ruler.add_patterns(patterns2)
nlp.add_pipe(ruler, before='ner')
print([(ent.text, ent.label_, ent.start, ent.end) for ent in nlp(text).ents])
# [('Sebastian Thrun', 'PERSON', 1, 3), ('driving cars', 'driving_car', 8, 10)]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


spaCy version: 2.1.8
Platform: Linux-4.19.0-5-amd64-x86_64-with-debian-10.0
Python version: 3.7.3

	</description>
	<comments>
		<comment id='1' author='adrianeboyd' date='2019-09-03T20:26:58Z'>
		Hi &lt;denchmark-link:https://github.com/adrianeboyd&gt;@adrianeboyd&lt;/denchmark-link&gt;
 - I also think there's some potential internal inconsistencies here. I ran into this when investigating another bug, caused by running  in the deserialized entity_ruler before the NER model got initialized.
But the point is, even when fixing that bug, I still found some inconsistencies when the entit_ruler comes before NER, cf. &lt;denchmark-link:https://github.com/explosion/spaCy/issues/4042#issuecomment-517927978&gt;here&lt;/denchmark-link&gt;
. It looks like the NER gets into an internal inconsistent state when it sees the entities previously predicted by the entity_ruler. This inconsistent state manifests itself during IO.
[This might be a different issue than your original post, but perhaps worth investigating together]
		</comment>
		<comment id='2' author='adrianeboyd' date='2019-09-04T07:12:11Z'>
		That does look related. I wouldn't have expected a single vs. multiple token difference from your description, so there might be a few interacting bugs?
		</comment>
		<comment id='3' author='adrianeboyd' date='2019-09-04T09:32:18Z'>
		Okay, part of the problem is this, which should be attr_t instead of int:



spaCy/spacy/syntax/ner.pyx


         Line 261
      in
      419ae59






 cdef int preset_ent_label = st.B_(0).ent_type 





When I change it so it recognizes the B-TYPE, the ends of the preset entity spans aren't detected correctly and continue until the end of the sentence, so still some debugging to do...
		</comment>
		<comment id='4' author='adrianeboyd' date='2019-10-04T13:42:55Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>