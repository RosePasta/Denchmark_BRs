<bug id='6677' author='adrianeboyd' open_date='2021-01-05T20:53:02Z' closed_time='2021-01-18T23:38:12Z'>
	<summary>Matcher with single "OP": "?" returns 0-length matches</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

When the pattern contains a single token dict with "OP": "?", the Matcher returns 0-length matches at the start of the non-matching tokens, which additionally cause AssertionErrors with greedy options because there are checks for 0-length matches that aren't performed without greedy.
import spacy
from spacy.tokens import Doc
from spacy.matcher import Matcher

nlp = spacy.blank("en")
doc = Doc(nlp.vocab, words=["a", "b"], tags=["A", "B"])

# 1. Without greedy

## 1a. Without attributes: no 0-length matches
matcher = Matcher(nlp.vocab)
matcher.add("TEST", [[{"OP": "?"}]])
assert matcher(doc) == [(1046765068364475028, 0, 1), (1046765068364475028, 1, 2)]

## 1b. With non-matching attributes: 0-length matches immediately preceding non-matching tokens
matcher = Matcher(nlp.vocab)
matcher.add("TEST", [[{"TAG": "C", "OP": "?"}]])
assert matcher(doc) == [(1046765068364475028, 0, 0), (1046765068364475028, 1, 1)]

matcher = Matcher(nlp.vocab)
matcher.add("TEST", [[{"TAG": "A", "OP": "?"}]])
assert matcher(doc) == [(1046765068364475028, 0, 1), (1046765068364475028, 1, 1)]

# 2. With greedy

## 2a. Without attributes: no 0-length matches
matcher = Matcher(nlp.vocab)
matcher.add("TEST", [[{"OP": "?"}]], greedy="FIRST")
assert matcher(doc) == [(1046765068364475028, 0, 1), (1046765068364475028, 1, 2)]

## 2b. With non-matching attributes: AssertionError due to check for 0-length matches
try:
    matcher = Matcher(nlp.vocab)
    matcher.add("TEST", [[{"TAG": "C", "OP": "?"}]], greedy="FIRST")
    matcher(doc)
    assert False
except AssertionError:
    assert True
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


spaCy version: 3.0.0rc2 (for greedy and extended Doc init, the behavior for the cases in 1 with 0-length matches in the same in v2.3)

	</description>
	<comments>
	</comments>
</bug>