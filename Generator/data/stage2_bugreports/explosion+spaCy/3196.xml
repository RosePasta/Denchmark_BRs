<bug id='3196' author='fersarr' open_date='2019-01-25T23:11:45Z' closed_time='2019-01-31T22:57:48Z'>
	<summary>Rule matcher doesn't match a quote with non-alpha symbols</summary>
	<description>
The Rule matcher doesn't match a quote with non-alpha symbols. I made a Rule-based matcher to mark quotes as just one token following the very useful answer here: &lt;denchmark-link:https://stackoverflow.com/questions/50752266/spacy-tokenize-quoted-string&gt;https://stackoverflow.com/questions/50752266/spacy-tokenize-quoted-string&lt;/denchmark-link&gt;

The approach from stackoverflow was working fine until I tried to match quotes with non-alpha characters inside, for example:
He said "I didn't go"
I tried using a rule to match anything inside quotes:
[{'ORTH': '"'}, {'OP': '*'}, {'ORTH': '"'}],
To reproduce:
&lt;denchmark-code&gt;import spacy
from spacy.matcher import Matcher


def merge_phrases(matcher, doc, merge_as_tag=None):
    # this will be called on the Doc object in the spacy pipeline https://spacy.io/usage/processing-pipelines#custom-components
    matched_spans = []
    matches = matcher(doc)
    for match_id, start, end in matches:
        span = doc[start:end]
        matched_spans.append(span)
    for span in matched_spans:  # merge into one token after collecting all matches
        span.merge()
        if merge_as_tag:
            for word in span.subtree:
                word.tag_ = merge_as_tag
    return doc


class QuotedTextMatcher(object):

    def __init__(self, nlp):
        self.matcher = Matcher(nlp.vocab)
        quoted_text_pattern = [
            #[{'ORTH': '"'}, {'IS_ALPHA': True, 'OP': '+'}, {'ORTH': '"'}],  # this one works for plain alphanumeric quotes
            [{'ORTH': '"'}, {'OP': '*'}, {'ORTH': '"'}],  # DOES NOT WORK. wildcard. There can be anything inside a quote
        ]
        self.matcher.add('QUOTED', None, *quoted_text_pattern)

    def __call__(self, doc):
        doc = merge_phrases(self.matcher, doc)
        return doc


nlp = spacy.load('en')
quoted_text_matcher = QuotedTextMatcher(nlp)
nlp.add_pipe(quoted_text_matcher, first=True)

#text = '''he said "I didnt do it" '''  # only alpha inside quote
text = '''he said "I didn't do it" '''  # quotation mark inside quote
parsed = nlp(text)

for token in list(parsed.sents)[0]:
    print(f"token: {token}")
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;* **spaCy version:** 2.0.18
* **Platform:** Darwin-18.2.0-x86_64-i386-64bit
* **Python version:** 3.7.0
* **Models:** en_core_web_md, en:
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='fersarr' date='2019-01-30T21:43:57Z'>
		I think this might be related to the way matcher operators work in v2.0.x. I just tried it with the latest spacy-nightly (which comes with a new and improved matcher engine and fixes various bugs) and the following works for me:
from spacy.lang.en import English
from spacy.matcher import Matcher

nlp = English()
matcher = Matcher(nlp.vocab)
matcher.add('TEST', None, [{'ORTH': '"'}, {'OP': '*'}, {'ORTH': '"'}])
doc = nlp('''He said "I didn't go"''')
print([doc[start:end] for _, start, end in matcher(doc)])
# ["I didn't go"]
So if you like, give it a try in a separate environment using spacy-nightly.
		</comment>
		<comment id='2' author='fersarr' date='2019-01-31T19:58:01Z'>
		awesome! thanks &lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='fersarr' date='2019-03-02T23:20:12Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>