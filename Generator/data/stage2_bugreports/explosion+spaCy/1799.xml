<bug id='1799' author='Mindful' open_date='2018-01-04T08:05:12Z' closed_time='2018-01-22T19:18:53Z'>
	<summary>Doc.sents value changes when converted to bytes and back to Doc</summary>
	<description>
First of all, I can only reproduce this problem for a specific sentence. There may be other sentences which have the same issue, but I have only found one so far. I noticed only because I have code that reads a large number of reviews, and I got (un)lucky.
Additionally, my laptop runs a slightly older version of spacy, and does not have this problem. Here's the environment information for my setup where the bug does not occur:
&lt;denchmark-code&gt;spaCy version:** 1.9.0
Platform:** Darwin-16.7.0-x86_64-i386-64bit
Python version:** 3.6.1
Installed models:** en
&lt;/denchmark-code&gt;

And here is the environment information for my setup where the bug does occur:
&lt;denchmark-code&gt;spaCy version:** 2.0.5
Models:** en
Platform:** Linux-4.4.0-92-generic-x86_64-with-Ubuntu-16.04-xenial
Python version:** 3.5.2
&lt;/denchmark-code&gt;

I have a gist that illustrates the problem &lt;denchmark-link:https://gist.github.com/Mindful/f7e45a27ea91ba32e20330f6a69ef0bc&gt;here&lt;/denchmark-link&gt;
, but basically, the issue is that if I run this code in the aforementioned problem environment:
&lt;denchmark-code&gt;problem_sentence = 'Just what I was looking for, a retro mobile that fits my old car.'
doc = nlp(problem_sentence)
doc_bytes = doc.to_bytes()
doc_from_bytes = spacy.tokens.Doc(nlp.vocab).from_bytes(doc_bytes)

original_doc_sentences = list(doc.sents)
byte_doc_sentences = list(doc_from_bytes.sents)

print("Original doc sentence count:", len(original_doc_sentences))
print("original doc sentences:", ["&lt;" + str(sent) + "&gt;" for sent in original_doc_sentences])
print("New doc (loaded from bytes) sentence count:", len(byte_doc_sentences))
print("New doc (loaded from bytes) sentence:", ["&lt;" + str(sent) + "&gt;" for sent in byte_doc_sentences])
&lt;/denchmark-code&gt;

I get this as output:
&lt;denchmark-code&gt;Original doc sentence count: 1
original doc sentences: ['&lt;Just what I was looking for, a retro mobile that fits my old car.&gt;']
New doc (loaded from bytes) sentence count: 2
New doc (loaded from bytes) sentence: ['&lt;Just what&gt;', '&lt;I was looking for, a retro mobile that fits my old car.&gt;']
&lt;/denchmark-code&gt;

When I change the doc into bytes and then read it back again, what should be one sentence has split into two.
	</description>
	<comments>
		<comment id='1' author='Mindful' date='2018-01-22T18:59:21Z'>
		Thanks for the report -- got to the bottom of this.
Upon deserializing, the secondary parse attributes l_kids, r_kids, l_edge, r_edge and sent_start are reconstructed from the HEAD array. However, this logic assumes that the parse is projective --- that it doesn't contain any crossing branches. The sentence you give as an example is one of the relatively rare cases in English of a non-projective structure. However, non-projectivity is fairly common in other languages, so we'd be seeing this problem more for other treebanks.
		</comment>
		<comment id='2' author='Mindful' date='2018-05-08T01:55:29Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>