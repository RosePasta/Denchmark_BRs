<bug id='3009' author='mehmetilker' open_date='2018-12-04T19:25:00Z' closed_time='2018-12-29T15:19:20Z'>
	<summary>Matcher behavior with * quantifier</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

When I run following code I expect no match but I get "have probably done things we look" which is probably match from first rule.
If I move 1. rule to the last I see no mach which is expected behaviour.
Problem is similar to this one: &lt;denchmark-link:https://github.com/explosion/spaCy/issues/2005&gt;#2005&lt;/denchmark-link&gt;

According to that issue I shouldn't see any match with version 2.1.0 but same problem there as well as with version 2.0.18
I have tried to implement matcher2 as stated here :&lt;denchmark-link:https://github.com/explosion/spaCy/issues/1971#issuecomment-365306201&gt;#1971 (comment)&lt;/denchmark-link&gt;

But I got: ModuleNotFoundError: No module named 'spacy.matcher2'
Did I interpret something wrong or it is another case for * quantifier needs to be handled?
import spacy
from spacy.matcher import Matcher

nlp = spacy.load('en_core_web_sm')
matcher = Matcher(nlp.vocab)

matcher.add('1', None, *[[{'LEMMA': 'have'}, {'TAG': 'DT', 'OP': '?'}, {'TAG': 'PRP$', 'OP': '?'}, {'LOWER': 'look'}]])

matcher.add('2', None, *[[{'LEMMA': 'have'}, {'IS_ASCII': True,
                                              'IS_PUNCT': False, 'OP': '*'}, {'LEMMA': 'in'}, {'LOWER': 'mind'}]])
matcher.add('3', None, *[[{'LEMMA': 'have'}, {'IS_ASCII': True,
                                              'IS_PUNCT': False, 'OP': '*'}, {'LEMMA': 'it'}, {'LOWER': 'away'}]])
matcher.add('4', None, *[[{'LEMMA': 'have'}, {'IS_ASCII': True,
                                              'IS_PUNCT': False, 'OP': '*'}, {'LEMMA': 'it'}, {'LOWER': 'coming'}]])
matcher.add('5', None, *[[{'LEMMA': 'have'}, {'IS_ASCII': True,
                                              'IS_PUNCT': False, 'OP': '*'}, {'LEMMA': 'it'}, {'LOWER': 'off'}]])
matcher.add('6', None, *[[{'LEMMA': 'have'}, {'IS_ASCII': True,
                                              'IS_PUNCT': False, 'OP': '*'}, {'LEMMA': 'the'}, {'LOWER': 'best'}]])


doc = nlp(
    "And people generally in high school, I think all of us have probably done things we look back on in high school and regret or cringe a bit."
)
matches = matcher(doc)
print('\n\n')
for match_id, start, end in matches:
    string_id = nlp.vocab.strings[match_id]  # get string representation
    span = doc[start:end]  # the matched span
    print(match_id, string_id, start, end, span.text)
&lt;denchmark-h:h2&gt;Info about spaCy&lt;/denchmark-h&gt;


spaCy version: 2.1.0a3
Platform: Windows-10-10.0.17134-SP0
Python version: 3.6.5
Models: en_core_web_sm

	</description>
	<comments>
		<comment id='1' author='mehmetilker' date='2018-12-04T19:29:30Z'>
		Another case here (I think related) and similar or exact same problem with this one:
&lt;denchmark-link:https://github.com/explosion/spaCy/issues/2464&gt;#2464&lt;/denchmark-link&gt;

All 3 rules should match but only 1. and 2. rules are working.
If I change 'IS_ASCII': True to False 3. rule matches as well.
Same result with 2.0.18 and 2.1.0.
import spacy
from spacy.matcher import Matcher

nlp = spacy.load('en_core_web_sm')
matcher = Matcher(nlp.vocab)

matcher.add('1', None, *[[{'LEMMA': 'have'},
                          {'LOWER': 'to'}, {'LOWER': 'do'}, {'POS': 'ADP'}]])

matcher.add('2', None, *[[{'LEMMA': 'have'},
                          {'IS_ASCII': True, 'IS_PUNCT': False, 'OP': '*'},
                          {'LOWER': 'to'}, {'LOWER': 'do'}, {'POS': 'ADP'}]])

matcher.add('3', None, *[[{'LEMMA': 'have'},
                          {'IS_ASCII': True, 'IS_PUNCT': False, 'OP': '?'},
                          {'LOWER': 'to'}, {'LOWER': 'do'}, {'POS': 'ADP'}]])

doc = nlp(
    "Some of it also has to do with rising US interest rates, a stronger dollar, and a firm economy that's supporting earnings growth."
)
matches = matcher(doc)
print('\n\n')
for match_id, start, end in matches:
    string_id = nlp.vocab.strings[match_id]  # get string representation
    span = doc[start:end]  # the matched span
    print(match_id, string_id, span.text)
		</comment>
		<comment id='2' author='mehmetilker' date='2018-12-06T14:34:02Z'>
		Thanks, definitely seems like a bug.
		</comment>
		<comment id='3' author='mehmetilker' date='2018-12-29T15:19:19Z'>
		Fixed! ðŸŽ‰
		</comment>
		<comment id='4' author='mehmetilker' date='2019-01-28T16:05:31Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>