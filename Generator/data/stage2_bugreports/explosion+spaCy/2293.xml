<bug id='2293' author='minrk' open_date='2018-05-03T08:44:01Z' closed_time='2018-05-03T13:35:32Z'>
	<summary>website flooding mybinder.org</summary>
	<description>
Hi!
I saw you recently deployed interactive docs with mybinder.org. That's super cool! Unfortunately, the repo had to be temporarily blocked because it was driving too much traffic (several thousand requests to launch in an hour). This could be because your site is just too popular for us to handle, but it could also be because it is requesting launches earlier and/or more often than it should.
I saw that you switched from using thebelab to something called juniper, but I haven't been able to find the source for juniper. Is it online somewhere? It's possible there are bugs there that can be fixed (the most common is forgetting to close the eventStream after launch, which can result in launching new Binders forever! This is something we are working on, but it's still an issue right now).
Let us know if we can help.
	</description>
	<comments>
		<comment id='1' author='minrk' date='2018-05-03T09:13:31Z'>
		&lt;denchmark-link:https://grafana.mybinder.org/dashboard/db/pod-activity?orgId=1&amp;from=1525295569380&amp;to=1525338769381&amp;panelId=1&amp;fullscreen&gt;This plot&lt;/denchmark-link&gt;
 shows that the large number of requests started this morning at some point. Maybe that helps with correlating it with a change in the website.
		</comment>
		<comment id='2' author='minrk' date='2018-05-03T09:25:11Z'>
		Ah, damn, sorry about that and thanks for the heads-up! (And thanks &lt;denchmark-link:https://github.com/minrk&gt;@minrk&lt;/denchmark-link&gt;
 for your great work on Thebelab, which was a huge inspiration.)
I think I know what the problem(s) might be: I added some logic to reconnect on failure (invalid token, some other server problem) but I did it stupidly, potentially causing an infinite loop. So in theory, there only have to be a few users spending a few minutes on the site and ending up making one request per second. Not sure why it happened this morning, though.
I already deployed a fix for this, so I hope this fixes the underlying issue!

I saw that you switched from using thebelab to something called juniper, but I haven't been able to find the source for juniper. Is it online somewhere?

Not yet! I'm currently testing it on spacy.io before open-sourcing it, just to make sure it works and has no significant bugs (like this one, possibly ‚Äì¬†I'd hate open-sourcing broken code). I started off by using a custom modified build of Thebelab, but I ended up wanting more/different features (and I don't like jQuery very much) so I wrote my own implementation.
If you do want to check it out and give me some feedback, that would be great, though! Another thing that I've been experimenting with is storing the serverSettings (i.e. what's passed to ServerConnection.makeSettings) in the browser's localStorage. I do feel like this speeds up the loading time, since it allows skipping one step of requesting a binder ‚Äì but I've been wondering if this makes sense at all and if there's maybe a better way to achieve this.
		</comment>
		<comment id='3' author='minrk' date='2018-05-03T10:08:19Z'>
		If it's already fixed, I can try unbanning the repo and see if it comes back. Would you like me to try that now?
		</comment>
		<comment id='4' author='minrk' date='2018-05-03T10:11:27Z'>
		Yes, that'd be great, thanks! I also made sure to remove the old script from the Cloudflare cache.
		</comment>
		<comment id='5' author='minrk' date='2018-05-03T10:18:45Z'>
		Storing settings in localStorage is a great idea for avoiding launching excess Binders across page loads. As long as you handle the fact that the server might not be there anymore, that should work well, both improving performance of your site and reducing load on ours.
		</comment>
		<comment id='6' author='minrk' date='2018-05-03T10:24:43Z'>
		How many users would you expect? I unblocked the repo but immediately saw dozens of launches and had to block it again.
		</comment>
		<comment id='7' author='minrk' date='2018-05-03T10:32:25Z'>
		Looks like a steady stream of 3-5 launch requests/second, even now that the launches are failing due to the repo being blocked. Looking at our logs, these appear to be coming from just a couple of places. It's possible this means that someone has a page open with the old version and it's still retrying. How does the retry work?
		</comment>
		<comment id='8' author='minrk' date='2018-05-03T10:54:18Z'>
		
How many users would you expect? I unblocked the repo but immediately saw dozens of launches and had to block it again.

That's strange... we do get a fair amount of traffic, but not that much. According to Google Analytics, there are currently 28 people on the site.
If the connection failed ‚Äì mostly due to the locally stored parameters not working anymore ‚Äì  it would flush the local storage and request a kernel again. If it always failed (e.g. for some other reason), this meant it would get stuck in an infinite loop.
I'd be happy to keep the repo blocked, rename it and rebuild it again if that helps? We've only ever been advertising it as super experimental anyways, so it's fine if there are disruptions (especially considering I fucked this up üòâ). I can also get the Juniper code published so you can look at it and verify it's all good.
		</comment>
		<comment id='9' author='minrk' date='2018-05-03T11:14:56Z'>
		Looking at it now, it's closer to 20 requests per second. Is there a chance that each failure spawns a new retry loop?
Trying again on a new repo is a good idea. If we could have a look a the library first before deploying it, or if you have a less public deployment of your site that we can test before it goes wide, that might be good to do first so we don't have to block another repo.
		</comment>
		<comment id='10' author='minrk' date='2018-05-03T11:33:15Z'>
		
Looking at it now, it's closer to 20 requests per second. Is there a chance that each failure spawns a new retry loop?

Yeah, that was likely the problem üòû Instead of only trying again once if restarting failed (which wouldn't have been as bad), it also retried on every "regular" failure, reset the kernel and the local storage, meaning a new Binder was requested every time.
Just created a new repo and unpublished the old one ‚Äì also just requested a new image on Binder: &lt;denchmark-link:https://github.com/ines/spacy-io-binder&gt;https://github.com/ines/spacy-io-binder&lt;/denchmark-link&gt;

Give me a minute and I'll publish the juniper repo on GitHub so we can test it in an isolated environment first!
		</comment>
		<comment id='11' author='minrk' date='2018-05-03T11:52:14Z'>
		Here you go: &lt;denchmark-link:https://github.com/ines/juniper&gt;https://github.com/ines/juniper&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='minrk' date='2018-05-03T12:54:12Z'>
		Awesome! Juniper looks slick. I don't see any restarting issues when I test with your examples there, so I'm guessing you're right that you did fix the issue, and it's just some tabs left open somewhere that are still running the old code causing problems. We can leave your previous repo blocked for another day or so to wait out those lingering tabs. If you let us know when you deploy this to spacy.io, that would be cool, so we can keep an eye on it.
If you want, opening Issues on thebelab to discuss the features you wanted so we can make it something to share rather than duplicating in Juniper (they are both small projects, so duplication is fine, too!).
		</comment>
		<comment id='13' author='minrk' date='2018-05-03T13:35:30Z'>
		Thanks a lot! I've just deployed the spacy.io version that uses the new spacy-io-binder repo. Thanks again for all your work on this üôè

If you want, opening Issues on thebelab to discuss the features you wanted so we can make it something to share rather than duplicating in Juniper (they are both small projects, so duplication is fine, too!).

Sure! I think the localStorage solution might be quite nice if it ends up working as expected. I also found adding a Loading... message to the output area model with outputArea.model.clear(true); useful, that's shown while waiting for its future, i.e. the result of the executed code. But I'm happy to write this all up properly and submit an issue or even a PR to Thebelab.
I also hope that writing a separate library didn't come across the wrong way. But since it's a small project, I felt like it was more polite to just write my own implementation instead of expecting you to discuss or accept arbitrary changes ‚Äì like whether to use jQuery, or how to structure the methods, generated markup, whether to delete something etc.
		</comment>
		<comment id='14' author='minrk' date='2018-05-03T14:01:58Z'>
		
I also hope that writing a separate library didn't come across the wrong way.

Not at all! It's always fine to do your own thing, especially for a project as small as something like this. I just wanted to make sure you feel welcome submitting issues to thebelab, even if the answer is that your use case is out of scope, and they should stay separate.
		</comment>
		<comment id='15' author='minrk' date='2018-05-04T12:11:34Z'>
		Hi &lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
, Juniper looks great! I just wanted to give a heads up that there is a fairly well-known networking company called Juniper (&lt;denchmark-link:https://www.juniper.net/us/en/&gt;https://www.juniper.net/us/en/&lt;/denchmark-link&gt;
), so it might be hard to to find on search engines or there might be other issues (trademarking etc). I wanted to open an issue on the repo, but it seems like that's disabled, so I'm piggy-backing onto this issue. Great work!
		</comment>
		<comment id='16' author='minrk' date='2018-05-06T12:21:25Z'>
		There is also the Juniper R Kernel for jupyter, which would make it even more confusing? (I don't think this is related to this library, right?)
		</comment>
		<comment id='17' author='minrk' date='2018-06-05T13:20:54Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>