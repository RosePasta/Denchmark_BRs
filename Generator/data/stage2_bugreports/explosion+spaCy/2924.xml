<bug id='2924' author='willprice' open_date='2018-11-14T18:05:37Z' closed_time='2018-11-15T10:40:11Z'>
	<summary>displacy arc labels are place incorrectly in Jupyter notebook</summary>
	<description>



Software
Version




Python
3.6.4


notebook
5.4.1


spacy
2.0.16



The SVG contents is the same when I copy the HTML from the inspector both in
jupyter and from the displacy.serve webpage.
When viewed through displacy.serve:
&lt;denchmark-link:https://user-images.githubusercontent.com/966205/48501958-58c53f80-e836-11e8-9a11-af5de1d67a41.png&gt;&lt;/denchmark-link&gt;

And in Jupyter:
&lt;denchmark-link:https://user-images.githubusercontent.com/966205/48501957-58c53f80-e836-11e8-81f9-87f97eed32b8.png&gt;&lt;/denchmark-link&gt;

The SVG generated is the same, so I suspect some CSS issue is overriding the default, I don't know whether that should be solved within Jupyter, or whether it's spaCy's responsibility to make portable SVGs.
Generated SVG here: &lt;denchmark-link:https://gist.github.com/willprice/66d9ff961b693abe19e94d541eaacb99&gt;https://gist.github.com/willprice/66d9ff961b693abe19e94d541eaacb99&lt;/denchmark-link&gt;

This happens both in Firefox and Chrome.
I had a poke twiddling CSS rules off and on but couldn't seem to find any rules that affected the placement. Let me know if there's anything I can do providing additional info to help resolve the issue.
Thanks for the awesome library!
	</description>
	<comments>
		<comment id='1' author='willprice' date='2018-11-14T18:53:00Z'>
		Thanks for the detailed report!
This is very strange indeed... The labels are positioned with the paths using xlink:href and the path id. Did you render any other displaCy dependency visualizations in your notebook by any chance? Maybe what happened here is that it aligns the labels with the paths from a previous SVG, because the path ids are identical?
In the method that renders the SVG, we currently use the index of the document to create the unique ID for each SVG (&lt;denchmark-link:https://github.com/explosion/spaCy/blob/87ce435affb972f6b1b9dde2cf953212a8e5d825/spacy/displacy/render.py#L41&gt;see here&lt;/denchmark-link&gt;
). This works well with , but if you make several calls to  with one  in a notebook, it'd mean that all SVGs would receive the ID .
If this is the case, we should probably generate a random visualization ID on each call to displacy.render â€“ so instead of "arrow-0-1" the arcs would then have IDs like arrow-34039420-1, which should prevent clashes.
		</comment>
		<comment id='2' author='willprice' date='2018-11-14T18:59:53Z'>
		Ah! Yes, that could well be the issue. I've got a whole bunch of visualisations in the same notebook, most of which are minor variants (I'm trying to understand the different dependency relations that arise).
Looking at the label placement I can now see that the text spans are reusing previous positions.
Randomising the ID sounds like a good idea, perhaps use a &lt;denchmark-link:https://docs.python.org/3/library/uuid.html&gt;UUID&lt;/denchmark-link&gt;
.
Thanks for the super quick response and root causing, impressive!
		</comment>
		<comment id='3' author='willprice' date='2018-11-14T19:28:11Z'>
		Thanks! And yes, this all makes sense then!
UUID is a nice idea, maybe spaCy should just expose this by default (like, doc.uuid or something). Then again, in displaCy, this would mean that two identical parses would still receive the same ID, right? So if you render the same doc twice in a notebook (for whatever reason), the IDs would still clash â€“ it won't be noticable, but I guess we might as well prevent it for consistency.
I'll experiment with this and will push a fix, so we can ship it with the upcoming v2.0.17.
		</comment>
		<comment id='4' author='willprice' date='2018-11-15T09:48:18Z'>
		
this would mean that two identical parses would still receive the same ID, right? So if you render the same doc twice in a notebook (for whatever reason), the IDs would still clash

Would that not be a good thing? If they're the same parse then they'll have the same layout?
		</comment>
		<comment id='5' author='willprice' date='2018-11-15T10:39:23Z'>
		
Would that not be a good thing? If they're the same parse then they'll have the same layout?

I mean, the markup would always be identical â€“ except for the IDs, which will be reflected in the id attributes of the SVG. id attributes are supposed to be unique and if two paths in two visualizations of your notebook have the same ids, that's technically considered invalid HTML. So in theory, if you render two identical visualizations on the same page, the IDs clash and the labels in SVG 2 will be rendered using the IDs of SVG 1. This isn't dramatic or visible, because the positions are the same â€“ but it's technically wrong. So I was thinking, if we have to adjust this anyways, we might as well prevent ID clashes completely ðŸ™‚
		</comment>
		<comment id='6' author='willprice' date='2018-11-15T10:42:36Z'>
		Ah yes, that's a good point, I'd not considered that. Thanks again &lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='willprice' date='2018-11-16T10:44:42Z'>
		You might want to increase 999 to something a bit larger, I've run into the bug again ;), although at least rerunning the visualisation fixed it because its stochastic. You could use a uuid for the actual id attribute to make this even less common?
		</comment>
		<comment id='8' author='willprice' date='2018-11-16T10:44:57Z'>
		(I'm happy to make the change if you approve of the method)
		</comment>
		<comment id='9' author='willprice' date='2018-11-26T17:55:10Z'>
		&lt;denchmark-link:https://github.com/willprice&gt;@willprice&lt;/denchmark-link&gt;
 Ah, sorry, I missed this! And yes, that's a good idea â€“ feel free to submit the PR 
		</comment>
		<comment id='10' author='willprice' date='2018-12-26T18:52:47Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>