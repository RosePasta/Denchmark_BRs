<bug id='1314' author='christian-storm' open_date='2017-09-07T18:54:48Z' closed_time='2017-10-16T18:14:27Z'>
	<summary>tokens_from_list breaking in V2 when running individual pipeline components</summary>
	<description>



spaCy/spacy/tokenizer.pyx


         Line 64
      in
      456bb8a






 return Doc(self.vocab, words=strings) 





For v2 shouldn't this be
return Doc(self.vocab, words=strings, spaces=[True] * len(strings)) 
I was getting an error in the parser when running this code:
&lt;denchmark-code&gt;sent = 'I tried to be good ."
sent = nlp.tokenizer.tokens_from_list(sent.split())
nlp.tagger(sent)
nlp.parser(sent)
&lt;/denchmark-code&gt;

I was able to make it work by using your &lt;denchmark-link:https://alpha.spacy.io/docs/usage/customizing-tokenizer#custom-tokenizer-example&gt;recipe&lt;/denchmark-link&gt;
 for whitespace tokenization instead of using tokens_from_list.  This recipe includes spaces.  Surprisingly, if not set it is set to None which may no longer be valid in V2?
&lt;denchmark-h:h2&gt;Info about spaCy&lt;/denchmark-h&gt;


spaCy version: 2.0.0a13
Platform: Darwin-16.7.0-x86_64-i386-64bit
Python version: 3.6.0
Models: en_core_web_sm

Error:

    nlp.tagger(sent)
  File "spacy/pipeline.pyx", line 301, in spacy.pipeline.NeuralTagger.__call__ (spacy/pipeline.cpp:14086)
File "spacy/pipeline.pyx", line 314, in spacy.pipeline.NeuralTagger.predict (spacy/pipeline.cpp:14745)
File "thinc/neural/_classes/model.py", line 161, in call
return self.predict(x)
File "thinc/neural/_classes/model.py", line 125, in predict
y, _ = self.begin_update(X)
File "thinc/neural/_classes/feed_forward.py", line 36, in begin_update
X, inc_layer_grad = layer.begin_update(X, drop=drop)
File "spacy/_ml.py", line 380, in fine_tune_fwd
(model.mix[0] * flat_tokvecs + model.mix[1] * flat_vecs), lengths)
ValueError: operands could not be broadcast together with shapes (0,) (14,128)

	</description>
	<comments>
		<comment id='1' author='christian-storm' date='2017-09-08T07:32:42Z'>
		tokens_from_list is deprecated, but I think the behaviour of Doc.__init__ is a bug here, thanks!
		</comment>
		<comment id='2' author='christian-storm' date='2017-10-16T18:14:26Z'>
		Should be fixed in v2.
		</comment>
		<comment id='3' author='christian-storm' date='2018-05-08T13:28:11Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>