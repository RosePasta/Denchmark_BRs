<bug id='5137' author='alessandrobokan' open_date='2020-03-11T23:02:11Z' closed_time='2020-04-29T11:01:32Z'>
	<summary>cfg parameter is empty when run spacy.load()</summary>
	<description>
&lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;

My component class:
&lt;denchmark-code&gt;class MyComponent(object):
    name = "my_component"

    def __init__(self, nlp, **cfg):
        self.nlp = nlp
        self.categories = cfg.get("categories", "all_categories")  # cfg is EMPTY
&lt;/denchmark-code&gt;

I used entry points to add the component my_component to the pipeline. I updated the spacy_factories from setup.py. Then I run python setup.py sdist, generate the lib en_core_web_test_sm, and installed it by pip install.
However, when I run following code:
&lt;denchmark-code&gt;import spacy

nlp = spacy.load("en_core_web_test_sm", categories=["category1", "category2"])
&lt;/denchmark-code&gt;

the parameter cfg from __init__(self, nlp, **cfg): is EMPTY, so I can't get categories.
Why does this happen? Did I do something wrong? Is this a bug? I just followed the &lt;denchmark-link:https://spacy.io/usage/saving-loading#advanced-cfg&gt;documentation&lt;/denchmark-link&gt;
.
  is not passed here &lt;denchmark-link:https://github.com/explosion/spaCy/blob/master/spacy/util.py#L209&gt;https://github.com/explosion/spaCy/blob/master/spacy/util.py#L209&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System: Linux
Python Version Used: 3.6
spaCy Version Used: 2.2.3
Environment Information: virtualenv

	</description>
	<comments>
		<comment id='1' author='alessandrobokan' date='2020-03-13T09:16:53Z'>
		Thanks for the report, this does look like a problem for spacy.load().
&lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
 may have a better idea, but my first suggestion would be that  in  should be used to update the  that's passed to the component:
    for name in pipeline:
        if name not in disable:
            config = meta.get("pipeline_args", {}).get(name, {})
            config.update(overrides.get("pipeline_args", {}).get(name, {}))
            factory = factories.get(name, name)
            component = nlp.create_pipe(factory, config=config)
            nlp.add_pipe(component, name=name)
instead of:



spaCy/spacy/util.py


        Lines 205 to 210
      in
      26a90f0






 for name in pipeline: 



 if name not in disable: 



 config = meta.get("pipeline_args", {}).get(name, {}) 



 factory = factories.get(name, name) 



 component = nlp.create_pipe(factory, config=config) 



 nlp.add_pipe(component, name=name) 





I think a second possibility would be to store the overrides in nlp somewhere so it's accessible to pipeline components from this point on:



spaCy/spacy/util.py


         Line 197
      in
      26a90f0






 nlp = cls(meta=meta, **overrides) 





		</comment>
		<comment id='2' author='alessandrobokan' date='2020-03-27T21:08:52Z'>
		Hello guys, there is no answer from &lt;denchmark-link:https://github.com/adrianeboyd&gt;@adrianeboyd&lt;/denchmark-link&gt;
 ... I think this issue is kinda important. It appear in the spacy documentation also.
Thanks üëç
		</comment>
		<comment id='3' author='alessandrobokan' date='2020-04-29T11:01:32Z'>
		Addressed by PR &lt;denchmark-link:https://github.com/explosion/spaCy/pull/5374&gt;#5374&lt;/denchmark-link&gt;
, will be fixed in spaCy 2.3 onwards.
		</comment>
	</comments>
</bug>