<bug id='5321' author='koaning' open_date='2020-04-16T18:52:26Z' closed_time='2020-04-16T21:15:05Z'>
	<summary>Documentation of Vocab.set_vector</summary>
	<description>
I think I have found a bug in the &lt;denchmark-link:https://spacy.io/usage/vectors-similarity#custom-vectors-add&gt;custom vectors add&lt;/denchmark-link&gt;
 documentation page. Either the code has a bug or the example seems to do something unexpected.
It lists an example on how to add words/vectors to a Vocab.
import numpy
from spacy.vocab import Vocab

vector_data = {"dog": numpy.random.uniform(-1, 1, (300,)),
               "cat": numpy.random.uniform(-1, 1, (300,)),
               "orange": numpy.random.uniform(-1, 1, (300,))}
vocab = Vocab()
for word, vector in vector_data.items():
    vocab.set_vector(word, vector)
But there are some weird things happening when I run this.
&gt; len(vocab) 
1
&gt; [(v.text, v.vector[:2]) for v in vocab]
[('dog', array([-0.61085355, -0.22828616], dtype=float32))]
It only seems to capture the first element of the dictionary instead of all three of them.
&lt;denchmark-h:h2&gt;Working Example&lt;/denchmark-h&gt;

This example does work because I'm passing in all the strings first explicitly.
vector_data = {"dog": numpy.random.uniform(-1, 1, (300,)),
               "cat": numpy.random.uniform(-1, 1, (300,)),
               "orange": numpy.random.uniform(-1, 1, (300,))}
vocab = Vocab(strings=vector_data.keys())
for word, vector in vector_data.items():
    vocab.set_vector(word, vector)
Now;
&gt; [(v.text, v.vector[:2]) for v in vocab]
[('dog', array([-0.6672105 ,  0.56734383], dtype=float32)),
 ('cat', array([0.49812433, 0.8410345 ], dtype=float32)),
 ('orange', array([ 0.88168585, -0.8406019 ], dtype=float32))]
The behavior appeared both locally on my mac as well as on google colab.
&lt;denchmark-code&gt;============================== Info about spaCy ==============================

spaCy version    2.2.4                         
Location         /usr/local/lib/python3.6/dist-packages/spacy
Platform         Linux-4.19.104+-x86_64-with-Ubuntu-18.04-bionic
Python version   3.6.9                         
Models           en    

============================== Info about spaCy ==============================

spaCy version    2.2.4                         
Location         /Users/vincent/Development/whatlies/venv/lib/python3.7/site-packages/spacy
Platform         Darwin-19.3.0-x86_64-i386-64bit
Python version   3.7.7
&lt;/denchmark-code&gt;

Screenshot;
&lt;denchmark-link:https://user-images.githubusercontent.com/1019791/79494507-6b433a00-8023-11ea-926a-82f0a426bcac.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='koaning' date='2020-04-16T19:29:01Z'>
		I can replicate this in v2.2.4 but it looks like &lt;denchmark-link:https://github.com/explosion/spaCy/pull/5266&gt;#5266&lt;/denchmark-link&gt;
 has already fixed this in . The line that adds the lexeme was indented incorrectly so the lexeme is only added if the vectors are resized internally, which only happens on the first word in this example.
I think the vectors are getting added, just not the lexeme in the vocab. If you add/access the lexeme directly (with vocab["word"]) you can access the vector, too.
		</comment>
		<comment id='2' author='koaning' date='2020-04-16T21:15:05Z'>
		I can confirm that indeed this does work.
&lt;denchmark-code&gt;import numpy
from spacy.vocab import Vocab

vector_data = {"dog": numpy.random.uniform(-1, 1, (300,)),
               "cat": numpy.random.uniform(-1, 1, (300,)),
               "orange": numpy.random.uniform(-1, 1, (300,))}
vocab = Vocab()
for word, vector in vector_data.items():
    vocab.set_vector(word, vector)
vocab["cat"].vector
&lt;/denchmark-code&gt;

I'll close the issue for now then since this is temporary.
		</comment>
		<comment id='3' author='koaning' date='2020-05-20T21:02:43Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>