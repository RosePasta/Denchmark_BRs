<bug id='1574' author='Gauravtolani' open_date='2017-11-14T10:18:18Z' closed_time='2018-05-28T16:37:50Z'>
	<summary>stop words missing for en_core_web_md and en_core_web_lg for spaCy v2.0</summary>
	<description>
en_core_web_md and en_core_web_lg models are giving 'False' for all words in the sentence using "is_stop" attribute.
PS : en_core_web_sm is working fine.
System Information :

Python version: 2.7.12
Platform: Linux-4.10.0-38-generic-x86_64-with-Ubuntu-16.04-xenial
spaCy version: 2.0.2
Models: en

	</description>
	<comments>
		<comment id='1' author='Gauravtolani' date='2017-11-21T22:40:18Z'>
		Thanks for the report and sorry about that – this should be fixed in the next update to the models.
In the meantime, here's a workaround:
nlp = spacy.load('en_core_web_lg')

for word in nlp.Defaults.stop_words:
    lex = nlp.vocab[word]
    lex.is_stop = True
		</comment>
		<comment id='2' author='Gauravtolani' date='2017-12-06T15:02:27Z'>
		With en_core_web_sm (spaCy 2.0.4), is_stop depends on casing:
&gt;&gt;&gt; import spacy
&gt;&gt;&gt; nlp = spacy.load('en_core_web_sm')
&gt;&gt;&gt; [nlp(s)[0].is_stop for s in 'this This THIS tHIS the The THE tHE'.split()]
[True, False, False, False, True, False, False, False]
# Expected [True, True, False/True, False/True, True, True, False/True, False/True].
&lt;denchmark-h:h2&gt;Info about spaCy&lt;/denchmark-h&gt;


spaCy version: 2.0.4
Platform: Linux-3.16.0-4-amd64-x86_64-with-debian-8.8
Python version: 3.6.0
Models: en_core_web_lg, en_vectors_web_lg, en_core_web_sm

en_core_web_sm for spaCy 2.0.0a10 correctly returned t.is_stop == True for both this and This.
		</comment>
		<comment id='3' author='Gauravtolani' date='2018-02-13T19:31:42Z'>
		Bump. I'm facing the same using en_core_web_sm.
Is this the expected output for the is_stop ?  Or should we be using a different approach?
		</comment>
		<comment id='4' author='Gauravtolani' date='2018-02-17T21:16:44Z'>
		I know this has been an issue a long time --- the delay comes back to some infrastructure problems, which have made getting all the models retrained a hassle.
The following fix to the  CLI command should make sure the issue doesn't reoccur: &lt;denchmark-link:https://github.com/explosion/spaCy/commit/262d0a3148c9840b6df58ee955181c1cd486f8b1&gt;262d0a3&lt;/denchmark-link&gt;

The models for v2.1.0 are currently training, so fingers crossed updated models should be deployed soon.
		</comment>
		<comment id='5' author='Gauravtolani' date='2018-05-08T11:45:57Z'>
		Hi
Is this still the way to go:
&lt;denchmark-code&gt;nlp = spacy.load('en_core_web_lg')

for word in nlp.Defaults.stop_words:
    lex = nlp.vocab[word]
    lex.is_stop = True
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='Gauravtolani' date='2018-05-18T03:22:03Z'>
		This still leaves the is_stop property sensitive to case (ie "What" vs "what") - sounds like the fix needs to be applied upstream - as it is this is simple enough to handle outside of the token attribute system.
		</comment>
		<comment id='7' author='Gauravtolani' date='2018-05-23T00:04:44Z'>
		Any updates or ETA on this?
		</comment>
		<comment id='8' author='Gauravtolani' date='2018-05-24T14:19:40Z'>
		Slightly better stopwords workaround (but still not a good solution):
&lt;denchmark-code&gt;for word in nlp.Defaults.stop_words:
    for w in (word, word[0].upper() + word[1:], word.upper()):
        lex = nlp.vocab[w]
        lex.is_stop = True
&lt;/denchmark-code&gt;

This sets is_stop on the lowercase, uppercase, and first-char uppercase form for each.
		</comment>
		<comment id='9' author='Gauravtolani' date='2018-05-24T18:45:24Z'>
		Any progress?
I'm using the above snippet atm.
		</comment>
		<comment id='10' author='Gauravtolani' date='2018-05-28T14:07:53Z'>
		Why does a stop word need to be in the vocabulary? (general question)
		</comment>
		<comment id='11' author='Gauravtolani' date='2018-05-28T14:36:11Z'>
		We're currently training new models for the upcoming nightly release of the  branch (spaCy v2.1.0). You can lurk the &lt;denchmark-link:https://github.com/explosion/spacy-models&gt;spacy-models&lt;/denchmark-link&gt;
 repo for updates and progress, but it's all currently pre-alpha. Sorry this was taking so long – it really did come down to getting the infrastructure right to be able to train our current model family reliably (and be able to add more languages in the future).
&lt;denchmark-link:https://github.com/adrianog&gt;@adrianog&lt;/denchmark-link&gt;
 The  attribute is an attribute on the lexeme, i.e. the context-independent entry in the vocabulary.
		</comment>
		<comment id='12' author='Gauravtolani' date='2018-05-29T00:58:34Z'>
		&lt;denchmark-link:https://github.com/ines&gt;@ines&lt;/denchmark-link&gt;
 I see. Where vocabulary here is to be intended as spacy vocaculary i.e. lexeme.is_oov() could still return "False"?
		</comment>
		<comment id='13' author='Gauravtolani' date='2018-06-28T01:42:02Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>