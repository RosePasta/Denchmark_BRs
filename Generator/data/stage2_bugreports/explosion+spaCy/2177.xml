<bug id='2177' author='chandan2495' open_date='2018-04-03T07:14:27Z' closed_time='2018-04-03T16:30:29Z'>
	<summary>Why are we looking for exactly one attribute in case of set_extension on a doc.</summary>
	<description>



spaCy/spacy/tokens/doc.pyx


         Line 100
      in
      0de599b






 assert nr_defined == 1 





	</description>
	<comments>
		<comment id='1' author='chandan2495' date='2018-04-03T10:24:03Z'>
		Sorry about the lack of a clearer message here ‚Äì my PR in &lt;denchmark-link:https://github.com/explosion/spaCy/pull/2163&gt;#2163&lt;/denchmark-link&gt;
 actually addresses this, removes all the random s and replaces them with proper error messages and more information. (See &lt;denchmark-link:https://github.com/explosion/spaCy/pull/2163/files#diff-12839294d4cfa46801ac1f6075166f4bL100&gt;here&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/explosion/spaCy/pull/2163/files#diff-e05544161ef9df2b97bc6ee9e9732503R221&gt;here&lt;/denchmark-link&gt;
 for this specific case.)
I also just noticed that the way we're checking the arguments here is bad ‚Äì you should in fact be able to define a getter and setter ‚Äì just not any other combinations. Will fix this, thanks! üëç
Some more background on this, also in case others come across this issue later: spaCy supports &lt;denchmark-link:https://spacy.io/usage/processing-pipelines#custom-components-attributes&gt;three different types&lt;/denchmark-link&gt;
 of extension attributes:

Attribute extensions with a default value, e.g. default=False.
Property extensions with a getter and setter.
Method extensions that make the extension attribute callable using the provided method.

When you register an attribute, you'll need to decide which one it should be ‚Äì for example, you can't mix a getter and a default value or a method and a getter, because this would make it impossible for spaCy to know how to retrieve the value and which function to execute.
		</comment>
		<comment id='2' author='chandan2495' date='2018-05-07T17:52:57Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>