<bug id='254' author='Hananel-Hazan' open_date='2019-05-23T19:04:45Z' closed_time='2019-05-31T18:08:13Z'>
	<summary>Encoder in environment.GymEnvironment</summary>
	<description>
Trying to use environment.GymEnvironment in BindsNET without encoder lead to a error in loading.
&lt;denchmark-link:https://github.com/k-chaney&gt;@k-chaney&lt;/denchmark-link&gt;
, I think encoder should be an option not mandatory.
	</description>
	<comments>
		<comment id='1' author='Hananel-Hazan' date='2019-05-23T19:09:24Z'>
		&lt;denchmark-link:https://github.com/BindsNET/bindsnet/pull/255&gt;#255&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='Hananel-Hazan' date='2019-05-23T19:09:56Z'>
		Yeah, is it possible to default to ? &lt;denchmark-link:https://github.com/BindsNET/bindsnet/pull/255&gt;#255&lt;/denchmark-link&gt;
 seems like it'd work, too. Any thoughts &lt;denchmark-link:https://github.com/k-chaney&gt;@k-chaney&lt;/denchmark-link&gt;
?
By the way, I think spike_encoders.py should be kept in the bindsnet/encoders/ folder, and I think it'd be best if you put all the Encoder classes in bindsnet/encoders/__init__.py.
		</comment>
		<comment id='3' author='Hananel-Hazan' date='2019-05-23T20:24:08Z'>
		I think that by default encoder,  image_encoder and label_encoder need to be set to NullEncoder
That can solve the issue and my commit need to be cancel
		</comment>
		<comment id='4' author='Hananel-Hazan' date='2019-05-27T19:39:21Z'>
		Sorry about the delay, I've been diving into the other feature I'm working on. This seems like a reasonable change. I just pushed a branch chaney/gym_env_encoder_fix that deals with this as described.

Do we want the encoders to be in their own module or should we leverage the encodings module that already exists?
For the GymEnvironment the encoder default is NullEncoder.
For the torchvision.dataset wrapping, we should probably keep them as mandatory positional arguments and just allow None to convert to NullEncoder in the constructor. This maintains the format of bindsnet arguments first and then the dataset specific arguments second and as keyword arguments.

		</comment>
		<comment id='5' author='Hananel-Hazan' date='2019-05-28T00:01:34Z'>
		Thanks &lt;denchmark-link:https://github.com/k-chaney&gt;@k-chaney&lt;/denchmark-link&gt;
.
Yes, leveraging the encoder module is preferred. 2 and 3 look good.
		</comment>
		<comment id='6' author='Hananel-Hazan' date='2019-05-28T15:15:39Z'>
		Yeah, I think should keep both the functional and class interfaces to the encodings in bindsnet/encoding/__init__.py.
		</comment>
		<comment id='7' author='Hananel-Hazan' date='2019-05-29T15:51:52Z'>
		Just pushed some changes to fix 1. I'll submit a pull request.
		</comment>
	</comments>
</bug>