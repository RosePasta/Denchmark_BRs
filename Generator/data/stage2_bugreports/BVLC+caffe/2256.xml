<bug id='2256' author='EvanWeiner' open_date='2015-04-04T10:49:04Z' closed_time='2017-04-13T20:54:42Z'>
	<summary>Hang: Caffe .init or .forward hangs when OpenCV is imported in same python module</summary>
	<description>
SUMMARY:
Caffe initialization hangs when OpenCV is imported in a python script and CUDNNV2 is installed.
If CUDNNV2 is not installed, Caffe hangs on first .forward through the net.
REPRO STEPS:

Install OpenCV 2.4.10.1 and Caffe latest with CUDNN V2 and Cuda7 on Ubuntu 14.04
Add "import cv2" to the top app.py file in examples/web_demo
Run the web demo with gpu on

ACTUAL RESULTS:
Net begins to be set up but hangs on this step (as seen in output):
I0404 10:38:50.971274  3765 net.cpp:113] Setting up conv1
The hang last for about 5-10 minutes. If you remove "import cv2" then the net is set up in seconds.
EXPECTED RESULTS:
No hang.
NOTES:
The hang occurs when the interpreter hits this line:
caffe.Net.init(self, model_file, pretrained_file, caffe.TEST)
Note that if CUDNNV2 is not installed, there is no hang on set up of the net. But there is a hang on .forward pass through a net.
This bug has nothing to do with the web_demo, I am just using that example for a minimal repro. You can also reproduce this bug by loading your own network. I tried loading VGG and CaffeNet independently and still experienced this issue.
	</description>
	<comments>
		<comment id='1' author='EvanWeiner' date='2015-09-17T14:52:21Z'>
		Same behaviour with OpenCV 3. Any hint?
		</comment>
		<comment id='2' author='EvanWeiner' date='2015-12-10T16:21:18Z'>
		I have same problem with OpenCV 3 and CUDA 7.5
when I run in CPU mode every thing is OK, But in GPU mode I have problem
		</comment>
		<comment id='3' author='EvanWeiner' date='2015-12-18T23:15:36Z'>
		Hi.
I have been experiencing the same issue.
Anyone has ever fixed this or found a way to avoid this bug? , running on CPU is so slow.
Thanks!
Opencv 3.0
CUDA 7.0
Caffe Nvidia Fork (lastest)
		</comment>
		<comment id='4' author='EvanWeiner' date='2016-01-31T02:45:06Z'>
		I have been experiencing the same issue with CUDA 7.5, CUDNN V3 and OpenCV 3 (built from source) on Ubuntu 14.04. I'm using a Titan X.
The hang happens when  is called in , and that function call takes about 30s in my case. The slowness might be related to the initialization of lazy context establishment as discussed in &lt;denchmark-link:http://stackoverflow.com/questions/11664627/linking-with-3rd-party-cuda-libraries-slows-down-cudamalloc&gt;here&lt;/denchmark-link&gt;
. I'm not familiar with this, but it seems that other libraries (e.g. OpenCV) that use CUDA might be causing some resetting to be done and thus  is forced to redo some recompilation.
My fix (or workaround) was to build OpenCV without CUDA, e.g.
cmake -D WITH_CUDA=OFF ../opencv
		</comment>
		<comment id='5' author='EvanWeiner' date='2016-02-18T18:33:33Z'>
		I have also seen this issue.  In my case (on Ubuntu 14.04) using python-opencv (e.g. version 2) installed via apt instead of OpenCV 3 compiled from source avoids the issue.
		</comment>
		<comment id='6' author='EvanWeiner' date='2016-02-20T20:02:38Z'>
		Same issue here. I have OpenCV 3.0 compiled from sources with CUDA support. Strange thing is that caffe.set_mode_cpu() does not improve anything.
Building OpenCV 3.0 from source without CUDA helped for now.
		</comment>
		<comment id='7' author='EvanWeiner' date='2017-04-13T20:54:42Z'>
		This seems like a downstream conflict between cuDNN and CUDA-enabled OpenCV. Closing as out-of-scope.
		</comment>
	</comments>
</bug>