<bug id='2186' author='zym1010' open_date='2015-03-24T00:54:38Z' closed_time='2017-04-13T02:45:46Z'>
	<summary>GPU 0 is also used when running on other GPUs (#440 reocurred?)</summary>
	<description>
I just built caffe-rc2 with CUDA 7.0 and Driver 346.47. When running the test on my first GPU (with id 0), everything works fine. However, when running the test on 2nd GPU (with id 1, or build/test/test_all.testbin 1), the command nvidia-smi shows that both GPUs are being used. This is not the case when I'm running the test on GPU0, nor when I'm running the test using caffe-rc1 (built with CUDA 6.5 a while ago). I tried building caffe-rc2 using CUDA 6.5, and the problem persists.
By setting , and running , the problem disappeared. So this seems like a problem like that in &lt;denchmark-link:https://github.com/BVLC/caffe/issues/440&gt;#440&lt;/denchmark-link&gt;
?
Update: when I ran build/test/test_all.testbin 1 --gtest_filter=DataLayerTest*, with my GPU0's memory filled up using some other software (cuda_memtest in my case), the program failed:
&lt;denchmark-code&gt;build/test/test_all.testbin 1 --gtest_filter=DataLayerTest/3*
Cuda number of devices: 2
Setting to use device 1
Current device id: 1
Note: Google Test filter = DataLayerTest/3*
[==========] Running 12 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 12 tests from DataLayerTest/3, where TypeParam = caffe::DoubleGPU
[ RUN      ] DataLayerTest/3.TestReadLevelDB
F0324 20:34:20.499236 20499 benchmark.cpp:111] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
    @     0x7f16777cfdaa  (unknown)
    @     0x7f16777cfce4  (unknown)
    @     0x7f16777cf6e6  (unknown)
    @     0x7f16777d2687  (unknown)
    @     0x7f1675f133b8  caffe::Timer::Init()
    @     0x7f1675f13569  caffe::CPUTimer::CPUTimer()
    @     0x7f1675ebacec  caffe::DataLayer&lt;&gt;::InternalThreadEntry()
    @     0x7f166de8da4a  (unknown)
    @     0x7f16755f5182  start_thread
    @     0x7f167532247d  (unknown)
    @              (nil)  (unknown)
Aborted (core dumped)
&lt;/denchmark-code&gt;

With other test categories (at least NeuronLayerTest and FlattenLayerTest), the program works fine.
	</description>
	<comments>
		<comment id='1' author='zym1010' date='2015-05-08T04:11:00Z'>
		Thanks for the report. We've seen this as well; a fix is forthcoming.
		</comment>
		<comment id='2' author='zym1010' date='2017-04-13T02:45:46Z'>
		Closing as fixed.
		</comment>
		<comment id='3' author='zym1010' date='2017-04-13T19:56:12Z'>
		&lt;denchmark-link:https://github.com/shelhamer&gt;@shelhamer&lt;/denchmark-link&gt;
 thanks. so is the fix PR merged?
		</comment>
		<comment id='4' author='zym1010' date='2017-04-13T22:46:45Z'>
		It should be fixed, yes. Sorry, but I can't find the PR number at the moment.
		</comment>
		<comment id='5' author='zym1010' date='2017-04-13T23:11:19Z'>
		&lt;denchmark-link:https://github.com/shelhamer&gt;@shelhamer&lt;/denchmark-link&gt;
 thanks. I just checked the RC5 version and it seems to be working!
		</comment>
		<comment id='6' author='zym1010' date='2017-06-30T02:59:04Z'>
		Still has the problem using 1.0.
8 x 1080Ti. python2
One process set_device_id(1):
&lt;denchmark-link:https://user-images.githubusercontent.com/3861633/27719079-bba717ee-5d82-11e7-9eb8-0a170874eb08.png&gt;&lt;/denchmark-link&gt;

10 processes set_device_id($i), i from [0,9]:
&lt;denchmark-link:https://user-images.githubusercontent.com/3861633/27719151-1cff9f16-5d83-11e7-8260-5f021549cbd3.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='zym1010' date='2017-10-16T07:56:51Z'>
		&lt;denchmark-link:https://github.com/sczhengyabin&gt;@sczhengyabin&lt;/denchmark-link&gt;
  Have you fixed it ï¼Ÿ I meet the same problem as you. Is the pythonlayer  relative to the issue?
		</comment>
		<comment id='8' author='zym1010' date='2017-10-16T08:10:01Z'>
		&lt;denchmark-link:https://github.com/646677064&gt;@646677064&lt;/denchmark-link&gt;

Not yet.
However, I set the ENV variable "CUDA_VISIBLE_DEVICES=#gpu_id" to prevent the caffe program from seeing other GPUs.
Examples:
CUDA_VISIBLE_DEVICES=0 python caffe_test.py
		</comment>
		<comment id='9' author='zym1010' date='2017-11-08T09:37:42Z'>
		&lt;denchmark-link:https://github.com/646677064&gt;@646677064&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/sczhengyabin&gt;@sczhengyabin&lt;/denchmark-link&gt;

Do you call  before? If your answer is 'yes', you only need call  before:
&lt;denchmark-code&gt;caffe.set_device(devide_id)
caffe.set_mode_gpu()
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>