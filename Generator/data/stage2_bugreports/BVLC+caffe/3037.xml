<bug id='3037' author='andykitchen' open_date='2015-09-06T02:28:49Z' closed_time='2015-11-05T09:35:12Z'>
	<summary>MNIST Autoencoder Example hangs on data layer lock</summary>
	<description>
Hi, All
I'm running &lt;denchmark-link:https://github.com/BVLC/caffe/commit/5367a1af5dc8a56a284b7f1c67efce097871955a&gt;5367a1a&lt;/denchmark-link&gt;
 and running the mnist Autoencoder example just hangs. I have a very vanilla setup compiled on ubuntu 14.04 using cuda 7.0.
	</description>
	<comments>
		<comment id='1' author='andykitchen' date='2015-09-06T02:34:48Z'>
		the problem is not present in &lt;denchmark-link:https://github.com/BVLC/caffe/commit/8181870b9ac330a094ab0f8d53f54a0202f697a0&gt;8181870&lt;/denchmark-link&gt;
 I'm using that version currently
		</comment>
		<comment id='2' author='andykitchen' date='2015-09-08T12:34:24Z'>
		Same here. Curious: what Cuda Toolkit version are you using? I'm using 5.5, for which this older commit works out of the box (as opposed to having to throw away some multi-GPU code blocks in a C++ file with the following commits).
		</comment>
		<comment id='3' author='andykitchen' date='2015-09-16T14:19:07Z'>
		I also can confirm this issue.
Additionally, the MNIST autoencoder does not work with leveldb because the TRAIN datalayer locks train_leveldb.
		</comment>
		<comment id='4' author='andykitchen' date='2015-09-16T18:36:47Z'>
		A temporary workaround in this case would be to rename the source in the "test-on-train" data layer to:

source: "./examples/mnist/mnist_train_lmdb"

vs.

source: "examples/mnist/mnist_train_lmdb"

The problem was introduced by the MultiGPU extension, particularly in &lt;denchmark-link:https://github.com/BVLC/caffe/commit/bcc8f50a95ecad954d1887f3fb273eaa298e2274&gt;bcc8f50&lt;/denchmark-link&gt;
 partly as a result of lines 23-29 in data_reader.cpp:
string key = source_key(param);
weak_ptr&lt;Body&gt;&amp; weak = bodies_[key];
body_ = weak.lock();
if (!body_) {
  body_.reset(new Body(param));
  bodies_[key] = weak_ptr&lt;Body&gt;(body_);
}
Only one Body object is created per data source (the "key" being the path to the source/lmdb, hence the workaround), and for some reason this prevents the "test-on-train" data layer during setup from completing Datum&amp; datum = *(reader_.full().peek())  in DataLayer&lt;Dtype&gt;::DataLayerSetUp().
I have a rough patch that I could PR in, unless the people who were involved with that branch (&lt;denchmark-link:https://github.com/cypof&gt;@cypof&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/ronghanghu&gt;@ronghanghu&lt;/denchmark-link&gt;
) would prefer to take a crack at addressing it. Basically, it uses an additional layer parameter to override the "one Body per data source" restriction, but there's probably a more principled way to address this.
		</comment>
		<comment id='5' author='andykitchen' date='2015-09-17T05:41:38Z'>
		&lt;denchmark-link:https://github.com/rdipietro&gt;@rdipietro&lt;/denchmark-link&gt;
 I was using CUDA 7.0, which was the newest at the time. &lt;denchmark-link:https://github.com/BVLC/caffe/commit/8181870b9ac330a094ab0f8d53f54a0202f697a0&gt;8181870&lt;/denchmark-link&gt;
 compiles out of the box for me with CUDA 7.0
		</comment>
		<comment id='6' author='andykitchen' date='2015-10-30T17:26:12Z'>
		I can confirm this bug as well. adding "./" to the source resolves the issue.
		</comment>
		<comment id='7' author='andykitchen' date='2015-10-30T20:20:39Z'>
		If using the path as a key, then perhaps the path should be made canonical.
		</comment>
		<comment id='8' author='andykitchen' date='2015-11-01T09:17:58Z'>
		Same bug. And the "./" trick works.
		</comment>
		<comment id='9' author='andykitchen' date='2015-11-05T09:35:12Z'>
		Closing in favor of &lt;denchmark-link:https://github.com/BVLC/caffe/issues/3108&gt;#3108&lt;/denchmark-link&gt;
, which more directly explains the issue here.
		</comment>
		<comment id='10' author='andykitchen' date='2016-03-23T00:05:57Z'>
		Adding the "./" in "test-on-train" data layer works well. &lt;denchmark-link:https://github.com/mohomran&gt;@mohomran&lt;/denchmark-link&gt;
 Thank you very much.
		</comment>
		<comment id='11' author='andykitchen' date='2017-03-18T01:10:15Z'>
		Adding the "./" in "test-on-train" data layer works well. &lt;denchmark-link:https://github.com/mohomran&gt;@mohomran&lt;/denchmark-link&gt;
 Thank you very much.
		</comment>
	</comments>
</bug>