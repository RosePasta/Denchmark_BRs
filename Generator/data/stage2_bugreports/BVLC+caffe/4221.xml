<bug id='4221' author='ngaloppo' open_date='2016-05-26T22:41:56Z' closed_time='2016-05-27T17:51:45Z'>
	<summary>PythonLayer test failing with OpenCL</summary>
	<description>
I'm running Ubuntu 16.04 on the  branch. Calling &lt;denchmark-link:https://github.com/naibaf7&gt;@naibaf7&lt;/denchmark-link&gt;
 for assistance.
To reproduce:

make
make pytest
test fails with

Makefile attached.
&lt;denchmark-link:https://github.com/BVLC/caffe/files/285465/Makefile.config.opencl.txt&gt;Makefile.config.opencl.txt&lt;/denchmark-link&gt;

Here's the coredump:
&lt;denchmark-code&gt;.I0526 15:33:35.458488  3296 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: /tmp/tmp_0IiiY     
I0526 15:33:35.458562  3296 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.                           
W0526 15:33:35.458576  3296 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.          
I0526 15:33:35.458768  3296 net.cpp:53] Initializing net from parameters:                                                                       
name: "pythonnet"                                                                                                                               
force_backward: true                                                                                                                            
state {                                                                                                                                         
  phase: TRAIN                                                                                                                                  
}                                                                                                                                               
layer {                                                                                                                                         
  name: "input"                                                                                                                                 
  type: "Input"                                                                                                                                 
  top: "data"                                                                                                                                   
  input_param {                                                                                                                                 
    shape {                                                                                                                                     
      dim: 10                                                                                                                                   
      dim: 9                                                                                                                                    
      dim: 8                                                                                                                                    
    }                                                                                                                                           
  }                                                                                                                                             
}                                                                                                                                               
layer {                                                                                                                                         
  name: "mul10"                                                                                                                                 
  type: "Python"                                                                                                                                
  bottom: "data"                                                                                                                                
  top: "mul10"                                                                                                                                  
  python_param {                                                                                                                                
    module: "test_python_layer_with_param_str"                                                                                                  
    layer: "SimpleParamLayer"                                                                                                                   
    param_str: "10"                                                                                                                             
  }                                                                                                                                             
}                                                                                                                                               
layer {                                                                                                                                         
  name: "mul2"                                                                                                                                  
  type: "Python"                                                                                                                                
  bottom: "mul10"                                                                                                                               
  top: "mul2"                                                                                                                                   
  python_param {                                                                                                                                
    module: "test_python_layer_with_param_str"                                                                                                  
    layer: "SimpleParamLayer"                                                                                                                   
    param_str: "2"                                                                                                                              
  }                                                                                                                                             
}                                                                                                                                               
I0526 15:33:35.458997  3296 layer_factory.hpp:78] Creating layer input                                                                          
I0526 15:33:35.459058  3296 net.cpp:101] Creating Layer input                                                                                   
I0526 15:33:35.459084  3296 net.cpp:431] input -&gt; data                                                                                          
I0526 15:33:35.459190  3296 net.cpp:152] Setting up input                                                                                       
I0526 15:33:35.459228  3296 net.cpp:160] Top shape: 10 9 8 (720)                                                                                
I0526 15:33:35.459236  3296 net.cpp:171] Memory required for data: 2880                                                                         
I0526 15:33:35.459275  3296 layer_factory.hpp:78] Creating layer mul10                                                                          
I0526 15:33:35.459408  3296 net.cpp:101] Creating Layer mul10                                                                                   
I0526 15:33:35.459437  3296 net.cpp:462] mul10 &lt;- data                                                                                          
I0526 15:33:35.459491  3296 net.cpp:431] mul10 -&gt; mul10                                                                                         
I0526 15:33:35.459713  3296 net.cpp:152] Setting up mul10                                                                                       
I0526 15:33:35.459753  3296 net.cpp:160] Top shape: 10 9 8 (720)                                                                                
I0526 15:33:35.459763  3296 net.cpp:171] Memory required for data: 5760                                                                         
I0526 15:33:35.459801  3296 layer_factory.hpp:78] Creating layer mul2                                                                           
I0526 15:33:35.459920  3296 net.cpp:101] Creating Layer mul2                                                                                    
I0526 15:33:35.459947  3296 net.cpp:462] mul2 &lt;- mul10                                                                                          
I0526 15:33:35.460002  3296 net.cpp:431] mul2 -&gt; mul2                                                                                           
I0526 15:33:35.460203  3296 net.cpp:152] Setting up mul2                                                                                        
I0526 15:33:35.460240  3296 net.cpp:160] Top shape: 10 9 8 (720)                                                                                
I0526 15:33:35.460249  3296 net.cpp:171] Memory required for data: 8640                                                                         
I0526 15:33:35.460283  3296 net.cpp:241] mul2 does not need backward computation.                                                               
I0526 15:33:35.460304  3296 net.cpp:241] mul10 does not need backward computation.                                                              
I0526 15:33:35.460319  3296 net.cpp:241] input does not need backward computation.                                                              
I0526 15:33:35.460333  3296 net.cpp:284] This network produces output mul2                                                                      
I0526 15:33:35.460379  3296 net.cpp:298] Network initialization done.                                                                           
I0526 15:33:35.460389  3296 net.cpp:299] Memory required for data: 8640                                                                         

Thread 1 "python" received signal SIGSEGV, Segmentation fault.                                                                                  
0x00000000004b113d in PyObject_Call () at ../Objects/abstract.c:2544                                                                                                                 
2544    ../Objects/abstract.c: No such file or directory.                                                                                                                            
(gdb) bt                                                                                                                                                                             
#0  0x00000000004b113d in PyObject_Call () at ../Objects/abstract.c:2544                                                                                                             
#1  0x00000000004ce940 in PyEval_CallObjectWithKeywords () at ../Python/ceval.c:4219                                                                                                 
#2  0x0000000000498a98 in PyEval_CallFunction (obj=&lt;instancemethod at remote 0x7fffd20cb3c0&gt;, format=&lt;optimized out&gt;) at ../Python/modsupport.c:557                                  
#3  0x00007fffea77a45b in boost::python::call&lt;boost::python::api::object, std::vector&lt;caffe::Blob&lt;float&gt;*, std::allocator&lt;caffe::Blob&lt;float&gt;*&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bo
ol&gt; &gt;, std::vector&lt;caffe::Blob&lt;float&gt;*, std::allocator&lt;caffe::Blob&lt;float&gt;*&gt; &gt; &gt; (callable=&lt;instancemethod at remote 0x7fffd20cb3c0&gt;,                                                 
    a0=std::vector of length 1, capacity 1 = {...}, a1=std::vector&lt;bool&gt; of length 1, capacity 64 = {...}, a2=std::vector of length 1, capacity 1 = {...})                           
    at /usr/include/boost/python/call.hpp:66                                                                                                                                         
#4  0x00007fffea76b9ff in boost::python::api::object_operators&lt;boost::python::api::proxy&lt;boost::python::api::attribute_policies&gt; &gt;::operator()&lt;std::vector&lt;caffe::Blob&lt;float&gt;*, std::
allocator&lt;caffe::Blob&lt;float&gt;*&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;caffe::Blob&lt;float&gt;*, std::allocator&lt;caffe::Blob&lt;float&gt;*&gt; &gt; &gt; (this=0x7fffffffa390,           
    a0=std::vector of length 1, capacity 1 = {...}, a1=std::vector&lt;bool&gt; of length 1, capacity 64 = {...}, a2=std::vector of length 1, capacity 1 = {...})                           
    at /usr/include/boost/python/object_call.hpp:19                                                                                                                                  
#5  0x00007fffea75bbea in caffe::PythonLayer&lt;float&gt;::Backward_cpu (this=0x22f9ac0, top=std::vector of length 1, capacity 1 = {...},                                                  
    propagate_down=std::vector&lt;bool&gt; of length 1, capacity 64 = {...}, bottom=std::vector of length 1, capacity 1 = {...}) at ./include/caffe/layers/python_layer.hpp:50             
#6  0x00007fffe9bd0529 in caffe::Layer&lt;float&gt;::Backward (this=0x22f9ac0, top=std::vector of length 1, capacity 1 = {...},                                                            
    propagate_down=std::vector&lt;bool&gt; of length 1, capacity 64 = {...}, bottom=std::vector of length 1, capacity 1 = {...}) at ./include/caffe/layer.hpp:569                          
#7  0x00007fffe9bbec17 in caffe::Net&lt;float&gt;::BackwardFromTo (this=0x20fb3b0, start=2, end=0) at src/caffe/net.cpp:627                                                                
#8  0x00007fffea6d8ace in caffe::BackwardFromTo_NoGIL (net=..., start=2, end=0) at python/caffe/_caffe.cpp:281                                                                       
#9  0x00007fffea777125 in boost::python::detail::invoke&lt;int, void (*)(caffe::Net&lt;float&gt;&amp;, int, int), boost::python::arg_from_python&lt;caffe::Net&lt;float&gt;&amp;&gt;, boost::python::arg_from_pyth
on&lt;int&gt;, boost::python::arg_from_python&lt;int&gt; &gt; (f=@0xe6d8e8: 0x7fffea6d8a9f &lt;caffe::BackwardFromTo_NoGIL(caffe::Net&lt;float&gt;&amp;, int, int)&gt;, ac0=..., ac1=..., ac2=...)                  
    at /usr/include/boost/python/detail/invoke.hpp:81                                                                                                                                
#10 0x00007fffea767fb2 in boost::python::detail::caller_arity&lt;3u&gt;::impl&lt;void (*)(caffe::Net&lt;float&gt;&amp;, int, int), boost::python::default_call_policies, boost::mpl::vector4&lt;void, caffe
::Net&lt;float&gt;&amp;, int, int&gt; &gt;::operator() (this=0xe6d8e8, args_=                                                                                                                        
    (&lt;Net(_input_list=['data'], _blobs_dict=&lt;OrderedDict(_OrderedDict__root=[[[[[...], [...], 'data'], [...], 'mul10'], [...], 'mul2'], [...], None], _OrderedDict__map={'mul10': [..
.], 'mul2': [...], 'data': [...]}) at remote 0x7fffd239dd08&gt;) at remote 0x7fffd1ebeba8&gt;, 2, 0)) at /usr/include/boost/python/detail/caller.hpp:223                                   
#11 0x00007fffea7594c1 in boost::python::objects::caller_py_function_impl&lt;boost::python::detail::caller&lt;void (*)(caffe::Net&lt;float&gt;&amp;, int, int), boost::python::default_call_policies,
 boost::mpl::vector4&lt;void, caffe::Net&lt;float&gt;&amp;, int, int&gt; &gt; &gt;::operator() (this=0xe6d8e0,                                                                                             
    args=(&lt;Net(_input_list=['data'], _blobs_dict=&lt;OrderedDict(_OrderedDict__root=[[[[[...], [...], 'data'], [...], 'mul10'], [...], 'mul2'], [...], None], _OrderedDict__map={'mul10'
: [...], 'mul2': [...], 'data': [...]}) at remote 0x7fffd239dd08&gt;) at remote 0x7fffd1ebeba8&gt;, 2, 0), kw=0x0) at /usr/include/boost/python/object/py_function.hpp:38                  
#12 0x00007fffe87fa5cd in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.58.0                          
#13 0x00007fffe87fa7c8 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.58.0                                                                                        
#14 0x00007fffe8802823 in boost::python::detail::exception_handler::operator()(boost::function0&lt;void&gt; const&amp;) const () from /usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.58.0 
#15 0x00007fffea70f7cd in boost::python::detail::translate_exception&lt;std::exception, void (*)(std::exception)&gt;::operator() (this=0xe892a8, handler=..., f=...,                       
    translate=0x7fffea6d8a14 &lt;caffe::exception_translator(std::exception)&gt;) at /usr/include/boost/python/detail/translate_exception.hpp:48                                           
#16 0x00007fffea6ffbcd in boost::_bi::list3&lt;boost::arg&lt;1&gt;, boost::arg&lt;2&gt;, boost::_bi::value&lt;void (*)(std::exception)&gt; &gt;::operator()&lt;bool, boost::python::detail::translate_exception&lt;
std::exception, void (*)(std::exception)&gt;, boost::_bi::list2&lt;boost::python::detail::exception_handler const&amp;, boost::function0&lt;void&gt; const&amp;&gt; &gt; (this=0xe892b0, f=..., a=...)         
    at /usr/include/boost/bind/bind.hpp:382                                                                                                                                          
#17 0x00007fffea6f7931 in boost::_bi::bind_t&lt;bool, boost::python::detail::translate_exception&lt;std::exception, void (*)(std::exception)&gt;, boost::_bi::list3&lt;boost::arg&lt;1&gt;, boost::arg&lt;
2&gt;, boost::_bi::value&lt;void (*)(std::exception)&gt; &gt; &gt;::operator()&lt;boost::python::detail::exception_handler const&amp;, boost::function0&lt;void&gt; const&amp;&gt; (this=0xe892a8, a1=..., a2=...)      
    at /usr/include/boost/bind/bind.hpp:917                                                                                                                                          
#18 0x00007fffea6f257e in boost::detail::function::function_obj_invoker2&lt;boost::_bi::bind_t&lt;bool, boost::python::detail::translate_exception&lt;std::exception, void (*)(std::exception)
&gt;, boost::_bi::list3&lt;boost::arg&lt;1&gt;, boost::arg&lt;2&gt;, boost::_bi::value&lt;void (*)(std::exception)&gt; &gt; &gt;, bool, boost::python::detail::exception_handler const&amp;, boost::function0&lt;void&gt; con
st&amp;&gt;::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:138                                                                         
#19 0x00007fffe88025dd in boost::python::handle_exception_impl(boost::function0&lt;void&gt;) () from /usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.58.0                              
#20 0x00007fffe87f7999 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.58.0                                                                                        
#21 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#22 0x00000000004ca5ca in do_call (nk=&lt;optimized out&gt;, na=3, pp_stack=0x7fffffffaa50, func=&lt;Boost.Python.function at remote 0xeaa0e0&gt;) at ../Python/ceval.c:4567                     
#23 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffaa50) at ../Python/ceval.c:4372                                                                                         
#24 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#25 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#26 0x00000000004ca6b5 in fast_function (nk=0, na=&lt;optimized out&gt;, n=&lt;optimized out&gt;, pp_stack=0x7fffffffac60, func=&lt;function at remote 0x7fffd1e997d0&gt;) at ../Python/ceval.c:4445   
#27 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffac60) at ../Python/ceval.c:4370                                                                                         
#28 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#29 0x00000000004ca39f in fast_function (nk=&lt;optimized out&gt;, na=&lt;optimized out&gt;, n=&lt;optimized out&gt;, pp_stack=0x7fffffffadb0, func=&lt;function at remote 0x7fffd1eb5410&gt;)               
    at ../Python/ceval.c:4435                                                                                                                                                        
#30 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffadb0) at ../Python/ceval.c:4370                                                                                         
#31 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#32 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#33 0x00000000004def08 in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#34 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#35 0x00000000004c73ec in ext_do_call (nk=0, na=&lt;optimized out&gt;, flags=&lt;optimized out&gt;, pp_stack=0x7fffffffb068, func=&lt;function at remote 0x7ffff6bb5230&gt;) at ../Python/ceval.c:4662 
#36 PyEval_EvalFrameEx () at ../Python/ceval.c:3026                                                                                                                                  
#37 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#38 0x00000000004ded4e in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#39 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#40 0x00000000004f4c3e in instancemethod_call.lto_priv () at ../Objects/classobject.c:2602                                                                                           
#41 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#42 0x00000000005514d7 in slot_tp_call.lto_priv () at ../Objects/typeobject.c:5514                                                                                                   
#43 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#44 0x00000000004ca5ca in do_call (nk=&lt;optimized out&gt;, na=1, pp_stack=0x7fffffffb5e0,                                                                                                
    func=&lt;TestLayerWithParam(_testMethodName='test_backward', _resultForDoCleanups=&lt;TextTestResult(_original_stdout=&lt;file at remote 0x7ffff7fb1150&gt;, dots=True, skipped=[], _mirrorOu
tput=False, stream=&lt;_WritelnDecorator(stream=&lt;file at remote 0x7ffff7fb11e0&gt;) at remote 0x7ffff6b7f510&gt;, testsRun=10, buffer=False, _original_stderr=&lt;file at remote 0x7ffff7fb11e0&gt;,
 showAll=False, _stdout_buffer=None, _stderr_buffer=None, _moduleSetUpFailed=False, expectedFailures=[], errors=[], descriptions=True, _previousTestClass=&lt;type at remote 0x1fe46c0&gt;,
 unexpectedSuccesses=[], failures=[], _testRunEntered=True, shouldStop=False, failfast=False) at remote 0x7ffff6b5e350&gt;, _cleanups=[], _type_equality_funcs={&lt;type at remote 0x902840
&gt;: 'assertSetEqual', &lt;type at remote 0x9026a0&gt;: 'assertMultiLineEqual', &lt;type at remote 0x903f00&gt;: 'assertDictEqual', &lt;type at remote 0x903d60&gt;: 'assertTupleEqual', &lt;type at remote 
0x9019a0&gt;: 'assertSetEqual', &lt;type at remote 0x9043e0&gt;: 'assertListEqual'}, net=&lt;Net(_input_list=['data'], _blobs_dict=&lt;OrderedD...(truncated)) at ../Python/ceval.c:4567            
#45 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffb5e0) at ../Python/ceval.c:4372                                                                                         
#46 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#47 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#48 0x00000000004def08 in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#49 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#50 0x00000000004c73ec in ext_do_call (nk=0, na=&lt;optimized out&gt;, flags=&lt;optimized out&gt;, pp_stack=0x7fffffffb898, func=&lt;function at remote 0x7ffff6bbe578&gt;) at ../Python/ceval.c:4662 
#51 PyEval_EvalFrameEx () at ../Python/ceval.c:3026                                                                                                                                  
#52 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#53 0x00000000004ded4e in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#54 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#55 0x00000000004f4c3e in instancemethod_call.lto_priv () at ../Objects/classobject.c:2602                                                                                           
#56 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#57 0x00000000005514d7 in slot_tp_call.lto_priv () at ../Objects/typeobject.c:5514                                                                                                   
#58 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#59 0x00000000004ca5ca in do_call (nk=&lt;optimized out&gt;, na=1, pp_stack=0x7fffffffbe10,                                                                                                
    func=&lt;TestSuite(_tests=[&lt;TestLayerWithParam(_testMethodName='test_backward', _resultForDoCleanups=&lt;TextTestResult(_original_stdout=&lt;file at remote 0x7ffff7fb1150&gt;, dots=True, sk
ipped=[], _mirrorOutput=False, stream=&lt;_WritelnDecorator(stream=&lt;file at remote 0x7ffff7fb11e0&gt;) at remote 0x7ffff6b7f510&gt;, testsRun=10, buffer=False, _original_stderr=&lt;file at remo
te 0x7ffff7fb11e0&gt;, showAll=False, _stdout_buffer=None, _stderr_buffer=None, _moduleSetUpFailed=False, expectedFailures=[], errors=[], descriptions=True, _previousTestClass=&lt;type at
 remote 0x1fe46c0&gt;, unexpectedSuccesses=[], failures=[], _testRunEntered=True, shouldStop=False, failfast=False) at remote 0x7ffff6b5e350&gt;, _cleanups=[], _type_equality_funcs={&lt;type
 at remote 0x902840&gt;: 'assertSetEqual', &lt;type at remote 0x9026a0&gt;: 'assertMultiLineEqual', &lt;type at remote 0x903f00&gt;: 'assertDictEqual', &lt;type at remote 0x903d60&gt;: 'assertTupleEqual
', &lt;type at remote 0x9019a0&gt;: 'assertSetEqual', &lt;type at remote 0x9043e0&gt;: 'assertListEqual'}, net=&lt;Net(_input_list=['data'], _b...(truncated)) at ../Python/ceval.c:4567            
#60 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffbe10) at ../Python/ceval.c:4372                                                                                         
#61 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#62 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#63 0x00000000004def08 in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---                                                                                                                               
#64 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#65 0x00000000004c73ec in ext_do_call (nk=0, na=&lt;optimized out&gt;, flags=&lt;optimized out&gt;, pp_stack=0x7fffffffc0c8, func=&lt;function at remote 0x7ffff6bbe578&gt;) at ../Python/ceval.c:4662 
#66 PyEval_EvalFrameEx () at ../Python/ceval.c:3026                                                                                                                                  
#67 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#68 0x00000000004ded4e in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#69 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#70 0x00000000004f4c3e in instancemethod_call.lto_priv () at ../Objects/classobject.c:2602                                                                                           
#71 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#72 0x00000000005514d7 in slot_tp_call.lto_priv () at ../Objects/typeobject.c:5514                                                                                                   
#73 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#74 0x00000000004ca5ca in do_call (nk=&lt;optimized out&gt;, na=1, pp_stack=0x7fffffffc640,                                                                                                
    func=&lt;TestSuite(_tests=[&lt;TestSuite(_tests=[&lt;TestLayerWithParam(_testMethodName='test_backward', _resultForDoCleanups=&lt;TextTestResult(_original_stdout=&lt;file at remote 0x7ffff7fb1
150&gt;, dots=True, skipped=[], _mirrorOutput=False, stream=&lt;_WritelnDecorator(stream=&lt;file at remote 0x7ffff7fb11e0&gt;) at remote 0x7ffff6b7f510&gt;, testsRun=10, buffer=False, _original_s
tderr=&lt;file at remote 0x7ffff7fb11e0&gt;, showAll=False, _stdout_buffer=None, _stderr_buffer=None, _moduleSetUpFailed=False, expectedFailures=[], errors=[], descriptions=True, _previou
sTestClass=&lt;type at remote 0x1fe46c0&gt;, unexpectedSuccesses=[], failures=[], _testRunEntered=True, shouldStop=False, failfast=False) at remote 0x7ffff6b5e350&gt;, _cleanups=[], _type_eq
uality_funcs={&lt;type at remote 0x902840&gt;: 'assertSetEqual', &lt;type at remote 0x9026a0&gt;: 'assertMultiLineEqual', &lt;type at remote 0x903f00&gt;: 'assertDictEqual', &lt;type at remote 0x903d60&gt;
: 'assertTupleEqual', &lt;type at remote 0x9019a0&gt;: 'assertSetEqual', &lt;type at remote 0x9043e0&gt;: 'assertListEqual'}, net=&lt;Net(_inpu...(truncated)) at ../Python/ceval.c:4567            
#75 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffc640) at ../Python/ceval.c:4372                                                                                         
#76 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#77 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#78 0x00000000004def08 in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#79 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#80 0x00000000004c73ec in ext_do_call (nk=0, na=&lt;optimized out&gt;, flags=&lt;optimized out&gt;, pp_stack=0x7fffffffc8f8, func=&lt;function at remote 0x7ffff6bbe578&gt;) at ../Python/ceval.c:4662 
#81 PyEval_EvalFrameEx () at ../Python/ceval.c:3026                                                                                                                                  
#82 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#83 0x00000000004ded4e in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#84 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#85 0x00000000004f4c3e in instancemethod_call.lto_priv () at ../Objects/classobject.c:2602                                                                                           
#86 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#87 0x00000000005514d7 in slot_tp_call.lto_priv () at ../Objects/typeobject.c:5514                                                                                                   
#88 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                             
#89 0x00000000004ca5ca in do_call (nk=&lt;optimized out&gt;, na=1, pp_stack=0x7fffffffce70,                                                                                                
    func=&lt;TestSuite(_tests=[&lt;TestSuite(_tests=[&lt;TestSuite(_tests=[&lt;TestArrayToDatum(_resultForDoCleanups=&lt;TextTestResult(_original_stdout=&lt;file at remote 0x7ffff7fb1150&gt;, dots=True,
 skipped=[], _mirrorOutput=False, stream=&lt;_WritelnDecorator(stream=&lt;file at remote 0x7ffff7fb11e0&gt;) at remote 0x7ffff6b7f510&gt;, testsRun=10, buffer=False, _original_stderr=&lt;file at r
emote 0x7ffff7fb11e0&gt;, showAll=False, _stdout_buffer=None, _stderr_buffer=None, _moduleSetUpFailed=False, expectedFailures=[], errors=[], descriptions=True, _previousTestClass=&lt;type
 at remote 0x1fe46c0&gt;, unexpectedSuccesses=[], failures=[], _testRunEntered=True, shouldStop=False, failfast=False) at remote 0x7ffff6b5e350&gt;, _type_equality_funcs={&lt;type at remote 
0x902840&gt;: 'assertSetEqual', &lt;type at remote 0x9026a0&gt;: 'assertMultiLineEqual', &lt;type at remote 0x903f00&gt;: 'assertDictEqual', &lt;type at remote 0x903d60&gt;: 'assertTupleEqual', &lt;type at
 remote 0x9019a0&gt;: 'assertSetEqual', &lt;type at remote 0x9043e0&gt;: 'assertListEqual'}, _testMethodDoc=None, _testMethodName='test_l...(truncated)) at ../Python/ceval.c:4567            
#90 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffce70) at ../Python/ceval.c:4372                                                                                         
#91 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#92 0x00000000004ca39f in fast_function (nk=&lt;optimized out&gt;, na=&lt;optimized out&gt;, n=&lt;optimized out&gt;, pp_stack=0x7fffffffcfc0, func=&lt;function at remote 0x7ffff6bdc2a8&gt;)               
    at ../Python/ceval.c:4435                                                                                                                                                        
#93 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffcfc0) at ../Python/ceval.c:4370                                                                                         
#94 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#95 0x00000000004ca39f in fast_function (nk=&lt;optimized out&gt;, na=&lt;optimized out&gt;, n=&lt;optimized out&gt;, pp_stack=0x7fffffffd110, func=&lt;function at remote 0x7ffff6bdc578&gt;)               
    at ../Python/ceval.c:4435                                                                                                                                                        
#96 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffd110) at ../Python/ceval.c:4370                                                                                         
#97 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                  
#98 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                             
#99 0x00000000004def08 in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                   
#100 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                            
#101 0x00000000004f4c3e in instancemethod_call.lto_priv () at ../Objects/classobject.c:2602                                                                                          
#102 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                            
#103 0x00000000004f49b7 in slot_tp_init.lto_priv () at ../Objects/typeobject.c:5774                                                                                                  
#104 0x00000000004b6e2c in type_call.lto_priv () at ../Objects/typeobject.c:765                                                                                                      
#105 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                            
#106 0x00000000004ca5ca in do_call (nk=&lt;optimized out&gt;, na=0, pp_stack=0x7fffffffd6c0, func=&lt;type at remote 0xa5ecb0&gt;) at ../Python/ceval.c:4567                                     
#107 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffd6c0) at ../Python/ceval.c:4372                                                                                        
#108 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                 
#109 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                            
#110 0x00000000004c92a1 in PyEval_EvalCode () at ../Python/ceval.c:669                                                                                                               
#111 exec_statement (                                                                                                                                                                
    locals={'main': &lt;type at remote 0xa5ecb0&gt;, 'USAGE_AS_MAIN': "Usage: %(progName)s [options] [tests]\n\nOptions:\n  -h, --help       Show this message\n  -v, --verbose    Verbose 
output\n  -q, --quiet      Minimal output\n%(failfast)s%(catchbreak)s%(buffer)s\nExamples:\n  %(progName)s test_module               - run tests from test_module\n  %(progName)s mod
ule.TestClass          - run tests from module.TestClass\n  %(progName)s module.Class.test_method  - run specified test method\n\n[tests] can be a list of any number of test modules
, classes and test\nmethods.\n\nAlternative Usage: %(progName)s discover [options]\n\nOptions:\n  -v, --verbose    Verbose output\n%(failfast)s%(catchbreak)s%(buffer)s  -s directory
     Directory to start discovery ('.' default)\n  -p pattern       Pattern to match test files ('test*.py' default)\n  -t directory     Top level directory of project (default to\n
                   start directory)\n\nFor test discovery all test modules must be importable from the top\nlevel directory of the...(truncated),                                    
    globals={'main': &lt;type at remote 0xa5ecb0&gt;, 'USAGE_AS_MAIN': "Usage: %(progName)s [options] [tests]\n\nOptions:\n  -h, --help       Show this message\n  -v, --verbose    Verbose
 output\n  -q, --quiet      Minimal output\n%(failfast)s%(catchbreak)s%(buffer)s\nExamples:\n  %(progName)s test_module               - run tests from test_module\n  %(progName)s mo
dule.TestClass          - run tests from module.TestClass\n  %(progName)s module.Class.test_method  - run specified test method\n\n[tests] can be a list of any number of test module
s, classes and test\nmethods.\n\nAlternative Usage: %(progName)s discover [options]\n\nOptions:\n  -v, --verbose    Verbose output\n%(failfast)s%(catchbreak)s%(buffer)s  -s director
y     Directory to start discovery ('.' default)\n  -p pattern       Pattern to match test files ('test*.py' default)\n  -t directory     Top level directory of project (default to\
n                   start directory)\n\nFor test discovery all test modules must be importable from the top\nlevel directory of the...(truncated),                                   
    prog=&lt;code at remote 0x7ffff7f3d830&gt;, f=&lt;optimized out&gt;) at ../Python/ceval.c:5046                                                                                               
#112 PyEval_EvalFrameEx () at ../Python/ceval.c:2106                                                                                                                                 
#113 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                            
#114 0x00000000004ca6b5 in fast_function (nk=0, na=&lt;optimized out&gt;, n=&lt;optimized out&gt;, pp_stack=0x7fffffffdae0, func=&lt;function at remote 0x7ffff7e61c80&gt;) at ../Python/ceval.c:4445  
#115 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7fffffffdae0) at ../Python/ceval.c:4370                                                                                        
#116 PyEval_EvalFrameEx () at ../Python/ceval.c:2987                                                                                                                                 
#117 0x00000000004c2e05 in PyEval_EvalCodeEx () at ../Python/ceval.c:3582                                                                                                            
#118 0x00000000004ded4e in function_call.lto_priv () at ../Objects/funcobject.c:523                                                                                                  
#119 0x00000000004b1153 in PyObject_Call () at ../Objects/abstract.c:2546                                                                                                            
#120 0x000000000051ff3c in RunModule.lto_priv.1258 () at ../Modules/main.c:192                                                                                                       
#121 0x000000000049e1c8 in Py_Main () at ../Modules/main.c:587                                                                                                                       
#122 0x00007ffff7811830 in __libc_start_main (main=0x49daf0 &lt;main&gt;, argc=6, argv=0x7fffffffdf08, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, rtld_fini=&lt;optimized out&gt;,              
    stack_end=0x7fffffffdef8) at ../csu/libc-start.c:291                                                                                                                             
#123 0x000000000049da19 in _start ()                                                                                                                                                 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ngaloppo' date='2016-05-26T23:23:09Z'>
		Ah, I think this has to do with the fact that I'm releasing the GIL in the PyCaffe version on this branch (to allow multithreaded data-prefetch in python while the GPU is doing forward/backward computations). I don't think the python-layer likes that.
Let me see what I can do about it.
		</comment>
		<comment id='2' author='ngaloppo' date='2016-05-26T23:50:50Z'>
		&lt;denchmark-link:https://github.com/naibaf7&gt;@naibaf7&lt;/denchmark-link&gt;
 Ah, yes, I saw that. Thanks for looking at that. Do we need a special path that doesn't release the GIL when Python layers are present?
		</comment>
		<comment id='3' author='ngaloppo' date='2016-05-26T23:58:02Z'>
		&lt;denchmark-link:https://github.com/ngaloppo&gt;@ngaloppo&lt;/denchmark-link&gt;

I think a neat solution would be instead to acquire and release the GIL again in the python layer. I'm currently researching if that is possible or not.
If not, then yes, a second path without releasing the GIL is required.
I did not use the python layer before so this bug went through unnoticed so far.
		</comment>
		<comment id='4' author='ngaloppo' date='2016-05-27T00:22:52Z'>
		&lt;denchmark-link:https://github.com/ngaloppo&gt;@ngaloppo&lt;/denchmark-link&gt;

Ok should be fixed, does not Segfault anymore.
		</comment>
		<comment id='5' author='ngaloppo' date='2016-05-27T17:51:45Z'>
		👍
		</comment>
	</comments>
</bug>