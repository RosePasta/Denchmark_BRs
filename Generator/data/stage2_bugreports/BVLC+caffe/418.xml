<bug id='418' author='moskewcz' open_date='2014-05-15T22:00:03Z' closed_time='2015-11-05T05:06:17Z'>
	<summary>improper use of __CUDA_ARCH__ in host code (in dev)?</summary>
	<description>
in dev, in common.hpp, there are tests on CUDA_ARCH.
as per:
&lt;denchmark-link:http://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#virtual-architecture-identification-macro&gt;http://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#virtual-architecture-identification-macro&lt;/denchmark-link&gt;

it seems host code should not rely on this macro. while it all seems a bit complex/convoluted to me, i think this is not a pedantic/trivial point issue, but sensible: the host code is compiled once, with CUDA_ARCH undefined (or at least not guaranteed to have any particular value), while the device code is compiled (potentially) multiple times with different values of CUDA_ARCH. mind you, i'm a bit fuzzy on the exact way the source code is split between host and device ...
AFAIK, at run time, depending on the GPU's CM, one of these per-CM versions of each device function will actually be used for kernel launches -- maybe multiple ones for the same process when multiple GPUs are in play. so it's not really possible for the host code to have any correct single or static value of the arch.
for caffe, the net result seems to be that the block size is effectively chosen as a static 512, as opposed to 1024 as seems to be the intent (not that the intent is a good idea, mind you). this happens because the code that uses the value (indirectly) is host code (i.e. in a host function), despite being in a .cu file.
i'd assume that if one wanted to make the block size depend on the arch, you'd need use cudaGetDeviceProperties() and case-split at least per cuda device (the are various ways to do something like this).
sticking this cpp code prior to the #if that uses CUDA_ARCH in common.hpp was illustrative for me. note that the warnings get printed many times per compilation of a single .cu file:
&lt;denchmark-code&gt;#ifndef __CUDA_ARCH__
#warning( "CA undef" )
#else
#warning( "CA def" )
#endif
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='moskewcz' date='2014-05-27T16:41:58Z'>
		Setting this macro at compile time does seem a little flaky... Thanks for pointing this out, I'm going to try fix it.
		</comment>
		<comment id='2' author='moskewcz' date='2014-06-27T13:50:14Z'>
		Also bumped into this, getting the unexpected 512 block size due to the undefined __CUDA_ARCH__.
Any progress on the fix?
		</comment>
		<comment id='3' author='moskewcz' date='2015-11-05T05:06:17Z'>
		Thanks for the report, you're quite correct. I'm closing as this is removed in &lt;denchmark-link:https://github.com/BVLC/caffe/pull/3285&gt;#3285&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>