<bug id='3048' author='shliang0603' open_date='2020-06-17T01:04:39Z' closed_time='2020-08-19T06:22:41Z'>
	<summary>TypeError: object of type 'DataContainer' has no len()</summary>
	<description>
&lt;denchmark-link:https://github.com/ZwwWayne&gt;@ZwwWayne&lt;/denchmark-link&gt;
 I test in mmdetection2.0, I have only CPU. My test commad following:

python tools/test.py ./configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py ./work_dirs/latest.pth  --show-dir result --eval mAP

I got the following outputï¼š
which: no hipcc in (/HDD/anaconda3/envs/mmdetection/bin:/HDD/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)
[                                                  ] 0/169, elapsed: 0s, ETA:Traceback (most recent call last):
  File "tools/test.py", line 149, in &lt;module&gt;
    main()
  File "tools/test.py", line 127, in main
    args.show_score_thr)
  File "/HDD/project/mmdetection_hat/mmdet/apis/test.py", line 25, in single_gpu_test
    result = model(return_loss=False, rescale=True, **data)
  File "/HDD/anaconda3/envs/mmdetection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/HDD/anaconda3/envs/mmdetection/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 143, in forward
    return self.module(*inputs, **kwargs)
  File "/HDD/anaconda3/envs/mmdetection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/HDD/project/mmdetection_hat/mmdet/core/fp16/decorators.py", line 51, in new_func
    return old_func(*args, **kwargs)
  File "/HDD/project/mmdetection_hat/mmdet/models/detectors/base.py", line 149, in forward
    return self.forward_test(img, img_metas, **kwargs)
  File "/HDD/project/mmdetection_hat/mmdet/models/detectors/base.py", line 130, in forward_test
    return self.simple_test(imgs[0], img_metas[0], **kwargs)
  File "/HDD/project/mmdetection_hat/mmdet/models/detectors/two_stage.py", line 187, in simple_test
    proposal_list = self.simple_test_rpn(x, img_metas)
  File "/HDD/project/mmdetection_hat/mmdet/models/detectors/test_mixins.py", line 29, in simple_test_rpn
    proposal_list = self.rpn_head.get_bboxes(*rpn_outs, img_metas)
  File "/HDD/project/mmdetection_hat/mmdet/core/fp16/decorators.py", line 131, in new_func
    return old_func(*args, **kwargs)
  File "/HDD/project/mmdetection_hat/mmdet/models/dense_heads/anchor_head.py", line 482, in get_bboxes
    for img_id in range(len(img_metas)):
TypeError: object of type 'DataContainer' has no len()
Can you give me some advice ?
	</description>
	<comments>
		<comment id='1' author='shliang0603' date='2020-06-19T10:24:12Z'>
		Hi &lt;denchmark-link:https://github.com/shliang0603&gt;@shliang0603&lt;/denchmark-link&gt;
 ,
I am trying to reproduce the bug, did you modify any other code or setting?
		</comment>
		<comment id='2' author='shliang0603' date='2020-06-19T11:31:04Z'>
		This should be a bug since it can be reproduced.
		</comment>
		<comment id='3' author='shliang0603' date='2020-06-24T06:46:27Z'>
		I only modify some code about my custom dataset
		</comment>
		<comment id='4' author='shliang0603' date='2020-07-16T03:39:46Z'>
		Hi, I got the same problem when trying to run inference on CPU only.
After debugging, I found that the reason lies in pytorch not doing the exact same preprocessing when running on CPU only or GPU. More specifically, on your example:
&lt;denchmark-code&gt;File ".../torch/nn/parallel/data_parallel.py", line 143, in forward
    return self.module(*inputs, **kwargs)
&lt;/denchmark-code&gt;

If your have a GPU, it will not call that line but (lines 151 to 153 of the same file):
&lt;denchmark-code&gt;inputs, kwargs = self.scatter(inputs, kwargs, self.device_ids)
if len(self.device_ids) == 1:
            return self.module(*inputs[0], **kwargs[0])(
&lt;/denchmark-code&gt;

No idea what's the reason here, we probably need to search inside pytorch doc...
Back to mmdetection (mmcv to be exact), when we call that  method, your  will be transformed (see &lt;denchmark-link:https://github.com/open-mmlab/mmcv/blob/master/mmcv/parallel/scatter_gather.py#L19&gt;https://github.com/open-mmlab/mmcv/blob/master/mmcv/parallel/scatter_gather.py#L19&lt;/denchmark-link&gt;
)
One fast dirty fix can be to add data['img_metas'][0] = data['img_metas'][0].data[0] right before calling your model (under single_gpu_test.py), but that is probably not the best solution.
		</comment>
	</comments>
</bug>