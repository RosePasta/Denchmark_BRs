<bug id='4228' author='zvadaszi' open_date='2020-12-03T16:51:35Z' closed_time='2020-12-23T03:20:58Z'>
	<summary>Empirical attention with ResNext backbone</summary>
	<description>
In mmdetectiom v1 I used ResNext backbone with empirical attention 0010_dcn but in v2 I got an error.
Any ideas how to fix this?
My updated config file:
&lt;denchmark-code&gt;_base_ = '../faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py'
model = dict(

    pretrained='open-mmlab://resnext50_32x4d',
    backbone=dict(
        type='ResNeXt',
        depth=50,
        groups=32,
        base_width=4,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        style='pytorch',
        plugins=[
            dict(
                cfg=dict(
                    type='GeneralizedAttention',
                    spatial_range=-1,
                    num_heads=8,
                    attention_type='0010',
                    kv_stride=2),
                stages=(False, False, True, True),
                position='after_conv2')
        ],
        dcn=dict(type='DCN', deform_groups=1, fallback_on_stride=False),
        stage_with_dcn=(False, True, True, True)))
&lt;/denchmark-code&gt;

Error:
&lt;denchmark-code&gt;RuntimeError: Given groups=1, weight of size [256, 256, 1, 1], expected input[2, 512, 41, 73] to have 256 channels, but got 512 channels instead
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zvadaszi' date='2020-12-05T06:57:49Z'>
		Hi &lt;denchmark-link:https://github.com/zvadaszi&gt;@zvadaszi&lt;/denchmark-link&gt;
 ,
Thanks for your bug report. This is because the code forgets to declare the plugin again in the Bottleneck module of ResNext.
Add the following code after line 85 in &lt;denchmark-link:&gt;resnext.py&lt;/denchmark-link&gt;
 should works.
        if self.with_plugins:
            self.after_conv1_plugin_names = self.make_block_plugins(
                width, self.after_conv1_plugins)
            self.after_conv2_plugin_names = self.make_block_plugins(
                width, self.after_conv2_plugins)
Would you like to create a PR to fix that?
		</comment>
		<comment id='2' author='zvadaszi' date='2020-12-07T17:43:42Z'>
		Hi &lt;denchmark-link:https://github.com/ZwwWayne&gt;@ZwwWayne&lt;/denchmark-link&gt;
 ,
Thanks for you reply. If I follow your suggestion an  would be raised, because the inherited class's constructor already builds this.
As a quick dirty fix, I tried to comment this code block in resnet.Bottleneck and add it to resnext.Bottleneck, to the place you suggested, but breaks with

		</comment>
	</comments>
</bug>