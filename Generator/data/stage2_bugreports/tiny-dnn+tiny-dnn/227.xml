<bug id='227' author='ToPP13' open_date='2016-07-11T13:42:03Z' closed_time='2017-02-18T23:57:28Z'>
	<summary>Does caffe_converter reads the input data dimensions of the model in a right way?</summary>
	<description>
Good evening.
I have faced the problem of the right network reconstruction. It seems that caffe converter makes mistakes with the input data dimensions.
I have trained the lenet-like network, using caffe and DIGITS interface. I have used my own dataset with the images like
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/10911032/16732047/4576b05a-478c-11e6-93d0-beb67b2934f8.jpg&gt;&lt;/denchmark-link&gt;

They are 24 pixels wide and 40 pixels height.
However the caffe uses another dimension order(may be not that evident) - not the width x height but the other way around. This is described &lt;denchmark-link:http://caffe.berkeleyvision.org/tutorial/net_layer_blob.html&gt;here&lt;/denchmark-link&gt;
:

The conventional blob dimensions for batches of image data are number N x channel K x height H x width W

in the chapter "Blob storage and communication".
The same I see in the deploy.prototxt file of my network:

input: "data"
input_shape {
dim: 1
dim: 1
dim: 40
dim: 24
}

However I see that in the caffe_converter the input picture is first resized (24,40) -&gt; (40,24).
This is done in the:
void preprocess(...) in caffe_converter.cpp
called by void test(...) in caffe_converter.cpp
called by main(...) in caffe_converter.cpp
There I see that the size of the network stores in:
net-&gt;in_shape().width_
the "net" was assigned by the
create_net_from_caffe_prototxt(...) in layer_factory.h
that uses create_net_from_caffe_net(...) in in layer_factory.h
There I see:

int depth = static_cast(layer.input_shape(0).dim(1));
int width = static_cast(layer.input_shape(0).dim(2));
int height = static_cast(layer.input_shape(0).dim(3));

Could that be the place that caused the mistake?
I'm sorry if I'm wrong, I am just trying to make the model work.
P.S. it seems that the "power" layer is not supported by the caffe_converter. Is it planned to add it in the future?
	</description>
	<comments>
		<comment id='1' author='ToPP13' date='2016-07-18T05:25:18Z'>
		&lt;denchmark-link:https://github.com/ToPP13&gt;@ToPP13&lt;/denchmark-link&gt;

Thank you very much for your report! It is a bug and I'll try to solve it :) It seems that power layer is not so  difficult to implement, and I'll add it until the next release.
		</comment>
		<comment id='2' author='ToPP13' date='2016-07-18T09:54:49Z'>
		&lt;denchmark-link:https://github.com/ToPP13&gt;@ToPP13&lt;/denchmark-link&gt;

I've fixed the issue, I hope this will solve your problem. Thx!
		</comment>
		<comment id='3' author='ToPP13' date='2017-02-18T23:01:36Z'>
		I can confirm that this issue is fixed (my model also used non-square input layer).
		</comment>
	</comments>
</bug>