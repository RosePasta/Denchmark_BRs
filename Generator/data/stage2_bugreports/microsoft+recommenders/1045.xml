<bug id='1045' author='miguelgfierro' open_date='2020-02-10T10:06:37Z' closed_time='2020-02-21T14:02:47Z'>
	<summary>[BUG] Test error windows gpu with asyncio</summary>
	<description>
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;
tests\smoke\test_deeprec_model.py ...                                    [ 30%]
tests\smoke\test_notebooks_gpu.py .FFFFFF                                [100%]

================================== FAILURES ===================================
_______________________________ test_ncf_smoke ________________________________

notebooks = {'als_deep_dive': 'C:\\Users\\recocat\\agent\\_work\\26\\s\\notebooks\\02_model\\als_deep_dive.ipynb', 'als_pyspark': ...cornac_bpr_deep_dive': 'C:\\Users\\recocat\\agent\\_work\\26\\s\\notebooks\\02_model\\cornac_bpr_deep_dive.ipynb', ...}

    @pytest.mark.smoke
    @pytest.mark.gpu
    def test_ncf_smoke(notebooks):
        notebook_path = notebooks["ncf"]
        pm.execute_notebook(
            notebook_path,
            OUTPUT_NOTEBOOK,
            kernel_name=KERNEL_NAME,
&gt;           parameters=dict(TOP_K=10, MOVIELENS_DATA_SIZE="100k", EPOCHS=1, BATCH_SIZE=256),
        )

tests\smoke\test_notebooks_gpu.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\execute.py:96: in execute_notebook
    start_timeout=start_timeout,
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\engines.py:56: in execute_notebook_with_engine

tests\integration\test_notebooks_gpu.py:250: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\execute.py:96: in execute_notebook
    start_timeout=start_timeout,
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\engines.py:56: in execute_notebook_with_engine
    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\engines.py:296: in execute_notebook
    nb = cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\engines.py:352: in execute_managed_notebook
    preprocessor.preprocess(nb_man, kwargs)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\preprocess.py:24: in preprocess
    with self.setup_preprocessor(nb_man.nb, resources, km=km):
C:\Anaconda\envs\nightly_reco_gpu\lib\contextlib.py:81: in __enter__
    return next(self.gen)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\nbconvert\preprocessors\execute.py:324: in setup_preprocessor
    self.km, self.kc = self.start_new_kernel(cwd=path)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\papermill\preprocess.py:37: in start_new_kernel
    km, kc = super(PapermillExecutePreprocessor, self).start_new_kernel(**kwargs)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\nbconvert\preprocessors\execute.py:270: in start_new_kernel
    config=self.config)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\traitlets\traitlets.py:958: in __new__
    inst.setup_instance(*args, **kwargs)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\traitlets\traitlets.py:986: in setup_instance
    super(HasTraits, self).setup_instance(*args, **kwargs)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\traitlets\traitlets.py:977: in setup_instance
    value.instance_init(self)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\traitlets\traitlets.py:1691: in instance_init
    self._resolve_classes()
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\traitlets\traitlets.py:1696: in _resolve_classes
    self.klass = self._resolve_string(self.klass)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\traitlets\traitlets.py:1507: in _resolve_string
    return import_item(string)
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\traitlets\utils\importstring.py:34: in import_item
    module = __import__(package, fromlist=[obj])


C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\zmq\eventloop\__init__.py:3: in &lt;module&gt;
    from zmq.eventloop.ioloop import IOLoop
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\zmq\eventloop\ioloop.py:78: in &lt;module&gt;
    while _IOLoop.configurable_default() is not _IOLoop:
C:\Anaconda\envs\nightly_reco_gpu\lib\site-packages\tornado\ioloop.py:328: in configurable_default
    from tornado.platform.asyncio import AsyncIOLoop
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    """
    
    import concurrent.futures
    import functools
    
    from threading import get_ident
    from tornado.gen import convert_yielded
    from tornado.ioloop import IOLoop, _Selectable
    
    import asyncio
    
    import sys
    
    if sys.platform == 'win32':
&gt;       asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
E       AttributeError: module 'asyncio' has no attribute 'WindowsSelectorEventLoopPolicy'


&lt;/denchmark-code&gt;

link to full logs: &lt;denchmark-link:https://dev.azure.com/best-practices/recommenders/_build/results?buildId=22629&amp;view=logs&amp;j=513fa82f-6bf5-5d01-2457-cb22781e601b&amp;t=7a5e6e9e-f946-529b-9808-e051053a681e&gt;https://dev.azure.com/best-practices/recommenders/_build/results?buildId=22629&amp;view=logs&amp;j=513fa82f-6bf5-5d01-2457-cb22781e601b&amp;t=7a5e6e9e-f946-529b-9808-e051053a681e&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;In which platform does it happen?&lt;/denchmark-h&gt;

Azure Data Science Virtual Machine windows
&lt;denchmark-h:h3&gt;How do we replicate the issue?&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Expected behavior (i.e. solution)&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Other Comments&lt;/denchmark-h&gt;

	</description>
	<comments>
	</comments>
</bug>