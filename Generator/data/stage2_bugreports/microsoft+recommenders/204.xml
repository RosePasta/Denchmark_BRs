<bug id='204' author='loomlike' open_date='2018-11-06T17:32:38Z' closed_time='2019-02-06T19:58:29Z'>
	<summary>SAR single node adds columns to the train and test dataframes</summary>
	<description>
SAR single node implementation adds
'exponential' and 'rating_exponential' columns to the train data in fit(), and
'hashedUsers' column to the test data in recommend_k_items() or
hashedUsers' and 'hashedItems' columns in predict().
This would not be an expected behavior, especially when one uses/compares multiple models together by 're'-using the same set of train and test data to those models.
SAR pySpark implementation generates a copy of input dataframe and adds necessary columns to that when fit(), which we should do the same thing for the single node implementation.
	</description>
	<comments>
		<comment id='1' author='loomlike' date='2018-11-07T06:33:03Z'>
		adding &lt;denchmark-link:https://github.com/maxkazmsft&gt;@maxkazmsft&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/eisber&gt;@eisber&lt;/denchmark-link&gt;
  for discussion
		</comment>
		<comment id='2' author='loomlike' date='2018-11-07T14:55:14Z'>
		a) I agree that a copy feels more natural. If it's done for performance reasons, adding a pandas style inplace=True parameter is the way to go b) what's our investment into SAR single node?
		</comment>
		<comment id='3' author='loomlike' date='2018-11-07T15:34:22Z'>
		Adding to Markus' point, if it's done for performance reasons, we can simply drop those added columns at the end of fitting or prediction so that the datasets include the original data again at the end.
		</comment>
		<comment id='4' author='loomlike' date='2019-02-06T19:24:54Z'>
		&lt;denchmark-link:https://github.com/gramhagen&gt;@gramhagen&lt;/denchmark-link&gt;
 do you know if this behavior is still happening?
		</comment>
		<comment id='5' author='loomlike' date='2019-02-06T19:58:29Z'>
		no this has been fixed in staging by &lt;denchmark-link:https://github.com/microsoft/recommenders/pull/387&gt;#387&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>