<bug id='746' author='miguelgfierro' open_date='2019-04-18T14:25:19Z' closed_time='2019-06-01T14:50:57Z'>
	<summary>[BUG] in NNI integration test</summary>
	<description>
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;tests/integration/test_movielens.py .........                            [ 62%]
tests/integration/test_notebooks_python.py .....F                        [100%]

=================================== FAILURES ===================================
_____________________________ test_nni_tuning_svd ______________________________

notebooks = {'als_deep_dive': '/data/home/recocat/cicd/7/s/notebooks/02_model/als_deep_dive.ipynb', 'als_pyspark': '/data/home/rec...baseline_deep_dive.ipynb', 'data_split': '/data/home/recocat/cicd/7/s/notebooks/01_prepare_data/data_split.ipynb', ...}
tmp = '/tmp/pytest-of-recocat/pytest-200/tmpuj9_hwzq'

    @pytest.mark.integration
    def test_nni_tuning_svd(notebooks, tmp):
        notebook_path = notebooks["nni_tuning_svd"]
        # First stop NNI in case it is running
        subprocess.run([sys.prefix + '/bin/nnictl', 'stop'])
        check_stopped()
        pm.execute_notebook(notebook_path, OUTPUT_NOTEBOOK, kernel_name=KERNEL_NAME,
                            parameters=dict(MOVIELENS_DATA_SIZE="100k",
                                            SURPRISE_READER="ml-100k",
                                            TMP_DIR=tmp,
                                            MAX_TRIAL_NUM=1,
&gt;                                           NUM_EPOCHS=1))

tests/integration/test_notebooks_python.py:164: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/anaconda/envs/nightly_reco_base/lib/python3.6/site-packages/papermill/execute.py:94: in execute_notebook
    raise_for_execution_errors(nb, output_path)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nb = {'cells': [{'cell_type': 'code', 'metadata': {'inputHidden': True, 'hide_input': True}, 'execution_count': None, 'sour...d_time': '2019-04-18T12:09:01.272263', 'duration': 345.187067, 'exception': True}}, 'nbformat': 4, 'nbformat_minor': 2}
output_path = 'output.ipynb'

    def raise_for_execution_errors(nb, output_path):
        """Assigned parameters into the appropriate place in the input notebook
    
        Parameters
        ----------
        nb : NotebookNode
           Executable notebook object
        output_path : str
           Path to write executed notebook
        """
        error = None
        for cell in nb.cells:
            if cell.get("outputs") is None:
                continue
    
            for output in cell.outputs:
                if output.output_type == "error":
                    error = PapermillExecutionError(
                        exec_count=cell.execution_count,
                        source=cell.source,
                        ename=output.ename,
                        evalue=output.evalue,
                        traceback=output.traceback,
                    )
                    break
    
        if error:
            # Write notebook back out with the Error Message at the top of the Notebook.
            error_msg = ERROR_MESSAGE_TEMPLATE % str(error.exec_count)
            error_msg_cell = nbformat.v4.new_code_cell(
                source="%%html\n" + error_msg,
                outputs=[
                    nbformat.v4.new_output(output_type="display_data", data={"text/html": error_msg})
                ],
                metadata={"inputHidden": True, "hide_input": True},
            )
            nb.cells = [error_msg_cell] + nb.cells
            write_ipynb(nb, output_path)
&gt;           raise error
E           papermill.exceptions.PapermillExecutionError: 
E           ---------------------------------------------------------------------------
E           Exception encountered at "In [32]":
E           ---------------------------------------------------------------------------
E           RuntimeError                              Traceback (most recent call last)
E           &lt;ipython-input-32-120fb8357fc9&gt; in &lt;module&gt;
E                 1 t = time.time()
E           ----&gt; 2 stop_and_restart()
E                 3 time_smac = time.time() - t
E           
E           &lt;ipython-input-20-609ee7726ae6&gt; in stop_and_restart()
E                 6     proc = subprocess.run([sys.prefix + '/bin/nnictl', 'create', '--config', config_path])
E                 7     if proc.returncode != 0:
E           ----&gt; 8         raise RuntimeError("'nnictl create' failed with code %d" % proc.returncode)
E                 9     check_experiment_status(wait=WAITING_TIME, max_retries=MAX_RETRIES)
E           
E           RuntimeError: 'nnictl create' failed with code 1

/anaconda/envs/nightly_reco_base/lib/python3.6/site-packages/papermill/execute.py:241: PapermillExecutionError
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;In which platform does it happen?&lt;/denchmark-h&gt;


Azure Data Science Virtual Machine.

&lt;denchmark-h:h3&gt;How do we replicate the issue?&lt;/denchmark-h&gt;

run tests/integration/test_notebooks_python.py
&lt;denchmark-h:h3&gt;Expected behavior (i.e. solution)&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Other Comments&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='miguelgfierro' date='2019-04-19T12:53:31Z'>
		we need to update any static conda environments used for testing with the nni package, I can take care of that

and we just need to push the change to the generate_conda_file script to include nni

		</comment>
		<comment id='2' author='miguelgfierro' date='2019-04-19T16:26:47Z'>
		ok, i guess the problems aren't with the package installation, as those are already in staging, plus the notebook installs additional smac package for nni, there's something deeper happening here
		</comment>
		<comment id='3' author='miguelgfierro' date='2019-04-19T18:13:37Z'>
		digging in further here, the problem seems to be with the SMAC optimizer, there's a type hint buried deep in the code which is mispecified, fixing it doesn't seem trivial.
&lt;denchmark-code&gt;/data/anaconda/envs/reco_base/lib/python3.6/site-packages/nni_cmd/common_utils.py:31: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  return yaml.load(file)
INFO: expand searchSpacePath: search_space_svd.json to /tmp/tmpi4_3v1vk/search_space_svd.json
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
  File "/data/anaconda/envs/reco_base/lib/python3.6/site-packages/nni/smac_tuner/smac_tuner.py", line 34, in &lt;module&gt;
    from smac.scenario.scenario import Scenario
  File "/home/scgraham/.local/lib/python3.6/site-packages/smac/scenario/scenario.py", line 12, in &lt;module&gt;
    from smac.utils.io.input_reader import InputReader
  File "/home/scgraham/.local/lib/python3.6/site-packages/smac/utils/io/input_reader.py", line 2, in &lt;module&gt;
    from smac.configspace import pcs
  File "/home/scgraham/.local/lib/python3.6/site-packages/smac/configspace/__init__.py", line 3, in &lt;module&gt;
    from ConfigSpaceNNI.util import get_one_exchange_neighbourhood
  File "ConfigSpaceNNI/util.py", line 84, in init ConfigSpaceNNI.util
  File "/data/anaconda/envs/reco_base/lib/python3.6/typing.py", line 682, in inner
    return func(*args, **kwds)
  File "/data/anaconda/envs/reco_base/lib/python3.6/typing.py", line 1131, in __getitem__
    _check_generic(self, params)
  File "/data/anaconda/envs/reco_base/lib/python3.6/typing.py", line 662, in _check_generic
    ("many" if alen &gt; elen else "few", repr(cls), alen, elen))
TypeError: Too few parameters for typing.Generator; actual 1, expected 3
Traceback (most recent call last):
  File "/data/anaconda/envs/reco_base/bin/nnictl", line 10, in &lt;module&gt;
    sys.exit(parse_args())
  File "/data/anaconda/envs/reco_base/lib/python3.6/site-packages/nni_cmd/nnictl.py", line 182, in parse_args
    args.func(args)
  File "/data/anaconda/envs/reco_base/lib/python3.6/site-packages/nni_cmd/launcher.py", line 510, in create_experiment
    launch_experiment(args, experiment_config, 'new', config_file_name)
  File "/data/anaconda/envs/reco_base/lib/python3.6/site-packages/nni_cmd/launcher.py", line 322, in launch_experiment
    check_call([sys.executable, '-c', 'import %s'%(module_name)])
  File "/data/anaconda/envs/reco_base/lib/python3.6/subprocess.py", line 311, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['/data/anaconda/envs/reco_base/bin/python', '-c', 'import nni.smac_tuner.smac_tuner']' returned non-zero exit status 1.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='miguelgfierro' date='2019-05-09T15:18:37Z'>
		I just run the test again and got a different error:
&lt;denchmark-code&gt;$ pytest tests/integration/test_notebooks_python.py::test_nni_tuning_svd
================================================ test session starts =================================================
platform linux -- Python 3.6.7, pytest-4.1.1, py-1.7.0, pluggy-0.8.1
rootdir: /data/home/recocat/notebooks/miguel/Recommenders, inifile:
collected 1 item

tests/integration/test_notebooks_python.py F                                                                   [100%]

====================================================== FAILURES ======================================================
________________________________________________ test_nni_tuning_svd _________________________________________________

notebooks = {'als_deep_dive': '/data/home/recocat/notebooks/miguel/Recommenders/notebooks/02_model/als_deep_dive.ipynb', 'als_pysp...ynb', 'data_split': '/data/home/recocat/notebooks/miguel/Recommenders/notebooks/01_prepare_data/data_split.ipynb', ...}
tmp = '/tmp/pytest-of-recocat/pytest-0/tmpgbuqk2n5'

    @pytest.mark.integration
    @pytest.mark.skipif(sys.platform == 'win32', reason="nni not installable on windows")
    def test_nni_tuning_svd(notebooks, tmp):
        notebook_path = notebooks["nni_tuning_svd"]
        # First check if NNI is running
        try:
            check_experiment_status(NNI_STATUS_URL)
            raise Exception('NNI Server must be stopped before running integration tests')
        except:
            pass

        pm.execute_notebook(notebook_path, OUTPUT_NOTEBOOK, kernel_name=KERNEL_NAME,
                            parameters=dict(MOVIELENS_DATA_SIZE="100k",
                                            SURPRISE_READER="ml-100k",
                                            TMP_DIR=tmp,
                                            MAX_TRIAL_NUM=1,
&gt;                                           NUM_EPOCHS=1))

tests/integration/test_notebooks_python.py:167:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/anaconda/envs/reco_bare/lib/python3.6/site-packages/papermill/execute.py:78: in execute_notebook
    raise_for_execution_errors(nb, output_path)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

nb = {'cells': [{'cell_type': 'code', 'metadata': {'inputHidden': True, 'hide_input': True}, 'execution_count': None, 'sour...d_time': '2019-05-09T15:02:48.017299', 'duration': 132.714765, 'exception': True}}, 'nbformat': 4, 'nbformat_minor': 2}
output_path = 'output.ipynb'

    def raise_for_execution_errors(nb, output_path):
        error = None
        for cell in nb.cells:
            if cell.get("outputs") is None:
                continue

            for output in cell.outputs:
                if output.output_type == "error":
                    error = PapermillExecutionError(
                        exec_count=cell.execution_count,
                        source=cell.source,
                        ename=output.ename,
                        evalue=output.evalue,
                        traceback=output.traceback,
                    )
                    break

        if error:
            # Write notebook back out with the Error Message at the top of the Notebook.
            error_msg = ERROR_MESSAGE_TEMPLATE % str(error.exec_count)
            error_msg_cell = nbformat.v4.new_code_cell(
                source="%%html\n" + error_msg,
                outputs=[
                    nbformat.v4.new_output(output_type="display_data", data={"text/html": error_msg})
                ],
                metadata={"inputHidden": True, "hide_input": True},
            )
            nb.cells = [error_msg_cell] + nb.cells
            write_ipynb(nb, output_path)
&gt;           raise error
E           papermill.exceptions.PapermillExecutionError:
E           ---------------------------------------------------------------------------
E           Exception encountered at "In [13]":
E           ---------------------------------------------------------------------------
E           TimeoutError                              Traceback (most recent call last)
E           &lt;ipython-input-13-c6ed0d8561cf&gt; in &lt;module&gt;
E           ----&gt; 1 check_metrics_written()
E                 2 trials, best_metrics, best_params, best_trial_path = get_trials('maximize')
E
E           /data/home/recocat/notebooks/miguel/Recommenders/reco_utils/nni/nni_utils.py in check_metrics_written(wait, max_retries)
E                79         i += 1
E                80     if i == max_retries:
E           ---&gt; 81         raise TimeoutError("check_metrics_written() timed out")
E                82
E                83
E
E           TimeoutError: check_metrics_written() timed out

/anaconda/envs/reco_bare/lib/python3.6/site-packages/papermill/execute.py:198: PapermillExecutionError
------------------------------------------------ Captured stdout call ------------------------------------------------
INFO: expand searchSpacePath: search_space_svd.json to /tmp/pytest-of-recocat/pytest-0/tmpgbuqk2n5/search_space_svd.json
INFO: Starting restful server...
INFO: Successfully started Restful server!
INFO: Setting local config...
INFO: Successfully set local config!
INFO: Starting experiment...
INFO: Successfully started experiment!
-----------------------------------------------------------------------
The experiment id is uE9v9ZLe
The Web UI urls are: http://127.0.0.1:8080   http://172.17.13.6:8080   http://172.17.0.1:8080
-----------------------------------------------------------------------

You can use these commands to get more information about the experiment
-----------------------------------------------------------------------
         commands                       description
1. nnictl experiment show        show the information of experiments
2. nnictl trial ls               list all of trial jobs
3. nnictl top                    monitor the status of running experiments
4. nnictl log stderr             show stderr log content
5. nnictl log stdout             show stdout log content
6. nnictl stop                   stop an experiment
7. nnictl trial kill             kill a trial job by id
8. nnictl --help                 get help information about nnictl
-----------------------------------------------------------------------

------------------------------------------------ Captured stderr call ------------------------------------------------
 37%|███▋      | 23/63 [02:11&lt;13:10, 19.77s/it]

&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/anargyri&gt;@anargyri&lt;/denchmark-link&gt;
, do you know what might be happening?
		</comment>
		<comment id='5' author='miguelgfierro' date='2019-05-09T15:19:46Z'>
		Yes, it is a simple fix. I will do a PR.
		</comment>
		<comment id='6' author='miguelgfierro' date='2019-05-15T14:27:28Z'>
		I fixed some of the bugs, added some changes to the code. Now I get this other error:
RuntimeError: NNI experiment failed to complete with status ERROR - ['Dispatcher Error: This socket has been ended by the other party']
This happens with the random tuner
		</comment>
		<comment id='7' author='miguelgfierro' date='2019-05-24T18:18:08Z'>
		the error is still there, we need to take a deeper look
FYI &lt;denchmark-link:https://github.com/anargyri&gt;@anargyri&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;tests/integration/test_notebooks_python.py .....F                        [100%]

=================================== FAILURES ===================================
_____________________________ test_nni_tuning_svd ______________________________

notebooks = {'als_deep_dive': '/data/home/recocat/cicd/7/s/notebooks/02_model/als_deep_dive.ipynb', 'als_pyspark': '/data/home/rec...baseline_deep_dive.ipynb', 'data_split': '/data/home/recocat/cicd/7/s/notebooks/01_prepare_data/data_split.ipynb', ...}
tmp = '/tmp/pytest-of-recocat/pytest-198/tmpff5m65o1'

    @pytest.mark.integration
    @pytest.mark.skipif(sys.platform == "win32", reason="nni not installable on windows")
    def test_nni_tuning_svd(notebooks, tmp):
        notebook_path = notebooks["nni_tuning_svd"]
        pm.execute_notebook(notebook_path, OUTPUT_NOTEBOOK, kernel_name=KERNEL_NAME,
                            parameters=dict(MOVIELENS_DATA_SIZE="100k",
                                            SURPRISE_READER="ml-100k",
                                            TMP_DIR=tmp,
                                            MAX_TRIAL_NUM=1,
                                            NUM_EPOCHS=1,
                                            WAITING_TIME=20,
&gt;                                           MAX_RETRIES=50))

tests/integration/test_notebooks_python.py:162: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/anaconda/envs/nightly_reco_base/lib/python3.6/site-packages/papermill/execute.py:94: in execute_notebook
    raise_for_execution_errors(nb, output_path)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nb = {'cells': [{'cell_type': 'code', 'metadata': {'inputHidden': True, 'hide_input': True}, 'execution_count': None, 'sour...nd_time': '2019-05-24T18:07:43.265692', 'duration': 1033.7764, 'exception': True}}, 'nbformat': 4, 'nbformat_minor': 2}
output_path = 'output.ipynb'

    def raise_for_execution_errors(nb, output_path):
        """Assigned parameters into the appropriate place in the input notebook
    
        Parameters
        ----------
        nb : NotebookNode
           Executable notebook object
        output_path : str
           Path to write executed notebook
        """
        error = None
        for cell in nb.cells:
            if cell.get("outputs") is None:
                continue
    
            for output in cell.outputs:
                if output.output_type == "error":
                    error = PapermillExecutionError(
                        exec_count=cell.execution_count,
                        source=cell.source,
                        ename=output.ename,
                        evalue=output.evalue,
                        traceback=output.traceback,
                    )
                    break
    
        if error:
            # Write notebook back out with the Error Message at the top of the Notebook.
            error_msg = ERROR_MESSAGE_TEMPLATE % str(error.exec_count)
            error_msg_cell = nbformat.v4.new_code_cell(
                source="%%html\n" + error_msg,
                outputs=[
                    nbformat.v4.new_output(output_type="display_data", data={"text/html": error_msg})
                ],
                metadata={"inputHidden": True, "hide_input": True},
            )
            nb.cells = [error_msg_cell] + nb.cells
            write_ipynb(nb, output_path)
&gt;           raise error
E           papermill.exceptions.PapermillExecutionError: 
E           ---------------------------------------------------------------------------
E           Exception encountered at "In [14]":
E           ---------------------------------------------------------------------------
E           TimeoutError                              Traceback (most recent call last)
E           &lt;ipython-input-14-c9381fa3d2ee&gt; in &lt;module&gt;
E           ----&gt; 1 check_metrics_written(wait=WAITING_TIME, max_retries=MAX_RETRIES)
E                 2 trials, best_metrics, best_params, best_trial_path = get_trials('maximize')
E           
E           /data/home/recocat/cicd/7/s/reco_utils/nni/nni_utils.py in check_metrics_written(wait, max_retries)
E                89         i += 1
E                90     if i == max_retries:
E           ---&gt; 91         raise TimeoutError("check_metrics_written() timed out")
E                92 
E                93 
E           
E           TimeoutError: check_metrics_written() timed out

/anaconda/envs/nightly_reco_base/lib/python3.6/site-packages/papermill/execute.py:241: PapermillExecutionError
&lt;/denchmark-code&gt;

I skipped the integration test until we fix this issue &lt;denchmark-link:https://github.com/microsoft/recommenders/commit/6134989c0ba119b2c6724c5913c1560cf042e84c&gt;6134989&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>