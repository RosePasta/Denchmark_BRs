<bug id='616' author='roalexan' open_date='2019-03-05T15:45:07Z' closed_time='2019-03-07T13:46:22Z'>
	<summary>[BUG] Error running test notebook surprise_svd_deep_dive on Windows DSVM</summary>
	<description>
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

Ran this test:
pytest tests/unit/test_notebooks_python.py -k test_surprise_deep_dive_runs
See this error output:
E           papermill.exceptions.PapermillExecutionError:
E           ---------------------------------------------------------------------------
E           Exception encountered at "In [10]":
E           ---------------------------------------------------------------------------
E           TypeError                                 Traceback (most recent call last)
E            in 
E           ----&gt; 1 eval_rmse = rmse(test, predictions)
E                 2 eval_mae = mae(test, predictions)
E                 3 eval_rsquared = rsquared(test, predictions)
E                 4 eval_exp_var = exp_var(test, predictions)
E                 5
E
E           ~\notebooks\Recommenders\reco_utils\evaluation\python_evaluation.py in check_column_dtypes_wrapper(rating_true, rating_pred, col_user, col_item, col_rating, col_prediction, *args, **kwargs)
E                57             raise TypeError(
E                58                 "data types of column {} are different in true and prediction".format(
E           ---&gt; 59                     col_user
E                60                 )
E                61             )
E
E           TypeError: data types of column userID are different in true and prediction
&lt;denchmark-h:h3&gt;In which platform does it happen?&lt;/denchmark-h&gt;

Tested on a Windows CPU DSVM
&lt;denchmark-h:h3&gt;How do we replicate the issue?&lt;/denchmark-h&gt;

I created a Windows DSVM (Standard DS3 v2 - 4 vcpus, 14 GB memory). Don't know if this issue is specific to Windows (probably not).
Windows setup steps were (for now):

login to DSVM
cd notebooks
git clone https://github.com/Microsoft/Recommenders
git checkout staging
conda update conda
conda update --all
cd Recommenders
python scripts/generate_conda_file.py
conda env create -f reco_base.yaml
conda info --envs (list environments, verify "reco_base" is there)
conda activate reco_base
pytest tests/unit/test_notebooks_python.py -k test_surprise_deep_dive_runs

&lt;denchmark-h:h3&gt;Expected behavior (i.e. solution)&lt;/denchmark-h&gt;

The test should run successfully
&lt;denchmark-h:h3&gt;Other Comments&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='roalexan' date='2019-03-06T09:31:16Z'>
		Hmmm it runs well on my environment. The issue was fixed in &lt;denchmark-link:https://github.com/microsoft/recommenders/pull/553&gt;#553&lt;/denchmark-link&gt;
.
&lt;denchmark-link:https://github.com/roalexan&gt;@roalexan&lt;/denchmark-link&gt;
 Step 4 should happen after Step 7 as after  the current dir is not the cloned repository. Not sure if this is the cause but have you tried  and  to make sure it is indeed  branch?
		</comment>
		<comment id='2' author='roalexan' date='2019-03-06T16:37:12Z'>
		I reran and hit the same error. Did you test on a Windows DSVM? My git status:
(reco_base) C:\Users\rba1\Recommenders&gt;git status
On branch staging
You are right that the steps were not exactly right. Think these are the exact steps:

login to DSVM
open command prompt
git clone https://github.com/Microsoft/Recommenders
cd Recommenders
git checkout staging
git status (verify using "staging" branch)
conda update conda
conda update --all (not sure how to update just anaconda, "conda update anaconda" not working)
python scripts/generate_conda_file.py
conda env create -f reco_base.yaml
conda info --envs (verify "reco_base" is listed)
conda activate reco_base
pip install papermill (need to manually install this!)
pytest tests/unit/test_notebooks_python.py -k test_surprise_deep_dive_runs

		</comment>
		<comment id='3' author='roalexan' date='2019-03-06T18:44:16Z'>
		there is a line in the notebook that converts the prediction datatypes to int, apparently on some windows machines that is interpreted as int32, vs int64. specifying int64 resolves the issue. I'll push a quick change to address this, thanks for testing this &lt;denchmark-link:https://github.com/roalexan&gt;@roalexan&lt;/denchmark-link&gt;
 !
		</comment>
		<comment id='4' author='roalexan' date='2019-03-07T13:46:41Z'>
		addressed by &lt;denchmark-link:https://github.com/microsoft/recommenders/pull/620&gt;#620&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>