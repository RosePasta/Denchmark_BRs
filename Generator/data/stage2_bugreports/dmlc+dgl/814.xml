<bug id='814' author='panzheyi' open_date='2019-08-31T08:16:04Z' closed_time='2019-09-05T06:26:55Z'>
	<summary>[Bug] Cannot use Gluon Conv layers after importing dgl</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Cannot create conv layers after importing dgl!
from mxnet.gluon import nn
nn.Conv2D(2,2) # it works!
import dgl
nn.Conv2D(2,2) # throw exception!
Exceptions:
&lt;denchmark-code&gt;mxnet.base.MXNetError: Error in operator conv1_convolution0: [16:12:18] src/operator/nn/convolution.cc:203: Check failed: dilated_ksize_y &lt;= AddPad(dshape[2], param_.pad[0]) (2 vs. 0) : kernel size exceed input
Stack trace:
  [bt] (0) /home/zhpan/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x4b03ab) [0x7f96ae9063ab]
  [bt] (1) /home/zhpan/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x8ec27b) [0x7f96aed4227b]
  [bt] (2) /home/zhpan/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x2620172) [0x7f96b0a76172]
  [bt] (3) /home/zhpan/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x26229f5) [0x7f96b0a789f5]
  [bt] (4) /home/zhpan/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(MXSymbolInferShapeEx+0x103e) [0x7f96b09dd61e]
  [bt] (5) /home/zhpan/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(MXSymbolInferShapePartialEx+0x82) [0x7f96b09ddd12]
  [bt] (6) /usr/lib/python3.5/lib-dynload/_ctypes.cpython-35m-x86_64-linux-gnu.so(ffi_call_unix64+0x4c) [0x7f9707541e20]
  [bt] (7) /usr/lib/python3.5/lib-dynload/_ctypes.cpython-35m-x86_64-linux-gnu.so(ffi_call+0x2eb) [0x7f970754188b]
  [bt] (8) /usr/lib/python3.5/lib-dynload/_ctypes.cpython-35m-x86_64-linux-gnu.so(_ctypes_callproc+0x49a) [0x7f970753c01a]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


DGL Version (e.g., 1.0): 0.3.1
Backend Library &amp; Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3): 1.5.0
OS (e.g., Linux): ubuntu 16.04
How you installed DGL (conda, pip, source): pip install mxnet-cu90 dgl-cu90
Build command you used (if compiling from source):
Python version: 3.5.2
CUDA/cuDNN version (if applicable): cu90
GPU models and configuration (e.g. V100): GTX 1080
Any other relevant information:

	</description>
	<comments>
		<comment id='1' author='panzheyi' date='2019-08-31T08:28:42Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/8686776/64061366-5341b600-cc0c-11e9-893d-ef0e97b8de98.png&gt;&lt;/denchmark-link&gt;

Bug confirmed. This is a MXNet bug.
		</comment>
		<comment id='2' author='panzheyi' date='2019-08-31T08:32:58Z'>
		Issue raised at  &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/16054&gt;apache/incubator-mxnet#16054&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='panzheyi' date='2019-09-02T21:34:54Z'>
		&lt;denchmark-link:https://github.com/panzheyi&gt;@panzheyi&lt;/denchmark-link&gt;
 Would you retry using the latest mxnet master?
		</comment>
		<comment id='4' author='panzheyi' date='2019-09-03T01:47:42Z'>
		By reinstalling mxnet with pip install --pre mxnet
		</comment>
		<comment id='5' author='panzheyi' date='2019-09-03T09:51:05Z'>
		&lt;denchmark-link:https://github.com/VoVAllen&gt;@VoVAllen&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 Thanks for your replies. I reinstalled mxnet by , however, the error was not been fixed.
Here's the installed mxnet package: https://files.pythonhosted.org/packages/37/c4/20e9cd08e8df98b1a9444d606e2617630572528407e0a75045cf5654b5fa/mxnet_cu90-1.6.0b20190903-py2.py3-none-manylinux1_x86_64.whl
		</comment>
		<comment id='6' author='panzheyi' date='2019-09-03T15:46:23Z'>
		&lt;denchmark-link:https://github.com/panzheyi&gt;@panzheyi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/VoVAllen&gt;@VoVAllen&lt;/denchmark-link&gt;
  I checked this problem again. Actually, we have to use  in order to support empty array.
Thus, the change in &lt;denchmark-link:https://github.com/dmlc/dgl/pull/821&gt;#821&lt;/denchmark-link&gt;
 should fix the problem.
		</comment>
		<comment id='7' author='panzheyi' date='2019-09-04T11:12:27Z'>
		&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/VoVAllen&gt;@VoVAllen&lt;/denchmark-link&gt;
 Thank you! Problem solved now.
		</comment>
		<comment id='8' author='panzheyi' date='2019-12-18T09:23:27Z'>
		Problem will be solved by using npx.set_np()  before net =nn.Conv2D(2,2). But now you have to  use mxnet.np as input to the net, instead of mxnet.nd. If you insist on using mxnet.nd as input, try this: npx.reset_np().
		</comment>
	</comments>
</bug>