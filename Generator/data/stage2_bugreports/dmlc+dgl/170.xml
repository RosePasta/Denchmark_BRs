<bug id='170' author='yzh119' open_date='2018-11-22T19:19:09Z' closed_time='2018-11-26T03:33:09Z'>
	<summary>[BUG] Tree-LSTM performs terrible after using new scheduler &amp; executor</summary>
	<description>
Tree LSTM behaves differently before and after &lt;denchmark-link:https://github.com/dmlc/dgl/pull/140&gt;#140&lt;/denchmark-link&gt;
 .
As a reference:
DGL version: commit &lt;denchmark-link:https://github.com/jermainewang/dgl/commit/3e8b63ecd3cb34bfcd3488f2f7d38dcba480192f&gt;3e8b63e&lt;/denchmark-link&gt;

The result of epoch 0:
&lt;denchmark-code&gt;Epoch 00000 training time 23.9037s
Epoch 00000 | Dev Acc 0.7920 | Root Acc 0.4278
Epoch 00000 | Test Acc 0.7897 | Root Acc 0.4380
&lt;/denchmark-code&gt;

DGL version: commit &lt;denchmark-link:https://github.com/jermainewang/dgl/commit/deb653f8dc9b396ba99d5c66e0658fb056f37a38&gt;deb653f&lt;/denchmark-link&gt;

The result of epoch 0:
&lt;denchmark-code&gt;Epoch 00000 training time 23.2815s
Epoch 00000 | Dev Acc 0.6856 | Root Acc 0.2552
Epoch 00000 | Test Acc 0.6859 | Root Acc 0.2271
&lt;/denchmark-code&gt;

In fact, as a 5-class classification task, the baseline is supposed to be close to 1/5, this being said the model is not being trained correctly.
Still have no idea about it.
	</description>
	<comments>
		<comment id='1' author='yzh119' date='2018-11-22T20:58:43Z'>
		Found the bug here: &lt;denchmark-link:https://github.com/jermainewang/dgl/blob/4dfe7547e8addbba6dd1e2c6eb56251dfb435314/python/dgl/runtime/scheduler.py#L412-L415&gt;https://github.com/jermainewang/dgl/blob/4dfe7547e8addbba6dd1e2c6eb56251dfb435314/python/dgl/runtime/scheduler.py#L412-L415&lt;/denchmark-link&gt;

The pull is skipped when there is no in-edges. However, the correct behavior should trigger the apply function. Am working on the fix.
		</comment>
	</comments>
</bug>