<bug id='1022' author='dst1' open_date='2019-11-20T11:22:09Z' closed_time='2019-11-24T19:35:26Z'>
	<summary>bug in DGLHeteroGraph edge_type_subgraph</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

I found a bug when using edge_type_subgraph. It expects node types to be sequential and starting from zero, when asking for a node type with high idx it breaks.
The test doesn't catch that as the indexes of the node types in the test are 0,1
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:
Using the example from the tests:
import dgl
from scipy import sparse as ssp
import networkx as nx

def create_test_heterograph():
    # test heterograph from the docstring, plus a user -- wishes -- game relation
    # 3 users, 2 games, 2 developers
    # metagraph:
    #    ('user', 'follows', 'user'),
    #    ('user', 'plays', 'game'),
    #    ('user', 'wishes', 'game'),
    #    ('developer', 'develops', 'game')])

    plays_spmat = ssp.coo_matrix(([1, 1, 1, 1], ([0, 1, 2, 1], [0, 0, 1, 1])))
    wishes_nx = nx.DiGraph()
    wishes_nx.add_nodes_from(['u0', 'u1', 'u2'], bipartite=0)
    wishes_nx.add_nodes_from(['g0', 'g1'], bipartite=1)
    wishes_nx.add_edge('u0', 'g1', id=0)
    wishes_nx.add_edge('u2', 'g0', id=1)

    follows_g = dgl.graph([(0, 1), (1, 2)], 'user', 'follows')
    plays_g = dgl.bipartite(plays_spmat, 'user', 'plays', 'game')
    wishes_g = dgl.bipartite(wishes_nx, 'user', 'wishes', 'game')
    develops_g = dgl.bipartite([(0, 0), (1, 1)], 'developer', 'develops', 'game')
    g = dgl.hetero_from_relations([follows_g, plays_g, wishes_g, develops_g])
    return g

g = create_test_heterograph()
g.edge_type_subgraph(['develops'])
&lt;denchmark-code&gt;  File "/home/doron/.PyCharm2019.2/config/scratches/scratch.py", line 29, in &lt;module&gt;
    g.edge_type_subgraph(['develops'])
  File "/home/doron/miniconda3/envs/DeepLearning_Projects/lib/python3.7/site-packages/dgl/heterograph.py", line 1756, in edge_type_subgraph
    mapped_meta_src = [induced_ntype_ids[v] for v in meta_src]
  File "/home/doron/miniconda3/envs/DeepLearning_Projects/lib/python3.7/site-packages/dgl/heterograph.py", line 1756, in &lt;listcomp&gt;
    mapped_meta_src = [induced_ntype_ids[v] for v in meta_src]
IndexError: list index out of range
&lt;/denchmark-code&gt;

Here for example v=2 while len(induced_ntype_ids)==1
&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

subgraph returned
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


DGL Version - dgl-cuda10.0 v0.4.1 (from conda)
OS - Ubuntu 18.04
Python version: 3.7.5

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Suggestion for fix:&lt;/denchmark-h&gt;

This can be easily fixed with changing:
induced_ntype_ids = list(set(meta_src) | set(meta_dst))
to:
induced_ntype_ids = {x:i for i,x in enumerate(set(meta_src) | set(meta_dst))}
	</description>
	<comments>
		<comment id='1' author='dst1' date='2019-11-24T19:20:23Z'>
		Thank you for the report. This should be fixed in &lt;denchmark-link:https://github.com/dmlc/dgl/pull/1040&gt;#1040&lt;/denchmark-link&gt;
 .
		</comment>
	</comments>
</bug>