<bug id='1014' author='ustchhy' open_date='2019-11-19T09:04:24Z' closed_time='2020-03-23T09:54:19Z'>
	<summary>DGL NeighborSampler prefetch=True cause VIRT increase</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

When sampling neighbor nodes, add 'prefetch=True' may cause VIRT increase.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:
&lt;denchmark-code&gt;import dgl
import torch
import time

g = dgl.DGLGraph()
g.add_nodes(1000)
edges = [[i, j] for i in range(1000) for j in range(i+1, 1000)]
edges = torch.tensor(edges)
g.add_edges(edges[:, 0], edges[:, 1])
g.add_edges(edges[:, 1], edges[:, 0])
g.readonly()

for i in range(10000):
    seed_nodes = torch.randint(0, 1000, (700,))
    sampler = dgl.contrib.sampling.NeighborSampler(
        g,
        1000,
        10,
        2,
        seed_nodes=seed_nodes,
        prefetch=True,
        num_workers=48,
    )
    for nf in sampler:
        pass
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

with prefetch :    VITR=12.4G
witout prefetch:  VIRT=2.3G
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


DGL Version (e.g., 1.0): 0.3.1
Backend Library &amp; Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3): pytorch 1.2.0
OS (e.g., Linux): Linux
How you installed DGL (conda, pip, source): pip
Python version: 3.7.3

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='ustchhy' date='2019-11-24T19:32:39Z'>
		I suppose it's a expected behavior as we fetch more nodeflows in the memory?
		</comment>
		<comment id='2' author='ustchhy' date='2020-03-23T09:54:19Z'>
		Please take a look at our new sampler example here: &lt;denchmark-link:https://github.com/dmlc/dgl/tree/master/examples/pytorch/graphsage&gt;https://github.com/dmlc/dgl/tree/master/examples/pytorch/graphsage&lt;/denchmark-link&gt;
. The NodeFlow API will be deprecated in the recent release.
		</comment>
	</comments>
</bug>