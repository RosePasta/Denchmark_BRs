<bug id='1409' author='BarclayII' open_date='2020-04-01T14:28:45Z' closed_time='2020-04-03T12:45:57Z'>
	<summary>[BUG][Regression] VertexSubgraph on hypersparse graphs crashes</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

See the code below.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

In [22]: g = dgl.graph([(0, 1), (1, 2)], num_nodes=2000000)

In [23]: g.subgraph({g.ntypes[0]: [1, 3, 5]})
---------------------------------------------------------------------------
DGLError                                  Traceback (most recent call last)
&lt;ipython-input-23-3fd9d91df08e&gt; in &lt;module&gt;
----&gt; 1 g.subgraph({g.ntypes[0]: [1, 3, 5]})

~\Miniconda3\lib\site-packages\dgl\heterograph.py in subgraph(self, nodes)
   1890         """
   1891         induced_nodes = [utils.toindex(nodes.get(ntype, [])) for ntype in self.ntypes]
-&gt; 1892         sgi = self._graph.node_subgraph(induced_nodes)
   1893         induced_edges = sgi.induced_edges
   1894

~\Miniconda3\lib\site-packages\dgl\heterograph_index.py in node_subgraph(self, induced_nodes)
    844         """
    845         vids = [nodes.todgltensor() for nodes in induced_nodes]
--&gt; 846         return _CAPI_DGLHeteroVertexSubgraph(self, vids)
    847
    848     def edge_subgraph(self, induced_edges, preserve_nodes):

~\Miniconda3\lib\site-packages\dgl\_ffi\_ctypes\function.py in __call__(self, *args)
    188         check_call(_LIB.DGLFuncCall(
    189             self.handle, values, tcodes, ctypes.c_int(num_args),
--&gt; 190             ctypes.byref(ret_val), ctypes.byref(ret_tcode)))
    191         _ = temp_args
    192         _ = args

~\Miniconda3\lib\site-packages\dgl\_ffi\base.py in check_call(ret)
     60     """
     61     if ret != 0:
---&gt; 62         raise DGLError(py_str(_LIB.DGLGetLastError()))
     63
     64

DGLError: [22:27:56] C:\Users\Administrator\dgl\src\graph\unit_graph.cc:1140: Check failed: GetAny(): At least one graph structure should exist.
&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

Shouldn't crash.
	</description>
	<comments>
		<comment id='1' author='BarclayII' date='2020-04-02T05:07:58Z'>
		Similarly if we restrict the format of graph storage to CSC the result is also incorrect:
g = dgl.graph([(0, 1), (1, 2)], restrict_format='csc')
g.subgraph({g.ntypes[0]: [0, 1]}).edges(order='eid')  # returns (1, 0)
		</comment>
	</comments>
</bug>