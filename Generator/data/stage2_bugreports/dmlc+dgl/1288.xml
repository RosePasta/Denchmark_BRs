<bug id='1288' author='zengxy' open_date='2020-02-24T09:29:40Z' closed_time='2020-02-26T02:06:10Z'>
	<summary>[Bug] NodeFlow.block_compute came up with error "NodeFlowobject has no attribute num_edges"</summary>
	<description>
version v0.4.1
I found that it has been asked in &lt;denchmark-link:https://discuss.dgl.ai/t/nodeflow-questions/593&gt;https://discuss.dgl.ai/t/nodeflow-questions/593&lt;/denchmark-link&gt;
.
It only appears when using  build in send / reduce functions, you can reproduce by the following snippet
import dgl
import numpy as np
g = dgl.DGLGraph()
g.add_nodes(5)
g.add_edges([1,2], [2,3])
g.ndata["f"] = np.zeros([5,6])
g.readonly()
nfs = dgl.contrib.sampling.NeighborSampler(g, 10, 5)
for nf in nfs:
    break
nf.copy_from_parent()
nf.apply_block(0, lambda edges: {"m": edges.src["f"]})   # running successful
nf.apply_block(0, dgl.function.copy_src("f", "m"))   # throw exception
The root cause is as following:
The exception is raised from scheduler._gen_send, in which the  old  DGLBaseGraph.number_of_edges invoking is changed to AdaptedDGLGraph.num_edges in a certain commit. But while all the passed in graphs is wrapped  in DGLGraph, nodeflow dosen't do it.
	</description>
	<comments>
		<comment id='1' author='zengxy' date='2020-02-24T10:14:26Z'>
		Confirmed this is a bug. I actually have met this bug and patched it when I was developing an example for multi-GPU training (&lt;denchmark-link:https://github.com/dmlc/dgl/pull/1143&gt;#1143&lt;/denchmark-link&gt;
 ). Since that PR would take more time to merge, I have pushed a patch in a standalone PR.
		</comment>
		<comment id='2' author='zengxy' date='2020-02-25T08:08:55Z'>
		Thank you! The pacth is very useful for me.
		</comment>
		<comment id='3' author='zengxy' date='2020-02-26T02:06:10Z'>
		Done in PR1289.
		</comment>
	</comments>
</bug>