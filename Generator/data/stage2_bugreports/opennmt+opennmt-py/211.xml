<bug id='211' author='parajain' open_date='2017-08-30T09:42:17Z' closed_time='2017-09-01T02:12:38Z'>
	<summary>AttributeError: 'Batch' object has no attribute 'alignment' in Loss.py</summary>
	<description>
In the following line, I am getting this error:
Traceback (most recent call last):
File "train.py", line 309, in 
main()
File "train.py", line 305, in main
trainModel(model, train, valid, fields, optim)
File "train.py", line 166, in trainModel
train_stats = trainEpoch(epoch)
File "train.py", line 136, in trainEpoch
tgt_r)
File "OpenNMT-py/onmt/Loss.py", line 148, in makeLossBatch
else batch.alignment[range_[0] + 1: range_[1]],
AttributeError: 'Batch' object has no attribute 'alignment'
&lt;denchmark-link:https://github.com/OpenNMT/OpenNMT-py/blame/master/onmt/Loss.py#L148&gt;https://github.com/OpenNMT/OpenNMT-py/blame/master/onmt/Loss.py#L148&lt;/denchmark-link&gt;

I am trying training including copy using -copy_attn flag. This error was not coming earlier, however, with the latest commit this is happening.
Thanks
	</description>
	<comments>
		<comment id='1' author='parajain' date='2017-08-30T13:31:58Z'>
		Did you preprocess with the dynamic_dict option? This is required for copy_attn.
		</comment>
		<comment id='2' author='parajain' date='2017-08-30T13:42:56Z'>
		&lt;denchmark-link:https://github.com/sebastian&gt;@sebastian&lt;/denchmark-link&gt;
 Can we make this fail earlier and with a nicer error to tell people what to do?
		</comment>
		<comment id='3' author='parajain' date='2017-08-30T14:08:14Z'>
		&lt;denchmark-link:https://github.com/srush&gt;@srush&lt;/denchmark-link&gt;
 good idea. Will do.
I first fixed an issue with preprocessing in &lt;denchmark-link:https://github.com/OpenNMT/OpenNMT-py/pull/213&gt;#213&lt;/denchmark-link&gt;

Next I can do the check.
		</comment>
		<comment id='4' author='parajain' date='2017-08-30T15:52:54Z'>
		&lt;denchmark-link:https://github.com/sebastianGehrmann&gt;@sebastianGehrmann&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/srush&gt;@srush&lt;/denchmark-link&gt;
 Thank you for the quick reply. I did not use that option. However, it fails in preprocess whenI tried that. Following is how I ran,
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

python preprocess.py -train_src ../processed/train.input -train_tgt ../processed/train.output -valid_src ../processed/dev.input -valid_tgt ../processed/dev.output -save_data data/gph -dynamic_dict
NVIDIA: no NVIDIA devices found
Preparing training ...
Building Training...
Building Vocab...
Building Valid...
Saving train/valid/fields
Traceback (most recent call last):
File "preprocess.py", line 77, in 
main()
File "preprocess.py", line 72, in main
torch.save(train, open(opt.save_data + '.train.pt', 'wb'))
File "/home/p/virtual-envs/pytorch/local/lib/python2.7/site-packages/torch/serialization.py", line 120, in save
return _save(obj, f, pickle_module, pickle_protocol)
File "/home/p/virtual-envs/pytorch/local/lib/python2.7/site-packages/torch/serialization.py", line 186, in _save
pickler.dump(obj)
cPickle.PicklingError: Can't pickle &lt;type 'function'&gt;: attribute lookup builtin.function failed
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Might be some silly thing again.
Thanks,
Parag
		</comment>
		<comment id='5' author='parajain' date='2017-08-30T16:20:39Z'>
		just merged &lt;denchmark-link:https://github.com/OpenNMT/OpenNMT-py/pull/213&gt;#213&lt;/denchmark-link&gt;
 which fixes this.
		</comment>
		<comment id='6' author='parajain' date='2017-08-31T06:42:12Z'>
		&lt;denchmark-link:https://github.com/srush&gt;@srush&lt;/denchmark-link&gt;
 Thanks for this fixes. But training still does not work.
Traceback (most recent call last):
File "train.py", line 307, in 
main()
File "train.py", line 303, in main
trainModel(model, train, valid, fields, optim)
File "train.py", line 171, in trainModel
valid_stats = eval(model, criterion, validData, fields)
File "train.py", line 74, in eval
_, batch_stats = loss.computeLoss(batch=batch, **gen_state)
File "/home/p/OpenNMT-py/onmt/Loss.py", line 180, in computeLoss
if target[i] == 0 and align.data[i] != 0:
IndexError: index 449 is out of range for dimension 0 (of size 49)
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Is this related?
Thanks a lot,
Parag
		</comment>
		<comment id='7' author='parajain' date='2017-08-31T14:22:39Z'>
		Okay, looking into it. Is this just on the test data. Can you send me what you ran?
		</comment>
		<comment id='8' author='parajain' date='2017-08-31T16:33:01Z'>
		I tried it again on demo data, the error is at the same place but a different message. Also, I am running the experiments on GPUS. Following are the commands and error log:
python preprocess.py -train_src data/src-train.txt -train_tgt data/tgt-train.txt -valid_src data/src-val.txt -valid_tgt data/tgt-val.txt -save_data data/demo -dynamic_dict
python train.py -data data/demo -copy_attn -save_model demo-model
Traceback (most recent call last):
File "train.py", line 307, in 
main()
File "train.py", line 303, in main
trainModel(model, train, valid, fields, optim)
File "train.py", line 171, in trainModel
valid_stats = eval(model, criterion, validData, fields)
File "train.py", line 74, in eval
_, batch_stats = loss.computeLoss(batch=batch, **gen_state)
File "/home/p/OpenNMT-py/onmt/Loss.py", line 180, in computeLoss
if target[i] == 0 and align.data[i] != 0:
File "/home/p/virtual-envs/pytorch/local/lib/python2.7/site-packages/torch/tensor.py", line 152, in bool
" objects is ambiguous")
RuntimeError: bool value of non-empty torch.ByteTensor objects is ambiguous
Thanks
		</comment>
		<comment id='9' author='parajain' date='2017-09-01T02:12:38Z'>
		I was able to replicated. Fix is being pushed.
		</comment>
		<comment id='10' author='parajain' date='2017-09-04T08:14:26Z'>
		I have the same error during training:
Traceback (most recent call last):
File "train.py", line 307, in 
main()
File "train.py", line 303, in main
trainModel(model, train, valid, fields, optim)
File "train.py", line 166, in trainModel
train_stats = trainEpoch(epoch)
File "train.py", line 141, in trainEpoch
**shard)
File "/home/haixu/Desktop/OpenNMT9.4/onmt/Loss.py", line 175, in computeLoss
unbottle(scores_data), batch, self.tgt_vocab)
File "/home/haixu/Desktop/OpenNMT9.4/onmt/IO.py", line 226, in collapse_copy_scores
scores[:, b, ti] += scores[:, b, offset + i]
IndexError: index 3460 is out of range for dimension 1 (of size 3460)
		</comment>
		<comment id='11' author='parajain' date='2019-01-17T07:26:35Z'>
		&lt;denchmark-link:https://github.com/srush&gt;@srush&lt;/denchmark-link&gt;

in preprocess:
python preprocess.py -train_src data/src-train.txt -train_tgt data/tgt-train.txt -valid_src data/src-val.txt -valid_tgt data/tgt-val.txt -save_data data/demo
i get this error.
File "preprocess.py", line 121, in build_save_vocab
torch.save(fields, vocab_path)
cPickle.PicklingError: Can't pickle torch.int64: attribute lookup main.torch.int64 failed
whether i should use -dynamic_dict ?
		</comment>
		<comment id='12' author='parajain' date='2019-01-17T07:46:09Z'>
		you need to be on master + pytorch 1.0 + torchtext &gt;= 0.4
		</comment>
		<comment id='13' author='parajain' date='2019-01-17T08:42:20Z'>
		&lt;denchmark-link:https://github.com/vince62s&gt;@vince62s&lt;/denchmark-link&gt;

i use the master branch pytorch 1.0  + torchtext = 0.3.1
when i try to install torchtext==0.4.0 , i got this as follows:
Could not find a version that satisfies the requirement torchtext==0.4.0 (from versions: 0.1.1, 0.2.0, 0.2.1, 0.2.3, 0.3.1)
i will try to download torchtext 0.4.0 and try again.
		</comment>
		<comment id='14' author='parajain' date='2019-01-17T08:50:07Z'>
		you need to install as in the requirements.txt
		</comment>
		<comment id='15' author='parajain' date='2019-01-17T09:15:15Z'>
		&lt;denchmark-link:https://github.com/vince62s&gt;@vince62s&lt;/denchmark-link&gt;

it's the version of torchtext, after i download the torchtext and upgrate to 0.4.0, the error is gone. thx
		</comment>
	</comments>
</bug>