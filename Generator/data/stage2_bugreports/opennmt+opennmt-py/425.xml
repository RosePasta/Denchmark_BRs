<bug id='425' author='mbforbes' open_date='2017-12-08T18:00:08Z' closed_time='2018-09-06T07:53:40Z'>
	<summary>Copy-enabled model crashes `translate.py` if `-tgt` provided</summary>
	<description>
First off, thank you for developing and maintaining this great library!
I'm very new to this codebase, so my apologies if this is user error instead of a bug.
It appears that a model with copying enabled crashes running translate.py if -tgt is provided. It is able to generate text fine, but it crashes because it tries to compute perplexity on the gold data.
The error message I get is:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "translate.py", line 129, in &lt;module&gt;
    main()
  File "translate.py", line 70, in main
    = translator.translate(batch, data)
  File "/home/max/repos/OpenNMT-py/onmt/Translator.py", line 206, in translate
    pred, predScore, attn, goldScore = self.translateBatch(batch, data)
  File "/home/max/repos/OpenNMT-py/onmt/Translator.py", line 181, in translateBatch
    allGold = self._runTarget(batch, dataset)
  File "/home/max/repos/OpenNMT-py/onmt/Translator.py", line 87, in _runTarget
    out = self.model.generator.forward(dec)
TypeError: forward() missing 2 required positional arguments: 'attn' and 'src_map'
&lt;/denchmark-code&gt;

In Translator.py, translateBatch(...) correctly checks for self.copy_attn, and calls self.model.generator.forward(...) with three arguments if so. But if -tgt is provided, then _runTarget(...) is called, which omits this check and always calls self.model.generator.forward(...) with only one argument, causing the crash.
	</description>
	<comments>
		<comment id='1' author='mbforbes' date='2017-12-09T06:49:31Z'>
		Thanks. Will look at it.
		</comment>
		<comment id='2' author='mbforbes' date='2017-12-10T23:35:11Z'>
		I had this issue too. We don't have good semantics for what tgt means with copy. Need to figure out what it should do.
		</comment>
		<comment id='3' author='mbforbes' date='2018-01-15T15:25:47Z'>
		Any update on this. I was just hoping to do the Bleu score evaluation on the target as part of the translation step when I came across the error. Does _run_target just need some extra checks added to it for when self.copy_attn is present?
		</comment>
		<comment id='4' author='mbforbes' date='2018-05-07T04:03:55Z'>
		Just to avoid a crash, you could comment out these two lines. Note that this wouldn't report the gold scores.



OpenNMT-py/onmt/translate/Translator.py


        Lines 338 to 339
      in
      0ecec8b






 if "tgt" in batch.__dict__: 



 ret["gold_score"] = self._run_target(batch, data) 





		</comment>
		<comment id='5' author='mbforbes' date='2018-08-31T16:26:33Z'>
		Started running into this again, I'm going to see if I can get gold score working for copy attention. It would be super useful for my current task
		</comment>
		<comment id='6' author='mbforbes' date='2018-09-06T07:53:40Z'>
		closing, discussion continued in &lt;denchmark-link:https://github.com/OpenNMT/OpenNMT-py/issues/777&gt;#777&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/OpenNMT/OpenNMT-py/pull/862&gt;#862&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>