<bug id='331' author='sriniiyer' open_date='2017-10-11T01:26:44Z' closed_time='2017-10-11T15:26:12Z'>
	<summary>report_stats is being reset after every batch (ignoring report_every)</summary>
	<description>
After every batch, report_stats = Statistics() is executed in Trainer.py, so its not aggregating the stats anymore. That line should be moved into report_func or something.
	</description>
	<comments>
		<comment id='1' author='sriniiyer' date='2017-10-11T03:27:18Z'>
		&lt;denchmark-link:https://github.com/JianyuZhan&gt;@JianyuZhan&lt;/denchmark-link&gt;
 can you check this.
		</comment>
		<comment id='2' author='sriniiyer' date='2017-10-11T05:16:50Z'>
		I checked the old code and it is the old behavior:
&lt;denchmark-code&gt;          if i % opt.report_every == -1 % opt.report_every:
                report_stats.output(epoch, i+1, len(train),
                                    total_stats.start_time)
                if opt.exp_host:
                    report_stats.log("progress", experiment, optim)
                report_stats = onmt.Loss.Statistics()
&lt;/denchmark-code&gt;

It seems we did want to log a new stats data for every report, not aggregating them.
Yes, it is weird, is this on purpose?
		</comment>
		<comment id='3' author='sriniiyer' date='2017-10-11T05:18:40Z'>
		The old code has report_stats = onmt.Loss.Statistics() inside the if condition. The new code has it outside.
&lt;denchmark-code&gt;if report_func is not None:
                report_func(epoch, i, len(self.train_iter),
                            total_stats.start_time, self.optim.lr,
                            report_stats)
                report_stats = Statistics()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='sriniiyer' date='2017-10-11T05:22:05Z'>
		Oh, right. I misunderstood what you mean by "aggregate" - it is aggregating every report, the new code doesn't.  I will fix it.
		</comment>
	</comments>
</bug>