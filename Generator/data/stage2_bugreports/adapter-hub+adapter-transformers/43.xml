<bug id='43' author='Asdf11x' open_date='2020-07-23T16:39:28Z' closed_time='2020-08-17T10:18:27Z'>
	<summary>Quick Start Adapter was not found</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

Hi, I tried to run the Quickstart Tutorial &lt;denchmark-link:https://docs.adapterhub.ml/quickstart.html#introduction&gt;here&lt;/denchmark-link&gt;
, so Im using that exact code. When loading the adapter with  Im getting an error mentioned below. Using "sst-2" instead of "sst" returns another warning?
&lt;denchmark-h:h2&gt;Information&lt;/denchmark-h&gt;

Model I am using (Bert, XLNet ...):
Language I am using the model on (English, Chinese ...):
Adapter setup I am using (if any):
The problem arises when using:

 the official example scripts: (give details below)
 my own modified scripts: (give details below)

The tasks I am working on is:

 an official GLUE/SQUaD task: (give the name)
 my own task or dataset: (give details below)

&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:

Run code from here 



Using
&lt;denchmark-code&gt;# load pre-trained task adapter from Adapter Hub
# with with_head=True given, we also load a pre-trained classification head for this task
model.load_adapter('sst', config='pfeiffer', with_head=True)

# activate the adapter we just loaded, so that it is used in every forward pass
model.set_active_adapters('sst')
&lt;/denchmark-code&gt;

Returns
&lt;denchmark-code&gt;    raise EnvironmentError("No adapter with name '{}' was found in the adapter index.".format(specifier))
OSError: No adapter with name 'sst' was found in the adapter index.
&lt;/denchmark-code&gt;

Using:
&lt;denchmark-code&gt;# load pre-trained task adapter from Adapter Hub
# with with_head=True given, we also load a pre-trained classification head for this task
model.load_adapter('sst-2', config='pfeiffer', with_head=True)

# activate the adapter we just loaded, so that it is used in every forward pass
model.set_active_adapters('sst-2')
&lt;/denchmark-code&gt;

Returns
&lt;denchmark-code&gt;INFO:transformers.adapter_bert:No prediction head for task_name 'sst-2' available.
WARNING:transformers.adapter_bert:No prediction head is used.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Environment info&lt;/denchmark-h&gt;


transformers version: 2.11.0
Platform: Linux-4.15.0-108-generic-x86_64-with-Ubuntu-18.04-bionic
Python version: 3.6.9
PyTorch version (GPU?): 1.5.0 (False)
Tensorflow version (GPU?): not installed (NA)
Using GPU in script?: no
Using distributed or parallel set-up in script?: using quickstart tutorial

	</description>
	<comments>
		<comment id='1' author='Asdf11x' date='2020-07-23T16:45:37Z'>
		hey Asdf11x, looks like we forgot to update that, thanks for pointing that out!
You can select the sst-2 adapter with the adapter architecture and for the model you are using here:
&lt;denchmark-link:https://adapterhub.ml/explore/sentiment/sst-2/&gt;https://adapterhub.ml/explore/sentiment/sst-2/&lt;/denchmark-link&gt;

If you for example want to use the  architecture for  model this one would be the correct adapter:
&lt;denchmark-link:https://adapterhub.ml/adapters/ukp/bert-base-uncased-sst_pfeiffer/&gt;https://adapterhub.ml/adapters/ukp/bert-base-uncased-sst_pfeiffer/&lt;/denchmark-link&gt;

as mentioned on that page you would need to load it with the following code:
&lt;denchmark-code&gt;model = AutoModel.from_pretrained("bert-base-uncased")
config = AdapterConfig.load("pfeiffer")
model.load_adapter("sentiment/sst-2@ukp", "text_task", config=config)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='Asdf11x' date='2020-07-23T16:48:20Z'>
		A colab was already created for this:
&lt;denchmark-link:https://colab.research.google.com/drive/1iEymIGmkX9_EjirgQpcKoVc-0wuv-DXN?usp=sharing&gt;https://colab.research.google.com/drive/1iEymIGmkX9_EjirgQpcKoVc-0wuv-DXN?usp=sharing&lt;/denchmark-link&gt;

(check out the blog post: &lt;denchmark-link:https://medium.com/towards-artificial-intelligence/nlp-news-cypher-07-19-20-75c1a3f7f57b&gt;https://medium.com/towards-artificial-intelligence/nlp-news-cypher-07-19-20-75c1a3f7f57b&lt;/denchmark-link&gt;
)
		</comment>
	</comments>
</bug>