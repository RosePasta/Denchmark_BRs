<bug id='1640' author='hanktseng131415go' open_date='2020-05-27T07:40:45Z' closed_time='2020-09-22T07:35:34Z'>
	<summary>TypeError: __init__() got an unexpected keyword argument 'labels' in data_fetcher.py</summary>
	<description>
Hi!
When I was following the New Fine-tuneable Transformers suggestion, the below issue arises. It seems like the data_fetcher.py doesn't follow the new format of Sentence(), right?
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "block_classification.py", line 51, in &lt;module&gt;
    corpus = NLPTaskDataFetcher.load_classification_corpus(Path('./'), test_file='test.csv', dev_file='dev.csv', train_file='train.csv')
  File "/home/user/.conda/envs/keras/lib/python3.6/site-packages/deprecated/classic.py", line 233, in wrapper_function
    return wrapped_(*args_, **kwargs_)
  File "/home/user/.conda/envs/keras/lib/python3.6/site-packages/flair/data_fetcher.py", line 452, in load_classification_corpus
    train_file, tokenizer=tokenizer, max_tokens_per_doc=max_tokens_per_doc
  File "/home/user/.conda/envs/keras/lib/python3.6/site-packages/deprecated/classic.py", line 233, in wrapper_function
    return wrapped_(*args_, **kwargs_)
  File "/home/user/.conda/envs/keras/lib/python3.6/site-packages/flair/data_fetcher.py", line 513, in read_text_classification_file
    sentence = Sentence(text, labels=labels, use_tokenizer=tokenizer)
TypeError: __init__() got an unexpected keyword argument 'labels'
&lt;/denchmark-code&gt;

Or is there anything I missed in my code? The full implementing code is as below:
&lt;denchmark-code&gt;from flair.embeddings import TransformerDocumentEmbeddings
import pandas as pd
from flair.data_fetcher import NLPTaskDataFetcher
from flair.embeddings import DocumentPoolEmbeddings
from flair.models import TextClassifier
from pathlib import Path
from flair.trainers import ModelTrainer
from torch.optim.adam import Adam
import flair, torch

flair.device = torch.device('cuda:0')
training_path = './train.csv'
testing_path = './test.csv'
deving_path = './dev.csv'

corpus = NLPTaskDataFetcher.load_classification_corpus(Path('./'), test_file='test.csv', dev_file='dev.csv', train_file='train.csv')
corpus.test
document_embeddings = TransformerDocumentEmbeddings('xlnet-large-cased', fine_tune = True)
classifier = TextClassifier(document_embeddings, label_dictionary=corpus.make_label_dictionary(), multi_label=True)
trainer = ModelTrainer(classifier, corpus, optimizer=Adam)
trainer.train('./train_hist/', learning_rate=0.1, max_epochs=100, embeddings_storage_mode='gpu')
&lt;/denchmark-code&gt;

Many thanks
	</description>
	<comments>
		<comment id='1' author='hanktseng131415go' date='2020-05-27T13:44:58Z'>
		Hi &lt;denchmark-link:https://github.com/hanktseng131415go&gt;@hanktseng131415go&lt;/denchmark-link&gt;
 the  has been deprecated for a while. Better use the  methods instead, i.e. the  as in &lt;denchmark-link:https://github.com/flairNLP/flair/blob/master/resources/docs/TUTORIAL_6_CORPUS.md#reading-a-text-classification-dataset&gt;this tutorial&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>