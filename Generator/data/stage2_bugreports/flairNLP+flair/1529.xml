<bug id='1529' author='psorianom' open_date='2020-04-19T21:18:07Z' closed_time='2020-05-10T17:27:58Z'>
	<summary>Trapped in an infinite loop in the to_original_text method</summary>
	<description>

When using a faulty tokenizer, producing faulty span indices, the  class method
  is bound to enter an infinite loop. While we should not have faulty tokenizers,
it may happen, as it happened to me. This error is related to this closed &lt;denchmark-link:https://github.com/flairNLP/flair/issues/226&gt;PR&lt;/denchmark-link&gt;
.



Steps to reproduce the behaviour (e.g. which model did you train? what parameters did you use? etc.).
# Given a list of tokens
# We simulate a faulty tokenizer by using wrong spans. (_execution_ `start_position` is wrong).
# This faulty tokenizer may be used via a `build_faulty_tokenizer wrapper`,
# such as the one for spacy.
list_tokens = [Token("de", start_position=0), Token("pourvoir", start_position=3), 
Token("Ã ", start_position=12), Token("l&amp;apos;", start_position=14), 
Token("execution", start_position=16), Token("de", start_position=32)]
s = Sentence()
for token in list_tokens:
    s.add_token(token)

# We are now trapped in an infinite loop
print(s.to_original_text())
Expected behaviour
Possibly an error/warning telling me that my tokenizer is faulty. Another solution would be to check if the start_pos is actually bigger, and not only different, than the pos counter, as below.
This may produce extra spaces not existent in the original phrase though.
(pytest tests/test_data.py::test_token_indices still passes)
for t in self.tokens:
            while t.start_pos &gt; pos: 
                str += " "
                pos += 1
&lt;denchmark-link:https://github.com/flairNLP/flair/compare/master...psorianom:original_text_infinite_loop&gt;Here&lt;/denchmark-link&gt;
 is a branch with this modif.
Environment (please complete the following information):

OS Linux
Version flair-0.4.5

	</description>
	<comments>
		<comment id='1' author='psorianom' date='2020-04-20T23:30:30Z'>
		Hello &lt;denchmark-link:https://github.com/psorianom&gt;@psorianom&lt;/denchmark-link&gt;
 - thanks for reporting this and sharing the code to reproduce! The solution looks good - would you like to do a PR for this?
		</comment>
		<comment id='2' author='psorianom' date='2020-04-21T06:29:07Z'>
		Hi, thank you for checking this. Yes, sure, it is done.
		</comment>
	</comments>
</bug>