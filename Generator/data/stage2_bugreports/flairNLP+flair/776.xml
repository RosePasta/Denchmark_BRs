<bug id='776' author='sheikmohdimran' open_date='2019-06-04T10:53:43Z' closed_time='2019-06-12T12:30:55Z'>
	<summary>Performance issue with "make_label_dictionary"</summary>
	<description>
Describe the bug
I have a corpus of following split, for a binary classification problem.
Corpus: 1082924 train + 360975 dev + 360975 test sentences
When I run "corpus.make_label_dictionary()", it takes for ever to complete
Expected behavior
Labels should be extracted rather quickly
Screenshots
Attached below is the profiler output on where the code is taking too long
Timer unit: 1e-06 s
Total time: 489.987 s
File: /opt/conda/lib/python3.6/site-packages/flair/data.py
Function: make_label_dictionary at line 809
&lt;denchmark-h:h1&gt;Line #      Hits         Time  Per Hit   % Time  Line Contents&lt;/denchmark-h&gt;

809                                               def make_label_dictionary(self) -&gt; Dictionary:
810                                                   """
811                                                   Creates a dictionary of all labels assigned to the sentences in the corpus.
812                                                   :return: dictionary of labels
813                                                   """
814         1  489987462.0 489987462.0    100.0          labels = set([label.value for sent in self.train for label in sent.labels])
815                                                   log.info(labels)
816                                                   label_dictionary: Dictionary = Dictionary(add_unk=False)
817                                                   for label in labels:
818                                                       label_dictionary.add_item(label)
819
820                                                   max_labels = max([len(sent.labels) for sent in self.train])
821                                                   if max_labels &gt; 1:
822                                                       label_dictionary.multi_label = True
823
824                                                   return label_dictionary
Version [e.g. flair-0.4.2]:
	</description>
	<comments>
		<comment id='1' author='sheikmohdimran' date='2019-06-11T14:01:40Z'>
		Hello &lt;denchmark-link:https://github.com/sheikmohdimran&gt;@sheikmohdimran&lt;/denchmark-link&gt;
 thanks for reporting this. I can reproduce this and am pretty sure where the error is coming from: We are not using the  in this function, so there is no multi-CPU used here making streaming data loading extremely slow. I'll fix it and put in a PR shortly!
		</comment>
		<comment id='2' author='sheikmohdimran' date='2019-06-12T12:36:10Z'>
		Hello &lt;denchmark-link:https://github.com/sheikmohdimran&gt;@sheikmohdimran&lt;/denchmark-link&gt;
 I've just merged a PR into master which uses multi-CPU loading for label dictionary creation. On large datasets it still takes a few minutes, but now at least there is a progress bar that lets you know how fast it progresses. Could you check if this works for you?
		</comment>
		<comment id='3' author='sheikmohdimran' date='2019-06-12T16:49:00Z'>
		Hi &lt;denchmark-link:https://github.com/alanakbik&gt;@alanakbik&lt;/denchmark-link&gt;
, I just update flair and executed the same code, I don't seen any progress bar here.
And profiler still points to the same line.
814         1   85317933.0 85317933.0    100.0          labels = set([label.value for sent in self.train for label in sent.labels])
		</comment>
		<comment id='4' author='sheikmohdimran' date='2019-06-12T16:59:46Z'>
		Did you install from master? You can do this with
pip install git+https://github.com/zalandoresearch/flair.git
It is not yet a new release, so pip install --upgrade flair will not do anything.
		</comment>
		<comment id='5' author='sheikmohdimran' date='2019-06-12T17:13:07Z'>
		
Did you install from master? You can do this with
pip install git+https://github.com/zalandoresearch/flair.git

It is not yet a new release, so pip install --upgrade flair will not do anything.

Yup, I have the progress bar now. Thank a tonne !
		</comment>
		<comment id='6' author='sheikmohdimran' date='2019-06-12T17:15:41Z'>
		Great, let me know if it works!
		</comment>
		<comment id='7' author='sheikmohdimran' date='2019-06-12T17:33:55Z'>
		Works, thanks !
		</comment>
		<comment id='8' author='sheikmohdimran' date='2020-07-22T13:20:58Z'>
		Hello &lt;denchmark-link:https://github.com/alanakbik&gt;@alanakbik&lt;/denchmark-link&gt;
,
I am using Flair modules to train text classifiers on huge text corpus(100 Gb+). I have the following questions :


What does the corpus.make_label_dictionary() compute? I see it iterates over all the training examples. If this is done only to find unique number of labels, is there a way to pass the labels_dict within an instance to save time on this step?


If it is also computing/populating vocabulary from the whole dataset (hence iterating over all examples), then can we save a checkpoint of the outputs from running this step locally for later usage?  This will help to avoid this step, if something goes wrong in the next steps.


Thank you
Best
Ankit
		</comment>
		<comment id='9' author='sheikmohdimran' date='2020-07-22T14:03:03Z'>
		
Hello @alanakbik,
I am using Flair modules to train text classifiers on huge text corpus(100 Gb+). I have the following questions :

What does the corpus.make_label_dictionary() compute? I see it iterates over all the training examples. If this is done only to find unique number of labels, is there a way to pass the labels_dict within an instance to save time on this step?
If it is also computing/populating vocabulary from the whole dataset (hence iterating over all examples), then can we save a checkpoint of the outputs from running this step locally for later usage?  This will help to avoid this step, if something goes wrong in the next steps.

Thank you
Best
Ankit

I figured out a way, writing here in case it helps others.
&lt;denchmark-code&gt;# 1. get the corpus
corpus: Corpus = TREC_6()

# 2. create the label dictionary
label_dict = corpus.make_label_dictionary()
label_dict.save('dict')

## Load in the next run
from flair.data import Dictionary
label_dict = Dictionary
label_dict = label_dict.load_from_file('temp')
print(label_dict.get_items())
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='sheikmohdimran' date='2020-08-12T15:17:57Z'>
		&lt;denchmark-link:https://github.com/anksng1201&gt;@anksng1201&lt;/denchmark-link&gt;
 thanks for sharing this!
		</comment>
	</comments>
</bug>