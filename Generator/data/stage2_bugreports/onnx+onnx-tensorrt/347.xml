<bug id='347' author='chongzhong' open_date='2019-12-13T09:38:32Z' closed_time='2020-12-01T17:38:42Z'>
	<summary>Assertion failed: kernel_weights.shape.d[1] * ngroup == nchan</summary>
	<description>
&lt;denchmark-h:h3&gt;the detail error information:&lt;/denchmark-h&gt;

Input filename:   net.onnx
ONNX IR version:  0.0.4
Opset version:    9
Producer name:    pytorch
Producer version: 1.3
Domain:           
Model version:    0
Doc string:       
----------------------------------------------------------------
WARNING: ONNX model has a newer ir_version (0.0.4) than this parser was built against (0.0.3).
Parsing model
While parsing node number 14 [Conv -&gt; "77"]:
ERROR: /home/xmrbi/workplace/onnx-tensorrt/builtin_op_importers.cpp:798 In function importConv:
[6] Assertion failed: kernel_weights.shape.d[1] * ngroup == nchan
&lt;denchmark-h:h3&gt;net:&lt;/denchmark-h&gt;

self.backbone = nn.Sequential(
            nn.Conv2d(in_channels=3, out_channels=64, kernel_size=3, stride=1), # 0
            nn.BatchNorm2d(num_features=64),
            nn.ReLU(),  # 2
            nn.MaxPool3d(kernel_size=(1, 3, 3), stride=(1, 1, 1)),
            small_basic_block(ch_in=64, ch_out=128),    # *** 4 ***
            nn.BatchNorm2d(num_features=128),
            nn.ReLU(),  # 6
            nn.MaxPool3d(kernel_size=(1, 3, 3), stride=(2, 1, 2)),     ### error occurs
            small_basic_block(ch_in=64, ch_out=256),   # 8   #### error occurs
            nn.BatchNorm2d(num_features=256),
            nn.ReLU(),  # 10
            small_basic_block(ch_in=256, ch_out=256),   # *** 11 ***
            nn.BatchNorm2d(num_features=256),   # 12
            nn.ReLU(),
            nn.MaxPool3d(kernel_size=(1, 3, 3), stride=(4, 1, 2)),  # 14
            nn.Dropout(dropout_rate),
            nn.Conv2d(in_channels=64, out_channels=256, kernel_size=(1, 4), stride=1),  # 16
            nn.BatchNorm2d(num_features=256),
            nn.ReLU(),  # 18
            nn.Dropout(dropout_rate),
            nn.Conv2d(in_channels=256, out_channels=class_num, kernel_size=(13, 1), stride=1), # 20
            nn.BatchNorm2d(num_features=class_num),
            nn.ReLU(),  # *** 22 ***
&lt;denchmark-h:h3&gt;the small_basic_block :&lt;/denchmark-h&gt;

class small_basic_block(nn.Module):
    def __init__(self, ch_in, ch_out):
        super(small_basic_block, self).__init__()
        self.block = nn.Sequential(
            nn.Conv2d(ch_in, ch_out // 4, kernel_size=1),
            nn.ReLU(),
            nn.Conv2d(ch_out // 4, ch_out // 4, kernel_size=(3, 1), padding=(1, 0)),
            nn.ReLU(),
            nn.Conv2d(ch_out // 4, ch_out // 4, kernel_size=(1, 3), padding=(0, 1)),
            nn.ReLU(),
            nn.Conv2d(ch_out // 4, ch_out, kernel_size=1),
        )
    def forward(self, x):
        return self.block(x)
	</description>
	<comments>
		<comment id='1' author='chongzhong' date='2020-07-14T01:33:36Z'>
		hi,have you solved the problem? thks
		</comment>
		<comment id='2' author='chongzhong' date='2020-07-15T06:16:07Z'>
		I have solved the problem haha
		</comment>
		<comment id='3' author='chongzhong' date='2020-07-15T06:22:17Z'>
		Hi &lt;denchmark-link:https://github.com/persuelx&gt;@persuelx&lt;/denchmark-link&gt;
 ,
Do you mind sharing your solution in case it helps others?
		</comment>
		<comment id='4' author='chongzhong' date='2020-08-13T11:17:02Z'>
		
I have solved the problem haha

Hi  &lt;denchmark-link:https://github.com/persuelx&gt;@persuelx&lt;/denchmark-link&gt;
, how did you manage to overcome this problem when converting onnx model into trt engine model. Thanks!
Edit:  My issue was that I had unsqueeze() method in the forward of the model. I have changed that with view() with exact dimensions, for example unsqueeze(-1) changed to view(1,1,36,60). That solved the problem.
		</comment>
		<comment id='5' author='chongzhong' date='2020-12-01T17:38:42Z'>
		Closing this issue as it seems it has been solved.
		</comment>
	</comments>
</bug>