<bug id='122' author='MohamedAfifii' open_date='2019-02-26T12:11:03Z' closed_time='2020-11-03T22:08:57Z'>
	<summary>UpSampling2D and LeakyRelu with Tensorrt 4</summary>
	<description>
Hello,
I get segmentation fault when deserializing the trt engine if I use UpSampling2D or LeakyRelu.
Here is the model:
&lt;denchmark-code&gt;from keras.layers import LeakyReLU, BatchNormalization, UpSampling2D, Conv2D
import onnxmltools

inputs = Input(shape=(224,224,3))
outputs = Conv2D(64, (3,3), strides=(2,2))(inputs)
outputs = UpSampling2D(2)(outputs)
model = Model(inputs, outputs)

onnx_model = onnxmltools.convert_keras(model)
onnxmltools.utils.save_model(onnx_model, 'dark.onnx')
&lt;/denchmark-code&gt;

I then convert the onnx model to trt:
&lt;denchmark-code&gt;----------------------------------------------------------------
Input filename:   dark.onnx
ONNX IR version:  0.0.4
Opset version:    7
Producer name:    OnnxMLTools
Producer version: 1.3.1
Domain:           onnxml
Model version:    0
Doc string:       
----------------------------------------------------------------
WARNING: ONNX model has a newer ir_version (0.0.4) than this parser was built against (0.0.3).
Parsing model
Building TensorRT engine, FP16 available:1
    Max batch size:     32
    Max workspace size: 1024 MiB
Writing TensorRT engine to mini_yolo3.trt
All done
&lt;/denchmark-code&gt;

When I deserialize this trt file I get segmentation fault.
However when I remove the UpSampling2D layer and put any other layer (except for LeakyRelu), the engine is loaded successfully.
Please let me know if I am asking in the wrong place. Also if there is any workaround (other than upgrading the tensorrt version) please tell me.
I am using Jetson TX2 with Jetpack 3.3
	</description>
	<comments>
		<comment id='1' author='MohamedAfifii' date='2020-11-03T22:08:57Z'>
		Hi &lt;denchmark-link:https://github.com/MohamedAfifii&gt;@MohamedAfifii&lt;/denchmark-link&gt;
, we've dropped support for TRT 4, so please consider upgrading your TensorRT version.
In addition, we recommend using the shipped trtexec binary over onnx2trt to create serialized engine files, as the latter will be deprecated in a later release.
		</comment>
	</comments>
</bug>