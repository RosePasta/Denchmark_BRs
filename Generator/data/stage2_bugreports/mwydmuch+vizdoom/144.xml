<bug id='144' author='apaszke' open_date='2016-11-29T17:52:57Z' closed_time='2016-12-20T20:29:04Z'>
	<summary>Can't compile on macOS with brew-installed boost and boost-python</summary>
	<description>
I've just updated my ViZDoom version and even though it used to compile and work just fine, &lt;denchmark-link:https://github.com/mwydmuch/ViZDoom/commit/fbda2ab191c7fd113ba8458e030fb06133aa4642&gt;fbda2ab&lt;/denchmark-link&gt;
 seems to break the build for me . With this change it can no longer find boost-python. I installed the libraries using the following commands. I see that  exists.
brew install boost
brew install boost-python --with-python3
Once I comment out this addtional set it compiles without any problems.
	</description>
	<comments>
		<comment id='1' author='apaszke' date='2016-11-29T18:03:39Z'>
		Sad, I hoped it would still work on mac. Without this line it breaks on linux so we will have to check it more thoroughly. Thanks for the note.
		</comment>
		<comment id='2' author='apaszke' date='2016-11-29T18:17:31Z'>
		If you need any help testing patches, just let me know. I can apply them and see if they work for me.
		</comment>
		<comment id='3' author='apaszke' date='2016-11-29T18:17:53Z'>
		On 29 November 2016 at 19:03, Michał Kempka ***@***.***&gt; wrote:
 Sad, I hoped it would still work on mac. Without this line it breaks on
 linux

What this line was supposed to do, actually? It seems totally spurious to
me.
		</comment>
		<comment id='4' author='apaszke' date='2016-11-29T18:43:56Z'>
		On linux find_package(Boost COMPONENTS python3-mt)  doesnt set Boost_python3-mt_FOUND to anything. I thought that if I set it to false find_package will override it but as it turns out "The package configuration file may set _FOUND to false to tell find_package that component requirements are not satisfied."
		</comment>
		<comment id='5' author='apaszke' date='2016-11-29T19:46:11Z'>
		&lt;denchmark-link:https://github.com/apaszke&gt;@apaszke&lt;/denchmark-link&gt;
 I have pushed some changes so not it should work on mac and linux. It seems that my cmake is misbehaving. Could you check if it is ok now?
		</comment>
		<comment id='6' author='apaszke' date='2016-11-29T21:10:21Z'>
		Still no luck. If you want you can email me patches to apply, so I can try them before you push to master.
&lt;denchmark-code&gt;CMake Warning at /usr/local/Cellar/cmake/3.7.0/share/cmake/Modules/FindBoost.cmake:1499 (message):
  No header defined for python3-mt; skipping header check
Call Stack (most recent call first):
  CMakeLists.txt:218 (find_package)


CMake Warning at /usr/local/Cellar/cmake/3.7.0/share/cmake/Modules/FindBoost.cmake:1499 (message):
  No header defined for python3; skipping header check
Call Stack (most recent call first):
  CMakeLists.txt:223 (find_package)


CMake Warning at /usr/local/Cellar/cmake/3.7.0/share/cmake/Modules/FindBoost.cmake:1499 (message):
  No header defined for python-py35; skipping header check
Call Stack (most recent call first):
  CMakeLists.txt:229 (find_package)


CMake Error at /usr/local/Cellar/cmake/3.7.0/share/cmake/Modules/FindBoost.cmake:1793 (message):
  Unable to find the requested Boost libraries.

  Boost version: 1.62.0

  Boost include path: /usr/local/include

  Could not find the following Boost libraries:

          boost_python-py35

  No Boost libraries were found.  You may need to set BOOST_LIBRARYDIR to the
  directory containing Boost libraries or BOOST_ROOT to the location of
  Boost.
Call Stack (most recent call first):
  CMakeLists.txt:229 (find_package)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='apaszke' date='2016-11-29T21:15:46Z'>
		So it seems that find_package sets the wrong variable not only on my pc and it was a pure luck that it worked before. What version od cmake do you use by the way?
		</comment>
		<comment id='8' author='apaszke' date='2016-11-29T21:16:58Z'>
		It's 3.7.0. Newest version from brew.
		</comment>
		<comment id='9' author='apaszke' date='2016-12-01T21:05:24Z'>
		Indeed. As a temporary workaround take the CMakeLists.txt from &lt;denchmark-link:https://github.com/mwydmuch/ViZDoom/commit/6ef73a8be65e5b7a7b2832e66858e1ccef25651b&gt;6ef73a8&lt;/denchmark-link&gt;
. It
works on OSX (mine at least).
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On 1 December 2016 at 21:02, Eugenio Culurciello ***@***.***&gt; wrote:
 same here, no luck on Mac OS X 10.12 with all latest brew packages
 Boost is not found be default. Commenting line 218 here: fbda2ab
 ?diff=unified
 &lt;fbda2ab?diff=unified&gt;
 Did make cmake pass, but then when I make boost is not found and fails:

 info on cmake:

 ***@***.***:~/Desktop/ViZDoom(master) $ cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_PYTHON3=ON -DPYTHON_INCLUDE_DIR=/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/include/python3.5m     -DPYTHON_LIBRARY=/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/libpython3.5m.dylib
 -- The C compiler identification is AppleClang 8.0.0.8000042
 -- The CXX compiler identification is AppleClang 8.0.0.8000042
 -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/usr/bin/gcc
 -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/usr/bin/gcc -- works
 -- Detecting C compiler ABI info
 -- Detecting C compiler ABI info - done
 -- Detecting C compile features
 -- Detecting C compile features - done
 -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/usr/bin/g++
 -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/usr/bin/g++ -- works
 -- Detecting CXX compiler ABI info
 -- Detecting CXX compiler ABI info - done
 -- Detecting CXX compile features
 -- Detecting CXX compile features - done
 -- Looking for pthread.h
 -- Looking for pthread.h - found
 -- Looking for pthread_create
 -- Looking for pthread_create - found
 -- Found Threads: TRUE
 -- Boost version: 1.62.0
 -- Found the following Boost libraries:
 --   filesystem
 --   thread
 --   system
 --   date_time
 --   chrono
 --   regex
 --   iostreams
 --   atomic
 -- Found BZip2: /usr/lib/libbz2.dylib (found version "1.0.6")
 -- Looking for BZ2_bzCompressInit
 -- Looking for BZ2_bzCompressInit - found
 -- Found JPEG: /usr/local/lib/libjpeg.dylib
 -- Found ZLIB: /usr/lib/libz.dylib (found version "1.2.8")
 -- Could NOT find GME (missing:  GME_INCLUDE_DIR)
 -- Using system zlib
 -- Using system jpeg library
 -- Using system bzip2 library
 -- Using internal gme library
 -- Performing Test HAVE_NO_ARRAY_BOUNDS
 -- Performing Test HAVE_NO_ARRAY_BOUNDS - Success
 -- Looking for strdup
 -- Looking for strdup - found
 -- Looking for strndup
 -- Looking for strndup - found
 -- Looking for sys/types.h
 -- Looking for sys/types.h - found
 -- Looking for stdint.h
 -- Looking for stdint.h - found
 -- Looking for stddef.h
 -- Looking for stddef.h - found
 -- Check size of char
 -- Check size of char - done
 -- Check size of short
 -- Check size of short - done
 -- Check size of int
 -- Check size of int - done
 -- Check size of long
 -- Check size of long - done
 -- /usr/include
 -- /usr/include
 -- /Users/eugenioculurciello/Desktop/ViZDoom/src/vizdoom/lzma/C
 -- Looking for itoa
 -- Looking for itoa - not found
 -- Performing Test DUMB_CAN_USE_SSE
 -- Performing Test DUMB_CAN_USE_SSE - Success
 -- Found PkgConfig: /usr/local/bin/pkg-config (found version "0.29.1")
 -- Found SDL2: /usr/local/lib/libSDL2.dylib;-framework Cocoa
 -- Found OpenAL: /System/Library/Frameworks/OpenAL.framework
 -- Could not find FMOD include files
 -- Found SndFile: /usr/local/lib/libsndfile.dylib
 -- Could NOT find MPG123 (missing:  MPG123_LIBRARIES MPG123_INCLUDE_DIR)
 -- Could NOT find FluidSynth (missing:  FLUIDSYNTH_LIBRARIES FLUIDSYNTH_INCLUDE_DIR)
 -- Looking for filelength
 -- Looking for filelength - not found
 -- Looking for strupr
 -- Looking for strupr - not found
 -- Looking for stricmp
 -- Looking for stricmp - not found
 -- Looking for strnicmp
 -- Looking for strnicmp - not found
 -- Looking for clock_gettime in rt
 -- Looking for clock_gettime in rt - not found
 -- Looking for clock_gettime
 -- Looking for clock_gettime - found
 -- Performing Test HAS_VA_COPY
 -- Performing Test HAS_VA_COPY - Success
 -- Boost version: 1.62.0
 -- Found the following Boost libraries:
 --   thread
 --   system
 --   date_time
 --   chrono
 --   atomic
 -- Fluid synth libs: FLUIDSYNTH_LIBRARIES-NOTFOUND
 -- Found PythonInterp: /usr/local/bin/python3 (found suitable version "3.5.2", minimum required is "3")
 -- Found PythonLibs: /usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/libpython3.5m.dylib (found suitable version "3.5.2", minimum required is "3.5")
 CMake Warning at /usr/local/Cellar/cmake/3.7.1/share/cmake/Modules/FindBoost.cmake:1499 (message):
   No header defined for python3-mt; skipping header check
 Call Stack (most recent call first):
   CMakeLists.txt:218 (find_package)


 CMake Warning at /usr/local/Cellar/cmake/3.7.1/share/cmake/Modules/FindBoost.cmake:1499 (message):
   No header defined for python3; skipping header check
 Call Stack (most recent call first):
   CMakeLists.txt:223 (find_package)


 CMake Warning at /usr/local/Cellar/cmake/3.7.1/share/cmake/Modules/FindBoost.cmake:1499 (message):
   No header defined for python-py35; skipping header check
 Call Stack (most recent call first):
   CMakeLists.txt:229 (find_package)


 CMake Error at /usr/local/Cellar/cmake/3.7.1/share/cmake/Modules/FindBoost.cmake:1793 (message):
   Unable to find the requested Boost libraries.

   Boost version: 1.62.0

   Boost include path: /usr/local/include

   Could not find the following Boost libraries:

           boost_python-py35

   No Boost libraries were found.  You may need to set BOOST_LIBRARYDIR to the
   directory containing Boost libraries or BOOST_ROOT to the location of
   Boost.
 Call Stack (most recent call first):
   CMakeLists.txt:229 (find_package)


 -- Found NUMPY: /usr/local/lib/python3.5/site-packages/numpy/core/include
 -- Found components for NumPy
 -- NUMPY_ROOT_DIR    = /usr/local
 -- NUMPY_INCLUDES    = /usr/local/lib/python3.5/site-packages/numpy/core/include
 -- NUMPY_LIBRARIES   =
 -- NUMPY_API_VERSION = 1.11.2
 -- Configuring incomplete, errors occurred!
 See also "/Users/eugenioculurciello/Desktop/ViZDoom/CMakeFiles/CMakeOutput.log".
 See also "/Users/eugenioculurciello/Desktop/ViZDoom/CMakeFiles/CMakeError.log".

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 &lt;#144 (comment)&gt;, or mute
 the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AEuSHTwB4H5kyS3wPuWE19CljRHn2pw4ks5rDyfogaJpZM4K_RwN&gt;
 .



		</comment>
		<comment id='10' author='apaszke' date='2016-12-01T21:20:18Z'>
		Thanks &lt;denchmark-link:https://github.com/wjaskowski&gt;@wjaskowski&lt;/denchmark-link&gt;
 I can confirm with
&lt;denchmark-code&gt;eugenioculurciello@Pora:~/Desktop/ViZDoom(master) $ git diff CMakeLists.txt 
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 55abfdf..29d50ba 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -217,9 +217,9 @@ if (BUILD_PYTHON3)
 
     find_package(Boost QUIET COMPONENTS python3-mt)  # The name under OSX (macports)
 
-    if (${Boost_python3-mt_FOUND})
-        MESSAGE("--Found the following Boost libraries: \n--   python3-mt")
-    else ()
+    if (NOT ${Boost_python3-mt_FOUND})
+#        MESSAGE("--Found the following Boost libraries: \n--   python3-mt")
+#    else ()
         find_package(Boost QUIET COMPONENTS python3)
         if (${Boost_python3_FOUND})
             MESSAGE("-- Found boost python3")
&lt;/denchmark-code&gt;

it compiled
		</comment>
		<comment id='11' author='apaszke' date='2016-12-01T21:40:08Z'>
		&lt;denchmark-link:https://github.com/wjaskowski&gt;@wjaskowski&lt;/denchmark-link&gt;
, even after doing this: &lt;denchmark-link:https://github.com/mwydmuch/ViZDoom/issues/46&gt;#46&lt;/denchmark-link&gt;
,  now I get this:
&lt;denchmark-code&gt;eugenioculurciello@Pora:~/Desktop/ViZDoom/examples/python(master) $ python3 basic.py 
Traceback (most recent call last):
  File "basic.py", line 91, in &lt;module&gt;
    game.init()
vizdoom.vizdoom.FileDoesNotExistException: File "vizdoom" does not exist.
&lt;/denchmark-code&gt;

do you have any idea how to fix it?
		</comment>
		<comment id='12' author='apaszke' date='2016-12-01T21:49:17Z'>
		We are aware of this problem but we have some problems reproducing it on different machines. I have created a separate issue for this &lt;denchmark-link:https://github.com/mwydmuch/ViZDoom/issues/147&gt;#147&lt;/denchmark-link&gt;
. Anyway for now you could try setting the path by hand as it was done before recent not-so-stable updates
&lt;denchmark-code&gt;game.set_vizdoom_path(vizdoom.__path__[0] + "/vizdoom")
game.set_doom_game_path(vizdoom.__path__[0] + "/freedoom2.wad")

&lt;/denchmark-code&gt;

We will try to make it work as expected as soon as possible, sorry for the trouble.
		</comment>
		<comment id='13' author='apaszke' date='2016-12-01T21:52:50Z'>
		Thank you @ebonyclock you guys are really great and responsive and also this project is really well done. Thank you for all this~!
		</comment>
		<comment id='14' author='apaszke' date='2016-12-01T21:53:14Z'>
		If you need help to test things on OS X and Ubuntu 16, let me know also
		</comment>
		<comment id='15' author='apaszke' date='2016-12-01T22:03:13Z'>
		Thank you. Since you are offering some help it would be nice if you listed your software (python, boost etc) and output of cmake and make, it could be helpful.
		</comment>
		<comment id='16' author='apaszke' date='2016-12-01T22:26:10Z'>
		Here are the install logs:
&lt;denchmark-link:https://github.com/Marqt/ViZDoom/files/629100/os-x-logs-ec.txt&gt;os-x-logs-ec.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='17' author='apaszke' date='2016-12-03T19:46:10Z'>
		&lt;denchmark-link:https://github.com/culurciello&gt;@culurciello&lt;/denchmark-link&gt;
 Could you check if the latest commits resolve your issue with:

It turned out we had a silly mistakes so vizdoom wasn't really there. We had ' "vizdoom" does not exist' problem on mac regardless (when vizdoom was there) so it would be nice to know if you experience it.
By the way, in the future please post a file with logs not a wall of text.
		</comment>
		<comment id='18' author='apaszke' date='2016-12-03T20:03:14Z'>
		@ebonyclock lol 👎  corrected wall of text, that was really ugly on my part yes ;-) I am sorry!
Ok, the boost python issue is not fixed:
&lt;denchmark-link:https://github.com/Marqt/ViZDoom/files/629101/osx-log-cmake-boost.txt&gt;osx-log-cmake-boost.txt&lt;/denchmark-link&gt;

still had to do as above to compile on OS X 10.12
Executable problem persists:
&lt;denchmark-link:https://github.com/Marqt/ViZDoom/files/629108/osx-log-ec-new.txt&gt;osx-log-ec-new.txt&lt;/denchmark-link&gt;

maybe if you tell me what code is responsible, I can fix and send you fix?
		</comment>
		<comment id='19' author='apaszke' date='2016-12-03T20:08:15Z'>
		&lt;denchmark-link:https://github.com/culurciello&gt;@culurciello&lt;/denchmark-link&gt;

Yes, boost_python thing is not corrected, I asked only about this one:

		</comment>
		<comment id='20' author='apaszke' date='2016-12-03T20:09:19Z'>
		@ebonyclock am checking now!!!
		</comment>
		<comment id='21' author='apaszke' date='2016-12-03T20:15:09Z'>
		ok responded on comment above, thank you for your help @ebonyclock
		</comment>
		<comment id='22' author='apaszke' date='2016-12-03T20:19:46Z'>
		I forgot one thing. This will work only if you install vizdoom system wide with pip like (from the repository dir):
sudo pip3 install .
		</comment>
		<comment id='23' author='apaszke' date='2016-12-04T07:15:23Z'>
		I don't think you should assume people will always have a system wide install, and if you do, you should clearly note it in the readme. Virtualenvs are pretty popular
		</comment>
		<comment id='24' author='apaszke' date='2016-12-04T11:52:18Z'>
		Well, actually I just meant that you need to install it with pip, it will work for virtualenv too. The thing is that running cmake/make just builds everythjing so you need to manually link to vizdoom.so and specify paths for vizdoom and freedoom2.wad/doom2.wad.
		</comment>
		<comment id='25' author='apaszke' date='2016-12-18T22:48:51Z'>
		Is there any progress on this issue? CMake keeps failing for me 😕
		</comment>
		<comment id='26' author='apaszke' date='2016-12-18T23:03:44Z'>
		Unfortunately not yet. I will have access to mac tomorrow so hopefully I'll manage to do something. Any fixes will be pushed to cmake branch for now. Any contributions welcome.
		</comment>
		<comment id='27' author='apaszke' date='2016-12-20T00:29:54Z'>
		&lt;denchmark-link:https://github.com/apaszke&gt;@apaszke&lt;/denchmark-link&gt;
 could you check the current version from the cmake branch? It compiled ok for python3 from brew and link to /usr/local/opt/boost-python/lib/libboost_python3-mt.dylib.
		</comment>
		<comment id='28' author='apaszke' date='2016-12-20T19:45:39Z'>
		It cmakes, makes and installs fine on my OSX (macports, python3).
Maybe except the usual cmake's whinings:
&lt;denchmark-code&gt;-- Found PythonInterp: /opt/local/bin/python3 (found suitable version "3.5.2", minimum required is "3")
-- Found PythonLibs: /opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/libpython3.5m.dylib (found suitable version "3.5.2", minimum required is "3.5")
CMake Warning at /opt/local/share/cmake-3.6/Modules/FindBoost.cmake:1459 (message):
  No header defined for python-py35; skipping header check
Call Stack (most recent call first):
  CMakeLists.txt:218 (find_package)


CMake Warning at /opt/local/share/cmake-3.6/Modules/FindBoost.cmake:1459 (message):
  No header defined for python3; skipping header check
Call Stack (most recent call first):
  CMakeLists.txt:223 (find_package)


-- Found Boost python3:
--   /opt/local/lib/libboost_python3-mt.dylib```
&lt;/denchmark-code&gt;

		</comment>
		<comment id='29' author='apaszke' date='2016-12-20T20:04:45Z'>
		Works for me now. Thanks! 👍
		</comment>
	</comments>
</bug>