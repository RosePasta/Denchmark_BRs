<bug id='165' author='pengsun' open_date='2017-01-03T09:18:15Z' closed_time='2017-01-08T17:03:13Z'>
	<summary>getState causes SIGSEGV when it's called in terminal stated in Lua</summary>
	<description>
Hi,
I installed ViZDoom of the newest commit &lt;denchmark-link:https://github.com/mwydmuch/ViZDoom/commit/44d3278246e5ebd875869117b818f78da83d39c7&gt;44d3278&lt;/denchmark-link&gt;
 using . I found  occasionally crashed when running long enough, outputting "segmentation fault" without any further information. The error is very hard to reproduce as it crashes randomly after running several tens of or thousands of episodes. Could you take a look?
The code I used is as follows:
require "vizdoom"
require "torch"
require "sys"

local vizdoomPath = '/home/xxx/torch/install/lib/lua/5.1/vizdoom'
local isShow = false
local actrep = 4
local maxSteps = 250*1000*1000

-- Create DoomGame instance. It will run the game and communicate with you.
local game = vizdoom.DoomGame()

game:setViZDoomPath(paths.concat(vizdoomPath, 'vizdoom'))
game:loadConfig(paths.concat(vizdoomPath, "scenarios/cig.cfg"))
game:setDoomMap("map01") -- Limited deathmatch.

-- Start multiplayer game only with your AI (with options that will be used in the competition, details in cig_host example).
game:addGameArgs("-host 1 -deathmatch +timelimit 4.0 "..
                 "+sv_forcerespawn 1 +sv_noautoaim 1 "..
                 "+sv_respawnprotect 1 +sv_spawnfarthest 1")

game:addGameArgs("+name WhoAmI +colorset 0")

--game:setMode(vizdoom.Mode.SPECTATOR);
game:setMode(vizdoom.Mode.PLAYER);

game:setWindowVisible(isShow)

game:init();

-- Three example sample actions
local actions = {
    [1] = torch.IntTensor({1,0,0,0,0,0,0,0,0}),
    [2] = torch.IntTensor({0,1,0,0,0,0,0,0,0}),
    [3] = torch.IntTensor({0,0,1,0,0,0,0,0,0}),
    [4] = torch.IntTensor({0,0,0,1,0,0,0,0,0}),
    [5] = torch.IntTensor({0,0,0,0,1,0,0,0,0}),
    [6] = torch.IntTensor({0,0,0,0,0,1,0,0,0}),
    [7] = torch.IntTensor({0,0,0,0,0,0,1,0,0}),
    [8] = torch.IntTensor({0,0,0,0,0,0,0,1,0}),
    [9] = torch.IntTensor({0,0,0,0,0,0,0,0,1})
}

-- Play with this many bots
local bots = 7

-- Run this many episodes
local epSteps = 25200/actrep
local episodes = math.ceil(maxSteps/epSteps)

-- To be used by the main game loop
local state, reward

for i = 1, episodes do

    print("Episode #"..i)
    -- Add specific number of bots
    -- (file examples/bots.cfg must be placed in the same directory as the Doom executable file,
    -- edit this file to adjust bots).
    game:sendGameCommand("removebots")
    for j = 1, bots do
        game:sendGameCommand("addbot")
    end

    -- Play until the game (episode) is over.
    while not game:isEpisodeFinished() do

        if game:isPlayerDead() then
            -- Respawn immediately after death, new state will be available.
            --sys.sleep(4)
            game:respawnPlayer()
        end

        --require'mobdebug'.start()
        -- Analyze the state
        state = game:getState()

        -- Make a random action
        local action = actions[torch.random(#actions)]
        reward = game:makeAction(action, actrep)

        local str = ("Episodes: %d, Frags: %d, #players %d\n"):format(
            i,
            game:getGameVariable(vizdoom.GameVariable.FRAGCOUNT),
            game:getGameVariable(vizdoom.GameVariable.PLAYER_COUNT)
        )
        print(str)
    end

    print("Episode finished.")
    print("************************")

    game:newEpisode()
end

game:close()
	</description>
	<comments>
		<comment id='1' author='pengsun' date='2017-01-07T05:37:03Z'>
		Hi, I ran the code on three different machines (Ubuntu 14.04, CentOS 7.0 and CentOS 7.2 ), each of them crashed after a random number of episodes.
		</comment>
		<comment id='2' author='pengsun' date='2017-01-07T22:29:56Z'>
		Hi &lt;denchmark-link:https://github.com/pengsun&gt;@pengsun&lt;/denchmark-link&gt;
, sorry for the late reply.
The crash happens when agent dies just before the end of the episode/map: respawnPlayer() method waits few ticks and returns in a terminal state and then getState() causes SIGSEGV.
I will fix it soon.
For now, you can move
&lt;denchmark-code&gt;if game:isPlayerDead() then
    game:respawnPlayer()
end
&lt;/denchmark-code&gt;

part at the end of the loop, it'll prevent the crash, in fact it's better way to design this loop, I've changed this in all multiplayer examples.
		</comment>
		<comment id='3' author='pengsun' date='2017-01-08T17:03:13Z'>
		Fixed, sorry &lt;denchmark-link:https://github.com/pengsun&gt;@pengsun&lt;/denchmark-link&gt;
, this bug was a huge oversight on my part.
		</comment>
		<comment id='4' author='pengsun' date='2017-01-09T08:07:08Z'>
		Hi &lt;denchmark-link:https://github.com/marqt&gt;@marqt&lt;/denchmark-link&gt;
,
Thanks for the fixing! But it still crashes using the new code (which simply places respawnPlayer block right after makeAction, right?). This time newEpisode function seems problematic. The error looks like:
&lt;denchmark-code&gt;...
Episodes 97, Frags: -7, #players 8

Episodes 97, Frags: -7, #players 8

Episode finished.
************************
/xxx/torch/install/bin/luajit: ViZDoomErrorException: No deathmatch starts
stack traceback:
        [C]: in function 'newEpisode'
        test/test-cig-bots.lua:95: in main chunk
        [C]: in function 'dofile'
        ...xxx/torch/install/lib/luarocks/rocks/trepl/scm-1/bin/th:145: in main chunk
        [C]: at 0x004064f0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='pengsun' date='2017-01-10T01:58:24Z'>
		I've opened new issue for this &lt;denchmark-link:https://github.com/mwydmuch/ViZDoom/issues/166&gt;#166&lt;/denchmark-link&gt;
. Not 100% sure, but the last commit should fix it.
		</comment>
	</comments>
</bug>