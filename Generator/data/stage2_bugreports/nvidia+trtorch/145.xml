<bug id='145' author='wcy116' open_date='2020-07-17T11:27:03Z' closed_time='2020-07-20T03:35:29Z'>
	<summary>üêõ [Bug] support for aten::div(ITensor, IValue)</summary>
	<description>
Pytorch supports the torch.div(Tensor, Number) op, while I can only find the converter aten::div(Tensor, Tensor). The converter doesn't work when self is ITensor and other IValue in div op.
INFO: [TRTorch Conversion Context] - Adding Layer %x0.1 : Tensor = aten::div(%x.2, %10) # prepare_sdk.py:37:0 (ctx.AddLayer)
DEBUG: [TRTorch Conversion Context] - Node input is an already converted tensor
DEBUG: [TRTorch Conversion Context] - Node input is a result of a previously evaluated value
terminate called after throwing an instance of 'trtorch::Error'
what():  [enforce fail at core/conversion/var/Var.cpp:98] Expected isITensor() to be true but got false
Requested ITensor from Var, however Var type is c10::IValue
	</description>
	<comments>
		<comment id='1' author='wcy116' date='2020-07-17T18:35:52Z'>
		Are you able to share a version of the TorchScript file that can replicate this issue? Ideally what we would do is add a pass that freezes these Tensors beforehand vs doing type checking in every converter.
		</comment>
		<comment id='2' author='wcy116' date='2020-07-20T03:37:32Z'>
		I have solved the problem by following your advice. Thank you very much.
		</comment>
	</comments>
</bug>