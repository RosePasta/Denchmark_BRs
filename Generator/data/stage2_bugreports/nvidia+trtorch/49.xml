<bug id='49' author='narendasan' open_date='2020-05-03T06:30:15Z' closed_time='2020-06-19T19:51:16Z'>
	<summary>Dynamic shape is mishandled by `aten::adaptive_avg_pooling2d` converter</summary>
	<description>
&lt;denchmark-code&gt;DEBUG: [TRTorch - Debug Build] - Stride: [-1, -1]
DEBUG: [TRTorch - Debug Build] - Window: [-1, -1]
ERROR: [TRTorch Conversion Context] - Parameter check failed at: ../builder/Network.cpp::addPoolingNd::690, condition: allDimsGtEq(windowSize, 1) &amp;&amp; volume(windowSize) &lt; MAX_KERNEL_DIMS_PRODUCT
terminate called after throwing an instance of 'trtorch::Error'
  what():  [enforce fail at core/conversion/converters/impl/pooling.cpp:92] Expected new_layer to be true but got false
Unable to create average pooling layer from node: %x.1 : Tensor = aten::adaptive_avg_pool2d(%447, %6) # /home/narens/.local/lib/python3.6/site-packages/torch/nn/functional.py:889:0

&lt;/denchmark-code&gt;

Because the output size is calculated based on the input size and target output size, you get incorrect stride and window when using dynamic shape. Hopefully will get fixed with the work done on generating shape tensors
	</description>
	<comments>
		<comment id='1' author='narendasan' date='2020-05-03T22:48:30Z'>
		In progress work here but cannot be merged until there is some API that lets you set window shape at runtime &lt;denchmark-link:https://github.com/narendasan/TRTorch/tree/dynamic_adaptive_avg_pool&gt;https://github.com/narendasan/TRTorch/tree/dynamic_adaptive_avg_pool&lt;/denchmark-link&gt;
. It may just be a limitation that you cannot use both adaptive_avg_pool2d and dynamic shape until TRT changes
		</comment>
		<comment id='2' author='narendasan' date='2020-05-29T01:33:06Z'>
		Alternatively we can ship a plugin that runs the PyTorch Adaptive Average Pool op
		</comment>
	</comments>
</bug>