<bug id='144' author='ElianeBriand' open_date='2019-12-08T21:21:33Z' closed_time='2019-12-13T18:08:10Z'>
	<summary>DE: need for DecomposableFunction not stated in documentation</summary>
	<description>
&lt;denchmark-h:h4&gt;Description of problem&lt;/denchmark-h&gt;

The differential evolution algorithm is documented as needing an arbitrary function, both in the function type and optimizer section of the documentation.
However, using the code in the master branch (commit &lt;denchmark-link:https://github.com/mlpack/ensmallen/commit/9b730c721294db0df7c0b752994b9d255ef58479&gt;9b730c7&lt;/denchmark-link&gt;
), the DE algorithm need a NonDifferentiableDecomposableFunctionType according to the static_assert error message.
In addition to the discrepancy between documentation and code, the static_assert error message speaks of decomposable function, but the documentation use the term separable function only. These terms are synonyms, but this may not be obvious to the user. If you ctrl+F in the documentation for decomposable, there is no result, which is unfortunate because it make fixing error in one's code more difficult. I suggest either saying the function need to be separable in the static_assert message, or mentioning the term decomposable function in the documentation.
&lt;denchmark-h:h4&gt;Problem location&lt;/denchmark-h&gt;

&lt;denchmark-link:http://ensmallen.org/docs.html&gt;http://ensmallen.org/docs.html&lt;/denchmark-link&gt;

doc/functions_types.md
doc/optimizers.md
	</description>
	<comments>
		<comment id='1' author='ElianeBriand' date='2019-12-10T06:08:09Z'>
		Hey &lt;denchmark-link:https://github.com/ElianeBriand&gt;@ElianeBriand&lt;/denchmark-link&gt;
, thanks for the clear bug report---it made my job easy.  It turns out DE actually should work with arbitrary functions, not arbitrary separable functions.  So I fixed the check in that code.
Also, you are right, we should definitely have documentation whose terms match the error messages.  That was an artifact from early ensmallen development when we hadn't settled on the terms to use yet. :(
I opened &lt;denchmark-link:https://github.com/mlpack/ensmallen/pull/145&gt;#145&lt;/denchmark-link&gt;
 which fixes both of these issues; now, error messages will use the terms  and .
Thanks for pointing out the issue! üëç
		</comment>
		<comment id='2' author='ElianeBriand' date='2019-12-10T07:04:39Z'>
		Thanks for the fix. And thanks for maintaining this library, it's really one of the best and easier to user optimization libs available in C++.
		</comment>
		<comment id='3' author='ElianeBriand' date='2019-12-10T16:03:56Z'>
		Great to hear that, thanks! üëç
		</comment>
		<comment id='4' author='ElianeBriand' date='2019-12-13T18:08:10Z'>
		I released ensmallen 2.10.5 today with these documentation fixes.  Thanks again for the report!
		</comment>
	</comments>
</bug>