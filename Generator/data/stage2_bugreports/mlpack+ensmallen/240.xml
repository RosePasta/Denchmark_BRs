<bug id='240' author='coatless' open_date='2020-11-04T22:36:54Z' closed_time='2020-11-05T17:20:13Z'>
	<summary>Release script missed updating version</summary>
	<description>
Looking at the release tag, the script didn't pass on the new name, version, and date information. üò≠



ensmallen/include/ensmallen_bits/ens_version.hpp


        Lines 15 to 28
      in
      6f07cab






 #define ENS_VERSION_MAJOR 2 



 // The minor version is two digits so regular numerical comparisons of versions 



 // work right.  The first minor version of a release is always 10. 



 #define ENS_VERSION_MINOR 14 



 #define ENS_VERSION_PATCH 2 



 // If this is a release candidate, it will be reflected in the version name 



 // (i.e. the version name will be "RC1", "RC2", etc.).  Otherwise the version 



 // name will typically be a seemingly arbitrary set of words that does not 



 // contain the capitalized string "RC". 



 #define ENS_VERSION_NAME "No Direction Home" 



 // Incorporate the date the version was released. 



 #define ENS_VERSION_YEAR "2020" 



 #define ENS_VERSION_MONTH "09" 



 #define ENS_VERSION_DAY "05" 





	</description>
	<comments>
		<comment id='1' author='coatless' date='2020-11-04T22:39:19Z'>
		I believe this is because the release PR might have been merged as a merge, not as a rebase?  &lt;denchmark-link:https://github.com/zoq&gt;@zoq&lt;/denchmark-link&gt;
 do you remember how you did it?  (Anyway, when I look at the current master, the version has been changed correctly.  But most likely mlpack-bot chose to tag the wrong commit---it expects a rebase not a merge.)
		</comment>
		<comment id='2' author='coatless' date='2020-11-04T22:53:59Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I think ensmallen.org also missed out on the update?
Is there a reason for preferring a rebase over a merge?
		</comment>
		<comment id='3' author='coatless' date='2020-11-04T23:46:16Z'>
		It makes it a little easier to figure out which commit should be tagged.  With a merge commit, I have to choose which of the two parents of the merge to look back; with a rebase, I can just take the second-most-recent commit.  I'll look into the website issue.
		</comment>
		<comment id='4' author='coatless' date='2020-11-04T23:50:27Z'>
		Website fixed---I had failed to restart mlpack-bot on the system that runs it after some changes.
		</comment>
		<comment id='5' author='coatless' date='2020-11-05T10:55:56Z'>
		
I believe this is because the release PR might have been merged as a merge, not as a rebase? @zoq do you remember how you did it? (Anyway, when I look at the current master, the version has been changed correctly. But most likely mlpack-bot chose to tag the wrong commit---it expects a rebase not a merge.)

I thought I hit the rebase button, maybe I miss clicked, I guess good thing that we do a follow-up release that includes - &lt;denchmark-link:https://github.com/mlpack/ensmallen/pull/239&gt;#239&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='coatless' date='2020-11-05T13:53:28Z'>
		Yep, just opened &lt;denchmark-link:https://github.com/mlpack/ensmallen/pull/241&gt;#241&lt;/denchmark-link&gt;
 now which will release 2.15.1.  The automation is cool but it is not perfect... yet. 
		</comment>
		<comment id='7' author='coatless' date='2020-11-05T17:20:13Z'>
		Alright, 2.15.1 released and the version looks correct. üëç  I think I should update the mlpack-bot code to be able to handle merges too, but it's a little more tedious.  I'll see if I can find the time at some point.
		</comment>
	</comments>
</bug>