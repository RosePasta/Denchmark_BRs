<bug id='978' author='bingws' open_date='2019-05-21T09:47:34Z' closed_time='2019-05-21T11:27:41Z'>
	<summary>How to not show the "open3D window" ?</summary>
	<description>
I have a program using the open3D interface, but it always pops up the "open3D window" like the following image, how to make it not display. I mainly use the "write_point_cloud('./4.ply', pcd)". Here is my program, how to modify it.
&lt;denchmark-link:https://user-images.githubusercontent.com/10806595/58085969-56321100-7bf0-11e9-9b99-84ffd71a8366.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;import pyrealsense2 as rs
import numpy as np
import cv2
import dlib
import os
from open3d import *


# Configure depth and color streams
pipeline = rs.pipeline()
config = rs.config()
config.enable_stream(rs.stream.depth, 640, 480, rs.format.z16, 30)
config.enable_stream(rs.stream.color, 640, 480, rs.format.bgr8, 30)

# Declare pointcloud object, for calculating pointclouds and texture mappings
pc = rs.pointcloud()

# We want the points object to be persistent so we can display the last cloud when a frame drops
points = rs.points()

# Start streaming
profile = pipeline.start(config)

# Open3D
align_to = rs.stream.color
align = rs.align(align_to)
count = 0


try:
    while count &lt; 20000 :
        count += 1
        # Wait for a coherent pair of frames: depth and color
        frames = pipeline.wait_for_frames()
        
        # Align the depth frame to color frame
        aligned_frames = align.process(frames)
        
        # Get aligned frames
        depth_frame = aligned_frames.get_depth_frame()
        color_frame = aligned_frames.get_color_frame()
        
        # Generate the pointcloud and texture mappings
        points = pc.calculate(depth_frame)
        vertices = np.asanyarray(points.get_vertices(dims=2))
        
        w = depth_frame.get_width()
        image_Points = np.reshape(vertices , (-1,w,3))
        
        if not depth_frame or not color_frame:
            continue
        
        color_image = np.asanyarray(color_frame.get_data())
        
        # Detect face
        frame_new = cv2.cvtColor(color_image, cv2.COLOR_BGR2RGB)
        hogFaceDetector = dlib.get_frontal_face_detector()
        faceRects = hogFaceDetector(frame_new)
        
        for det in faceRects :
            x = det.left()
            y = det.top()
            w = det.right()
            h = det.bottom()
            print(x,w,y,h)
            
            color_image = np.asanyarray(color_frame.get_data())
                  
            
            if len(color_image) &lt;= 0:
                continue
           
            print(x,y,w,h)
            vertices_interest = image_Points[y:h, x:w,:].reshape(-1,3)
            color_interest = color_image[y:h, x:w,:].reshape(-1,3)

            pcd = PointCloud()
            pcd.points = Vector3dVector(vertices_interest)
            pcd.colors = Vector3dVector(color_interest)
            draw_geometries([pcd])
            if write_point_cloud('./4.ply', pcd):
                os._exit(0)
finally:

    # Stop streaming
    pipeline.stop()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bingws' date='2019-05-21T11:25:37Z'>
		Not sure you try to achieve, but  near the end of your code opens the visualization. You can remove that do not open a window.
If you want to change the window title, have a look &lt;denchmark-link:http://www.open3d.org/docs/python_api/open3d.visualization.draw_geometries.html#open3d.visualization.draw_geometries&gt;here&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>