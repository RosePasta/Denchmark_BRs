<bug id='1154' author='ScanStudio3d' open_date='2019-09-03T10:01:43Z' closed_time='2020-08-07T03:45:26Z'>
	<summary>run_system.py crashing in windows10</summary>
	<description>
Using the example provided here : &lt;denchmark-link:http://www.open3d.org/docs/release/tutorial/ReconstructionSystem/capture_your_own_dataset.html&gt;http://www.open3d.org/docs/release/tutorial/ReconstructionSystem/capture_your_own_dataset.html&lt;/denchmark-link&gt;

I'm able to record my dataset without any problem using a D415 but when I run C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\run_system.py config/realsense.json --make --register --refine --integrate I get an error (see below).
I'm using Python 27 // windows 10 and the last Open3d version (installed by Pip).
I'm using PyCharm.
&lt;denchmark-h:h1&gt;Here is the error :
`C:\Python27\python.exe C:/Python27/Open3D-master/examples/Python/ReconstructionSystem/run_system.py config/realsense.json --make --register --refine --integrate&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;Configuration&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;    preference_loop_closure_odometry : 0.1
           template_global_posegraph : scene/global_registration.json
                template_global_mesh : scene/integrated.ply
                          icp_method : color
                        path_dataset : dataset/realsense/
&lt;/denchmark-code&gt;

template_fragment_posegraph_optimized : fragments/fragment_optimized_%03d.json
min_depth : 0.3
template_refined_posegraph : scene/refined_registration.json
tsdf_cubic_size : 3.0
template_fragment_pointcloud : fragments/fragment_%03d.ply
debug_mode : False
folder_scene : scene/
template_global_traj : scene/trajectory.log
template_global_posegraph_optimized : scene/global_registration_optimized.json
max_depth : 3.0
global_registration : ransac
folder_fragment : fragments/
depth_map_type : redwood
python_multi_threading : True
n_keyframes_per_n_frame : 5
template_fragment_posegraph : fragments/fragment_%03d.json
name : Captured frames using Realsense
n_frames_per_fragment : 100
max_depth_diff : 0.07
template_refined_posegraph_optimized : scene/refined_registration_optimized.json
voxel_size : 0.05
path_intrinsic : dataset/realsense/camera_intrinsic.json
preference_loop_closure_registration : 5.0
OpenCV is detected. Using ORB + 5pt algorithm
making fragments from RGBD sequence.
OpenCV is detected. Using ORB + 5pt algorithm
Fragment 000 / 008 :: RGBD matching between frame : 0 and 1
Exception in thread QueueFeederThread:
Traceback (most recent call last):
File "C:\Python27\lib\threading.py", line 801, in __bootstrap_inner
self.run()
File "C:\Python27\lib\threading.py", line 754, in run
self.__target(*self.__args, **self.__kwargs)
File "C:\Python27\lib\site-packages\joblib\externals\loky\backend\queues.py", line 175, in _feed
onerror(e, obj)
File "C:\Python27\lib\site-packages\joblib\externals\loky\process_executor.py", line 310, in _on_queue_feeder_error
self.thread_wakeup.wakeup()
File "C:\Python27\lib\site-packages\joblib\externals\loky\process_executor.py", line 153, in wakeup
self._writer.send_bytes(b"0")
IOError: [Errno 6] The handle is invalid
Traceback (most recent call last):
File "C:/Python27/Open3D-master/examples/Python/ReconstructionSystem/run_system.py", line 68, in 
make_fragments.run(config)
File "C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\make_fragments.py", line 184, in run
for fragment_id in range(n_fragments))
File "C:\Python27\lib\site-packages\joblib\parallel.py", line 934, in call
self.retrieve()
File "C:\Python27\lib\site-packages\joblib\parallel.py", line 862, in retrieve
raise exception.unwrap(this_report)
joblib.my_exceptions.JoblibAttributeError: JoblibAttributeError
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

...........................................................................
C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\run_system.py in ()
63
64     times = [0, 0, 0, 0]
65     if args.make:
66         start_time = time.time()
67         import make_fragments
---&gt; 68         make_fragments.run(config)
69         times[0] = time.time() - start_time
70     if args.register:
71         start_time = time.time()
72         import register_fragments
...........................................................................
C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\make_fragments.py in run(config={'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...})
179         import multiprocessing
180         import subprocess
181         MAX_THREAD = min(multiprocessing.cpu_count(), n_fragments)
182         Parallel(n_jobs=MAX_THREAD)(delayed(process_single_fragment)(
183             fragment_id, color_files, depth_files, n_files, n_fragments, config)
--&gt; 184                                     for fragment_id in range(n_fragments))
fragment_id = undefined
185     else:
186         for fragment_id in range(n_fragments):
187             process_single_fragment(fragment_id, color_files, depth_files,
188                                     n_files, n_fragments, config)
...........................................................................
C:\Python27\lib\site-packages\joblib\parallel.py in call(self=Parallel(n_jobs=8), iterable=&lt;generator object &gt;)
929                 # No need to wait for async callbacks to trigger to
930                 # consumption.
931                 self._iterating = False
932
933             with self._backend.retrieval_context():
--&gt; 934                 self.retrieve()
self.retrieve = &lt;bound method Parallel.retrieve of Parallel(n_jobs=8)&gt;
935             # Make sure that we get a last message telling us we are done
936             elapsed_time = time.time() - self._start_time
937             self._print('Done %3i out of %3i | elapsed: %s finished',
938                         (len(self._output), len(self._output),
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Joblib worker traceback:&lt;/denchmark-h&gt;

AttributeError                                     Tue Sep  3 11:48:53 2019
PID: 4824                             Python 2.7.16: C:\Python27\python.exe
...........................................................................
C:\Python27\lib\site-packages\joblib\parallel.py in call(self=&lt;joblib.parallel.BatchedCalls object&gt;)
220     def call(self):
221         # Set the default nested backend to self._backend but do not set the
222         # change the default number of processes to -1
223         with parallel_backend(self._backend, n_jobs=self._n_jobs):
224             return [func(*args, **kwargs)
--&gt; 225                     for func, args, kwargs in self.items]
func = 
args = (0, [u'dataset/realsense/color/000000.jpg', u'dataset/realsense/color/000001.jpg', u'dataset/realsense/color/000002.jpg', u'dataset/realsense/color/000003.jpg', u'dataset/realsense/color/000004.jpg', u'dataset/realsense/color/000005.jpg', u'dataset/realsense/color/000006.jpg', u'dataset/realsense/color/000007.jpg', u'dataset/realsense/color/000008.jpg', u'dataset/realsense/color/000009.jpg', u'dataset/realsense/color/000010.jpg', u'dataset/realsense/color/000011.jpg', u'dataset/realsense/color/000012.jpg', u'dataset/realsense/color/000013.jpg', u'dataset/realsense/color/000014.jpg', u'dataset/realsense/color/000015.jpg', u'dataset/realsense/color/000016.jpg', u'dataset/realsense/color/000017.jpg', u'dataset/realsense/color/000018.jpg', u'dataset/realsense/color/000019.jpg', ...], [u'dataset/realsense/depth/000000.png', u'dataset/realsense/depth/000001.png', u'dataset/realsense/depth/000002.png', u'dataset/realsense/depth/000003.png', u'dataset/realsense/depth/000004.png', u'dataset/realsense/depth/000005.png', u'dataset/realsense/depth/000006.png', u'dataset/realsense/depth/000007.png', u'dataset/realsense/depth/000008.png', u'dataset/realsense/depth/000009.png', u'dataset/realsense/depth/000010.png', u'dataset/realsense/depth/000011.png', u'dataset/realsense/depth/000012.png', u'dataset/realsense/depth/000013.png', u'dataset/realsense/depth/000014.png', u'dataset/realsense/depth/000015.png', u'dataset/realsense/depth/000016.png', u'dataset/realsense/depth/000017.png', u'dataset/realsense/depth/000018.png', u'dataset/realsense/depth/000019.png', ...], 829, 9, {'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...})
kwargs = {}
self.items = [(, (0, [u'dataset/realsense/color/000000.jpg', u'dataset/realsense/color/000001.jpg', u'dataset/realsense/color/000002.jpg', u'dataset/realsense/color/000003.jpg', u'dataset/realsense/color/000004.jpg', u'dataset/realsense/color/000005.jpg', u'dataset/realsense/color/000006.jpg', u'dataset/realsense/color/000007.jpg', u'dataset/realsense/color/000008.jpg', u'dataset/realsense/color/000009.jpg', u'dataset/realsense/color/000010.jpg', u'dataset/realsense/color/000011.jpg', u'dataset/realsense/color/000012.jpg', u'dataset/realsense/color/000013.jpg', u'dataset/realsense/color/000014.jpg', u'dataset/realsense/color/000015.jpg', u'dataset/realsense/color/000016.jpg', u'dataset/realsense/color/000017.jpg', u'dataset/realsense/color/000018.jpg', u'dataset/realsense/color/000019.jpg', ...], [u'dataset/realsense/depth/000000.png', u'dataset/realsense/depth/000001.png', u'dataset/realsense/depth/000002.png', u'dataset/realsense/depth/000003.png', u'dataset/realsense/depth/000004.png', u'dataset/realsense/depth/000005.png', u'dataset/realsense/depth/000006.png', u'dataset/realsense/depth/000007.png', u'dataset/realsense/depth/000008.png', u'dataset/realsense/depth/000009.png', u'dataset/realsense/depth/000010.png', u'dataset/realsense/depth/000011.png', u'dataset/realsense/depth/000012.png', u'dataset/realsense/depth/000013.png', u'dataset/realsense/depth/000014.png', u'dataset/realsense/depth/000015.png', u'dataset/realsense/depth/000016.png', u'dataset/realsense/depth/000017.png', u'dataset/realsense/depth/000018.png', u'dataset/realsense/depth/000019.png', ...], 829, 9, {'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...}), {})]
226
227     def len(self):
228         return self._size
229
...........................................................................
C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\make_fragments.py in process_single_fragment(fragment_id=0, color_files=[u'dataset/realsense/color/000000.jpg', u'dataset/realsense/color/000001.jpg', u'dataset/realsense/color/000002.jpg', u'dataset/realsense/color/000003.jpg', u'dataset/realsense/color/000004.jpg', u'dataset/realsense/color/000005.jpg', u'dataset/realsense/color/000006.jpg', u'dataset/realsense/color/000007.jpg', u'dataset/realsense/color/000008.jpg', u'dataset/realsense/color/000009.jpg', u'dataset/realsense/color/000010.jpg', u'dataset/realsense/color/000011.jpg', u'dataset/realsense/color/000012.jpg', u'dataset/realsense/color/000013.jpg', u'dataset/realsense/color/000014.jpg', u'dataset/realsense/color/000015.jpg', u'dataset/realsense/color/000016.jpg', u'dataset/realsense/color/000017.jpg', u'dataset/realsense/color/000018.jpg', u'dataset/realsense/color/000019.jpg', ...], depth_files=[u'dataset/realsense/depth/000000.png', u'dataset/realsense/depth/000001.png', u'dataset/realsense/depth/000002.png', u'dataset/realsense/depth/000003.png', u'dataset/realsense/depth/000004.png', u'dataset/realsense/depth/000005.png', u'dataset/realsense/depth/000006.png', u'dataset/realsense/depth/000007.png', u'dataset/realsense/depth/000008.png', u'dataset/realsense/depth/000009.png', u'dataset/realsense/depth/000010.png', u'dataset/realsense/depth/000011.png', u'dataset/realsense/depth/000012.png', u'dataset/realsense/depth/000013.png', u'dataset/realsense/depth/000014.png', u'dataset/realsense/depth/000015.png', u'dataset/realsense/depth/000016.png', u'dataset/realsense/depth/000017.png', u'dataset/realsense/depth/000018.png', u'dataset/realsense/depth/000019.png', ...], n_files=829, n_fragments=9, config={'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...})
157     sid = fragment_id * config['n_frames_per_fragment']
158     eid = min(sid + config['n_frames_per_fragment'], n_files)
159
160     make_posegraph_for_fragment(config["path_dataset"], sid, eid, color_files,
161                                 depth_files, fragment_id, n_fragments,
--&gt; 162                                 intrinsic, with_opencv, config)
intrinsic = camera::PinholeCameraIntrinsic with width = 640 ...t = 480.
Access intrinsics with intrinsic_matrix.
config = {'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...}
163     optimize_posegraph_for_fragment(config["path_dataset"], fragment_id, config)
164     make_pointcloud_for_fragment(config["path_dataset"], color_files,
165                                  depth_files, fragment_id, n_fragments,
166                                  intrinsic, config)
...........................................................................
C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\make_fragments.py in make_posegraph_for_fragment(path_dataset=u'dataset/realsense/', sid=0, eid=100, color_files=[u'dataset/realsense/color/000000.jpg', u'dataset/realsense/color/000001.jpg', u'dataset/realsense/color/000002.jpg', u'dataset/realsense/color/000003.jpg', u'dataset/realsense/color/000004.jpg', u'dataset/realsense/color/000005.jpg', u'dataset/realsense/color/000006.jpg', u'dataset/realsense/color/000007.jpg', u'dataset/realsense/color/000008.jpg', u'dataset/realsense/color/000009.jpg', u'dataset/realsense/color/000010.jpg', u'dataset/realsense/color/000011.jpg', u'dataset/realsense/color/000012.jpg', u'dataset/realsense/color/000013.jpg', u'dataset/realsense/color/000014.jpg', u'dataset/realsense/color/000015.jpg', u'dataset/realsense/color/000016.jpg', u'dataset/realsense/color/000017.jpg', u'dataset/realsense/color/000018.jpg', u'dataset/realsense/color/000019.jpg', ...], depth_files=[u'dataset/realsense/depth/000000.png', u'dataset/realsense/depth/000001.png', u'dataset/realsense/depth/000002.png', u'dataset/realsense/depth/000003.png', u'dataset/realsense/depth/000004.png', u'dataset/realsense/depth/000005.png', u'dataset/realsense/depth/000006.png', u'dataset/realsense/depth/000007.png', u'dataset/realsense/depth/000008.png', u'dataset/realsense/depth/000009.png', u'dataset/realsense/depth/000010.png', u'dataset/realsense/depth/000011.png', u'dataset/realsense/depth/000012.png', u'dataset/realsense/depth/000013.png', u'dataset/realsense/depth/000014.png', u'dataset/realsense/depth/000015.png', u'dataset/realsense/depth/000016.png', u'dataset/realsense/depth/000017.png', u'dataset/realsense/depth/000018.png', u'dataset/realsense/depth/000019.png', ...], fragment_id=0, n_fragments=9, intrinsic=camera::PinholeCameraIntrinsic with width = 640 ...t = 480.
Access intrinsics with intrinsic_matrix., with_opencv=True, config={'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...})
74                 print(
75                     "Fragment %03d / %03d :: RGBD matching between frame : %d and %d"
76                     % (fragment_id, n_fragments - 1, s, t))
77                 [success, trans,
78                  info] = register_one_rgbd_pair(s, t, color_files, depth_files,
---&gt; 79                                                 intrinsic, with_opencv, config)
intrinsic = camera::PinholeCameraIntrinsic with width = 640 ...t = 480.
Access intrinsics with intrinsic_matrix.
with_opencv = True
config = {'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...}
80                 trans_odometry = np.dot(trans, trans_odometry)
81                 trans_odometry_inv = np.linalg.inv(trans_odometry)
82                 pose_graph.nodes.append(
83                     o3d.registration.PoseGraphNode(trans_odometry_inv))
...........................................................................
C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\make_fragments.py in register_one_rgbd_pair(s=0, t=1, color_files=[u'dataset/realsense/color/000000.jpg', u'dataset/realsense/color/000001.jpg', u'dataset/realsense/color/000002.jpg', u'dataset/realsense/color/000003.jpg', u'dataset/realsense/color/000004.jpg', u'dataset/realsense/color/000005.jpg', u'dataset/realsense/color/000006.jpg', u'dataset/realsense/color/000007.jpg', u'dataset/realsense/color/000008.jpg', u'dataset/realsense/color/000009.jpg', u'dataset/realsense/color/000010.jpg', u'dataset/realsense/color/000011.jpg', u'dataset/realsense/color/000012.jpg', u'dataset/realsense/color/000013.jpg', u'dataset/realsense/color/000014.jpg', u'dataset/realsense/color/000015.jpg', u'dataset/realsense/color/000016.jpg', u'dataset/realsense/color/000017.jpg', u'dataset/realsense/color/000018.jpg', u'dataset/realsense/color/000019.jpg', ...], depth_files=[u'dataset/realsense/depth/000000.png', u'dataset/realsense/depth/000001.png', u'dataset/realsense/depth/000002.png', u'dataset/realsense/depth/000003.png', u'dataset/realsense/depth/000004.png', u'dataset/realsense/depth/000005.png', u'dataset/realsense/depth/000006.png', u'dataset/realsense/depth/000007.png', u'dataset/realsense/depth/000008.png', u'dataset/realsense/depth/000009.png', u'dataset/realsense/depth/000010.png', u'dataset/realsense/depth/000011.png', u'dataset/realsense/depth/000012.png', u'dataset/realsense/depth/000013.png', u'dataset/realsense/depth/000014.png', u'dataset/realsense/depth/000015.png', u'dataset/realsense/depth/000016.png', u'dataset/realsense/depth/000017.png', u'dataset/realsense/depth/000018.png', u'dataset/realsense/depth/000019.png', ...], intrinsic=camera::PinholeCameraIntrinsic with width = 640 ...t = 480.
Access intrinsics with intrinsic_matrix., with_opencv=True, config={'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...})
33
34
35 def register_one_rgbd_pair(s, t, color_files, depth_files, intrinsic,
36                            with_opencv, config):
37     source_rgbd_image = read_rgbd_image(color_files[s], depth_files[s], True,
---&gt; 38                                         config)
config = {'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...}
39     target_rgbd_image = read_rgbd_image(color_files[t], depth_files[t], True,
40                                         config)
41
42     option = o3d.odometry.OdometryOption()
...........................................................................
C:\Python27\Open3D-master\examples\Python\ReconstructionSystem\make_fragments.py in read_rgbd_image(color_file=u'dataset/realsense/color/000000.jpg', depth_file=u'dataset/realsense/depth/000000.png', convert_rgb_to_intensity=True, config={'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...})
22
23 def read_rgbd_image(color_file, depth_file, convert_rgb_to_intensity, config):
24     color = o3d.io.read_image(color_file)
25     depth = o3d.io.read_image(depth_file)
26     if config["depth_map_type"] == "redwood":
---&gt; 27         rgbd_image = o3d.geometry.RGBDImage.create_from_color_and_depth(
rgbd_image = undefined
color = Image of size 640x480, with 3 channels.
Use numpy.asarray to access buffer data.
depth = Image of size 640x480, with 1 channels.
Use numpy.asarray to access buffer data.
config = {'debug_mode': False, 'depth_map_type': 'redwood', 'folder_fragment': 'fragments/', 'folder_scene': 'scene/', u'global_registration': u'ransac', u'icp_method': u'color', u'max_depth': 3.0, u'max_depth_diff': 0.07, 'min_depth': 0.3, 'n_frames_per_fragment': 100, ...}
convert_rgb_to_intensity = True
28             color,
29             depth,
30             depth_trunc=config["max_depth"],
31             convert_rgb_to_intensity=convert_rgb_to_intensity)
AttributeError: type object 'open3d.open3d.geometry.RGBDImage' has no attribute 'create_from_color_and_depth'
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Process finished with exit code 1`
thanks !
	</description>
	<comments>
		<comment id='1' author='ScanStudio3d' date='2019-10-05T17:30:09Z'>
		I am not sure where the error comes from. Based on back-tracking,
&lt;denchmark-code&gt;rgbd_image = o3d.geometry.RGBDImage.create_from_color_and_depth
&lt;/denchmark-code&gt;

occurs the run-time issue. Could you check the requested image paths are existing?
		</comment>
		<comment id='2' author='ScanStudio3d' date='2020-08-07T03:45:26Z'>
		Issue closed due to lack of activity. Feel free to open a new issue if you still consider this is a critical matter.
		</comment>
	</comments>
</bug>