<bug id='880' author='mike239x' open_date='2019-03-26T23:06:56Z' closed_time='2019-06-13T07:29:59Z'>
	<summary>EstimateNormals not working for flat patches</summary>
	<description>
It appears the EstimateNormals function does not work properly for completely flat patches, also somehow depending on the orientation.
To reproduce:
import numpy as np
import open3d

X,Y = np.mgrid[0:1:0.1,0:1:0.1]
X = X.flatten()
Y = Y.flatten()

pts = np.zeros((3, X.size))
pts[0] = X
pts[1] = Y

shape  = open3d.PointCloud()
shape.points = open3d.Vector3dVector(pts.T)
shape.paint_uniform_color([0, 0.651, 0.929]) # blue

open3d.estimate_normals(shape, open3d.KDTreeSearchParamHybrid(radius = 0.5, max_nn = 30))

# show the shape
open3d.draw_geometries([shape])
If you write
pts[1] = X
pts[2] = Y
instead - it works as expected; if you use 0 and 1 or 0 and 2 as indices - it no longer works.
Expected:
&lt;denchmark-link:https://user-images.githubusercontent.com/8998317/55039032-f4578f80-5022-11e9-8aef-d9322402f6b8.png&gt;&lt;/denchmark-link&gt;

Got:
&lt;denchmark-link:https://user-images.githubusercontent.com/8998317/55039065-0cc7aa00-5023-11e9-9c88-b7d085588528.png&gt;&lt;/denchmark-link&gt;

Environment (please complete the following information):

OS: Ubuntu 18.04
Python version: 3.6.7
Open3D version: 0.5 release (also tested on the commit 6f493ef)
Is this remote workstation?: no
How did you install Open3D?: pip for the release; build myself the newer version

	</description>
	<comments>
		<comment id='1' author='mike239x' date='2019-03-26T23:18:03Z'>
		Good catch. Looks like a numerical issue of this function:
&lt;denchmark-link:https://github.com/IntelVCL/Open3D/blob/377fc7d6a47ea47681c25a1e07a5383d62a612aa/src/Open3D/Geometry/EstimateNormals.cpp#L40&gt;https://github.com/IntelVCL/Open3D/blob/377fc7d6a47ea47681c25a1e07a5383d62a612aa/src/Open3D/Geometry/EstimateNormals.cpp#L40&lt;/denchmark-link&gt;

I will dig into it when I got time.
		</comment>
		<comment id='2' author='mike239x' date='2019-03-27T10:08:06Z'>
		Fun fact: adding minimal noise to the points fixes the problem.
		</comment>
		<comment id='3' author='mike239x' date='2019-06-13T07:29:59Z'>
		Fixed in &lt;denchmark-link:https://github.com/intel-isl/Open3D/pull/1011&gt;#1011&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>