<bug id='1188' author='victorjoos' open_date='2019-09-17T13:12:24Z' closed_time='2020-02-27T15:30:34Z'>
	<summary>Pointcloud visualization with nan values</summary>
	<description>
Describe the bug
Trying to visualize a pointcloud containing NaN values (with no additional geometries) doesn't show anything. When removing the NaN values or adding other geometries (e.g. a LineSet), there's no problems.
To Reproduce
Code to reproduce the behavior:
import open3d
import numpy as np
points = np.array([[1,0,0],[0,1,0],[0,0,1], [np.nan, np.nan, np.nan]])
opcd = open3d.geometry.PointCloud()
opcd.points = open3d.utility.Vector3dVector(points)
open3d.visualization.draw_geometries([opcd])
Expected behavior
Three points in space. Instead the canvas is completely blank, and even trying to move around doesn't show anything.
Environment (please complete the following information):

OS: Ubuntu 18.04
Python version:
Open3D version: 0.8.0.0
Is this remote workstation?: no
How did you install Open3D?: pip

	</description>
	<comments>
		<comment id='1' author='victorjoos' date='2020-02-27T13:12:02Z'>
		The geometry is not defined with nan values. The visualizer assumes the coordinate is finite. &lt;denchmark-link:https://github.com/victorjoos&gt;@victorjoos&lt;/denchmark-link&gt;
 do you have a common use case for this? How about filtering such nan values before using visualizer instead of expecting visualizer softly ignores them?
		</comment>
		<comment id='2' author='victorjoos' date='2020-02-27T15:28:11Z'>
		Thanks for your response. My use-case is ToF data, which has nan values because of its 2D structure, and you're absolutely right I could just filter nan values.
However what seemed weird to me if that I only get this error if the pointcloud is the only geometry I try to visualize, otherwise the visualizer seems to do filtering itself.
		</comment>
		<comment id='3' author='victorjoos' date='2020-03-24T17:38:35Z'>
		I too have this issue. Getting a warning rather than nothing would have been appreciated.
I am using a commercial structured light 3D scanner which returns a 1200x1920x3   array (I.e. xyz values for each pixel coordinate). Hence it makes sense to have in the array.
		</comment>
	</comments>
</bug>