<bug id='1225' author='realjc' open_date='2019-10-08T09:15:54Z' closed_time='2019-10-10T02:24:33Z'>
	<summary>the "o3d.geometry.PointCloud.create_from_depth_image" function's param "depth_scale" not work?</summary>
	<description>
IMPORTANT: Please use the following template to report the bug.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Describe the bug
i use this function to trans a depth image to pointclouds, and i set the depth_scale= 1000,but i got the pointcloud whose scale is mm not m,and i change the depth_scale = 10000,i got the same out put ,what's wrong?
To Reproduce
Steps to reproduce the behavior:
here are some of my code :
        source_depth_image = o3d.geometry.Image(self.depth_image_array[source_id])
       source_pcd = o3d.geometry.PointCloud.create_from_depth_image(source_depth_image, self.intrinsic,depth_scale=1000.0, depth_trunc=1000.0, stride=1)
i got the mean of source_pcd by:
print np.asarray(source_pcd.points).mean(axis=0) 
the output is :
array([-15.03491085, 124.80328023, 694.21251241])
it seems like that its scale is still mmã€‚i am confused
Expected behavior
when i change the depth_scale, the output should change too.
Screenshots
If applicable, add screenshots to help explain your problem.
Environment (please complete the following information):

OS: Ubuntu 16.04
Python version: 2.7
Open3D version:0.8.0.0
Is this remote workstation?:no
How did you install Open3D?: pip

	</description>
	<comments>
		<comment id='1' author='realjc' date='2019-10-10T02:02:45Z'>
		I cannot reproduce the issue (using open3d 0.9)
&lt;denchmark-h:h3&gt;input (with depth_scale=1000)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import open3d as o3d
import matplotlib.pyplot as plt
import numpy as np

if __name__ == "__main__":
    print("Read Redwood dataset")
    depth_raw = o3d.io.read_image("../../TestData/RGBD/depth/00000.png")
    pcd = o3d.geometry.PointCloud.create_from_depth_image(depth_raw, 
            o3d.camera.PinholeCameraIntrinsic(
            o3d.camera.PinholeCameraIntrinsicParameters.PrimeSenseDefault)
            ,
            np.identity(4),
            depth_scale=1000.0, depth_trunc=1000.0)
    pcd.transform([[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]])
    print(np.asarray(pcd.points)[1,:])
    o3d.visualization.draw_geometries([pcd])
&lt;/denchmark-code&gt;

output
&lt;denchmark-code&gt;[-0.36311428  0.77907617 -1.78999996]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;input (with depth_scale=10000)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import open3d as o3d
import matplotlib.pyplot as plt
import numpy as np

if __name__ == "__main__":
    print("Read Redwood dataset")
    depth_raw = o3d.io.read_image("../../TestData/RGBD/depth/00000.png")
    pcd = o3d.geometry.PointCloud.create_from_depth_image(depth_raw, 
            o3d.camera.PinholeCameraIntrinsic(
            o3d.camera.PinholeCameraIntrinsicParameters.PrimeSenseDefault)
            ,
            np.identity(4),
            depth_scale=10000.0, depth_trunc=10000.0)
    pcd.transform([[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]])
    print(np.asarray(pcd.points)[1,:])
    o3d.visualization.draw_geometries([pcd])
&lt;/denchmark-code&gt;

output
&lt;denchmark-code&gt;[-0.03631143  0.07790762 -0.17900001]
&lt;/denchmark-code&gt;

Please use &lt;denchmark-link:https://github.com/intel-isl/Open3D/issues/new/choose&gt;one of the template&lt;/denchmark-link&gt;
 for the question.
		</comment>
		<comment id='2' author='realjc' date='2019-10-10T02:24:29Z'>
		thanks for your reply, i will upgrade my open3d, and have a try. and sorry for not use the template,i will revise it
		</comment>
	</comments>
</bug>