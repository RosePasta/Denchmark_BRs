<bug id='1422' author='Prakash19921206' open_date='2019-12-31T13:29:23Z' closed_time='2020-12-09T23:29:15Z'>
	<summary>Azure Kinect Examples do not work</summary>
	<description>

Python Examples do not execute. I have copied to C:/Program Files/
&lt;denchmark-link:https://github.com/microsoft/Azure-Kinect-Samples&gt;Microsoft Azure Kinect Examples &lt;/denchmark-link&gt;
work
To Reproduce
Steps to reproduce the behavior:

clone the repository [open3d 0.9]
go to Open3d/examples/Python/ReconstructionSystem/sensors
py azure_kinect_mkv_reader.py --input "C:/Program Files/Azure Kinect SDK v1.2.0/tools/720.mkv"

Expected behavior
play the video/ record video/open kinect viewer
Environment (please complete the following information):

OS: Windows 10 64bit
Python version: 3.6.3
Open3D version: 0.9
Is this remote workstation?:  no
How did you install Open3D?: pip3

Additional context
output for azure_kinect_mkv_reader.py 

No output path, only play mkv
Traceback (most recent call last):
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_mkv_reader.py", line 125, in 
reader = ReaderWithCallback(args.input, args.output)
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_mkv_reader.py", line 21, in init
self.reader.open(self.input)
RuntimeError: [Open3D ERROR] Cannot load k4arecord.dll
Process finished with exit code 1

output for azure_kinect_viewer.py 

[Open3D INFO] AzureKinectSensor::Connect
[Open3D INFO] sensor_index 0
[Open3D INFO] Serial number: 001075192912
[Open3D INFO] Firmware build: Rel
[Open3D INFO] &gt; Color: 1.6.98
[Open3D INFO] &gt; Depth: 1.6.70[6109.7]
Sensor initialized. Press [ESC] to exit.
Traceback (most recent call last):
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_viewer.py", line 72, in 
v.run()
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_viewer.py", line 36, in run
vis.update_geometry()
TypeError: update_geometry(): incompatible function arguments. The following argument types are supported:
1. (self: open3d.open3d.visualization.Visualizer, arg0: open3d.open3d.geometry.Geometry) -&gt; bool
Invoked with: VisualizerWithKeyCallback with name viewer

output for azure_kinect_recorder.py

Prepare writing to 2019-12-31-18-54-38.mkv
[Open3D INFO] AzureKinectSensor::Connect
[Open3D INFO] sensor_index 0
[Open3D INFO] Serial number: 001075192912
[Open3D INFO] Firmware build: Rel
[Open3D INFO] &gt; Color: 1.6.98
[Open3D INFO] &gt; Depth: 1.6.70[6109.7]
Recorder initialized. Press [SPACE] to start. Press [ESC] to save and exit.
Traceback (most recent call last):
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_recorder.py", line 118, in 
r.run()
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_recorder.py", line 71, in run
vis.update_geometry()
TypeError: update_geometry(): incompatible function arguments. The following argument types are supported:
1. (self: open3d.open3d.visualization.Visualizer, arg0: open3d.open3d.geometry.Geometry) -&gt; bool
Invoked with: VisualizerWithKeyCallback with name recorder
Process finished with exit code 1

Is there prebuilt c++ open3d libraries? or for now we have to build from source?
Thanks &amp; Regards
Prakash
	</description>
	<comments>
		<comment id='1' author='Prakash19921206' date='2019-12-31T15:20:04Z'>
		This specific problem is due to an update of the API.
A quick fix is to change &lt;denchmark-link:https://github.com/intel-isl/Open3D/blob/master/examples/Python/ReconstructionSystem/sensors/azure_kinect_mkv_reader.py#L88&gt;this line&lt;/denchmark-link&gt;
 to 
		</comment>
		<comment id='2' author='Prakash19921206' date='2020-01-01T08:58:51Z'>
		Ok Thanks
After replacing with vis.update_geometry(rgbd)
azure_kinect_viewer.py  and azure_kinect_recorder.py examples worked.
but azure_kinect_mkv_reader.py is still not working below is the output

No output path, only play mkv
Traceback (most recent call last):
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_mkv_reader.py", line 125, in 
reader = ReaderWithCallback(args.input, args.output)
File "D:/Git_Projects/Open3D/examples/Python/ReconstructionSystem/sensors/azure_kinect_mkv_reader.py", line 21, in init
self.reader.open(self.input)
RuntimeError: [Open3D ERROR] Cannot load k4arecord.dll

i have installed azure kinect SDK 1.2 and 1.3 in C:/Program Files/
also i have added dll files folder path in Environment Variable Path
: I noticed same error mentioned &lt;denchmark-link:https://github.com/intel-isl/Open3D/issues/1240&gt;here&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/intel-isl/Open3D/issues/1314&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Prakash19921206' date='2020-06-05T10:27:51Z'>
		I use Open3D 0.10.0, Windows 10 and Azure Kinect SDK v1.2.0. I had the same error but after uninstall and reinstall the Azure Kinect SDK v1.2.0 and add the path C:\Program Files\Azure Kinect SDK v1.2.0\sdk\windows-desktop\amd64\release\bin to PATH in the environment variables and added the K4A_LIB_DIR = C:\Program Files\Azure Kinect SDK v1.2.0\sdk\windows-desktop\amd64\release\bin to the system variables it works perfectly for me
&lt;denchmark-link:https://user-images.githubusercontent.com/56630682/83866325-f4274980-a727-11ea-8079-74770634f84d.png&gt;&lt;/denchmark-link&gt;

.
		</comment>
		<comment id='4' author='Prakash19921206' date='2020-12-09T23:29:12Z'>
		On Windows, the Open3D Kinect plugin will look for the Kinect K4A library located in the default installation paths:



Open3D/cpp/open3d/io/sensor/azure_kinect/K4aPlugin.cpp


        Lines 76 to 79
      in
      3c6e664






 "C:\\Program Files\\Azure Kinect SDK v1.4.1\\sdk\\windows-desktop\\amd64\\release\\bin", 



 "C:\\Program Files\\Azure Kinect SDK v1.4.0\\sdk\\windows-desktop\\amd64\\release\\bin", 



 "C:\\Program Files\\Azure Kinect SDK v1.3.0\\sdk\\windows-desktop\\amd64\\release\\bin", 



 "C:\\Program Files\\Azure Kinect SDK v1.2.0\\sdk\\windows-desktop\\amd64\\release\\bin" 





Currently, it supports 1.2.0 to 1.4.1. If the K4A library is not in the default location, you'll need to set the K4A_LIB_DIR environment variable to point to the directory containing the K4A's *.dll files.
		</comment>
	</comments>
</bug>