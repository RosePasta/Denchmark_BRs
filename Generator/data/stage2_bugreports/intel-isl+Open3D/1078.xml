<bug id='1078' author='PieroV' open_date='2019-07-18T22:35:48Z' closed_time='2019-07-19T15:02:29Z'>
	<summary>UniformTSDFVolume::Reset does not clear voxels</summary>
	<description>
Describe the bug
Calling UniformTSDFVolume::Reset won't actually reset the volume
To Reproduce

Create a UniformTSDFVolume and integrate some frames
Call volume.Reset();
Visualize somehow the volume, e.g. open3d::visualization::DrawGeometries({ volume.ExtractPointCloud() });

Expected behavior
I expect the volume to be empty.
In the previous example, I would expect an empty visualization window, but I still see the content up to the frames I integrated.
Environment (please complete the following information):

OS: Debian Testing (11/Bullseye)
Python version: 3.7.3 (but tested in C++)
Open3D version: last git commit
Is this remote workstation?: no
How did you install Open3D? build_from_source (GCC (Debian 8.3.0-6) 8.3.0)

Additional context
I think that overriding the Clear method also in TSDFVoxel (in src/Open3D/Integration/UniformTSDFVolume.h) would solve this. The problem is that the voxels_ member is redefined, so the Clear of Voxel just clears its own voxels, but not the ones of the child class.
As a temporary solution I managed to solve the problem by calling volume.voxel_grid_.voxels_.clear(); before volume.Reset();.
	</description>
	<comments>
		<comment id='1' author='PieroV' date='2019-07-19T10:38:48Z'>
		Thanks &lt;denchmark-link:https://github.com/PieroV&gt;@PieroV&lt;/denchmark-link&gt;
, fixed in &lt;denchmark-link:https://github.com/intel-isl/Open3D/pull/1079&gt;#1079&lt;/denchmark-link&gt;
. This is a design flaw.
		</comment>
	</comments>
</bug>