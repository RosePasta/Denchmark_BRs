<bug id='1179' author='kongsgard' open_date='2019-09-14T08:27:04Z' closed_time='2019-09-19T08:48:58Z'>
	<summary>HalfEdgeTriangleMesh errors</summary>
	<description>
Describe the bug

The example in examples/Python/Basic/half_edge_mesh.py does not work.
Converting the Stanford bunny given in examples/TestData/Bunny.ply from a TriangleMesh to a HalfEdgeTriangleMesh gives a segmentation fault.

To Reproduce

python half_edge_mesh.py


&lt;denchmark-code&gt;mesh = o3d.io.read_triangle_mesh("Bunny.ply")
half_edge_mesh = o3d.geometry.HalfEdgeTriangleMesh.create_from_mesh(mesh)
&lt;/denchmark-code&gt;

Expected behavior

Find the single boundary, and display it in the visualizer.
Convert the TriangleMesh to a HalfEdgeTriangleMesh, which could be used for further processing such as e.g. boundary detection.

Screenshots
N/A
Environment (please complete the following information):

OS: OSX Mojave
Python version: 3.6.9
Open3D version: 0.8.0
Is this remote workstation?: no
How did you install Open3D?: conda

Additional context

I get the expected behavior if I change the name of the HalfEdgeTriangleMesh variable:

&lt;denchmark-code&gt;if __name__ == "__main__":
    mesh = o3d.io.read_triangle_mesh("../../TestData/sphere.ply")
    mesh = mesh.crop([-1, -1, -1], [1, 0.6, 1])
    half_edge_mesh = o3d.geometry.HalfEdgeTriangleMesh.create_from_mesh(mesh)
    mesh.compute_vertex_normals()
    num_vertices = len(mesh.vertices)
    draw_geometries_with_back_face([mesh])

    # Find a boundary vertex
    boundaries = half_edge_mesh.get_boundaries()
    assert len(boundaries) == 1
    boundary_vertices = boundaries[0]

    # Colorize boundary vertices
    vertex_colors = 0.75 * np.ones((num_vertices, 3))
    vertex_colors[boundary_vertices, :] = np.array([1, 0, 0])
    mesh.vertex_colors = o3d.utility.Vector3dVector(vertex_colors)
    draw_geometries_with_back_face([mesh])
&lt;/denchmark-code&gt;


If I add the same mesh cropping in the example above (although it doesn't seem to affect the mesh since the cropping is outside its boundaries), the conversion is successful. I can then also find the five holes in the mesh:

&lt;denchmark-code&gt;mesh = o3d.io.read_triangle_mesh('Bunny.ply')
mesh = mesh.crop([-1, -1, -1], [1, 0.6, 1])
half_edge_mesh = o3d.geometry.HalfEdgeTriangleMesh.create_from_mesh(mesh)
boundaries = half_edge_mesh.get_boundaries()
assert len(boundaries) == 5
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kongsgard' date='2019-09-16T12:05:27Z'>
		The HalfEdgeTriangleMesh is unfortunately in a dis-functioning state at the moment. We will fix this asap.
		</comment>
		<comment id='2' author='kongsgard' date='2019-09-19T08:48:58Z'>
		Fixed in &lt;denchmark-link:https://github.com/intel-isl/Open3D/pull/1184&gt;#1184&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>