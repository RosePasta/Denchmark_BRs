<bug id='221' author='alecjacobson' open_date='2018-03-03T17:56:20Z' closed_time='2018-04-09T19:31:46Z'>
	<summary>Compilation error on Mac OS X: libpng not found</summary>
	<description>
I followed the command line build instructions, but get this error:
&lt;denchmark-code&gt;[ 72%] Linking CXX executable ../bin/ManuallyCropPointCloud
cd /Users/ajx/Dropbox/Open3D/build/Tools &amp;&amp; /usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/ManuallyCropPointCloud.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++   -std=c++11 -fvisibility=hidden -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names  CMakeFiles/ManuallyCropPointCloud.dir/ManuallyCropPointCloud.cpp.o  -o ../bin/ManuallyCropPointCloud  -L/usr/local/Cellar/jsoncpp/1.8.4/lib -Wl,-rpath,/usr/local/Cellar/jsoncpp/1.8.4/lib ../lib/libVisualization.a ../lib/libIO.a ../lib/libCore.a ../lib/libIO.a ../lib/libCore.a ../lib/libtinyfiledialogs.a ../lib/libjpeg.a -lpng16 -lz -ljsoncpp ../lib/libglfw3.a -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo /usr/local/lib/libGLEW.dylib 
ld: library not found for -lpng16
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[2]: *** [bin/ManuallyCropPointCloud] Error 1
make[1]: *** [Tools/CMakeFiles/ManuallyCropPointCloud.dir/all] Error 2
make: *** [all] Error 2
&lt;/denchmark-code&gt;

I checked that I do have libpng installed: e.g., /usr/local/lib/libpng16.a. So it seems that the linker is just not finding this. If I add -L/usr/local/lib to this command it works.
	</description>
	<comments>
		<comment id='1' author='alecjacobson' date='2018-03-03T18:06:13Z'>
		This seems to be an issue with the cmake setup when png is installed at the system level.
A hacky fix for now was to add the line:
&lt;denchmark-code&gt;link_directories("/usr/local/lib")
&lt;/denchmark-code&gt;

to src/CMakeLists.txt. This allowed me to build everything.
		</comment>
		<comment id='2' author='alecjacobson' date='2018-03-04T06:20:19Z'>
		Related to &lt;denchmark-link:https://github.com/intel-isl/Open3D/issues/34&gt;#34&lt;/denchmark-link&gt;
, but I could not reproduce the problem. I used cmake 3.6.1, MacOSX 10.12.6. I have /usr/local/lib/libpng16.a.
My cmake log about libpng is
&lt;denchmark-code&gt;-- Checking for one of the modules 'libpng&gt;=1.6.0'
-- Use native build of libpng
&lt;/denchmark-code&gt;

Edit:
Seems like cmake3.10.2 confused and did not check /usr/local/lib
		</comment>
		<comment id='3' author='alecjacobson' date='2018-03-13T05:34:18Z'>
		I had revisited again. I had tested with cmake 3.10.2 with MacOSX 10.12.6. However, there is still no linking error to me. Does cmake said Use native build of libpng or Build libpng from source?
I think possible reasons are:

cmake found naive build of libpng at system level, but cannot link it (I think this is less likely)
There is a custom libpng and custom environment variable was set. Cmake confuses native libpng location.
libpng is build from source for some reason but not linked  correctly by cmake.

We would like to hear more information for this issue. Can you open build/CmakeCashe.txt and what  PNG_LIBDIR says before applying your fix?
If libpng is build from source (using cmake -DOpen3D_USE_NATIVE_DEPENDENCY_BUILD=OFF ../src), there might be libpng_BINARY_DIR in cmake cashe.
		</comment>
		<comment id='4' author='alecjacobson' date='2018-04-06T07:54:05Z'>
		Dear &lt;denchmark-link:https://github.com/alecjacobson&gt;@alecjacobson&lt;/denchmark-link&gt;
 and Mac users, Does this issue persists? I will close this issue if there is no more activity. Thanks.
		</comment>
	</comments>
</bug>