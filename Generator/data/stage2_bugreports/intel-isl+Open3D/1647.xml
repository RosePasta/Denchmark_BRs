<bug id='1647' author='lucivpav' open_date='2020-03-23T21:23:18Z' closed_time='2020-04-13T17:36:08Z'>
	<summary>Headless rendering: OSMesa: Failed to create context</summary>
	<description>
I have followed the &lt;denchmark-link:http://www.open3d.org/docs/release/tutorial/Advanced/headless_rendering.html&gt;instructions&lt;/denchmark-link&gt;
 on headless rendering. To test things out I tried running the  script, which throws an error: .
To Reproduce
Steps to reproduce the behavior:

Follow the instructions on headless rendering
cd Open3D/examples/Python/Advanced note that the path mentioned in the instructions seems outdated, unless I am missing something
python3 headless_rendering.py

Expected behavior
No error shows and the example prints the following:
&lt;denchmark-code&gt;Capture image 00001
Capture image 00002
Capture image 00003
Capture image 00004
Capture image 00005
:
Capture image 00030
&lt;/denchmark-code&gt;

Environment

OS: Debian 4.9.65-3+deb9u1 x86_64
Python version: 3.5.3
Open3D version: v0.9.0 (git tag)
Is this remote workstation?: yes
How did you install Open3D?: from source using these instructions (GCCcore/6.4.0)


I have compiled OSMesa from source, as is described in the &lt;denchmark-link:http://www.open3d.org/docs/release/tutorial/Advanced/headless_rendering.html#install-osmesa&gt;instructions&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='lucivpav' date='2020-04-13T04:41:04Z'>
		pvarvak's pull request could solve the problem. I followed his instruction and solve it. Just a note, for those who could not use LLVM, I found that his method also works with a slight change (I just copy his instructions here and modify some code):
&lt;denchmark-code&gt;    # download OSMesa 19.0.8 release
    (py3env) $ curl -O https://mesa.freedesktop.org/archive/mesa-19.0.8.tar.xz
    (py3env) $ tar xvf mesa-19.0.8.tar.xz
    (py3env) $ cd mesa-19.0.8
    (py3env) $ ./configure --prefix=$HOME/osmesa \
        --disable-osmesa --disable-driglx-direct --disable-gbm --enable-dri \
        --with-gallium-drivers=swrast --enable-autotools --enable-gallium-osmesa
    (py3env) $ make -j$(nproc)
    (py3env) $ make install
    # this installed OSMesa libraries to $HOME/osmesa/lib; in order for Open3D to pick it up
    # LD_LIBRARY_PATH needs to be updated to include it:
    (py3env) $ export LD_LIBRARY_PATH="$HOME/osmesa/lib:$LD_LIBRARY_PATH"
    # this needs to be done for every shell, or you can add it to your .bashrc
    (py3env) $ cd ~/Open3D
    (py3env) $ mkdir build&amp;&amp;cd build
    (py3env) $ cmake -DENABLE_HEADLESS_RENDERING=ON -DBUILD_GLEW=ON -DBUILD_GLFW=ON \
    -DPYTHON_EXECUTABLE:FILEPATH=PATH_TO_YOUR_PYTHON
        -DOSMESA_INCLUDE_DIR=$HOME/osmesa/include -DOSMESA_LIBRARY="$HOME/osmesa/lib/libOSMesa.so" \
        ..
    (py3env) $ make -j$(nproc)
    (py3env) $ make install-pip-package

&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>