<bug id='1535' author='Moxinlin' open_date='2020-02-22T13:41:52Z' closed_time='2020-03-26T03:35:23Z'>
	<summary>can't use open3d.geometry.VoxelGrid.voxels</summary>
	<description>
i try to run the code following:
import numpy as np
import open3d as o3d
pcd = o3d.io.read_point_cloud("/Users/MXL/Desktop/sample_1.pcd")
print(pcd)
print(np.asarray(pcd.points))
vox_grid = o3d.geometry.VoxelGrid.create_from_point_cloud(pcd, 0.5)
print(np.asarray(vox_grid.voxels))
then error occurs.
The output is:
geometry::PointCloud with 868 points.
[[ -12.9654   -167.1241     49.004299]
[ -12.1589   -170.9985     49.029999]
[ -11.1866   -165.2412     49.045101]
...
[ -34.132301 -168.87849    70.202904]
[ -34.552101 -166.7314     70.232903]
[ -34.345001 -167.79601    70.259804]]
Traceback (most recent call last):
File "pcd2voxel_file.py", line 13, in 
print(np.asarray(vox_grid.voxels))
TypeError: unhashable type: 'numpy.ndarray'
	</description>
	<comments>
		<comment id='1' author='Moxinlin' date='2020-02-26T05:33:17Z'>
		can be reproduced in simplier way:
voxelGrid: VoxelGrid = VoxelGrid.create_dense(origin=[0, 0, 0],
                                                  voxel_size=0.1,
                                                  width=1,
                                                  height=1,
                                                  depth=1)
voxels  = voxelGrid.voxels
works on in 0.8.0.0 fails in 0.9.0.0
		</comment>
		<comment id='2' author='Moxinlin' date='2020-03-26T03:31:54Z'>
		Hi, maciejmatuszak. Thank you for your reply.  I rollback the version to 0.8.00 and the original code also works.
		</comment>
		<comment id='3' author='Moxinlin' date='2020-03-26T16:56:00Z'>
		I have discovered this bug also.
Is there a way to get PyBind to treat the Eigen::vector3d keys as tuples instead of numpy arrays?
Otherwise maybe the "voxels" Python binding should be replaced with a get_voxels method that creates and returns a new unordered map, keying on tuples instead.
		</comment>
		<comment id='4' author='Moxinlin' date='2020-03-26T18:32:36Z'>
		I was able to get what I needed using this patch
&lt;denchmark-code&gt;diff --git a/src/Python/open3d_pybind/geometry/voxelgrid.cpp b/src/Python/open3d_pybind/geometry/voxelgrid.cpp
index 7b85f186..7412f26c 100644
--- a/src/Python/open3d_pybind/geometry/voxelgrid.cpp
+++ b/src/Python/open3d_pybind/geometry/voxelgrid.cpp
@@ -120,6 +118,8 @@ void pybind_voxelgrid(py::module &amp;m) {
             .def("create_from_octree", &amp;geometry::VoxelGrid::CreateFromOctree,
                  "octree"_a
                  "Convert from Octree.")
+            .def("get_voxels", &amp;geometry::VoxelGrid::GetVoxels,
+                  "Get a list of ``Voxel``: Voxels contained in voxel grid")
             .def_static("create_dense", &amp;geometry::VoxelGrid::CreateDense,
                         "Creates a voxel grid where every voxel is set (hence "
                         "dense). This is a useful starting point for voxel "
diff --git a/src/Open3D/Geometry/VoxelGrid.cpp b/src/Open3D/Geometry/VoxelGrid.cpp
index abdc81f3..2a2da6a1 100644
--- a/src/Open3D/Geometry/VoxelGrid.cpp
+++ b/src/Open3D/Geometry/VoxelGrid.cpp
@@ -356,5 +356,16 @@ VoxelGrid &amp;VoxelGrid::CarveSilhouette(
     return *this;
 }
 
+std::vector&lt;Voxel&gt; VoxelGrid::GetVoxels()
+{
+  std::vector&lt;Voxel&gt; result;
+  result.reserve(voxels_.size());
+  for (const auto&amp; keyval : voxels_)
+  {
+    result.push_back(keyval.second);
+  }
+  return result;
+}
+
 }  // namespace geometry
 }  // namespace open3d
diff --git a/src/Open3D/Geometry/VoxelGrid.h b/src/Open3D/Geometry/VoxelGrid.h
index b31feb13..2741e738 100644
--- a/src/Open3D/Geometry/VoxelGrid.h
+++ b/src/Open3D/Geometry/VoxelGrid.h
@@ -237,6 +237,8 @@ public:
             const Eigen::Vector3d &amp;min_bound,
             const Eigen::Vector3d &amp;max_bound);
 
+    std::vector&lt;Voxel&gt; GetVoxels();
+
 public:
     /// Size of the voxel.
     double voxel_size_ = 0.0;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='Moxinlin' date='2020-04-07T15:48:46Z'>
		&lt;denchmark-link:https://github.com/noahstier&gt;@noahstier&lt;/denchmark-link&gt;

I got what I wanted with this patch. Thank you very much. I created PR on your behalf.
		</comment>
		<comment id='6' author='Moxinlin' date='2020-04-07T16:22:30Z'>
		Thanks. It might also be good to remote the voxels method from the Python bindings
		</comment>
	</comments>
</bug>