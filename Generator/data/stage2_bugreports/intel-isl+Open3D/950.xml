<bug id='950' author='lukasgee' open_date='2019-05-04T13:18:46Z' closed_time='2019-09-19T23:03:03Z'>
	<summary>Statement causing TypeError returning NoneType while reading rgbd_image</summary>
	<description>
Description
Code available at: examples/Python/ReconstructionSystem/make_fragments.py
Following part of code:
def read_rgbd_image(color_file, depth_file, convert_rgb_to_intensity, config):
    color = read_image(color_file)
    depth = read_image(depth_file)
    if config["depth_map_type"] == "redwood":
        rgbd_image = create_rgbd_image_from_color_and_depth(color, depth,
            depth_trunc = config["max_depth"],
            convert_rgb_to_intensity = convert_rgb_to_intensity)
    return rgbd_image
causes TypeError due to referencing rgbd_image while
return rgbd_image
which is not set if there is different then "redwood" depth_map_type given.
I saw the different already solved Issue on necessity of the if statement implemented here to set
convert_rgb_to_intensity=True
for "redwood" depth_map_type
Overall solution
So if the condition is necessary, the most safe way is to solve this issue as following:
def read_rgbd_image(color_file, depth_file, convert_rgb_to_intensity, config):
    color = read_image(color_file)
    depth = read_image(depth_file)
    if config["depth_map_type"] == "redwood":
        convert_rgb_to_intensity = True
    rgbd_image = create_rgbd_image_from_color_and_depth(color, depth,
        depth_trunc = config["max_depth"],
        convert_rgb_to_intensity = convert_rgb_to_intensity)
    return rgbd_image
This makes sure of returning the image every time the function is asked for it and still takes care of "redwood" depth_map_type.
	</description>
	<comments>
	</comments>
</bug>