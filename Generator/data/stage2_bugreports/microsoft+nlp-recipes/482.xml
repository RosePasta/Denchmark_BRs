<bug id='482' author='miguelgfierro' open_date='2019-11-20T22:46:26Z' closed_time='2019-11-21T19:10:56Z'>
	<summary>[BUG]  error in entailment notebook on integration tests</summary>
	<description>
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;tests/integration/test_gpu_utils.py .                                    [  9%]
tests/integration/test_notebooks_entailment.py F                         [ 18%]
tests/integration/test_notebooks_interpretability.py .                   [ 27%]
tests/integration/test_notebooks_named_entity_recognition.py .           [ 36%]
tests/integration/test_notebooks_question_answering.py .                 [ 45%]
tests/integration/test_notebooks_sentence_similarity.py s.               [ 63%]
tests/integration/test_notebooks_text_classification.py ....             [100%]

=================================== FAILURES ===================================
________________________ test_entailment_multinli_bert _________________________

notebooks = {'automl_local_deployment_aci': '/data/home/nlpadmin/myagent/_work/14/s/examples/sentence_similarity/automl_local_depl...': '/data/home/nlpadmin/myagent/_work/14/s/examples/question_answering/pretrained-BERT-SQuAD-deep-dive-aml.ipynb', ...}
tmp = '/tmp/pytest-of-nlpadmin/pytest-913/tmpmjwlta0o'

    @pytest.mark.gpu
    @pytest.mark.integration
    def test_entailment_multinli_bert(notebooks, tmp):
        notebook_path = notebooks["entailment_multinli_transformers"]
        pm.execute_notebook(
            notebook_path,
            OUTPUT_NOTEBOOK,
            parameters={
                "MODEL_NAME": "bert-base-uncased",
                "TO_LOWER": True,
                "TRAIN_DATA_USED_FRACTION": 0.05,
                "DEV_DATA_USED_FRACTION": 0.05,
                "NUM_EPOCHS": 1,
                "CACHE_DIR": tmp
            },
&gt;           kernel_name=KERNEL_NAME,
        )

tests/integration/test_notebooks_entailment.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/data/anaconda/envs/integration_gpu/lib/python3.6/site-packages/papermill/execute.py:108: in execute_notebook
    raise_for_execution_errors(nb, output_path)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nb = {'cells': [{'cell_type': 'code', 'metadata': {'inputHidden': True, 'hide_input': True}, 'execution_count': None, 'sour...d_time': '2019-11-20T21:37:18.502210', 'duration': 288.854452, 'exception': True}}, 'nbformat': 4, 'nbformat_minor': 2}
output_path = 'output.ipynb'

    def raise_for_execution_errors(nb, output_path):
        """Assigned parameters into the appropriate place in the input notebook
    
        Parameters
        ----------
        nb : NotebookNode
           Executable notebook object
        output_path : str
           Path to write executed notebook
        """
        error = None
        for cell in nb.cells:
            if cell.get("outputs") is None:
                continue
    
            for output in cell.outputs:
                if output.output_type == "error":
                    error = PapermillExecutionError(
                        exec_count=cell.execution_count,
                        source=cell.source,
                        ename=output.ename,
                        evalue=output.evalue,
                        traceback=output.traceback,
                    )
                    break
    
        if error:
            # Write notebook back out with the Error Message at the top of the Notebook.
            error_msg = ERROR_MESSAGE_TEMPLATE % str(error.exec_count)
            error_msg_cell = nbformat.v4.new_code_cell(
                source="%%html\n" + error_msg,
                outputs=[
                    nbformat.v4.new_output(output_type="display_data", data={"text/html": error_msg})
                ],
                metadata={"inputHidden": True, "hide_input": True},
            )
            nb.cells = [error_msg_cell] + nb.cells
            write_ipynb(nb, output_path)
&gt;           raise error
E           papermill.exceptions.PapermillExecutionError: 
E           ---------------------------------------------------------------------------
E           Exception encountered at "In [6]":
E           ---------------------------------------------------------------------------
E           BadZipFile                                Traceback (most recent call last)
E           &lt;ipython-input-6-e13059c8ba52&gt; in &lt;module&gt;
E           ----&gt; 1 train_df = load_pandas_df(local_cache_path=CACHE_DIR, file_split="train")
E                 2 dev_df_matched = load_pandas_df(local_cache_path=CACHE_DIR, file_split="dev_matched")
E                 3 dev_df_mismatched = load_pandas_df(local_cache_path=CACHE_DIR, file_split="dev_mismatched")
E           
E           /data/home/nlpadmin/myagent/_work/14/s/utils_nlp/dataset/multinli.py in load_pandas_df(local_cache_path, file_split)
E                60         download_file_and_extract(local_cache_path, file_split)
E                61     except Exception as e:
E           ---&gt; 62         raise e
E                63     return pd.read_json(os.path.join(local_cache_path, DATA_FILES[file_split]), lines=True)
E                64 
E           
E           /data/home/nlpadmin/myagent/_work/14/s/utils_nlp/dataset/multinli.py in load_pandas_df(local_cache_path, file_split)
E                58     """
E                59     try:
E           ---&gt; 60         download_file_and_extract(local_cache_path, file_split)
E                61     except Exception as e:
E                62         raise e
E           
E           /data/home/nlpadmin/myagent/_work/14/s/utils_nlp/dataset/multinli.py in download_file_and_extract(local_cache_path, file_split)
E                43 
E                44     if not os.path.exists(os.path.join(local_cache_path, DATA_FILES[file_split])):
E           ---&gt; 45         extract_zip(os.path.join(local_cache_path, file_name), local_cache_path)
E                46 
E                47 
E           
E           /data/home/nlpadmin/myagent/_work/14/s/utils_nlp/dataset/url_utils.py in extract_zip(file_path, dest_path)
E                81     if not os.path.exists(dest_path):
E                82         raise IOError("Destination directory doesn't exist")
E           ---&gt; 83     with zipfile.ZipFile(file_path) as z:
E                84         z.extractall(dest_path, filter(lambda f: not f.endswith("\r"), z.namelist()))
E                85 
E           
E           /data/anaconda/envs/integration_gpu/lib/python3.6/zipfile.py in __init__(self, file, mode, compression, allowZip64)
E              1129         try:
E              1130             if mode == 'r':
E           -&gt; 1131                 self._RealGetContents()
E              1132             elif mode in ('w', 'x'):
E              1133                 # set the modified flag so central directory gets written
E           
E           /data/anaconda/envs/integration_gpu/lib/python3.6/zipfile.py in _RealGetContents(self)
E              1196             raise BadZipFile("File is not a zip file")
E              1197         if not endrec:
E           -&gt; 1198             raise BadZipFile("File is not a zip file")
E              1199         if self.debug &gt; 1:
E              1200             print(endrec)
E           
E           BadZipFile: File is not a zip file
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;How do we replicate the bug?&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Expected behavior (i.e. solution)&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Other Comments&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='miguelgfierro' date='2019-11-21T19:10:55Z'>
		fixed now
		</comment>
	</comments>
</bug>