<bug id='20' author='mortido' open_date='2019-01-31T14:06:03Z' closed_time='2019-02-11T02:10:19Z'>
	<summary>Inconsistent distance for same moving commands.</summary>
	<description>
I've tried the following code and it plots images with different distance to a next door.
OS: Windows 10.
&lt;denchmark-code&gt;for i in range(10):
    env.seed(8)
    env.floor(1)
    obs = env.reset()

    for _ in range(20):
        obs, reward, done, info = env.step([1, 0, 0 ,0])

    plt.figure(figsize=(3,3))
    plt.imshow(obs[0])
    plt.show()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mortido' date='2019-02-01T00:14:38Z'>
		That's interesting! I also get slightly different images. (Ubuntu 16.04)
plt.figure(figsize=(14, 6))
for i in range(10):
    env.seed(8)
    env.floor(1)
    obs = env.reset()

    for _ in range(20):
        obs, _, _, _ = env.step([1, 0, 0 ,0])

    plt.subplot(2, 5, i+1)
    plt.imshow(obs[0])
plt.show()
&lt;denchmark-link:https://user-images.githubusercontent.com/6107926/52094180-85048700-2601-11e9-900e-317b06be3d1d.png&gt;&lt;/denchmark-link&gt;

I do get the same images when I check the observation immediately after reset:
plt.figure(figsize=(14, 6))
for i in range(10):
    env.seed(8)
    env.floor(1)
    obs = env.reset()

    plt.subplot(2, 5, i+1)
    plt.imshow(obs[0])
plt.show()
&lt;denchmark-link:https://user-images.githubusercontent.com/6107926/52094192-8cc42b80-2601-11e9-9650-f090506fc4e8.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='mortido' date='2019-02-01T12:11:10Z'>
		BTW it works fine if recreate environment every time.
&lt;denchmark-code&gt;env = None
plt.figure(figsize=(14, 6))
for i in range(10):
    if env is not None:
        env.close()
    env = ObstacleTowerEnv('./ObstacleTower/obstacletower', retro=False)
    
    env.seed(8)
    env.floor(1)
    obs = env.reset()
    
    for _ in range(20):
        obs, _, _, _ = env.step([1, 0, 0 ,0])

    plt.subplot(2, 5, i+1)
    plt.imshow(obs[0])
plt.show()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='mortido' date='2019-02-01T18:52:44Z'>
		Hi &lt;denchmark-link:https://github.com/mortido&gt;@mortido&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/seungjaeryanlee&gt;@seungjaeryanlee&lt;/denchmark-link&gt;

Thanks to both of you for doing this investigation. I have been able to reproduce similar results myself. Especially your recent post &lt;denchmark-link:https://github.com/mortido&gt;@mortido&lt;/denchmark-link&gt;
 leads me to believe this inconsistency is due to some aspect of the environment not being completely reset on reset. I will look into this and make sure it is resolved before the launch of the contest on Feb 11.
		</comment>
		<comment id='4' author='mortido' date='2019-02-05T14:12:01Z'>
		Even with restarting the game there is small inconsistency in moves. Using the following list of commands I was able to finish level on 76 or on 78 frame.
&lt;denchmark-code&gt;seed = 0
floor = 1

moves = [
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 2, 0 ,0],
[1, 2, 0 ,0],[1, 2, 0 ,0],[1, 2, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
[1, 1, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
[1, 0, 0 ,0],[0, 2, 0 ,0],[0, 2, 0 ,0],[2, 0, 0 ,0],[2, 0, 0 ,0],[2, 0, 0 ,0],
[2, 0, 0 ,0],[2, 0, 0 ,0],[2, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 2, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 2, 0 ,0],
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 2, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 2, 0 ,0],
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 2, 0 ,0],[1, 0, 0 ,2],[1, 0, 0 ,2],[1, 0, 0 ,2],
[1, 0, 0 ,2],[1, 0, 0 ,2],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],[1, 0, 0 ,0],
]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='mortido' date='2019-02-06T00:41:24Z'>
		HI &lt;denchmark-link:https://github.com/mortido&gt;@mortido&lt;/denchmark-link&gt;
,
This level of small inconsistency is to be expected, and part of the environment. The simulation at the physics level is non-deterministic. We believe that this is actually a positive for the generalization aspect of the challenge.
For the issues between resets, we have addressed this in an internal build, and plan to release a new build to the public prior to the start of the contest on Feb 11.
		</comment>
		<comment id='6' author='mortido' date='2019-02-10T13:43:42Z'>
		Is this really a bug, or only a small inconsistency?
As &lt;denchmark-link:https://github.com/seungjaeryanlee&gt;@seungjaeryanlee&lt;/denchmark-link&gt;
 suggests, the environment is probably the same after reset, and I suspect that the inconsistency is due to the door. Sometimes the door opens slowly, which causes the agent to be blocked at the door, so the results for moving forward 20 steps (or any sequence that crosses a door) are different. So this might be expected?
Can you confirm that the problem is at the door? &lt;denchmark-link:https://github.com/mortido&gt;@mortido&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/seungjaeryanlee&gt;@seungjaeryanlee&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/awjuliani&gt;@awjuliani&lt;/denchmark-link&gt;

Thanks.
		</comment>
		<comment id='7' author='mortido' date='2019-02-11T02:10:19Z'>
		Hi all,
We just pushed a new release and binary (v1.1). This includes a fix for resetting the character animator between floors and resets. This should result in much more reproducible behavior between floors. It still won't be 100% due to inherent indeterminism in the Unity physics, but it is no longer nearly as extreme as shown above, and we believe within an acceptable range.
Thanks again to those who pointed this out.
		</comment>
	</comments>
</bug>