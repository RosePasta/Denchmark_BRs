<bug id='91' author='unixpickle' open_date='2019-05-18T22:01:37Z' closed_time='2019-05-21T02:45:50Z'>
	<summary>The seed() function is broken</summary>
	<description>
The seeds are not consistent across environment instances. This means there's some other source of non-determinism. I'm guessing this means that contestants have access to unlimited seeds...
Demo script:
import os

from obstacle_tower_env import ObstacleTowerEnv

counter = {}
for i in range(0, 25):
    env = ObstacleTowerEnv('./ObstacleTower/obstacletower.x86_64', worker_id=i)
    env.seed(25)
    env.reset()
    for _ in range(50):
        obs, _, _, _ = env.step(0)
    key = str(obs.flatten().tolist())
    counter[key] = True
    print('got %d start states' % len(counter))
    env.close()
In older versions of the environment, this script works pretty much as expected.
	</description>
	<comments>
		<comment id='1' author='unixpickle' date='2019-05-19T06:56:07Z'>
		the issue is that reset does not env.reset() the seed - I added a for _ in range(50):... before the env.reset() ...
&lt;denchmark-link:https://user-images.githubusercontent.com/4400544/57978769-286a8380-79c8-11e9-9d13-d14408c060c1.gif&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='unixpickle' date='2019-05-19T12:10:44Z'>
		Indeed, it looks like using seed() actually causes the environment to stick to its current seed, regardless of the argument. This prints out something like
&lt;denchmark-code&gt;WARNING:gym_unity:New seed 62 will apply on next reset.
INFO:mlagents_envs:Academy reset with parameters: tower-seed -&gt; 62
got 1 start states
WARNING:gym_unity:New seed 46 will apply on next reset.
INFO:mlagents_envs:Academy reset with parameters: tower-seed -&gt; 46
got 1 start states
WARNING:gym_unity:New seed 31 will apply on next reset.
INFO:mlagents_envs:Academy reset with parameters: tower-seed -&gt; 31
got 1 start states
WARNING:gym_unity:New seed 21 will apply on next reset.
INFO:mlagents_envs:Academy reset with parameters: tower-seed -&gt; 21
got 1 start states
WARNING:gym_unity:New seed 64 will apply on next reset.
INFO:mlagents_envs:Academy reset with parameters: tower-seed -&gt; 64
&lt;/denchmark-code&gt;

import os
import random

from obstacle_tower_env import ObstacleTowerEnv

counter = {}
env = ObstacleTowerEnv('./ObstacleTower/obstacletower.x86_64', worker_id=2)
while True:
    env.seed(random.randrange(100))
    env.reset()
    for _ in range(50):
        obs, _, _, _ = env.step(0)
    key = str(obs.flatten().tolist())
    counter[key] = True
    print('got %d start states' % len(counter))
		</comment>
		<comment id='3' author='unixpickle' date='2019-05-19T18:06:58Z'>
		Hi &lt;denchmark-link:https://github.com/unixpickle&gt;@unixpickle&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/Sohojoe&gt;@Sohojoe&lt;/denchmark-link&gt;

Thanks for bringing this to my attention. I will take a look at it, and hopefully have fix soon.
		</comment>
		<comment id='4' author='unixpickle' date='2019-05-21T02:45:50Z'>
		Hi all,
We've have just pushed the v2.1 release which aims to fix this. Please let us know if you still run into an issue.
		</comment>
		<comment id='5' author='unixpickle' date='2019-05-22T08:16:55Z'>
		Although I defined specific tower-seed when I reset the environment,
random seed(0~99) is assigned instead when tower-seed &gt;= 100.
It looks like v2.1 still has the same problem.
		</comment>
		<comment id='6' author='unixpickle' date='2019-05-22T15:06:10Z'>
		Hi &lt;denchmark-link:https://github.com/SungbinChoi&gt;@SungbinChoi&lt;/denchmark-link&gt;
 this is actually intentional. For the duration of the contest we are limiting the random seeds to 100, to prevent participants from discovering and utilizing the review seeds. Once the contest is over we will release a version with an unrestricted seed range.
		</comment>
		<comment id='7' author='unixpickle' date='2019-05-22T15:18:50Z'>
		Hi &lt;denchmark-link:https://github.com/awjuliani&gt;@awjuliani&lt;/denchmark-link&gt;

I see. I didn't know that tower-seed value range is limited to 100 in Round 2. Thanks~
		</comment>
	</comments>
</bug>