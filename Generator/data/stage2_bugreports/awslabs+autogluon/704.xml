<bug id='704' author='jojo19893' open_date='2020-10-14T14:38:44Z' closed_time='2020-10-15T22:57:37Z'>
	<summary>Issue with deserializing model</summary>
	<description>
the following workflow persisting a model with:
model.save('/tmp/model')
the model contains text and numerical attributes the resulting metadata.json looks as follows:
&lt;denchmark-code&gt;{
   "label":{
      "type":"categorical",
      "attrs":{
         "categories":[
            0,
            1
         ],
         "allow_missing":false
      }
   },
   "title":{
      "type":"text",
      "attrs":{
         
      }
   },
   "token_ratio":{
      "type":"numerical",
      "attrs":{
     "shape":[
            
         ]
         
      }
   },
   "length_ratio":{
      "type":"numerical",
      "attrs":{
         "shape":[
            
         ]
      }
   },
   "duplicate_tokens":{
      "type":"numerical",
      "attrs":{
         "shape":[
            
         ]
      }
   }
}
&lt;/denchmark-code&gt;

when loading the folder with model=task.load(folder) it works.
however if you call model.predict(df) on a DF that works on the trained model in memory the following error occurs:
AssertionError: Shape mismatch!. Expected shape=[], shape in the dataset is ()
the error happens because the class NumericalColumnProperty(ColumnProperty): has as a shape a [] instead of a ()
this is due to the fact that the shape is wrong deserialized.
Idea would be to override it in the init:
&lt;denchmark-code&gt;   def __init__(self, shape: Optional[Tuple] = None):
        """

        Parameters
        ----------
        shape
            The shape of the numerical values
        """
        super().__init__()
        if shape==[]
           shape=()
       self._shape = shape
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jojo19893' date='2020-10-14T22:19:25Z'>
		Thanks for reporting this. A quick fix will be to change the following



autogluon/text/src/autogluon/text/text_prediction/column_property.py


        Lines 240 to 242
      in
      3a68829






 assert self._shape == inferred_shape, 'Shape mismatch!. Expected shape={},' \ 



 ' shape in the dataset is {}'.format(self._shape, 



 inferred_shape) 





to
&lt;denchmark-code&gt;assert tuple(self._shape) == tuple(inferred_shape)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='jojo19893' date='2020-10-15T22:57:37Z'>
		Solved via &lt;denchmark-link:https://github.com/awslabs/autogluon/pull/708&gt;#708&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>