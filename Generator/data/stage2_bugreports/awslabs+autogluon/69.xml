<bug id='69' author='zhanghang1989' open_date='2019-11-15T23:28:21Z' closed_time='2019-11-20T21:34:05Z'>
	<summary>Skopt Searcher Error Under Stress Test</summary>
	<description>
How to reproduce:
# create search space
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def gaussian(x, y, x0, y0, xalpha, yalpha, A): 
    return A * np.exp( -((x-x0)/xalpha)**2 -((y-y0)/yalpha)**2) 

x, y = np.linspace(0, 99, 100), np.linspace(0, 99, 100) 
X, Y = np.meshgrid(x, y)

Z = np.zeros(X.shape) 
ps = [(20, 70, 35, 40, 1),
      (80, 40, 20, 20, 0.7)]
for p in ps:
    Z += gaussian(X, Y, *p)

fig = plt.figure()
ax = fig.gca(projection='3d') 
ax.plot_surface(X, Y, Z, cmap='plasma') 
ax.set_zlim(0,np.max(Z)+2)
plt.show()

# create trainin function

import autogluon as ag

@ag.args(
    x=ag.space.Categorical(*list(range(100))),
    y=ag.space.Categorical(*list(range(100))),
)
def rl_simulation(args, reporter):
    x, y = args.x, args.y
    reporter(accuracy=Z[y][x])

# start scheduler and training
skopt_scheduler = ag.scheduler.FIFOScheduler(rl_simulation,
                                             searcher='skopt',
                                             resource={'num_cpus': 1, 'num_gpus': 0},
                                             num_trials=300,
                                             reward_attr="accuracy",
                                             resume=False)
skopt_scheduler.run()
skopt_scheduler.join_jobs()
print('Best config: {}, best reward: {}'.format(skopt_scheduler.get_best_config(), skopt_scheduler.get_best_reward()))
Error message:
&lt;denchmark-code&gt;Exception in thread Thread-1841:
Traceback (most recent call last):
  File "//anaconda3/lib/python3.7/threading.py", line 917, in _bootstrap_inner
    self.run()
  File "//anaconda3/lib/python3.7/threading.py", line 865, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/hzaws/git/AutoGluon/autogluon/scheduler/fifo.py", line 266, in _run_reporter
    reward=last_result[self._reward_attr], **last_result)
  File "/Users/hzaws/git/AutoGluon/autogluon/searcher/skopt_searcher.py", line 172, in update
    -reward)  # provide negative reward since skopt performs minimization
  File "//anaconda3/lib/python3.7/site-packages/scikit_optimize-0.5.2-py3.7.egg/skopt/optimizer/optimizer.py", line 443, in tell
    return self._tell(x, y, fit=fit)
  File "//anaconda3/lib/python3.7/site-packages/scikit_optimize-0.5.2-py3.7.egg/skopt/optimizer/optimizer.py", line 486, in _tell
    est.fit(self.space.transform(self.Xi), self.yi)
  File "//anaconda3/lib/python3.7/site-packages/scikit_optimize-0.5.2-py3.7.egg/skopt/learning/gaussian_process/gpr.py", line 195, in fit
    super(GaussianProcessRegressor, self).fit(X, y)
  File "//anaconda3/lib/python3.7/site-packages/sklearn/gaussian_process/gpr.py", line 221, in fit
    self.kernel_.bounds))]
  File "//anaconda3/lib/python3.7/site-packages/sklearn/gaussian_process/gpr.py", line 465, in _constrained_optimization
    fmin_l_bfgs_b(obj_func, initial_theta, bounds=bounds)
  File "//anaconda3/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py", line 199, in fmin_l_bfgs_b
    **opts)
  File "//anaconda3/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py", line 335, in _minimize_lbfgsb
    f, g = func_and_grad(x)
  File "//anaconda3/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py", line 285, in func_and_grad
    f = fun(x, *args)
  File "//anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "//anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py", line 64, in __call__
    fg = self.fun(x, *args)
  File "//anaconda3/lib/python3.7/site-packages/sklearn/gaussian_process/gpr.py", line 213, in obj_func
    theta, eval_gradient=True)
  File "//anaconda3/lib/python3.7/site-packages/sklearn/gaussian_process/gpr.py", line 423, in log_marginal_likelihood
    K, K_gradient = kernel(self.X_train_, eval_gradient=True)
  File "//anaconda3/lib/python3.7/site-packages/sklearn/gaussian_process/kernels.py", line 685, in __call__
    K1, K1_gradient = self.k1(X, Y, eval_gradient=True)
  File "//anaconda3/lib/python3.7/site-packages/sklearn/gaussian_process/kernels.py", line 760, in __call__
    K2, K2_gradient = self.k2(X, Y, eval_gradient=True)
  File "//anaconda3/lib/python3.7/site-packages/scikit_optimize-0.5.2-py3.7.egg/skopt/learning/gaussian_process/kernels.py", line 391, in __call__
    (X.shape, len(length_scale)))
TypeError: %d format: a number is required, not tuple
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zhanghang1989' date='2019-11-20T21:34:04Z'>
		Initial fix in: &lt;denchmark-link:https://github.com/awslabs/autogluon/pull/81&gt;#81&lt;/denchmark-link&gt;

Closing for now
		</comment>
	</comments>
</bug>