<bug id='379' author='bobobo1618' open_date='2020-07-06T07:50:59Z' closed_time='2020-07-08T19:54:25Z'>
	<summary>index: runtime error: invalid memory address or nil pointer dereference [panic]</summary>
	<description>
I get this message long before PhotoPrism has finished indexing. Unfortunately it comes without any other logging information.
As you can see, I tried the debug flag but no luck getting more info.
&lt;denchmark-code&gt;&gt; docker exec -it photoprism photoprism --debug index
INFO[2020-07-06T07:47:36Z] index: skipped duplicate main jpg file “&lt;redacted&gt;” 
INFO[2020-07-06T07:47:36Z] index: skipped duplicate main jpg file “&lt;redacted&gt;” 
INFO[2020-07-06T07:47:36Z] index: skipped duplicate main jpg file “&lt;redacted&gt;” 
ERRO[2020-07-06T07:47:36Z] index: runtime error: invalid memory address or nil pointer dereference [panic] 
INFO[2020-07-06T07:47:36Z] index: skipped main jpg file “&lt;redacted&gt;” 
INFO[2020-07-06T07:47:39Z] purge: finding hidden photos                 
INFO[2020-07-06T07:47:39Z] indexed 0 files in 10.690438558s             
INFO[2020-07-06T07:47:39Z] closed database connection
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bobobo1618' date='2020-07-06T07:51:51Z'>
		Oh, version information:
&lt;denchmark-code&gt;&gt; docker exec -it photoprism photoprism -v
PhotoPrism version 200705-d400856-Linux-x86_64
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='bobobo1618' date='2020-07-06T10:44:08Z'>
		Could you index at all or does it fail at the first image and that's it?
		</comment>
		<comment id='3' author='bobobo1618' date='2020-07-06T11:06:56Z'>
		It indexes quite a few images successfully (thousands) before crashing. It seems to crash on specific images.
		</comment>
		<comment id='4' author='bobobo1618' date='2020-07-06T11:20:09Z'>
		And then it stops / crashes completely or continues with remaining images?
		</comment>
		<comment id='5' author='bobobo1618' date='2020-07-06T11:21:52Z'>
		Would be great to get example images for testing... Makes debugging easier.
You can attach them here or send them privately to &lt;denchmark-link:mailto:hello@photoprism.org&gt;hello@photoprism.org&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='bobobo1618' date='2020-07-06T11:38:24Z'>
		Stops/crashes completely.
Unfortunately I don't know which of the images causes the crash, I only know that it seems to crash in the same place each time.
		</comment>
		<comment id='7' author='bobobo1618' date='2020-07-06T12:41:54Z'>
		Let us know if you happen to find an image that causes issues. Just pushed an improved event log so that errors don't go unnoticed:
&lt;denchmark-link:https://user-images.githubusercontent.com/301686/86594098-b885d680-bf96-11ea-902e-0b371b853751.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='bobobo1618' date='2020-07-06T12:58:04Z'>
		I just pulled the image and re-ran and it doesn't appear anything new appears in the log:
&lt;denchmark-code&gt;INFO[2020-07-06T12:53:04Z] index: skipped main jpg file “&lt;redacted&gt;” 
INFO[2020-07-06T12:53:04Z] index: skipped main jpg file “&lt;redacted&gt;” 
WARN[2020-07-06T12:53:04Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:04Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:04Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:04Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:04Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:04Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
ERRO[2020-07-06T12:53:04Z] index: runtime error: invalid memory address or nil pointer dereference [panic] 
WARN[2020-07-06T12:53:04Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
WARN[2020-07-06T12:53:05Z] metadata: no gps tags in &lt;redacted&gt; (exif) 
DEBU[2020-07-06T12:53:05Z] mediafile: no json sidecar file found for &lt;redacted&gt; 
INFO[2020-07-06T12:53:05Z] purge: finding hidden photos                 
INFO[2020-07-06T12:53:05Z] indexed 0 files in 31.544199761s             
INFO[2020-07-06T12:53:05Z] closed database connection
&lt;/denchmark-code&gt;

Perhaps you could print a stack trace &lt;denchmark-link:https://github.com/photoprism/photoprism/blob/develop/internal/photoprism/index.go#L79-L81&gt;here&lt;/denchmark-link&gt;
, as recommended by &lt;denchmark-link:https://groups.google.com/forum/#!topic/golang-nuts/MB8GyW5j2UY&gt;this thread&lt;/denchmark-link&gt;
?
I'd try it myself except the development setup looks to be pretty heavy. It's a shame I can't just go get and be done with it.
		</comment>
		<comment id='9' author='bobobo1618' date='2020-07-06T15:55:04Z'>
		Huh, turns out you largely can run go get and be done with it.
By adding a stacktrace to the point I linked above, I obtained this:
&lt;denchmark-code&gt;ERRO[2020-07-06T17:52:26+02:00] index: runtime error: invalid memory address or nil pointer dereference [panic] goroutine 1 [running]:
runtime/debug.Stack(0xc01381e728, 0xed6480, 0x186fc90)
        /usr/lib/go/src/runtime/debug/stack.go:24 +0x9d
github.com/photoprism/photoprism/internal/photoprism.(*Index).Start.func1()
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/photoprism/index.go:81 +0x76
panic(0xed6480, 0x186fc90)
        /usr/lib/go/src/runtime/panic.go:969 +0x166
github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).Extension(0x0, 0x11, 0xc01381e968)
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/photoprism/mediafile.go:528 +0x22
github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).IsJpeg(0x0, 0xe886a0)
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/photoprism/mediafile.go:534 +0x2f
github.com/photoprism/photoprism/internal/photoprism.RelatedFiles.ContainsJpeg(0x0, 0x0, 0x0, 0x0, 0xc01f237720)
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/photoprism/related.go:11 +0x2f
github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).RelatedFiles(0xc01f38b8c0, 0x1, 0xc01f38b8c0, 0x0, 0x0, 0xc01381ea00, 0x0, 0x0)
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/photoprism/mediafile.go:292 +0x253
github.com/photoprism/photoprism/internal/photoprism.(*Index).Start.func4(0xc01e5fbbc0, 0x54, 0xc01f24f080, 0xc01381ef30, 0x500872)
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/photoprism/index.go:141 +0x42c
github.com/karrick/godirwalk.walk(0xc01e5fbbc0, 0x54, 0xc01f24f080, 0xc01381f658, 0x54, 0xc01f27c5e0)
        /home/me/.Go/pkg/mod/github.com/karrick/godirwalk@v1.15.6/walk.go:218 +0x69
github.com/karrick/godirwalk.walk(0xc01f384cd0, 0x44, 0xc01e145e30, 0xc01381f658, 0x44, 0x0)
        /home/me/.Go/pkg/mod/github.com/karrick/godirwalk@v1.15.6/walk.go:279 +0x424
github.com/karrick/godirwalk.walk(0xc01de9de60, 0x29, 0xc0174bc210, 0xc01381f658, 0x29, 0x0)
        /home/me/.Go/pkg/mod/github.com/karrick/godirwalk@v1.15.6/walk.go:279 +0x424
github.com/karrick/godirwalk.walk(0xc0172b4c30, 0x24, 0xc01393bcb0, 0xc01381f658, 0x24, 0x0)
        /home/me/.Go/pkg/mod/github.com/karrick/godirwalk@v1.15.6/walk.go:279 +0x424
github.com/karrick/godirwalk.walk(0xc01385bf80, 0x18, 0xc01393b410, 0xc01381f658, 0x0, 0x0)
        /home/me/.Go/pkg/mod/github.com/karrick/godirwalk@v1.15.6/walk.go:279 +0x424
github.com/karrick/godirwalk.Walk(0xc01385bf80, 0x18, 0xc01381f658, 0x9, 0xc01381f5f8)
        /home/me/.Go/pkg/mod/github.com/karrick/godirwalk@v1.15.6/walk.go:204 +0x238
github.com/photoprism/photoprism/internal/photoprism.(*Index).Start(0xc01393b230, 0x0, 0x0, 0x100, 0x0)
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/photoprism/index.go:114 +0x4e7
github.com/photoprism/photoprism/internal/commands.indexAction(0xc0000f5a20, 0x0, 0x0)
        /home/me/.Go/src/github.com/photoprism/photoprism/internal/commands/index.go:71 +0x334
github.com/urfave/cli.HandleAction(0xe9b6c0, 0x1058410, 0xc0000f5a20, 0xc0000f5a20, 0x0)
        /home/me/.Go/pkg/mod/github.com/urfave/cli@v1.22.4/app.go:526 +0x11a
github.com/urfave/cli.Command.Run(0xfe1c74, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x100eb8f, 0x27, 0x0, ...)
        /home/me/.Go/pkg/mod/github.com/urfave/cli@v1.22.4/command.go:174 +0x57a
github.com/urfave/cli.(*App).Run(0xc0000ae1c0, 0xc0000321a0, 0xd, 0xd, 0x0, 0x0)
        /home/me/.Go/pkg/mod/github.com/urfave/cli@v1.22.4/app.go:279 +0x7c7
main.main()
        /home/me/.Go/src/github.com/photoprism/photoprism/cmd/photoprism/photoprism.go:70 +0x3f8
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='bobobo1618' date='2020-07-06T16:03:27Z'>
		Looks like rf.Main is nil for some reason? I did this and everything appears to work so far:
diff --git a/internal/photoprism/index.go b/internal/photoprism/index.go
index e5288e8b..0f4a3e56 100644
--- a/internal/photoprism/index.go
+++ b/internal/photoprism/index.go
@@ -5,6 +5,7 @@ import (
        "fmt"
        "path/filepath"
        "runtime"
+       "runtime/debug"
        "sync"

        "github.com/jinzhu/gorm"
@@ -77,7 +78,7 @@ func (ind *Index) Start(opt IndexOptions) map[string]bool {
                mutex.MainWorker.Stop()

                if err := recover(); err != nil {
-                       log.Errorf("index: %s [panic]", err)
+                       log.Errorf("index: %s [panic] %s", err, debug.Stack())
                }
        }()

diff --git a/internal/photoprism/related.go b/internal/photoprism/related.go
index eb8308a3..a9ea0a68 100644
--- a/internal/photoprism/related.go
+++ b/internal/photoprism/related.go
@@ -8,7 +8,7 @@ type RelatedFiles struct {

 // ContainsJpeg returns true if related file list contains a JPEG.
 func (rf RelatedFiles) ContainsJpeg() bool {
-       if rf.Main.IsJpeg() {
+       if rf.Main != nil &amp;&amp; rf.Main.IsJpeg() {
                return true
        }
		</comment>
		<comment id='11' author='bobobo1618' date='2020-07-06T18:32:01Z'>
		Thanks for the amazing report, it's hopefully fixed now... Docker builds are running.
		</comment>
	</comments>
</bug>