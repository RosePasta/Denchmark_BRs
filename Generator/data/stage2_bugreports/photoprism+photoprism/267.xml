<bug id='267' author='garrettdowd' open_date='2020-03-23T18:51:13Z' closed_time='2020-05-06T20:30:11Z'>
	<summary>Indexing of Symlinks Not Working</summary>
	<description>
Action : photoprism index
Details: I have mounted my main photo collection bind mounted inside the docker container. I added symlinks between certain folders in the collection and the Pictures/Originals folder.
Expected Result: I assumed it would index all of the photos in the Pictures/Originals folder by following the symlinks.
Actual Result: No photos are indexed. The indexer does not seem to find any of the photos through the symlinks.
Given my large photo collection, I am still trying to find ways to only index certain parts of the collection.
	</description>
	<comments>
		<comment id='1' author='garrettdowd' date='2020-03-23T19:44:02Z'>
		Thanks for reporting this!  should follow links: &lt;denchmark-link:https://golang.org/pkg/os/#Stat&gt;https://golang.org/pkg/os/#Stat&lt;/denchmark-link&gt;

So maybe this is related to permissions... different user id? Do you see an error in the logs?
		</comment>
		<comment id='2' author='garrettdowd' date='2020-03-23T20:24:12Z'>
		Unfortunately nothing in the logs.
Mounting the photo folder directly (bind mount) in the Originals folder works. However, mounting the photos folder (bind mount) in the container (at /mnt/photos/) and then symlinking it to the Originals folder does not seem to work.
		</comment>
		<comment id='3' author='garrettdowd' date='2020-04-05T02:55:17Z'>
		&lt;denchmark-link:https://github.com/lastzero&gt;@lastzero&lt;/denchmark-link&gt;
 the issue is with &lt;denchmark-link:https://golang.org/pkg/path/filepath/#Walk&gt;filepath.Walk&lt;/denchmark-link&gt;
 which does not follow symlinks. &lt;denchmark-link:https://github.com/photoprism/photoprism/blob/develop/internal/photoprism/index.go#L89&gt;Here is the code&lt;/denchmark-link&gt;
.
I may suggest trying out: &lt;denchmark-link:https://godoc.org/golang.org/x/tools/internal/fastwalk#Walk&gt;fastwalk.Walk&lt;/denchmark-link&gt;
 instead because it faster (less syscalls) and it looks like you only need to know if it's a directory or not, and it looks like it has the ability to traverse links using &lt;denchmark-link:https://godoc.org/golang.org/x/tools/internal/fastwalk#pkg-variables&gt;ErrTraverseLink&lt;/denchmark-link&gt;
. The only thing you have to handle is loops, which may be tricky and maybe for a first pass you can punt on that an assume the directory structure contains no loops?
There are ways to get prevent loops, but they may not be cheap, since in practice I'd assume that people should only have either a single symlink or just a few in a single directory (like me) that it's probably fine to have traversing links be "expensive" by doing some extra checks to make sure it's not traversing into a folder that would cause a loop with another symlink.
If you're OK with doing this fix in two phases and using the fastwalk package, I maybe able to throw a PR together. Thoughts?
		</comment>
		<comment id='4' author='garrettdowd' date='2020-04-14T15:33:36Z'>
		&lt;denchmark-link:https://github.com/rockwotj&gt;@rockwotj&lt;/denchmark-link&gt;
 Sounds good!
		</comment>
		<comment id='5' author='garrettdowd' date='2020-04-27T11:57:40Z'>
		&lt;denchmark-link:https://github.com/rockwotj&gt;@rockwotj&lt;/denchmark-link&gt;
 No worries if you don't have time. Might find a chance to take care of this soon!
		</comment>
		<comment id='6' author='garrettdowd' date='2020-05-01T15:38:57Z'>
		Symlinks should work like that, but we want to test it more before it's merged into master (Docker image). Maybe we'll also implement ignore files along the way.
		</comment>
	</comments>
</bug>