<bug id='241' author='abrander' open_date='2020-02-04T19:40:24Z' closed_time='2020-02-21T00:58:40Z'>
	<summary>concurrent write to websocket connection</summary>
	<description>
In some cases the user can trigger a panic() from github.com/gorilla/websocket.
I believe the culprit is wsReader() and wsWriter() which will execute is separate go routines and both write to the same underlying websocket.Conn.
The Gorilla documentation touches concurrency here:
&lt;denchmark-link:https://godoc.org/github.com/gorilla/websocket#hdr-Concurrency&gt;https://godoc.org/github.com/gorilla/websocket#hdr-Concurrency&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='abrander' date='2020-02-05T16:05:12Z'>
		Is this something you observed? Never seen this in practice. Thanks for the hint!
		</comment>
		<comment id='2' author='abrander' date='2020-02-20T13:34:45Z'>
		I consistently get panic crash like below when debugging photoprism locally. Will propose an ugly/naive fix shortly
&lt;denchmark-code&gt;ERRO[2020-02-20T08:03:14-05:00] http: concurrent write to websocket connection (GET /api/v1/ws HTTP/1.1

Host: localhost:2342

Cache-Control: no-cache

Connection: Upgrade

Origin: http://localhost:2342

Pragma: no-cache

Sec-Websocket-Extensions: x-webkit-deflate-frame

Sec-Websocket-Key: X/Wupr6SKcR9nAEXr2ngbw==

Sec-Websocket-Version: 13

Upgrade: websocket

User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.5 Safari/605.1.15



)
/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:610 (0x51b96e1)
	(*messageWriter).flushFrame: panic("concurrent write to websocket connection")
/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:724 (0x51b9e61)
	(*messageWriter).Close: return w.flushFrame(true, nil)
/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/json.go:29 (0x51bc20d)
	(*Conn).WriteJSON: err2 := w.Close()
/Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:66 (0x51c8e87)
	wsReader: if err := ws.WriteJSON(gin.H{"event": "config.updated", "data": event.Data(conf.ClientConfig())}); err != nil {
/Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:148 (0x51e4eda)
	Websocket.func1: wsReader(ws, connId, conf)
/Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/context.go:108 (0x5191d83)
	(*Context).Next: c.handlers[c.index](c)
/Users/igor/workspaces/photoprism-dev/photoprism/internal/server/recovery.go:33 (0x51e99ca)
	Recovery.func1: c.Next()
/Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/context.go:108 (0x5191d83)
	(*Context).Next: c.handlers[c.index](c)
/Users/igor/workspaces/photoprism-dev/photoprism/internal/server/logger.go:18 (0x51e9369)
	Logger.func1: c.Next()
/Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/context.go:108 (0x5191d83)
	(*Context).Next: c.handlers[c.index](c)
/Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/gin.go:361 (0x519a5c6)
	(*Engine).handleHTTPRequest: c.Next()
/Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/gin.go:326 (0x5199e03)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/Cellar/go/1.13.8/libexec/src/net/http/server.go:2802 (0x432d3d3)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/Cellar/go/1.13.8/libexec/src/net/http/server.go:1890 (0x4328bc4)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/Cellar/go/1.13.8/libexec/src/runtime/asm_amd64.s:1357 (0x40621c0)
	goexit: BYTE	$0x90	// NOP 
ERRO[2020-02-20T08:03:14-05:00] GET /api/v1/ws (500) [6.197474061s]
&lt;/denchmark-code&gt;

... and the one below, which actually results in a hard crash
&lt;denchmark-code&gt;DEBU[2020-02-20T08:03:19-05:00] websocket: connected
DEBU[2020-02-20T08:03:19-05:00] websocket: received 119 bytes
DEBU[2020-02-20T08:03:19-05:00] websocket: authenticated
ERRO[2020-02-20T08:03:19-05:00] settings file not found: "/Users/igor/.config/photoprism/settings.yml"
panic: concurrent write to websocket connection

goroutine 334 [running]:
github.com/gorilla/websocket.(*messageWriter).flushFrame(0xc002a72c30, 0x1, 0x0, 0x0, 0x0, 0xc00088a930, 0xc838eb0)
	/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:610 +0x612
github.com/gorilla/websocket.(*messageWriter).Close(0xc002a72c30, 0x5532600, 0xc002a72c00)
	/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:724 +0x62
github.com/gorilla/websocket.(*Conn).WriteJSON(0xc002a9a000, 0x5532600, 0xc002a72c00, 0x4, 0xc0025f8e18)
	/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/json.go:29 +0x12e
github.com/photoprism/photoprism/internal/api.wsWriter(0xc002a9a000, 0xc0021b52f0, 0x24)
	/Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:103 +0x454
created by github.com/photoprism/photoprism/internal/api.Websocket.func1
	/Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:146 +0x236
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>