<bug id='362' author='fdw' open_date='2020-06-19T18:11:35Z' closed_time='2020-06-26T18:53:30Z'>
	<summary>Frontend: Photo viewer requests wrong image size from backend</summary>
	<description>
I uploaded several raw files to my local photoprism installation. When I try to view the full size on my larger monitor (but with less dpi, resolution 2560x1440), only a very small file (720_fit) is shown. When I view the same image on a smaller display with high dpi *resolution 3840x2160), the full image (3840_fit) is chosen.
Ideally, I would expect the largest size to open on both screens. At least, I would like an option to show a larger size.
Version: Latest from Docker.
	</description>
	<comments>
		<comment id='1' author='fdw' date='2020-06-20T12:41:15Z'>
		What are your thumb related settings in docker-compose.yml?
		</comment>
		<comment id='2' author='fdw' date='2020-06-20T13:16:02Z'>
		I had not changed anything, so they should have been PHOTOPRISM_THUMB_SIZE=2048 and PHOTOPRISM_THUMB_LIMIT=3840. I have since created a new Docker container with PHOTOPRISM_THUMB_SIZE=3840, but the behavior persists.
		</comment>
		<comment id='3' author='fdw' date='2020-06-23T08:57:39Z'>
		That's really strange. I'm using a DELL U2515H (2560 x 1440) for development and have no issues whatsoever. Might also be an issue with metadata (our indexer gets width and height from Exif and XMP), but you mentioned that it's working on a different screen... so not sure. Maybe someone from our community has time to debug this?
		</comment>
		<comment id='4' author='fdw' date='2020-06-23T09:18:02Z'>
		PS: Please let us know what browsers and operating systems you are using. Could be a frontend (JavaScript) issue.
		</comment>
		<comment id='5' author='fdw' date='2020-06-23T18:53:06Z'>
		I'm using the latest Firefox on Linux.
If you can give me a hint where in this code this happens, I might have a look.
		</comment>
		<comment id='6' author='fdw' date='2020-06-23T19:26:22Z'>
		After playing with it, I have two interesting observations: On the screen with the small size (coincidentally, also a Dell, possibly the same series), there is no "zoom" button shown. On the other screen, there is.
If I make the browser smaller on the "wrong" screen, either height or width, after some threshold, a larger picture will be shown.
Could it be that this code is the culprit (viewer.js):
&lt;denchmark-code&gt;for (let i = 0; i &lt; thumbs.length; i++) {
    if (thumbs[i].Width &gt;= viewportWidth || thumbs[i].Height &gt;= viewportHeight) {
        return thumbs[i].Name;
    }
}

return "fit_720";
&lt;/denchmark-code&gt;

I suspect that my screen is too large (always larger than the possible sizes), so it defaults to fit_720.
		</comment>
		<comment id='7' author='fdw' date='2020-06-23T22:15:52Z'>
		You have two different screens connected to the same computer? Can you also test with Chrome to see if it behaves differently?
The code is supposed to return the thumb with the best resolution. Obviously viewportWidth might be reported wrong when there are multiple screens.
		</comment>
		<comment id='8' author='fdw' date='2020-06-24T05:47:55Z'>
		
You have two different screens connected to the same computer?

Yes, an external display and the built-in laptop display. Additionally, they have different scaling.

Can you also test with Chrome to see if it behaves differently?

I just installed Chromium and tested it. The behavior is about the same (external monitor: small image and no zoom button, built-in: large picture with zoom button), but Chromium chooses fit_2048 whereas Firefox chooses fit_3840.
		</comment>
		<comment id='9' author='fdw' date='2020-06-24T12:04:51Z'>
		Using &lt;denchmark-link:https://developer.mozilla.org/en-US/docs/Web/API/Screen/availHeight&gt;https://developer.mozilla.org/en-US/docs/Web/API/Screen/availHeight&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://developer.mozilla.org/en-US/docs/Web/API/Screen/availWidth&gt;https://developer.mozilla.org/en-US/docs/Web/API/Screen/availWidth&lt;/denchmark-link&gt;
 might help. If those are virtual pixels, thumbs will be too small for retina screens though. On the other hand, window.devicePixelRatio is probably fixed in most cases, so using a second display with a different ratio leads to bad resolution. Needs to be tested.
		</comment>
		<comment id='10' author='fdw' date='2020-06-25T17:15:10Z'>
		I looked at window.screen.availHeight vs window.innerHeight * devicePixelRatio (same for width), and the latter one results in much larger values on both screens. Is there anything else I can try for you?
Another idea, based on the code snippet above: If I understand this right, it takes the first thumb that is larger than the screen in one dimension. If it can't find one that is larger, it defaults to fit_720. Would it make sense to use the largest thumb as a fallback, seeing as it tries to be as large as possible?
		</comment>
		<comment id='11' author='fdw' date='2020-06-26T15:02:51Z'>
		Changed it as suggested. Let me know of this works! New Docker images available soon.
		</comment>
		<comment id='12' author='fdw' date='2020-06-26T17:20:53Z'>
		Yes, it works beautifully :) Thank you!
		</comment>
	</comments>
</bug>