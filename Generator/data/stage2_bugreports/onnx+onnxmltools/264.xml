<bug id='264' author='arielbernal' open_date='2019-03-14T21:35:48Z' closed_time='2019-03-19T17:08:41Z'>
	<summary>Error converting model from keras using tensorflow-gpu backend</summary>
	<description>
$pip list
onnx 1.4.1
onnxmltools 1.3.2
tensorflow 1.13.1
tensorflow-gpu 1.13.1
$conda list
keras 2.2.4
import onnxmltools
from keras.layers import Input, Dense, Add
from keras.models import Model

# N: batch size, C: sub-model input dimension, D: final model's input dimension
N, C, D = 2, 3, 3

# Define a sub-model, it will become a part of our final model
sub_input1 = Input(shape=(C,))
sub_mapped1 = Dense(D)(sub_input1)
sub_model1 = Model(inputs=sub_input1, outputs=sub_mapped1)

# Define another sub-model, it will become a part of our final model
sub_input2 = Input(shape=(C,))
sub_mapped2 = Dense(D)(sub_input2)
sub_model2 = Model(inputs=sub_input2, outputs=sub_mapped2)

# Define a model built upon the previous two sub-models
input1 = Input(shape=(D,))
input2 = Input(shape=(D,))
mapped1_2 = sub_model1(input1)
mapped2_2 = sub_model2(input2)
sub_sum = Add()([mapped1_2, mapped2_2])
keras_model = Model(inputs=[input1, input2], output=sub_sum)

# Convert it! The target_opset parameter is optional.
onnx_model = onnxmltools.convert_keras(keras_model, target_opset=7) 
Error:
&lt;denchmark-code&gt;C:\Users\intel\Anaconda3\envs\denoiser\lib\site-packages\ipykernel_launcher.py:24: UserWarning: Update your `Model` call to the Keras 2 API: `Model(inputs=[&lt;tf.Tenso..., outputs=Tensor("ad...)`
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-7-13c32f7fd452&gt; in &lt;module&gt;
     25 
     26 # Convert it! The target_opset parameter is optional.
---&gt; 27 onnx_model = onnxmltools.convert_keras(keras_model, target_opset=7)

~\AppData\Roaming\Python\Python36\site-packages\onnxmltools\convert\main.py in convert_keras(model, name, initial_types, doc_string, target_opset, targeted_onnx, channel_first_inputs, custom_conversion_functions, custom_shape_calculators, default_batch_size)
     30 
     31     from keras2onnx import convert_keras as convert
---&gt; 32     return convert(model, name, doc_string, target_opset, channel_first_inputs)
     33 
     34 

~\AppData\Roaming\Python\Python36\site-packages\keras2onnx\main.py in convert_keras(model, name, doc_string, target_opset, channel_first_inputs, debug_mode, custom_op_conversions)
     92     tf_graph_def = tf.graph_util.convert_variables_to_constants(sess, sess.graph_def, output_node_names=out_node)
     93     return _convert_tf(name, tf_graph_def, op_dict, output_names, target_opset, doc_string, channel_first_inputs,
---&gt; 94                        debug_mode, custom_op_conversions)
     95 
     96 

~\AppData\Roaming\Python\Python36\site-packages\keras2onnx\main.py in _convert_tf(name, tf_graph_def, keras_op_table, output_names, target_opset, doc_string, channel_first_inputs, debug_mode, custom_op_conversions)
     64         topology.compile()
     65 
---&gt; 66         return convert_topology(topology, name, doc_string, target_opset, channel_first_inputs)
     67 
     68 

~\AppData\Roaming\Python\Python36\site-packages\keras2onnx\topology.py in convert_topology(topology, model_name, doc_string, target_opset, channel_first_inputs)
    232         scope = next(scope for scope in topology.scopes if scope.name == operator.scope)
    233         keras2onnx_logger().debug("Converting the operator (%s): %s" % (operator.full_name, operator.type))
--&gt; 234         get_converter(operator.type)(scope, operator, container)
    235 
    236     # When calling ModelComponentContainer's add_initializer(...), nothing is added into the input list. However, in

~\AppData\Roaming\Python\Python36\site-packages\keras2onnx\wrapper.py in tfnode_convert(varset, operator, container)
     51     # create input_tensor_values, initializers
     52     # if initilizer is not used as input by any node, then it will be ignored
---&gt; 53     initializers = [i for i in list(g.initializers.values()) if i.name in all_inputs]
     54     for init_tensor_ in initializers:
     55         init_tensor_.name = varset.get_local_variable_or_declare_one(init_tensor_.name).full_name.encode('utf-8')

AttributeError: 'Graph' object has no attribute 'initializers'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='arielbernal' date='2019-03-15T19:14:20Z'>
		I do have the same problem.
		</comment>
		<comment id='2' author='arielbernal' date='2019-03-16T09:12:47Z'>
		same error
		</comment>
		<comment id='3' author='arielbernal' date='2019-03-18T23:10:25Z'>
		&lt;denchmark-link:https://github.com/arielbernal&gt;@arielbernal&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/cyroxx&gt;@cyroxx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/cwx123147&gt;@cwx123147&lt;/denchmark-link&gt;

We just update the latest keras2onnx, please re install. Thanks. Below is my suggested workaround which you can ignore.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Please install keras2onnx through the GitHub one here &lt;denchmark-link:https://github.com/onnx/keras-onnx.git&gt;https://github.com/onnx/keras-onnx.git&lt;/denchmark-link&gt;

Then it should work.
The reason is that keras2onnx uses an API in tensorflow-onnx, and their API made a breaking change, which causes this AttributeError. We fix it in keras2onnx, will publish a new pypi soon. So please install keras2onnx from GitHub as mentioned above.
		</comment>
		<comment id='4' author='arielbernal' date='2019-03-18T23:23:39Z'>
		&lt;denchmark-link:https://github.com/arielbernal&gt;@arielbernal&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/cyroxx&gt;@cyroxx&lt;/denchmark-link&gt;
 I just uploaded the latest keras converter which works with the latest tensorflow-onnx into pypi.org.
		</comment>
		<comment id='5' author='arielbernal' date='2019-03-19T17:08:41Z'>
		&lt;denchmark-link:https://github.com/jiafatom&gt;@jiafatom&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/cyroxx&gt;@cyroxx&lt;/denchmark-link&gt;
 Awesome. confirmed working!
		</comment>
	</comments>
</bug>