<bug id='647' author='YaYaB' open_date='2019-10-08T15:41:35Z' closed_time='2019-10-21T09:33:33Z'>
	<summary>Infinite prediction call (prediction stuck because of data retrieval)</summary>
	<description>
&lt;denchmark-h:h4&gt;Configuration&lt;/denchmark-h&gt;


Version of DeepDetect:

Locally compiled on Ubuntu 16.04 LTS


Commit (shown by the server when starting):

Branch Master, 3d65432


GPUS:

1 x Nvidia GTX Titan X (Maxwell)



&lt;denchmark-h:h4&gt;Your question / the problem you're facing:&lt;/denchmark-h&gt;

I have an issue when I want to make a prediction on an image when this image is too heavy or when it is very slow to retrieve.
&lt;denchmark-h:h4&gt;Error message (if any) / steps to reproduce the problem:&lt;/denchmark-h&gt;


Launch Dede

Api call
&lt;denchmark-code&gt;./dede --port 8080
&lt;/denchmark-code&gt;

Serveur log output
&lt;denchmark-code&gt;DeepDetect [ commit 3d65432ecba9f766527aa058c15c6ac199ae9d2a ]
[2019-10-08 15:21:36.337] [api] [info] Running DeepDetect HTTP server on localhost:8080
&lt;/denchmark-code&gt;


Launch netcat to simulate and image that can not be retrieved.

&lt;denchmark-code&gt;nc -l -p 8888 
&lt;/denchmark-code&gt;


Create service

Api call
&lt;denchmark-code&gt;curl -X PUT "http://localhost:8080/services/imageserv" -d '{
      "mllib":"caffe",
      "description":"image classification service",
      "type":"supervised",
      "parameters":{
        "input":{
          "connector":"image",
          "width":224,
          "height":224
        },
        "mllib":{
          "nclasses":101
        }
      },
      "model":{
        "repository":"TODO/classification_model"
      }
    }'
&lt;/denchmark-code&gt;

Serveur log output
&lt;denchmark-code&gt;{"status":{"code":201,"msg":"Created"}}
&lt;/denchmark-code&gt;


Create Prediction

Api call
&lt;denchmark-code&gt;curl -X POST "http://localhost:8080/predict" -d '{
      "service":"imageserv",
      "parameters":{
        "input":{
          "width":224,
          "height":224
        },
        "output":{
          "best":3
        }
      },
      "data":["http://127.0.0.1:8888"]
    }'
&lt;/denchmark-code&gt;

Serveur log output:
&lt;denchmark-code&gt;It's empty, nothing happens because it is still trying to download the image
&lt;/denchmark-code&gt;

The issue comes from the fact that no timeout is indicated for the retrieve of the data.
After checking a bit the code I found here 
 that we try to read the element from the .
That lead us to 
 where we see that we do an  to retrieve the data.
Then here 
 we see that no timeout is indicated.
Moreover the default timeout is 0 and it means that it never times out (&lt;denchmark-link:https://curl.haxx.se/libcurl/c/CURLOPT_TIMEOUT.html&gt;https://curl.haxx.se/libcurl/c/CURLOPT_TIMEOUT.html&lt;/denchmark-link&gt;
)
I've modified this behavior by setting a timeout of 10s for testing and it resolved my issue.
I set the timeout between L49 and L50 of &lt;denchmark-link:https://github.com/jolibrain/deepdetect/blob/9978230e916a9e30a0be4efe2c6678f7139601d9/src/utils/httpclient.hpp&gt;https://github.com/jolibrain/deepdetect/blob/9978230e916a9e30a0be4efe2c6678f7139601d9/src/utils/httpclient.hpp&lt;/denchmark-link&gt;
 by inserting the following:
&lt;denchmark-code&gt;request.setOpt(cURLpp::Options::Timeout(10)); 
&lt;/denchmark-code&gt;

The server log output is then:
&lt;denchmark-code&gt;{"status":{"code":400,"msg":"BadRequest","dd_code":1005,"dd_msg":"Service Input Error: Operation timed out after 10000 milliseconds with 0 bytes received"}}
&lt;/denchmark-code&gt;

It would be nice to be able to set this timeout as a parameter in the service creation request.
	</description>
	<comments>
		<comment id='1' author='YaYaB' date='2019-10-14T15:41:41Z'>
		Thanks. Curl has a default 300 seconds timeout (5 mins) on connect phase (see &lt;denchmark-link:https://curl.haxx.se/libcurl/c/CURLOPT_CONNECTTIMEOUT.html&gt;https://curl.haxx.se/libcurl/c/CURLOPT_CONNECTTIMEOUT.html&lt;/denchmark-link&gt;
) but no default timeout on the transfer phase. PR &lt;denchmark-link:https://github.com/jolibrain/deepdetect/pull/650&gt;#650&lt;/denchmark-link&gt;
 adds configurable timeout on the transfer phase, at two granularities: service creation and sample prediction.
Interested if you could test the PR, cc &lt;denchmark-link:https://github.com/YaYaB&gt;@YaYaB&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='YaYaB' date='2019-10-15T09:40:46Z'>
		Thanks &lt;denchmark-link:https://github.com/beniz&gt;@beniz&lt;/denchmark-link&gt;
 for the quick fix
		</comment>
	</comments>
</bug>