<bug id='399' author='YaYaB' open_date='2018-04-20T07:37:46Z' closed_time='2018-04-23T10:11:05Z'>
	<summary>Service launched with vocab in folder makes core dump</summary>
	<description>
I have an issue when I launch a service on an existing folder where there is a file vocab.dat
&lt;denchmark-h:h4&gt;Configuration&lt;/denchmark-h&gt;


Version of DeepDetect:

Locally compiled on Ubuntu 16.04 LTS


Commit (shown by the server when starting):

Branch Master, 3d2b9eb


GPUS:

1 x Nvidia GTX Titan X (Maxwell)



&lt;denchmark-h:h4&gt;Your question / the problem you're facing:&lt;/denchmark-h&gt;

After I've trained a model based on the connector svm I want to make a prediction. However when I launch the service using this model as repository I obtain a core dump. This is due to the presence of the connector svm. Any other connector seems to work.
First I launch DeepDetect
INPUT
&lt;denchmark-code&gt;INPUT
./dede --port 8080
&lt;/denchmark-code&gt;

OUTPUT
&lt;denchmark-code&gt;DeepDetect [ commit 3d2b9eb8b306c587704cff777d52f723dc642b1a ]
[2018-04-20 07:20:26.685] [api] [info] Running DeepDetect HTTP server on localhost:8080
&lt;/denchmark-code&gt;

Second, I create the service that I name svm_test.
INPUT
&lt;denchmark-code&gt;curl -X PUT 'http://localhost:8080/services/svm_test' -d '{"mllib":"caffe","description":"svm_test classifier","type":"supervised","parameters":{"input":{"connector":"svm"},"mllib":{"nclasses":2}},"model":{"repository":"/home/svm_test/dd_models/model_svm"}}'
&lt;/denchmark-code&gt;

I obtain the following output
OUTPUT
&lt;denchmark-code&gt;curl: (52) Empty reply from server
&lt;/denchmark-code&gt;

and
&lt;denchmark-code&gt;[1]    4331 segmentation fault (core dumped)  ./main/dede
&lt;/denchmark-code&gt;

Now if I remove the vocab.dat from the folder it successfully load the model
&lt;denchmark-code&gt;[2018-04-20 07:24:44.387] [api] [info] Running DeepDetect HTTP server on localhost:8080
[2018-04-20 07:24:46.254] [svm_test] [error] BOUM
[2018-04-20 07:24:47.378] [caffe] [info] Initializing net from parameters: 
[2018-04-20 07:24:47.378] [caffe] [info] Creating layer / name=inputl / type=MemorySparseData
[2018-04-20 07:24:47.378] [caffe] [info] Creating Layer inputl
[2018-04-20 07:24:47.378] [caffe] [info] inputl -&gt; data
[2018-04-20 07:24:47.379] [caffe] [info] inputl -&gt; label
....
[2018-04-20 07:24:48.319] [api] [info] 127.0.0.1 "PUT /services/svm_test" 201 2065
&lt;/denchmark-code&gt;

But then without the vocab.dat I can not make any prediction.
Another way to test is to just create a service using a template and then add a vocab.dat to the folder and launch the service again.
Create the service
INPUT
&lt;denchmark-code&gt;curl -X PUT "http://localhost:8080/services/myserv" -d "{\"mllib\":\"caffe\",\"description\":\"example classification service\",\"type\":\"supervised\",\"parameters\":{\"input\":{\"connector\":\"svm\"},\"mllib\":{\"template\":\"mlp\",\"nclasses\":9,\"layers\":[512,512,512],\"activation\":\"prelu\"}},\"model\":{\"repository\":\"/home/svm_test/test\"}}"
&lt;/denchmark-code&gt;

OUTPUT
&lt;denchmark-code&gt;[2018-04-20 07:27:41.314] [myserv] [info] instantiating model template mlp
[2018-04-20 07:27:41.314] [myserv] [info] source=templates/caffe//mlp/
[2018-04-20 07:27:41.314] [myserv] [info] dest=/home/svm_test/test/mlp.prototxt
[2018-04-20 07:27:41.317] [api] [info] 127.0.0.1 "PUT /services/myserv" 201 1160
&lt;/denchmark-code&gt;

Then simply create an empty file vocab.dat in the folder
&lt;denchmark-code&gt;touch /home/svm_test/test/vocab.dat
&lt;/denchmark-code&gt;

And launch the service again using the following command
INPUT
&lt;denchmark-code&gt;curl -X PUT "http://localhost:8080/services/myserv" -d "{\"mllib\":\"caffe\",\"description\":\"example classification service\",\"type\":\"supervised\",\"parameters\":{\"input\":{\"connector\":\"svm\"},\"mllib\":{\"nclasses\":9}},\"model\":{\"repository\":\"/home/svm_test/test\"}}" 
&lt;/denchmark-code&gt;

OUTPUT
&lt;denchmark-code&gt;[1]    4674 segmentation fault (core dumped)  ./main/dede
&lt;/denchmark-code&gt;

I have taken a look  at the commits. And everything was working well until this commit 06de88e
Then it fails for the commit
fcedd40
I've taken a look at the different version of Caffe, it may be due to the new logs.
There are 9 commits different in those version of Caffe
&lt;denchmark-link:https://github.com/fantes/caffe/commits/master&gt;https://github.com/fantes/caffe/commits/master&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/fantes/caffe/commits/multi_label_soft&gt;https://github.com/fantes/caffe/commits/multi_label_soft&lt;/denchmark-link&gt;

They are some additional content in master between those two commits


4ff7f1a1e29faf0bed69b3050ae4c27503dc949f


359fc2e379cb0e6a4dbe90804ce3c25e88521ef6


	</description>
	<comments>
		<comment id='1' author='YaYaB' date='2018-04-20T09:17:01Z'>
		OK thanks for the thorough report. Can you run through the crash with gdb:
&lt;denchmark-code&gt;libtool --mode=execute gdb ./dede
&lt;/denchmark-code&gt;

Then after the crash, use bt to get the backtrace. You can report it in the gist, that would be very useful.
		</comment>
		<comment id='2' author='YaYaB' date='2018-04-20T09:51:55Z'>
		Here is what obtained using gdb to debug it
&lt;denchmark-link:https://github.com/beniz/deepdetect/files/1931641/gdb.txt&gt;gdb.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='YaYaB' date='2018-04-21T09:37:31Z'>
		Thanks for the thorough report, this should be fixed by &lt;denchmark-link:https://github.com/jolibrain/deepdetect/pull/400&gt;#400&lt;/denchmark-link&gt;
. All unit tests were still passing, so this means our tests are not thorough enough.
		</comment>
		<comment id='4' author='YaYaB' date='2018-04-21T17:04:41Z'>
		I confirm that it has resolved the issue on my side
		</comment>
	</comments>
</bug>