<bug id='177' author='nrinaudo' open_date='2016-09-13T12:19:05Z' closed_time='2016-09-16T12:36:31Z'>
	<summary>`predictions` is an object when predicting over a single sample, an array when predicting over many</summary>
	<description>
Ok, this one is a bit hard to describe but very clear with an example.
When submitting an array of a single inline document for prediction, DeepDetect's answer will not contain a JSON array, but a JSON object. This makes client-side parsing rather cumbersome.
Here's a concrete example:
Request:
&lt;denchmark-code&gt;curl -XPOST "http://localhost:8080/predict" -d "{\"service\":\"foobar\",\"data\":[\"0:-1.15554170033642 1:-1.323809487778449"]}"
&lt;/denchmark-code&gt;

Response:
{  
   "status":{  
      "code":200,
      "msg":"OK"
   },
   "head":{  
      "method":"/predict",
      "service":"foobar",
      "time":9.0
   },
   "body":{  
      "predictions":{  
         "uri":"0",
         "classes":{  
            "last":true,
            "prob":0.8474653959274292,
            "cat":"1"
         }
      }
   }
}
Note how body.predictions is an object rather than an array.
	</description>
	<comments>
		<comment id='1' author='nrinaudo' date='2016-09-15T16:52:31Z'>
		This should be fixed by PR &lt;denchmark-link:https://github.com/jolibrain/deepdetect/pull/182&gt;#182&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='nrinaudo' date='2016-09-16T12:36:31Z'>
		Fixed by merged PR &lt;denchmark-link:https://github.com/jolibrain/deepdetect/pull/182&gt;#182&lt;/denchmark-link&gt;
 that led to an overall long-due improvement of the internal data structures. Thanks.
		</comment>
	</comments>
</bug>