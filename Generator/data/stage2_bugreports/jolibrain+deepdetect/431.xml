<bug id='431' author='Damien-Belair' open_date='2018-06-05T13:04:20Z' closed_time='2018-06-12T09:26:20Z'>
	<summary>Error "dd_code":1007 while training an image classifier</summary>
	<description>
&lt;denchmark-h:h4&gt;Configuration&lt;/denchmark-h&gt;

I'm using docker version of deepdetect with Gpu locally on ubuntu 16.04.
&lt;denchmark-h:h4&gt;Your question / the problem you're facing:&lt;/denchmark-h&gt;

I'm facing a problem with the POST request for the training.
&lt;denchmark-h:h4&gt;Error message (if any)&lt;/denchmark-h&gt;

[api] [error] {"code":500,"msg":"InternalError","dd_code":1007,"dd_msg":"vector::_M_range_check: __n (which is 1) &gt;= this-&gt;size() (which is 1)"}
&lt;denchmark-h:h4&gt;Steps to reproduce the problem :&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.deepdetect.com/tutorials/train-imagenet/&gt;https://www.deepdetect.com/tutorials/train-imagenet/&lt;/denchmark-link&gt;

I've download the ImageNet dataset and remove gif from it.
Create the service with the PUT request:

And got the right response:

Then I do the POST request:

And got response:

Unfortunately nothing is working on my computer, so I checked it to get information (GET request) and got this:

meanwhile my docker terminal reveal the error message.
Anyone got an idea?
	</description>
	<comments>
		<comment id='1' author='Damien-Belair' date='2018-06-05T13:13:24Z'>
		Your data directory is the same as your model directory and that shouldn't be. Also you may want to make sure you have the data locally into your docker or mounted from a volume on the host. Read the dd docker documentation for this.
		</comment>
		<comment id='2' author='Damien-Belair' date='2018-06-06T13:31:54Z'>
		Thank you for your responsiveness, I've modified the path and I had already checked if my data were into the docker and it's fine. I'm still facing the same error message .
		</comment>
		<comment id='3' author='Damien-Belair' date='2018-06-06T14:17:56Z'>
		Are you using nvidia docker in order to get access to your gpu ?
		</comment>
		<comment id='4' author='Damien-Belair' date='2018-06-06T15:13:36Z'>
		Yes, I'm using it.
		</comment>
		<comment id='5' author='Damien-Belair' date='2018-06-06T16:19:12Z'>
		Then you may want to try a cpu only instance and if it works, then your issue is with your GPU + docker setup.
		</comment>
		<comment id='6' author='Damien-Belair' date='2018-06-06T16:19:20Z'>
		Then you may want to try a cpu only instance and if it works, then your issue is with your GPU + docker setup.
		</comment>
		<comment id='7' author='Damien-Belair' date='2018-06-07T12:32:34Z'>
		I've tried with cpu but I'm still facing the same problem.
		</comment>
		<comment id='8' author='Damien-Belair' date='2018-06-11T03:06:08Z'>
		I'm having the same issue with using deepdetect_cpu. I'm using ubuntu 16.04 also.
		</comment>
		<comment id='9' author='Damien-Belair' date='2018-06-11T05:54:10Z'>
		Please provide all API calls, how you've started the docker container as well as the listing of relevant directories
		</comment>
		<comment id='10' author='Damien-Belair' date='2018-06-12T03:26:45Z'>
		I took the following procedure when I encountered this issue. I followed &lt;denchmark-link:https://www.deepdetect.com/tutorials/train-imagenet/&gt;DD training image classifier service tutorial&lt;/denchmark-link&gt;
 also.


Pulled the docker_cpu image by running the following command:
docker pull beniz/deepdetect_cpu
Then started the container by using the following command:
docker run -d -p 8080:8080 beniz/deepdetect_cpu


Secure-shelled into the container via bash using docker exec -it container_name bash, and created directory called "models" and "ilsvrc12" under /opt/deepdetect/build/main directory. Then created "imgnet" directory under "models" directory.


Downloaded image data on the local computer and converted gif to jpg with using mogrify  command, and removed gif files that couldn't be converted. Then copied 5 random folders (n01440764, n01443537,  n01484850, n01491361, n01494475) to ilsvrc12 directory by using the following command
docker cp folder_name container_name:/opt/deepdetect/build/main/ilsvrc12.


Started DD and created the machine learning service called imageserv by following curl call:
curl -X PUT "http://localhost:8080/services/imageserv" -d '{ "mllib":"caffe", "description":"image classification service", "type":"supervised", "parameters":{ "input":{ "connector":"image", "width":224, "height":224 }, "mllib":{ "template":"googlenet", "nclasses":5 } }, "model":{ "templates":"../templates/caffe/", "repository":"models/imgnet" } }'
Received follwoing status back:
 "status": { "code": 201, "msg": "Created" }


Posted following training call:
curl -X POST "http://localhost:8080/train" -d '{ "service":"imageserv", "async":true, "parameters":{ "mllib":{ "gpu":true, "net":{ "batch_size":32 }, "solver":{ "test_interval":500, "iterations":30000, "base_lr":0.001, "stepsize":1000, "gamma":0.9 } }, "input":{ "connector": "image", "test_split":0.1, "shuffle":true, "width":224, "height":224 }, "output":{ "measure":["acc","mcll","f1"] } }, "data":["ilsvrc12"] }' 
And received following status:
"head": { "job": 1, "method": "/train", "status": "running" }, "status": { "code": 201, "msg": "Created" }


When checked the status of training by calling following command:
curl -X GET "http://localhost:8080/train?service=imageserv&amp;job=1"
got following status back:
  "head": { "job": 1, "method": "/train", "status": "error" }, "status": { "code": 200, "msg": "OK" }
and docker container log said:


&lt;denchmark-code&gt;ERROR - service imageserv training status call failed
ERROR - {"code":500,"msg":"InternalError","dd_code":1007,"dd_msg":"vector::_M_range_check: __n (which is 1) &gt;= this-&gt;size() (which is 1)"}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='Damien-Belair' date='2018-06-12T05:54:19Z'>
		OK, thanks for the thorough report, I can now reproduce.
		</comment>
		<comment id='12' author='Damien-Belair' date='2018-06-12T06:10:51Z'>
		So, it's actually the documentation that should have been updated. You need to use the db:true  in the input JSON object as a parameter to tell the server it needs to build databases out of the raw dataset.
The change originates from the fact that db:true was mandatory with image training, but it is not anymore (e.g. for segmentation and multi-class tasks).
Below are the correct calls:
&lt;denchmark-code&gt;curl -X PUT "http://localhost:8080/services/imageserv" -d '{ "mllib":"caffe", "description":"image classification service", "type":"supervised", "parameters":{ "input":{ "connector":"image", "width":224, "height":224, "db":true }, "mllib":{ "template":"googlenet", "nclasses":5 } }, "model":{ "templates":"../templates/caffe/", "repository":"models/imgnet" } }'
&lt;/denchmark-code&gt;

and training:
&lt;denchmark-code&gt;curl -X POST "http://localhost:8080/train" -d '{ "service":"imageserv", "async":true, "parameters":{ "mllib":{ "gpu":true, "net":{ "batch_size":32 }, "solver":{ "test_interval":500, "iterations":30000, "base_lr":0.001, "stepsize":1000, "gamma":0.9 } }, "input":{ "connector": "image", "test_split":0.1, "shuffle":true, "width":224, "height":224, "db":true }, "output":{ "measure":["acc","mcll","f1"] } }, "data":["ilsvrc12"] }'
&lt;/denchmark-code&gt;

We'll update the tutorial as well.
		</comment>
		<comment id='13' author='Damien-Belair' date='2018-06-12T06:15:12Z'>
		Tutorial has been updated. Please close the issue if this fixes your initial problem.
		</comment>
		<comment id='14' author='Damien-Belair' date='2018-06-12T09:26:16Z'>
		It works for me, thank you beniz and Sazanaizu33 for your attention. I close the issue.
		</comment>
		<comment id='15' author='Damien-Belair' date='2018-09-18T07:34:39Z'>
		&lt;denchmark-link:https://github.com/beniz&gt;@beniz&lt;/denchmark-link&gt;

Tutorial has not been updated (&lt;denchmark-link:https://deepdetect.com/tutorials/train-imagenet&gt;https://deepdetect.com/tutorials/train-imagenet&lt;/denchmark-link&gt;
). there is no db:true argument on the sample code. please update the tutorial.
		</comment>
	</comments>
</bug>