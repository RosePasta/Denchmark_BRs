<bug id='717' author='dschissler' open_date='2020-07-27T18:23:36Z' closed_time='2020-10-22T07:16:48Z'>
	<summary>There is a problem with blobFromImages regarding "scalefactor"</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I'm running ./dnn-pose-detection 0 dnn-pose-detection-res/pose_iter_440000.caffemodel dnn-pose-detection-res/openpose_pose_coco.prototxt and its outputting the following error message.
&lt;denchmark-code&gt;[ WARN:0] global /tmp/opencv/opencv-4.3.0/modules/videoio/src/cap_gstreamer.cpp (935) open OpenCV | GStreamer warning: Cannot query video position: status=0, value=-1, duration=-1
Start reading device: 0
terminate called after throwing an instance of 'cv::Exception'
  what():  OpenCV(4.3.0) /tmp/opencv/opencv-4.3.0/modules/dnn/src/dnn.cpp:333: error: (-2:Unspecified error) in function 'void cv::dnn::dnn4_v20200310::blobFromImages(cv::InputArrayOfArrays, cv::OutputArray, double, cv::Size, const Scalar&amp;, bool, bool, int)'
&gt; Scaling is not supported for CV_8U blob depth (expected: 'scalefactor == 1.0'), where
&gt;     'scalefactor' is 0.00392157
&gt; must be equal to
&gt;     '1.0' is 1

SIGABRT: abort
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Steps to Reproduce&lt;/denchmark-h&gt;


Setup Ubuntu 20.04.
Build the OpenCL from the directions on the homepage.
Run the ddn-pose-detection example with ./dnn-pose-detection 0 dnn-pose-detection-res/pose_iter_440000.caffemodel dnn-pose-detection-res/openpose_pose_coco.prototxt
See the error.

I want to add that the facedetect and fingers algorithm works.  The dnn examples don't work.
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;

Ubuntu 20.04
&lt;denchmark-code&gt;Linux hostnamehere 5.4.0-26-generic #30-Ubuntu SMP Mon Apr 20 16:58:30 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;go version go1.14.5 linux/amd64
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;gocv version: 0.23.0
opencv lib version: 4.3.0
&lt;/denchmark-code&gt;

I install OpenCV via the make setup provided by gocv.io/x/gocv
I did not run env.sh or env.cmd.
	</description>
	<comments>
		<comment id='1' author='dschissler' date='2020-08-12T13:41:03Z'>
		Try adding the code below before you call BlobFromImage:
&lt;denchmark-code&gt; img.ConvertTo(&amp;img, gocv.MatTypeCV32F)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='dschissler' date='2020-08-14T08:04:09Z'>
		&lt;denchmark-link:https://github.com/nibbleshift&gt;@nibbleshift&lt;/denchmark-link&gt;
, while this idea will work, the actual problem seems to be here:



gocv/dnn.cpp


         Line 115
      in
      6240320






 int ddepth = image-&gt;depth(); 





based on the ddepth flag, images should be converted to float (or not) internally, and this line overrides the default CV_32F.
so, the bad thing is, if we have a scalefactor of 1.0, ppl won't even realize, that they're sending CV_8U images into the network
		</comment>
		<comment id='3' author='dschissler' date='2020-08-14T17:24:45Z'>
		Hey everyone, this is far beyond me.  I haven't actually started programming in Go yet.  I was only researching the technologies for a passion project when I ran into this from the copy-pasted example.  My impression from reading past issues is that people have been running into this exact bug or a very similar one for quite a while.  It seems that some of the issues were simply closed due to inactivity.  If my assessment is correct then countless people have simply turned away from using this library after some of the examples didn't work.
		</comment>
		<comment id='4' author='dschissler' date='2020-09-08T19:55:01Z'>
		Hello, everyone.
I just added this commit to the  branch based on the comment from &lt;denchmark-link:https://github.com/berak&gt;@berak&lt;/denchmark-link&gt;
 which appears to have addressed the core issue.
I am going to mark this issue with "next-release" and close it once it makes it into our next update.
Thank you everyone!
		</comment>
		<comment id='5' author='dschissler' date='2020-10-22T07:16:48Z'>
		This has now been released so closing. Thanks!
		</comment>
	</comments>
</bug>