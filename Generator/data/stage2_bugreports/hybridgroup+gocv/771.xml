<bug id='771' author='squizzling' open_date='2020-12-05T11:17:00Z' closed_time='2021-01-11T08:19:03Z'>
	<summary>matprofile does not track Split() mats</summary>
	<description>
When matprofile is enabled, gocv.Split() does not track the creation of mats.
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Because  allocates a  and sets each  &lt;denchmark-link:https://github.com/hybridgroup/gocv/blob/release/core.go#L1784-L1786&gt;directly&lt;/denchmark-link&gt;
, it bypasses the profiling code.
A similar pattern appears to be used in &lt;denchmark-link:https://github.com/hybridgroup/gocv/blob/release/dnn.go#L180-L183&gt;Net.ForwardLayers&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hybridgroup/gocv/blob/release/dnn.go#L373&gt;ImagesFromBlob&lt;/denchmark-link&gt;

ImagesFromBlob in particular looks like it might be a risk, because if the mats passed in the slice have a p, then it won't be released.
I have no direct knowledge of either of those last two being genuine problems, I just looked for writes to Mat.p in Goland.
&lt;denchmark-h:h2&gt;Steps to Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;package main

import (
        "bytes"
        "fmt"

        "gocv.io/x/gocv"
)

func PrintProfile(message string) {
        fmt.Printf(message, gocv.MatProfile.Count())
        b := bytes.Buffer{}
        gocv.MatProfile.WriteTo(&amp;b, 1)
        fmt.Print(b.String())
}

func CloseMat(mat gocv.Mat) {
        err := mat.Close()
        if err != nil {
                panic(err)
        }
}

func main() {
        mat := gocv.NewMatWithSize(5, 5, gocv.MatTypeCV8UC3)
        PrintProfile("count after creating 3 channel mat is %d\n")

        channels := gocv.Split(mat)
        PrintProfile("count after split is %d\n")

        for _, channel := range channels {
                CloseMat(channel)
        }
        PrintProfile("count after closing channels is %d\n")

        CloseMat(mat)
        PrintProfile("count after closing 3 channel mat is %d\n")
}
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;

Tested in hybridgroup/gocv@sha256:1a48836ce6b31adaaf45f5b85210d6f43e1eeadfd2d4c535c86d97beee42593b (latest at time of writing)
	</description>
	<comments>
		<comment id='1' author='squizzling' date='2020-12-12T19:22:01Z'>
		I can confirm that this is a bug. I already fixed this issue, as soon as tests are finished, I'll create a pull request. Thanks for reporting this issue.
		</comment>
		<comment id='2' author='squizzling' date='2020-12-12T22:16:51Z'>
		All tests passed, because of this issue many tests were corrected because of unclosed mats returned by Split function.
		</comment>
		<comment id='3' author='squizzling' date='2021-01-11T08:19:02Z'>
		This was released with v0.26.0 so now closing. Thank you everyone!
		</comment>
	</comments>
</bug>