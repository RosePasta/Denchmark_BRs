<bug id='705' author='darrenparkinson' open_date='2020-07-07T15:47:02Z' closed_time='2020-10-22T07:17:08Z'>
	<summary>net.GetLayerNames() results in an unexpected fault address when using yolov3</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Using net.GetLayerNames() results in an unexpected fault address when using yolov3.
When using the similarly named function in python, I receive a list containing a large number of layer names which include ['yolo_82', 'yolo_94', 'yolo_106'] and I would expect these to map to the relevant entries in net.GetUnconnectedOutLayers().
&lt;denchmark-h:h2&gt;Steps to Reproduce&lt;/denchmark-h&gt;


Create a new main.go with the following code:

package main

import (
	"fmt"

	"gocv.io/x/gocv"
)

func main() {
	weights := "yolo-coco/yolov3.weights"
	config := "yolo-coco/yolov3.cfg"

	net := gocv.ReadNet(weights, config)
	defer net.Close()

	window := gocv.NewWindow("Window")
	defer window.Close()

	fmt.Println(net.GetUnconnectedOutLayers()) // returns [974957576392 4611686018427388158 8444247448406953]
	fmt.Println(net.GetLayerNames()) // returns unexpected fault
}

Run go run main.go

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System and version: MacOS Catalina 10.15.5
OpenCV version used: 4.1.2
How did you install OpenCV? Brew
GoCV version used: 0.23.0
Go version: 1.14
Did you run the env.sh or env.cmd script before trying to go run or go build? No.

	</description>
	<comments>
		<comment id='1' author='darrenparkinson' date='2020-07-07T16:38:35Z'>
		Just reviewing the &lt;denchmark-link:https://gocv.io/getting-started/&gt;page here&lt;/denchmark-link&gt;
 I realise it now says:

To use GoCV, you must install OpenCV 4.3.0 on your system. We have instructions for Linux, macOS, and Windows.

(Did it always say that ðŸ˜¬ )
I'm currently doing the mammoth brew update and will let you know how that goes.
		</comment>
		<comment id='2' author='darrenparkinson' date='2020-07-07T17:10:10Z'>
		Well that broke everything.  Now getting this error instead:
&lt;denchmark-code&gt;/usr/local/go/pkg/tool/darwin_amd64/link: running clang++ failed: exit status 1
ld: warning: directory not found for option '-L/usr/local/Cellar/opencv/4.1.2/lib'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='darrenparkinson' date='2020-07-12T13:56:31Z'>
		Managed to get rid of that error by removing $GOHOME/src/gocv.io and starting again.
Still have the original error, now with the following versions:
gocv version: 0.23.0
opencv lib version: 4.3.0
&lt;denchmark-code&gt;unexpected fault address 0x85106b9a
fatal error: fault
[signal SIGSEGV: segmentation violation code=0x1 addr=0x85106b9a pc=0x405f8f5]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='darrenparkinson' date='2020-07-12T14:49:45Z'>
		At the risk of being stupid, if I call net.GetUnconnectedOutLayers() would you expect to get the same result each time?
When I run it in python, I get exactly the same numbers every time:
[[200]
 [227]
 [254]]
[[200]
 [227]
 [254]]
[[200]
 [227]
 [254]]
[[200]
 [227]
 [254]]
[[200]
 [227]
 [254]]
But in Go, it's giving me different values each time:
[974957576392 254 251]
[974957576392 254 0]
[974957576392 254 299132160]
[974957576392 -8070450532247928578 0]
[974957576392 254 0]
[974957576392 254 0]
Sometimes, running the following code will run, other times it will give a similar error as outlined:
layers := net.GetUnconnectedOutLayers()
for i, l := range layers {
	fmt.Println(i, l)
	l2 := net.GetLayer(l)
	fmt.Println(l2.GetName())
}
Seems like there may be a race condition or something?
		</comment>
		<comment id='5' author='darrenparkinson' date='2020-07-12T17:29:17Z'>
		Ok, spent last couple of hours on modifying this function, and nothing. Explain me this:
names := net.GetLayerNames() // returns unexpected fault
for _, n := range names {
	fmt.Println(len(n))
}
Output:
47437504
47437568
47437632
47437696
47437760
47437824
47437888
47437952
47438016
47438080
47438144
47438208
47438272
47438336
47438400
47438464
47438528
47438592
47438656
47438720
47438784
47438848
47438912
47438976
47439040
47439104
47439168
47439232
47439296
47439360
47439424
47439488
47439552
47439616
47439680
47439744
47439808
47439872
47439936
47440000
47440064
47440128
47440192
47440256
47440320
47440384
47440448
47440512
47440576
47440640
47440704
47440768
47440832
47440896
47440960
47441024
47441088
47441152
47441216
47441280
47441344
47441408
47441472
47441536
47441600
47441664
47441728
47441792
47441856
47441920
47441984
47442048
47442112
47442176
47442240
47442304
47442368
47442432
47442496
47442560
47442624
47442688
47442752
47442816
47442880
47442944
47443008
47443072
47443136
47443200
47443264
47443328
47443392
47443456
47443520
47443584
47443648
47443712
47443776
47443840
47443904
47443968
47444032
47444096
47444160
47444224
47444288
47444352
47444416
47444480
47444544
47444608
47444672
47444736
47444800
47444864
47444928
47444992
47445056
47445120
47445184
47445248
47445312
47445376
47445440
47445504
47445568
0
578552584285964087
47276448
47449888
4585236560758081104
4553338379825518071
-4766967426781873647
4503870999472890015
-4661880748254797054
-4805917218163420393
-4788835549118368195
-4668208214364908437
-4604664576916834271
-4656555633050628803
-4953815898765010089
-4663007288100738852
-4622266722982074430
-4606174425414676228
-4646082587221922001
4571038749654674247
0
0
2091368277002047
47780528
47450256
4
1155012806190366745
0
0
0
0
47450368
4
0
0
0
0
47450464
4
0
0
0
0
47450560
4
0
0
0
0
47450656
4
578552154789234487
47276448
0
0
47450688
4557108003905243014
4612331099944894832
-4858543121739179318
-4664673750455611480
-4664770694311104662
-4641449966780930520
-4692721052978492477
4458998229127302306
-4642067127811839104
-4783486987697378668
-4668979229682291148
-4657050181358142175
-4672684979014674305
-4663836113734329201
-4645355764943681473
-4656671395305833374
578552120697931527
47276448
0
47451024
-4644175711936394634
-4647460474989417604
-4598666820409110130
-4662213030529238944
-4690373864095032124
-4627820987568543458
-4643306051933720974
-4598139447826604920
-4643116141355809724
-4593108009634106682
-4567112565438324980
-4603559599920673319
-4701254418565763652
-4624053029927637937
4491278842570036003
4630950165440801868
-4743214505254472416
-4646450365267659957
-4645482868057754361
4501722961814801827
-4660828489850551474
4600354252944935026
-4671545515590157359
-4619555312263471130
-4671442410600245077
-4567003567768460538
-4588278945947262107
-4628687282459890144
-4661400210114892967
-4754859851683625872
4654272918027018103
-4609519646594298812
47451600
578552189417408263
47276448
47451616
4672035528405978142
4660320416705396124
4690131939335571630
4687215970069126186
4685015602474715989
4668868041562521345
4674502287035562607
4618897200892475070
4654571495602808868
4694276028683463491
4698195976633851255
4695940105215021570
4665321764379746880
4679176087646203491
4582698533614128853
And if I try to print any of names from slice, I got an error like &lt;denchmark-link:https://github.com/darrenparkinson&gt;@darrenparkinson&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='darrenparkinson' date='2020-09-08T17:57:45Z'>
		This was fixed by &lt;denchmark-link:https://github.com/hybridgroup/gocv/pull/732&gt;#732&lt;/denchmark-link&gt;
 and is now in the  branch so I will mark as "next-release".
		</comment>
		<comment id='7' author='darrenparkinson' date='2020-10-22T07:17:08Z'>
		This has now been released so closing. Thanks!
		</comment>
	</comments>
</bug>