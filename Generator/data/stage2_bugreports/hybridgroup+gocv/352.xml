<bug id='352' author='cwcaude' open_date='2018-11-09T21:40:55Z' closed_time='2018-11-28T18:01:09Z'>
	<summary>Undefined Reference Runtime error - Arch Linux</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

After running the installer or attempting to run any gocv program, I get this error:
&lt;denchmark-code&gt;go run main.go
# gocv.io/x/gocv
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_ReadNet':
../../dnn.cpp:4: undefined reference to `cv::dnn::experimental_dnn_v5::readNet(cv::String const&amp;, cv::String const&amp;, cv::String const&amp;)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_ReadNetFromCaffe':
../../dnn.cpp:9: undefined reference to `cv::dnn::experimental_dnn_v5::readNetFromCaffe(cv::String const&amp;, cv::String const&amp;)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_ReadNetFromTensorflow':
../../dnn.cpp:14: undefined reference to `cv::dnn::experimental_dnn_v5::readNetFromTensorflow(cv::String const&amp;, cv::String const&amp;)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_Close':
../../dnn.cpp:19: undefined reference to `cv::dnn::experimental_dnn_v5::Net::~Net()'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_SetInput':
../../dnn.cpp:27: undefined reference to `cv::dnn::experimental_dnn_v5::Net::setInput(cv::_InputArray const&amp;, cv::String const&amp;)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_Forward':
../../dnn.cpp:31: undefined reference to `cv::dnn::experimental_dnn_v5::Net::forward(cv::String const&amp;)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_GetPerfProfile':
../../dnn.cpp:63: undefined reference to `cv::dnn::experimental_dnn_v5::Net::getPerfProfile(std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_GetUnconnectedOutLayers':
../../dnn.cpp:67: undefined reference to `cv::dnn::experimental_dnn_v5::Net::getUnconnectedOutLayers() const'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_BlobFromImage':
../../dnn.cpp:85: undefined reference to `cv::dnn::experimental_dnn_v5::blobFromImage(cv::_InputArray const&amp;, double, cv::Size_&lt;int&gt; const&amp;, cv::Scalar_&lt;double&gt; const&amp;, bool, bool)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_GetLayer':
../../dnn.cpp:104: undefined reference to `cv::dnn::experimental_dnn_v5::Net::getLayer(cv::dnn::experimental_dnn_v5::DictValue)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_ForwardLayers':
../../dnn.cpp:41: undefined reference to `cv::dnn::experimental_dnn_v5::Net::forward(cv::_OutputArray const&amp;, std::vector&lt;cv::String, std::allocator&lt;cv::String&gt; &gt; const&amp;)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_Empty':
../../dnn.cpp:23: undefined reference to `cv::dnn::experimental_dnn_v5::Net::empty() const'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_SetPreferableBackend':
../../dnn.cpp:54: undefined reference to `cv::dnn::experimental_dnn_v5::Net::setPreferableBackend(int)'
/usr/bin/ld: $WORK/b026/_x016.o: in function `Net_SetPreferableTarget':
../../dnn.cpp:58: undefined reference to `cv::dnn::experimental_dnn_v5::Net::setPreferableTarget(int)'
collect2: error: ld returned 1 exit status
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Operating System and version: Arch Linux
OpenCV version used: 3.4.3
How did you install OpenCV? Through Arch's pacman
GoCV version used: Most Recent
Go version: 1.11
Did you run the env.sh or env.cmd script before trying to go run or go build? No deprecated.

	</description>
	<comments>
		<comment id='1' author='cwcaude' date='2018-11-10T12:27:23Z'>
		That looks like a linker path issue. We do recommend installing OpenCV from source, not from the package manager.
Do you have pkg-config installed?
		</comment>
		<comment id='2' author='cwcaude' date='2018-11-19T13:46:52Z'>
		Hi,
On Ubuntu 16.04 I had the exactly same issue "undefined reference to cv::dnn::exp/erimental_dnn_v5".
You could trigger this issue by running the cmd/img-similarity example.
I changed the OpenCV version in the Makefile,
from: OPENCV_VERSION?=3.4.2
to:     OPENCV_VERSION?=3.4.3
and run "make install"
After that the problem is solved.
Note that there is already an issue &lt;denchmark-link:https://github.com/hybridgroup/gocv/issues/358&gt;#358&lt;/denchmark-link&gt;
 about the wrong version of OpenCV in Makefile.
But if I try to run the same example with openvino_toolkit_p_2018.3.343, running with "-tags openvino" there are other undefined references, copied below.
Any hint of what lib I'm missing?
Many thanks
&lt;denchmark-code&gt;go run -tags openvino src/gocv.io/x/gocv/cmd/img-similarity/main.go
# gocv.io/x/gocv/contrib
/tmp/go-build933850113/b035/_x007.o: In function `pHashCompute':
img_hash.cpp:(.text+0x55): undefined reference to `cv::img_hash::pHash(cv::_InputArray const&amp;, cv::_OutputArray const&amp;)'
/tmp/go-build933850113/b035/_x007.o: In function `pHashCompare':
img_hash.cpp:(.text+0x103): undefined reference to `cv::img_hash::PHash::create()'
img_hash.cpp:(.text+0x125): undefined reference to `cv::img_hash::ImgHashBase::compare(cv::_InputArray const&amp;, cv::_InputArray const&amp;) const'
/tmp/go-build933850113/b035/_x007.o: In function `averageHashCompute':
img_hash.cpp:(.text+0x204): undefined reference to `cv::img_hash::averageHash(cv::_InputArray const&amp;, cv::_OutputArray const&amp;)'
/tmp/go-build933850113/b035/_x007.o: In function `averageHashCompare':
img_hash.cpp:(.text+0x2b2): undefined reference to `cv::img_hash::AverageHash::create()'
img_hash.cpp:(.text+0x2d4): undefined reference to `cv::img_hash::ImgHashBase::compare(cv::_InputArray const&amp;, cv::_InputArray const&amp;) const'
/tmp/go-build933850113/b035/_x007.o: In function `blockMeanHashCompute':
img_hash.cpp:(.text+0x3b9): undefined reference to `cv::img_hash::blockMeanHash(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, int)'
/tmp/go-build933850113/b035/_x007.o: In function `blockMeanHashCompare':
img_hash.cpp:(.text+0x46f): undefined reference to `cv::img_hash::BlockMeanHash::create(int)'
img_hash.cpp:(.text+0x491): undefined reference to `cv::img_hash::ImgHashBase::compare(cv::_InputArray const&amp;, cv::_InputArray const&amp;) const'
/tmp/go-build933850113/b035/_x007.o: In function `colorMomentHashCompute':
img_hash.cpp:(.text+0x570): undefined reference to `cv::img_hash::colorMomentHash(cv::_InputArray const&amp;, cv::_OutputArray const&amp;)'
/tmp/go-build933850113/b035/_x007.o: In function `colorMomentHashCompare':
img_hash.cpp:(.text+0x61e): undefined reference to `cv::img_hash::ColorMomentHash::create()'
img_hash.cpp:(.text+0x640): undefined reference to `cv::img_hash::ImgHashBase::compare(cv::_InputArray const&amp;, cv::_InputArray const&amp;) const'
/tmp/go-build933850113/b035/_x007.o: In function `marrHildrethHashCompute':
img_hash.cpp:(.text+0x73c): undefined reference to `cv::img_hash::marrHildrethHash(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, float, float)'
/tmp/go-build933850113/b035/_x007.o: In function `marrHildrethHashCompare':
img_hash.cpp:(.text+0x807): undefined reference to `cv::img_hash::MarrHildrethHash::create(float, float)'
img_hash.cpp:(.text+0x829): undefined reference to `cv::img_hash::ImgHashBase::compare(cv::_InputArray const&amp;, cv::_InputArray const&amp;) const'
/tmp/go-build933850113/b035/_x007.o: In function `radialVarianceHashCompute':
img_hash.cpp:(.text+0x920): undefined reference to `cv::img_hash::radialVarianceHash(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, double, int)'
/tmp/go-build933850113/b035/_x007.o: In function `radialVarianceHashCompare':
img_hash.cpp:(.text+0x9f1): undefined reference to `cv::img_hash::RadialVarianceHash::create(double, int)'
img_hash.cpp:(.text+0xa13): undefined reference to `cv::img_hash::ImgHashBase::compare(cv::_InputArray const&amp;, cv::_InputArray const&amp;) const'
/tmp/go-build933850113/b035/_x008.o: In function `Tracker_Init':
tracking.cpp:(.text+0xa6): undefined reference to `cv::Tracker::init(cv::_InputArray const&amp;, cv::Rect_&lt;double&gt; const&amp;)'
/tmp/go-build933850113/b035/_x008.o: In function `Tracker_Update':
tracking.cpp:(.text+0x15e): undefined reference to `cv::Tracker::update(cv::_InputArray const&amp;, cv::Rect_&lt;double&gt;&amp;)'
/tmp/go-build933850113/b035/_x008.o: In function `TrackerMIL_Create':
tracking.cpp:(.text+0x21c): undefined reference to `cv::TrackerMIL::create()'
/tmp/go-build933850113/b035/_x008.o: In function `TrackerBoosting_Create':
tracking.cpp:(.text+0x2d7): undefined reference to `cv::TrackerBoosting::create()'
/tmp/go-build933850113/b035/_x008.o: In function `TrackerMedianFlow_Create':
tracking.cpp:(.text+0x392): undefined reference to `cv::TrackerMedianFlow::create()'
/tmp/go-build933850113/b035/_x008.o: In function `TrackerTLD_Create':
tracking.cpp:(.text+0x44d): undefined reference to `cv::TrackerTLD::create()'
/tmp/go-build933850113/b035/_x008.o: In function `TrackerKCF_Create':
tracking.cpp:(.text+0x508): undefined reference to `cv::TrackerKCF::create()'
/tmp/go-build933850113/b035/_x008.o: In function `TrackerMOSSE_Create':
tracking.cpp:(.text+0x5c3): undefined reference to `cv::TrackerMOSSE::create()'
/tmp/go-build933850113/b035/_x008.o: In function `TrackerCSRT_Create':
tracking.cpp:(.text+0x67e): undefined reference to `cv::TrackerCSRT::create()'
/tmp/go-build933850113/b035/_x009.o: In function `SIFT_Create':
xfeatures2d.cpp:(.text+0x57): undefined reference to `cv::xfeatures2d::SIFT::create(int, int, double, double, double)'
/tmp/go-build933850113/b035/_x009.o: In function `SURF_Create':
xfeatures2d.cpp:(.text+0x770): undefined reference to `cv::xfeatures2d::SURF::create(double, int, int, bool, bool)'
collect2: error: ld returned 1 exit status
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='cwcaude' date='2018-11-19T17:50:47Z'>
		We're updating to OpenCV 4.0.0 so that will be fixed in the next release. Thanks for the report!
		</comment>
		<comment id='4' author='cwcaude' date='2018-11-19T18:19:02Z'>
		Great! many thanks
just in case, to correct the undefined references for running with openvino, you need to add the missing libraries "-lopencv_xfeatures2d -lopencv_tracking -lopencv_img_hash" with the rest to  CGO_LDFLAGS in /go/src/gocv.io/x/gocv/openvino/env.sh
		</comment>
		<comment id='5' author='cwcaude' date='2018-11-19T18:51:39Z'>
		Also, you need run source /opt/intel/computer_vision_sdk/bin/setupvars.sh and ALSO source openvino/env.sh AND use -tags openvino for your go run or go build to pickup your install of OpenVINO.
		</comment>
		<comment id='6' author='cwcaude' date='2018-11-19T22:11:18Z'>
		yes, many thanks.
		</comment>
		<comment id='7' author='cwcaude' date='2018-11-28T18:01:09Z'>
		This was released as part of v0.18.0 now closing.
		</comment>
		<comment id='8' author='cwcaude' date='2019-02-14T06:04:50Z'>
		Still repros on Linux Ubuntu 18.04 LTS
		</comment>
	</comments>
</bug>