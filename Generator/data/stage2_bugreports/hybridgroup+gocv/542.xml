<bug id='542' author='wzh90' open_date='2019-11-14T01:19:29Z' closed_time='2020-10-22T07:18:34Z'>
	<summary>Maybe a bug of method GetUnconnectedOutLayers  in dnn.go</summary>
	<description>
I think there is a  bug ...
Please check it.
gocv/dnn.go:405
pcids := *(*[]int)(unsafe.Pointer(h))
Maybe it should be changed to
pcids := *(*[]C.int)(unsafe.Pointer(h))
it make method &lt;denchmark-link:https://github.com/hybridgroup/gocv/blob/b18291665d630fc258d89794f103190d4e213e72/dnn.go#L396&gt;GetUnconnectedOutLayers()&lt;/denchmark-link&gt;
 return an indeterminate result. It is RAM addr or not？
Please check it . Thx
	</description>
	<comments>
		<comment id='1' author='wzh90' date='2019-11-26T10:14:35Z'>
		nobody reply this？
		</comment>
		<comment id='2' author='wzh90' date='2019-12-20T07:14:35Z'>
		Hi @hawkwzh can you please provide a specific test case so we can reproduce it? Thank you.
		</comment>
		<comment id='3' author='wzh90' date='2019-12-23T03:42:10Z'>
		&lt;denchmark-link:https://github.com/deadprogram&gt;@deadprogram&lt;/denchmark-link&gt;
 I want to use darknet yolov3 to detect object. Just try it, will be reproduced. And it can be solved  with my solution.
Then I try to retrieve my code for this comment.
Thx.
		</comment>
		<comment id='4' author='wzh90' date='2019-12-24T05:26:03Z'>
		&lt;denchmark-link:https://github.com/deadprogram&gt;@deadprogram&lt;/denchmark-link&gt;
 Oh , I made a mistake.
gocv/dnn.go:162  is right.
I have re edited comments.
But ,I'm sure gocv/dnn.go:405 should bepcids := *(*[]C.int)(unsafe.Pointer(h)).
because incorrect result of net.GetUnconnectedOutLayers()method call  when using darknet(yolov3) to detecting.
		</comment>
		<comment id='5' author='wzh90' date='2019-12-24T08:39:13Z'>
		&lt;denchmark-link:https://github.com/deadprogram&gt;@deadprogram&lt;/denchmark-link&gt;

Well.. I try to use tensorflow object detection.
&lt;denchmark-link:https://github.com/opencv/opencv/wiki/TensorFlow-Object-Detection-API&gt;TensorFlow Object Detection&lt;/denchmark-link&gt;

like this


I want to read the layer names, but result is :

"detection_out_final" is right layer name.
For this mistake, I changed  gocv/dnn.go:405 to
pcids := *(*[]C.int)(unsafe.Pointer(h))
And use
&lt;denchmark-code&gt;ids := net.GetUnconnectedOutLayers()
for _, id := range ids {
	layer := net.GetLayer(id)
	fmt.Printf("name : [%v]", layer.GetName())
}
&lt;/denchmark-code&gt;

can get right layer name.
use Model:&lt;denchmark-link:http://download.tensorflow.org/models/object_detection/faster_rcnn_inception_v2_coco_2018_01_28.tar.gz&gt;weights&lt;/denchmark-link&gt;

use Config:&lt;denchmark-link:https://github.com/opencv/opencv_extra/blob/master/testdata/dnn/faster_rcnn_inception_v2_coco_2018_01_28.pbtxt&gt;config&lt;/denchmark-link&gt;

please check it .
Thx.
		</comment>
		<comment id='6' author='wzh90' date='2019-12-28T23:27:28Z'>
		I have the same issue as @hawkwzh describes.
I fail to get gocv running with YOLO V3.
func (net *Net) GetUnconnectedOutLayers() (ids []int)
returns wrong ids.
I compared the result with &lt;denchmark-link:https://docs.opencv.org/master/da/d9d/tutorial_dnn_yolo.html&gt;YOLO C++ OpenCV Tutorial&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/blob/master/samples/dnn/object_detection.cpp&gt;Source&lt;/denchmark-link&gt;

Line 324 
gocv returns: [974957576392 254 0]
opencv demo: [200 227 254]
		</comment>
		<comment id='7' author='wzh90' date='2020-03-09T08:17:34Z'>
		My solution:
&lt;denchmark-code&gt;func (net *Net) GetUnconnectedOutLayers() (ids []int) {
	cids := C.IntVector{}
	C.Net_GetUnconnectedOutLayers((C.Net)(net.p), &amp;cids)
	defer C.free(unsafe.Pointer(cids.val))

	h := &amp;reflect.SliceHeader{
		Data: uintptr(unsafe.Pointer(cids.val)),
		Len:  int(cids.length),
		Cap:  int(cids.length),
	}
	pcids := *(*[]C.int)(unsafe.Pointer(h))

	for i := 0; i &lt; int(cids.length); i++ {
		ids = append(ids, int(pcids[i]))
	}
	return
}

func (net *Net) GetLayerNames() (names []string) {
	cstrs := C.CStrings{}
	C.Net_GetLayerNames((C.Net)(net.p), &amp;cstrs)
	defer C.free(unsafe.Pointer(cstrs.strs))

	h := &amp;reflect.SliceHeader{
		Data: uintptr(unsafe.Pointer(cstrs.strs)),
		Len:  int(cstrs.length),
		Cap:  int(cstrs.length),
	}
	pcstrs := *(*[](*C.char))(unsafe.Pointer(h))

	for i := 0; i &lt; int(cstrs.length); i++ {
		names = append(names, C.GoString(pcstrs[i]))
	}
	return
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='wzh90' date='2020-06-13T19:46:15Z'>
		I also encountered the same issue as described by @hawkwzh  with yolov3 and OpenCV 4.3, changing the code as follows fixed the issue for me as well.
pcids := *(*[]C.int)(unsafe.Pointer(h))
		</comment>
		<comment id='9' author='wzh90' date='2020-09-08T09:51:42Z'>
		I have the same issue and &lt;denchmark-link:https://github.com/intgogo&gt;@intgogo&lt;/denchmark-link&gt;
 's solution works for me. Is there no one to make a PR?
		</comment>
		<comment id='10' author='wzh90' date='2020-09-08T17:56:30Z'>
		This was fixed by &lt;denchmark-link:https://github.com/hybridgroup/gocv/pull/732&gt;#732&lt;/denchmark-link&gt;
 and is now in the  branch so I will mark as "next-release".
		</comment>
		<comment id='11' author='wzh90' date='2020-10-22T07:18:34Z'>
		This has now been released so closing. Thanks!
		</comment>
	</comments>
</bug>