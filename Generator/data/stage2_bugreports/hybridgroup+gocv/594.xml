<bug id='594' author='twatzl' open_date='2020-01-16T17:48:55Z' closed_time='2020-04-13T09:58:58Z'>
	<summary>Use after free bug in DrawContours</summary>
	<description>
So I could observe this strange behaviour with DrawContours
&lt;denchmark-link:https://user-images.githubusercontent.com/18753370/72549103-61793180-3890-11ea-8286-7aa9b0eabdb7.png&gt;&lt;/denchmark-link&gt;

Inspection of the function brings me to the belief that the issue is a use after free bug.
&lt;denchmark-code&gt;// DrawContours draws contours outlines or filled contours.
//
// For further details, please see:
// https://docs.opencv.org/3.3.1/d6/d6e/group__imgproc__draw.html#ga746c0625f1781f1ffc9056259103edbc
func DrawContours(img *Mat, contours [][]image.Point, contourIdx int, c color.RGBA, thickness int) {
	cntrs := make([]C.struct_Points, len(contours))

	for i, contour := range contours {
		func() {
			p := (*C.struct_Point)(C.malloc(C.size_t(C.sizeof_struct_Point * len(contour))))
			defer C.free(unsafe.Pointer(p))

			pa := getPoints(p, len(contour))

			for j, point := range contour {
				pa[j] = C.struct_Point{
					x: C.int(point.X),
					y: C.int(point.Y),
				}
			}

			cntrs[i] = C.struct_Points{
				points: (*C.Point)(p),
				length: C.int(len(contour)),
			}
		}()
	}

	cContours := C.struct_Contours{
		contours: (*C.struct_Points)(&amp;cntrs[0]),
		length:   C.int(len(contours)),
	}

	sColor := C.struct_Scalar{
		val1: C.double(c.B),
		val2: C.double(c.G),
		val3: C.double(c.R),
		val4: C.double(c.A),
	}

	C.DrawContours(img.p, cContours, C.int(contourIdx), sColor, C.int(thickness))
}
&lt;/denchmark-code&gt;

Specificially the line
&lt;denchmark-code&gt;	defer C.free(unsafe.Pointer(p))
&lt;/denchmark-code&gt;

which causes p to be freed when leaving the anonymous function. However p is used as points in cntrs and later used for drawing. So I guess this is the issue from what I can see.
After commenting the line, the result was as expected.
&lt;denchmark-link:https://user-images.githubusercontent.com/18753370/72549359-d6e50200-3890-11ea-8d92-9a631db6f3ba.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='twatzl' date='2020-03-20T12:59:41Z'>
		Hi &lt;denchmark-link:https://github.com/twatzl&gt;@twatzl&lt;/denchmark-link&gt;
 I think you are absolutely correct.
Can you please try this PR to see if it corrects your issue?
&lt;denchmark-link:https://github.com/hybridgroup/gocv/pull/642&gt;#642&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='twatzl' date='2020-03-20T13:35:15Z'>
		Hi. Yes I will try it as soon as possible, but since it has been quite a while it will probably take me some days.
		</comment>
		<comment id='3' author='twatzl' date='2020-04-13T09:58:58Z'>
		This has been released with v0.23 so now closing. Thanks!
		</comment>
	</comments>
</bug>