<bug id='175' author='omar-ogm' open_date='2020-06-09T10:14:30Z' closed_time='2020-06-09T14:01:37Z'>
	<summary>PixelFormat is a string not an integer value. KeyError Exception with dict_by_ints[self.data_format_value]</summary>
	<description>
Describe the bug
Hello,
Im trying out the harvesters module for the first time and Im having some trouble with the PixelFormat.
The error Im getting is

return dict_by_ints[self.data_format_value]
KeyError: 'BayerRG8'

on &lt;denchmark-link:https://github.com/genicam/harvesters/blob/785d77af8f44b27c22e56f0ebb8a8e16fff14acf/src/harvesters/core.py#L963&gt;Line 963&lt;/denchmark-link&gt;
 from core.py
&lt;denchmark-code&gt;    @property
    def data_format_value(self) -&gt; int:
        """
        The data type of the data component as integer value.
        :getter: Returns itself.
        :type: int
        """
        try:
            if self._part:
                value = self._part.data_format
            else:
                value = self._buffer.pixel_format
        except GenericException:
            value = self._node_map.PixelFormat.value
        return value

    @property
    def data_format(self) -&gt; str:
        """
        The data type of the data component as string.
        :getter: Returns itself.
        :type: str
        """
        return dict_by_ints[self.data_format_value]
&lt;/denchmark-code&gt;

The problem is that the value on self.data_format_value is a string "BayerRG8" while the dict_by_ints is expecting a string with the representative value of "BayerRG8" as int.
The self.data_format_value is setting the value on the &lt;denchmark-link:https://github.com/genicam/harvesters/blob/785d77af8f44b27c22e56f0ebb8a8e16fff14acf/src/harvesters/core.py#L952&gt;line 952&lt;/denchmark-link&gt;
 after a GenericException is raised.
I don't know if this generic exception is the real problem but in any case the line 952 should retrieve a int and not a string since as the method says it will return an integer.
To Reproduce
The code I'm using to get this error is the example code to start working with harvesters. Ive also noticed this error on the harvesters_gui.
&lt;denchmark-code&gt;from harvesters.core import Harvester


h = Harvester()

h.add_file(r'C:\Program Files\MATRIX VISION\mvIMPACT Acquire\bin\x64\mvGenTLProducer.cti')
h.update()

print(h.files)

ia = h.create_image_acquirer(0)

# Example: Change values from the GenICam Camera, This values are in the node_map
ia.remote_device.node_map.Height.value = 16
ia.remote_device.node_map.Width.value = 256

ia.start_acquisition()

with ia.fetch_buffer() as buffer:
    # Let's create an alias of the 2D image component:
    component = buffer.payload.components[0]

    # Note that the number of components can be vary. If your
    # target remote device transmits a multi-part information, then
    # you'd get two or more components in the payload. However, now
    # we're working with a remote device that transmits only a 2D image.
    # So we manipulate only index 0 of the list object, components.

    # Let's see the acquired data in 1D:
    _1d = component.data
    print('1D: {0}'.format(_1d))


# Release and exit
ia.stop_acquisition()
&lt;/denchmark-code&gt;

Desktop

Windows 10
Python: 3.7
Harvester: 1.2.3 (Ive also tried harvesters_gui on a different venv and get the same error)
GenTL Producer: mv recommended from harvesters
Camera: TIS DKF 33GP1300


This is an image of the documentation for the Camera, where  value is specified, is this GenICam compliant?
&lt;denchmark-link:https://user-images.githubusercontent.com/46346972/84135121-d91b4900-aa49-11ea-9352-7574884e2e43.png&gt;&lt;/denchmark-link&gt;

I guess the fix would be to use dict_by_string() when the exception is generated if the PixelFormat is always returned as a string for all GenICam cameras. Since Im not familiar with these standard I cant know if the Camara is the one not compliant with the GenICam standard.
EDIT
If I changed line 952 to
&lt;denchmark-code&gt;value = dict_by_names[self._node_map.PixelFormat.value]
&lt;/denchmark-code&gt;

The problems goes away but then another error arises this time on the gentl package
&lt;denchmark-code&gt;return _gentl.Buffer__get_width(self)
_gentl.NotAvailableException: GenTL exception: Resource or information is not available. (Message from the source: 'BUFFER_INFO_WIDTH' is not available for this buffer(payload type: PAYLOAD_TYPE_CHUNK_DATA)) (ID: -1014)
&lt;/denchmark-code&gt;

Maybe this camera is not GenICam fully compliant...I could not find this information, all I know is that is definitely has some GenICam compatible parameters from the documentation.
	</description>
	<comments>
		<comment id='1' author='omar-ogm' date='2020-06-09T12:49:49Z'>
		&lt;denchmark-link:https://github.com/omar-ogm&gt;@omar-ogm&lt;/denchmark-link&gt;
 Hi, thank you for the report. I have just created a development branch . Could you try that out, please? /Kazunari
		</comment>
		<comment id='2' author='omar-ogm' date='2020-06-09T14:01:37Z'>
		For me the problem seem to be fixed. Both of them.
Thank you for the quick response and also for creating this great library, I'm sure it will help enormously people to get their computer vision projects running fast.
Keep the good work up ;)
		</comment>
		<comment id='3' author='omar-ogm' date='2020-06-09T14:32:23Z'>
		Thank you for your kind words!
		</comment>
	</comments>
</bug>