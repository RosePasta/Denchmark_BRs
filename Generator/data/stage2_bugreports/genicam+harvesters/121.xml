<bug id='121' author='batrlatom' open_date='2020-02-25T15:03:37Z' closed_time='2020-03-06T14:05:07Z'>
	<summary>HARVESTERS_XML_FILE_DIR getting errors</summary>
	<description>
Describe the bug
I am trying to specify where XML and zip files would be located. But I am getting an error.
To Reproduce
Steps to reproduce the behavior:

Use env variable; HARVESTERS_XML_FILE_DIR=D:\\ (and all other variants like \\\\ , /, // )
Run standart tutorial program.
Get errors ( see screenshot section )
Files are located and C:\\ (problems if I want to pack it into an app and not to
write some random files to the users C:\\ ) and not at D:\\

Expected behavior
I should expect the XML and zip files to be stored at a specified location.
Screenshots
&lt;denchmark-code&gt;2020-02-25 15:51:22,944 :: harvesters.core :: ERROR :: Error while parsing XML stream at line 418 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2447, in _get_port_connected_node_map
    node_map.load_xml_from_zip_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2010, in load_xml_from_zip_file
    return _genapi.NodeMap_load_xml_from_zip_file(self, ZipFileName)
_genapi.RuntimeException: File open failed in ParseXmlFile. Filename = 'C:///GenTLSystem.xml' : RuntimeException thrown (file 'XmlParser.cpp', line 131)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2450, in _get_port_connected_node_map
    node_map.load_xml_from_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2004, in load_xml_from_file
    return _genapi.NodeMap_load_xml_from_file(self, FileName)
_genapi.RuntimeException: Error while parsing XML stream at line 418 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
2020-02-25 15:51:22,951 :: harvesters.core :: ERROR :: Error while parsing XML stream at line 510 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2447, in _get_port_connected_node_map
    node_map.load_xml_from_zip_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2010, in load_xml_from_zip_file
    return _genapi.NodeMap_load_xml_from_zip_file(self, ZipFileName)
_genapi.RuntimeException: File open failed in ParseXmlFile. Filename = 'C:///GenTLInterface.xml' : RuntimeException thrown (file 'XmlParser.cpp', line 131)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2450, in _get_port_connected_node_map
    node_map.load_xml_from_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2004, in load_xml_from_file
    return _genapi.NodeMap_load_xml_from_file(self, FileName)
_genapi.RuntimeException: Error while parsing XML stream at line 510 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
2020-02-25 15:51:22,957 :: harvesters.core :: ERROR :: Error while parsing XML stream at line 619 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2447, in _get_port_connected_node_map
    node_map.load_xml_from_zip_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2010, in load_xml_from_zip_file
    return _genapi.NodeMap_load_xml_from_zip_file(self, ZipFileName)
_genapi.RuntimeException: File open failed in ParseXmlFile. Filename = 'C:///GenTLDevice.xml' : RuntimeException thrown (file 'XmlParser.cpp', line 131)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2450, in _get_port_connected_node_map
    node_map.load_xml_from_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2004, in load_xml_from_file
    return _genapi.NodeMap_load_xml_from_file(self, FileName)
_genapi.RuntimeException: Error while parsing XML stream at line 619 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
2020-02-25 15:51:23,042 :: harvesters.core :: ERROR :: Error while parsing XML stream at line 721 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2447, in _get_port_connected_node_map
    node_map.load_xml_from_zip_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2010, in load_xml_from_zip_file
    return _genapi.NodeMap_load_xml_from_zip_file(self, ZipFileName)
_genapi.RuntimeException: File open failed in ParseXmlFile. Filename = 'C:///GenTLStream.xml' : RuntimeException thrown (file 'XmlParser.cpp', line 131)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\harvesters\core.py", line 2450, in _get_port_connected_node_map
    node_map.load_xml_from_file(file_path)
  File "C:\ProgramData\Miniconda3\envs\pekat_vision\lib\site-packages\genicam\genapi.py", line 2004, in load_xml_from_file
    return _genapi.NodeMap_load_xml_from_file(self, FileName)
_genapi.RuntimeException: Error while parsing XML stream at line 721 and column 0 : 'unclosed token' : RuntimeException thrown (file 'XmlParser.cpp', line 1720)
&lt;/denchmark-code&gt;

Desktop (please complete the following information):

OS: Win10
Python: 3.7 in MiniConda env
Harvester: 1.03
GenTL Producer: Basler
Camera: Basler

Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='batrlatom' date='2020-02-29T00:56:02Z'>
		I'm getting the same errors with Basler &amp; Teledyne DALSA models.
It does not relate to the vendor of the camera.
I've fixed that already locally.  Will send you a pull request soon.
Else.. works quite nice.
		</comment>
		<comment id='2' author='batrlatom' date='2020-02-29T15:47:21Z'>
		I've simply added a lstrip in (because the xml-target path evaluates to something like: "c:////temp"
this doesn't work with Windows 10 (core.py, ~ Line 2363):
        if location == 'local':
            file_name, address, size = others.split(';')
            file_name = file_name.lstrip('/')
Additionally, (~Line 2439). I wonder why we need to rstrip the buffer here (why we don't just use "wb" as a parameter to "open" (pos is "-1" for me...  that's why the xml-file is messed up):
        data_to_write = bytes_content.decode()
        pos = data_to_write.find('\x00')
        if pos != -1:
            data_to_write = data_to_write[:pos]
Third problem was the data_format_value.  _buffer.pixel_format gives an exception
with the basler-camera I'm using. I modified it this way:
    def data_format_value(self):
        """
        :return: The data type of the data component as integer value.
        """
        try:
            if self._part:
                return self._part.data_format
            else:
                return self._buffer.pixel_format
        except GenericException:
            pixel_format_string = self._node_map.PixelFormat.value
            if pixel_format_string in _inverse_symbolics:
                return _inverse_symbolics[pixel_format_string]
            else:
                raise
		</comment>
		<comment id='3' author='batrlatom' date='2020-02-29T15:54:16Z'>
		&lt;denchmark-link:https://github.com/0lru&gt;@0lru&lt;/denchmark-link&gt;
 Thank you for your message. I will take a look at these suggestions you proposed. Thank you!
		</comment>
		<comment id='4' author='batrlatom' date='2020-02-29T16:04:19Z'>
		for completeness:
   def _build_component(self, buffer=None, part=None, node_map=None):
        #
        try:
            if part:
                data_format = part.data_format
            else:
                data_format = buffer.pixel_format
        except:
            if node_map is not None:
                pixel_format_string = node_map.PixelFormat.value
                if pixel_format_string in _inverse_symbolics:
                    data_format = _inverse_symbolics[pixel_format_string]
                else:
                    raise
            else:
                raise
and
_inverse_symbolics = {v: k for k, v in symbolics.items()}
		</comment>
		<comment id='5' author='batrlatom' date='2020-02-29T16:40:00Z'>
		&lt;denchmark-link:https://github.com/0lru&gt;@0lru&lt;/denchmark-link&gt;
 I've just committed a change for the second issue, thanks. By the way, could you tell me a  that triggers the first issue on you? It would be easier for me if you could show me a whole string of the URL that you get.
		</comment>
		<comment id='6' author='batrlatom' date='2020-03-02T08:37:47Z'>
		&lt;denchmark-link:https://github.com/0lru&gt;@0lru&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kazunarikudo&gt;@kazunarikudo&lt;/denchmark-link&gt;
 Thank you for reopening the issue. I have changed it myself by similar way like 0lru. &lt;denchmark-link:https://github.com/kazunarikudo&gt;@kazunarikudo&lt;/denchmark-link&gt;
 the filename I was getting was file:///Gentl.xml so It was parsed to ///Gentl . My code for repair was
&lt;denchmark-code&gt;    import sys
    os_system = sys.platform
    if os_system in ['win32']:
        file_name = "." + file_name
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='batrlatom' date='2020-03-05T08:48:26Z'>
		&lt;denchmark-link:https://github.com/batrlatom&gt;@batrlatom&lt;/denchmark-link&gt;
 Hi, sorry having misinterpreted your original report. To resolve this issue, may I ask you questions a bit more? You told me the URI consists of  but with that notation where would that point at exactly? I have checked &lt;denchmark-link:https://en.wikipedia.org/wiki/File_URI_scheme&gt;Wikipedia&lt;/denchmark-link&gt;
 and learned  is just omitting  but can't understand how should I interpret the location. In addition, which model gives such a URI? The almost cameras on the market store its XML file in the internal storage and as a result, the URIs look like  for example. This is just out of curiosity but I would like to know your case.
		</comment>
		<comment id='8' author='batrlatom' date='2020-03-05T09:01:44Z'>
		&lt;denchmark-link:https://www.baslerweb.com/en/products/cameras/area-scan-cameras/ace/aca2500-60um/&gt;https://www.baslerweb.com/en/products/cameras/area-scan-cameras/ace/aca2500-60um/&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='batrlatom' date='2020-03-05T09:06:50Z'>
		&lt;denchmark-link:https://github.com/0lru&gt;@0lru&lt;/denchmark-link&gt;
 Hi. Is that model has such a URI? If so, I would appreciate it if you could tell me the location, , where batrlatom introduced me. I might interpret  is located at the root directory but have no idea if it's just an example or a real one that a camera returns.
		</comment>
		<comment id='10' author='batrlatom' date='2020-03-05T09:17:19Z'>
		Yes, it returns such a URI/URL

"file://" is the protocol
/Genttl.xml is the path
where "/" means "root".

maybe we can use something like:
&lt;denchmark-link:https://docs.python.org/3/library/urllib.parse.html&gt;https://docs.python.org/3/library/urllib.parse.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='batrlatom' date='2020-03-05T09:25:49Z'>
		I understand batrlatom tried to use that protocol (file:) for HARVESTERS_XML_FILE_DIR but with your comment,

it returns such a URI/URL

do you mean there is a case camera specifies the location using the file: protocol instead of local:?
		</comment>
		<comment id='12' author='batrlatom' date='2020-03-05T09:38:49Z'>
		
do you mean there is a case camera specifies the location using the file: protocol instead of local:?

I did a misread here. That's because I have no physical access
to the device currently (today). Sorry for the confusion. This model returns local
		</comment>
		<comment id='13' author='batrlatom' date='2020-03-05T10:58:38Z'>
		
I did a misread here.
This model returns local

Okay, that makes sense to me.
		</comment>
		<comment id='14' author='batrlatom' date='2020-03-06T13:39:11Z'>
		&lt;denchmark-link:https://github.com/batrlatom&gt;@batrlatom&lt;/denchmark-link&gt;
 Hi. I have committed a change that aims to resolve the file URI scheme issue. Please let me know if it works for you. Excuse me, since I do not have a Windows machine here.
		</comment>
		<comment id='15' author='batrlatom' date='2020-03-06T13:40:36Z'>
		&lt;denchmark-link:https://github.com/0lru&gt;@0lru&lt;/denchmark-link&gt;
 Hi. I'm going to open another ticket for your  issue. I will let you know once the fixed version turned available.
		</comment>
		<comment id='16' author='batrlatom' date='2020-03-06T14:05:07Z'>
		&lt;denchmark-link:https://github.com/batrlatom&gt;@batrlatom&lt;/denchmark-link&gt;
 Hi again. I'm going to close this ticket but feel free to let me know if the latest version did not work for you. I will reopen this ticket and try to tackle it again.
		</comment>
	</comments>
</bug>