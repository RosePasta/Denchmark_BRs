<bug id='188' author='neelsbrink' open_date='2020-07-07T08:12:04Z' closed_time='2020-07-10T14:00:10Z'>
	<summary>The number of delivered array elements is fewer than expected &amp; randomly appearing black lines in video (due to packet loss)</summary>
	<description>
Hi Kazunari
I have been capturing and displaying images from a JAI BM-500 GE camera (Harvesters 1.2.1 and Python 3.6 (PyCharm)) successfully in Mono8 pixel format. When I change to Mono10 or Mono12, black lines appear randomly in the images despite using low frame rates (&lt;10 fps). I then upgraded to Harvesters 1.2.6 in an attempt to see if it will help, but now the Mono10 and Mono12 results in an error:
ValueError: cannot reshape array of size 3790836 into shape (2058,2456)
because the number of elements is not 2456x2058:
buffer: 2456 x 2058, Mono12, 3790836 elements
What has changed in this regards from 1.2.1 and where can I look for resolving the black lines?
When I use the JAI control software the lines are absent.
Thank you
regards
Neels
Code:
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;from harvesters.core import Harvester
from numpy import *
import numpy as np
import cv2

h = Harvester()

h.add_cti_file(r'C:\Program Files\MATRIX VISION\mvIMPACT Acquire\bin\x64\mvGenTLProducer.cti')
h.update_device_info_list()

ia = h.create_image_acquirer(0) #camera nr 0

pixelformat='Mono12'
ia.remote_device.node_map.PixelFormat.set_value(pixelformat)

#Start acquisition
ia.start_image_acquisition()

cv2.namedWindow('win1',cv2.WINDOW_FREERATIO)
cv2.resizeWindow('win1',420,420)
cv2.moveWindow('win1',10,500)


while True:

with ia.fetch_buffer() as buffer:

    component = buffer.payload.components[0]
    ncol=component.width
    nrow=component.height
    image = component.data.reshape(nrow, ncol)

    cv2.imshow('win1',(image)

    if cv2.waitKey(1) &amp; 0xFF == ord('q'):
      break

ia.destroy()
cv2.destroyAllWindows()
h.reset()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='neelsbrink' date='2020-07-07T08:53:11Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Hi. Sounds like the buffer only has 2058 x 1842 elements, i.e., it's 398 elements fewer than expected. I do not have another item that I can speak but could you show me the output from the following code, please?
&lt;denchmark-code&gt;    ...
    component = buffer.payload.components[0]
    print(component). # I want to see this.
    ncol=component.width
    nrow=component.height
    image = component.data.reshape(nrow, ncol)
    ...
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='neelsbrink' date='2020-07-07T09:05:18Z'>
		Hi Kazunari
print(component) produces:

2456 x 2058, Mono12, 3790836 elements,
[139 145 142 ... 226 227 224]

regards
Neels
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Tue, Jul 7, 2020 at 10:53 AM Kazunari Kudo ***@***.***&gt; wrote:
 @neelsbrink &lt;https://github.com/neelsbrink&gt; Hi. Sounds like the buffer
 only has 2058 x 1842 elements, i.e., it's less than 398 lines/rows. I do
 not have another item that I can speak but could you show me the output
 from the following code, please?

     ...
     component = buffer.payload.components[0]
     print(component). # I want to see this.
     ncol=component.width
     nrow=component.height
     image = component.data.reshape(nrow, ncol)
     ...

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#188 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/ADKBNQH772T7MJCZIWL6OETR2LPALANCNFSM4OSRYAKA&gt;
 .



		</comment>
		<comment id='3' author='neelsbrink' date='2020-07-08T15:28:33Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Hi, Neels. I'm working on it and will let you know once a candidate version turned available. Sorry for the inconvenience. /Kazunari
		</comment>
		<comment id='4' author='neelsbrink' date='2020-07-08T15:38:50Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Hi again. The fix has been committed to the branch . Could you try that out and let me know if it fixes your issue when you can? I'm looking forward to hearing from you.
		</comment>
		<comment id='5' author='neelsbrink' date='2020-07-09T07:53:40Z'>
		Thanks Kazunari, the number of elements is correct now, but the black lines
still appear when using Mono10 or Mono12
regards
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Wed, Jul 8, 2020 at 5:39 PM Kazunari Kudo ***@***.***&gt; wrote:
 @neelsbrink &lt;https://github.com/neelsbrink&gt; Hi again. The fix has been
 committed to the branch _issue_188. Could you try that out and let me
 know if it fixes your issue when you can? I'm looking forward to hearing
 from you.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#188 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/ADKBNQCZPAYN2MKYLF3LRJDR2SHJVANCNFSM4OSRYAKA&gt;
 .



		</comment>
		<comment id='6' author='neelsbrink' date='2020-07-09T08:00:35Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Hi, Neels. Thank you for the update. Could you show me the image for example, please? (Two images or three would be better than one because the multiple images would help me to guess a pattern if there was.)
		</comment>
		<comment id='7' author='neelsbrink' date='2020-07-09T08:03:48Z'>
		In addition, it would be very nice if you could check which pixel would be the beginning of the black line; for example, every black line begins at the nth pixel and end at the last pixel, etc.
		</comment>
		<comment id='8' author='neelsbrink' date='2020-07-09T08:10:14Z'>
		One more question: Does the black line consist of only zero gray values?
		</comment>
		<comment id='9' author='neelsbrink' date='2020-07-09T09:44:25Z'>
		The black lines start and end at any place in the image randomly, have
varying lengths but the whole line has zero graylevels:


[image: image.png]

[image: image.png]
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Jul 9, 2020 at 10:10 AM Kazunari Kudo ***@***.***&gt; wrote:
 One more question: Does the black line consist of only zero gray values?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#188 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/ADKBNQANYBVX7SPPIYSS6OTR2V3PTANCNFSM4OSRYAKA&gt;
 .



		</comment>
		<comment id='10' author='neelsbrink' date='2020-07-09T10:29:15Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Thank you, but the images you pasted above are displayed as follows:

[image: image.png]

Could you make another try, please?
		</comment>
		<comment id='11' author='neelsbrink' date='2020-07-09T11:10:22Z'>
		See attached
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Jul 9, 2020 at 12:29 PM Kazunari Kudo ***@***.***&gt; wrote:
 @neelsbrink &lt;https://github.com/neelsbrink&gt; Thank you, but the images you
 pasted above are displayed as follows:

 [image: image.png]

 Could you make another try, please?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#188 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/ADKBNQGN2HT4A57X43UYCKDR2WLYXANCNFSM4OSRYAKA&gt;
 .



		</comment>
		<comment id='12' author='neelsbrink' date='2020-07-09T11:20:20Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/8652625/87033656-95bb2280-c221-11ea-903a-8ba57618bc78.jpeg&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='neelsbrink' date='2020-07-09T11:29:38Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Please see above. That’s what I’m seeing...
		</comment>
		<comment id='14' author='neelsbrink' date='2020-07-09T12:34:28Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 (1) Does your camera support the  feature? If so, could you try to transmit a still pattern (a pattern that does not move) in either  or  and see what happens, please? I guess even if the camera transmits such a still image the black line would appear but I would like to see just for our information. (2) In addition, how do you check the black lines? Have you checked that on both a viewer and Harvester? I feel we need to make sure if where the black line appears in the data path. (3) Another thought I have is to test what happens if another camera transmits images in  or .
		</comment>
		<comment id='15' author='neelsbrink' date='2020-07-09T13:56:38Z'>
		I hope the images are now visible. I can't see how to activate a test
pattern, waiting for JAI for a response whether it is possible. I check the
black lines by plotting a vertical profile across each live  image in
PyCharm and investigating the line values. Unfortunately I don't have
another camera.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Jul 9, 2020 at 2:34 PM Kazunari Kudo ***@***.***&gt; wrote:
 @neelsbrink &lt;https://github.com/neelsbrink&gt; (1) Does your camera support
 the TestPattern feature? If so, could you try to transmit a still pattern
 (a pattern that does not move) in either Mono10 or Mono12 and see what
 happens, please? I guess even if the camera transmits such a still image
 the black line would appear but I would like to see just for our
 information. (2) In addition, how do you check the black lines? Have you
 checked that on both a viewer and Harvester? I feel we need to make sure if
 where the black line appears in the data path. (3) Another thought I have
 is to test what happens if another camera transmits images in Mono10 or
 Mono12.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#188 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/ADKBNQE7FYYGMIHR65NFXEDR2W2OHANCNFSM4OSRYAKA&gt;
 .



		</comment>
		<comment id='16' author='neelsbrink' date='2020-07-09T14:08:19Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;


I hope the images are now visible

Unfortunately, nothing has been displayed. How about you? Can you see the image in the comment cell where you possted?
By the way, as far as I tested, Harvester's unpacking/extracting feature does not alter any given data during the process. One thing I can say now is t's cumbersome...

I check the black lines by plotting a vertical profile across each live image in PyCharm and investigating the line values.

Would it be possible to paste the array values here? I do not care if it's just a part of the array. I just want to see a black line begins in an image.
		</comment>
		<comment id='17' author='neelsbrink' date='2020-07-09T14:12:22Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;


I check the black lines by plotting a vertical profile across each live  image in PyCharm and investigating the line values

Where are you observing the data at? Right after the Harvester delivered the data? Or somewhere else in the OpenCV domain?
		</comment>
		<comment id='18' author='neelsbrink' date='2020-07-09T15:34:12Z'>
		I view the 8-bit data in OpenCV (see my code) but print the original data from
image = component.data.reshape(nrow, ncol)
&lt;denchmark-link:https://user-images.githubusercontent.com/13899456/87051077-65fb2300-c1ff-11ea-9201-ad8b832e18d1.jpg&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/13899456/87051095-6b586d80-c1ff-11ea-871d-f1a5d3f6fa8f.jpg&gt;&lt;/denchmark-link&gt;

image values along black line, frame1:
[1682 1653 1678 1672 1677 1684 1672 1682 1701 1689 1663 1671 1644 1671
1690 1641 1725 1664 1620 1673 1666 1645 1654 1673 1729 1619 1697 1635
1705 1669 1613 1665 1622 1663 1604 1661 1602 1628 1617 1687 1638 1667
1605 1671 1664 1600 1668 1636 1614 1697    0    0    0    0    0    0
0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0]
frame2:
[   0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0    0    0    0    0    0    0    0    0    0    0    0
0    0    0    0    0    0 2052 2173 2086 2021 2160 2077 2068 2053
2019 2032 2042 2064 2091 2148 2125 2108 2081 2090 2160 2190 2114 2119
2079 2091 2141 2137 2126 2198 2090 2174 2171 2092 2060 2162 2095 2150
2189 2119]
		</comment>
		<comment id='19' author='neelsbrink' date='2020-07-09T15:43:44Z'>
		I have just managed to get a test pattern, and the lines are there as well
&lt;denchmark-link:https://user-images.githubusercontent.com/13899456/87061132-a95b8e80-c20b-11ea-9703-f07036d7f255.jpg&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='20' author='neelsbrink' date='2020-07-09T15:47:24Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Thank you!
		</comment>
		<comment id='21' author='neelsbrink' date='2020-07-09T15:53:01Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Regarding the 3rd image, even if you transmit the test pattern, the black lines are moving every frame?
		</comment>
		<comment id='22' author='neelsbrink' date='2020-07-09T15:55:06Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 I would appreciate if you could show me the test pattern that consists of a single gray level.
		</comment>
		<comment id='23' author='neelsbrink' date='2020-07-09T16:14:32Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 Regarding the 3rd image, I can confirm (1) there are lines that consist of multiple gray values. (2) In addition, some lines are being interfered with the test pattern; you showed a line that consists of all zero gray value but the lines that I am talking about look like consisting of several gray levels, and they look get interfered by the test pattern in the background. Do you think they are just a digital noise that is produced while it's converted to a JPEG file? I would expect to have a line that consists of a single gray level as far as I hear your report but the following image shows a counterexample: Each line has a different average gray value and each line does not consist of a single gray value. Of course, I will not deny a case where the data was altered by the file conversion as I mentioned earlier.
&lt;denchmark-link:https://user-images.githubusercontent.com/8652625/87064321-83a1aa00-c24a-11ea-91fc-6028545940e4.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/8652625/87067557-2fe58f80-c24f-11ea-9351-8e63abf7351c.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='24' author='neelsbrink' date='2020-07-09T17:33:37Z'>
		I think it is the result of the conversion. I saved the image data to 16-bit TIFF and could verify that the lines are 0 graylevel. I can't upload the .tif and don't know how else to show an un-altered image of the lines.   The included histogram  shows no other graylevels close to 0, only  &gt; 1500
&lt;denchmark-link:https://user-images.githubusercontent.com/13899456/87071271-48878280-c21a-11ea-877b-ec96f1b93e1d.jpg&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='neelsbrink' date='2020-07-09T20:17:26Z'>
		Can you increase the interpacket delay  of your device?  Feature GevSCPD.
The error looks like lost packets. Which are not aligned to line length and thus appear "randomly" in your image.
		</comment>
		<comment id='26' author='neelsbrink' date='2020-07-10T00:07:42Z'>
		&lt;denchmark-link:https://github.com/thiesmoeller&gt;@thiesmoeller&lt;/denchmark-link&gt;
 Wow, my familiar hero showed up! :-) Thank you very much for your suggestion. That is VERY promising! (I will write a message to you later because I want to say hello and some more!)
&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 As Thies suggested, please try to increase that value.  or  doubles the data amount to be transmitted compared to  then they tend to choke up the receiver and the "choke up" appears as packet loss and it can be seen as a consecutive blank (the number of blank data is defined by the packet size in general). Actually you are trying to transmit 4M pixels images. That truly is the condition where it's worth checking the way Thies kindly suggested.
		</comment>
		<comment id='27' author='neelsbrink' date='2020-07-10T09:54:54Z'>
		Thanks Thies and Kazinaru. The increased interpacket delay does reduce (not remove completely) the number of black lines, but I have to increase it to &gt; 5000 to have an effect. This means delays in the image upon movement.  I am also starting to see the lines when using Mono8, although not when using the JAI control kit.
		</comment>
		<comment id='28' author='neelsbrink' date='2020-07-10T10:23:02Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
  How large is the size of a packet? /
		</comment>
		<comment id='29' author='neelsbrink' date='2020-07-10T13:09:54Z'>
		4036 which is the  max I can set it at
		</comment>
		<comment id='30' author='neelsbrink' date='2020-07-10T13:12:31Z'>
		&lt;denchmark-link:https://github.com/neelsbrink&gt;@neelsbrink&lt;/denchmark-link&gt;
 There is a NIC that offers you 9k or more. How about trying them out?
		</comment>
	</comments>
</bug>