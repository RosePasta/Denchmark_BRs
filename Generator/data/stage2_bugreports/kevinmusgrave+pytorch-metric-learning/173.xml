<bug id='173' author='mlw214' open_date='2020-08-08T17:48:42Z' closed_time='2020-08-31T13:07:56Z'>
	<summary>CircleLoss - loss is always 0 depending on `m` and `gamma`</summary>
	<description>
I've been playing around with CircleLoss, and it seems when you use the paper recommended values of m=0.25 and gamma=256, the loss is always 0.
Here's a simple example of it working with the default m and gamma:
import torch
from pytorch_metric_learning.losses import CircleLoss

torch.manual_seed(42)

emb = torch.randn(256, 512)
t = torch.randint(0, 10, size=(256,))
lossfn = CircleLoss()

loss = lossfn(emb, t)

print(loss)
# &gt;&gt;&gt; tensor(75.1902)
Changing m and gamma results in a loss of 0.
import torch
from pytorch_metric_learning.losses import CircleLoss

torch.manual_seed(42)

emb = torch.randn(256, 512)
t = torch.randint(0, 10, size=(256,))
lossfn = CircleLoss(m=0.25, gamma=256)

loss = lossfn(emb, t)

print(loss)
# &gt;&gt;&gt; loss = tensor(0.)
I played around with other m and gamma values, and have also seen this behavior. For example, gamma=128 also doesn't work when m=0.25. I have the same issue with the real data I'm using too.
	</description>
	<comments>
		<comment id='1' author='mlw214' date='2020-08-09T05:09:58Z'>
		I think I've fixed it. You can try it out with v0.9.91.dev0:
&lt;denchmark-code&gt;pip install pytorch-metric-learning==0.9.91.dev0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='mlw214' date='2020-08-09T21:15:16Z'>
		Excellent, seems to work at first glace. I'll go ahead and close this for now, and will re-open if necessary.
Thanks for the quick fix, and the excellent library!
		</comment>
		<comment id='3' author='mlw214' date='2020-08-10T01:11:41Z'>
		Reopening until its in the "non dev" version
		</comment>
	</comments>
</bug>