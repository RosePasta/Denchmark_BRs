<bug id='148' author='jwijffels' open_date='2020-06-30T11:04:33Z' closed_time='2020-07-01T19:26:49Z'>
	<summary>nnf_embedding - no argument input</summary>
	<description>
library(torch)
x &lt;- matrix(rnorm(20000*5), nrow = 20000, ncol = 5)
tt &lt;- torch_tensor(x)

test &lt;- nnf_embedding(torch_tensor(1:2, dtype = torch_long()), tt)
#&gt; Error in torch_embedding(weight = weight, input = input, padding_idx = padding_idx, : unused argument (input = input)
test &lt;- torch:::torch_embedding(weight = tt, 
                                indices = torch_tensor(0:1, dtype = torch_long()), 
                        padding_idx = -1L,
                        scale_grad_by_freq = FALSE, sparse = FALSE)
test &lt;- as_array(test)
test
#&gt;           [,1]       [,2]       [,3]       [,4]      [,5]
#&gt; [1,] 0.1955841 -0.5570903 -0.2056061 -0.2091042 0.3444653
#&gt; [2,] 1.0321622  1.5975115 -1.0296366 -0.3942826 1.0703566
x[1:2, ]
#&gt;           [,1]       [,2]       [,3]       [,4]      [,5]
#&gt; [1,] 0.1955841 -0.5570903 -0.2056061 -0.2091042 0.3444652
#&gt; [2,] 1.0321622  1.5975116 -1.0296366 -0.3942826 1.0703566
all.equal(x[1:2, ], test)
#&gt; [1] "Mean relative difference: 2.220236e-08"
Created on 2020-06-30 by the reprex package (v0.3.0)
	</description>
	<comments>
		<comment id='1' author='jwijffels' date='2020-06-30T11:50:41Z'>
		On the other hand this 0-indexing does something different
library(torch)
x &lt;- matrix(rnorm(2*5), nrow = 2, ncol = 5)
tt &lt;- torch_tensor(x, dtype = torch_float())
x
#&gt;            [,1]      [,2]       [,3]       [,4]       [,5]
#&gt; [1,] -1.0991287 -2.093796 -0.4286401  0.4125054 -1.4698507
#&gt; [2,]  0.5883414 -1.336617  0.5808373 -0.7292279  0.1114742
tt[0, , drop = FALSE]
#&gt; torch_tensor 
#&gt; -1.0991 -2.0938 -0.4286  0.4125 -1.4699
#&gt; [ CPUFloatType{1,5} ]
tt[1, , drop = FALSE]
#&gt; torch_tensor 
#&gt; -1.0991 -2.0938 -0.4286  0.4125 -1.4699
#&gt; [ CPUFloatType{1,5} ]
tt[2, , drop = FALSE]
#&gt; torch_tensor 
#&gt;  0.5883 -1.3366  0.5808 -0.7292  0.1115
#&gt; [ CPUFloatType{1,5} ]
Created on 2020-06-30 by the reprex package (v0.3.0)
		</comment>
		<comment id='2' author='jwijffels' date='2020-07-01T19:03:37Z'>
		Yeah, for now only the slice is 1-indexed, but we will move all indexing to 1-based in the future.
Indexing with 0 when slicing should raise an error not return the first element . I openend &lt;denchmark-link:https://github.com/mlverse/torch/issues/156&gt;#156&lt;/denchmark-link&gt;
 to track this.
We implemented  in &lt;denchmark-link:https://github.com/mlverse/torch/pull/155&gt;#155&lt;/denchmark-link&gt;
 and fixed the  argument in nnf_embedding.
		</comment>
	</comments>
</bug>