<bug id='161' author='rxwei' open_date='2019-05-31T08:13:42Z' closed_time='2019-06-01T20:53:08Z'>
	<summary>Fix failing tests on Linux.</summary>
	<description>
 has been failing on the Linux CI machine. It does not fail on macOS. This also seems related to the case where  is enabled on the  module in &lt;denchmark-link:https://github.com/apple/swift/pull/25166&gt;apple/swift#25166&lt;/denchmark-link&gt;
.
Test Case 'TrivialModelTests.testXOR' started at 2019-05-31 07:16:34.843
931
Exited with signal code 11
932
The command '/bin/sh -c /swift-tensorflow-toolchain/usr/bin/swift test' returned a non-zero code: 1
	</description>
	<comments>
		<comment id='1' author='rxwei' date='2019-05-31T08:14:05Z'>
		cc &lt;denchmark-link:https://github.com/bgogul&gt;@bgogul&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='rxwei' date='2019-05-31T17:30:51Z'>
		Here is the stack trace of the crash:
* thread #1, name = 'TensorFlowPacka', stop reason = signal SIGSEGV: invalid address (fault address: 0x0)
  * frame #0: 0x00007ffff7c64a9b libswiftCore.so`swift_getAssociatedTypeWitnessSlowImpl(swift::MetadataRequest, swift::TargetWitnessTable&lt;swift::InProcess&gt;*, swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::TargetProtocolRequirement&lt;swift::InProcess&gt; const*, swift::TargetProtocolRequirement&lt;swift::InProcess&gt; const*) + 203
    frame #1: 0x00007ffff7c62f2e libswiftCore.so`swift_getAssociatedTypeWitness + 142
    frame #2: TensorFlowPackageTests.xctest`$s10TensorFlow20_ShapedArrayProtocolPA2aB7ElementRpzAD_ADQZAERSrlE11description33_DBF849D2A9DA24E23B4FF3FA4D3704F0LL11indentLevel04edgeF5Count15maxScalarLength0vwU7PerLine11summarizingSSSi_S3iSbtF at &lt;compiler-generated&gt;:0
    frame #3: TensorFlowPackageTests.xctest`$s10TensorFlow20_ShapedArrayProtocolPA2aB7ElementRpzAD_ADQZAERSrlE11description33_DBF849D2A9DA24E23B4FF3FA4D3704F0LL11indentLevel04edgeF5Count15maxScalarLength0vwU7PerLine11summarizingSSSi_S3iSbtF18elementDescriptionL_ySSAeaBRzAabERQAfERSlF at ShapedArray.swift:356
    frame #4: TensorFlowPackageTests.xctest`$s10TensorFlow20_ShapedArrayProtocolPA2aB7ElementRpzAD_ADQZAERSrlE11description33_DBF849D2A9DA24E23B4FF3FA4D3704F0LL11indentLevel04edgeF5Count15maxScalarLength0vwU7PerLine11summarizingSSSi_S3iSbtF18elementDescriptionL_ySSAeaBRzAabERQAfERSlFTA at &lt;compiler-generated&gt;:0
    frame #5: TensorFlowPackageTests.xctest`$s7ElementQzSSs5Error_pIgnozo_ABSSsAC_pIegnrzo_10TensorFlow20_ShapedArrayProtocolRzAdeBRQAA_AAQZABRSlTR at &lt;compiler-generated&gt;:0
    frame #6: TensorFlowPackageTests.xctest`$s7ElementQzSSs5Error_pIgnozo_ABSSsAC_pIegnrzo_10TensorFlow20_ShapedArrayProtocolRzAdeBRQAA_AAQZABRSlTRTA.29 at &lt;compiler-generated&gt;:0
    frame #7: 0x00007ffff79a7d0f libswiftCore.so`$sSlsE3mapySayqd__Gqd__7ElementQzKXEKlF + 751
    frame #8: TensorFlowPackageTests.xctest`$s10TensorFlow20_ShapedArrayProtocolPA2aB7ElementRpzAD_ADQZAERSrlE11description33_DBF849D2A9DA24E23B4FF3FA4D3704F0LL11indentLevel04edgeF5Count15maxScalarLength0vwU7PerLine11summarizingSSSi_S3iSbtF at ShapedArray.swift:370
    frame #9: TensorFlowPackageTests.xctest`$s10TensorFlow20_ShapedArrayProtocolPA2aB7ElementRpzAD_ADQZAERSrlE11description9lineWidth04edgeF5Count11summarizingSSSi_SiSbtF at ShapedArray.swift:405
    frame #10: TensorFlowPackageTests.xctest`$s10TensorFlow11ShapedArrayV11descriptionSSvg at ShapedArray.swift:733
    frame #11: TensorFlowPackageTests.xctest`$s10TensorFlow0A0V11descriptionSSvg at Tensor.swift:419
    frame #12: TensorFlowPackageTests.xctest`$s10TensorFlow0A0VyxGs23CustomStringConvertibleAAsAEP11descriptionSSvgTW at &lt;compiler-generated&gt;:0
    frame #13: 0x00007ffff7a0833d libswiftCore.so`$ss15_print_unlockedyyx_q_zts16TextOutputStreamR_r0_lF + 765
    frame #14: 0x00007ffff7f07f43 libXCTest.so`$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFAA19_XCTAssertionResult33_F1DE58039960C6E2C9E25CD38F016B36LLOyKXEfU_Tm + 275
    frame #15: 0x00007ffff7f07bed libXCTest.so`$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFTm + 61
    frame #16: 0x00007ffff7f06cab libXCTest.so`$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF + 91
    frame #17: TensorFlowPackageTests.xctest`$s15TensorFlowTests012TrivialModelC0C7testXORyyF at TrivialModelTests.swift:56
    frame #18: TensorFlowPackageTests.xctest`$s15TensorFlowTests012TrivialModelC0C7testXORyyFTA at &lt;compiler-generated&gt;:0
    frame #19: TensorFlowPackageTests.xctest`$sIeg_ytIegr_TR at &lt;compiler-generated&gt;:0
    frame #20: TensorFlowPackageTests.xctest`$sIeg_ytIegr_TRTA at &lt;compiler-generated&gt;:0
    frame #21: 0x00007ffff7eff201 libXCTest.so`$sytIegr_Ieg_TRTA + 17
    frame #22: 0x00007ffff7eff25e libXCTest.so`$s6XCTest4test33_3BE257A46ADB477C7BF2D39968B39F9DLLyyAA0A4CaseCKcyyKcxcAERbzlFyAEKcfU_TA + 78
    frame #23: 0x00007ffff7eff1d4 libXCTest.so`$s6XCTest0A4CaseCs5Error_pIeggzo_ACytsAD_pIegnrzo_TRTA + 20
    frame #24: 0x00007ffff7ef2da7 libXCTest.so`$s6XCTest0A4CaseCyts5Error_pIegnrzo_ACsAD_pIeggzo_TRTA + 39
    frame #25: 0x00007ffff7efe849 libXCTest.so`$s6XCTest0A4CaseC10invokeTestyyF + 73
    frame #26: 0x00007ffff7efe50c libXCTest.so`$s6XCTest0A4CaseC7performyyAA0A3RunCF + 172
    frame #27: 0x00007ffff7f023df libXCTest.so`$s6XCTestAAC3runyyF + 191
    frame #28: 0x00007ffff7f00068 libXCTest.so`$s6XCTest0A5SuiteC7performyyAA0A3RunCF + 232
    frame #29: 0x00007ffff7f023df libXCTest.so`$s6XCTestAAC3runyyF + 191
    frame #30: 0x00007ffff7f00068 libXCTest.so`$s6XCTest0A5SuiteC7performyyAA0A3RunCF + 232
    frame #31: 0x00007ffff7f023df libXCTest.so`$s6XCTestAAC3runyyF + 191
    frame #32: 0x00007ffff7efd4b3 libXCTest.so`$s6XCTest7XCTMainys5NeverOSayAA0A4CaseCm04testD5Class_SaySS_yAFKctG8allTeststGF + 1091
    frame #33: TensorFlowPackageTests.xctest`main at LinuxMain.swift:7
    frame #34: 0x00007fffebeef2b1 libc.so.6`__libc_start_main + 241
    frame #35: 0x000055555561d21a TensorFlowPackageTests.xctest`_start + 42
		</comment>
		<comment id='3' author='rxwei' date='2019-05-31T17:32:48Z'>
		Could be related to &lt;denchmark-link:https://github.com/apple/swift/pull/23837&gt;apple/swift#23837&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='rxwei' date='2019-05-31T17:44:58Z'>
		&lt;denchmark-link:https://github.com/rxwei&gt;@rxwei&lt;/denchmark-link&gt;
, I think you are right. It looks like the assertion in that test fails and xctest is trying to print a message with the tensor.
		</comment>
		<comment id='5' author='rxwei' date='2019-05-31T18:13:13Z'>
		If it takes too long to fix, itâ€™s fine to revert it to get a green build status first. The tensor pretty printing implementation is known to have other bugs as well.
		</comment>
		<comment id='6' author='rxwei' date='2019-05-31T18:16:15Z'>
		&lt;denchmark-link:https://github.com/bgogul&gt;@bgogul&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/rxwei&gt;@rxwei&lt;/denchmark-link&gt;
 also dataset tests fail.
&lt;denchmark-code&gt;
Test Suite 'Selected tests' started at 2019-05-31 14:27:33.903
Test Suite 'DatasetTests' started at 2019-05-31 14:27:34.889
Test Case 'DatasetTests.testSingleValueTransformations' started at 2019-05-31 14:27:34.889
failed to demangle witness for associated type 'Iterator' in conformance 'TensorFlow.Dataset&lt;TensorFlow.Tensor&lt;Swift.Float&gt;&gt;: Sequence' from mangled name '10TensorFlow15DatasetIteratorVyxG'
Exited with signal code 6

Test Suite 'Selected tests' started at 2019-05-31 14:27:34.047
Test Suite 'DatasetTests' started at 2019-05-31 14:27:35.155
Test Case 'DatasetTests.testSingleValueHOFs' started at 2019-05-31 14:27:35.155
failed to demangle witness for associated type 'Iterator' in conformance 'TensorFlow.Dataset&lt;TensorFlow.Tensor&lt;Swift.Float&gt;&gt;: Sequence' from mangled name '10TensorFlow15DatasetIteratorVyxG'
Exited with signal code 6

Test Suite 'Selected tests' started at 2019-05-31 14:27:34.697
Test Suite 'DatasetTests' started at 2019-05-31 14:27:35.849
Test Case 'DatasetTests.testParallelMap' started at 2019-05-31 14:27:35.849
failed to demangle witness for associated type 'Iterator' in conformance 'TensorFlow.Dataset&lt;TensorFlow.Tensor&lt;Swift.Float&gt;&gt;: Sequence' from mangled name '10TensorFlow15DatasetIteratorVyxG'
Exited with signal code 6

Test Suite 'Selected tests' started at 2019-05-31 14:27:35.076
Test Suite 'DatasetTests' started at 2019-05-31 14:27:36.272
Test Case 'DatasetTests.testMapToDifferentType' started at 2019-05-31 14:27:36.272
failed to demangle witness for associated type 'Iterator' in conformance 'TensorFlow.Dataset&lt;TensorFlow.Tensor&lt;Swift.Float&gt;&gt;: Sequence' from mangled name '10TensorFlow15DatasetIteratorVyxG'
Exited with signal code 6
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='rxwei' date='2019-05-31T18:57:26Z'>
		I think I found the problem and it has to do with the code for the TensorFlow library multiple times: once during the compilation of stdlib and once during the compilation of tests. I removed the code from TensorFlow/CMakeLists.txt, rebuilt the whole toolchain and the tests pass.
Here is a possible plan forward:

on apple/swift:tensorflow, remove the code from TensorFlow/CMakeLists.txt and disable all the TensorFlow tests
get CI to green
migrate all the tests from apple/swift:tensorflow to swift-apis

Btw, I don't understand why the compiler is not giving any error or warning at all.
		</comment>
		<comment id='8' author='rxwei' date='2019-05-31T19:54:30Z'>
		&lt;denchmark-link:https://github.com/bgogul&gt;@bgogul&lt;/denchmark-link&gt;
 what do you mean when you say "code"? Is it just the tests code being duplicate? Or do you also refer to the sources of the  module itself? If it is the sources of the  module, I'm not sure how we can remove them but keep it part of the standard library.
I wonder what @testable import TensorFlow does. Does it prioritize the local TensorFlow module or does it also import stuff from the stdlib? I generally don't understand how name collisions like that are handled in Swift.
		</comment>
		<comment id='9' author='rxwei' date='2019-05-31T20:51:04Z'>
		
I wonder what @testable import TensorFlow does. Does it prioritize the local TensorFlow module or does it also import stuff from the stdlib? I generally don't understand how name collisions like that are handled in Swift.

@testable import imports a module that has been compiled for testing. If a module is compiled for testing, all internal symbols will be accessible to whoever imports it using @testable import.
I don't see any way @testable import TensorFlow can import the TensorFlow module that's part of the Swift for TensorFlow toolchain, because the one in the toolchain has not been compiled for testing and thus cannot be imported this way.
		</comment>
		<comment id='10' author='rxwei' date='2019-05-31T22:40:54Z'>
		
@bgogul what do you mean when you say "code"? Is it just the tests code being duplicate? Or do you also refer to the sources of the TensorFlow module itself? If it is the sources of the TensorFlow module, I'm not sure how we can remove them but keep it part of the standard library.

I meant the TensorFlow module. For the time being, I am building a toolchain with the tensorflow-swift-apis so that we can use it to run tests in swift-apis repository.
For testing things locally on your machine, just rename tensorflow-swift-apis to something else and rebuild the toolchain.
		</comment>
		<comment id='11' author='rxwei' date='2019-06-01T16:25:32Z'>
		&lt;denchmark-link:https://github.com/bgogul&gt;@bgogul&lt;/denchmark-link&gt;
 does &lt;denchmark-link:https://github.com/tensorflow/swift-apis/pull/163&gt;#163&lt;/denchmark-link&gt;
 solve these issues?
		</comment>
		<comment id='12' author='rxwei' date='2019-06-01T18:16:33Z'>
		Yes, Pawan. Let us close this issue then?
&lt;denchmark-link:#&gt;â€¦&lt;/denchmark-link&gt;


On Sat, Jun 1, 2019, 9:25 AM Pawan Sasanka Ammanamanchi &lt; ***@***.***&gt; wrote:
 @bgogul &lt;https://github.com/bgogul&gt; does #163
 &lt;#163&gt; solve these issues?

 â€”
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#161?email_source=notifications&amp;email_token=ABTJAKYOJFZOPQLYZU6VLHLPYKPH5A5CNFSM4HRV67A2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWXD26I#issuecomment-497958265&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABTJAK6ADRRJDGLUZZWSF7TPYKPH5ANCNFSM4HRV67AQ&gt;
 .



		</comment>
		<comment id='13' author='rxwei' date='2019-06-01T18:22:16Z'>
		&lt;denchmark-link:https://github.com/bgogul&gt;@bgogul&lt;/denchmark-link&gt;
 Yeah, We should.
		</comment>
	</comments>
</bug>