<bug id='3259' author='artix41' open_date='2020-03-27T12:46:06Z' closed_time='2020-04-07T13:59:24Z'>
	<summary>Indexing pointer tensors with a list</summary>
	<description>
When running the following code
hook = sy.TorchHook(torch)
bob = sy.VirtualWorker(hook, id="bob")

a = torch.tensor([10,20,30])
print(a[[0,2]])

b = torch.tensor([10,20,30]).send(bob)
print(b[[0,2]])
the first tensor a get displayed correctly as
tensor([10, 30])
but the second tensor raises the following error:
IndexError: too many indices for tensor of dimension 1
I have Python 3.7.6, PySyft 0.2.4 and PyTorch 1.4.0.
I'm new to PySyft, so maybe it is an expected behavior for some reasons, but I don't really see why (since remote tensors are supposed to have the same functionalities as normal tensors as far as I understand).
	</description>
	<comments>
		<comment id='1' author='artix41' date='2020-03-27T21:32:17Z'>
		I can take a look.
		</comment>
	</comments>
</bug>