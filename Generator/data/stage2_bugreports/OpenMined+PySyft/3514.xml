<bug id='3514' author='ZhechunZhou' open_date='2020-05-13T11:03:44Z' closed_time='2020-07-05T00:08:44Z'>
	<summary>model.copy().get() cause "clone() got an unexpected keyword argument 'memory_format'" error</summary>
	<description>
I tried to implement model averaging using the function provided by Tutorial
"Federated Learning of a Recurrent Neural Network for text classification"
I uncomment this line:
"model_pointers = fed_avg_every_n_iters(model_pointers, iter, args.federate_after_n_batches)"
to run this function:
def fed_avg_every_n_iters(model_pointers, iter, federate_after_n_batches):
models_local = {}
&lt;denchmark-code&gt;    if(iter % args.federate_after_n_batches == 0):
        for worker_name, model_pointer in model_pointers.items():
            #need to assign the model to the worker it belongs to.
            models_local[worker_name] = model_pointer.copy().get() ############# error here
        model_avg = utils.federated_avg(models_local)
       
        for worker in workers_virtual:
            model_copied_avg = model_avg.copy()
            model_ptr = model_copied_avg.send(worker) 
            model_pointers[worker.id] = model_ptr
            
    return(model_pointers)     
&lt;/denchmark-code&gt;

and the error message was:
TypeError: clone() got an unexpected keyword argument 'memory_format'
	</description>
	<comments>
		<comment id='1' author='ZhechunZhou' date='2020-05-28T21:01:32Z'>
		&lt;denchmark-link:https://github.com/ZhechunZhou&gt;@ZhechunZhou&lt;/denchmark-link&gt;
 I have some guesses where this might come from, but it's a little bit difficult to pin down. Could you post a stack trace for this error?
		</comment>
		<comment id='2' author='ZhechunZhou' date='2020-06-28T00:07:15Z'>
		This issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.
		</comment>
		<comment id='3' author='ZhechunZhou' date='2020-07-15T20:03:27Z'>
		I meet the same problem. The key is to call get for the weight of the model instead of the model itself.
		</comment>
	</comments>
</bug>