<bug id='1350' author='iamtrask' open_date='2018-06-20T22:07:17Z' closed_time='2018-06-21T19:03:17Z'>
	<summary>Cannot .send_() Variable objects if .grad != None</summary>
	<description>
&lt;denchmark-h:h1&gt;Issue Template&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Context&lt;/denchmark-h&gt;

When running the following code,
&lt;denchmark-code&gt;from syft.core.hooks import TorchHook
from syft.core.workers import VirtualWorker
import torch
import torch.nn as nn
from torch.autograd import Variable as Var
import torch.optim as optim
# this is our hook
hook = TorchHook()
local = hook.local_worker
remote = VirtualWorker(id=1,hook=hook)
local.add_worker(remote)

data = Var(torch.FloatTensor([[0,0],[0,1],[1,0],[1,1]]))
target = Var(torch.FloatTensor([[0],[0],[1],[1]]))

# model = nn.Linear(2,1)
model = Var(torch.zeros(2,1),requires_grad=True)

# generates grad objects
pred = data.mm(model)
loss = ((pred - target)**2).sum()
loss.backward()

model.send_(remote)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

I expect that when I call model.send_(remote), that it will send the Variable to the remote VirtualWorker.
&lt;denchmark-h:h2&gt;Current Behavior&lt;/denchmark-h&gt;

It errors out and does not send the variable with the following stacktrace.
&lt;denchmark-code&gt;---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-14-4207de4e45fd&gt; in &lt;module&gt;()
     10 loss.backward()
     11 
---&gt; 12 model.send_(remote)

/Users/atrask/anaconda/lib/python3.6/site-packages/syft-0.1.0-py3.6.egg/syft/core/hooks.py in send_(self, workers)
    907                                                    owners=self.owners, is_pointer=True)
    908 
--&gt; 909             return hook_self._var_to_pointer(self, hook_self)
    910 
    911         setattr(torch.autograd.variable.Variable, 'send_', send_)

/Users/atrask/anaconda/lib/python3.6/site-packages/syft-0.1.0-py3.6.egg/syft/core/hooks.py in _var_to_pointer(self, var, hook_self)
    982         print("_var_to_pointer:" + str(var.data.id))
    983         if var.grad is not None:
--&gt; 984             self._var_to_pointer(var.grad, hook_self)
    985 
    986         var.data.old_set_(var.data.__class__(0))

/Users/atrask/anaconda/lib/python3.6/site-packages/syft-0.1.0-py3.6.egg/syft/core/hooks.py in _var_to_pointer(self, var, hook_self)
    989                                           id=var.data.id,
    990                                           owners=var.owners,
--&gt; 991                                           is_pointer=True)
    992         return var
    993 

/Users/atrask/anaconda/lib/python3.6/site-packages/syft-0.1.0-py3.6.egg/syft/core/workers.py in register_object(self, worker, obj, force_attach_to_worker, temporary, **kwargs)
    508             raise RuntimeError(
    509                 'Invalid registry: is_pointer is {} but owners is {} on tensor {}'.format(
--&gt; 510                     obj.is_pointer, obj.owners, obj.id))
    511         # print("setting object:" + str(obj.id))
    512         self.set_obj(obj.id, obj, force=force_attach_to_worker, tmp=temporary)

RuntimeError: Invalid registry: is_pointer is True but owners is [0] on tensor 2841986768
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Failure Information (for bugs)&lt;/denchmark-h&gt;

Some investigation has indicated that this only happens when attempting to send a variable that has a gradient object attached to it.
&lt;denchmark-h:h3&gt;Steps to Reproduce (for bugs)&lt;/denchmark-h&gt;

Please provide detailed steps for reproducing the issue. (for bugs)

Run code above
Observe error :)

	</description>
	<comments>
		<comment id='1' author='iamtrask' date='2018-06-20T22:18:09Z'>
		The troubleshooting for this Issue is at the end of this livestream &lt;denchmark-link:https://www.twitch.tv/videos/275575625&gt;https://www.twitch.tv/videos/275575625&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='iamtrask' date='2018-06-21T19:03:17Z'>
		Can close with merged PR!
		</comment>
	</comments>
</bug>