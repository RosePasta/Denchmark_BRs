<bug id='2071' author='schimpffabian' open_date='2019-04-15T08:59:34Z' closed_time='2020-05-25T00:08:58Z'>
	<summary>Federating datasets doesn't work with subsets</summary>
	<description>
I don't know if this is an issue of general interest but PySyft would be more versatile if it were more agnostic in the way it handles datasets in dataset.federate((...))
I wrote a little tool to convert Subsets (also of ImageFolder datasets) to regular Datasets as a fix but it ain't a pretty solution:
&lt;denchmark-code&gt;class DatasetFromSubset(Dataset):
    def __init__(self, subset):
        data, targets = self.subset_to_dataset(subset)
        self.data = data
        self.targets = targets

    def __len__(self):
        return len(self.targets)

    def __getitem__(self, index):
        return self.data[index, :], self.targets[index]

    @staticmethod
    def subset_to_dataset(subset):
        indices = subset.indices
        targets = subset.dataset.targets

        targets_subset = torch.tensor(
            [targets[ii] for ii in list(indices.data.numpy())]
        )

        # Empty definition
        concat_tensor = None

        dataloader = torch.utils.data.DataLoader(subset, batch_size=2000, shuffle=False)

        for ii, (data, target) in enumerate(dataloader):
            print(ii)

            if ii == 0:
                concat_tensor = data
            else:
                concat_tensor = torch.cat((concat_tensor, data), 0)

return concat_tensor, targets_subset
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='schimpffabian' date='2019-04-17T11:50:00Z'>
		Very interesting feature! What kind of subset are you interested in selecting?
		</comment>
		<comment id='2' author='schimpffabian' date='2019-04-17T12:29:05Z'>
		&lt;denchmark-link:https://github.com/iamtrask&gt;@iamtrask&lt;/denchmark-link&gt;
 I assume it is linked to this example: &lt;denchmark-link:https://github.com/2fasc/Distributed_Malaria/blob/master/src/federated_training.py&gt;https://github.com/2fasc/Distributed_Malaria/blob/master/src/federated_training.py&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='schimpffabian' date='2019-04-18T07:16:15Z'>
		
What kind of subset are you interested in selecting?

I'm using torch.utils.data.random_split(dataset, size_set) to split datasets into train, test and validation sets. This basically creates a new class that contains the original dataset and adds a list of indices assigned to each split.

I assume it is linked to this example: https://github.com/2fasc/Distributed_Malaria/blob/master/src/federated_training.py

Exactly. I'm curious how imbalanced label distributions affect federated / distributed training.
		</comment>
		<comment id='4' author='schimpffabian' date='2019-08-18T19:32:32Z'>
		@2fasc thanks for posting your code. How do I use it to convert an imagefolder dataset to a dataset that I can federate?
		</comment>
		<comment id='5' author='schimpffabian' date='2020-05-25T00:08:56Z'>
		This issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.
		</comment>
	</comments>
</bug>