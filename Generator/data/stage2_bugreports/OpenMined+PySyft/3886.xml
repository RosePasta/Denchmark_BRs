<bug id='3886' author='usamazf' open_date='2020-07-21T14:18:24Z' closed_time='2020-11-19T13:26:05Z'>
	<summary>Importing torchvision library is causing problems when using pysyft</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I use torchvision to load some datasets while using Pysyft framework, the problem is if I import the libraries after using "hook = sy.TorchHook(torch)" I get weird error. The issue disappears when doing import before using hook.
&lt;denchmark-h:h2&gt;How to Reproduce&lt;/denchmark-h&gt;


Install latest Pysyft
write a simple script
import syft as sy
using torch hook
import torchvision

&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

To be able to load the library properly regardless of the order of being imported. I have requirement where I need to load datasets at a later time in a different module.
&lt;denchmark-h:h2&gt;Screenshots&lt;/denchmark-h&gt;

If applicable, add screenshots to help explain your problem.
&lt;denchmark-h:h2&gt;System Information&lt;/denchmark-h&gt;


OS: Ubuntu
OS Version: 16.04
Language Version: [e.g. Python 3.7, Node 10.18.1]

&lt;denchmark-h:h2&gt;Additional Context&lt;/denchmark-h&gt;

Error trace is as follows:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "start_federated_server.py", line 19, in &lt;module&gt;
    import torchvision.transforms as transforms
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torchvision/__init__.py", line 3, in &lt;module&gt;
    from torchvision import models
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torchvision/models/__init__.py", line 12, in &lt;module&gt;
    from . import detection
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torchvision/models/detection/__init__.py", line 1, in &lt;module&gt;
    from .faster_rcnn import *
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torchvision/models/detection/faster_rcnn.py", line 14, in &lt;module&gt;
    from .roi_heads import RoIHeads
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torchvision/models/detection/roi_heads.py", line 211, in &lt;module&gt;
    @torch.jit.script
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/__init__.py", line 1281, in script
    fn = torch._C._jit_script_compile(qualified_name, ast, _rcb, get_default_args(obj))
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/_recursive.py", line 555, in try_compile_fn
    return torch.jit.script(fn, _rcb=rcb)
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/__init__.py", line 1281, in script
    fn = torch._C._jit_script_compile(qualified_name, ast, _rcb, get_default_args(obj))
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/_recursive.py", line 555, in try_compile_fn
    return torch.jit.script(fn, _rcb=rcb)
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/__init__.py", line 1278, in script
    ast = get_jit_def(obj)
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/frontend.py", line 171, in get_jit_def
    return build_def(ctx, py_ast.body[0], type_line, self_name)
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/frontend.py", line 212, in build_def
    build_stmts(ctx, body))
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/frontend.py", line 127, in build_stmts
    stmts = [build_stmt(ctx, s) for s in stmts]
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/frontend.py", line 127, in &lt;listcomp&gt;
    stmts = [build_stmt(ctx, s) for s in stmts]
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torch/jit/frontend.py", line 186, in __call__
    raise UnsupportedNodeError(ctx, node)
torch.jit.frontend.UnsupportedNodeError: import statements aren't supported:
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/syft/generic/frameworks/hook/hook.py", line 2471
    .. include:: cuda_deterministic_backward.rst
    """
    from .modules.utils import _ntuple
    ~~~~ &lt;--- HERE

    def _check_size_scale_factor(dim):
'_onnx_heatmaps_to_keypoints' is being compiled since it was called from '_onnx_heatmaps_to_keypoints_loop'
  File "/home/usama/anaconda3/envs/pysyft/lib/python3.7/site-packages/torchvision/models/detection/roi_heads.py", line 218

    for i in range(int(rois.size(0))):
        xy_preds_i, end_scores_i = _onnx_heatmaps_to_keypoints(maps, maps[i],
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...  &lt;--- HERE
                                                               widths_ceil[i], heights_ceil[i],
                                                               widths[i], heights[i],
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='usamazf' date='2020-07-22T02:12:22Z'>
		UPDATE: This error seems to occur only when I try to create plan using the tutorials at: &lt;denchmark-link:https://github.com/OpenMined/PySyft/blob/master/examples/tutorials/static-fl/Part%2001%20-%20Create%20Plan.ipynb&gt;Creating Plans&lt;/denchmark-link&gt;
. After removing any calls to @sy.func2plan() the code seems to work fine. Is this a bug or not? I am confused now even more!
		</comment>
		<comment id='2' author='usamazf' date='2020-08-22T00:10:57Z'>
		This issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.
		</comment>
		<comment id='3' author='usamazf' date='2020-10-21T11:30:20Z'>
		Can confirm this bug exists. I am not using any tutorial. Just created a hook and then tried to import datasets from torchvision and I got the same error.
The hack I am using right now is to do torchvision stuff first and then create a hook.
		</comment>
		<comment id='4' author='usamazf' date='2020-11-17T21:12:03Z'>
		Have this/similar problem too.
After hooking torch, the following code will fail every time:
pickle.load(pickle_file)
I also used the workaround of first importing torchvision and then hooking.
		</comment>
		<comment id='5' author='usamazf' date='2020-11-19T13:26:04Z'>
		Hello! Just letting you know that we are no longer planning on supporting anything on the 0.2.x product line and that all work should be ported over to 0.3.x, which is considered a complete rebuild of PySyft. Because of that, I'll be closing this issue. If you feel this is a mistake, or if the issue actually applies to 0.3.x as well, please feel free to ping me on Slack and I'll reopen the issue.
		</comment>
	</comments>
</bug>