<bug id='1367' author='jvmncs' open_date='2018-06-25T20:23:48Z' closed_time='2019-02-05T15:07:18Z'>
	<summary>Fix up special case of overloading __repr__ to print big tensors</summary>
	<description>
Child of &lt;denchmark-link:https://github.com/OpenMined/PyGrid/issues/171&gt;OpenMined/PyGrid#171&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/OpenMined/PyGrid/issues/190&gt;OpenMined/PyGrid#190&lt;/denchmark-link&gt;
 (see those and their discussion for reference/instructions)
	</description>
	<comments>
		<comment id='1' author='jvmncs' date='2018-07-03T08:19:35Z'>
		From the stacktrace below obtained when printing which involves new___repr__, it seems that the problem is caused by row[-truncate:] which uses the select() method on a Tensor, (which we haven't rewritten as it is in the self.exclude of the hook)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/Users/ryffel/Documents/Code/PySyft/syft/core/hooks.py", line 622, in new___repr__
    return self.old__repr__()
  File "/anaconda3/lib/python3.6/site-packages/torch/tensor.py", line 144, in __repr__
    return str(self)
  File "/anaconda3/lib/python3.6/site-packages/torch/tensor.py", line 151, in __str__
    return _tensor_str._str(self)
  File "/anaconda3/lib/python3.6/site-packages/torch/_tensor_str.py", line 297, in _str
    strt = _matrix_str(self)
  File "/anaconda3/lib/python3.6/site-packages/torch/_tensor_str.py", line 246, in _matrix_str
    strt += __repr_row(row, indent, fmt, scale, sz, n)
  File "/anaconda3/lib/python3.6/site-packages/torch/_tensor_str.py", line 202, in __repr_row
    ' '.join(fmt.format(val / scale) for val in row[-truncate:]) +
  File "/Users/ryffel/Documents/Code/PySyft/syft/core/hooks.py", line 298, in send_to_workers
    if self.is_pointer:
AttributeError: 'torch.FloatTensor' object has no attribute 'is_pointer'
Can't we just fix this by modifying the new___rpr__ as follows ?
def new___repr__(self):
      _id_in_owners = hook_self.local_worker.id in self.owners
      if (hook_self.local_worker in self.owners or _id_in_owners):
tensor_type.is_pointer = False
          return self.old__repr__()
      else:
          ...
It fixes the basic examples given in the related issues, and passes tests, but I not sure it is ok in general.
		</comment>
	</comments>
</bug>