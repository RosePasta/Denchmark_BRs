<bug id='2273' author='Polarbeargo' open_date='2019-06-12T08:20:14Z' closed_time='2019-06-12T12:15:35Z'>
	<summary>AttributeError: 'int' object has no attribute 'is_wrapper'</summary>
	<description>
Describe the bug
Execute Part 11 - Secure Deep Learning Classification.ipynb ecounter "AttributeError: 'int' object has no attribute 'is_wrapper'"
To Reproduce
Steps to reproduce the behavior:

Go to 'examples/tutorials/Part 11 - Secure Deep Learning Classification.ipynb'
Click on 'run all'
Scroll down to 'cell 17 test(args, model, private_test_loader)'
See error


No error here:).

&lt;denchmark-link:https://user-images.githubusercontent.com/8589224/59334626-7fe0e280-8d2d-11e9-9c9b-e556e3c1d099.png&gt;&lt;/denchmark-link&gt;


On Google colaboratory
	</description>
	<comments>
		<comment id='1' author='Polarbeargo' date='2019-06-12T09:13:20Z'>
		Hey, indeed there is a bug in our last release 0.1.18 when operating with constant values, I'm working on a fix right now.
		</comment>
		<comment id='2' author='Polarbeargo' date='2019-06-12T09:14:37Z'>
		&lt;denchmark-link:https://github.com/LaRiffle&gt;@LaRiffle&lt;/denchmark-link&gt;
 Thank you:)! I appreciate your help.
		</comment>
		<comment id='3' author='Polarbeargo' date='2019-06-12T09:19:24Z'>
		&lt;denchmark-link:https://github.com/OpenMined/PySyft/pull/2274&gt;#2274&lt;/denchmark-link&gt;
 should solve
It will be merged very soon so if you can build the code from source in your colab you should benefit from it quickly, otherwise the 1.19 release will arrive in a few days. :)
		</comment>
		<comment id='4' author='Polarbeargo' date='2019-06-12T09:20:42Z'>
		Thank you &lt;denchmark-link:https://github.com/LaRiffle&gt;@LaRiffle&lt;/denchmark-link&gt;
!
		</comment>
		<comment id='5' author='Polarbeargo' date='2019-06-12T09:33:30Z'>
		For information, this is my config to build and run the latest code from PySyft on Colab:
&lt;denchmark-code&gt;!pip install tf-encrypted

! URL="https://github.com/openmined/PySyft.git" &amp;&amp; FOLDER="PySyft" &amp;&amp; if [ ! -d $FOLDER ]; then git clone -b dev --single-branch $URL; else (cd $FOLDER &amp;&amp; git pull $URL &amp;&amp; cd ..); fi;

!cd PySyft; python setup.py install  &gt; /dev/null

import os
import sys
module_path = os.path.abspath(os.path.join('./PySyft'))
if module_path not in sys.path:
    sys.path.append(module_path)

!pip install --upgrade --force-reinstall lz4
!pip install --upgrade --force-reinstall websocket
!pip install --upgrade --force-reinstall websockets
!pip install --upgrade --force-reinstall zstd
&lt;/denchmark-code&gt;

I'm sure this is sub optimal, but it works ;)
		</comment>
	</comments>
</bug>