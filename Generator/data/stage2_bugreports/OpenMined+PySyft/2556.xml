<bug id='2556' author='mzenk' open_date='2019-08-26T07:41:36Z' closed_time='2019-09-03T15:24:56Z'>
	<summary>Argmax on encrypted  data fails</summary>
	<description>
The argmax-call on an encrypted tensor throws an exception. Minimal code example for reproduction:
&lt;denchmark-code&gt;import torch
import syft as sy
hook = sy.TorchHook(torch)

alice = sy.VirtualWorker(hook, 'alice')
bob = sy.VirtualWorker(hook, 'bob')

a = torch.arange(6)
enc_a = a.share(alice, bob)
print(enc_a.argmax())
&lt;/denchmark-code&gt;

Executing this script results in a KeyError: 'Object "44504679185" not found on worker!!!You just tried to interact with an object ID:44504679185 on &lt;VirtualWorker id:alice #objects:36&gt; which does not exist!!!
My python environment (Ubuntu 18.04):
torch 1.1.0
syft 0.1.24a1
	</description>
	<comments>
		<comment id='1' author='mzenk' date='2019-09-03T14:58:03Z'>
		This should work :)
Add a crypto_provider and call fix_precision()
import torch
import syft as sy
hook = sy.TorchHook(torch)

alice = sy.VirtualWorker(hook, 'alice')
bob = sy.VirtualWorker(hook, 'bob')
crypto_provider = sy.VirtualWorker(hook, 'crypto_provider')

a = torch.arange(6).fix_precision()
enc_a = a.share(alice, bob, crypto_provider=crypto_provider)
print(enc_a.argmax())
		</comment>
		<comment id='2' author='mzenk' date='2019-09-03T15:24:56Z'>
		Thank you! I checked that both modifications are necessary to fix the problem.
		</comment>
		<comment id='3' author='mzenk' date='2019-09-03T15:25:57Z'>
		I assumed that I did not need fix precision encoding on an integer tensor. The need for an explicit crypto provider wasn't clear to me either. Could you explain on both?
		</comment>
		<comment id='4' author='mzenk' date='2019-09-03T17:07:02Z'>
		So actually you should have to do it, even if it doesn't raise an error: even if you work with integers, fix precision elements are in a field while integers are not, so it is a  best practice. And actually for some reason it doesn't work if you don't do it (argmax does smthg strange)
Same for crypto provider, it should be possible to not explicitoit,  but it doesn't work for some reason :/
		</comment>
	</comments>
</bug>