<bug id='2049' author='flo257' open_date='2019-04-09T07:25:00Z' closed_time='2019-06-15T18:55:12Z'>
	<summary>Custom Neural Network in Federated Learning</summary>
	<description>
Hi,
I've experienced a problem while replacing the simple Neural Network of the "Federated CIFAR 10 Example" with more complex ones - eg. those untrained models in torchvision.models.
I've replaced model = Net().to(device) by
import torchvision.models as models; model = models.resnet18() and left everything else untouched, but at output = model(data) I'm always receiving a "RuntimeError: bool value of Tensor with no values is ambiguous".
It seems that the model tries to make a prediction on an empy tensor - however, the tensor should be there, as it's working with the simple model in the tutorial.
Do you have any suggestions?
Thank you
	</description>
	<comments>
		<comment id='1' author='flo257' date='2019-04-10T15:58:09Z'>
		&lt;denchmark-link:https://github.com/flo257&gt;@flo257&lt;/denchmark-link&gt;
 Thank you for raising this issue.We haven't particularly thought of developing support for pretrained models from torch vision , but in the near future we will ensure the support for it is taken care of :)
		</comment>
		<comment id='2' author='flo257' date='2019-04-12T09:10:00Z'>
		Hi &lt;denchmark-link:https://github.com/flo257&gt;@flo257&lt;/denchmark-link&gt;
 - it sounds like there's an issue with the way the model is deserialized. In particular, we have to wrap all of our custom tensor types (wrapped by empty tensors). There's no reason why your operation shouldn't work - but it's hard for me to debug without seeing the code. Can you upload what you've got here? How can I reproduce?
		</comment>
		<comment id='3' author='flo257' date='2019-04-12T13:16:39Z'>
		Sure - I've used the "Federated CIFAR 10 Example" here on GitHub from /examples/tutorials/advanced/and only changed the line model = Net().to(device) into import torchvision.models as models; model = models.resnet18().to(device) while leaving everything else untouched.
You can reproduce this by simply changing this line on the tutorial in the jupyter notebook and start the training process.
		</comment>
		<comment id='4' author='flo257' date='2019-06-15T18:55:12Z'>
		I think this is related to &lt;denchmark-link:https://github.com/OpenMined/PySyft/issues/2175&gt;#2175&lt;/denchmark-link&gt;
, I'm closing this for now. Feel free to re-open if after &lt;denchmark-link:https://github.com/OpenMined/PySyft/issues/2175&gt;#2175&lt;/denchmark-link&gt;
 is fixed this is still a problem.
		</comment>
	</comments>
</bug>