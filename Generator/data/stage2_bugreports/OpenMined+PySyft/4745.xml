<bug id='4745' author='madhavajay' open_date='2020-10-28T20:59:09Z' closed_time='2021-01-22T05:39:45Z'>
	<summary>KeyError / Fix the FQN issue on print(duet.store)</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Sending a searchable SyPrimitive type seems to cause an exception when printing the store.
&lt;denchmark-code&gt;l = sy.lib.python.List()
l.send(duet, searchable=True)
print(duet.store)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Definition of Done&lt;/denchmark-h&gt;

Fixed.
	</description>
	<comments>
		<comment id='1' author='madhavajay' date='2020-10-29T21:23:51Z'>
		This is happening with any and all classes where the fqn changes depending on import context, so we need something more permanently corrective.
		</comment>
		<comment id='2' author='madhavajay' date='2020-10-30T13:30:12Z'>
		Still happens on classes like:
&lt;denchmark-code&gt;&gt;&gt;&gt; torch.nn.modules.Sequential
&lt;class 'torch.nn.modules.container.Sequential'&gt;
&gt;&gt;&gt; torch.nn.Sequential
&lt;class 'torch.nn.modules.container.Sequential'&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='madhavajay' date='2020-11-03T00:14:37Z'>
		This also happens inside the new sy.module:
&lt;denchmark-code&gt;# module.py
def __setattr__(self, name: str, value: Union[Any, "Module"]) -&gt; None:
        # bug where torch.nn.modules isnt the full name on some imports
        # TODO: fix this properly
        if "torch.nn" in full_name_with_qualname(klass=type(value)):
            modules = self.__dict__.get("_modules")
            if modules is not None:
                modules[name] = value
        else:
            object.__setattr__(self, name, value)

&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>