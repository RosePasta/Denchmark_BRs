<bug id='3401' author='gmuraru' open_date='2020-04-24T13:32:40Z' closed_time='2020-06-16T00:06:39Z'>
	<summary>`test_torch_tanh_approx` is flaky</summary>
	<description>
Describe the bug
The test_torch_tanh_approx test fails intermittently during automated PR testing.
To Reproduce
Run the test (or full suite) until it fails.
Screenshots
&lt;denchmark-code&gt;2020-04-24T13:00:44.9923763Z method = 'sigmoid', prec_frac = 3, tolerance = 0.1
2020-04-24T13:00:44.9925054Z workers = {'alice': &lt;VirtualWorker id:alice #objects:112&gt;, 'bob': &lt;VirtualWorker id:bob #objects:1&gt;, 'charlie': &lt;VirtualWorker id:charlie #objects:0&gt;, 'james': &lt;VirtualWorker id:james #objects:88&gt;, ...}
2020-04-24T13:00:44.9925523Z 
2020-04-24T13:00:44.9927154Z     @pytest.mark.parametrize(
2020-04-24T13:00:44.9928770Z         "method, prec_frac, tolerance",
2020-04-24T13:00:44.9929162Z         [
2020-04-24T13:00:44.9929727Z             ("chebyshev", 3, 3 / 100),
2020-04-24T13:00:44.9930283Z             ("chebyshev", 4, 2 / 100),
2020-04-24T13:00:44.9931907Z             ("sigmoid", 3, 10 / 100),
2020-04-24T13:00:44.9932292Z             ("sigmoid", 4, 5 / 100),
2020-04-24T13:00:44.9932554Z         ],
2020-04-24T13:00:44.9932811Z     )
2020-04-24T13:00:44.9933080Z     def test_torch_tanh_approx(method, prec_frac, tolerance, workers):
2020-04-24T13:00:44.9933338Z         """
2020-04-24T13:00:44.9933695Z         Test the approximate tanh with different tolerance depending on
2020-04-24T13:00:44.9934214Z         the precision_fractional considered
2020-04-24T13:00:44.9934531Z         """
2020-04-24T13:00:44.9935194Z         alice, bob, james = workers["alice"], workers["bob"], workers["james"]
2020-04-24T13:00:44.9935474Z     
2020-04-24T13:00:44.9936409Z         t = torch.tensor(range(-10, 10)) * 0.5
2020-04-24T13:00:44.9936742Z         t_sh = t.fix_precision(precision_fractional=prec_frac).share(alice, bob, crypto_provider=james)
2020-04-24T13:00:44.9937146Z         r_sh = t_sh.tanh(method)
2020-04-24T13:00:44.9937583Z         r = r_sh.get().float_prec()
2020-04-24T13:00:44.9937975Z         t = t.tanh()
2020-04-24T13:00:44.9938588Z         diff = (r - t).abs().max()
2020-04-24T13:00:44.9938866Z         norm = (r + t).abs().max() / 2
2020-04-24T13:00:44.9939168Z     
2020-04-24T13:00:44.9939675Z &gt;       assert (diff / (tolerance * norm)) &lt; 1
2020-04-24T13:00:44.9940476Z E       assert (tensor(0.1101) / (0.1 * tensor(1.0000))) &lt; 1
2020-04-24T13:00:44.9940636Z 
2020-04-24T13:00:44.9942016Z test/torch/tensors/test_precision.py:512: AssertionError
&lt;/denchmark-code&gt;

Expected behavior
The test should always pass
Additional context
This started being an issue when the order of the test suite was randomized (specifically to shake out flaky tests like this.)
	</description>
	<comments>
		<comment id='1' author='gmuraru' date='2020-05-09T21:44:31Z'>
		Can i work on this issue? is it open?
		</comment>
		<comment id='2' author='gmuraru' date='2020-06-09T00:06:13Z'>
		This issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.
		</comment>
	</comments>
</bug>