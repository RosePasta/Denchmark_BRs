<bug id='2562' author='mari-linhares' open_date='2019-08-27T12:58:25Z' closed_time='2020-05-24T00:09:15Z'>
	<summary>resnet50 not supported when torch 1.0.1 / 1.1 is hooked</summary>
	<description>
&lt;denchmark-code&gt;import torch
import syft
hook = syft.TorchHook(torch)
import torchvision.models as models

def make_model(num_out_classes: int):
    """Load a resnet50 and add a new head to it."""
    model = models.resnet50(pretrained=True) 
    num_ftrs = model.fc.in_features
    model.fc = torch.nn.Linear(num_ftrs, num_out_classes)
    return model

model = make_model(7)
model(torch.zeros(torch.Size([1, 3, 224, 224])))
&lt;/denchmark-code&gt;

Error:
&lt;denchmark-code&gt;...
~/PySyft/syft/frameworks/torch/hook/hook.py in overloaded_func(*args, **kwargs)
    745                 handle_func_command = TorchTensor.handle_func_command
    746 
--&gt; 747             response = handle_func_command(command)
    748 
    749             return response

~/PySyft/syft/frameworks/torch/tensors/interpreters/native.py in handle_func_command(cls, command)
    336             # in the execute_command function
    337             if isinstance(args, tuple):
--&gt; 338                 response = eval(cmd)(*args, **kwargs)
    339             else:
    340                 response = eval(cmd)(args, **kwargs)

~/PySyft/syft/frameworks/torch/tensors/interpreters/native.py in &lt;module&gt;

AttributeError: module 'torch._C._nn' has no attribute 'native_avg_pool2d'
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

torch version 1.0.1 and 1.1
syft dev version
	</description>
	<comments>
		<comment id='1' author='mari-linhares' date='2019-08-28T07:59:57Z'>
		Weird... I don't think there is a native_avg_pool2d in Pytorch, only avg_pool2d. Did you try to load the model without hooking torch?
Maybe the hook changes the name of the method...
		</comment>
		<comment id='2' author='mari-linhares' date='2019-08-28T11:54:00Z'>
		
Did you try to load the model without hooking torch?

Yes, it works just fine.
		</comment>
		<comment id='3' author='mari-linhares' date='2019-10-29T19:48:47Z'>
		&lt;denchmark-link:https://github.com/mari-linhares&gt;@mari-linhares&lt;/denchmark-link&gt;
  For some reason, the command created by the native.py file for the avg_pool2d layer looks like this:
syft.local_worker.hook.torch._C._nn.native_avg_pool2d
While the max_pool2d looks like this:
syft.local_worker.hook.torch.nn.functional.native_max_pool2d
I am still trying to understand why this particular layer is being called from torch._C and not torch.nn, but for practical testing purposes, I just created an if to change avg_pool2d's command to conform to that of max_pool2d, and it worked normally. I was able to load networks like ResNet and MobileNet.
To fix it, simply open the native.py file and change the construction of the cmd variable to the following:
&lt;denchmark-code&gt;            if (cmd.split (".")[- 1] == 'avg_pool2d'):
                cmd = 'syft.local_worker.hook.torch.nn.functional.native_avg_pool2d'
            else:
                cmd = (
                    "syft.local_worker.hook."
                    + ".". join (cmd.split (".") [: - 1])
                    + ".native_"
                    + cmd.split (".") [- 1]
                )
&lt;/denchmark-code&gt;

[EDIT]
A more automatic way to correct this problem is to replace calls from _C_nn to nn.functional. I will propose this solution through a pull request.
&lt;denchmark-code&gt;            # Change library path to avoid problems with AvgPooling layer
            cmd = cmd.replace('_C._nn', 'nn.functional')

            cmd = (
                "syft.local_worker.hook."
                + ".".join(cmd.split(".")[:-1])
                + ".native_"
                + cmd.split(".")[-1]
            )
&lt;/denchmark-code&gt;

Then just run python setup.py install again to overwrite the library with your change. I will try to propose a solution that is not unique to avg_pool, but for now this will work.
		</comment>
		<comment id='4' author='mari-linhares' date='2019-10-31T13:45:53Z'>
		To me this looks like we are hooking _C._nn after we are hooking torch.nn.functional. In my opinion we should not be hooking _C._nn at all which might solve this problem
		</comment>
		<comment id='5' author='mari-linhares' date='2020-03-27T10:30:20Z'>
		&lt;denchmark-link:https://github.com/mari-linhares&gt;@mari-linhares&lt;/denchmark-link&gt;
 should we close this issue since currently we are on torch 1.4?
		</comment>
		<comment id='6' author='mari-linhares' date='2020-05-24T00:09:14Z'>
		This issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.
		</comment>
	</comments>
</bug>