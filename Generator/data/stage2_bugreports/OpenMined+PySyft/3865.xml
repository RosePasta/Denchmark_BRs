<bug id='3865' author='Nilanshrajput' open_date='2020-07-17T14:32:40Z' closed_time='2020-08-20T20:14:33Z'>
	<summary>Serde Can not serialize 'DynamicFLClient' object</summary>
	<description>
Cannot share tensor from reference pointer
** This issue is critical for SyferText, since it breaks functionality when working with Grid nodes **
&lt;denchmark-h:h2&gt;How to Reproduce&lt;/denchmark-h&gt;

Nodes Creation :
python -m gridnode --id=bob  --host=localhost --port 3001
python -m gridnode --id=alice  --host=localhost --port 3002
python -m gridnode --id=bill  --host=localhost --port 3003
&lt;denchmark-code&gt;bob = DynamicFLClient(hook, "ws://localhost:3001/")
alice = DynamicFLClient(hook, "ws://localhost:3002")
bill = DynamicFLClient(hook, "ws://localhost:3003")
my_grid = sy.PrivateGridNetwork(bob,alice, bill)
t = th.Tensor([4,6]).send(alice)
t_shared = t.fix_prec().share(bob, alice, crypto_provider=bill)
t_shared.get()
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

A clear and concise description of what you expected to happen.
&lt;denchmark-h:h2&gt;Error&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-4-4e56dcdd7ee1&gt; in &lt;module&gt;
      4 my_grid = sy.PrivateGridNetwork(bob,alice, bill)
      5 t = th.Tensor([4,6]).send(alice)
----&gt; 6 t_shared = t.fix_prec().share(bob, alice, crypto_provider=bill )
      7 t_shared.get()
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/frameworks/torch/tensors/interpreters/native.py in share(self, protocol, field, dtype, crypto_provider, requires_grad, no_wrap, *owners)
    916                 {"requires_grad": requires_grad} if isinstance(chain, syft.PointerTensor) else {}
    917             )
--&gt; 918             shared_tensor = chain.share(
    919                 *owners,
    920                 protocol=protocol,
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/generic/pointers/pointer_tensor.py in share(self, *args, **kwargs)
    380             raise RuntimeError("Error, share must have &gt; 1 arguments all of type syft.workers")
    381 
--&gt; 382         response = self.owner.send_command(self.location, "share", self, args, kwargs)
    383         return response
    384 
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/workers/base.py in send_command(self, recipient, cmd_name, target, args_, kwargs_, return_ids, return_value)
    486                 cmd_name, target, args_, kwargs_, return_ids, return_value
    487             )
--&gt; 488             ret_val = self.send_msg(message, location=recipient)
    489         except ResponseSignatureError as e:
    490             ret_val = None
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/workers/base.py in send_msg(self, message, location)
    304 
    305         # Step 1: serialize the message to a binary
--&gt; 306         bin_message = sy.serde.serialize(message, worker=self)
    307 
    308         # Step 2: send the message and wait for a response
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/serde/serde.py in serialize(obj, worker, simplified, force_full_simplification, strategy)
     43         strategy = serialize
     44 
---&gt; 45     return strategy(obj, worker, simplified, force_full_simplification)
     46 
     47 
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/serde/msgpack/serde.py in serialize(obj, worker, simplified, force_full_simplification)
    335 
    336     simple_objects = _serialize_msgpack_simple(obj, worker, simplified, force_full_simplification)
--&gt; 337     return _serialize_msgpack_binary(simple_objects)
    338 
    339 
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/serde/msgpack/serde.py in _serialize_msgpack_binary(simple_objects, worker, simplified, force_full_simplification)
    289     # 2) Serialize
    290     # serialize into a binary
--&gt; 291     binary = msgpack_lib.dumps(simple_objects)
    292 
    293     # 3) Compress
~/anaconda3/envs/pysyft/lib/python3.8/site-packages/msgpack/__init__.py in packb(o, **kwargs)
     33     See :class:`Packer` for options.
     34     """
---&gt; 35     return Packer(**kwargs).pack(o)
     36 
     37 
msgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()
msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()
TypeError: can not serialize 'DynamicFLClient' object
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;System Information&lt;/denchmark-h&gt;


OS: Ubuntu
Language Version: Python 3.7
Pysyft Latest master branch

&lt;denchmark-h:h2&gt;Additional Context&lt;/denchmark-h&gt;

Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='Nilanshrajput' date='2020-07-17T17:57:57Z'>
		Should we open this issue in PySyft &lt;denchmark-link:https://github.com/AlanAboudib&gt;@AlanAboudib&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Nilanshrajput&gt;@Nilanshrajput&lt;/denchmark-link&gt;
 ?
 is defined in PySyft, here  

		</comment>
		<comment id='2' author='Nilanshrajput' date='2020-07-17T18:20:11Z'>
		Done &lt;denchmark-link:https://github.com/sachin-101&gt;@sachin-101&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Nilanshrajput' date='2020-07-20T12:57:19Z'>
		CC: &lt;denchmark-link:https://github.com/IonesioJunior&gt;@IonesioJunior&lt;/denchmark-link&gt;
 - thoughts on this? Could use your help since it's in the syft.grid package.
		</comment>
		<comment id='4' author='Nilanshrajput' date='2020-07-23T09:30:08Z'>
		It seems like &lt;denchmark-link:https://github.com/OpenMined/PySyft/pull/3857&gt;#3857&lt;/denchmark-link&gt;
 is for a similar issue. cc &lt;denchmark-link:https://github.com/IonesioJunior&gt;@IonesioJunior&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/AlanAboudib&gt;@AlanAboudib&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Nilanshrajput' date='2020-07-27T01:38:45Z'>
		Sorry for the delay! It looks like a problem that we &lt;denchmark-link:https://github.com/OpenMined/PyGridNode/pull/7&gt;solved &lt;/denchmark-link&gt;
 before. But both PySyft and PyGrid have gone through several refactoring since then, probably something has changed during the process. I will check it when I get some time.
		</comment>
	</comments>
</bug>