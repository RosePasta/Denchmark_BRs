<bug id='2527' author='aristizabal95' open_date='2019-08-18T17:32:02Z' closed_time='2019-08-23T14:59:25Z'>
	<summary>Calling .size() on a PointerTensor always returns a size of 0</summary>
	<description>
Describe the bug
Not sure if this was reported before. Couldn't find any issue about it. It seems like .size() method is not implemented for PointerTensors, making the Wrapper return torch.Size([0])
To Reproduce
Here's a script demonstrating the issue
import torch
import syft

hook = syft.TorchHook(torch)

alice = syft.VirtualWorker(id="alice", hook=hook)

x = torch.Tensor([[1,2,3]])
print(x.size()) #=&gt; torch.Size([1, 3]) 

# send x to alice and call size
x = x.send(alice)
print(x.size()) #=&gt; torch.Size([0])
Expected behavior
.size() should return the size of the tensor being pointed at.
Desktop (please complete the following information):

OS: MacOS Mojave
Version 0.1.23a1

	</description>
	<comments>
		<comment id='1' author='aristizabal95' date='2019-08-23T06:48:09Z'>
		Hey,
I would recommend using .shape instead of .size()
We have trouble with .size(), as explained here: &lt;denchmark-link:https://github.com/OpenMined/PySyft/issues/2201&gt;#2201&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='aristizabal95' date='2019-08-23T14:59:25Z'>
		&lt;denchmark-link:https://github.com/LaRiffle&gt;@LaRiffle&lt;/denchmark-link&gt;
 not sure why I couldn't find that issue at the time of posting this. Since this is a duplicate, I'll close this issue.
		</comment>
	</comments>
</bug>