<bug id='269' author='fepegar' open_date='2020-08-17T14:16:28Z' closed_time='2020-11-05T11:38:51Z'>
	<summary>Inconsistent documentation in RandomAffine</summary>
	<description>
In [1]: import torchio as tio
tr = t
In [2]: tr = tio.RandomAffine(scales=1.2)

In [3]: tr.scales
Out[3]: (1.2, 1.2)
But the docs say:

If only one value ùëë is provided, \sùëñ‚àºU(0,ùëë).

&lt;denchmark-link:https://github.com/GFabien&gt;@GFabien&lt;/denchmark-link&gt;
 this was introduced in &lt;denchmark-link:https://github.com/fepegar/torchio/pull/244&gt;#244&lt;/denchmark-link&gt;
. Do you know what's going on? Also, note that some wrong latex was introduced in that PR, as you can see in that example: the backslash before s in not necessary (&lt;denchmark-link:https://torchio.readthedocs.io/transforms/augmentation.html#randomaffine&gt;https://torchio.readthedocs.io/transforms/augmentation.html#randomaffine&lt;/denchmark-link&gt;
). I've fixed it in some other places, but some others might still be around.
	</description>
	<comments>
		<comment id='1' author='fepegar' date='2020-08-18T07:38:13Z'>
		Yes indeed, I think I changed my mind when I was refactoring parse_range but I forgot to fix all docstrings.
What I changed in parse_range was to add the possibility to put a lower bound and/or an upper bound to the range of values we could give to a given field (for instance, saying that scales in RandomAffine must be positive). In such a case, if you give a unique value x, you would not define the range as [-x, x] but something else. I think at first I decided that it would be [min_constraint, x] and then I chose [x, x] but the docstring of RandomAffine still refers to [min_constraint, x].
I guess either are fine and that's a choice we have to make. However I think that we should have something consistent in all the library. For example, the degree parameter of RandomAffine is the range [-x, x] if only x is given, which is kind of the widest range we can set given a unique x value. If such a choice is made then [0, x] seems to be the natural choice for parameter scales for example. But, in some transforms such as RandomDownsample, if x was given, the created range was [x, x]. It can be changed of course.
I don't know what you think is best, sometimes it can be confusing if you give only one value and end up with a bigger range but if it is well documented that's fine. Tell me and I will fix it.
		</comment>
		<comment id='2' author='fepegar' date='2020-08-22T11:33:13Z'>
		Maybe it'd be good to swing around 0 or 1, depending on the parameter. For example, scale or intensity would go around 1, but degrees or translation would be around 0. For example, if you use scale 1.2, it would be converted to 0.8-1.2, not 0-1.2 (which is definitely not a good idea, I think, as if you get e.g. 0.05 your image is pretty much gone.
Or maybe this is an unnecessary convenience and it would be clearer to make it more explicit and force the user to pass both the min and max value, always.
		</comment>
		<comment id='3' author='fepegar' date='2020-08-25T15:09:57Z'>
		
Maybe it'd be good to swing around 0 or 1, depending on the parameter. For example, scale or intensity would go around 1, but degrees or translation would be around 0. For example, if you use scale 1.2, it would be converted to 0.8-1.2, not 0-1.2 (which is definitely not a good idea, I think, as if you get e.g. 0.05 your image is pretty much gone.

This makes sense but I fear this would make things too complicated. It is probably clearer to force the user to pass both min and max values...
		</comment>
		<comment id='4' author='fepegar' date='2020-09-17T15:33:03Z'>
		
This makes sense but I fear this would make things too complicated. It is probably clearer to force the user to pass both min and max values...

Are you suggesting to remove the feature everywhere and make users pass the range for everything?
		</comment>
		<comment id='5' author='fepegar' date='2020-09-18T08:51:48Z'>
		
Are you suggesting to remove the feature everywhere and make users pass the range for everything?

Yes it was my suggestion but I'm not sure it's a good one.
		</comment>
		<comment id='6' author='fepegar' date='2020-11-04T09:52:37Z'>
		I think it's fine to use these smart ranges. They use them in torchvision.
		</comment>
	</comments>
</bug>