<bug id='306' author='fepegar' open_date='2020-09-18T11:37:15Z' closed_time='2020-09-21T10:29:14Z'>
	<summary>RandomGamma turns negative values to NaN</summary>
	<description>
I will elaborate later, but I think it's related to this the issue: &lt;denchmark-link:https://stackoverflow.com/questions/45384602/numpy-runtimewarning-invalid-value-encountered-in-power&gt;https://stackoverflow.com/questions/45384602/numpy-runtimewarning-invalid-value-encountered-in-power&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='fepegar' date='2020-09-18T11:37:21Z'>
		&lt;denchmark-link:https://github.com/GFabien&gt;@GFabien&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='fepegar' date='2020-09-18T11:37:48Z'>
		In [14]: x
Out[14]:
tensor([ 0.0574, -0.2568,  0.3255,  0.0427, -0.2941, -0.2175, -0.2347, -0.4489,
        -0.0622, -0.4478])

In [15]: x ** 1.2
Out[15]:
tensor([0.0324,    nan, 0.2600, 0.0227,    nan,    nan,    nan,    nan,    nan,
           nan])
		</comment>
		<comment id='3' author='fepegar' date='2020-09-18T11:43:02Z'>
		That seems fair enough. I'm not sure how we should deal with this, introducing complex numbers is probably not a good idea. Doing as advised in the stackoverflow's answer sounds reasonable but it has to be mentioned in the doc. What do you think?
		</comment>
		<comment id='4' author='fepegar' date='2020-09-18T11:44:30Z'>
		What about the SO answer suggesting np.sign(a) * (np.abs(a)) ** (1 / 3)? What needs to be mentioned in the doc?
		</comment>
		<comment id='5' author='fepegar' date='2020-09-18T11:46:58Z'>
		
What about the SO answer suggesting np.sign(a) * (np.abs(a)) ** (1 / 3)? What needs to be mentioned in the doc?

Sorry I was referring to this answer. Even if it's natural it's not obvious that it is what the transform will do so maybe it's better to mention it in the doc.
		</comment>
		<comment id='6' author='fepegar' date='2020-09-18T11:59:47Z'>
		I see what you mean. Here's some more info: &lt;denchmark-link:https://math.stackexchange.com/questions/317528/how-do-you-compute-negative-numbers-to-fractional-powers&gt;https://math.stackexchange.com/questions/317528/how-do-you-compute-negative-numbers-to-fractional-powers&lt;/denchmark-link&gt;

I'm not sure what the best option would be. If we implement it like that, maybe that should indeed be explained in the docs and a Warning should be raised.
		</comment>
		<comment id='7' author='fepegar' date='2020-09-18T12:12:55Z'>
		
I'm not sure what the best option would be. If we implement it like that, maybe that should indeed be explained in the docs and a Warning should be raised.

I agree, if we think about contrast I think it makes more sense to not raise  at any power. This also avoids checking for fractional power to retrieve the power to which raise  when it is legal to do so (as explained in &lt;denchmark-link:https://math.stackexchange.com/questions/317528/how-do-you-compute-negative-numbers-to-fractional-powers&gt;https://math.stackexchange.com/questions/317528/how-do-you-compute-negative-numbers-to-fractional-powers&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='8' author='fepegar' date='2020-09-18T12:36:59Z'>
		I'm not sure what you mean. It's the abs that's raised, not the sign, right?
I've tried with gamma 1.28, here are some results for reference:
Original
&lt;denchmark-link:https://user-images.githubusercontent.com/12688084/93597994-e7b3bd80-f9b3-11ea-92e0-b18b1514ecf5.png&gt;&lt;/denchmark-link&gt;

After rescale (0, 1)
&lt;denchmark-link:https://user-images.githubusercontent.com/12688084/93598027-f7cb9d00-f9b3-11ea-959e-9f66fadd9899.png&gt;&lt;/denchmark-link&gt;

After rescale (-0.5, 0.5)
&lt;denchmark-link:https://user-images.githubusercontent.com/12688084/93598041-0023d800-f9b4-11ea-906b-2e3b81197869.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='fepegar' date='2020-09-18T12:42:39Z'>
		
I'm not sure what you mean. It's the abs that's raised, not the sign, right?

Yes.
		</comment>
		<comment id='10' author='fepegar' date='2020-09-21T10:30:32Z'>
		Fixed in v0.17.39.
		</comment>
	</comments>
</bug>