<bug id='122' author='marshuang80' open_date='2020-04-16T19:23:48Z' closed_time='2020-04-18T21:05:16Z'>
	<summary>Augmentation not working as expected</summary>
	<description>
TorchIO version
0.13.16
What I did
Transformed a torchio.Image using ElasticDeformation and RandomAffine.

Expected to work as shown in the documentation
&lt;denchmark-link:https://torchio.readthedocs.io/transforms/augmentation.html&gt;https://torchio.readthedocs.io/transforms/augmentation.html&lt;/denchmark-link&gt;

What actually happened
Getting unexpected outputs:
:
&lt;denchmark-link:https://user-images.githubusercontent.com/15271135/79497124-057f8f80-7fdc-11ea-8b00-d8ab96191e1d.png&gt;&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/15271135/79497156-10d2bb00-7fdc-11ea-8251-5725bfa60ebf.png&gt;&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/15271135/79497188-20520400-7fdc-11ea-8d30-feef18dac40f.png&gt;&lt;/denchmark-link&gt;


Unexpected behavior exists only in the first few slices:

&lt;denchmark-link:https://user-images.githubusercontent.com/15271135/79497310-51323900-7fdc-11ea-84ac-4ba3d0bb360e.png&gt;&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/15271135/79497339-5abba100-7fdc-11ea-919e-4eab94acabf2.png&gt;&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/15271135/79497388-70c96180-7fdc-11ea-889b-b58a1483c4fc.png&gt;&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/15271135/79497407-77f06f80-7fdc-11ea-8148-30e5348d6921.png&gt;&lt;/denchmark-link&gt;

Code to replicate
for image_path in image_paths:
    subject = torchio.Subject(torchio.Image("example", image_path, torchio.INTENSITY))
    subjects.append(subject)
  
# Get sample data
dataset = torchio.ImagesDataset(subjects)
sample = dataset[0]

# Rescale to 0-1 
rescale = torchio.transforms.Rescale((0,1))
sample = rescale(sample)

# Random Elastic Deformation
transform = torchio.transforms.RandomElasticDeformation(4)
transformed = transform(sample)
TorchIOViewer3D(transformed)

# Random Affine
transform = torchio.transforms.RandomAffine()
transformed = transform(sample)
TorchIOViewer3D(transformed)
	</description>
	<comments>
		<comment id='1' author='marshuang80' date='2020-04-16T19:54:40Z'>
		Hi &lt;denchmark-link:https://github.com/marshuang80&gt;@marshuang80&lt;/denchmark-link&gt;
,
This behavior is expected. These transforms sometimes need to fill with values if they have no information. In the 3rd cell of &lt;denchmark-link:https://gist.github.com/fepegar/b723d15de620cd2a3a4dbd71e491b59d&gt;this gist&lt;/denchmark-link&gt;
 you can see that some values at the borders have been filled. That's what you're seeing in the first slices.
The effect is also visible when applying linear transforms such as rotations, as in this case:
&lt;denchmark-link:https://user-images.githubusercontent.com/12688084/79500371-3683b280-8024-11ea-95fb-1cdb3a915cf0.png&gt;&lt;/denchmark-link&gt;

Maybe a better way to visualize the volume in your notebook is using &lt;denchmark-link:https://github.com/fepegar/miccai-educational-challenge-2019/blob/master/visualization.py&gt;these functions&lt;/denchmark-link&gt;
,  as I do &lt;denchmark-link:https://nbviewer.jupyter.org/github/fepegar/miccai-educational-challenge-2019/blob/master/Combining_the_power_of_PyTorch_and_NiftyNet.ipynb?flush_cache=true&gt;in this notebook&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='marshuang80' date='2020-04-18T21:05:16Z'>
		Closing as this doesn't seem to be a bug. Feel free to reopen.
		</comment>
	</comments>
</bug>