<bug id='532' author='Kirin-kun' open_date='2018-11-11T20:21:57Z' closed_time='2019-05-12T22:28:16Z'>
	<summary>dlib-cnn extractor fails</summary>
	<description>
Command line:
(cface) C:\Users\Kirin\faceswap&gt;python c:\users\kirin\faceswap\faceswap.py extra
ct -i H:\Fakes\pldg-sue -o H:\Fakes\pldg-sue\aligned.dlib-cnn -A fan -D dlib-cnn
-r 15 -mp
&lt;denchmark-code&gt;Loading Detect from Dlib_Cnn plugin...
Loading Align from Fan plugin...
Starting, this may take a while...
Initializing Face Alignment Network...
Initialized Face Alignment Network.
Initializing Dlib-CNN Detector...
Initialized Dlib-CNN Detector...
Extracting faces:   0%|                                | 0/126 [00:00&lt;?, ?it/s]P
rocess SpawnProcess-3:
Traceback (most recent call last):
  File "c:\program files\python36\Lib\multiprocessing\process.py", line 258, in
_bootstrap
    self.run()
  File "c:\program files\python36\Lib\multiprocessing\process.py", line 93, in r
un
    self._target(*self._args, **self._kwargs)
  File "c:\users\kirin\faceswap\plugins\extract\detect\dlib_cnn.py", line 71, in
 detect_faces
    batch_detected = self.detector(detect_images, 0)
RuntimeError: Images in list must all have the same dimensions.
&lt;/denchmark-code&gt;

mtcnn works though.
	</description>
	<comments>
		<comment id='1' author='Kirin-kun' date='2018-11-11T21:22:00Z'>
		I assume you have different size images? Images have to be all the same size for dlib batching to work.
I can look to add an option to turn off batching for dlib-cnn. It will, of course, be slower.
		</comment>
		<comment id='2' author='Kirin-kun' date='2018-11-11T21:22:48Z'>
		Actually it should resize them. I'll take a look. You are using different sized images though, yes?
		</comment>
		<comment id='3' author='Kirin-kun' date='2018-11-12T08:49:03Z'>
		Yes, I have a batch of images of different sizes.
And yes, from what I understood, it should standardize the size (by some padding or resize) before extracting.
		</comment>
		<comment id='4' author='Kirin-kun' date='2018-11-12T12:32:49Z'>
		Ok, I've implemented a fix.
The images are resized to fit into a specific frame, but their original dimensions are maintained which is not compatible with dlib batching.
If frames with different dimensions are now discovered within a batch, the images for that batch will be processed one at a time. You will lose the speed benefit of batching (for that specific batch) in this instance, but it will process.
Fix in staging. I have another bug to squash and then will push to master.
		</comment>
		<comment id='5' author='Kirin-kun' date='2018-11-12T12:48:36Z'>
		I will test that asap.
By the way, I wish there was a way to mix (or concatenate ?) results from different extractors.
dlib-cnn and mtcnn yield different results and sometimes one or the other is better for the same image for tricky angles. But as of now, the alignments.json can only be mixed and matched manually.
Maybe a switch like "-D all" which would try every extractor in succession (unloading the previous one before), regardless of if a previous one found a face.
Maybe it's not convenient for videos with thousands of frames, but it would be useful for people like me who are working with a few hundred (or even less) high quality photo sets.
		</comment>
		<comment id='6' author='Kirin-kun' date='2018-11-12T12:55:09Z'>
		Now in Master
On my (ever growing) todo list, I want to add the option to merge alignments.
The options for skip-existing has been changed now, and a new option for skip-faces has been added. A combination of these may get the results you're looking for.
Incidentally, you should join the discord group, as your input would be welcome there:
&lt;denchmark-link:https://discord.gg/u8wEDa&gt;https://discord.gg/u8wEDa&lt;/denchmark-link&gt;

You'll also be able to see what we have on the horizon, and maybe help sway priorities.
		</comment>
		<comment id='7' author='Kirin-kun' date='2018-11-15T08:32:55Z'>
		I finally got the time to test the fix, and it still crashes but in two different ways, depending if I add the verbose flag or not! (which makes it hard to diagnose what's wrong:
With the -v at the end:
&lt;denchmark-code&gt;(cface) C:\Users\Kirin\face&gt;python c:\users\kirin\faceswap\faceswap.py extract -
i H:\Fakes\pldg-sue -o H:\Fakes\pldg-sue\aligned.dlib-cnn -A fan -D dlib-cnn -r
15 -mp -v
Output Directory: H:\Fakes\pldg-sue\aligned.dlib-cnn
Input Directory: H:\Fakes\pldg-sue
Using json serializer for alignments
Alignments filepath: H:\Fakes\pldg-sue\alignments.json
Loading Detect from Dlib_Cnn plugin...
Loading Align from Fan plugin...
GeForce GTX 1060 6GB - 5885MB free of 6144MB
Starting, this may take a while...
Initializing Face Alignment Network...
Using device GeForce GTX 1060 6GB with 5885MB free of 6144MB
Reserving 2240MB for face alignments
Initializing Face Alignment Network model...
2018-11-15 09:16:04.878004: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
411] Found device 0 with properties:
name: GeForce GTX 1060 6GB major: 6 minor: 1 memoryClockRate(GHz): 1.7715
pciBusID: 0000:01:00.0
totalMemory: 6.00GiB freeMemory: 5.69GiB
2018-11-15 09:16:04.889004: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
490] Adding visible gpu devices: 0
2018-11-15 09:16:06.975124: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
71] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-11-15 09:16:06.994125: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
77]      0
2018-11-15 09:16:06.999125: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
90] 0:   N
2018-11-15 09:16:07.018126: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
103] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 wit
h 2240 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1060 6GB, pci bu
s id: 0000:01:00.0, compute capability: 6.1)
Initialized Face Alignment Network.
Initializing Dlib-CNN Detector...
DLib is compiled to use CUDA
Using device GeForce GTX 1060 6GB with 3314MB free of 6144MB
Processing in batches of 4
Initialized Dlib-CNN Detector...
Extracting faces:   0%|                                | 0/126 [00:00&lt;?, ?it/s]B
atch has inconsistently sized images. Processing one image at a time
Process SpawnProcess-3:
Traceback (most recent call last):
  File "c:\program files\python36\Lib\multiprocessing\process.py", line 258, in
_bootstrap
    self.run()
  File "c:\program files\python36\Lib\multiprocessing\process.py", line 93, in r
un
    self._target(*self._args, **self._kwargs)
  File "c:\users\kirin\faceswap\plugins\extract\detect\dlib_cnn.py", line 80, in
 detect_faces
    processed)
  File "c:\users\kirin\faceswap\plugins\extract\detect\dlib_cnn.py", line 166, i
n process_rotations
    if self.verbose and any(item.any() for item in batch_detected):
  File "c:\users\kirin\faceswap\plugins\extract\detect\dlib_cnn.py", line 166, i
n &lt;genexpr&gt;
    if self.verbose and any(item.any() for item in batch_detected):
AttributeError: 'dlib.mmod_rectangles' object has no attribute 'any'
&lt;/denchmark-code&gt;

Without the verbose, it extracts rrrrrrrreally slowly (9 minutes for 68 images) and then just stops halfway without any message:
&lt;denchmark-code&gt;(cface) C:\Users\Kirin\face&gt;python c:\users\kirin\faceswap\faceswap.py extract -
i H:\Fakes\pldg-sue -o H:\Fakes\pldg-sue\aligned.dlib-cnn -A fan -D dlib-cnn -r
15 -mp
Output Directory: H:\Fakes\pldg-sue\aligned.dlib-cnn
Input Directory: H:\Fakes\pldg-sue
Loading Detect from Dlib_Cnn plugin...
Loading Align from Fan plugin...
Starting, this may take a while...
Initializing Face Alignment Network...
Initialized Face Alignment Network.
Initializing Dlib-CNN Detector...
Initialized Dlib-CNN Detector...
Extracting faces:  54%|████████████?          | 68/126 [08:53&lt;05:01,  5.19s/it]

(cface) C:\Users\Kirin\face&gt;
&lt;/denchmark-code&gt;

mtcnn works like a charm.
		</comment>
		<comment id='8' author='Kirin-kun' date='2018-11-15T10:53:21Z'>
		This was a bug in rotation code. Now squashed.
		</comment>
		<comment id='9' author='Kirin-kun' date='2018-11-15T14:17:27Z'>
		Still no dice. It actually starts, contrary to before your squashing, but stops at the 68th image for whatever reason. Even though it says that it's processing 1 image at a time.
And it still has a different behavior if verbose or not.
Without verbose, it actually says why it crashed:
&lt;denchmark-code&gt;(cface) C:\Users\Kirin\face&gt;python c:\users\kirin\faceswap\faceswap.py extract -
i H:\Fakes\pldg-sue -o H:\Fakes\pldg-sue\aligned.dlib-cnn -A fan -D dlib-cnn -r
15 -mp
Output Directory: H:\Fakes\pldg-sue\aligned.dlib-cnn
Input Directory: H:\Fakes\pldg-sue
Loading Detect from Dlib_Cnn plugin...
Loading Align from Fan plugin...
Starting, this may take a while...
Initializing Face Alignment Network...
Initialized Face Alignment Network.
Initializing Dlib-CNN Detector...
Initialized Dlib-CNN Detector...
Extracting faces:  54%|████████████?          | 68/126 [08:30&lt;04:35,  4.74s/it]
Process SpawnProcess-3:
Traceback (most recent call last):
  File "c:\program files\python36\Lib\multiprocessing\process.py", line 258, in
_bootstrap
    self.run()
  File "c:\program files\python36\Lib\multiprocessing\process.py", line 93, in r
un
    self._target(*self._args, **self._kwargs)
  File "c:\users\kirin\faceswap\plugins\extract\detect\dlib_cnn.py", line 80, in
 detect_faces
    processed)
  File "c:\users\kirin\faceswap\plugins\extract\detect\dlib_cnn.py", line 165, i
n process_rotations
    batch_detected = self.detector(reprocess, 0)
RuntimeError: Images in list must all have the same dimensions.
&lt;/denchmark-code&gt;

With verbose, il crashes at the same point (68 image), but without message and it doesn't make sense:
&lt;denchmark-code&gt;(cface) C:\Users\Kirin\face&gt;python c:\users\kirin\faceswap\faceswap.py extract -
i H:\Fakes\pldg-sue -o H:\Fakes\pldg-sue\aligned.dlib-cnn -A fan -D dlib-cnn -r
15 -mp -v
Output Directory: H:\Fakes\pldg-sue\aligned.dlib-cnn
Input Directory: H:\Fakes\pldg-sue
Using json serializer for alignments
Alignments filepath: H:\Fakes\pldg-sue\alignments.json
Loading Detect from Dlib_Cnn plugin...
Loading Align from Fan plugin...
GeForce GTX 1060 6GB - 5915MB free of 6144MB
Starting, this may take a while...
Initializing Face Alignment Network...
Using device GeForce GTX 1060 6GB with 5915MB free of 6144MB
Reserving 2240MB for face alignments
Initializing Face Alignment Network model...
2018-11-15 14:14:38.455602: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
411] Found device 0 with properties:
name: GeForce GTX 1060 6GB major: 6 minor: 1 memoryClockRate(GHz): 1.7715
pciBusID: 0000:01:00.0
totalMemory: 6.00GiB freeMemory: 5.71GiB
2018-11-15 14:14:38.464602: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
490] Adding visible gpu devices: 0
2018-11-15 14:14:39.271648: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
71] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-11-15 14:14:39.277649: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
77]      0
2018-11-15 14:14:39.280649: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
90] 0:   N
2018-11-15 14:14:39.283649: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
103] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 wit
h 2240 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1060 6GB, pci bu
s id: 0000:01:00.0, compute capability: 6.1)
Initialized Face Alignment Network.
Initializing Dlib-CNN Detector...
DLib is compiled to use CUDA
Using device GeForce GTX 1060 6GB with 3344MB free of 6144MB
Processing in batches of 4
Initialized Dlib-CNN Detector...
Extracting faces:   0%|                                | 0/126 [00:00&lt;?, ?it/s]B
atch has inconsistently sized images. Processing one image at a time
found face(s) by rotating image 30 degrees
Batch has inconsistently sized images. Processing one image at a time
Extracting faces:   4%|?                       | 5/126 [01:24&lt;58:28, 29.00s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:   9%|██                     | 11/126 [01:25&lt;19:15, 10.05s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  10%|██?                    | 13/126 [03:45&lt;52:41, 27.98s/it]W
arning: No faces were detected in image: Pdlg0414.jpg
Extracting faces:  13%|██?                    | 16/126 [03:45&lt;35:57, 19.61s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  16%|███?                   | 20/126 [04:09&lt;19:04, 10.80s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  25%|█████?                 | 32/126 [05:18&lt;09:09,  5.85s/it]W
arning: No faces were detected in image: Pdlg0508.jpg
Extracting faces:  26%|██████                 | 33/126 [05:32&lt;13:04,  8.43s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  27%|██████?                | 34/126 [05:39&lt;12:26,  8.12s/it]W
arning: No faces were detected in image: Pdlg0510.jpg
found face(s) by rotating image 135 degrees
Batch has inconsistently sized images. Processing one image at a time
Extracting faces:  31%|███████                | 39/126 [06:01&lt;08:56,  6.17s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  41%|█████████?             | 52/126 [07:22&lt;09:54,  8.03s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  43%|█████████?             | 54/126 [07:39&lt;09:52,  8.23s/it]W
arning: No faces were detected in image: Pdlg0606.jpg
Batch has inconsistently sized images. Processing one image at a time
Extracting faces:  48%|██████████?            | 60/126 [07:57&lt;05:55,  5.39s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  51%|███████████?           | 64/126 [08:16&lt;05:27,  5.27s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  54%|████████████?          | 68/126 [08:30&lt;04:06,  4.25s/it]

(cface) C:\Users\Kirin\face&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='Kirin-kun' date='2018-11-15T16:37:49Z'>
		Try now.
		</comment>
		<comment id='11' author='Kirin-kun' date='2018-11-15T18:53:50Z'>
		Almost! It goes further but still stops dead at 92%:
&lt;denchmark-code&gt;
(cface) C:\Users\Kirin\faceswap&gt;python c:\users\kirin\faceswap\faceswap.py extra
ct -i H:\Fakes\pldg-sue -o H:\Fakes\pldg-sue\aligned.dlib-cnn -A fan -D dlib-cnn
 -r 15 -mp -v
Output Directory: H:\Fakes\pldg-sue\aligned.dlib-cnn
Input Directory: H:\Fakes\pldg-sue
Using json serializer for alignments
Alignments filepath: H:\Fakes\pldg-sue\alignments.json
Loading Detect from Dlib_Cnn plugin...
Loading Align from Fan plugin...
GeForce GTX 1060 6GB - 5915MB free of 6144MB
Starting, this may take a while...
Initializing Face Alignment Network...
Using device GeForce GTX 1060 6GB with 5915MB free of 6144MB
Reserving 2240MB for face alignments
Initializing Face Alignment Network model...
2018-11-15 19:38:10.829926: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
411] Found device 0 with properties:
name: GeForce GTX 1060 6GB major: 6 minor: 1 memoryClockRate(GHz): 1.7715
pciBusID: 0000:01:00.0
totalMemory: 6.00GiB freeMemory: 5.71GiB
2018-11-15 19:38:10.838927: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
490] Adding visible gpu devices: 0
2018-11-15 19:38:11.668974: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
71] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-11-15 19:38:11.673974: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
77]      0
2018-11-15 19:38:11.676974: I tensorflow/core/common_runtime/gpu/gpu_device.cc:9
90] 0:   N
2018-11-15 19:38:11.680975: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1
103] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 wit
h 2240 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1060 6GB, pci bu
s id: 0000:01:00.0, compute capability: 6.1)
Initialized Face Alignment Network.
Initializing Dlib-CNN Detector...
DLib is compiled to use CUDA
Using device GeForce GTX 1060 6GB with 3344MB free of 6144MB
Processing in batches of 4
Initialized Dlib-CNN Detector...
Extracting faces:   0%|                                | 0/126 [00:00&lt;?, ?it/s]B
atch has inconsistently sized images. Processing one image at a time
found face(s) by rotating image 30 degrees
Batch has inconsistently sized images. Processing one image at a time
Extracting faces:   4%|?                       | 5/126 [01:26&lt;59:04, 29.29s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:   9%|██                     | 11/126 [01:28&lt;13:54,  7.26s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  10%|██?                    | 13/126 [03:55&lt;51:15, 27.21s/it]W
arning: No faces were detected in image: Pdlg0414.jpg
Extracting faces:  12%|██?                    | 15/126 [04:03&lt;37:18, 20.17s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  16%|███?                   | 20/126 [04:19&lt;16:58,  9.61s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  25%|█████?                 | 32/126 [05:25&lt;08:43,  5.57s/it]W
arning: No faces were detected in image: Pdlg0508.jpg
Extracting faces:  26%|██████                 | 33/126 [05:40&lt;12:50,  8.29s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  27%|██████?                | 34/126 [05:46&lt;11:46,  7.68s/it]W
arning: No faces were detected in image: Pdlg0510.jpg
found face(s) by rotating image 135 degrees
Batch has inconsistently sized images. Processing one image at a time
Extracting faces:  31%|███████                | 39/126 [06:08&lt;08:38,  5.96s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  41%|█████████?             | 52/126 [07:29&lt;09:57,  8.08s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  43%|█████████?             | 54/126 [07:46&lt;09:56,  8.28s/it]W
arning: No faces were detected in image: Pdlg0606.jpg
Batch has inconsistently sized images. Processing one image at a time
Extracting faces:  48%|██████████?            | 60/126 [08:01&lt;05:29,  4.99s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  51%|███████████?           | 64/126 [08:18&lt;04:53,  4.74s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  54%|████████████?          | 68/126 [08:32&lt;03:56,  4.08s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  56%|████████████?          | 70/126 [08:59&lt;07:46,  8.33s/it]W
arning: No faces were detected in image: Pdlg0621.jpg
Warning: No faces were detected in image: Pdlg0622.jpg
Batch has inconsistently sized images. Processing one image at a time
Extracting faces:  60%|█████████████?         | 76/126 [09:13&lt;04:08,  4.98s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  63%|███████████████        | 80/126 [09:32&lt;03:55,  5.12s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  67%|███████████████?       | 84/126 [09:52&lt;03:37,  5.17s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  70%|████████████████       | 88/126 [10:09&lt;02:55,  4.62s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  73%|████████████████?      | 92/126 [10:29&lt;02:50,  5.03s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  76%|██████████████████     | 96/126 [10:48&lt;02:34,  5.16s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  79%|█████████████████?    | 100/126 [11:05&lt;02:00,  4.64s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  83%|██████████████████?   | 104/126 [11:25&lt;01:50,  5.02s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  86%|██████████████████?   | 108/126 [11:42&lt;01:25,  4.74s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  89%|████████████████████  | 112/126 [12:02&lt;01:10,  5.07s/it]B
atch has inconsistently sized images. Processing one image at a time
Extracting faces:  92%|████████████████████? | 116/126 [12:21&lt;00:51,  5.15s/it]

(cface) C:\Users\Kirin\faceswap&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='Kirin-kun' date='2018-11-15T18:56:15Z'>
		Ok, that's weird.
I'll look into it.
		</comment>
		<comment id='13' author='Kirin-kun' date='2018-11-16T00:19:34Z'>
		God I hate dlib. It ran out of vram for no discernible reason other than it likes to be completely inconsistent.
I've adjusted the resizing down by 128px and it seems to run through ok now as long as you keep rotation at increments of 90 degrees (i.e. -r on).
However there is still a bug.... When an image is rotated by a non-standard amount, extra padding has to be added to the image to fit it into a rectangular frame, which pushes the dimensions outside of the set threshold.
I'm going to have to put this on the backburner as I'm not sure of the best way to squash this bug, as the frame size is set per image, not per rotation, so it effects the detector scale, and therefore the correct placement of the landmarks on the face.
Bizarrely, and just to add further to the dlib misery, it seems to be failing on a frame with dimensions (1920, 1319) which is within the threshold, and despite having already successfully detected frames of dimensions (2206, 2381) and (2381, 2206).
Also, as this is a cuda failure, it is not easy to capture the error and handle appropriately.
tldr; checkout latest commit and keep rotation set at -r 90
		</comment>
		<comment id='14' author='Kirin-kun' date='2018-11-16T12:26:44Z'>
		It works with rotation at 90, but the overall result is largely worse than mtcnn (and slower too).
dlib-cnn detects one or two more faces with tricky angles than mtcnn, but it screws up the landmarks a lot more than mtcnn. The dataset I sent you is a testament to that mess.
Those "tricky angles" actually take a lot more training time to be swapped, anyway.
So, I'll stick with mtcnn for future sets and drop dlib, unless there's a face I absolutely want to swap that mtcnn does not detect;
		</comment>
		<comment id='15' author='Kirin-kun' date='2018-11-16T16:09:23Z'>
		I'd you haven't already you should try the manual tool for fixing screwy alignments or detecting on faces that weren't found
		</comment>
		<comment id='17' author='Kirin-kun' date='2019-01-19T07:42:55Z'>
		What's the status on this issue?
		</comment>
		<comment id='18' author='Kirin-kun' date='2019-01-19T11:09:02Z'>
		Still a bug :/
		</comment>
		<comment id='19' author='Kirin-kun' date='2019-05-12T22:28:16Z'>
		Dlib has been removed from the codebase. Closing.
		</comment>
	</comments>
</bug>