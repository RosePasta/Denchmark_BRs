<bug id='370' author='deadman2000' open_date='2019-08-30T09:30:27Z' closed_time='2019-08-31T17:32:31Z'>
	<summary>Multiple graphs in different threads</summary>
	<description>
I've got this error:
&lt;denchmark-code&gt;Tensor tf.Tensor 'softmax_tensor:0' shape=(-1,2) dtype=TF_FLOAT is not an element of this graph.
   в Tensorflow.Graph._as_graph_element_locked(Object obj, Boolean allow_tensor, Boolean allow_operation)
   в Tensorflow._ElementFetchMapper..ctor(Object[] fetches, Func`2 contraction_fn)
   в Tensorflow._FetchMapper.for_fetch(Object fetch)
   в Tensorflow._FetchHandler..ctor(Graph graph, Object fetches, Dictionary`2 feeds, Action feed_handles)
   в Tensorflow.BaseSession._run(Object fetches, FeedItem[] feed_dict)
   в Tensorflow.BaseSession.run(Tensor fetche, FeedItem[] feed_dict)
&lt;/denchmark-code&gt;

Because _ElementFetchMapper getting default graph:
&lt;denchmark-code&gt;var g = ops.get_default_graph()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='deadman2000' date='2019-08-30T10:12:23Z'>
		We have been discussing multi-threading a lot lately,
When initializing a model - it has to be done from a single-thread because there are a lot of tf.* methods that access graph by getting the default.
You can later on use session.run(..) from multiple threads as Session class holds a reference to a graph internally.
In the near future we plan to make get_default_graph and get_default_session as thread-wide (right now it is process-wide).
		</comment>
		<comment id='2' author='deadman2000' date='2019-08-30T11:16:19Z'>
		My suggestion is deprecate get_default_graph and get_default_session
		</comment>
		<comment id='3' author='deadman2000' date='2019-08-30T13:05:49Z'>
		We wanted that too but this will force the user to pass graph or session to every single tf.* call and as a result break the ability to easily port python code to C#.
		</comment>
		<comment id='4' author='deadman2000' date='2019-08-30T13:23:28Z'>
		Right, when users develop a model or training model, they want to share some global variables. It’s hard to change at this moment.
		</comment>
		<comment id='5' author='deadman2000' date='2019-08-31T17:32:31Z'>
		&lt;denchmark-link:https://github.com/deadman2000&gt;@deadman2000&lt;/denchmark-link&gt;
, I've added support for multithreading in PR &lt;denchmark-link:https://github.com/SciSharp/TensorFlow.NET/pull/371&gt;#371&lt;/denchmark-link&gt;

It'll be released to nuget in a day or two as version 0.11.2.
You can read more in-depth details in our wiki &lt;denchmark-link:https://github.com/SciSharp/TensorFlow.NET/wiki/Multithreading&gt;here&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>