<bug id='464' author='dsyme' open_date='2019-12-13T17:24:10Z' closed_time='2019-12-22T14:32:46Z'>
	<summary>Calling RegisterGradientFunction too early results in no other gradients being registered</summary>
	<description>
If you call RegisterGradientFunction before any initialization has happened in TF.NET then the gradient registrations are not scraped from existing assemblies.
The relevant code is here - the initialization of the gradients table should be forced by RegisterGradientFunction too



TensorFlow.NET/src/TensorFlowNET.Core/Gradients/ops.gradient_function_mapping.cs


         Line 56
      in
      75ae2e9






 gradientFunctions = new Dictionary&lt;string, Func&lt;Operation, Tensor[], Tensor[]&gt;&gt;(); 





	</description>
	<comments>
		<comment id='1' author='dsyme' date='2019-12-13T17:31:01Z'>
		&lt;denchmark-link:https://github.com/dsyme&gt;@dsyme&lt;/denchmark-link&gt;
 It's already there: 

		</comment>
		<comment id='2' author='dsyme' date='2019-12-13T17:48:48Z'>
		Yes but if that line gets executed first then this code doesn't get run :) 


TensorFlow.NET/src/TensorFlowNET.Core/Gradients/ops.gradient_function_mapping.cs


         Line 58
      in
      75ae2e9






 var gradGroups = Assembly.GetExecutingAssembly() 





		</comment>
		<comment id='3' author='dsyme' date='2019-12-13T18:53:49Z'>
		Oh, right. Seems like a serious bug there. Will fix it at weekend.
		</comment>
		<comment id='4' author='dsyme' date='2019-12-16T12:34:46Z'>
		Thanks!
		</comment>
	</comments>
</bug>