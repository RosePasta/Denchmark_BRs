<bug id='303' author='moloneymb' open_date='2019-07-23T12:04:26Z' closed_time='2019-07-24T15:30:28Z'>
	<summary>tf.gradients producing unexpected results</summary>
	<description>
It appears that the tf.gradients function has a bug in it.
For the example x^3 * 0.1 should be 3x^2 * 0.1 but it appears to be x^2 * 0.1.
In TF.Net
&lt;denchmark-code&gt;let x = tf.constant(7.0)
let y = x*x*x*tf.constant(0.1)
sess.run(tf.gradients(y,x)).[0].Data&lt;double&gt;()
//[|4.9|]
&lt;/denchmark-code&gt;

In Python
&lt;denchmark-code&gt;x = tf.constant(7.0)
y = x*x*x*tf.constant(0.1)
sess.run(tf.gradients(y,x))
#[14.7]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='moloneymb' date='2019-07-24T00:57:12Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/1705364/61756937-06a0ca80-ad84-11e9-85fb-71cad04500f5.png&gt;&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>