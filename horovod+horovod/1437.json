{"BR": {"BR_id": "1437", "BR_author": "yselivonchyk", "BRopenT": "2019-10-09T23:17:32Z", "BRcloseT": "2019-10-13T20:55:10Z", "BR_text": {"BRsummary": "DistributedOptimzer is not compatible with keras.Optimizer", "BRdescription": "\n Environment:\n \n Framework: (TensorFlow, Keras, PyTorch, MXNet)\n Framework version: 1.14\n Horovod version: 0.16.4\n Python version: 3.6.8\n \n Checklist:\n \n Did you search issues to find if somebody asked this question before?\n If your question is about hang, did you read this doc?\n If your question is about docker, did you read this doc?\n Did you check if you question is answered in the troubleshooting guide?\n \n Bug report:\n Please describe errorneous behavior you're observing and steps to reproduce it.\n Horovod DistributedOptimzer wrapper is not compatible with keras:\n <denchmark-code>import tensorflow as tf\n import horovod.tensorflow.keras as hvd\n \n hvd.init()\n opt = tf.keras.optimizers.Adam()\n hopt = hvd.DistributedOptimizer(opt)\n opt.get_config()\n cfg = hopt.get_config()\n opt_copy = opt.from_config(cfg)\n opt_copy = opt.__class__.from_config(cfg)\n hopt_copy = hopt.from_config(cfg) # TypeError: __init__() got an unexpected keyword argument 'learning_rate'\n hopt_copy = hopt.__class__.from_config(cfg) # TypeError: __init__() got an unexpected keyword argument 'learning_rate'\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "yselivonchyk", "commentT": "2019-10-11T04:15:43Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/yselivonchyk>@yselivonchyk</denchmark-link>\n , for using  can you try importing  instead of ?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "yselivonchyk", "commentT": "2019-10-11T18:05:21Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/tgaddair>@tgaddair</denchmark-link>\n  Thank you for pointing that out. I updated the issue to reflect how hvd.tensorflow.keras is not compatible with tf.keras.optimizers.Optimizer.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "yselivonchyk", "commentT": "2019-10-11T18:08:54Z", "comment_text": "\n \t\tTo put it in context, this functionality is used by tensorflow.python.keras.models.clone_and_build_model which is called by tf.keras.experimental.export_saved_model\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "yselivonchyk", "commentT": "2019-10-11T18:19:57Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/yselivonchyk>@yselivonchyk</denchmark-link>\n , for the new example, can you try this instead:\n <denchmark-code>import tensorflow as tf\n import horovod.tensorflow.keras as hvd\n \n hvd.init()\n opt = tf.keras.optimizers.Adam()\n hopt = hvd.DistributedOptimizer(opt)\n opt.get_config()\n cfg = hopt.get_config()\n opt_copy = opt.from_config(cfg)\n opt_copy = opt.__class__.from_config(cfg)\n hopt_copy = hvd.DistributedOptimizer(opt_copy)\n </denchmark-code>\n \n Basically, we never directly instantiate the DistributedOptimizer, we always create it by wrapping another optimizer.\n Can you give me an example of how you're using tf.keras.experimental.export_saved_model?  Maybe we can workaround this by exporting the non-distributed optimizer instead.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "yselivonchyk", "commentT": "2019-10-11T19:24:41Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/tgaddair>@tgaddair</denchmark-link>\n \n I am using it with\n <denchmark-code>model.fit(...)\n if hvd.rank()==0:\n     tf.contrib.saved_model.save_keras_model(model, args.model_dir)\n </denchmark-code>\n \n Where tf.contrib.saved_model.save_keras_modelmaps into tf.keras.experimental.export_saved_model and than orig_optimizer.__class__.from_config(optimizer_config) inside clone_and_build_model() fails with the error # TypeError: __init__() got an unexpected keyword argument 'learning_rate'.\n To get around it I had to rewrite clone_and_build_model adding next code snippet:\n <denchmark-code>      if \"horovod._keras\" not in str(type(orig_optimizer)):\n         optimizer = orig_optimizer.__class__.from_config(optimizer_config)\n       else:\n         optimizer = orig_optimizer.__class__.__bases__[0].from_config(optimizer_config)\n </denchmark-code>\n \n I would assume, that for horovod optimzer a reasonable code update would be to add next method to DistributedOptimizer (<denchmark-link:https://github.com/horovod/horovod/blob/master/horovod/_keras/__init__.py>https://github.com/horovod/horovod/blob/master/horovod/_keras/__init__.py</denchmark-link>\n )\n <denchmark-code>def from_config(cfg):\n    return _DistributedOptimizer(optimizer.from_config(cfg))\n </denchmark-code>\n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "yselivonchyk", "commentT": "2019-10-12T19:34:30Z", "comment_text": "\n \t\tI see, thanks for clarifying the usage <denchmark-link:https://github.com/yselivonchyk>@yselivonchyk</denchmark-link>\n .  That makes sense.  I put together a quick PR with your suggested fix (<denchmark-link:https://github.com/horovod/horovod/pull/1444>#1444</denchmark-link>\n ).  Feel free to try it out and let me know if it solves the issue.\n \t\t"}}}, "commit": {"commit_id": "29f1a0d39c1c2b1ba7cdb7ae5d897916a539cdae", "commit_author": "Travis Addair", "commitT": "2019-10-13 13:55:09-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "horovod\\_keras\\__init__.py", "file_new_name": "horovod\\_keras\\__init__.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "74,75", "deleted_lines": null, "method_info": {"method_name": "from_config", "method_params": "cls,cfg", "method_startline": "74", "method_endline": "75"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "horovod\\common\\util.py", "file_new_name": "horovod\\common\\util.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "18"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\test_keras.py", "file_new_name": "test\\test_keras.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "242,243,244,245,246,247,248,249,250,251,252,253,254", "deleted_lines": null, "method_info": {"method_name": "test_from_config", "method_params": "self", "method_startline": "242", "method_endline": "254"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\test_tensorflow_keras.py", "file_new_name": "test\\test_tensorflow_keras.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "101,102,103,104,105,106,107,108,109,110,111,112,113", "deleted_lines": null, "method_info": {"method_name": "test_from_config", "method_params": "self", "method_startline": "101", "method_endline": "113"}}}}}}}