{"BR": {"BR_id": "803", "BR_author": "Akella17", "BRopenT": "2019-07-21T21:04:30Z", "BRcloseT": "2019-07-23T14:04:09Z", "BR_text": {"BRsummary": "AttributeError: 'LazyEvaluatedKernelTensor' object has no attribute 'lazy_tensors'", "BRdescription": "\n The gpytorch.settings.fast_pred_var() setting fails when I am using an additive kernel, i.e. a composition of an RBF kernel and Linear kernel. This however does not occur when the additive kernel is over two RBF kernels.\n To reproduce this issue,\n import torch\n import gpytorch\n import torch.nn as nn\n from torch.autograd import Variable\n import math\n \n class GP_layer(gpytorch.models.ExactGP):\n     def __init__(self, train_x, train_y, likelihood):\n         super(GP_layer, self).__init__(train_x, train_y, likelihood)\n         self.mean_module = gpytorch.means.ConstantMean()\n         \n         self.covar_module_1 = gpytorch.kernels.RBFKernel(ard_num_dims=2, active_dims=torch.tensor([0,1]))\n         self.covar_module_2 = gpytorch.kernels.LinearKernel(active_dims=torch.tensor([2,3]))\n         self.covar_module = self.covar_module_1 + self.covar_module_2\n \n     def forward(self, x):\n         mean_x = self.mean_module(x)\n         covar_x = self.covar_module(x)\n         return gpytorch.distributions.MultivariateNormal(mean_x, covar_x)\n \n train_x = torch.stack((torch.linspace(0, 10, 1500), torch.linspace(0.5, 10.5, 1500), torch.linspace(3, 14, 1500), torch.linspace(7.5, 19.5, 1500)),1).cuda()\n train_y = (train_x[:,3]**2 - train_x[:,2])/10 + torch.cos(train_x[:,0] * (2 * math.pi)) + torch.sin(train_x[:,1] * (2 * math.pi)) + 0.1 * torch.randn(1500).cuda()\n \n likelihood = gpytorch.likelihoods.GaussianLikelihood().cuda()\n model = GP_layer(train_x, train_y, likelihood).cuda()\n mll = gpytorch.mlls.ExactMarginalLogLikelihood(likelihood, model)\n \n model.train()\n likelihood.train()\n optimizer = torch.optim.Adam(model.parameters(), lr=0.001, weight_decay=1e-3)\n \n for _ in range(10):\n     optimizer.zero_grad()\n     outputs = model(train_x)\n     loss = -mll(outputs, train_y).mean()\n     loss.backward()\n     optimizer.step()\n \n model.eval()\n likelihood.eval()\n \n test_x = torch.stack((torch.linspace(0, 10, 17), torch.linspace(0.5, 10.5, 17), torch.linspace(3, 14, 17), torch.linspace(7.5, 19.5, 17)),1).cuda()\n test_y = (test_x[:,3]**2 - test_x[:,2])/10 + torch.cos(test_x[:,0] * (2 * math.pi)) + torch.sin(test_x[:,1] * (2 * math.pi)) + 0.1 * torch.randn(17).cuda()\n \n with gpytorch.settings.fast_pred_var():\n     outputs_y = model(test_x).mean\n print(outputs_y.size())\n <denchmark-code>Traceback (most recent call last):\n   File \"test.py\", line 46, in <module>\n     outputs_y = model(test_x).mean\n   File \"/home1/deepak/anaconda/envs/rl_proj/lib/python3.6/site-packages/gpytorch/models/exact_gp.py\", line 265, in __call__\n     predictive_mean, predictive_covar = self.prediction_strategy.exact_prediction(full_mean, full_covar)\n   File \"/home1/deepak/anaconda/envs/rl_proj/lib/python3.6/site-packages/gpytorch/models/exact_prediction_strategies.py\", line 265, in exact_prediction\n     self.exact_predictive_covar(test_test_covar, test_train_covar),\n   File \"/home1/deepak/anaconda/envs/rl_proj/lib/python3.6/site-packages/gpytorch/models/exact_prediction_strategies.py\", line 332, in exact_predictive_covar\n     test_train_covar)\n   File \"/home1/deepak/anaconda/envs/rl_proj/lib/python3.6/site-packages/gpytorch/models/exact_prediction_strategies.py\", line 549, in _exact_predictive_covar_inv_quad_form_root\n     self._sub_strategies, precomputed_cache, test_train_covar.evaluate_kernel().lazy_tensors\n   File \"/home1/deepak/anaconda/envs/rl_proj/lib/python3.6/site-packages/gpytorch/models/exact_prediction_strategies.py\", line 515, in _sub_strategies\n     for lazy_tensor in self.train_prior_dist.lazy_covariance_matrix.lazy_tensors:\n AttributeError: 'LazyEvaluatedKernelTensor' object has no attribute 'lazy_tensors'\n \n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Akella17", "commentT": "2019-07-23T14:04:23Z", "comment_text": "\n \t\tI just pushed a hot fix to master that fixes this issue.\n \t\t"}}}, "commit": {"commit_id": "541e1affc926a8f097c668cd419a4c13cb670be1", "commit_author": "Geoff Pleiss", "commitT": "2019-07-23 10:03:50-04:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "gpytorch\\models\\exact_prediction_strategies.py", "file_new_name": "gpytorch\\models\\exact_prediction_strategies.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "544", "deleted_lines": "544", "method_info": {"method_name": "_sub_strategies", "method_params": "self", "method_startline": "542", "method_endline": "553"}}, "hunk_1": {"Ismethod": 1, "added_lines": "556", "deleted_lines": null, "method_info": {"method_name": "_exact_predictive_covar_inv_quad_form_cache", "method_params": "self,train_train_covar_inv_root,test_train_covar", "method_startline": "555", "method_endline": "565"}}}}}}}