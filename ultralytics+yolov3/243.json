{"BR": {"BR_id": "243", "BR_author": "dkendall100", "BRopenT": "2019-04-28T20:05:33Z", "BRcloseT": "2019-05-18T10:47:13Z", "BR_text": {"BRsummary": "Video Codec Hard Coded", "BRdescription": "\n Describe the bug\n When you run with a video as the operand, it doesn't output the file to the specified directory. This is because the FourCC code is hardcoded to 'avc1' instead of using the input video's fourcc.\n To Reproduce\n Steps to reproduce the behavior:\n \n Run '''python3 detect.py --images ~/Video_File_Here.mp4\n You then see verbose output and the network is running properly\n No output file is generated.\n \n (When I changed the output fourcc to mp4 it output the video fine.)\n Also, there is some unclarity in the code and there should be an else block instead of just an if statement then another unindented. It is the block '''if save_path!=vid_path'''\n Expected behavior\n Output a video file to the specified directory\n Screenshots\n If applicable, add screenshots to help explain your problem.\n Desktop (please complete the following information):\n \n OS: Ubuntu 18.04\n Version 18.04\n \n Smartphone (please complete the following information):\n \n Device: [e.g. iPhoneXS]\n OS: [e.g. iOS8.1]\n Version [e.g. 22]\n \n Additional context\n Add any other context about the problem here.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "dkendall100", "commentT": "2019-04-28T21:18:41Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/dkendall100>@dkendall100</denchmark-link>\n  good points! Does this latest commit <denchmark-link:https://github.com/ultralytics/yolov3/commit/cbe01ddeb1b28e3771f1fa6729589dfdb2567c1d>cbe01dd</denchmark-link>\n  solve the problem? It writes the video with the same codec as the original video.\n       if save_images:  # Save image with detections\n            if dataloader.mode == 'images':\n                cv2.imwrite(save_path, im0)\n            else:\n                if vid_path != save_path:  # new video\n                    vid_path = save_path\n                    if isinstance(vid_writer, cv2.VideoWriter):\n                        vid_writer.release()  # release previous video writer\n \n                    codec = int(vid_cap.get(cv2.CAP_PROP_FOURCC))\n                    fps = vid_cap.get(cv2.CAP_PROP_FPS)\n                    width = int(vid_cap.get(cv2.CAP_PROP_FRAME_WIDTH))\n                    height = int(vid_cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\n                    vid_writer = cv2.VideoWriter(save_path, codec, fps, (width, height))\n                vid_writer.write(im0)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "dkendall100", "commentT": "2019-04-28T21:26:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n  Hmm, that looks good. I attempted that code earlier, but it didn't work. If it works for you, I would guess I have some kind of system specific issue. I will test that branch out later.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "dkendall100", "commentT": "2019-04-29T00:20:04Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n \n I know for a fact that the fourcc code = 'mp4v' worked for H.264 encoded mp4, but it seems that both of those methods return different values.\n <denchmark-link:https://user-images.githubusercontent.com/43619961/56871217-53bd0c80-69e0-11e9-933f-d793e1429970.png></denchmark-link>\n \n Linux and Windows use FFMPEG library for encoding decoding.\n <denchmark-link:https://user-images.githubusercontent.com/43619961/56871893-6a676180-69e8-11e9-9aef-6dc976a66335.png></denchmark-link>\n \n It doesn't matter what the container file type is.\n Run command\n \n and this will list all your supported codecs (there is a lot more, but this is a small example)\n <denchmark-link:https://user-images.githubusercontent.com/43619961/56871920-b1555700-69e8-11e9-9ffb-89ee7359c100.png></denchmark-link>\n \n D means your FFmpeg library can decode the video file with the specified codec(for playback)\n E means your FFmpeg library can encode the video file (for writing to a video file)\n I tried to write video_file.mov which has a codec of H.264 to \"video_file.mov\" with codec='wmv3' (you can see it is missing an E) and it doesn't write to a file because FFmpeg is unable to encode it.\n When I tried writing back to a file with codec='wmv2', it worked fine (wmv2 has an E)\n So the source file container and codec and destination codec doesn't matter as long as FFmpeg can decode it and then reencode it.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "dkendall100", "commentT": "2019-04-29T11:29:58Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/dkendall100>@dkendall100</denchmark-link>\n  I see. On second thought there seems to be no reason to write the new video with the same codec as the old video. The optimal solution would be to write the new video with H.265, but I don't think opencv supports this yet, so then H.264 would be the best option.\n Do you know of the best H.264 option that supports all 3 operating systems (MacOS, Windows, Linux?). If you can come up with a good solution and validate your code under the 3 operating systems then please submit a PR including the testing results. Thank you!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "dkendall100", "commentT": "2019-05-01T00:42:45Z", "comment_text": "\n \t\tI can do that\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "dkendall100", "commentT": "2019-05-14T18:18:02Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n \n I need permissions to push to an upstream branch to set up my merge request.\n I successfully fixed the problem and tested on both windows and Linux.\n Though I was unable to verify on mac, this StackOverflow post suggests my changes should work in mac as well.  <denchmark-link:https://stackoverflow.com/questions/10605163/opencv-videowriter-under-osx-producing-no-output#answer-19212323>QTkit support 'mp4v'</denchmark-link>\n \n I also added a few additional changes, extra args for users to specify the output directory and output video fourcc encoding with tested and working defaults.\n I will post screenshots when I can put in the merge request.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "dkendall100", "commentT": "2019-05-14T20:00:44Z", "comment_text": "\n \t\tGreat! I'm not sure how to give you permission though. All the other PR's were initiated and submitted successfully by third parties without any permission. Do you have any specific instructions for what to do?\n \t\t"}}}, "commit": {"commit_id": "0b4f4bb04be287c2c0b92f507e734080eab1f24e", "commit_author": "Dustin Kendall", "commitT": "2019-05-18 12:47:12+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "detect.py", "file_new_name": "detect.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "16", "deleted_lines": null, "method_info": {"method_name": "detect", "method_params": "cfg,data_cfg,weights,images,output,fourcc,img_size,conf_thres,nms_thres,save_txt,save_images,webcam", "method_startline": "10", "method_endline": "22"}}}}}}}