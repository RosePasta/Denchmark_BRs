{"BR": {"BR_id": "7511", "BR_author": "AlexDBlack", "BRopenT": "2019-04-10T07:31:54Z", "BRcloseT": "2019-04-10T14:59:53Z", "BR_text": {"BRsummary": "Libnd4j: strided slice - returns shape with zeros not empty", "BRdescription": "\n Another one highlighted in TF import after last strided slice issue was fixed... the case below is returning shape [0].\n Ironically eventually I want exactly this behaviour: <denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/7112>https://github.com/deeplearning4j/deeplearning4j/issues/7112</denchmark-link>\n \n Until then we should follow convention and return empty array not shape with zeros...\n <denchmark-code>    @Test\n     public void testStridedSliceEdgeCase2(){\n         INDArray in = Nd4j.createFromArray(5, 4);\n         INDArray begin = Nd4j.zeros(DataType.INT, 1);\n         INDArray end = Nd4j.zeros(DataType.INT, 1);\n         INDArray stride = Nd4j.ones(DataType.INT, 1);\n \n         DynamicCustomOp op = DynamicCustomOp.builder(\"strided_slice\")\n                 .addInputs(in, begin, end, stride)\n                 .addIntegerArguments(1, //Begin mask\n                         0,  //Ellipsis mask\n                         0,  //End mask\n                         0,  //New axis mask\n                         0)  //Shrink axis mask\n                 .addOutputs(Nd4j.empty(DataType.INT))\n                 .build();\n \n         List<LongShapeDescriptor> l = op.calculateOutputShape();\n         System.out.println(\"Shape: \" + Arrays.toString(l.get(0).getShape()));\n         assertEquals(1, l.size());\n         assertArrayEquals(new long[0], l.get(0).getShape());    //Is: [0]\n         assertEquals(DataType.INT, l.get(0).dataType());\n         assertTrue(l.get(0).isEmpty()); //Should be empty array\n     }\n </denchmark-code>\n \n Returned shape: [0] - and also not marked as empty.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "AlexDBlack", "commentT": "2019-05-10T15:07:32Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "0dafcc6e1c13bf9d312d5422bb1e882756d0bc93", "commit_author": "shugeo", "commitT": "2019-04-10 17:59:52+03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "libnd4j\\include\\ops\\declarable\\generic\\parity_ops\\strided_slice.cpp", "file_new_name": "libnd4j\\include\\ops\\declarable\\generic\\parity_ops\\strided_slice.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "496,497,498,499,500,501,502,503,504", "deleted_lines": "496", "method_info": {"method_name": "nd4j::ops::DECLARE_SHAPE_FN", "method_params": "strided_slice", "method_startline": "417", "method_endline": "517"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "libnd4j\\tests_cpu\\layers_tests\\DeclarableOpsTests6.cpp", "file_new_name": "libnd4j\\tests_cpu\\layers_tests\\DeclarableOpsTests6.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237", "deleted_lines": null, "method_info": {"method_name": "TEST_F.TEST_F.TEST_F.TEST_F.TEST_F.TEST_F.TEST_F.TEST_F", "method_params": "DeclarableOpsTests6,Test_StridedSlice_Once_Again_7", "method_startline": "217", "method_endline": "237"}}}}}}}