{"BR": {"BR_id": "2175", "BR_author": "hoytak", "BRopenT": "2019-07-30T00:02:49Z", "BRcloseT": "2019-09-11T23:54:59Z", "BR_text": {"BRsummary": "Internal groupby does not use atomics where appropriate", "BRdescription": "\n Currently, the internal groupby operators always use locks, even when a lockfree implementation is possible.  This can cause significant slowdowns, most notably when groupby COUNT aggregation is used on a dataset where most of the items are the exact same category.\n The correct behavior should be to define the groupby operator APIs to control whether the core algorithm locks or doesn\u2019t lock based on the result of this API.  The operators that can should then use lock-free operations.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "hoytak", "commentT": "2019-07-31T23:22:49Z", "comment_text": "\n \t\tTo do this:\n First, write a benchmark test in the C++ code that can be executed.  Use sframe testing utils.  Benchmark on one with groupby count on a binary category.  This should show a lot of slowdown and not be faster with more threads.  Follow sframe/sframe_bench.cpp example.\n Add a virtual function  to base class in <denchmark-link:https://github.com/apple/turicreate/blob/master/src/core/storage/sframe_data/group_aggregate_value.hpp>https://github.com/apple/turicreate/blob/master/src/core/storage/sframe_data/group_aggregate_value.hpp</denchmark-link>\n .\n Individual implementations in <denchmark-link:https://github.com/apple/turicreate/blob/master/src/core/storage/sframe_data/groupby_aggregate_operators.hpp>https://github.com/apple/turicreate/blob/master/src/core/storage/sframe_data/groupby_aggregate_operators.hpp</denchmark-link>\n  then implement this, with count, min, max, etc. using approiate atomic operations instead of relying on the lock.\n Then, the add implementation in <denchmark-link:https://github.com/apple/turicreate/blob/master/src/core/storage/sframe_data/groupby_aggregate_impl.cpp#L237>https://github.com/apple/turicreate/blob/master/src/core/storage/sframe_data/groupby_aggregate_impl.cpp#L237</denchmark-link>\n  would query this to see if it needs to be locked or not.  If not, it skips the lock/unlock step.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "hoytak", "commentT": "2019-08-07T20:10:21Z", "comment_text": "\n \t\tThis ends up being harder than anticipated due to some other parts of the groupby code base, so I think we should push this out to 5.8 to give us time to do it right and fully bake this release.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "hoytak", "commentT": "2019-08-07T22:01:17Z", "comment_text": "\n \t\tSounds like a plan. I will all my code change.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "hoytak", "commentT": "2019-09-11T23:54:59Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/apple/turicreate/pull/2210>#2210</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "6c0d478f2b8b645105a88a7e2588db60f1548b00", "commit_author": "Guihao Liang", "commitT": "2019-09-09 10:18:07-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\core\\storage\\query_engine\\algorithm\\groupby_aggregate.cpp", "file_new_name": "src\\core\\storage\\query_engine\\algorithm\\groupby_aggregate.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "209,214", "deleted_lines": null, "method_info": {"method_name": "turi::query_eval::groupby_aggregate", "method_params": "source,source_column_names,keys,output_column_names,groups", "method_startline": "24", "method_endline": "226"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\core\\storage\\sframe_data\\groupby_aggregate.cpp", "file_new_name": "src\\core\\storage\\sframe_data\\groupby_aggregate.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "26,28,34,35,36,37,45,46,63,82,85,86,87,194,202", "deleted_lines": "26,56,76,83,84,85", "method_info": {"method_name": "turi::groupby_aggregate", "method_params": "source,keys,output_column_names,groups,max_buffer_size", "method_startline": "17", "method_endline": "212"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 10, "file_old_name": "src\\core\\storage\\sframe_data\\groupby_aggregate_impl.cpp", "file_new_name": "src\\core\\storage\\sframe_data\\groupby_aggregate_impl.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281", "deleted_lines": "265,266,267,268,269,270,271,273,274,275,278", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::init_tls", "method_params": "", "method_startline": "265", "method_endline": "281"}}, "hunk_1": {"Ismethod": 1, "added_lines": "256,257,258", "deleted_lines": "256,257,260,261", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::define_group", "method_params": "column_numbers,aggregator", "method_startline": "256", "method_endline": "263"}}, "hunk_2": {"Ismethod": 1, "added_lines": "283,284,285,286,287,288,289,290,291", "deleted_lines": "283,284,285,286,287", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::flush_tls", "method_params": "", "method_startline": "283", "method_endline": "291"}}, "hunk_3": {"Ismethod": 1, "added_lines": "332,333,335,336,337,338,339,340,345,346,348,351,352,353,354,357,358,359,360,361,362,363,364,365,366", "deleted_lines": "330,334,341,350,351,356,357,358,359,360,361,362,363,365,366", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::add", "method_params": "val,num_keys", "method_startline": "330", "method_endline": "367"}}, "hunk_4": {"Ismethod": 1, "added_lines": "535,536,537,550,552,554,555,615,616", "deleted_lines": null, "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::group_and_write_segment", "method_params": "out,reader,segmentid", "method_startline": "535", "method_endline": "622"}}, "hunk_5": {"Ismethod": 1, "added_lines": "229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252", "deleted_lines": "229,230,240,242,244,245,250,251,252,253,254", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::group_aggregate_container", "method_params": "max_buffer_size,num_segments", "method_startline": "228", "method_endline": "254"}}, "hunk_6": {"Ismethod": 1, "added_lines": "295,296,298,301,302,303,304,309,311,314,315,316,317,320,322,323,324,325,326", "deleted_lines": "293,294,295,296,298,299,302,303,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,327", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::add", "method_params": "val,num_keys", "method_startline": "293", "method_endline": "327"}}, "hunk_7": {"Ismethod": 1, "added_lines": "435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510", "deleted_lines": "469,470,478,479", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::merge_local_buffer_set", "method_params": "", "method_startline": "435", "method_endline": "511"}}, "hunk_8": {"Ismethod": 1, "added_lines": "514,515,516,517,519,520,521,522,525,530,531,532", "deleted_lines": null, "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::group_and_write", "method_params": "out", "method_startline": "513", "method_endline": "533"}}, "hunk_9": {"Ismethod": 1, "added_lines": "370,371,372,373,374,375,376,377,378,382,383,390,399,400,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433", "deleted_lines": "370,372,373,376,381,382,383,384,387,388,389,402,404,406,412,413,414", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::flush_segment", "method_params": "segmentid", "method_startline": "369", "method_endline": "433"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\core\\storage\\sframe_data\\groupby_aggregate_impl.hpp", "file_new_name": "src\\core\\storage\\sframe_data\\groupby_aggregate_impl.hpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "237,238,239,240", "deleted_lines": "237,238,239,240", "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::throw_if_not_initialized", "method_params": "", "method_startline": "237", "method_endline": "240"}}, "hunk_1": {"Ismethod": 1, "added_lines": "277,278,279,280,281", "deleted_lines": null, "method_info": {"method_name": "turi::groupby_aggregate_impl::group_aggregate_container::sa_buffer_t::sa_buffer_t", "method_params": "num_segments", "method_startline": "277", "method_endline": "281"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\core\\system\\startup_teardown\\startup_teardown.cpp", "file_new_name": "src\\core\\system\\startup_teardown\\startup_teardown.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "52,53,54,55,56,57,58,59,60,61", "method_info": {"method_name": "turi::upgrade_file_handle_limit", "method_params": "limit", "method_startline": "52", "method_endline": "61"}}, "hunk_1": {"Ismethod": 1, "added_lines": "109,110", "deleted_lines": "139,140", "method_info": {"method_name": "turi::configure_global_environment", "method_params": "argv0", "method_startline": "104", "method_endline": "179"}}, "hunk_2": {"Ismethod": 1, "added_lines": null, "deleted_lines": "68,69,70,71,72,73,74,75,76,77", "method_info": {"method_name": "turi::get_file_handle_limit", "method_params": "", "method_startline": "68", "method_endline": "77"}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\core\\util\\fs_util.cpp", "file_new_name": "src\\core\\util\\fs_util.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "28,29,30,31,32,33,34,35,36,37", "deleted_lines": null, "method_info": {"method_name": "turi::fs_util::upgrade_file_handle_limit", "method_params": "limit", "method_startline": "28", "method_endline": "37"}}, "hunk_1": {"Ismethod": 1, "added_lines": "39,40,41,42,43,44,45,46,47,48", "deleted_lines": null, "method_info": {"method_name": "turi::fs_util::get_file_handle_limit", "method_params": "", "method_startline": "39", "method_endline": "48"}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\core\\util\\fs_util.hpp", "file_new_name": "src\\core\\util\\fs_util.hpp", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59", "deleted_lines": "17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49"}}}}}}