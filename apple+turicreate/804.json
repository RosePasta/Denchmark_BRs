{"BR": {"BR_id": "804", "BR_author": "TobyRoseman", "BRopenT": "2018-07-02T22:55:58Z", "BRcloseT": "2019-11-18T22:17:54Z", "BR_text": {"BRsummary": "Can not export an empty SFrame", "BRdescription": "\n In [1]: import turicreate as tc\n \n In [2]: tc.SFrame().export_json('/tmp/test.json')\n ---------------------------------------------------------------------------\n RuntimeError                              Traceback (most recent call last)\n <ipython-input-2-2449955b3c97> in <module>()\n ----> 1 tc.SFrame().export_json('/tmp/test.json')\n \n /Users/tobyroseman/Documents/turicreate/debug/src/unity/python/turicreate/data_structures/sframe.pyc in export_json(self, filename, orient)\n    2940         \"\"\"\n    2941         if orient == \"records\":\n -> 2942             self.pack_columns(dtype=dict).export_csv(\n    2943                     filename, file_header='[', file_footer=']',\n    2944                     header=False, double_quote=False,\n \n /Users/tobyroseman/Documents/turicreate/debug/src/unity/python/turicreate/data_structures/sframe.pyc in pack_columns(self, column_names, column_name_prefix, dtype, fill_na, remove_prefix, new_column_name)\n    4720         with cython_context():\n    4721             ret_sa = SArray(_proxy=self.__proxy__.pack_columns(column_names, dict_keys,\n -> 4722                                                                dtype, fill_na))\n    4723 \n    4724         new_sf = self.select_columns(rest_columns)\n \n /Users/tobyroseman/Documents/turicreate/debug/src/unity/python/turicreate/cython/cy_sframe.pyx in turicreate.cython.cy_sframe.UnitySFrameProxy.pack_columns (/Users/tobyroseman/Documents/turicreate/debug/src/unity/python/turicreate/cython/cy_sframe.cxx:10843)()\n     298         return create_proxy_wrapper_from_existing_proxy(proxy)\n     299 \n --> 300     cpdef pack_columns(self, _column_names, _key_names, dtype, fill_na):\n     301         cdef vector[string] column_names = to_vector_of_strings(_column_names)\n     302         cdef vector[string] key_names = to_vector_of_strings(_key_names)\n \n /Users/tobyroseman/Documents/turicreate/debug/src/unity/python/turicreate/cython/cy_sframe.pyx in turicreate.cython.cy_sframe.UnitySFrameProxy.pack_columns (/Users/tobyroseman/Documents/turicreate/debug/src/unity/python/turicreate/cython/cy_sframe.cxx:10695)()\n     305         cdef flexible_type na_val = flexible_type_from_pyobject(fill_na)\n     306         with nogil:\n --> 307             proxy = self.thisptr.pack_columns(column_names, key_names, fl_type, na_val)\n     308         return sarray_proxy(proxy)\n     309 \n \n RuntimeError: There is no column to pack\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "TobyRoseman", "commentT": "2019-11-04T12:29:26Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/TobyRoseman>@TobyRoseman</denchmark-link>\n  <denchmark-link:https://github.com/znation>@znation</denchmark-link>\n  Please assign this ticket to me as I would like to try fixing it and contribute .Thanks in advance!\n \t\t"}}}, "commit": {"commit_id": "32326629b50aa8c27b570fef46a62be3c503c850", "commit_author": "Dhivya Kanakabala", "commitT": "2019-11-18 14:17:53-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\core\\storage\\sframe_interface\\unity_sframe.cpp", "file_new_name": "src\\core\\storage\\sframe_interface\\unity_sframe.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "1324,1325,1326,1327,1328", "method_info": {"method_name": "turi::unity_sframe::pack_columns", "method_params": "pack_column_names,key_names,dtype,fill_na", "method_startline": "1316", "method_endline": "1404"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\python\\turicreate\\test\\test_sframe.py", "file_new_name": "src\\python\\turicreate\\test\\test_sframe.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "3783,3784,3785,3786,3787,3788", "deleted_lines": null, "method_info": {"method_name": "test_export_empty_SFrame", "method_params": "self", "method_startline": "3783", "method_endline": "3788"}}}}}}}