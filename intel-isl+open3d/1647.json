{"BR": {"BR_id": "1647", "BR_author": "lucivpav", "BRopenT": "2020-03-23T21:23:18Z", "BRcloseT": "2020-04-13T17:36:08Z", "BR_text": {"BRsummary": "Headless rendering: OSMesa: Failed to create context", "BRdescription": "\n I have followed the <denchmark-link:http://www.open3d.org/docs/release/tutorial/Advanced/headless_rendering.html>instructions</denchmark-link>\n  on headless rendering. To test things out I tried running the  script, which throws an error: .\n To Reproduce\n Steps to reproduce the behavior:\n \n Follow the instructions on headless rendering\n cd Open3D/examples/Python/Advanced note that the path mentioned in the instructions seems outdated, unless I am missing something\n python3 headless_rendering.py\n \n Expected behavior\n No error shows and the example prints the following:\n <denchmark-code>Capture image 00001\n Capture image 00002\n Capture image 00003\n Capture image 00004\n Capture image 00005\n :\n Capture image 00030\n </denchmark-code>\n \n Environment\n \n OS: Debian 4.9.65-3+deb9u1 x86_64\n Python version: 3.5.3\n Open3D version: v0.9.0 (git tag)\n Is this remote workstation?: yes\n How did you install Open3D?: from source using these instructions (GCCcore/6.4.0)\n \n \n I have compiled OSMesa from source, as is described in the <denchmark-link:http://www.open3d.org/docs/release/tutorial/Advanced/headless_rendering.html#install-osmesa>instructions</denchmark-link>\n .\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "lucivpav", "commentT": "2020-04-13T04:41:04Z", "comment_text": "\n \t\tpvarvak's pull request could solve the problem. I followed his instruction and solve it. Just a note, for those who could not use LLVM, I found that his method also works with a slight change (I just copy his instructions here and modify some code):\n <denchmark-code>    # download OSMesa 19.0.8 release\n     (py3env) $ curl -O https://mesa.freedesktop.org/archive/mesa-19.0.8.tar.xz\n     (py3env) $ tar xvf mesa-19.0.8.tar.xz\n     (py3env) $ cd mesa-19.0.8\n     (py3env) $ ./configure --prefix=$HOME/osmesa \\\n         --disable-osmesa --disable-driglx-direct --disable-gbm --enable-dri \\\n         --with-gallium-drivers=swrast --enable-autotools --enable-gallium-osmesa\n     (py3env) $ make -j$(nproc)\n     (py3env) $ make install\n     # this installed OSMesa libraries to $HOME/osmesa/lib; in order for Open3D to pick it up\n     # LD_LIBRARY_PATH needs to be updated to include it:\n     (py3env) $ export LD_LIBRARY_PATH=\"$HOME/osmesa/lib:$LD_LIBRARY_PATH\"\n     # this needs to be done for every shell, or you can add it to your .bashrc\n     (py3env) $ cd ~/Open3D\n     (py3env) $ mkdir build&&cd build\n     (py3env) $ cmake -DENABLE_HEADLESS_RENDERING=ON -DBUILD_GLEW=ON -DBUILD_GLFW=ON \\\n     -DPYTHON_EXECUTABLE:FILEPATH=PATH_TO_YOUR_PYTHON\n         -DOSMESA_INCLUDE_DIR=$HOME/osmesa/include -DOSMESA_LIBRARY=\"$HOME/osmesa/lib/libOSMesa.so\" \\\n         ..\n     (py3env) $ make -j$(nproc)\n     (py3env) $ make install-pip-package\n \n </denchmark-code>\n \n \t\t"}}}, "commit": {"commit_id": "9a3f4d970b4eaa35a5d28826f063a7c18b3a6ab4", "commit_author": "pvarvak", "commitT": "2020-04-13 10:36:07-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorial\\Advanced\\headless_rendering.rst", "file_new_name": "docs\\tutorial\\Advanced\\headless_rendering.rst", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "8,9,10,26,56,71,72,74,83,99,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188", "deleted_lines": "8,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,41,71,80,83,84,89,90,100,116,123"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\Open3D\\CMakeLists.txt", "file_new_name": "src\\Open3D\\CMakeLists.txt", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "58,60", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\Tools\\CMakeLists.txt", "file_new_name": "src\\Tools\\CMakeLists.txt", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "17", "deleted_lines": null}}}, "file_3": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "src\\Tools\\GLInfo.cpp"}}}}