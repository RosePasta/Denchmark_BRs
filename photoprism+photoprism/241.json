{"BR": {"BR_id": "241", "BR_author": "abrander", "BRopenT": "2020-02-04T19:40:24Z", "BRcloseT": "2020-02-21T00:58:40Z", "BR_text": {"BRsummary": "concurrent write to websocket connection", "BRdescription": "\n In some cases the user can trigger a panic() from github.com/gorilla/websocket.\n I believe the culprit is wsReader() and wsWriter() which will execute is separate go routines and both write to the same underlying websocket.Conn.\n The Gorilla documentation touches concurrency here:\n <denchmark-link:https://godoc.org/github.com/gorilla/websocket#hdr-Concurrency>https://godoc.org/github.com/gorilla/websocket#hdr-Concurrency</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "abrander", "commentT": "2020-02-05T16:05:12Z", "comment_text": "\n \t\tIs this something you observed? Never seen this in practice. Thanks for the hint!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "abrander", "commentT": "2020-02-20T13:34:45Z", "comment_text": "\n \t\tI consistently get panic crash like below when debugging photoprism locally. Will propose an ugly/naive fix shortly\n <denchmark-code>ERRO[2020-02-20T08:03:14-05:00] http: concurrent write to websocket connection (GET /api/v1/ws HTTP/1.1\n \n Host: localhost:2342\n \n Cache-Control: no-cache\n \n Connection: Upgrade\n \n Origin: http://localhost:2342\n \n Pragma: no-cache\n \n Sec-Websocket-Extensions: x-webkit-deflate-frame\n \n Sec-Websocket-Key: X/Wupr6SKcR9nAEXr2ngbw==\n \n Sec-Websocket-Version: 13\n \n Upgrade: websocket\n \n User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.5 Safari/605.1.15\n \n \n \n )\n /Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:610 (0x51b96e1)\n \t(*messageWriter).flushFrame: panic(\"concurrent write to websocket connection\")\n /Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:724 (0x51b9e61)\n \t(*messageWriter).Close: return w.flushFrame(true, nil)\n /Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/json.go:29 (0x51bc20d)\n \t(*Conn).WriteJSON: err2 := w.Close()\n /Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:66 (0x51c8e87)\n \twsReader: if err := ws.WriteJSON(gin.H{\"event\": \"config.updated\", \"data\": event.Data(conf.ClientConfig())}); err != nil {\n /Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:148 (0x51e4eda)\n \tWebsocket.func1: wsReader(ws, connId, conf)\n /Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/context.go:108 (0x5191d83)\n \t(*Context).Next: c.handlers[c.index](c)\n /Users/igor/workspaces/photoprism-dev/photoprism/internal/server/recovery.go:33 (0x51e99ca)\n \tRecovery.func1: c.Next()\n /Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/context.go:108 (0x5191d83)\n \t(*Context).Next: c.handlers[c.index](c)\n /Users/igor/workspaces/photoprism-dev/photoprism/internal/server/logger.go:18 (0x51e9369)\n \tLogger.func1: c.Next()\n /Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/context.go:108 (0x5191d83)\n \t(*Context).Next: c.handlers[c.index](c)\n /Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/gin.go:361 (0x519a5c6)\n \t(*Engine).handleHTTPRequest: c.Next()\n /Users/igor/go/pkg/mod/github.com/gin-gonic/gin@v1.3.0/gin.go:326 (0x5199e03)\n \t(*Engine).ServeHTTP: engine.handleHTTPRequest(c)\n /usr/local/Cellar/go/1.13.8/libexec/src/net/http/server.go:2802 (0x432d3d3)\n \tserverHandler.ServeHTTP: handler.ServeHTTP(rw, req)\n /usr/local/Cellar/go/1.13.8/libexec/src/net/http/server.go:1890 (0x4328bc4)\n \t(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)\n /usr/local/Cellar/go/1.13.8/libexec/src/runtime/asm_amd64.s:1357 (0x40621c0)\n \tgoexit: BYTE\t$0x90\t// NOP \n ERRO[2020-02-20T08:03:14-05:00] GET /api/v1/ws (500) [6.197474061s]\n </denchmark-code>\n \n ... and the one below, which actually results in a hard crash\n <denchmark-code>DEBU[2020-02-20T08:03:19-05:00] websocket: connected\n DEBU[2020-02-20T08:03:19-05:00] websocket: received 119 bytes\n DEBU[2020-02-20T08:03:19-05:00] websocket: authenticated\n ERRO[2020-02-20T08:03:19-05:00] settings file not found: \"/Users/igor/.config/photoprism/settings.yml\"\n panic: concurrent write to websocket connection\n \n goroutine 334 [running]:\n github.com/gorilla/websocket.(*messageWriter).flushFrame(0xc002a72c30, 0x1, 0x0, 0x0, 0x0, 0xc00088a930, 0xc838eb0)\n \t/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:610 +0x612\n github.com/gorilla/websocket.(*messageWriter).Close(0xc002a72c30, 0x5532600, 0xc002a72c00)\n \t/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/conn.go:724 +0x62\n github.com/gorilla/websocket.(*Conn).WriteJSON(0xc002a9a000, 0x5532600, 0xc002a72c00, 0x4, 0xc0025f8e18)\n \t/Users/igor/go/pkg/mod/github.com/gorilla/websocket@v1.4.1/json.go:29 +0x12e\n github.com/photoprism/photoprism/internal/api.wsWriter(0xc002a9a000, 0xc0021b52f0, 0x24)\n \t/Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:103 +0x454\n created by github.com/photoprism/photoprism/internal/api.Websocket.func1\n \t/Users/igor/workspaces/photoprism-dev/photoprism/internal/api/websocket.go:146 +0x236\n </denchmark-code>\n \n \t\t"}}}, "commit": {"commit_id": "d43255885cd84d3ed1f7e70a4b00eae64eb7a7de", "commit_author": "ifedorenko", "commitT": "2020-02-21 01:58:40+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "internal\\api\\websocket.go", "file_new_name": "internal\\api\\websocket.go", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "76,103,107,111", "deleted_lines": null, "method_info": {"method_name": "wsWriter", "method_params": "Conn,Mutex,string", "method_startline": "76", "method_endline": "115"}}, "hunk_1": {"Ismethod": 1, "added_lines": "139,140,153,155", "deleted_lines": "146,148", "method_info": {"method_name": "Websocket", "method_params": "RouterGroup,Config", "method_startline": "118", "method_endline": "157"}}, "hunk_2": {"Ismethod": 1, "added_lines": "76,103,107", "deleted_lines": "74", "method_info": {"method_name": "wsWriter", "method_params": "Conn,string", "method_startline": "74", "method_endline": "110"}}, "hunk_3": {"Ismethod": 1, "added_lines": "139,140,153,155", "deleted_lines": "146,148", "method_info": {"method_name": "", "method_params": "", "method_startline": "129", "method_endline": "156"}}}}}}}