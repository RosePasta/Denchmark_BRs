{"BR": {"BR_id": "611", "BR_author": "tholor", "BRopenT": "2020-10-29T20:00:27Z", "BRcloseT": "2020-12-01T15:31:21Z", "BR_text": {"BRsummary": "Inference Benchmarks of QA models are off", "BRdescription": "\n \n EM and F1 are significantly low when running the <denchmark-link:https://github.com/deepset-ai/haystack/blob/add_cml_benchmarks/test/benchmarks/reader.py>reader benchmarks</denchmark-link>\n  in Haystack.\n Latest Master\n \n \n \n \n EM\n f1\n top_n_accuracy\n top_n\n reader_time\n seconds_per_query\n passages_per_second\n reader\n error\n \n \n \n \n 0\n 0.323024\n 0.37967\n 0.95584\n 5\n 123.854\n 0.0104377\n 99.7142\n deepset/bert-base-cased-squad2\n \n \n \n \n FARM 0.4.9\n \n \n \n \n EM\n f1\n top_n_accuracy\n top_n\n reader_time\n seconds_per_query\n passages_per_second\n reader\n error\n \n \n \n \n 0\n 0.758975\n 0.806799\n 0.967133\n 5\n 135.263\n 0.0113992\n 91.3039\n deepset/roberta-base-squad2\n \n \n \n \n However, it doesn't seem to be any of the latest changes as already with this commit I get bad results.\n FARM @ <denchmark-link:https://github.com/deepset-ai/FARM/commit/dac388aa00eb63ad12452f97e40f51a218110b90>dac388a</denchmark-link>\n  (Oct 21)\n \n \n \n \n EM\n f1\n top_n_accuracy\n top_n\n reader_time\n seconds_per_query\n passages_per_second\n reader\n error\n \n \n \n \n 0\n 0.330777\n 0.383186\n 0.963341\n 5\n 134.598\n 0.0113432\n 91.7545\n deepset/roberta-base-squad2\n \n \n \n \n Expected behavior\n Similar EM and F1\n Additional context\n I tried to switch transformers from 3.3.1 back to 3.1.0 (as it was used in FARM 0.4.9) => no effect\n To Reproduce\n Run the above benchmark script from the haystack branch\n System:\n \n OS: Ubuntu 18.04\n GPU/CPU: GPU\n FARM version: latest master  / 0.4.9\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "tholor", "commentT": "2020-10-30T09:25:18Z", "comment_text": "\n \t\tSimilar for <denchmark-link:https://github.com/deepset-ai/FARM/commit/2ab42d220eda58eff3438e10324de41bf05f0fe9>2ab42d2</denchmark-link>\n  (Oct 16)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "tholor", "commentT": "2020-10-30T11:07:04Z", "comment_text": "\n \t\tResults are high again at <denchmark-link:https://github.com/deepset-ai/FARM/commit/c106bca84f36a44ef890e43a1e3da6171e4a8bd8>c106bca</denchmark-link>\n  (Oct 4)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "tholor", "commentT": "2020-10-30T11:13:15Z", "comment_text": "\n \t\tResults are high at <denchmark-link:https://github.com/deepset-ai/FARM/commit/7c38fc553577dc3e0cab314e77d6078ba94524c2>7c38fc5</denchmark-link>\n  (Oct 14)\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "tholor", "commentT": "2020-10-30T11:23:00Z", "comment_text": "\n \t\tResults are high at  <denchmark-link:https://github.com/deepset-ai/FARM/commit/b9dbd7de1720463fb22e0ab295db8ead28ede44e>b9dbd7d</denchmark-link>\n  (Oct 15)\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "tholor", "commentT": "2020-10-30T11:28:55Z", "comment_text": "\n \t\tThe problematic commit is <denchmark-link:https://github.com/deepset-ai/FARM/commit/9055094e339285bb47b06a49cfb4589c735dc7b4>9055094</denchmark-link>\n  (Oct 16)\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "tholor", "commentT": "2020-10-30T13:35:35Z", "comment_text": "\n \t\tOn <denchmark-link:https://github.com/deepset-ai/FARM/commit/9055094e339285bb47b06a49cfb4589c735dc7b4>9055094</denchmark-link>\n , running the benchmark script using Reader.eval_on_file( ) instead of Reader.eval( ) gives the following results\n {'EM': 0.7511159774277774, 'f1': 0.7991178464867065, 'top_n_accuracy': 0.9633622504842921}. This suggests there is some kind of interaction with the indexing in haystack that is causing this issue.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "tholor", "commentT": "2020-10-30T14:35:17Z", "comment_text": "\n \t\tPlease post issues related to haystack into the corresponding <denchmark-link:https://github.com/deepset-ai/haystack>github repository</denchmark-link>\n  <denchmark-link:https://github.com/tholor>@tholor</denchmark-link>\n   ;)\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "tholor", "commentT": "2020-10-30T14:38:03Z", "comment_text": "\n \t\tThis seemed rather like a FARM related bug as performance changed between FARM versions, dear <denchmark-link:https://github.com/Timoeller>@Timoeller</denchmark-link>\n   ;)\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "tholor", "commentT": "2020-10-30T16:22:24Z", "comment_text": "\n \t\tThis has been addressed by <denchmark-link:https://github.com/deepset-ai/haystack/pull/531>a new PR</denchmark-link>\n  in Haystack which corrects the creation of no_answer sample dictionaries in FARMReader.eval( ). In future we would like to fix this problem also on the FARM preprocessing side by filtering out empty string spans.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "tholor", "commentT": "2020-11-04T09:41:17Z", "comment_text": "\n \t\tJust to clarify: we want to add a check in FARM preprocessing that identifies labels with:\n \n empty string\n start / end = 0\n as no_answer and not as regular span labels.\n \n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "tholor", "commentT": "2020-11-04T14:45:42Z", "comment_text": "\n \t\tMight be related to <denchmark-link:https://github.com/deepset-ai/FARM/pull/614>#614</denchmark-link>\n \n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "tholor", "commentT": "2020-11-18T13:45:08Z", "comment_text": "\n \t\tSpan labels with an empty string are now checked for and removed in FARM preprocessing <denchmark-link:https://github.com/deepset-ai/FARM/pull/635>#635</denchmark-link>\n \n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "tholor", "commentT": "2020-12-01T15:31:21Z", "comment_text": "\n \t\tClosing by <denchmark-link:https://github.com/deepset-ai/FARM/pull/635>#635</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "f8660466d5b78db8cb91603ef88d5988a12956a1", "commit_author": "Branden Chan", "commitT": "2020-11-18 14:46:37+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "farm\\data_handler\\processor.py", "file_new_name": "farm\\data_handler\\processor.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1248,1253,1254,1255,1256", "deleted_lines": null, "method_info": {"method_name": "_dicts_to_baskets", "method_params": "self,dicts,indices", "method_startline": "1240", "method_endline": "1266"}}}}}}}