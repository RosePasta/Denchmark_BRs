{"BR": {"BR_id": "2323", "BR_author": "kmcgrady", "BRopenT": "2020-11-06T20:36:28Z", "BRcloseT": "2020-12-03T15:52:49Z", "BR_text": {"BRsummary": "Using git below version 2.7 requires remote (e.g. GitHub) credentials on every run (for private repos)", "BRdescription": "\n <denchmark-h:h1>Summary</denchmark-h>\n \n When Streamlit uses Git to detect branch/remote information. It uses GitPython package to\n <denchmark-h:h1>Steps to reproduce</denchmark-h>\n \n What are the steps we should take to reproduce the bug:\n \n Install an old version of git (< 2.7)\n Create/run a streamlit script on a private repo\n \n <denchmark-h:h2>Expected behavior:</denchmark-h>\n \n No credentials should be asked for.\n <denchmark-h:h2>Actual behavior:</denchmark-h>\n \n You should see credentials being asked for (and asked on every rerun).\n <denchmark-h:h2>Is this a regression?</denchmark-h>\n \n yes - because we never required gitpython in the past.\n <denchmark-h:h1>Debug info</denchmark-h>\n \n \n Streamlit version: 0.68+\n \n <denchmark-h:h1>Additional information</denchmark-h>\n \n See <denchmark-link:https://discuss.streamlit.io/t/running-locally-streamlit-prompts-to-login-to-my-git-repo-how-can-i-disable/6751/19>https://discuss.streamlit.io/t/running-locally-streamlit-prompts-to-login-to-my-git-repo-how-can-i-disable/6751/19</denchmark-link>\n \n Issue is brought up to <denchmark-link:https://github.com/gitpython-developers/GitPython/blob/master/git/remote.py#L528>https://github.com/gitpython-developers/GitPython/blob/master/git/remote.py#L528</denchmark-link>\n \n Can also just log that git is pretty old.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "kmcgrady", "commentT": "2020-11-06T21:29:39Z", "comment_text": "\n \t\tAustin Chen commented: * Don't require a password\n \n Tell the user to upgrade git\n ** Only for local repo\n Specify a minimum git version in our docs\n Abhi to sync with Austin on messaging\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "kmcgrady", "commentT": "2020-11-16T13:17:00Z", "comment_text": "\n \t\tPlease add an option to disable git requests altogether. I am forcing page reload when new data arrives (session.request_rerun), about once a second, and see\n <denchmark-code>2020-11-16 14:15:14 frap git.cmd[279370] DEBUG Popen(['git', 'rev-parse', '--show-toplevel'], cwd=/some/path, universal_newlines=False, shell=None, istream=None)\n 2020-11-16 14:15:14 frap git.cmd[279370] DEBUG Popen(['git', 'remote', 'get-url', '--all', 'origin'], cwd=/some/path, universal_newlines=False, shell=None, istream=None)\n </denchmark-code>\n \n at every reload. This means spawning two processes every second.\n \t\t"}}}, "commit": {"commit_id": "b1c99ba1008d472b26d306c579883d9a2b5b725c", "commit_author": "Tim Conkling", "commitT": "2020-12-03 07:52:48-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "lib\\streamlit\\bootstrap.py", "file_new_name": "lib\\streamlit\\bootstrap.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254", "deleted_lines": null, "method_info": {"method_name": "_maybe_print_old_git_warning", "method_params": "str", "method_startline": "230", "method_endline": "254"}}, "hunk_1": {"Ismethod": 1, "added_lines": "136", "deleted_lines": null, "method_info": {"method_name": "_on_server_start", "method_params": "server", "method_startline": "135", "method_endline": "165"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "lib\\streamlit\\git_util.py", "file_new_name": "lib\\streamlit\\git_util.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "47,48", "deleted_lines": "46", "method_info": {"method_name": "tracking_branch", "method_params": "self", "method_startline": "46", "method_endline": "49"}}, "hunk_1": {"Ismethod": 1, "added_lines": "70", "deleted_lines": null, "method_info": {"method_name": "is_github_repo", "method_params": "self", "method_startline": "64", "method_endline": "81"}}, "hunk_2": {"Ismethod": 1, "added_lines": "52,53,54", "deleted_lines": null, "method_info": {"method_name": "get_tracking_branch_remote", "method_params": "self", "method_startline": "51", "method_endline": "62"}}, "hunk_3": {"Ismethod": 1, "added_lines": "19,20,21,22,25,26,27,28,29", "deleted_lines": "23,24", "method_info": {"method_name": "__init__", "method_params": "self,path", "method_startline": "18", "method_endline": "35"}}, "hunk_4": {"Ismethod": 1, "added_lines": "37,38,39,40,41,42,43", "deleted_lines": null, "method_info": {"method_name": "is_valid", "method_params": "self", "method_startline": "37", "method_endline": "43"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "lib\\streamlit\\server\\server.py", "file_new_name": "lib\\streamlit\\server\\server.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "242,243", "deleted_lines": null, "method_info": {"method_name": "script_path", "method_params": "self", "method_startline": "242", "method_endline": "243"}}, "hunk_1": {"Ismethod": 1, "added_lines": "214,215,216,217,230,241,242,243,244", "deleted_lines": "214,215,216,217,218,219,220,221,222,223,236", "method_info": {"method_name": "__init__", "method_params": "self,ioloop,script_path,command_line", "method_startline": "214", "method_endline": "245"}}, "hunk_2": {"Ismethod": 1, "added_lines": "214,215", "deleted_lines": "214,215", "method_info": {"method_name": "__init__", "method_params": "self,IOLoop,str,str", "method_startline": "214", "method_endline": "215"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "lib\\tests\\streamlit\\bootstrap_test.py", "file_new_name": "lib\\tests\\streamlit\\bootstrap_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "277,278,279,280,281,282,283,284,285", "deleted_lines": null, "method_info": {"method_name": "test_print_old_git_warning", "method_params": "self,mock_git_repo", "method_startline": "277", "method_endline": "285"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "lib\\tests\\streamlit\\git_util_test.py", "file_new_name": "lib\\tests\\streamlit\\git_util_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "59,60,61,62,63,64,65,66,67,68,69,70", "deleted_lines": "59,60", "method_info": {"method_name": "test_old_git_version", "method_params": "self", "method_startline": "59", "method_endline": "70"}}, "hunk_1": {"Ismethod": 1, "added_lines": "73,74,75,76,79", "deleted_lines": null, "method_info": {"method_name": "test_git_repo_valid", "method_params": "self", "method_startline": "72", "method_endline": "79"}}}}}}}