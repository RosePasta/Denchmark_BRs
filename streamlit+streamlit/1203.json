{"BR": {"BR_id": "1203", "BR_author": "tc87", "BRopenT": "2020-03-09T18:40:31Z", "BRcloseT": "2020-03-30T19:24:05Z", "BR_text": {"BRsummary": "Need hash_func for type tf.Session", "BRdescription": "\n <denchmark-h:h1>Summary</denchmark-h>\n \n These are all types from the GAN demo that shouldn't be hashed by Streamlit.\n <denchmark-h:h1>Full error message</denchmark-h>\n \n No included error message, but <denchmark-link:https://github.com/streamlit/demo-face-gan/blob/master/app.py#L15>here</denchmark-link>\n  are the associated lines in the GAN demo.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "tc87", "commentT": "2020-03-18T17:28:52Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jrhone>@jrhone</denchmark-link>\n  : Are you writing default hash functions for these three types?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "tc87", "commentT": "2020-03-18T19:49:26Z", "comment_text": "\n \t\tNo I'm not, these are the 3 types we pass to hash_funcs in the face gan demo. This issue should be updated to say fix face gan demo.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "tc87", "commentT": "2020-03-23T17:48:27Z", "comment_text": "\n \t\tCan someone verify that we want this issue closed, as a duplicate of <denchmark-link:https://github.com/streamlit/streamlit/issues/1215>#1215</denchmark-link>\n ? <denchmark-link:https://github.com/treuille>@treuille</denchmark-link>\n  <denchmark-link:https://github.com/tc87>@tc87</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "tc87", "commentT": "2020-03-23T18:58:45Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jrhone>@jrhone</denchmark-link>\n : Not a duplicate of <denchmark-link:https://github.com/streamlit/streamlit/issues/1215>#1215</denchmark-link>\n . We should come up with default  for these types as part of Streamlit itself, then verify that it works in <denchmark-link:github.com/streamlit/demo-face-gan>Face GAN demo</denchmark-link>\n  without specifying additional .\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "tc87", "commentT": "2020-03-23T19:06:39Z", "comment_text": "\n \t\ttfutil.Network and tfutil_cpu.Network are user defined classes, so we wouldn't create default hash funcs for them. However, I can investigate if they're currently failing to hash and see why.\n For tf.Session, ok.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "tc87", "commentT": "2020-03-23T22:25:27Z", "comment_text": "\n \t\tAh gotit. Ok. Let's do `tf.Session` and see if that fixes the other two. (I bet it will.)\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Mon, Mar 23, 2020 at 12:06 PM, Jonathan Rhone < ***@***.*** > wrote:\n \n \n \n  tfutil. Network ( http://tfutil.network/ ) and tfutil_cpu. Network (\n  http://tfutil_cpu.network/ ) are user defined classes, so we wouldn't\n  create default hash funcs for them. However, I can investigate if they're\n  currently failing to hash and see why.\n \n \n \n  For tf.Session , ok.\n \n \n \n  \u2014\n  You are receiving this because you were mentioned.\n  Reply to this email directly, view it on GitHub (\n  #1203 (comment)\n  ) , or unsubscribe (\n  https://github.com/notifications/unsubscribe-auth/AAMYONNAFMRCP4BJ72YAKOLRI6XM5ANCNFSM4LEPALIQ\n  ).\n \n \n \n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "tc87", "commentT": "2020-03-30T19:24:05Z", "comment_text": "\n \t\tClosing this issue due to <denchmark-link:https://github.com/streamlit/streamlit/pull/1280>pull request 1280</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "8e4f560db30c2bedebfe935ff8c88a6dab4013d2", "commit_author": "Jonathan Rhone", "commitT": "2020-03-30 20:59:56-03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "lib\\streamlit\\hashing.py", "file_new_name": "lib\\streamlit\\hashing.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "437,438,439", "deleted_lines": null, "method_info": {"method_name": "_to_bytes", "method_params": "self,obj,context", "method_startline": "320", "method_endline": "505"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 7, "file_old_name": "lib\\tests\\streamlit\\hashing_test.py", "file_new_name": "lib\\tests\\streamlit\\hashing_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "789", "deleted_lines": null, "method_info": {"method_name": "test_non_hashable.f", "method_params": "x", "method_startline": "788", "method_endline": "789"}}, "hunk_1": {"Ismethod": 1, "added_lines": "332,333,334,335,339,341,344,347,350,351", "deleted_lines": "333,335,338,339,342,345,346", "method_info": {"method_name": "test_non_hashable", "method_params": "self", "method_startline": "332", "method_endline": "352"}}, "hunk_2": {"Ismethod": 1, "added_lines": "786", "deleted_lines": "787", "method_info": {"method_name": "test_tensorflow_non_hashable.f", "method_params": "x", "method_startline": "786", "method_endline": "787"}}, "hunk_3": {"Ismethod": 1, "added_lines": "324,327,328,329,330,331,332,333,334,335,339,341,344,347", "deleted_lines": "324,325,326,329,333,335,338,339,342,345,346", "method_info": {"method_name": "test_tensorflow_non_hashable", "method_params": "self", "method_startline": "324", "method_endline": "347"}}, "hunk_4": {"Ismethod": 1, "added_lines": "789", "deleted_lines": "790", "method_info": {"method_name": "test_tensorflow_non_hashable.g", "method_params": "y", "method_startline": "789", "method_endline": "790"}}, "hunk_5": {"Ismethod": 1, "added_lines": "324,327,328,329,330", "deleted_lines": "324,325,326,329", "method_info": {"method_name": "test_tensorflow_session", "method_params": "self", "method_startline": "324", "method_endline": "330"}}, "hunk_6": {"Ismethod": 1, "added_lines": "792", "deleted_lines": null, "method_info": {"method_name": "test_non_hashable.g", "method_params": "y", "method_startline": "791", "method_endline": "792"}}}}}}}