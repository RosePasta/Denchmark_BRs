{"BR": {"BR_id": "485", "BR_author": "kellyamanda", "BRopenT": "2019-10-21T17:59:13Z", "BRcloseT": "2019-11-26T20:09:13Z", "BR_text": {"BRsummary": "Passing a date in index to st.line_chart defaults to UTC time zone", "BRdescription": "\n <denchmark-h:h1>Summary</denchmark-h>\n \n This may not be a Streamlit bug - it may be a Python issue where I need to declare a datetime. When I pass a date through as the index to st.line_chart my graph is then shifted 7 hours back in time from my intended time (e.g. I would want to show value 50 on the graph for midnight on 2019-08-10 and it shows as 5pm for 2019-08-09). I think what is happening is somehow it's doing a UTC offset by default. Would like to\n <denchmark-h:h1>Steps to reproduce</denchmark-h>\n \n df = pd.DataFrame({\n 'index': [date(2019, 8, 9), date(2019, 8, 10), date(2019, 8, 11), date(2019, 8, 12)],\n 'numbers': [10, 50, 30, 40]\n })\n df\n st.line_chart(df.set_index('index'))\n <denchmark-h:h2>Expected behavior:</denchmark-h>\n \n I would expect it to plot in the date that I passed through but it's converting it for some reason. Also happens when I use pd.to_datetime() on a dataset.\n <denchmark-h:h2>Actual behavior:</denchmark-h>\n \n Shifts it back in time by 7 hours.\n <denchmark-h:h2>Is this a regression?</denchmark-h>\n \n No\n <denchmark-h:h1>Debug info</denchmark-h>\n \n Streamlit, version 0.47.4\n Python 3.7.2\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "kellyamanda", "commentT": "2019-10-30T00:56:10Z", "comment_text": "\n \t\tBy default, Vegalite outputs time data in local time: <denchmark-link:https://vega.github.io/vega-lite/docs/timeunit.html#output>https://vega.github.io/vega-lite/docs/timeunit.html#output</denchmark-link>\n \n We can fix this by setting scale: {type: \"utc\"} in the chart spec:\n chart = (\n     getattr(alt.Chart(data), \"mark_\" + chart_type)()\n     .encode(\n         alt.X(\"index\", title=\"\", scale=alt.Scale(type=\"utc\")),  # <-- set \"scale\" to \"utc\"\n         alt.Y(\"value\", title=\"\"),\n         alt.Color(\"variable\", title=\"\", type=\"nominal\"),\n         alt.Tooltip([\"index\", \"value\", \"variable\"]),\n         opacity=opacity,\n     )\n     .interactive()\n )\n (We'd only want to do this for temporal data, obviously.) But I'm not familiar with altair/vega-lite, so I'm not sure if this is the right solution.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "kellyamanda", "commentT": "2019-10-30T16:16:42Z", "comment_text": "\n \t\tMaybe st.line_chart and friends take a new datetime_display param that defaults to \"local\" but can be set to \"utc\"?\n \t\t"}}}, "commit": {"commit_id": "c2ac2f873e7b7a4eefad2d0dea24d29d551e18bc", "commit_author": "Tim Conkling", "commitT": "2019-11-26 12:09:12-08:00", "changed_files": {"file_0": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "e2e\\scripts\\chart_utc_time.py"}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "e2e\\specs\\chart_utc_time.ts"}, "file_2": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "frontend\\cypress\\snapshots\\linux\\2x\\chart_utc_time.ts\\chartUTCTime-0.snap.png", "file_new_name": "frontend\\cypress\\snapshots\\linux\\2x\\chart_utc_time.ts\\chartUTCTime-0.snap.png"}, "file_3": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "frontend\\cypress\\snapshots\\linux\\2x\\chart_utc_time.ts\\chartUTCTime-1.snap.png", "file_new_name": "frontend\\cypress\\snapshots\\linux\\2x\\chart_utc_time.ts\\chartUTCTime-1.snap.png"}, "file_4": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "frontend\\cypress\\snapshots\\linux\\2x\\chart_utc_time.ts\\chartUTCTime-2.snap.png", "file_new_name": "frontend\\cypress\\snapshots\\linux\\2x\\chart_utc_time.ts\\chartUTCTime-2.snap.png"}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "lib\\streamlit\\elements\\altair.py", "file_new_name": "lib\\streamlit\\elements\\altair.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49", "deleted_lines": "37,38,41,42", "method_info": {"method_name": "_is_date_column", "method_params": "df,name", "method_startline": "29", "method_endline": "49"}}, "hunk_1": {"Ismethod": 1, "added_lines": "63,64,72,73,74,75,76,77,78,79,80,81,85,86", "deleted_lines": "53,54", "method_info": {"method_name": "generate_chart", "method_params": "chart_type,data", "method_startline": "52", "method_endline": "93"}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "lib\\tests\\streamlit\\altair_test.py", "file_new_name": "lib\\tests\\streamlit\\altair_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "29,30,31,32,33,34", "deleted_lines": null, "method_info": {"method_name": "_deep_get", "method_params": "dictionary,keys", "method_startline": "29", "method_endline": "34"}}, "hunk_1": {"Ismethod": 1, "added_lines": "65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83", "deleted_lines": null, "method_info": {"method_name": "test_date_column_utc_scale", "method_params": "self", "method_startline": "65", "method_endline": "83"}}, "hunk_2": {"Ismethod": 1, "added_lines": "42,43,44,45", "deleted_lines": null, "method_info": {"method_name": "test_altair_chart", "method_params": "self", "method_startline": "40", "method_endline": "63"}}}}}}}