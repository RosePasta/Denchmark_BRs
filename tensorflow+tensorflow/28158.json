{"BR": {"BR_id": "28158", "BR_author": "ipod825", "BRopenT": "2019-04-25T19:18:29Z", "BRcloseT": "2019-04-29T19:40:10Z", "BR_text": {"BRsummary": "Keras ValueError stops autograph building", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no\n TensorFlow installed from (source or binary):\n pip\n TensorFlow version (use command below):\n 2.0.0-dev20190424\n Python version:\n 3.7.1\n Bazel version (if compiling from source):\n GCC/Compiler version (if compiling from source):\n CUDA/cuDNN version:\n cudatoolkit-10.0.130-0\n cudnn-7.3.1-cuda10.0_0\n GPU model and memory:\n GeForce RTX 2080 Ti\n \n Describe the current behavior\n Calling keras layer without calling build() automatically infers the shapes of the trainable variables. This works both in eager mode and graph mode in the current 2.0-alpha version. However, running the provided code in 2.0.0-dev20190424 version, it gives the following error message:\n <denchmark-code>W0425 12:08:40.775576 139922429134656 tf_logging.py:161] Entity <function update at 0x7f41dd7038c8> could not be transform\n ed and will be executed as-is. Some features (e.g. tensor-dependent conditionals and loops) may not work as expected. Erro\n r details can be found in the logs when running with the env variable AUTOGRAPH_VERBOSITY >= 1. Please report this to the\n AutoGraph team. Cause: ValueError during conversion: Weights for model sequential have not yet been created. Weights are c\n reated when the Model is first called on inputs or `build()` is called with an `input_shape`.\n </denchmark-code>\n \n Describe the expected behavior\n Code to reproduce the issue\n import os\n \n import tensorflow as tf\n from tensorflow.keras import layers, models, optimizers\n \n os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n \n model = models.Sequential([layers.Dense(1, activation='relu')])\n optimizer = optimizers.SGD()\n \n # Is this line needed in graph mode?\n # model.build((None, 1))\n \n \n @tf.function\n def update(batch):\n     with tf.GradientTape() as tape:\n         output = model(batch)\n     grads = tape.gradient(output, model.trainable_variables)\n     optimizer.apply_gradients(zip(grads, model.trainable_variables))\n \n \n if __name__ == \"__main__\":\n \n     batch = tf.zeros((1, 1), dtype=tf.float32)\n     update(batch)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ipod825", "commentT": "2019-04-26T22:47:29Z", "comment_text": "\n \t\tI could reproduce the issue with tf-nightly. However, there is no error with TF2.0.0-alpha0. Thanks!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ipod825", "commentT": "2019-04-29T19:40:11Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=28158>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=28158>No</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ipod825", "commentT": "2019-04-29T19:49:15Z", "comment_text": "\n \t\tJust submitted a fix that should allow your code to work without calling model.build.\n \t\t"}}}, "commit": {"commit_id": "008300cc7667da8f8a7d36806470c01a524153d0", "commit_author": "Dan Moldovan", "commitT": "2019-04-29 12:29:20-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\autograph\\converters\\directives.py", "file_new_name": "tensorflow\\python\\autograph\\converters\\directives.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "116,117,118", "deleted_lines": "116,117", "method_info": {"method_name": "visit_Attribute", "method_params": "self,node", "method_startline": "113", "method_endline": "119"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tensorflow\\python\\autograph\\converters\\directives_test.py", "file_new_name": "tensorflow\\python\\autograph\\converters\\directives_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "112,113", "deleted_lines": null, "method_info": {"method_name": "test_value_verification_does_not_trigger_properties.test_fn", "method_params": "", "method_startline": "112", "method_endline": "113"}}, "hunk_1": {"Ismethod": 1, "added_lines": "102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117", "deleted_lines": null, "method_info": {"method_name": "test_value_verification_does_not_trigger_properties", "method_params": "self", "method_startline": "102", "method_endline": "117"}}, "hunk_2": {"Ismethod": 1, "added_lines": "107,108", "deleted_lines": null, "method_info": {"method_name": "test_value_verification_does_not_trigger_properties.b", "method_params": "self", "method_startline": "107", "method_endline": "108"}}}}}}}