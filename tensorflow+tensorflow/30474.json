{"BR": {"BR_id": "30474", "BR_author": "Dobiasd", "BRopenT": "2019-07-08T05:57:13Z", "BRcloseT": "2019-07-13T02:44:27Z", "BR_text": {"BRsummary": "[TF2.0] Bug allowing misuse of the batch dimension of a convolution layer", "BRdescription": "\n tensorflow-1.14.0 rightfully complains about the following minimal example with ValueError: could not broadcast input array from shape (20,6,6,32) into shape (10,6,6,32).\n tensorflow==2.0.0-beta1 however happily runs it and prints (20, 6, 6, 32).\n import numpy as np\n import tensorflow.keras.backend as k\n from tensorflow.keras.layers import Input, Conv2D, Lambda\n from tensorflow.keras.models import Model\n \n def custom_reshape(inputs):\n     return k.reshape(inputs, (-1, 8, 8, 3))\n \n inputs = Input(shape=(8, 8, 6))\n x = Lambda(custom_reshape)(inputs)\n x = Conv2D(32, (3, 3))(x)\n model = Model(inputs=inputs, outputs=x)\n model.compile(loss='mean_squared_error', optimizer='nadam')\n print(model.summary())\n batch_size = 10\n result = model.predict(np.ones((batch_size, 8, 8, 6)), batch_size=batch_size)\n print(result.shape)\n As <denchmark-link:https://groups.google.com/a/tensorflow.org/forum/#!topic/testing/txsgcR3cubQ>per discussion</denchmark-link>\n  this seems to be a bug in TF 2.0.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Dobiasd", "commentT": "2019-07-09T13:01:30Z", "comment_text": "\n \t\tI am able to reproduce the issue on Colab with Tensorflow 1.14.0 and works as expected with 2.0.0.beta1.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Dobiasd", "commentT": "2019-07-09T13:22:24Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/gadagashwini>@gadagashwini</denchmark-link>\n \n \n I am able to reproduce the issue on Colab with Tensorflow 1.14.0 and works as expected with 2.0.0.beta1.\n \n You mean the other way around, right? I.e., the ValueError we get with 1.14.0 should be the correct behavior, while not raising this exception in 2.0.0-beta1 seems to be the problem.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Dobiasd", "commentT": "2019-07-10T08:10:35Z", "comment_text": "\n \t\t\n @gadagashwini\n \n I am able to reproduce the issue on Colab with Tensorflow 1.14.0 and works as expected with 2.0.0.beta1.\n \n You mean the other way around, right? I.e., the ValueError we get with 1.14.0 should be the correct behavior, while not raising this exception in 2.0.0-beta1 seems to be the problem.\n \n Yes <denchmark-link:https://github.com/Dobiasd>@Dobiasd</denchmark-link>\n  I could able to get the  with Tensorflow  and no exception with Tensorflow .Thanks!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Dobiasd", "commentT": "2019-07-13T02:44:28Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=30474>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=30474>No</denchmark-link>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Dobiasd", "commentT": "2019-07-13T23:57:32Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Dobiasd>@Dobiasd</denchmark-link>\n  With tf-nightly-2.0-preview the code seems to work correctly:\n ...\n ...\n Traceback (most recent call last):\n   File \"p.py\", line 16, in <module>\n     result = model.predict(np.ones((batch_size, 8, 8, 6)), batch_size=batch_size)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/engine/training.py\", line 872, in predict\n     use_multiprocessing=use_multiprocessing)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/engine/training_arrays.py\", line 717, in predict\n     callbacks=callbacks)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/engine/training_arrays.py\", line 395, in model_iteration\n     aggregator.aggregate(batch_outs, batch_start, batch_end)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/engine/training_utils.py\", line 308, in aggregate\n     result.aggregate(batch_element, batch_start, batch_end)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/keras/engine/training_utils.py\", line 233, in aggregate\n     batch_element.shape, self.results.shape))\n ValueError: Mismatch between expected batch size and model output batch size. Output shape = (20, 6, 6, 32), expected output shape = shape (10, 6, 6, 32)\n ubuntu@ubuntu:/v# python\n Python 2.7.15+ (default, Nov 27 2018, 23:36:35) \n [GCC 7.3.0] on linux2\n Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n >>> import tensorflow as tf\n >>> tf.version.VERSION\n '2.0.0-dev20190713'\n >>> tf.version.GIT_VERSION\n 'v1.12.1-6246-g5d4a6cee73'\n >>> \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Dobiasd", "commentT": "2019-07-14T05:02:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yongtang>@yongtang</denchmark-link>\n \n \n With tf-nightly-2.0-preview the code seems to work correctly\n \n Thanks for the confirmation. I guess this was to be expected since <denchmark-link:https://github.com/tensorflow/tensorflow/commit/37fcf0a0e04b2014864936397c25e6c398135772>the fix</denchmark-link>\n  includes an explicit test for this. \n \t\t"}}}, "commit": {"commit_id": "37fcf0a0e04b2014864936397c25e6c398135772", "commit_author": "Pavithra Vijay", "commitT": "2019-07-12 19:42:23-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\keras\\engine\\training_test.py", "file_new_name": "tensorflow\\python\\keras\\engine\\training_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1253,1254", "deleted_lines": null, "method_info": {"method_name": "test_invalid_batch_dimension.custom_reshape", "method_params": "inputs", "method_startline": "1253", "method_endline": "1254"}}, "hunk_1": {"Ismethod": 1, "added_lines": "1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268", "deleted_lines": null, "method_info": {"method_name": "test_invalid_batch_dimension", "method_params": "self", "method_startline": "1251", "method_endline": "1268"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\engine\\training_utils.py", "file_new_name": "tensorflow\\python\\keras\\engine\\training_utils.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "229,230,231,232,233,234", "deleted_lines": null, "method_info": {"method_name": "aggregate", "method_params": "self,batch_element,batch_start,batch_end", "method_startline": "222", "method_endline": "248"}}}}}}}