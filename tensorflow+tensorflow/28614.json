{"BR": {"BR_id": "28614", "BR_author": "davisyoshida", "BRopenT": "2019-05-10T22:16:44Z", "BRcloseT": "2019-05-14T16:25:25Z", "BR_text": {"BRsummary": "Keras RNN example from docs does not support statefulness when multilayer", "BRdescription": "\n Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template\n System information\n \n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\n \n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\n \n \n TensorFlow installed from (source or binary): Binary\n \n \n TensorFlow version (use command below): 1.13.1\n \n \n Python version: 3.6.7 (Anaconda)\n \n \n CUDA/cuDNN version: 9.2/7.3.1\n \n \n GPU model and memory: GTX 1070 Ti\n \n \n \n Modifying the example code given <denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/layers/RNN>here</denchmark-link>\n  to have  leads to the following error:\n <denchmark-code>Traceback (most recent call last):\n   File \"tmp.py\", line 6, in <module>\n     y = layer(x)\n   File \"/home/davis/software/anaconda3/envs/p36/lib/python3.6/site-packages/tensorflow/python/keras/layers/recurrent.py\", line 701, in __call__                                                                                                                                \n     return super(RNN, self).__call__(inputs, **kwargs)\n   File \"/home/davis/software/anaconda3/envs/p36/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 538, in __call__                                                                                                                               \n     self._maybe_build(inputs)\n   File \"/home/davis/software/anaconda3/envs/p36/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 1603, in _maybe_build                                                                                                                          \n     self.build(input_shapes)\n   File \"/home/davis/software/anaconda3/envs/p36/lib/python3.6/site-packages/tensorflow/python/keras/layers/recurrent.py\", line 636, in build                                                                                                                                   \n     self.reset_states()\n   File \"/home/davis/software/anaconda3/envs/p36/lib/python3.6/site-packages/tensorflow/python/keras/layers/recurrent.py\", line 906, in reset_states                                                                                                                            \n     tensor_shape.as_shape(dim).as_list()))\n   File \"/home/davis/software/anaconda3/envs/p36/lib/python3.6/site-packages/tensorflow/python/keras/backend.py\", line 2833, in set_value\n     value = np.asarray(value, dtype=dtype(x))\n   File \"/home/davis/software/anaconda3/envs/p36/lib/python3.6/site-packages/tensorflow/python/keras/backend.py\", line 1015, in dtype\n     return x.dtype.base_dtype.name\n AttributeError: 'list' object has no attribute 'dtype'\n </denchmark-code>\n \n Describe the expected behavior\n Code should run with no error\n Code to reproduce the issue\n <denchmark-code>cells = [tf.keras.layers.LSTMCell(32), tf.keras.layers.LSTMCell(64)]\n x = tf.keras.Input(batch_shape=(42, None, 5)) \n layer = tf.keras.layers.RNN(cells, stateful=True)\n y = layer(x)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "davisyoshida", "commentT": "2019-05-14T14:48:21Z", "comment_text": "\n \t\tThank you for reporting the issue, will fix it soon.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "davisyoshida", "commentT": "2019-05-14T16:25:23Z", "comment_text": "\n \t\tThis should be now fixed in <denchmark-link:https://github.com/tensorflow/tensorflow/commit/12250556493fe7757bd97f397e3483e7c0e022b1>1225055</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "12250556493fe7757bd97f397e3483e7c0e022b1", "commit_author": "Scott Zhu", "commitT": "2019-05-14 08:07:42-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\keras\\backend.py", "file_new_name": "tensorflow\\python\\keras\\backend.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "3731,3732", "deleted_lines": "3731,3732"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\keras\\layers\\recurrent.py", "file_new_name": "tensorflow\\python\\keras\\layers\\recurrent.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "815,816,817,818,819,820,821,823,824,825,826,828,829,830,832,833,835,836,837,838,840,842,843,844", "deleted_lines": "815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,839,841,842,844", "method_info": {"method_name": "reset_states", "method_params": "self,states", "method_startline": "792", "method_endline": "844"}}, "hunk_1": {"Ismethod": 1, "added_lines": "816,817", "deleted_lines": "816,817", "method_info": {"method_name": "reset_states.create_state_variable", "method_params": "state", "method_startline": "816", "method_endline": "817"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\layers\\recurrent_test.py", "file_new_name": "tensorflow\\python\\keras\\layers\\recurrent_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332", "deleted_lines": null, "method_info": {"method_name": "test_stateful_rnn_with_stacking", "method_params": "self,cell", "method_startline": "1307", "method_endline": "1332"}}}}}}}