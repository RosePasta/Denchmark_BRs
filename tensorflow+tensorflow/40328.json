{"BR": {"BR_id": "40328", "BR_author": "etsygankov", "BRopenT": "2020-06-09T18:21:05Z", "BRcloseT": "2020-06-18T17:51:34Z", "BR_text": {"BRsummary": "Subclassed model with ConvLSTM2D layer can't be saved as a SavedModel in TF2.2", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): custom code, extended an example from TF guides\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04/Mac OS 10.15\n Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below): 2.1 and 2.2\n Python version: 3.6\n Bazel version (if compiling from source):\n GCC/Compiler version (if compiling from source):\n CUDA/cuDNN version: 10.1\n GPU model and memory: 1080Ti 11Gb\n \n Describe the current behavior\n As a header states the model build with Subclassing API with ConvLSTM2D layer inside can't be saved as a SavedModel. Given that keras (.h5) model format doesn't support saving subclassed models I am left with no option to save the model architecture to file.\n The issues appears in TF2.2 while there seems to be no bug in earlier version 2.1\n Describe the expected behavior\n The code is to work without issues in both TF2.2 and TF2.1\n Standalone code to reproduce the issue\n Provide a reproducible test case that is the bare minimum necessary to generate\n the problem. If possible, please share a link to Colab/Jupyter/any notebook.\n <denchmark-link:https://colab.research.google.com/drive/1zfhnbz_dHfPloT9mzk0ei5F4aFaZGgnt?usp=sharing>https://colab.research.google.com/drive/1zfhnbz_dHfPloT9mzk0ei5F4aFaZGgnt?usp=sharing</denchmark-link>\n \n Other info / logs Include any logs or source code that would be helpful to\n diagnose the problem. If including tracebacks, please include the full\n traceback. Large logs and files should be attached.\n import numpy as np\n import tensorflow as tf\n print(tf.__version__)\n from tensorflow import keras\n from tensorflow.keras.layers import ConvLSTM2D, Bidirectional, LSTM\n \n class CustomModel(keras.Model):\n   def __init__(self, hidden_units):\n     super(CustomModel, self).__init__()\n     self.lstm = Bidirectional(ConvLSTM2D(filters=16, kernel_size=(1, 1), return_sequences=True, return_state=True))\n     self.dense_layers = [keras.layers.Dense(u) for u in hidden_units]\n \n   def call(self, inputs, training=None, mask=None):\n     x = inputs\n     x, _, _, _, _ = self.lstm(x)\n     for layer in self.dense_layers:\n       x = layer(x)\n     return x\n \n model = CustomModel([16, 16, 10])\n # Build the model by calling it\n input_arr = tf.random.uniform((1, 10, 10, 10, 5))\n outputs=model.predict(input_arr)\n model.save('my_model')\n \n # Delete the custom-defined model class to ensure that the loader does not have\n # access to it.\n del CustomModel\n \n loaded = keras.models.load_model('my_model')\n Similar issue discussed on stackoverflow\n <denchmark-link:https://stackoverflow.com/questions/61362953/keras-convlstm2d-valueerror-when-saving-model>https://stackoverflow.com/questions/61362953/keras-convlstm2d-valueerror-when-saving-model</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "etsygankov", "commentT": "2020-06-10T14:33:40Z", "comment_text": "\n \t\tWas able to reproduce the issue with <denchmark-link:https://colab.research.google.com/gist/amahendrakar/2da837292cbfa01854fa77f2d2791d15/40328.ipynb>TF v2.2</denchmark-link>\n  and <denchmark-link:https://colab.research.google.com/gist/amahendrakar/6dbb8421ea8815a3c1a41110969c7d6a/40328-tf-nightly.ipynb#scrollTo=S8MN8xgvnjdw>TF-nightly</denchmark-link>\n . Works without any issues with <denchmark-link:https://colab.research.google.com/gist/amahendrakar/cb19b976d100df61f01d41e17d2180d0/40328-2-1.ipynb>TF v2.1</denchmark-link>\n . Please find the attached gist. Thanks!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "etsygankov", "commentT": "2020-06-18T17:51:36Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40328>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40328>No</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "etsygankov", "commentT": "2020-07-01T16:04:46Z", "comment_text": "\n \t\tSaving works in TF 2.3.0-rc0, thanks!\n \t\t"}}}, "commit": {"commit_id": "47582983cb1064b5bb81233db4f0adeeaa10b74d", "commit_author": "Scott Zhu", "commitT": "2020-06-18 10:40:41-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\saving\\saved_model\\layer_serialization.py", "file_new_name": "tensorflow\\python\\keras\\saving\\saved_model\\layer_serialization.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "162,163,164,165,166,167,168,169", "deleted_lines": "162,163", "method_info": {"method_name": "_get_serialized_attributes_internal", "method_params": "self,serialization_cache", "method_startline": "158", "method_endline": "170"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\saving\\saved_model\\saved_model_test.py", "file_new_name": "tensorflow\\python\\keras\\saving\\saved_model\\saved_model_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794", "deleted_lines": null, "method_info": {"method_name": "testSaveStatelessConvLSTM2D", "method_params": "self", "method_startline": "776", "method_endline": "794"}}}}}}}