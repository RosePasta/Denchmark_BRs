{"BR": {"BR_id": "34789", "BR_author": "guillaumekln", "BRopenT": "2019-12-03T10:07:02Z", "BRcloseT": "2020-01-08T01:32:55Z", "BR_text": {"BRsummary": "GRUCell is not compatible with its own initial state", "BRdescription": "\n System information\n \n Have I written custom code: Yes\n OS Platform and Distribution: Ubuntu 16.04\n TensorFlow installed from: binary\n TensorFlow version: 2.1.0rc0\n Python version: 3.5.2\n \n Describe the current behavior\n The initial state returned by tf.keras.layers.GRUCell.get_initial_state() can not be passed to the first cell call without error. It raises an InvalidArgumentError error.\n Describe the expected behavior\n RNN cells should accept their own initial states.\n Code to reproduce the issue\n import tensorflow as tf\n batch_size = 4\n cell = tf.keras.layers.GRUCell(20)\n initial_state = cell.get_initial_state(batch_size=batch_size, dtype=tf.float32)\n output, state = cell(tf.random.uniform([batch_size, 10]), initial_state)\n Other info / logs\n <denchmark-code>Traceback (most recent call last):\n   File \"test/gru_incompat.py\", line 5, in <module>\n     output, state = cell(tf.random.uniform([batch_size, 10]), initial_state)\n   File \"/lib/python3.5/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 822, in __call__\n     outputs = self.call(cast_inputs, *args, **kwargs)\n   File \"/lib/python3.5/site-packages/tensorflow_core/python/keras/layers/recurrent.py\", line 1846, in call\n     matrix_inner = K.dot(h_tm1, self.recurrent_kernel)\n   File \"/lib/python3.5/site-packages/tensorflow_core/python/keras/backend.py\", line 1678, in dot\n     out = math_ops.matmul(x, y)\n   File \"/lib/python3.5/site-packages/tensorflow_core/python/util/dispatch.py\", line 180, in wrapper\n     return target(*args, **kwargs)\n   File \"/lib/python3.5/site-packages/tensorflow_core/python/ops/math_ops.py\", line 2797, in matmul\n     a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)\n   File \"/lib/python3.5/site-packages/tensorflow_core/python/ops/gen_math_ops.py\", line 5631, in mat_mul\n     _ops.raise_from_not_ok_status(e, name)\n   File \"/lib/python3.5/site-packages/tensorflow_core/python/framework/ops.py\", line 6598, in raise_from_not_ok_status\n     six.raise_from(core._status_to_exception(e.code, message), None)\n   File \"<string>\", line 3, in raise_from\n tensorflow.python.framework.errors_impl.InvalidArgumentError: In[0] is not a matrix. Instead it has shape [20] [Op:MatMul] name: gru_cell/MatMul/\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "guillaumekln", "commentT": "2019-12-28T11:54:21Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/guillaumekln>@guillaumekln</denchmark-link>\n  hi, I met this error too, and I think here is a bug. I changed two line of codes, everything is ok.\n \n \n \n tensorflow/tensorflow/python/keras/layers/recurrent.py\n \n \n          Line 1773\n       in\n       4235c01\n \n \n \n \n \n \n  h_tm1 = states[0]  # previous memory \n \n \n \n \n \n should be h_tm1 = states  # previous memory\n \n \n \n tensorflow/tensorflow/python/keras/layers/recurrent.py\n \n \n          Line 1871\n       in\n       4235c01\n \n \n \n \n \n \n  return h, [h] \n \n \n \n \n \n should be return h, h\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "guillaumekln", "commentT": "2020-01-06T08:33:17Z", "comment_text": "\n \t\tSorry for the breakage, will fix it very soon.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "guillaumekln", "commentT": "2020-01-08T01:32:57Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34789>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34789>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "48b920246f9f06a645a9b864c39171c5b0c2c4ef", "commit_author": "Scott Zhu", "commitT": "2020-01-07 17:29:46-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\layers\\gru_test.py", "file_new_name": "tensorflow\\python\\keras\\layers\\gru_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "215,216,217,218,219,220,221,222", "deleted_lines": null, "method_info": {"method_name": "test_get_initial_states", "method_params": "self", "method_startline": "215", "method_endline": "222"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\layers\\recurrent.py", "file_new_name": "tensorflow\\python\\keras\\layers\\recurrent.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1326", "deleted_lines": "1326", "method_info": {"method_name": "call", "method_params": "self,inputs,states,training", "method_startline": "1325", "method_endline": "1344"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\layers\\simplernn_test.py", "file_new_name": "tensorflow\\python\\keras\\layers\\simplernn_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "222,223,224,225,226,227,228,229", "deleted_lines": null, "method_info": {"method_name": "test_get_initial_states", "method_params": "self", "method_startline": "222", "method_endline": "229"}}}}}}}