{"BR": {"BR_id": "30685", "BR_author": "mdanatg", "BRopenT": "2019-07-13T18:49:53Z", "BRcloseT": "2019-07-24T17:14:09Z", "BR_text": {"BRsummary": "`TensorArray` objects used as `Dataset.reduce` state lose inferred shapes", "BRdescription": "\n System information\n \n TensorFlow version (use command below): 2.0\n Python version: 3\n \n Describe the current behavior\n TensorArray objects passed as accumulators to Dataset.reduce lose inferred shapes. Subsequent calls to TensorArray.concat returns a fully unknown shape.\n Describe the expected behavior\n The element shape of the TensorArray should be partially known, consistent with the behavior of an equivalent tf.while_loop.\n Code to reproduce the issue\n <denchmark-code>@tf.function\n def compute():\n     arr = tf.TensorArray(tf.float32, 1, dynamic_size=True)\n     def body(i, arr):\n         real_logits = tf.random.normal([5, 1])\n         arr = arr.write(tf.cast(i, tf.int32), real_logits)\n         i += 1\n         return i, arr\n     def cond(i, arr):\n       return i < 10\n     _, arr = tf.while_loop(cond, body, (0, arr))\n \n     c = arr.concat()\n     tf.print('TensortArray.concat() shape:', c.shape, 'rank:', c.shape.rank)\n     return c\n \n @tf.function\n def compute_ds():\n     arr = tf.TensorArray(tf.float32, 1, dynamic_size=True)\n     def body(state, _):\n         i, arr = state\n         real_logits = tf.random.normal([5, 1])\n         arr = arr.write(tf.cast(i, tf.int32), real_logits)\n         i += 1\n         return i, arr\n     en_ds = tf.data.Dataset.range(10).enumerate()\n     _, arr = en_ds.reduce((0, arr), body)\n \n     c = arr.concat()\n     tf.print('TensortArray.concat() shape:', c.shape, 'rank:', c.shape.rank)\n     return c\n \n print('*** With tf.while_loop')\n _ = compute()\n print()\n print('*** With tf.Dataset.reduce')\n _ = compute_ds()\n </denchmark-code>\n \n <denchmark-code>*** With tf.while_loop\n TensortArray.concat() shape: TensorShape([None, 1]) rank: 2\n \n *** With tf.Dataset.reduce\n TensortArray.concat() shape: TensorShape(None) rank: None\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mdanatg", "commentT": "2019-07-13T18:56:26Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jsimsa>@jsimsa</denchmark-link>\n  could you triage the issue?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "mdanatg", "commentT": "2019-07-22T17:40:44Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/aaudiber>@aaudiber</denchmark-link>\n  could you please take a look?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "mdanatg", "commentT": "2019-07-23T16:45:47Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mdanatg>@mdanatg</denchmark-link>\n  Thank you for reporting this and for including simple repro instructions!\n The issue is with how we use TensorArraySpec to convert the TensorArray to/from Tensor components across the reduce boundary. As you noticed, it loses the shape information. I have a CL out to fix it, and will update once it is merged\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "mdanatg", "commentT": "2019-07-24T17:14:09Z", "comment_text": "\n \t\tNow that <denchmark-link:https://github.com/tensorflow/tensorflow/commit/6cd69820a7ec68363647bf918d312b5d10e0e07a>6cd6982</denchmark-link>\n  has merged, inferred  shapes will be preserved across all tf.data operations.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "mdanatg", "commentT": "2019-07-24T17:14:11Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=30685>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=30685>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "6cd69820a7ec68363647bf918d312b5d10e0e07a", "commit_author": "Andrew Audibert", "commitT": "2019-07-23 15:56:58-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\data\\util\\structure_test.py", "file_new_name": "tensorflow\\python\\data\\util\\structure_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "384,385,386,387,388,389,390,391", "deleted_lines": null, "method_info": {"method_name": "testPreserveInferredTensorArrayShape", "method_params": "self", "method_startline": "384", "method_endline": "391"}}, "hunk_1": {"Ismethod": 1, "added_lines": "376,377,378,379,380,381,382", "deleted_lines": null, "method_info": {"method_name": "testPreserveTensorArrayShape", "method_params": "self", "method_startline": "376", "method_endline": "382"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\ops\\tensor_array_ops.py", "file_new_name": "tensorflow\\python\\ops\\tensor_array_ops.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1321", "deleted_lines": "1321", "method_info": {"method_name": "_from_components", "method_params": "self,tensor_list", "method_startline": "1313", "method_endline": "1322"}}}}}}}