{"BR": {"BR_id": "4861", "BR_author": "claytantor", "BRopenT": "2016-10-09T18:36:02Z", "BRcloseT": "2016-10-14T02:06:13Z", "BR_text": {"BRsummary": "Example mnist_rnn Not Working with Docker Image", "BRdescription": "\n <denchmark-h:h1>Issue: Example mnist_rnn does run on docker image.</denchmark-h>\n \n <denchmark-code>---------------------------------------------------------------------------\n ImportError                               Traceback (most recent call last)\n <ipython-input-6-3bb5b939d552> in <module>()\n       3 from __future__ import print_function\n       4 \n ----> 5 from sklearn import metrics, preprocessing\n       6 \n       7 import tensorflow as tf\n \n ImportError: No module named sklearn\n \n </denchmark-code>\n \n <denchmark-h:h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</denchmark-h>\n \n An example in the code base does not work with the docker image. It is the opinion of the filer that all examples should run without any need for configuration on the docker image because the project has control over what is installed on the docker image.\n <denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/skflow/mnist_rnn.py>https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/skflow/mnist_rnn.py</denchmark-link>\n \n <denchmark-h:h3>Environment info</denchmark-h>\n \n Operating System:\n docker run -it -p 8888:8888 gcr.io/tensorflow/tensorflow\n \n Installed version of CUDA and cuDNN:\n \n NONE, CPU based container\n If installed from binary pip package, provide:\n \n The output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n \n <denchmark-code># python -c \"import tensorflow; print(tensorflow.__version__)\"\n 0.11.0rc0\n </denchmark-code>\n \n \n If installed from source, provide\n \n Not installed from source\n \n If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n \n Example given at beginning of ticket.\n \n What other attempted solutions have you tried?\n \n Removed all references to sklearn. Application works.\n <denchmark-code># It's useful to scale to ensure Stochastic Gradient Descent will do the right thing\n #scaler = preprocessing.StandardScaler()\n #X_train = scaler.fit_transform(X_train)\n #X_test = scaler.fit_transform(X_test)\n </denchmark-code>\n \n \n Logs or other output that would be helpful\n \n No logs produced.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "claytantor", "commentT": "2016-10-13T21:33:57Z", "comment_text": "\n \t\tTry running sudo apt-get install python-sklearn inside the Docker container.\n Thank you for reporting this issue. I'm writing up a change to the Dockerfile now so others don't run into this same problem. It'll be exported to GitHub in a matter of days. This bug will be closed when that happens.\n \t\t"}}}, "commit": {"commit_id": "7c79d528f43c69b6719da0c7846cd3aa56df57ef", "commit_author": "Justine Tunney", "commitT": "2016-10-13 15:06:33-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\tools\\docker\\Dockerfile", "file_new_name": "tensorflow\\tools\\docker\\Dockerfile", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "32", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\tools\\docker\\Dockerfile.devel", "file_new_name": "tensorflow\\tools\\docker\\Dockerfile.devel", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "33,34", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\tools\\docker\\Dockerfile.gpu", "file_new_name": "tensorflow\\tools\\docker\\Dockerfile.gpu", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "32", "deleted_lines": null}}}}}}