{"BR": {"BR_id": "33425", "BR_author": "racinmat", "BRopenT": "2019-10-16T12:25:29Z", "BRcloseT": "2020-03-13T22:19:12Z", "BR_text": {"BRsummary": "Tensorflow eager execution not working with tf.math.unsorted_segment_max, Gradient output is null", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, Professional Edition\n Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\n TensorFlow installed from (source or binary): binary, installed using conda\n TensorFlow version (use command below): unknown, 1.14.0\n Python version: 3.7.3\n CUDA/cuDNN version: 10.0, 7.6\n GPU model and memory: T1000, 4GB VRAM\n \n Describe the current behavior\n When using tf.math.unsorted_segment_max with Tensorflow eager execution and Gradient Tape, the source code (see below) produces following error:\n <denchmark-code>Traceback (most recent call last):\n   File \"C:/Projects/iotmap/py/segmented_max_error.py\", line 80, in <module>\n     grads = tape.gradient(loss_value, model.trainable_weights)\n   File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\backprop.py\", line 980, in gradient\n     unconnected_gradients=unconnected_gradients)\n   File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\imperative_grad.py\", line 76, in imperative_grad\n     compat.as_str(unconnected_gradients.value))\n   File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\backprop.py\", line 137, in _gradient_function\n     return grad_fn(mock_op, *out_grads)\n   File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\math_grad.py\", line 349, in _UnsortedSegmentMaxGrad\n     return _UnsortedSegmentMinOrMaxGrad(op, grad)\n   File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\math_grad.py\", line 326, in _UnsortedSegmentMinOrMaxGrad\n     _GatherDropNegatives(op.outputs[0], op.inputs[1])\n TypeError: 'NoneType' object is not subscriptable\n </denchmark-code>\n \n Operations tf.math.segment_max, tf.math.segment_mean and tf.math.unsorted_segment_mean are working ok, though.\n I need the unsorted version because in more complex code bases, I a using several segmented aggregations and concatenating them, so I need to have fixed sizes.\n Describe the expected behavior\n It should work without throwing error.\n \n The code is here:\n <denchmark-link:https://gist.github.com/racinmat/9a95cac7db36d5f0b6b33e9c35678ca2>https://gist.github.com/racinmat/9a95cac7db36d5f0b6b33e9c35678ca2</denchmark-link>\n \n Other info / logs\n Exception thrown is mentioned above.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "racinmat", "commentT": "2019-10-17T07:01:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/racinmat>@racinmat</denchmark-link>\n \n I tried reproducing the issue with TF 1.14 on colab. However i am seeing the different error.Please, find the gist <denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/2f6897da2b30cbaba0bdd43ec9a84aa3/untitled279.ipynb>here</denchmark-link>\n . Thanks!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "racinmat", "commentT": "2019-10-17T09:53:57Z", "comment_text": "\n \t\tYes, my bad, it is fixed now in the gist and produces the abovementioned error.\n Here is the google colab notebook with fixed code: <denchmark-link:https://colab.research.google.com/gist/racinmat/057bb526253484884f3f484f62cb1f0a/untitled279.ipynb>https://colab.research.google.com/gist/racinmat/057bb526253484884f3f484f62cb1f0a/untitled279.ipynb</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "racinmat", "commentT": "2019-10-18T10:36:56Z", "comment_text": "\n \t\tI have tried on colab with TF 1.14,1.15.0-rc3 and was able to reproduce the issue\n Please, find the gist <denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/c69ad2af68dbb3ff0747b0d4ed0e7df4/untitled279.ipynb#scrollTo=YVFBL130Y2w7>here</denchmark-link>\n . Thanks!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "racinmat", "commentT": "2019-10-20T08:09:50Z", "comment_text": "\n \t\tJust a small question, should this still have the awaiting response label?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "racinmat", "commentT": "2019-10-29T02:35:06Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33425>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33425>No</denchmark-link>\n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "racinmat", "commentT": "2019-10-29T09:17:25Z", "comment_text": "\n \t\tI see the issue is fixed in master, will there be a 1.X version with the fix released sometimes?\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "racinmat", "commentT": "2020-02-24T19:15:23Z", "comment_text": "\n \t\tI'm seeing this same problem in TensorFlow 2.1.  My model uses tf.math.unsorted_segment_max().  When I call tape.gradient() in eager mode I get the error\n <denchmark-code>  File \"/Users/peastman/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/eager/backprop.py\", line 1014, in gradient\n     unconnected_gradients=unconnected_gradients)\n   File \"/Users/peastman/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/eager/imperative_grad.py\", line 76, in imperative_grad\n     compat.as_str(unconnected_gradients.value))\n   File \"/Users/peastman/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/eager/backprop.py\", line 138, in _gradient_function\n     return grad_fn(mock_op, *out_grads)\n   File \"/Users/peastman/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/math_grad.py\", line 455, in _UnsortedSegmentMaxGrad\n     return _UnsortedSegmentMinOrMaxGrad(op, grad)\n   File \"/Users/peastman/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/math_grad.py\", line 432, in _UnsortedSegmentMinOrMaxGrad\n     _GatherDropNegatives(op.outputs[0], op.inputs[1])\n TypeError: 'NoneType' object is not subscriptable\n </denchmark-code>\n \n Which versions is this supposed to be fixed in?\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "racinmat", "commentT": "2020-03-04T12:48:24Z", "comment_text": "\n \t\tThe issue is still not resolved in v1.15.2, <denchmark-link:https://github.com/ravikyram>@ravikyram</denchmark-link>\n   why has it been closed? The bug is still there.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "racinmat", "commentT": "2020-03-04T17:40:04Z", "comment_text": "\n \t\tAlso, in TensorFlow 2.1 it appears this is no longer restricted to eager mode.  Even if I wrap the calculation in tf.function it still fails.  Can someone reopen this so it will get fixed?\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "racinmat", "commentT": "2020-03-13T22:19:12Z", "comment_text": "\n \t\tActually I cannot reproduce this against nightly TF, so I think it has been fixed since. Sorry for the noise.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "racinmat", "commentT": "2020-03-13T22:19:14Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33425>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33425>No</denchmark-link>\n \n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "racinmat", "commentT": "2020-05-10T08:58:42Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ravikyram>@ravikyram</denchmark-link>\n  This problem still happened in tensorflow-gpu==2.0.0. But, it's ok in tensorflow-gpu==2.1.0.\n \t\t"}}}, "commit": {"commit_id": "cb9319253d81374e6c9b0dc27c28fe8f5ba2ebb1", "commit_author": "Akshay Modi", "commitT": "2019-10-28 19:34:08-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\eager\\pywrap_tfe_src.cc", "file_new_name": "tensorflow\\python\\eager\\pywrap_tfe_src.cc", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "2892"}}}}}}