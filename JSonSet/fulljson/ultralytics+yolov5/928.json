{"BR": {"BR_id": "928", "BR_author": "hmoravec", "BRopenT": "2020-09-08T08:02:27Z", "BRcloseT": "2020-10-11T10:36:05Z", "BR_text": {"BRsummary": "Incorrect extraction of label files paths", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n In <denchmark-link:https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data#2-create-labels>Train Custom Data tutorial</denchmark-link>\n  there is written:\n \n Each image's label file should be locatable by simply replacing /images/*.jpg with /labels/*.txt in its pathname.\n \n However <denchmark-link:https://github.com/ultralytics/yolov5/blob/master/utils/datasets.py#L365>the implementation</denchmark-link>\n  replaces all  substrings in the path with . Se e.g. label file path for image path  is extracted as  instead of  .\n However better and more flexible solution would be, if it was possible to pass the path to the label files as argument. Then it would be possible to have e.g. the label files in the same folder as images which is a common scenario (this is in fact possible now if the paths do not have any images substring).\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "hmoravec", "commentT": "2020-09-08T08:03:09Z", "comment_text": "\n \t\tHello <denchmark-link:https://github.com/hmoravec>@hmoravec</denchmark-link>\n , thank you for your interest in our work! Please visit our <denchmark-link:https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data>Custom Training Tutorial</denchmark-link>\n  to get started, and see our <denchmark-link:https://github.com/ultralytics/yolov5/blob/master/tutorial.ipynb>Jupyter Notebook</denchmark-link>\n  <denchmark-link:https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb></denchmark-link>\n , <denchmark-link:https://hub.docker.com/r/ultralytics/yolov5>Docker Image</denchmark-link>\n , and <denchmark-link:https://github.com/ultralytics/yolov5/wiki/GCP-Quickstart>Google Cloud Quickstart Guide</denchmark-link>\n  for example environments.\n If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.\n If this is a custom model or data training question, please note Ultralytics does not provide free personal support. As a leader in vision ML and AI, we do offer professional consulting, from simple expert advice up to delivery of fully customized, end-to-end production solutions for our clients, such as:\n \n Cloud-based AI systems operating on hundreds of HD video streams in realtime.\n Edge AI integrated into custom iOS and Android apps for realtime 30 FPS video inference.\n Custom data training, hyperparameter evolution, and model exportation to any destination.\n \n For more information please visit <denchmark-link:https://www.ultralytics.com>https://www.ultralytics.com</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "hmoravec", "commentT": "2020-09-08T23:46:48Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hmoravec>@hmoravec</denchmark-link>\n  thanks, good point! We've seen in the past that unfortunately the more arguments required, the more problems arise, and the more issues/bug reports that are raised from confused users. So requiring additional arguments for dataset setup ultimately leads to a worse UX in our observations.\n You can actually run the tutorial without downloading any dataset, by simply cloning the repo and running python train.py. This will autodownload everything you need in the correct format and in the right places, which you can use as an example for how to set up your own custom data.\n In your example above, I see that we can probably increase the robustness of the current method by prepending or appending directory separators to the string replacements, i.e. str.replace(os.sep + 'images' + os.sep, os.sep + 'labels' + os.sep). This might partially address this issue.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "hmoravec", "commentT": "2020-09-08T23:49:53Z", "comment_text": "\n \t\tTODO: update images to labels string replacement to include os separators and possibly only replace last occurrences in paths.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "hmoravec", "commentT": "2020-09-09T00:02:10Z", "comment_text": "\n \t\tPossible update.\n <denchmark-link:https://user-images.githubusercontent.com/26833433/92538965-fe5c5680-f1f4-11ea-953b-839f1862fd36.png></denchmark-link>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "hmoravec", "commentT": "2020-09-09T09:14:11Z", "comment_text": "\n \t\tI think the proposed fix will still not work on the example I posted above: if there are /images/ substrings on two places in the path, it will replace both.\n Regarding the UX: if the user has already the training dataset prepared from training of other models like Yolo 3 and the label files are stored e.g. in the same folder as images, it is far easier to change the path argument than to restructure the dataset. Fortunately, with the current implementation it is at least possible to load the labels from the same folder as images if the path does not include /images/ substring.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "hmoravec", "commentT": "2020-09-09T18:47:32Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hmoravec>@hmoravec</denchmark-link>\n  ah yes, that's a good trick!\n I see the replace function can accept an optional 3rd argument, which replaces on the first n instances of a substring. If we set this to 1, this would only replace the first instance of /images/. This is the extent of the built-in replace() functionality without complicating the code additionally with a custom solution.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "hmoravec", "commentT": "2020-09-09T22:39:28Z", "comment_text": "\n \t\tThat would replace the first instance which also would not work as expected. There should be replaced the last instance of /images/, e.g. like this:\n <denchmark-code>labels_substring = f\"{os.sep}labels{os.sep}\"\n images_substring = f\"{os.sep}images{os.sep}\"\n labels_substring.join(image_file_path.rsplit(images_substring, 1))\n </denchmark-code>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "hmoravec", "commentT": "2020-09-10T19:30:38Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hmoravec>@hmoravec</denchmark-link>\n  nice solution! I've implemented this fix in <denchmark-link:https://github.com/ultralytics/yolov5/commit/720645d96a487f427bd430e5a5ddf49d10ab3128>720645d</denchmark-link>\n \n Now the default behavior is to only replace the last instance of /images/ with /labels/. This should increase robustness and help future users avoid problems. Thank you for your contributions.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "hmoravec", "commentT": "2020-10-11T00:46:34Z", "comment_text": "\n \t\tThis issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n \t\t"}}}, "commit": {"commit_id": "720645d96a487f427bd430e5a5ddf49d10ab3128", "commit_author": "Glenn Jocher", "commitT": "2020-09-10 12:29:05-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "utils\\datasets.py", "file_new_name": "utils\\datasets.py", "file_complexity": {"file_NLOC": "657", "file_CCN": "138", "file_NToken": "7542"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "366,367", "deleted_lines": "366,367"}}}}}}