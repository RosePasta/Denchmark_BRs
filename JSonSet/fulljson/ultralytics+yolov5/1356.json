{"BR": {"BR_id": "1356", "BR_author": "yasindagasan", "BRopenT": "2020-11-12T01:42:03Z", "BRcloseT": "2020-11-12T11:55:52Z", "BR_text": {"BRsummary": "Error: You must call wandb.init() before wandb.log()", "BRdescription": "\n hyperparameter tuning gave an error about wandb logging. I think the wandb has not been initialised for parameter tuning but it was attempted to be used for logging images. Here are the details:\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n Input:\n <denchmark-code>python train.py \n --data data/9_folders.yaml \n --cfg models/yolov5x.yaml \n --weights '' \n --batch-size 10 \n --rect \n --epochs 2 \n --img-size 1280 \n --evolve\n </denchmark-code>\n \n Output:\n <denchmark-code>Traceback (most recent call last):\n   File \"train.py\", line 555, in <module>\n     results = train(hyp.copy(), opt, device)\n   File \"train.py\", line 326, in train\n     log_imgs=opt.log_imgs)\n   File \"/home/dagasan/Documents/yolov5_source/test.py\", line 214, in test\n     wandb.log({\"outputs\": wandb_images})\n   File \"/home/dagasany/anaconda3/envs/pytorch/lib/python3.7/site-packages/wandb/sdk/lib/preinit.py\", line 37, in preinit_wrapper\n     raise wandb.Error(\"You must call wandb.init() before {}()\".format(name))\n wandb.errors.error.Error: You must call wandb.init() before wandb.log()\n Internal process exited\n \n </denchmark-code>\n \n <denchmark-h:h2>Issue:</denchmark-h>\n \n this part seemed to cause the issue\n <denchmark-link:https://user-images.githubusercontent.com/20746470/98883018-b18d4880-24e1-11eb-8423-8d05e053f384.png></denchmark-link>\n \n <denchmark-h:h2>My workaround</denchmark-h>\n \n changes in test.py\n <denchmark-link:https://user-images.githubusercontent.com/20746470/98883057-d1247100-24e1-11eb-8fb2-2f4467ca1776.png></denchmark-link>\n \n <denchmark-link:https://user-images.githubusercontent.com/20746470/98883869-01b8da80-24e3-11eb-97ed-6ec8ddf5d204.png></denchmark-link>\n \n changes in train.py\n <denchmark-link:https://user-images.githubusercontent.com/20746470/98883969-3b89e100-24e3-11eb-8ea2-7db3ba92b818.png></denchmark-link>\n \n <denchmark-h:h2>Environment</denchmark-h>\n \n \n OS: Ubuntu 20.04\n GPU: 2080 Ti\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "yasindagasan", "commentT": "2020-11-12T07:03:09Z", "comment_text": "\n \t\tThe wandb does not support -- evolve mode.\n I had the same problem. If it is your first time to use wandb, I think you can try train mode first, then you will not have this issue in the evolve mode.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "yasindagasan", "commentT": "2020-11-12T07:06:33Z", "comment_text": "\n \t\tOr just run wandb login on the command line\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "yasindagasan", "commentT": "2020-11-12T09:54:01Z", "comment_text": "\n \t\t\n The wandb does not support -- evolve mode.\n I had the same problem. If it is your first time to use wandb, I think you can try train mode first, then you will not have this issue in the evolve mode.\n \n <denchmark-link:https://github.com/Uoops>@Uoops</denchmark-link>\n  I was actually logged on wandb. I could see my trainings on wandb until I tried to use the evolve mode. So it was not my first time to use wandb and it was all set up. I did not want to specifiially use wandb with evolve but it just gave an error\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "yasindagasan", "commentT": "2020-11-12T10:36:35Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yasindagasan>@yasindagasan</denchmark-link>\n  <denchmark-link:https://github.com/AyushExel>@AyushExel</denchmark-link>\n  thanks for raising this bug report!\n wandb is a new integration so there may be a few issues still with it. I recently started an evolution myself, but ran pip uninstall wandb first just to keep things simple, and can confirm that evolution operates correctly and without issue with that workflow. But we definitely also want evolution to behave nicely with an installed wandb package, logged in or not. I'll look into this.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:13:29Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n  I think I know what's happening here but my branch is currently polluted with this PR <denchmark-link:https://github.com/ultralytics/yolov5/pull/1350>#1350</denchmark-link>\n  .\n A simple fix would be to pass  argument when using evolve mode. Currently it doesn't initialize  in evovlve mode but  is set to 10 as  get imported successfully. So, test.py tries to log images but  is not initialized\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:22:51Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/AyushExel>@AyushExel</denchmark-link>\n  hmm ok, thanks I'll check it out.\n How does wandb off and wandb on relate to os.environ.set('WANDB_DISABLED')?\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:26:25Z", "comment_text": "\n \t\t\n @yasindagasan @AyushExel thanks for raising this bug report!\n wandb is a new integration so there may be a few issues still with it. I recently started an evolution myself, but ran pip uninstall wandb first just to keep things simple, and can confirm that evolution operates correctly and without issue with that workflow. But we definitely also want evolution to behave nicely with an installed wandb package, logged in or not. I'll look into this.\n \n <denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n  thanks very much!\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:30:07Z", "comment_text": "\n \t\t\n @AyushExel hmm ok, thanks I'll check it out.\n How does wandb off and wandb on relate to os.environ.set('WANDB_DISABLED')?\n \n <denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n   Wandb off is meant to turn off cloud syncing. It's a dry run mode where your metrics won't be logged to cloud. They can be later synced to the cloud by calling .\n  is meant to not use wandb at all!\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:33:29Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/AyushExel>@AyushExel</denchmark-link>\n  hmm ok. Is there an equivalent command to setting this variable, like , ?\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:38:18Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n  No, currently there's no command like that. You might want to checkout this thread for similar discussion.\n <denchmark-link:https://github.com/wandb/client/issues/764>wandb silent</denchmark-link>\n \n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:51:18Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/AyushExel>@AyushExel</denchmark-link>\n  ok thanks, added my 2 cents over there. I think PR <denchmark-link:https://github.com/ultralytics/yolov5/pull/1373>#1373</denchmark-link>\n  should fix this. It still import wandb in test.py, but since there's no logging other than images there, passing in zero images for logging should suffice.\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "yasindagasan", "commentT": "2020-11-12T11:58:12Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yasindagasan>@yasindagasan</denchmark-link>\n  this should be fixed now in <denchmark-link:https://github.com/ultralytics/yolov5/pull/1373>#1373</denchmark-link>\n . Please  to receive this update and let us know if you run into any other problems!\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "yasindagasan", "commentT": "2020-11-13T12:22:14Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/glenn-jocher>@glenn-jocher</denchmark-link>\n  works all good. thanks!\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "yasindagasan", "commentT": "2020-11-13T12:33:04Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yasindagasan>@yasindagasan</denchmark-link>\n  great, I'm glad it works now!\n \t\t"}}}, "commit": {"commit_id": "ce3872f86c2fc90698e84aed66091a5b5cb8952b", "commit_author": "Glenn Jocher", "commitT": "2020-11-12 12:55:52+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "train.py", "file_new_name": "train.py", "file_complexity": {"file_NLOC": "416", "file_CCN": "90", "file_NToken": "4750"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "326", "deleted_lines": "326", "method_info": {"method_name": "train", "method_params": "hyp,opt,device,tb_writer,wandb", "method_startline": "37", "method_endline": "386", "method_complexity": {"method_NLOC": "247", "method_CCN": "90", "method_NToken": "2798", "method_nesting_level": "0"}}}}}}}}