{"BR": {"BR_id": "488", "BR_author": "1132719438", "BRopenT": "2018-09-03T02:38:06Z", "BRcloseT": "2018-10-22T06:56:12Z", "BR_text": {"BRsummary": "Extract with dlib-cnn doesn't work on macOS", "BRdescription": "\n Note: Please only report bugs in this repository. Just because you are getting an error message does not automatically mean you have discovered a bug. If you don't have a lot of experience with this type of project, or if you need for setup help and other issues in using the faceswap tool, please refer to the faceswap-playground instead. The faceswap-playground is also an excellent place to ask questions and submit feedback.\n <denchmark-h:h2>Expected behavior</denchmark-h>\n \n Describe, in some detail, what you are trying to do and what the output is that you expect from the program.\n <denchmark-h:h2>Actual behavior</denchmark-h>\n \n Describe, in some detail, what the program does instead. Be sure to include any error message or screenshots.\n <denchmark-h:h2>Steps to reproduce</denchmark-h>\n \n Describe, in some detail, the steps you tried that resulted in the behavior described above.\n <denchmark-h:h2>Other relevant information</denchmark-h>\n \n \n Command lined used (if not specified in steps to reproduce): faceswap.py ...\n Operating system and version: Windows, macOS, Linux\n Python version: 2.7, 3.5, 3.6.4, ...\n Faceswap version: commit hash or version number\n Faceswap method: CPU/GPU\n Other related issues: #123, #124...\n ... (for example, installed packages that you can see with pip freeze)\n \n Extract with dnn-lib on mac OS X 10.13.5 failed:\n <denchmark-code>Failed to extract from image: NoneType is not iterable\n </denchmark-code>\n \n GPU: NVIDIA GTX 1080, 8GB\n CUDA: 9.1\n Python: 3.6.5\n Reason is NVML library is not supported on macOS, so GPUStats.initialize() in <denchmark-link:https://github.com/deepfakes/faceswap/blob/master/lib/gpu_stats.py>gpu_stats.py</denchmark-link>\n  fail with pynvml.NVMLError_LibraryNotFound, self.handles = None, get_free() gets Exception: \"NoneType is not iterable\" when extracting with dlib-cnn, no face will be dectected.\n Can we work around it?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "1132719438", "commentT": "2018-09-03T10:36:09Z", "comment_text": "\n \t\tNVML is kind of integral to extract. It may be that we may have to add some kind of manual config for macOS, but unfortunately it's not a priority right now. I will look into it when I have a chance (or someone else can raise a PR).\n In the meantime you can rollback to the last pre-nvml build (<denchmark-link:https://github.com/deepfakes/faceswap/tree/f90cd92ec36a0860c58a75631f762069419149de>https://github.com/deepfakes/faceswap/tree/f90cd92ec36a0860c58a75631f762069419149de</denchmark-link>\n )\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "1132719438", "commentT": "2018-10-22T06:56:10Z", "comment_text": "\n \t\timplemented in <denchmark-link:https://github.com/deepfakes/faceswap/pull/510>#510</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "1ce5214e594716c313e3b4ff9839d73e749aa570", "commit_author": "1132719438", "commitT": "2018-10-01 11:38:59+01:00", "commit_complexity": {"commit_NLOC": "0.5405405405405406", "commit_CCN": "0.5945945945945946", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 9, "file_old_name": "lib\\gpu_stats.py", "file_new_name": "lib\\gpu_stats.py", "file_complexity": {"file_NLOC": "117", "file_CCN": "37", "file_NToken": "694"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "76,77,78,79,80", "deleted_lines": "74,78,79", "method_info": {"method_name": "get_handles", "method_params": "self", "method_startline": "74", "method_endline": "80", "method_complexity": {"method_NLOC": "6", "method_CCN": "3", "method_NToken": "44", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "60,61", "deleted_lines": "58,59", "method_info": {"method_name": "shutdown", "method_params": "self", "method_startline": "56", "method_endline": "62", "method_complexity": {"method_NLOC": "6", "method_CCN": "3", "method_NToken": "30", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "135,136,137,138,139,140", "deleted_lines": null, "method_info": {"method_name": "get_free", "method_params": "self", "method_startline": "132", "method_endline": "142", "method_complexity": {"method_NLOC": "10", "method_CCN": "4", "method_NToken": "73", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "95,96,97,98,99,100,101,102,103", "deleted_lines": "97,98", "method_info": {"method_name": "get_devices", "method_params": "self", "method_startline": "94", "method_endline": "103", "method_complexity": {"method_NLOC": "9", "method_CCN": "4", "method_NToken": "59", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "119,120,121,122,123,124", "deleted_lines": null, "method_info": {"method_name": "get_used", "method_params": "self", "method_startline": "116", "method_endline": "130", "method_complexity": {"method_NLOC": "12", "method_CCN": "5", "method_NToken": "87", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "85,86,87,88,89,90,91", "deleted_lines": "85,86", "method_info": {"method_name": "get_driver", "method_params": "", "method_startline": "83", "method_endline": "92", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "44", "method_nesting_level": "1"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "107,108,109,110,111,112,113", "deleted_lines": null, "method_info": {"method_name": "get_vram", "method_params": "self", "method_startline": "105", "method_endline": "114", "method_complexity": {"method_NLOC": "9", "method_CCN": "4", "method_NToken": "68", "method_nesting_level": "1"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "40,41,42,43,44,45,46,47,48,49,50,51", "deleted_lines": "37,46,51,52,53,54", "method_info": {"method_name": "initialize", "method_params": "self", "method_startline": "37", "method_endline": "54", "method_complexity": {"method_NLOC": "17", "method_CCN": "5", "method_NToken": "66", "method_nesting_level": "1"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "66,67,68,69,70,71,72", "deleted_lines": "64,65,66,67,71,72", "method_info": {"method_name": "get_device_count", "method_params": "self", "method_startline": "64", "method_endline": "72", "method_complexity": {"method_NLOC": "8", "method_CCN": "3", "method_NToken": "44", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "setup.py", "file_new_name": "setup.py", "file_complexity": {"file_NLOC": "357", "file_CCN": "89", "file_NToken": "1437"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "187,188,189", "deleted_lines": null, "method_info": {"method_name": "Check_Missing_Dep", "method_params": "", "method_startline": "186", "method_endline": "200", "method_complexity": {"method_NLOC": "15", "method_CCN": "7", "method_NToken": "96", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tools\\cli.py", "file_new_name": "tools\\cli.py", "file_complexity": {"file_NLOC": "448", "file_CCN": "7", "file_NToken": "1598"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "23", "deleted_lines": null, "method_info": {"method_name": "get_argument_list", "method_params": "self", "method_startline": "12", "method_endline": "145", "method_complexity": {"method_NLOC": "133", "method_CCN": "1", "method_NToken": "435", "method_nesting_level": "1"}}}}}}}}