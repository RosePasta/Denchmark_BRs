{"BR": {"BR_id": "296", "BR_author": "NHZlX", "BRopenT": "2019-12-25T05:24:05Z", "BRcloseT": "2020-01-25T23:45:37Z", "BR_text": {"BRsummary": "There might be memory leak in instanceNormalizationPlugin", "BRdescription": "\n There are two places that can cause leaks\n First, every enqueue calls cudamalloc without releasing\n \n \n \n TensorRT/plugin/instanceNormalizationPlugin/instanceNormalizationPlugin.cpp\n \n \n          Line 211\n       in\n       572d54f\n \n \n \n \n \n \n  CHECK_CUDA(cudaMalloc((void**) &_d_bias, n * nchan_bytes)); \n \n \n \n \n \n Second,  cudnn_handle will also be created every time\n \n \n \n TensorRT/plugin/instanceNormalizationPlugin/instanceNormalizationPlugin.cpp\n \n \n          Line 217\n       in\n       572d54f\n \n \n \n \n \n \n  CHECK_CUDNN(cudnnCreate(&_cudnn_handle)); \n \n \n \n \n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "NHZlX", "commentT": "2019-12-29T14:44:54Z", "comment_text": "\n \t\tMay be related: <denchmark-link:https://devtalk.nvidia.com/default/topic/1068998/memory-leak-in-tensorrt-instancenormalization/?offset=2>https://devtalk.nvidia.com/default/topic/1068998/memory-leak-in-tensorrt-instancenormalization/?offset=2</denchmark-link>\n \n CC <denchmark-link:https://github.com/rajeevsrao>@rajeevsrao</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "NHZlX", "commentT": "2020-01-06T11:18:49Z", "comment_text": "\n \t\tNot sure if this is the same, but I have observed a memory leak in OnnxRuntime using TensorRT as can be seen <denchmark-link:https://github.com/microsoft/onnxruntime/issues/2773>microsoft/onnxruntime#2773</denchmark-link>\n \n Although this model uses BatchNormalization and not InstanceNormalization.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "NHZlX", "commentT": "2020-01-25T23:45:37Z", "comment_text": "\n \t\tFixed per <denchmark-link:https://github.com/NVIDIA/TensorRT/pull/315>#315</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "713475808dd6a9dbcca82b8be33cb4d001dce072", "commit_author": "Rajeev Rao", "commitT": "2020-01-06 10:59:55-08:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "None", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "plugin\\instanceNormalizationPlugin\\instanceNormalizationPlugin.cpp", "file_new_name": "plugin\\instanceNormalizationPlugin\\instanceNormalizationPlugin.cpp", "file_complexity": {"file_NLOC": "313", "file_CCN": "59", "file_NToken": "2236"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "236,237", "deleted_lines": "217,218,219,220", "method_info": {"method_name": "InstanceNormalizationPlugin::enqueue", "method_params": "inputDesc,outputDesc,inputs,outputs,workspace,stream", "method_startline": "199", "method_endline": "239", "method_complexity": {"method_NLOC": "33", "method_CCN": "2", "method_NToken": "376", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "176", "deleted_lines": "185,186", "method_info": {"method_name": "InstanceNormalizationPlugin::terminate", "method_params": "", "method_startline": "176", "method_endline": "189", "method_complexity": {"method_NLOC": "14", "method_CCN": "2", "method_NToken": "50", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "173,174,175,176", "deleted_lines": null, "method_info": {"method_name": "InstanceNormalizationPlugin::initialize", "method_params": "", "method_startline": "170", "method_endline": "178", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "50", "method_nesting_level": "0"}}}}}}}}