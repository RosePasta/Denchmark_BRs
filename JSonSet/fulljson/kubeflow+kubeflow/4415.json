{"BR": {"BR_id": "4415", "BR_author": "krishnadurai", "BRopenT": "2019-10-25T22:46:01Z", "BRcloseT": "2019-11-04T14:46:59Z", "BR_text": {"BRsummary": "CentralDashboard's welcome screen profile setup is broken - in non-identity aware cluster", "BRdescription": "\n /kind bug\n What steps did you take and what happened:\n \n Deployed kubeflow on a fresh Kubernetes cluster with kfctl_k8s_istio.0.7.0.yaml - with no default profile\n Accessed Web UI, this prompts to setup an initial profile\n After entering the profile name and clicking finish, the web UI doesn't transition to the dashboard\n Instead the UI remains unchanged and doesn't transition to the dashboard\n A second attempt at pressing the finish button leads to the state in the  image shown below\n \n <denchmark-link:https://user-images.githubusercontent.com/6263389/67605821-1d98f380-f79d-11e9-97a7-8acf84e16257.png></denchmark-link>\n \n Anything else you would like to add:\n Central Dashboard is giving flaky behaviour with new deployments.\n Environment:\n \n Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard):\n kfctl version: (use kfctl version): kfctl v0.7.0-rc.5-7-gc66ebff3 (v0.7.0-rc.6)\n Kubernetes platform: (e.g. minikube) GKE\n Kubernetes version: (use kubectl version):\n \n <denchmark-code>Client Version: version.Info{Major:\"1\", Minor:\"14\", GitVersion:\"v1.14.2\", GitCommit:\"66049e3b21efe110454d67df4fa62b08ea79a19b\", GitTreeState:\"clean\", BuildDate:\"2019-05-16T18:55:03Z\", GoVersion:\"go1.12.5\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\n Server Version: version.Info{Major:\"1\", Minor:\"13+\", GitVersion:\"v1.13.10-gke.0\", GitCommit:\"569511c9540f78a94cc6a41d895c382d0946c11a\", GitTreeState:\"clean\", BuildDate:\"2019-08-21T23:28:44Z\", GoVersion:\"go1.11.13b4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n </denchmark-code>\n \n \n OS (e.g. from /etc/os-release): MacOS\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "krishnadurai", "commentT": "2019-10-25T22:46:13Z", "comment_text": "\n \t\tIssue Label Bot is not confident enough to auto-label this issue.\n See <denchmark-link:https://mlbot.net/data/kubeflow/kubeflow>dashboard</denchmark-link>\n  for more details.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "krishnadurai", "commentT": "2019-10-28T12:21:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n  which image are you using for central dashboard\n If the profile krishna-1 exists are you able to access the central dashboard?\n /assign <denchmark-link:https://github.com/avdaredevil>@avdaredevil</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "krishnadurai", "commentT": "2019-10-28T12:23:50Z", "comment_text": "\n \t\tWe have the same problem. We use image gcr.io/kubeflow-images-public/centraldashboard:v20190823-v0.6.0-rc.0-69-gcb7dab59.\n The profile is created, and if you just refresh the page you get directed to the dashboard. So everything \"works\", it's just the last missing redirect.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "krishnadurai", "commentT": "2019-10-28T12:37:38Z", "comment_text": "\n \t\tThat is an old image.\n There is an updated image for 0.7 that attempts to fix these issues.\n gcr.io/kubeflow-images-public/centraldashboard:sha256:bcf462b61b7f39e1479c4ac6dd0eb5a1b2504f2d2e18e325c6e8404a28f09a60\n That was published recently.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "krishnadurai", "commentT": "2019-10-28T12:38:39Z", "comment_text": "\n \t\tOkay, we are still on Kubeflow 0.6.2, waiting for a release of 0.7 (not a RC).\n Don't know what <denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n  is on.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "krishnadurai", "commentT": "2019-10-28T14:47:01Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jlewi>@jlewi</denchmark-link>\n  this is the image:\n gcr.io/kubeflow-images-public/centraldashboard@sha256:bcf462b61b7f39e1479c4ac6dd0eb5a1b2504f2d2e18e325c6e8404a28f09a60\n Looks like its the latest image.\n Confirmed the behaviour again in a new cluster.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "krishnadurai", "commentT": "2019-10-29T17:30:04Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n  and others; if you are hitting this issue please look at the developer tools -> network tab (or equivalent in firefox).\n What request(s) are getting sent by the JS client? What are the responses?\n In developer console you should be able to download this as a HAR file and upload it.  (Not sure if that strips out sensitive headers or not so you might want to check).\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "krishnadurai", "commentT": "2019-10-29T20:44:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n  - I deployed the v0.7.0-rc.6 candidate to GCP which has the same centraldashboard image that you mention.\n <denchmark-link:https://user-images.githubusercontent.com/6835846/67807230-c92a9800-fa6a-11e9-986d-f406fed22468.png></denchmark-link>\n \n Your network requests should look similar to those above, which show a create POST, followed by 1 or more exists GETs until one of them includes \"hasWorkgroup\": true.\n I retried the creation flow from the UI repeatedly but could not reproduce the behavior. Can you try to do so by deleting your profile resource (kubectl delete profiles <profile name>), and then reloading the UI which should trigger the flow again?\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "krishnadurai", "commentT": "2019-10-29T20:59:32Z", "comment_text": "\n \t\tHello <denchmark-link:https://github.com/prodonjs>@prodonjs</denchmark-link>\n ,\n What I can see from the network tab is the '/api/workgroup/exists' API returning with 304 and the JS code goes on retrying the request repeatedly. hasWorkgroup is false until the last request.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "krishnadurai", "commentT": "2019-10-29T21:01:05Z", "comment_text": "\n \t\tHere's the HAR file from my Firefox browser.\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Wed, Oct 30, 2019 at 2:14 AM Jason Prodonovich ***@***.***> wrote:\n  @krishnadurai <https://github.com/krishnadurai> - I deployed the\n  v0.7.0-rc.6 candidate to GCP which has the same centraldashboard image that\n  you mention.\n \n  [image: Screenshot 2019-10-29 at 4 38 33 PM]\n  <https://user-images.githubusercontent.com/6835846/67807230-c92a9800-fa6a-11e9-986d-f406fed22468.png>\n \n  Your network requests should look similar to those above, which show a\n  create POST, followed by 1 or more exists GETs until one of them includes \"hasWorkgroup\":\n  true.\n \n  I retried the creation flow from the UI repeatedly but could not reproduce\n  the behavior. Can you try to do so by deleting your profile resource (kubectl\n  delete profiles <profile name>), and then reloading the UI which should\n  trigger the flow again?\n \n  \u2014\n  You are receiving this because you were mentioned.\n  Reply to this email directly, view it on GitHub\n  <#4415?email_source=notifications&email_token=ABPZEXLIEUTKSK5F3EOTSNLQRCOCLA5CNFSM4JFKEQ7KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECSAQ2I#issuecomment-547620969>,\n  or unsubscribe\n  <https://github.com/notifications/unsubscribe-auth/ABPZEXPVJMLEQJUNEJK4I23QRCOCLANCNFSM4JFKEQ7A>\n  .\n \n \n \n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "krishnadurai", "commentT": "2019-10-29T21:03:43Z", "comment_text": "\n \t\tLink to the HAR document:\n <denchmark-link:https://drive.google.com/file/d/0B1DnPeJ2dI2uT3dUMTM1QVB5UUlrSHJPSllRXy1QZFNKNHZr/view?usp=sharing>https://drive.google.com/file/d/0B1DnPeJ2dI2uT3dUMTM1QVB5UUlrSHJPSllRXy1QZFNKNHZr/view?usp=sharing</denchmark-link>\n \n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "krishnadurai", "commentT": "2019-10-29T21:12:14Z", "comment_text": "\n \t\tA workaround to those who are facing this issue: Just refesh the page. It should take you to the dashboard.\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "krishnadurai", "commentT": "2019-10-29T21:30:10Z", "comment_text": "\n \t\tThanks for the information <denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n . I looked into things more closely and what's peculiar is that your requests to  seem to indicate that your cluster does not have identity awareness based on request headers sent to the centraldashboard server (the responses all show ).\n Thus, as the logic <denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/app/api_workgroup.ts#L258>here</denchmark-link>\n  indicate,s if the incoming request cannot be associated with a user's identity, the response will always indicate that their is no workgroup for the user, thereby putting you in the awkward state you see.\n <denchmark-link:https://github.com/avdaredevil>@avdaredevil</denchmark-link>\n  - This looks like a scenario where the cluster is non-identity aware, but there is no default namespace created for the user. I'm not sure if this is a change between versions, but it looks like our current logic may need to be modified.\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "krishnadurai", "commentT": "2019-10-29T21:45:19Z", "comment_text": "\n \t\tYup you're right <denchmark-link:https://github.com/prodonjs>@prodonjs</denchmark-link>\n . I can make a follow up PR to resolve this.\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "krishnadurai", "commentT": "2019-10-29T21:46:07Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/prodonjs>@prodonjs</denchmark-link>\n  <denchmark-link:https://github.com/avdaredevil>@avdaredevil</denchmark-link>\n \n Here's some additional information:\n Originally, in v0.6.0 release, kfctl used to create a default profile:  and with v0.7.0, it's optional. The default for this release is to have no profile created by default.\n \t\t"}, "comments_15": {"comment_id": 16, "comment_author": "krishnadurai", "commentT": "2019-10-29T21:58:34Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n  <denchmark-link:https://github.com/Kyrremann>@Kyrremann</denchmark-link>\n  Is this a cluster that is not identity aware?\n \n \n Is there an Auth server that is attaching JWT's to the request at the gateway?\n \n \n I'm guessing no if you are using kfctl_k8s_istio.0.7.0.yaml\n \n \n In which case this should be a non-identity aware cluster. Which matches hasAuth: False\n \n \n \n \n In the case where we don't know a user's identity my expectation is that AuthN should be disabled\n \n \n All users should see all Kubeflow namespaces whenever they access the central dashboard\n \n \n It doesn't look like this is happening\n \n \n It looks like the FE is hardCoding hasWorkgroup to False\n \n \n Should it instead be sending the request to KFam and should KFam be returning the suitable workGroup?\n \n \n I'm a little confused why refreshing would help? On refresh wouldn't we just end up get stuck again in the auto-registration flow because we don't have auth?\n \n \n \n \n \t\t"}, "comments_16": {"comment_id": 17, "comment_author": "krishnadurai", "commentT": "2019-10-30T00:53:04Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/kubeflow/kubeflow/issues/4015>#4015</denchmark-link>\n  is tracking E2E tests for central dashboard and self-registration flow.\n \t\t"}, "comments_17": {"comment_id": 18, "comment_author": "krishnadurai", "commentT": "2019-10-30T00:55:11Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n  Do we have an issue tracking an E2E test for kfctl_k8s_istio?\n \t\t"}, "comments_18": {"comment_id": 19, "comment_author": "krishnadurai", "commentT": "2019-10-30T09:43:15Z", "comment_text": "\n \t\t\n @krishnadurai @Kyrremann Is this a cluster that is not identity aware?\n \n The cluster is not identity-aware.\n \n * Is there an Auth server that is attaching JWT's to the request at the gateway?\n   * I'm guessing no if you are using kfctl_k8s_istio.0.7.0.yaml\n   * In which case this should be a non-identity aware cluster. Which matches `hasAuth: False`\n \n \n No, there's no auth server attaching the JWT to the request. You are right about the rest of the points.\n \n   * I'm a little confused why refreshing would help? On refresh wouldn't we just end up get stuck again in the auto-registration flow because we don't have auth?\n \n \n The check for the welcome screen for profiles right now seems to be configured based on whether there is a profile available or not. So when we refresh, the check fails in this scenario as the user has already created a profile.\n \t\t"}, "comments_19": {"comment_id": 20, "comment_author": "krishnadurai", "commentT": "2019-10-30T09:46:19Z", "comment_text": "\n \t\tNot sure what you mean by identity aware, it's multiuser. We are also using an old image as it turns out (see comment further up).\n What I do noticed is that if I remove all my cookies before going trough the process it works. This may also because I'm creating the same profile (and namespace), so maybe there is something stored in Kubeflow somewhere.\n \t\t"}, "comments_20": {"comment_id": 21, "comment_author": "krishnadurai", "commentT": "2019-10-30T09:53:27Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Kyrremann>@Kyrremann</denchmark-link>\n  Can you share your HAR file as described above? That will help us see if the JWT is embedded in the request header or not in your case.\n The root cause of this issue is documented here: <denchmark-link:https://github.com/kubeflow/kubeflow/issues/4415#issuecomment-547638105>#4415 (comment)</denchmark-link>\n \n And could you please check if this problem persists with 0.6.2 Kubeflow release?\n \t\t"}, "comments_21": {"comment_id": 22, "comment_author": "krishnadurai", "commentT": "2019-10-30T10:03:49Z", "comment_text": "\n \t\t\n @krishnadurai Do we have an issue tracking an E2E test for kfctl_k8s_istio?\n \n <denchmark-link:https://github.com/jlewi>@jlewi</denchmark-link>\n  This issue <denchmark-link:https://github.com/kubeflow/kubeflow/issues/3496>#3496</denchmark-link>\n  was made to track kfctl_k8s_istio.\n \t\t"}, "comments_22": {"comment_id": 23, "comment_author": "krishnadurai", "commentT": "2019-10-30T10:09:43Z", "comment_text": "\n \t\tI'll create a HAR file.\n I'm using Build: v0.6.2 | Dashboard: v0.0.2-cb7dab | Isolation-Mode: multi-user, and container image is gcr.io/kubeflow-images-public/centraldashboard:v20190823-v0.6.0-rc.0-69-gcb7dab59.\n I can also manually upgrade the container image if desired.\n \t\t"}, "comments_23": {"comment_id": 24, "comment_author": "krishnadurai", "commentT": "2019-10-30T10:36:49Z", "comment_text": "\n \t\tMy HAR-file <denchmark-link:https://drive.google.com/file/d/1DDMCYisX5vnpWVAVVNHcY7ozd1IWEMox/view?usp=sharing>https://drive.google.com/file/d/1DDMCYisX5vnpWVAVVNHcY7ozd1IWEMox/view?usp=sharing</denchmark-link>\n \n Also, tried two times, and it now worked both times. Which is strange. Several of my users has reported this problem.\n \t\t"}, "comments_24": {"comment_id": 25, "comment_author": "krishnadurai", "commentT": "2019-10-30T12:00:02Z", "comment_text": "\n \t\tI built a new image\n gcr.io/kubeflow-images-public/centraldashboard:list-8-gf5250b01\n sha256:4299297b8390599854aa8f77e9eb717db684b32ca9a94a0ab0e73f3f73e5d8b5\n We need to get this onto master and then cherrypicked onto 0.7.\n <denchmark-link:https://github.com/Kyrremann>@Kyrremann</denchmark-link>\n  identity aware means that you have configured your Kubeflow deployment with an identity provider that is performing AuthN for requests and attaching a JWT containing the user's identity so Kubeflow knows who issued the request. Have you configured AuthN for Kubeflow?\n \t\t"}, "comments_25": {"comment_id": 26, "comment_author": "krishnadurai", "commentT": "2019-10-30T23:46:08Z", "comment_text": "\n \t\tCherry pick <denchmark-link:https://github.com/kubeflow/manifests/pull/590>kubeflow/manifests#590</denchmark-link>\n  has been merged.\n So the fix should be in the v0.7-branch and we just need to wait for verification.\n \t\t"}, "comments_26": {"comment_id": 27, "comment_author": "krishnadurai", "commentT": "2019-11-04T10:50:56Z", "comment_text": "\n \t\t\n Cherry pick #590 has been merged.\n So the fix should be in the v0.7-branch and we just need to wait for verification.\n \n <denchmark-link:https://github.com/kubeflow/kubeflow/pull/590>#590</denchmark-link>\n  seems to point to kubeflow repo itself instead of kubeflow/manifests <denchmark-link:https://github.com/kubeflow/manifests/pull/589>#589</denchmark-link>\n \n \t\t"}, "comments_27": {"comment_id": 28, "comment_author": "krishnadurai", "commentT": "2019-11-04T14:39:26Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/krishnadurai>@krishnadurai</denchmark-link>\n  Are you able to verify this is fixed no so that we can close out this issue?\n \t\t"}, "comments_28": {"comment_id": 29, "comment_author": "krishnadurai", "commentT": "2019-11-04T14:46:59Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jlewi>@jlewi</denchmark-link>\n  this is fixed\n /close\n \t\t"}}}, "commit": {"commit_id": "f5250b017f126c63cca4c38114860f63b71c66d1", "commit_author": "Apoorv Verma [AP]", "commitT": "2019-10-29 22:26:52-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "components\\centraldashboard\\app\\api_workgroup.ts", "file_new_name": "components\\centraldashboard\\app\\api_workgroup.ts", "file_complexity": {"file_NLOC": "323", "file_CCN": "13", "file_NToken": "1101"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "264,265,266", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "components\\centraldashboard\\app\\api_workgroup_test.ts", "file_new_name": "components\\centraldashboard\\app\\api_workgroup_test.ts", "file_complexity": {"file_NLOC": "434", "file_CCN": "33", "file_NToken": "2763"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "219,220,221,222,223,224,225,231", "deleted_lines": "224", "method_info": {"method_name": "(anonymous)", "method_params": "", "method_startline": "218", "method_endline": "232", "method_complexity": {"method_NLOC": "14", "method_CCN": "1", "method_NToken": "96", "method_nesting_level": "0"}}}}}}}}