{"BR": {"BR_id": "248", "BR_author": "yanndupis", "BRopenT": "2018-10-17T19:41:00Z", "BRcloseT": "2019-01-08T17:16:28Z", "BR_text": {"BRsummary": "Bug in network B and C", "BRdescription": "\n <denchmark-link:https://github.com/mortendahl/tf-encrypted/blob/master/examples/securenn/network_a.py>Network A</denchmark-link>\n  works perfectly fine since we are using the exact  with  and improved the tfe api. However we still get a very bad accuracy for <denchmark-link:https://github.com/mortendahl/tf-encrypted/blob/master/examples/securenn/network_b.py>network b</denchmark-link>\n  and <denchmark-link:https://github.com/mortendahl/tf-encrypted/blob/master/examples/securenn/network_c.py>c</denchmark-link>\n . We are aware that we have a bug with the exact  that needs to be fixed. However, not sure it's the cause of the bad accuracy. When I used the  file approach for network c last week, I was getting a good accuracy on the mnist set.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "yanndupis", "commentT": "2018-10-17T19:59:12Z", "comment_text": "\n \t\tDoes this block anything we need for the launch <denchmark-link:https://github.com/yanndupis>@yanndupis</denchmark-link>\n  ?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "yanndupis", "commentT": "2018-10-17T20:10:00Z", "comment_text": "\n \t\tI don't think it does. As an example we will show network a. Thanks.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "yanndupis", "commentT": "2018-10-29T16:31:29Z", "comment_text": "\n \t\tDid we track down the bug?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "yanndupis", "commentT": "2018-10-29T17:58:14Z", "comment_text": "\n \t\tThe bug hasn't been tracked. Let's come back to it once securenn + int64 + exact relu is completed.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "yanndupis", "commentT": "2018-12-03T16:09:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yanndupis>@yanndupis</denchmark-link>\n  can this be closed?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "yanndupis", "commentT": "2018-12-06T15:52:57Z", "comment_text": "\n \t\tcc <denchmark-link:https://github.com/yanndupis>@yanndupis</denchmark-link>\n  ^\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "yanndupis", "commentT": "2018-12-10T08:46:03Z", "comment_text": "\n \t\tI will check this week if with the securenn protocol completed now it's working.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "yanndupis", "commentT": "2018-12-18T09:48:59Z", "comment_text": "\n \t\tany updates <denchmark-link:https://github.com/yanndupis>@yanndupis</denchmark-link>\n ?\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "yanndupis", "commentT": "2019-01-07T17:16:42Z", "comment_text": "\n \t\tWe found the bugs in for this issue. There were missing relus, and we were using channel last during training for the convolution and pooling layers however we were using channel first for secure inference. Once the PR <denchmark-link:https://github.com/tf-encrypted/tf-encrypted/pull/375>#375</denchmark-link>\n  is merged we can close this issue.\n \t\t"}}}, "commit": {"commit_id": "88d52baaf56b3c0c10eb74292e7d503176a00148", "commit_author": "Yann Dupis", "commitT": "2019-01-08 09:21:08-05:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "examples\\securenn\\network_a.py", "file_new_name": "examples\\securenn\\network_a.py", "file_complexity": {"file_NLOC": "111", "file_CCN": "11", "file_NToken": "1204"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "45", "deleted_lines": "45,46", "method_info": {"method_name": "cond.true_fn", "method_params": "", "method_startline": "44", "method_endline": "46", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "100,101", "deleted_lines": "101", "method_info": {"method_name": "build_training_graph", "method_params": "self,training_data", "method_startline": "53", "method_endline": "103", "method_complexity": {"method_NLOC": "20", "method_CCN": "2", "method_NToken": "290", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "45", "deleted_lines": "45,46", "method_info": {"method_name": "cond", "method_params": "self,Tensor,Tensor,Tensor,Tensor", "method_startline": "40", "method_endline": "51", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "76", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "examples\\securenn\\network_b.py", "file_new_name": "examples\\securenn\\network_b.py", "file_complexity": {"file_NLOC": "160", "file_CCN": "15", "file_NToken": "1690"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "133", "deleted_lines": "133", "method_info": {"method_name": "build_training_graph", "method_params": "self,training_data", "method_startline": "81", "method_endline": "135", "method_complexity": {"method_NLOC": "22", "method_CCN": "2", "method_NToken": "246", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "73", "deleted_lines": "73", "method_info": {"method_name": "cond", "method_params": "self,Tensor,Tensor,Tensor,Tensor", "method_startline": "68", "method_endline": "79", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "76", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "73", "deleted_lines": "73", "method_info": {"method_name": "cond.true_fn", "method_params": "", "method_startline": "72", "method_endline": "74", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "2"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "157", "deleted_lines": "157", "method_info": {"method_name": "provide_input", "method_params": "self", "method_startline": "152", "method_endline": "160", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "85", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "examples\\securenn\\network_c.py", "file_new_name": "examples\\securenn\\network_c.py", "file_complexity": {"file_NLOC": "160", "file_CCN": "15", "file_NToken": "1680"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "97,98,99,116,134", "deleted_lines": "98,99,100,101,102,119,120", "method_info": {"method_name": "build_training_graph", "method_params": "self,training_data", "method_startline": "82", "method_endline": "136", "method_complexity": {"method_NLOC": "22", "method_CCN": "2", "method_NToken": "246", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "116", "deleted_lines": "119,120", "method_info": {"method_name": "build_training_graph.loop_body", "method_params": "Tensor,Tensor,Tensor,Tensor", "method_startline": "105", "method_endline": "129", "method_complexity": {"method_NLOC": "14", "method_CCN": "1", "method_NToken": "237", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "74", "deleted_lines": "75", "method_info": {"method_name": "cond", "method_params": "self,Tensor,Tensor,Tensor,Tensor", "method_startline": "69", "method_endline": "80", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "76", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "74", "deleted_lines": "75", "method_info": {"method_name": "cond.true_fn", "method_params": "", "method_startline": "73", "method_endline": "75", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "2"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "157", "deleted_lines": null, "method_info": {"method_name": "provide_input", "method_params": "self", "method_startline": "152", "method_endline": "160", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "85", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tf_encrypted\\layers\\convolution.py", "file_new_name": "tf_encrypted\\layers\\convolution.py", "file_complexity": {"file_NLOC": "95", "file_CCN": "16", "file_NToken": "766"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "71,72,73,74,75,76,77", "deleted_lines": "69", "method_info": {"method_name": "initialize", "method_params": "self,initial_weights", "method_startline": "67", "method_endline": "78", "method_complexity": {"method_NLOC": "10", "method_CCN": "4", "method_NToken": "89", "method_nesting_level": "1"}}}}}}}}