{"BR": {"BR_id": "526", "BR_author": "mortendahl", "BRopenT": "2019-06-03T13:31:20Z", "BRcloseT": "2019-06-06T13:11:50Z", "BR_text": {"BRsummary": "'base_layer_utils' has no attribute 'unique_layer_name'", "BRdescription": "\n AttributeError: module 'tensorflow.python.keras.engine.base_layer_utils' has no attribute 'unique_layer_name'.\n Happened on TF 1.14.0rc0.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mortendahl", "commentT": "2019-06-03T13:41:17Z", "comment_text": "\n \t\tThis is happening because the function in question (which is used in our keras engine) isn't covered by the TF stability guarantees. They moved the function in question to the tf.keras backend and renamed it to : <denchmark-link:https://github.com/tensorflow/tensorflow/blob/f5ce1c00d4397875ff3d706881bd46430f4a9667/tensorflow/python/keras/backend.py#L810>https://github.com/tensorflow/tensorflow/blob/f5ce1c00d4397875ff3d706881bd46430f4a9667/tensorflow/python/keras/backend.py#L810</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "mortendahl", "commentT": "2019-06-03T13:42:50Z", "comment_text": "\n \t\tAny ideas for work-arounds <denchmark-link:https://github.com/jvmancuso>@jvmancuso</denchmark-link>\n ?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "mortendahl", "commentT": "2019-06-03T13:51:14Z", "comment_text": "\n \t\t(1) use the user's TF version to selectively import\n (2) reproduce the function in TFE to remove the dependency\n this function should be pretty easy to reproduce if we'd prefer (2), but this is a general question we should have a default for.\n it would also be great to be notified whenever a new release candidate has been cut on TF (ideally in advance, so that we can run tests on it before the release has happened).\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "mortendahl", "commentT": "2019-06-03T13:54:52Z", "comment_text": "\n \t\tLet's not do (1) :)\n Re TF RC warning, maybe we simply need to limit the supported version of TF (tensorflow<=1.13 etc)\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "mortendahl", "commentT": "2019-06-04T08:56:54Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jvmancuso>@jvmancuso</denchmark-link>\n  and <denchmark-link:https://github.com/yanndupis>@yanndupis</denchmark-link>\n  could you come up with a longer term solution?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "mortendahl", "commentT": "2019-06-05T23:29:30Z", "comment_text": "\n \t\tWent with (2) above in <denchmark-link:https://github.com/tf-encrypted/tf-encrypted/pull/545>#545</denchmark-link>\n . I suppose limiting <1.14 would work since we plan to move to TF 2.0, but since we don't yet know when those changes will land it's probably best to support the most recent versions if it's low enough effort.\n \t\t"}}}, "commit": {"commit_id": "ce0b75ac311377a67fb744ce7e196132a38ec0f7", "commit_author": "Morten Dahl", "commitT": "2019-06-03 17:54:34+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "setup.py", "file_new_name": "setup.py", "file_complexity": {"file_NLOC": "38", "file_CCN": "0", "file_NToken": "123"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "17,18,19", "deleted_lines": "17,18,19"}}}}}}