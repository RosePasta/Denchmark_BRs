{"BR": {"BR_id": "3865", "BR_author": "Nilanshrajput", "BRopenT": "2020-07-17T14:32:40Z", "BRcloseT": "2020-08-20T20:14:33Z", "BR_text": {"BRsummary": "Serde Can not serialize 'DynamicFLClient' object", "BRdescription": "\n Cannot share tensor from reference pointer\n ** This issue is critical for SyferText, since it breaks functionality when working with Grid nodes **\n <denchmark-h:h2>How to Reproduce</denchmark-h>\n \n Nodes Creation :\n python -m gridnode --id=bob  --host=localhost --port 3001\n python -m gridnode --id=alice  --host=localhost --port 3002\n python -m gridnode --id=bill  --host=localhost --port 3003\n <denchmark-code>bob = DynamicFLClient(hook, \"ws://localhost:3001/\")\n alice = DynamicFLClient(hook, \"ws://localhost:3002\")\n bill = DynamicFLClient(hook, \"ws://localhost:3003\")\n my_grid = sy.PrivateGridNetwork(bob,alice, bill)\n t = th.Tensor([4,6]).send(alice)\n t_shared = t.fix_prec().share(bob, alice, crypto_provider=bill)\n t_shared.get()\n </denchmark-code>\n \n <denchmark-h:h2>Expected Behavior</denchmark-h>\n \n A clear and concise description of what you expected to happen.\n <denchmark-h:h2>Error</denchmark-h>\n \n <denchmark-code>---------------------------------------------------------------------------\n TypeError                                 Traceback (most recent call last)\n <ipython-input-4-4e56dcdd7ee1> in <module>\n       4 my_grid = sy.PrivateGridNetwork(bob,alice, bill)\n       5 t = th.Tensor([4,6]).send(alice)\n ----> 6 t_shared = t.fix_prec().share(bob, alice, crypto_provider=bill )\n       7 t_shared.get()\n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/frameworks/torch/tensors/interpreters/native.py in share(self, protocol, field, dtype, crypto_provider, requires_grad, no_wrap, *owners)\n     916                 {\"requires_grad\": requires_grad} if isinstance(chain, syft.PointerTensor) else {}\n     917             )\n --> 918             shared_tensor = chain.share(\n     919                 *owners,\n     920                 protocol=protocol,\n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/generic/pointers/pointer_tensor.py in share(self, *args, **kwargs)\n     380             raise RuntimeError(\"Error, share must have > 1 arguments all of type syft.workers\")\n     381 \n --> 382         response = self.owner.send_command(self.location, \"share\", self, args, kwargs)\n     383         return response\n     384 \n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/workers/base.py in send_command(self, recipient, cmd_name, target, args_, kwargs_, return_ids, return_value)\n     486                 cmd_name, target, args_, kwargs_, return_ids, return_value\n     487             )\n --> 488             ret_val = self.send_msg(message, location=recipient)\n     489         except ResponseSignatureError as e:\n     490             ret_val = None\n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/workers/base.py in send_msg(self, message, location)\n     304 \n     305         # Step 1: serialize the message to a binary\n --> 306         bin_message = sy.serde.serialize(message, worker=self)\n     307 \n     308         # Step 2: send the message and wait for a response\n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/serde/serde.py in serialize(obj, worker, simplified, force_full_simplification, strategy)\n      43         strategy = serialize\n      44 \n ---> 45     return strategy(obj, worker, simplified, force_full_simplification)\n      46 \n      47 \n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/serde/msgpack/serde.py in serialize(obj, worker, simplified, force_full_simplification)\n     335 \n     336     simple_objects = _serialize_msgpack_simple(obj, worker, simplified, force_full_simplification)\n --> 337     return _serialize_msgpack_binary(simple_objects)\n     338 \n     339 \n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/syft/serde/msgpack/serde.py in _serialize_msgpack_binary(simple_objects, worker, simplified, force_full_simplification)\n     289     # 2) Serialize\n     290     # serialize into a binary\n --> 291     binary = msgpack_lib.dumps(simple_objects)\n     292 \n     293     # 3) Compress\n ~/anaconda3/envs/pysyft/lib/python3.8/site-packages/msgpack/__init__.py in packb(o, **kwargs)\n      33     See :class:`Packer` for options.\n      34     \"\"\"\n ---> 35     return Packer(**kwargs).pack(o)\n      36 \n      37 \n msgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\n msgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\n TypeError: can not serialize 'DynamicFLClient' object\n </denchmark-code>\n \n <denchmark-h:h2>System Information</denchmark-h>\n \n \n OS: Ubuntu\n Language Version: Python 3.7\n Pysyft Latest master branch\n \n <denchmark-h:h2>Additional Context</denchmark-h>\n \n Add any other context about the problem here.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Nilanshrajput", "commentT": "2020-07-17T17:57:57Z", "comment_text": "\n \t\tShould we open this issue in PySyft <denchmark-link:https://github.com/AlanAboudib>@AlanAboudib</denchmark-link>\n  <denchmark-link:https://github.com/Nilanshrajput>@Nilanshrajput</denchmark-link>\n  ?\n  is defined in PySyft, here  \n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Nilanshrajput", "commentT": "2020-07-17T18:20:11Z", "comment_text": "\n \t\tDone <denchmark-link:https://github.com/sachin-101>@sachin-101</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Nilanshrajput", "commentT": "2020-07-20T12:57:19Z", "comment_text": "\n \t\tCC: <denchmark-link:https://github.com/IonesioJunior>@IonesioJunior</denchmark-link>\n  - thoughts on this? Could use your help since it's in the syft.grid package.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Nilanshrajput", "commentT": "2020-07-23T09:30:08Z", "comment_text": "\n \t\tIt seems like <denchmark-link:https://github.com/OpenMined/PySyft/pull/3857>#3857</denchmark-link>\n  is for a similar issue. cc <denchmark-link:https://github.com/IonesioJunior>@IonesioJunior</denchmark-link>\n  <denchmark-link:https://github.com/AlanAboudib>@AlanAboudib</denchmark-link>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Nilanshrajput", "commentT": "2020-07-27T01:38:45Z", "comment_text": "\n \t\tSorry for the delay! It looks like a problem that we <denchmark-link:https://github.com/OpenMined/PyGridNode/pull/7>solved </denchmark-link>\n  before. But both PySyft and PyGrid have gone through several refactoring since then, probably something has changed during the process. I will check it when I get some time.\n \t\t"}}}, "commit": {"commit_id": "1448a5b0226a817281d6242dcd28fac2319bdf78", "commit_author": "Nilansh Rajput", "commitT": "2020-08-20 21:14:32+01:00", "commit_complexity": {"commit_NLOC": "0.3191489361702128", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "syft\\grid\\clients\\data_centric_fl_client.py", "file_new_name": "syft\\grid\\clients\\data_centric_fl_client.py", "file_complexity": {"file_NLOC": "250", "file_CCN": "28", "file_NToken": "1303"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "275", "method_info": {"method_name": "delete_model", "method_params": "self,str", "method_startline": "273", "method_endline": "283", "method_complexity": {"method_NLOC": "11", "method_CCN": "1", "method_NToken": "42", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357", "deleted_lines": null, "method_info": {"method_name": "get_msgpack_code", "method_params": "", "method_startline": "330", "method_endline": "357", "method_complexity": {"method_NLOC": "23", "method_CCN": "2", "method_NToken": "74", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327", "deleted_lines": null, "method_info": {"method_name": "detail", "method_params": "AbstractWorker,tuple", "method_startline": "302", "method_endline": "327", "method_complexity": {"method_NLOC": "18", "method_CCN": "2", "method_NToken": "146", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "288,289,290,291,292,293,294,295,296,297,298,299", "deleted_lines": null, "method_info": {"method_name": "simplify", "method_params": "AbstractWorker", "method_startline": "288", "method_endline": "299", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "99", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": null, "deleted_lines": "254", "method_info": {"method_name": "run_remote_inference", "method_params": "self,model_id,data", "method_startline": "252", "method_endline": "271", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "68", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "syft\\grid\\clients\\model_centric_fl_client.py", "file_new_name": "syft\\grid\\clients\\model_centric_fl_client.py", "file_complexity": {"file_NLOC": "147", "file_CCN": "28", "file_NToken": "889"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192", "deleted_lines": null, "method_info": {"method_name": "get_msgpack_code", "method_params": "", "method_startline": "165", "method_endline": "192", "method_complexity": {"method_NLOC": "23", "method_CCN": "2", "method_NToken": "74", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "151,152,153,154,155,156,157,158,159,160,161,162", "deleted_lines": null, "method_info": {"method_name": "detail", "method_params": "AbstractWorker,tuple", "method_startline": "151", "method_endline": "162", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "56", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "141,142,143,144,145,146,147,148", "deleted_lines": null, "method_info": {"method_name": "simplify", "method_params": "AbstractWorker", "method_startline": "141", "method_endline": "148", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "51", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "syft\\serde\\msgpack\\serde.py", "file_new_name": "syft\\serde\\msgpack\\serde.py", "file_complexity": {"file_NLOC": "360", "file_CCN": "52", "file_NToken": "1577"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "523,524,525,526,527,528,529,530,531,532", "deleted_lines": null, "method_info": {"method_name": "msgpack_code_generator", "method_params": "str", "method_startline": "523", "method_endline": "532", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "37", "method_nesting_level": "0"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\serde\\msgpack\\test_msgpack_serde_full.py", "file_new_name": "test\\serde\\msgpack\\test_msgpack_serde_full.py", "file_complexity": {"file_NLOC": "142", "file_CCN": "13", "file_NToken": "1243"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "107,108,109,110", "deleted_lines": null, "method_info": {"method_name": "test_serde_coverage", "method_params": "", "method_startline": "104", "method_endline": "112", "method_complexity": {"method_NLOC": "6", "method_CCN": "3", "method_NToken": "46", "method_nesting_level": "0"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "test\\serde\\serde_helpers.py", "file_new_name": "test\\serde\\serde_helpers.py", "file_complexity": {"file_NLOC": "1850", "file_CCN": "158", "file_NToken": "12684"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421", "deleted_lines": null}}}}}}