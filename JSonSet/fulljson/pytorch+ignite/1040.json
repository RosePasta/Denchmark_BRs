{"BR": {"BR_id": "1040", "BR_author": "BlackHC", "BRopenT": "2020-05-15T11:57:04Z", "BRcloseT": "2020-05-16T16:54:46Z", "BR_text": {"BRsummary": "gpu_info crashes because it cannot parse \"N/A\"", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug description</denchmark-h>\n \n When trying to use gpu_info, it throws:\n <denchmark-code> File \"/home/blackhc/anaconda3/envs/hello-mnist/lib/python3.7/site-packages/ignite/contrib/metrics/gpu_info.py\", line 91, in completed\n     engine.state.metrics[util_name] = int(util_report['gpu_util'])\n ValueError: invalid literal for int() with base 10: 'N/A'\n </denchmark-code>\n \n There is error handling code above it, but it does not catch the issue (\"N/A\" is returned).\n I assume my GPU does not support it. However, it would be neat to have a graceful failure mode.\n Thank you!\n Andreas\n <denchmark-h:h2>Environment</denchmark-h>\n \n torch 1.5 on a GTX 780 TI (source)\n ignite 0.3.0 (conda)\n pynvml 8.0.4 (pip)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "BlackHC", "commentT": "2020-05-15T12:00:00Z", "comment_text": "\n \t\tHi Andreas, thanks for catching that !\n Maybe, we can cast it to -1 or 0 if no support of gpu_util.\n Actually, what shows nvidia-smi on your GPU ?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "BlackHC", "commentT": "2020-05-16T17:58:26Z", "comment_text": "\n \t\tThank you! And sorry for the reply! nvidia-smi also displays N/A\n \t\t"}}}, "commit": {"commit_id": "de302965ad9f9d7014f0d2241f029db3a09324a9", "commit_author": "vfdev", "commitT": "2020-05-16 18:54:45+02:00", "commit_complexity": {"commit_NLOC": "0.4", "commit_CCN": "0.7", "commit_Nprams": "0.7"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "ignite\\contrib\\metrics\\gpu_info.py", "file_new_name": "ignite\\contrib\\metrics\\gpu_info.py", "file_complexity": {"file_NLOC": "87", "file_CCN": "19", "file_NToken": "385"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "97,100,101,102,103,104", "deleted_lines": "93,96,97", "method_info": {"method_name": "completed", "method_params": "self,engine,name", "method_startline": "67", "method_endline": "104", "method_complexity": {"method_NLOC": "33", "method_CCN": "10", "method_NToken": "211", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "tests\\ignite\\contrib\\metrics\\test_gpu_info.py", "file_new_name": "tests\\ignite\\contrib\\metrics\\test_gpu_info.py", "file_complexity": {"file_NLOC": "113", "file_CCN": "18", "file_NToken": "979"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "73,74,75,76,77,78", "deleted_lines": "69,74,75", "method_info": {"method_name": "_test_gpu_info", "method_params": "device", "method_startline": "42", "method_endline": "78", "method_complexity": {"method_NLOC": "27", "method_CCN": "3", "method_NToken": "290", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "104", "deleted_lines": null, "method_info": {"method_name": "mock_pynvml_module.query", "method_params": "args,kwargs", "method_startline": "103", "method_endline": "104", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "125,126,127,132,133,134,135", "deleted_lines": null, "method_info": {"method_name": "test_gpu_info_mock", "method_params": "mock_pynvml_module,mock_gpu_is_available", "method_startline": "124", "method_endline": "169", "method_complexity": {"method_NLOC": "13", "method_CCN": "1", "method_NToken": "155", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "104", "deleted_lines": "98", "method_info": {"method_name": "mock_pynvml_module", "method_params": "", "method_startline": "90", "method_endline": "112", "method_complexity": {"method_NLOC": "15", "method_CCN": "1", "method_NToken": "67", "method_nesting_level": "0"}}}}}}}}