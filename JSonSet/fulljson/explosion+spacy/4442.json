{"BR": {"BR_id": "4442", "BR_author": "ewaldatsensentia", "BRopenT": "2019-10-14T23:15:00Z", "BRcloseT": "2019-10-16T11:40:19Z", "BR_text": {"BRsummary": "EntityRuler does not support LENGTH type patterns in 2.2.1; worked in 2.1.8", "BRdescription": "\n <denchmark-h:h2>How to reproduce the behaviour</denchmark-h>\n \n import spacy\n from spacy.pipeline import EntityRuler\n nlp =  spacy.load('en_core_web_md')\n ruler = EntityRuler(nlp, validate=True, overwrite_ents=True)\n patterns = [{\"label\":\"MYCODE\", \"pattern\":[{\"LENGTH\":5,\"SHAPE\":\"dddd\"}]}]\n ruler.add_patterns(patterns)\n <denchmark-h:h2>Result</denchmark-h>\n \n ValueError                                Traceback (most recent call last)\n  in \n 4 ruler = EntityRuler(nlp, validate=True, overwrite_ents=True)\n 5 patterns = [{\"label\":\"MYCODE\", \"pattern\":[{\"LENGTH\":5,\"SHAPE\":\"dddd\"}]}]\n ----> 6 ruler.add_patterns(patterns)\n ~\\Anaconda3\\lib\\site-packages\\spacy\\pipeline\\entityruler.py in add_patterns(self, patterns)\n 200                     raise ValueError(Errors.E097.format(pattern=pattern))\n 201             for label, patterns in self.token_patterns.items():\n --> 202                 self.matcher.add(label, None, *patterns)\n 203             for label, patterns in self.phrase_patterns.items():\n 204                 self.phrase_matcher.add(label, None, *patterns)\n matcher.pyx in spacy.matcher.matcher.Matcher.add()\n matcher.pyx in spacy.matcher.matcher._preprocess_pattern()\n matcher.pyx in spacy.matcher.matcher._get_attr_values()\n ValueError: [E153] The value type int is not supported for token patterns. Please use the option validate=True with Matcher, PhraseMatcher, or EntityRuler for more details.\n <denchmark-h:h2>Your Environment</denchmark-h>\n \n \n spaCy version: 2.2.1\n Platform: Windows-10-10.0.18362-SP0\n Python version: 3.7.3\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ewaldatsensentia", "commentT": "2019-10-15T00:19:12Z", "comment_text": "\n \t\tThanks for the report! The validation added in 2.2 was a bit overzealous here and hopefully should be fixed in the next minor release. I think the following workaround should work in the meanwhile:\n <denchmark-code>[{\"LENGTH\": {\"==\": 5}}]\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ewaldatsensentia", "commentT": "2019-10-15T00:34:02Z", "comment_text": "\n \t\tThank you for the workaround.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ewaldatsensentia", "commentT": "2019-11-15T11:54:36Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "275c9ad872a87c4ba131987656be4861617d3d90", "commit_author": "adrianeboyd", "commitT": "2019-10-16 13:40:18+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\matcher\\matcher.pyx", "file_new_name": "spacy\\matcher\\matcher.pyx", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "661", "deleted_lines": "661"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\tests\\matcher\\test_pattern_validation.py", "file_new_name": "spacy\\tests\\matcher\\test_pattern_validation.py", "file_complexity": {"file_NLOC": "56", "file_CCN": "7", "file_NToken": "709"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "23,27,28,33", "deleted_lines": "15,18,19"}}}}}}