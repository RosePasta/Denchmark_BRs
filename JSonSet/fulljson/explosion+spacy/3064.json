{"BR": {"BR_id": "3064", "BR_author": "dswah", "BRopenT": "2018-12-18T12:26:32Z", "BRcloseT": "2018-12-29T15:26:03Z", "BR_text": {"BRsummary": "doc.to_array fails on singe string attribute", "BRdescription": "\n <denchmark-h:h2>How to reproduce the behaviour</denchmark-h>\n \n Trying to export  by specifying a single STRING attribute (<denchmark-link:https://spacy.io/api/doc#to_array>as per the documentation</denchmark-link>\n ) fails, giving a :\n from spacy.attrs import POS\n doc = nlp(u'the docs say i can use a string')\n np_array = doc.to_array(\"POS\")\n results in :\n <denchmark-code>KeyError                                  Traceback (most recent call last)\n <ipython-input-127-904e71626dc6> in <module>\n       1 from spacy.attrs import POS\n       2 doc = nlp(u'the docs say i can use a string')\n ----> 3 np_array = doc.to_array(\"POS\")\n \n doc.pyx in spacy.tokens.doc.Doc.to_array()\n \n doc.pyx in spacy.tokens.doc.Doc.to_array()\n \n KeyError: 'P'\n </denchmark-code>\n \n looks like spacy detects that the string is iterable and is treating the contents of the string as the attribute keys to be exported?\n <denchmark-h:h2>Your Environment</denchmark-h>\n \n \n spaCy version: 2.0.18\n Platform: Linux-4.14.67-coreos-x86_64-with-debian-buster-sid\n Python version: 3.6.6\n Models: en\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "dswah", "commentT": "2018-12-20T11:28:50Z", "comment_text": "\n \t\tThanks. Getting this stuff right in Python is often a struggle. Would you mind making a pull request? A test for it would also be very helpful.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "dswah", "commentT": "2018-12-20T11:38:16Z", "comment_text": "\n \t\tlooks like \n \n \n spaCy/spacy/tokens/doc.pyx\n \n \n          Line 595\n       in\n       57f274b\n \n \n \n \n \n \n  if not hasattr(py_attr_ids, '__iter__') \\ \n \n \n \n \n \n should be checking:\n if hasattr(py_attr_ids, '__iter__') \\\n         and isinstance(py_attr_ids, basestring_):\n             py_attr_ids = [py_attr_ids]\n instead?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "dswah", "commentT": "2018-12-20T11:51:04Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/dswah>@dswah</denchmark-link>\n  There are three cases:\n \n doc.to_array('ORTH') # String\n doc.to_array(ORTH) # Integer ID\n doc.to_array(['ORTH']) # List (might have string or integer entries)\n \n We need to detect that something's a container without catching strings in the condition. I've always hated that Python makes this a bit hard. Maybe this would work:\n <denchmark-code>if isinstance(py_attr_ids, basestring_):\n     # Handle inputs like doc.to_array('ORTH')\n     py_attr_ids = [py_attr_ids]\n elif not hasattr(py_attr_ids, '__iter__'):\n     # Handle inputs like doc.to_array(ORTH)\n     py_attr_ids = [py_attr_ids]\n </denchmark-code>\n \n We could make it a single \"or\" condition but I think the cases are tricky enough to warrant the multiple lines. We don't currently have line coverage set up for Cython, but once we do, it makes sense to be checking our tests cover both branches.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "dswah", "commentT": "2018-12-20T11:55:51Z", "comment_text": "\n \t\t\n We could make it a single \"or\" condition but I think the cases are tricky enough to warrant the multiple lines. We don't currently have line coverage set up for Cython, but once we do, it makes sense to be checking our tests cover both branches.\n \n Agreed, this is easier to read and comprehend anyways.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "dswah", "commentT": "2018-12-29T15:26:03Z", "comment_text": "\n \t\tDone, thanks for your help!\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "dswah", "commentT": "2019-01-28T16:05:28Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "76e3e695afe191f96416181c8905917652c0cde3", "commit_author": "Matthew Honnibal", "commitT": "2018-12-29 16:24:40+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\tokens\\doc.pyx", "file_new_name": "spacy\\tokens\\doc.pyx", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "597,598,599,600,601,602", "deleted_lines": "597,598,600"}}}}}}