{"BR": {"BR_id": "4576", "BR_author": "rjknight", "BRopenT": "2019-11-02T13:49:40Z", "BRcloseT": "2020-11-23T09:26:48Z", "BR_text": {"BRsummary": "Matcher breaks with \"complex\" patterns ppc64le", "BRdescription": "\n Hello, I am seeing failures in the matcher unit tests, when complex patterns are involved.\n It seems very similar to this older issue Matcher breaks with \"complex\" patterns #3328\n <denchmark-h:h2>How to reproduce the behavior</denchmark-h>\n \n run the following sample code from issue 3328:\n <denchmark-code>import spacy\n from spacy.tokens import Token, Doc, Span\n from spacy.matcher import Matcher, PhraseMatcher\n \n text = \"Hello, how are you doing?\"\n \n nlp = spacy.load('en_core_web_md')\n \n matcher = Matcher(nlp.vocab)\n patterns = [\n     [{'LOWER': {'IN': [\"hello\", \"how\"]}}],\n     [{'LOWER': {'IN': [\"you\", \"doing\"]}}],\n ]\n \n matcher.add('TEST', None, *patterns)\n \n doc = nlp(text)\n \n matches = matcher(doc)\n for match_id, start, end in matches:\n     span = Span(doc, start, end, label=match_id)\n     print(span.text)\n </denchmark-code>\n \n <denchmark-h:h2>Exected results</denchmark-h>\n \n running in an x86 container I see the following\n <denchmark-code>(wmlce) pwrai@8d94e9e4cbc2:~$ python ./testme.py \n Hello\n how\n you\n doing\n (wmlce) pwrai@8d94e9e4cbc2:~$ python -m spacy info --markdown\n \n ## Info about spaCy\n \n * **spaCy version:** 2.2.1\n * **Platform:** Linux-3.10.0-957.5.1.el7.x86_64-x86_64-with-debian-buster-sid\n * **Python version:** 3.7.3\n </denchmark-code>\n \n <denchmark-h:h2>Actual results</denchmark-h>\n \n when running the same sample code in a ppc64le container I see the following:\n <denchmark-code>(wmlce) pwrai@ed647b42dde1:~$ python testme.py \n Hello\n ,\n how\n are\n you\n doing\n ?\n (wmlce) pwrai@ed647b42dde1:~$ python -m spacy info --markdown\n \n ## Info about spaCy\n \n * **spaCy version:** 2.2.1\n * **Platform:** Linux-4.14.0-115.10.1.el7a.ppc64le-ppc64le-with-debian-buster-sid\n * **Python version:** 3.7.4\n * **Models:** en\n \n \n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "rjknight", "commentT": "2019-11-08T06:51:13Z", "comment_text": "\n \t\tThanks for the report! I'm curious about what might be going on, but I'm not sure we have the resources to debug this right now. It does sound like a bug, so I'll add that label so we'll know to come back to it in the future.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "rjknight", "commentT": "2020-01-13T00:17:59Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/rjknight>@rjknight</denchmark-link>\n  Hi, May I know what channel you used to install the  package for ? I have searched several channels but could not find the . Thanks a lot!\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "rjknight", "commentT": "2020-01-14T17:37:56Z", "comment_text": "\n \t\t\n @rjknight Hi, May I know what channel you used to install the spacy package for ppc64le? I have searched several channels but could not find the spacy >= 2.1.0. Thanks a lot!\n \n <denchmark-link:https://github.com/Xiaoming-Zhao>@Xiaoming-Zhao</denchmark-link>\n  from here <denchmark-link:https://anaconda.org/powerai/repo>https://anaconda.org/powerai/repo</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "rjknight", "commentT": "2020-04-15T22:40:30Z", "comment_text": "\n \t\tIf anyone working on this architecture feels like testing & debugging this issue, all help is welcome!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "rjknight", "commentT": "2020-11-17T19:42:04Z", "comment_text": "\n \t\tI can confirm that I see the same type of test failure when attempting to build spacy v2.3.2 for ppc64le on conda-forge.\n \t\t"}}}, "commit": {"commit_id": "3f61f5eb546c90aa483afbab8d91508f3d887acb", "commit_author": "Adriane Boyd", "commitT": "2020-11-23 10:26:47+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\matcher\\matcher.pyx", "file_new_name": "spacy\\matcher\\matcher.pyx", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "6,282,323,395,433,491,543,545,560,571", "deleted_lines": "6,282,323,395,433,491,543,545,560,571"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\typedefs.pxd", "file_new_name": "spacy\\typedefs.pxd", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "6"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\vocab.pxd", "file_new_name": "spacy\\vocab.pxd", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "8", "deleted_lines": "8"}}}}}}