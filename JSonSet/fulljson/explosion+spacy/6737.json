{"BR": {"BR_id": "6737", "BR_author": "vitaly-d", "BRopenT": "2021-01-16T09:10:21Z", "BRcloseT": "2021-01-18T19:43:53Z", "BR_text": {"BRsummary": "rc3 from develop: training NER with transformer encoder on GPU: Implicit conversion to a NumPy array in _resize_lower", "BRdescription": "\n <denchmark-h:h2>How to reproduce the behaviour</denchmark-h>\n \n  was started with config generated for Components:NER and Hardware:GPU as it is described at <denchmark-link:https://nightly.spacy.io/usage/training#quickstart>https://nightly.spacy.io/usage/training#quickstart</denchmark-link>\n . It failed trying to get an evaluation score:\n <denchmark-code>\u26a0 Aborting and saving the final best model. Encountered exception:\n TypeError('Implicit conversion to a NumPy array is not allowed. Please use\n `.get()` to construct a NumPy array explicitly.')\n Traceback (most recent call last):\n   File \"/opt/conda/lib/python3.8/runpy.py\", line 194, in _run_module_as_main\n     return _run_code(code, main_globals, None,\n   File \"/opt/conda/lib/python3.8/runpy.py\", line 87, in _run_code\n     exec(code, run_globals)\n   File \"/spaCy/spacy/__main__.py\", line 4, in <module>\n     setup_cli()\n   File \"/spaCy/spacy/cli/_util.py\", line 65, in setup_cli\n     command(prog_name=COMMAND)\n   File \"/opt/conda/lib/python3.8/site-packages/click/core.py\", line 829, in __call__\n     return self.main(*args, **kwargs)\n   File \"/opt/conda/lib/python3.8/site-packages/click/core.py\", line 782, in main\n     rv = self.invoke(ctx)\n   File \"/opt/conda/lib/python3.8/site-packages/click/core.py\", line 1259, in invoke\n     return _process_result(sub_ctx.command.invoke(sub_ctx))\n   File \"/opt/conda/lib/python3.8/site-packages/click/core.py\", line 1066, in invoke\n     return ctx.invoke(self.callback, **ctx.params)\n   File \"/opt/conda/lib/python3.8/site-packages/click/core.py\", line 610, in invoke\n     return callback(*args, **kwargs)\n   File \"/opt/conda/lib/python3.8/site-packages/typer/main.py\", line 497, in wrapper\n     return callback(**use_params)  # type: ignore\n   File \"/spaCy/spacy/cli/train.py\", line 59, in train_cli\n     train(nlp, output_path, use_gpu=use_gpu, stdout=sys.stdout, stderr=sys.stderr)\n   File \"/spaCy/spacy/training/loop.py\", line 113, in train\n     raise e\n   File \"/spaCy/spacy/training/loop.py\", line 98, in train\n     for batch, info, is_best_checkpoint in training_step_iterator:\n   File \"/spaCy/spacy/training/loop.py\", line 210, in train_while_improving\n     score, other_scores = evaluate()\n   File \"/spaCy/spacy/training/loop.py\", line 261, in evaluate\n     scores = nlp.evaluate(dev_corpus(nlp))\n   File \"/spaCy/spacy/language.py\", line 1321, in evaluate\n     for doc, eg in zip(\n   File \"/spaCy/spacy/util.py\", line 1378, in _pipe\n     yield from proc.pipe(docs, **kwargs)\n   File \"spacy/pipeline/transition_parser.pyx\", line 184, in pipe\n   File \"spacy/pipeline/transition_parser.pyx\", line 196, in spacy.pipeline.transition_parser.Parser.predict\n   File \"spacy/pipeline/transition_parser.pyx\", line 213, in spacy.pipeline.transition_parser.Parser.greedy_parse\n   File \"spacy/pipeline/transition_parser.pyx\", line 136, in spacy.pipeline.transition_parser.Parser._resize\n   File \"/spaCy/spacy/ml/models/parser.py\", line 141, in resize_output\n     return _resize_lower(model, new_nO)\n   File \"/spaCy/spacy/ml/models/parser.py\", line 201, in _resize_lower\n     larger_W[:, 0:old_nO, :, :] = smaller_W\n   File \"cupy/core/core.pyx\", line 1188, in cupy.core.core.ndarray.__array__\n TypeError: Implicit conversion to a NumPy array is not allowed. Please use `.get()` to construct a NumPy array explicitly.\n </denchmark-code>\n \n I have commented out the 'with use_ops(\"numpy\"):' line and it solves the problem. So it might be a fix if the lower layer is supposed to use CuPy.\n <denchmark-code>diff --git a/spacy/ml/models/parser.py b/spacy/ml/models/parser.py\n index 7ce0165a2..da53f562e 100644\n --- a/spacy/ml/models/parser.py\n +++ b/spacy/ml/models/parser.py\n @@ -185,8 +185,7 @@ def _resize_lower(model, new_nO):\n      nI = smaller.maybe_get_dim(\"nI\")\n      nF = smaller.maybe_get_dim(\"nF\")\n      nP = smaller.maybe_get_dim(\"nP\")\n -    with use_ops(\"numpy\"):\n -        larger = _define_lower(nO=new_nO, nI=nI, nF=nF, nP=nP)\n +    larger = _define_lower(nO=new_nO, nI=nI, nF=nF, nP=nP)\n      # it could be that the model is not initialized yet, then skip this bit\n </denchmark-code>\n \n <denchmark-h:h2>Info about spaCy</denchmark-h>\n \n \n spaCy version: 3.0.0rc3\n branch: develop\n Commit: git rev-parse HEAD ->  f0c696b\n Platform: Linux-5.4.0-60-generic-x86_64-with-glibc2.10\n Python version: 3.8.5\n Pipelines: en_core_web_lg (3.0.0a0), en_core_web_sm (3.0.0a0), en_core_web_trf (3.0.0a0)\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "vitaly-d", "commentT": "2021-01-16T22:43:44Z", "comment_text": "\n \t\tThanks for the report! Can you give the exact commands you ran to create the config, and run the training?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "vitaly-d", "commentT": "2021-01-17T12:08:37Z", "comment_text": "\n \t\tHi!\n \n The initial config was generated using the quickstart widget at https://nightly.spacy.io/usage/training#quickstart (I did not use the init config command for that).\n Then 'init fill-config' and  'debug config' were called. '{vars.config}.cfg' points to authors_affiliations_ner_trf.cfg in the attached spaCy_6737.zip. The resulting config.cfg used for training is also included. The only modification I made is progressbar=true for training.logger.\n \n <denchmark-code>    help: \"Train Affiliations NER: ${vars.model_name}\"\n     script:\n       - \"python -m spacy init fill-config configs/${vars.config}.cfg training/config.cfg\"\n       - \"python -m spacy debug config training/config.cfg --paths.train corpus/${vars.train_name} --paths.dev corpus/${vars.dev_name} --nlp.lang=${vars.lang}\"\n       - \"python -m spacy train training/config.cfg --output training/${vars.model_name} --gpu-id ${vars.gpu} --paths.train corpus/${vars.train_name} --paths.dev corpus/${vars.dev_name} --nlp.lang=${vars.lang}\"\n </denchmark-code>\n \n Also I've experimented with the 'spacy init config' command and realized that the config I used for training contains 'architectures = \"spacy.TransitionBasedParser.v1\"instead of @architectures = \"spacy.TransitionBasedParser.v2\". But the issue can also be reproduced with the output of spacy init config:\n <denchmark-code># spacy init config configs/c.cfg -p ner -G -F\n \u2139 Generated config template specific for your use case\n - Language: en\n - Pipeline: ner\n - Optimize for: efficiency\n - Hardware: GPU\n - Transformer: roberta-base\n /opt/conda/lib/python3.8/site-packages/thinc/config.py:1040: RuntimeWarning: fields may not start with an underscore, ignoring \"_doc_data\"\n   return create_model(\"ArgModel\", **sig_args)\n \u2714 Auto-filled config with all values\n \u2714 Saved config\n configs/c.cfg\n You can now add your data and train your pipeline:\n python -m spacy train c.cfg --paths.train ./train.spacy --paths.dev ./dev.spacy\n </denchmark-code>\n \n <denchmark-code># diff configs/c.cfg training/config.cfg\n 29c29\n < @architectures = \"spacy.TransitionBasedParser.v2\"\n ---\n > @architectures = \"spacy.TransitionBasedParser.v1\"\n 94c94\n < size = 2000\n ---\n > size = 4000\n 100c100\n < progress_bar = false\n ---\n > progress_bar = true\n </denchmark-code>\n \n Thanks!\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "vitaly-d", "commentT": "2021-01-18T17:44:33Z", "comment_text": "\n \t\tThanks for the detailed report!\n We've located and fixed the issue, and it'll be in the next release candidate rc3 (the one you're using is the one under development from the develop branch but not the actual released version yet ;-))\n \t\t"}}}, "commit": {"commit_id": "26c34ab8b00466ec9b3daa8e9194bad068ee9e1c", "commit_author": "Adriane Boyd", "commitT": "2021-01-18 20:43:15+01:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "spacy\\ml\\models\\parser.py", "file_new_name": "spacy\\ml\\models\\parser.py", "file_complexity": {"file_NLOC": "184", "file_CCN": "18", "file_NToken": "1001"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "188", "deleted_lines": "188,189", "method_info": {"method_name": "_resize_lower", "method_params": "model,new_nO", "method_startline": "178", "method_endline": "211", "method_complexity": {"method_NLOC": "30", "method_CCN": "5", "method_NToken": "275", "method_nesting_level": "0"}}}}}}}}