{"BR": {"BR_id": "6129", "BR_author": "erip", "BRopenT": "2020-09-23T15:17:54Z", "BRcloseT": "2020-09-30T11:26:07Z", "BR_text": {"BRsummary": "Tags in TAG_MAP not being found in debug-data", "BRdescription": "\n <denchmark-h:h2>How to reproduce the behaviour</denchmark-h>\n \n \n Add tags from Korean UD to spacy/lang/ko/tag_map.py\n Build spaCy from source\n debug data:\n \n (spacy-ko) [erip@blah spacy-ko]$ python -m spacy debug-data ko korean-json/train.json korean-json/dev.json --verbose | grep \"not found\" | head -n5\n \u2718 Label 'ncpa+ncn' not found in tag map for language 'ko'\n \u2718 Label 'ncpa+ncn+jcm' not found in tag map for language 'ko'\n \u2718 Label 'ncpa+jxt' not found in tag map for language 'ko'\n \u2718 Label 'mag' not found in tag map for language 'ko'\n \u2718 Label 'ncn' not found in tag map for language 'ko'\n $\n $\n (spacy-ko) [erip@blah spacy-ko]$ python\n Python 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56)\n [GCC 7.3.0] on linux\n Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n >>> import spacy\n >>> from spacy.lang.ko import tag_map\n >>> all(tag in tag_map.TAG_MAP for tag in ['ncpa+ncn', 'ncpa+ncn+jcm', 'ncpa+jxt', 'mag', 'ncn'])\n True\n <denchmark-h:h2>Your Environment</denchmark-h>\n \n <denchmark-h:h2>Info about spaCy</denchmark-h>\n \n \n spaCy version: 2.3.2 (master)\n Platform: Linux-3.10.0-1127.8.2.el7.x86_64-x86_64-with-centos-7.8.2003-Core\n Python version: 3.6.12\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "erip", "commentT": "2020-09-23T15:28:26Z", "comment_text": "\n \t\tAnd for posterity, my tag_map.py looks like...\n # encoding: utf8\n from __future__ import unicode_literals\n \n from ...symbols import POS, PUNCT, INTJ, X, SYM, ADJ, AUX, ADP, CONJ, NOUN, PRON\n from ...symbols import VERB, ADV, PROPN, NUM, DET, PART, CCONJ, SCONJ\n \n TAG_MAP = {\n     # J.{1,2} \uc870\uc0ac\n     \"JKS\": {POS: ADP},\n     \"JKC\": {POS: ADP},\n     # There are a lot...\n      \"xsn\" : {POS: PART},\n     \"xsv+ecc\" : {POS: PART},\n     \"xsv+ecs\" : {POS: PART},\n     \"XSV+EC\" : {POS: VERB},\n     \"xsv+ecx+px+ep+ef\" : {POS: PART},\n     \"xsv+ep+ecx\" : {POS: PART},\n     \"XSV+EP+ETM\" : {POS: VERB},\n     \"xsv+etm\" : {POS: PART},\n     \"XSV+ETM\" : {POS: VERB},\n }\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "erip", "commentT": "2020-09-23T15:43:56Z", "comment_text": "\n \t\tFound the issue. In <denchmark-link:https://github.com/explosion/spaCy/blob/597bcc629e173dfd87422188dc76a2f1053a9bba/spacy/cli/debug_data.py#L62-L74>this code</denchmark-link>\n , the tag map is being replaced with an empty dict because no tag-map is being provided. It seems like the fix is that L74 should happen in the if-statement after L64.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "erip", "commentT": "2020-09-24T06:09:09Z", "comment_text": "\n \t\tThat does look like a bug, thanks for the report!\n We're trying to move away from having the tag maps specified within the library in the language data (since they're corpus-specific and not language-specific) so you don't need a custom spacy install, etc. to manage them, but the library tag map should be the default with spacy train, not an empty tag map.\n As a workaround, you can use the  option with your tag map in JSON format. Unfortunately JSON encoding restrictions make converting the tag map more of a hassle than you'd expect, but it's what we're using internally now for all the provided models. See the example at the very bottom here: <denchmark-link:https://spacy.io/usage/v2-3>https://spacy.io/usage/v2-3</denchmark-link>\n . Just replace the model with  from your custom spacy install.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "erip", "commentT": "2020-09-24T11:25:49Z", "comment_text": "\n \t\tThanks, <denchmark-link:https://github.com/adrianeboyd>@adrianeboyd</denchmark-link>\n . I recalled that the there was some discussion about moving away from coupling corpus-specific tagmaps to langs, so this seems like a good solution. :-)\n In any case, I'm happy to submit a PR with the proposed fix outlined above (which worked for me) if you think it's worth it. I don't know how many 2.3.x releases you anticipate because cutting the 3.x release, so maybe moot - your call.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "erip", "commentT": "2020-09-24T13:15:46Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/erip>@erip</denchmark-link>\n , we're definitely going to release at least one more bugfix release for 2.x, since we have a few fixes accumulated on  already. I haven't looked at the details of this issue, but if it's a quick fix we'd definitely appreciate the contribution!\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "erip", "commentT": "2020-09-29T11:40:38Z", "comment_text": "\n \t\tDone, <denchmark-link:https://github.com/svlandeg>@svlandeg</denchmark-link>\n . Hopefully nothing too controversial, but let me know if you would like me to make any changes. \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "erip", "commentT": "2020-09-30T11:53:38Z", "comment_text": "\n \t\tThanks! :-)\n \t\t"}}}, "commit": {"commit_id": "4cbb954281ad47148667de130e5c4eb23e579edf", "commit_author": "Elijah Rippeth", "commitT": "2020-09-30 13:26:06+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\cli\\debug_data.py", "file_new_name": "spacy\\cli\\debug_data.py", "file_complexity": {"file_NLOC": "587", "file_CCN": "44", "file_NToken": "3298"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "69,70,71,72,73", "deleted_lines": "62,63,64,65,73,74"}}}}}}