{"BR": {"BR_id": "25262", "BR_author": "skeydan", "BRopenT": "2019-01-28T19:40:43Z", "BRcloseT": "2019-01-29T09:51:08Z", "BR_text": {"BRsummary": "Usage of tf_stack.extract_stack in registry.py breaks TensorFlow R client", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Fedora 29\n Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below): nightly\n Python version: 3.6\n Bazel version (if compiling from source): NA\n GCC/Compiler version (if compiling from source): NA\n CUDA/cuDNN version: NA\n GPU model and memory: NA\n \n Hi,\n this usage of tf_stack in registry.py\n <denchmark-code>stack = tf_stack.extract_stack()\n user_function = stack[2]\n </denchmark-code>\n \n breaks the TensorFlow for R client, because at that point, when called from R stack is of length 2, with both elements being of length 6.\n This is analogous to the recently fixed <denchmark-link:https://github.com/tensorflow/tensorflow/issues/25067>#25067</denchmark-link>\n \n (thank you <denchmark-link:https://github.com/jtkeeling>@jtkeeling</denchmark-link>\n )\n It would be awesome if this could still be fixed for the 1.13 release, as I'm aware of no workaround and we have users that want to register a custom gradient.\n Many thanks!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "skeydan", "commentT": "2019-01-28T20:08:13Z", "comment_text": "\n \t\tYes, this is entirely analogous to <denchmark-link:https://github.com/tensorflow/tensorflow/issues/25067>#25067</denchmark-link>\n . I've authored a fix and sent for review.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "skeydan", "commentT": "2019-01-28T20:12:38Z", "comment_text": "\n \t\tGreat thank you for the quick fix!!!\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "skeydan", "commentT": "2019-01-28T22:58:28Z", "comment_text": "\n \t\tThis is fixed right (cf other issue)?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "skeydan", "commentT": "2019-01-28T23:14:50Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/martinwicke>@martinwicke</denchmark-link>\n  This is another piece of code that uses tf_stack. I've sent you another change that fixes this one.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "skeydan", "commentT": "2019-01-29T02:59:06Z", "comment_text": "\n \t\tThanks! We'll wait for that to close.\n \t\t"}}}, "commit": {"commit_id": "823b694639a3f49b6adbf9e73a08c529d583878e", "commit_author": "James Keeling", "commitT": "2019-01-29 01:48:40-08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\framework\\registry.py", "file_new_name": "tensorflow\\python\\framework\\registry.py", "file_complexity": {"file_NLOC": "45", "file_CCN": "8", "file_NToken": "288"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "67,68,69,70,71,72", "deleted_lines": "67,68", "method_info": {"method_name": "register", "method_params": "self,candidate,name", "method_startline": "44", "method_endline": "73", "method_complexity": {"method_NLOC": "18", "method_CCN": "4", "method_NToken": "150", "method_nesting_level": "1"}}}}}}}}