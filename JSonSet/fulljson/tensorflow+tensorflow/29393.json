{"BR": {"BR_id": "29393", "BR_author": "llan-ml", "BRopenT": "2019-06-04T14:02:21Z", "BRcloseT": "2019-06-17T21:49:36Z", "BR_text": {"BRsummary": "[2.0alpha0 AutoGraph] tf.function does not automatically transform nested class methods", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below): 2.0.0alpha0\n Python version: 3.6.5\n \n Describe the current behavior\n When we define multiple methods for a class and only decorate one of them with @tf.function, the nested methods are not automatically transformed and some errors raise.\n Describe the expected behavior\n We only need decorate the outermost method.\n Code to reproduce the issue\n # -*- coding: utf-8 -*-\n # @Author  : Lin Lan (ryan.linlan@gmail.com)\n \n from __future__ import absolute_import\n from __future__ import division\n from __future__ import print_function\n \n import tensorflow as tf\n \n \n class Foo(tf.keras.Model):\n     def __init__(self):\n         super(Foo, self).__init__()\n         self.dense = tf.keras.layers.Dense(20)\n         self.embeddings = tf.Variable(tf.random.normal((100, 5)), dtype=tf.float32)\n \n     @tf.function\n     def call(self, inputs):\n         embeddings = tf.nn.embedding_lookup(\n             self.embeddings, inputs)\n         return self._inner(embeddings)\n \n     # @tf.function\n     def _inner(self, embeddings):\n         batch = tf.shape(embeddings)[0]\n         ta = tf.TensorArray(tf.float32, size=batch)\n         for i in tf.range(batch):\n             this = self.dense(embeddings[i][tf.newaxis, :])\n             ta = ta.write(i, this)\n         return ta.stack()\n \n \n foo = Foo()\n res = foo([0, 2, 4, 6, 8])\n \n Other info / logs\n TypeError: Tensor objects are only iterable when eager execution is enabled. To iterate over this tensor use tf.map_fn.\n Also decorating the method _inner eliminate the error.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "llan-ml", "commentT": "2019-06-04T14:07:46Z", "comment_text": "\n \t\tIt took me a lot of time to find this bug (or intended behavior?) from my original code. It would be better to add a warning in the doc of tf.function.\n This <denchmark-link:https://www.tensorflow.org/alpha/guide/effective_tf2#refactor_your_code_into_smaller_functions>section</denchmark-link>\n  is confusing given this issue. Also the third paragraph of this <denchmark-link:https://www.tensorflow.org/alpha/guide/autograph#the_tffunction_decorator>section</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "llan-ml", "commentT": "2019-06-05T09:21:26Z", "comment_text": "\n \t\tHave tried with TF version 2.0.0-alpha on Colab and was able to reproduce the issue as mentioned in the description.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "llan-ml", "commentT": "2019-06-05T17:44:57Z", "comment_text": "\n \t\tYou shouldn't need to decorate self._inner. <denchmark-link:https://github.com/mdanatg>@mdanatg</denchmark-link>\n  why isn't it being caught here?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "llan-ml", "commentT": "2019-06-05T17:56:10Z", "comment_text": "\n \t\tThis is a bug. We'll have it fixed in the nightly soon.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "llan-ml", "commentT": "2019-06-15T12:33:03Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/mdanatg>@mdanatg</denchmark-link>\n  Any updates regarding to this issue?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "llan-ml", "commentT": "2019-06-15T15:41:34Z", "comment_text": "\n \t\tYep! It will likely be fixed today, or sometime next week at the latest.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "llan-ml", "commentT": "2019-06-17T21:49:37Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=29393>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=29393>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "665bd441195ce352b0d5ce74d5fd2dc19fa4a614", "commit_author": "Dan Moldovan", "commitT": "2019-06-17 14:46:06-07:00", "commit_complexity": {"commit_NLOC": "0.27586206896551724", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\autograph\\impl\\conversion.py", "file_new_name": "tensorflow\\python\\autograph\\impl\\conversion.py", "file_complexity": {"file_NLOC": "408", "file_CCN": "78", "file_NToken": "2742"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "368,369,401", "deleted_lines": "368,400,401,402", "method_info": {"method_name": "is_whitelisted_for_graph", "method_params": "o,check_call_override", "method_startline": "327", "method_endline": "414", "method_complexity": {"method_NLOC": "42", "method_CCN": "17", "method_NToken": "298", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "tensorflow\\python\\autograph\\impl\\conversion_test.py", "file_new_name": "tensorflow\\python\\autograph\\impl\\conversion_test.py", "file_complexity": {"file_NLOC": "193", "file_CCN": "42", "file_NToken": "1433"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98", "deleted_lines": null, "method_info": {"method_name": "test_is_whitelisted_for_graph_callable_whitelisted_call", "method_params": "self", "method_startline": "65", "method_endline": "98", "method_complexity": {"method_NLOC": "22", "method_CCN": "2", "method_NToken": "165", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "77,78", "deleted_lines": null, "method_info": {"method_name": "test_is_whitelisted_for_graph_callable_whitelisted_call.whitelisted_method", "method_params": "self", "method_startline": "77", "method_endline": "78", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "6", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "88,89", "deleted_lines": null, "method_info": {"method_name": "test_is_whitelisted_for_graph_callable_whitelisted_call.converted_method", "method_params": "self", "method_startline": "88", "method_endline": "89", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "6", "method_nesting_level": "3"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "74,75", "deleted_lines": null, "method_info": {"method_name": "test_is_whitelisted_for_graph_callable_whitelisted_call.__call__", "method_params": "self", "method_startline": "74", "method_endline": "75", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "6", "method_nesting_level": "3"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\autograph\\pyct\\inspect_utils.py", "file_new_name": "tensorflow\\python\\autograph\\pyct\\inspect_utils.py", "file_complexity": {"file_NLOC": "227", "file_CCN": "85", "file_NToken": "1226"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "219,220", "deleted_lines": null, "method_info": {"method_name": "_get_unbound_function", "method_params": "m", "method_startline": "216", "method_endline": "223", "method_complexity": {"method_NLOC": "6", "method_CCN": "3", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "230", "deleted_lines": "228", "method_info": {"method_name": "getdefiningclass", "method_params": "m,owner_class", "method_startline": "226", "method_endline": "238", "method_complexity": {"method_NLOC": "10", "method_CCN": "6", "method_NToken": "75", "method_nesting_level": "0"}}}}}}}}