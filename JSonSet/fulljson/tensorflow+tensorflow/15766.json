{"BR": {"BR_id": "15766", "BR_author": "matthew-z", "BRopenT": "2018-01-01T09:43:43Z", "BRcloseT": "2018-01-05T14:05:19Z", "BR_text": {"BRsummary": "tf.assert_equal raises incorrect traceback in Eager mode", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow):  No\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.1 LTS\n TensorFlow installed from (source or binary): pip binary\n TensorFlow version (use command below): 1.5.0-dev20171227\n Python version: 3.5.0\n Bazel version (if compiling from source):\n GCC/Compiler version (if compiling from source):\n CUDA/cuDNN version: None\n GPU model and memory: None\n Exact command to reproduce: python main.py\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n In eager mode, tf.assert_equal only shows [] in traceback message when two inputs are different. However, in graph mode, it does show different values in the message.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n import tensorflow as tf\n import tensorflow.contrib.eager as tfe\n \n tfe.enable_eager_execution()\n \n x = tf.constant([1,2,3])\n y = tf.constant([3,2,1])\n \n with tf.control_dependencies([tf.assert_equal(x, y)]):\n     output = tf.reduce_sum(x)\n Eager Mode Traceback:\n <denchmark-code>Traceback (most recent call last):\n   File \"/Users/matt/PycharmProjects/scratch/main.py\", line 9, in <module>\n     with tf.control_dependencies([tf.assert_equal(x, y)]):\n   File \"/usr/local/var/pyenv/versions/anaconda3-4.1.1/lib/python3.6/site-packages/tensorflow/python/ops/check_ops.py\", line 376, in assert_equal\n     summary_msg)))\n tensorflow.python.framework.errors_impl.InvalidArgumentError: \n Condition x == y did not hold.\n Indices of first 0 different values:\n []\n Corresponding x values:\n []\n Corresponding y values:\n []\n </denchmark-code>\n \n Graph Mode Traceback:\n <denchmark-code>Traceback (most recent call last):\n   File \"/Users/matt/PycharmProjects/scratch/main.py\", line 9, in <module>\n     with tf.control_dependencies([tf.assert_equal(x, y)]):\n   File \"/usr/local/var/pyenv/versions/anaconda3-4.1.1/lib/python3.6/site-packages/tensorflow/python/ops/check_ops.py\", line 391, in assert_equal\n     _assert_static(condition_static, data)\n   File \"/usr/local/var/pyenv/versions/anaconda3-4.1.1/lib/python3.6/site-packages/tensorflow/python/ops/check_ops.py\", line 104, in _assert_static\n     message='\\n'.join(data_static))\n tensorflow.python.framework.errors_impl.InvalidArgumentError: \n Condition x == y did not hold element-wise:\n x (Const:0) = \n [1 2 3]\n y (Const_1:0) = \n [3 2 1]\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "matthew-z", "commentT": "2018-01-02T18:51:31Z", "comment_text": "\n \t\tThanks for the report. <denchmark-link:https://github.com/iganichev>@iganichev</denchmark-link>\n  - could you take a look?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "matthew-z", "commentT": "2018-01-02T21:50:59Z", "comment_text": "\n \t\tThe fix is in review. In the meantime, you can use summarize=3 parameter to assert_equals.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "matthew-z", "commentT": "2018-01-03T05:07:48Z", "comment_text": "\n \t\tThank you very much!\n \t\t"}}}, "commit": {"commit_id": "89cd0cd81ae829610fcbf4437597451ae5a59fe6", "commit_author": "Igor Ganichev", "commitT": "2018-01-02 16:35:20-08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\kernel_tests\\check_ops_test.py", "file_new_name": "tensorflow\\python\\kernel_tests\\check_ops_test.py", "file_complexity": {"file_NLOC": "1054", "file_CCN": "133", "file_NToken": "9361"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "120,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,169,170,171", "deleted_lines": "120", "method_info": {"method_name": "test_error_message_eager", "method_params": "self", "method_startline": "117", "method_endline": "175", "method_complexity": {"method_NLOC": "59", "method_CCN": "1", "method_NToken": "156", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\ops\\check_ops.py", "file_new_name": "tensorflow\\python\\ops\\check_ops.py", "file_complexity": {"file_NLOC": "567", "file_CCN": "95", "file_NToken": "4063"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "343,345,346,347,359,365,376,377,378", "deleted_lines": "343,356,362,363,364,375,376,377", "method_info": {"method_name": "assert_equal", "method_params": "x,y,data,summarize,message,name", "method_startline": "302", "method_endline": "395", "method_complexity": {"method_NLOC": "54", "method_CCN": "10", "method_NToken": "425", "method_nesting_level": "0"}}}}}}}}