{"BR": {"BR_id": "12608", "BR_author": "Timeroot", "BRopenT": "2017-08-26T00:19:52Z", "BRcloseT": "2018-01-05T20:53:31Z", "BR_text": {"BRsummary": "gather_nd bounds checking not working", "BRdescription": "\n When using gather_nd, sometimes out-of-bounds indices lead to errors (bounds checking -- the expected behavior) and sometimes it seems to just read zeros. I expect it reading just other memory from the GPU, but I've never observed anything other than zeros so I'm not sure. When I run on the CPU the bounds seem to be appropriately checked i.e. I get the errors desired. Here's some example code:\n import tensorflow as tf\n sess = tf.Session()\n print(sess.run(tf.gather_nd(tf.zeros([5,5,5]) + 1, [[6,6,6]])))\n print(sess.run(tf.gather_nd(tf.zeros([1,5]) + 1, [-50000000000000000])))\n print(sess.run(tf.gather_nd(tf.reshape(tf.range(5*5*5), [5,5,5]), [[6,6,6]])))\n The first two print statements execute successfully, which is a bug: the indices are clearly out of range, and the arrays are clearly all 1's; but instead it returns an appropriately shaped array of 0's. (The +1 is not necessary to trigger the bug, but highlights that it's drawing from incorrect memory). The third line, for some reason, has the bounds checking operate correctly, and says that -- yes -- the index [6,6,6] is not in the bounds. It appears to something based on what the previous op is, maybe? Where some ops, such as stack, allow me to go outside the bounds, while others such as reshape don't. Here's an example interactive session to show the output I get.\n Python 3.5.2 (default, Nov 17 2016, 17:05:23) \n [GCC 5.4.0 20160609] on linux\n Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n >>> import tensorflow as tf\n >>> sess = tf.Session()\n 2017-08-25 17:10:43.788433: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n 2017-08-25 17:10:43.788455: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n 2017-08-25 17:10:43.788463: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n 2017-08-25 17:10:43.788466: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n 2017-08-25 17:10:43.788470: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n 2017-08-25 17:10:43.919384: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n 2017-08-25 17:10:43.919779: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: \n name: GeForce GTX 1070\n major: 6 minor: 1 memoryClockRate (GHz) 1.645\n pciBusID 0000:01:00.0\n Total memory: 7.92GiB\n Free memory: 7.59GiB\n 2017-08-25 17:10:43.919795: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 \n 2017-08-25 17:10:43.919801: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y \n 2017-08-25 17:10:43.919814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\n >>> sess.run(tf.gather_nd(tf.zeros([5,5,5]) + 1, [[6,6,6]]))\n array([ 0.], dtype=float32)\n >>> sess.run(tf.gather_nd(tf.zeros([1,5]) + 1, [-50000000000000000]))\n array([ 0.,  0.,  0.,  0.,  0.], dtype=float32)\n >>> sess.run(tf.gather_nd(tf.reshape(tf.range(5*5*5), [5,5,5]), [[6,6,6]]))\n Traceback (most recent call last):\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n     return fn(*args)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\n     status, run_metadata)\n   File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n     next(self.gen)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n     pywrap_tensorflow.TF_GetCode(status))\n tensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\n \t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\n \n During handling of the above exception, another exception occurred:\n \n Traceback (most recent call last):\n   File \"<stdin>\", line 1, in <module>\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\n     run_metadata_ptr)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\n     feed_dict_tensor, options, run_metadata)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n     options, run_metadata)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n     raise type(e)(node_def, op, message)\n tensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\n \t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\n \n Caused by op 'GatherNd_2', defined at:\n   File \"<stdin>\", line 1, in <module>\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1338, in gather_nd\n     name=name)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n     op_def=op_def)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n     original_op=self._default_original_op, op_def=op_def)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n     self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n \n InvalidArgumentError (see above for traceback): flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\n \t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\n Version info:\n Linux Mint 4.4.0-53-generic x86_64\n Python version 3.5.2\n CUDA version release 8.0, V8.0.61\n cuDNN version 6.0.21\n Tensorflow version v1.3.0-rc2-20-g0787eee 1.3.0\n nvidia drivers version 375\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Timeroot", "commentT": "2017-08-26T08:38:24Z", "comment_text": "\n \t\tRelated: <denchmark-link:https://github.com/tensorflow/tensorflow/issues/12405>#12405</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Timeroot", "commentT": "2017-08-28T04:28:41Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/langmore>@langmore</denchmark-link>\n , are you able to take a look?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Timeroot", "commentT": "2017-08-28T17:25:58Z", "comment_text": "\n \t\tAny array bounds checking issues would involve digging into the C++, or maybe even the GPU kernel.  That's beyond what I can do.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Timeroot", "commentT": "2017-08-28T21:42:31Z", "comment_text": "\n \t\tIt looks like relevant bounds-checking code for the CPU is in \n \n \n tensorflow/tensorflow/core/kernels/gather_nd_op_cpu_impl.h\n \n \n          Line 57\n       in\n       dff1062\n \n \n \n \n \n \n  bool out_of_bounds = false; \n \n \n \n \n  The 'out_of_bounds' variable gets stored in 'error_loc' and then passed out as 'bad_i' in \n \n \n tensorflow/tensorflow/core/kernels/gather_nd_op.cc\n \n \n          Line 126\n       in\n       e073322\n \n \n \n \n \n \n  bad_i = func(c->eigen_device<Device>(), slice_size, scratch_scalar, \\ \n \n \n \n \n \n But based on L144 in gather_nd_op.cc, it seems that the GPU kernel is currently not designed to do the bounds checking.\n \n \n \n tensorflow/tensorflow/core/kernels/gather_nd_op_gpu.cu.cc\n \n \n          Line 56\n       in\n       e073322\n \n \n \n \n \n \n  out[i] = (out_of_bounds) ? T(0) : ldg(params + offset + loc_offset); \n \n \n \n \n  shows that it deliberately returns an all-zero tensors when the bounds check fails, but doesn't report the error. L91 says something about it requiring CPU/GPU communication that I honestly don't understand. I figure this will be a #dontfix for now then? :|\n Tagging <denchmark-link:https://github.com/ebrevdo>@ebrevdo</denchmark-link>\n  since it looks like his code (many thanks, though, for this useful function!)\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Timeroot", "commentT": "2017-12-20T01:18:50Z", "comment_text": "\n \t\tIt has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Timeroot", "commentT": "2017-12-22T01:19:46Z", "comment_text": "\n \t\tThe issue and <denchmark-link:https://github.com/tensorflow/tensorflow/issues/12405>#12405</denchmark-link>\n  seems both similar with <denchmark-link:https://github.com/tensorflow/tensorflow/issues/13687>#13687</denchmark-link>\n , which requests a bound checking for GPU . cc <denchmark-link:https://github.com/ebrevdo>@ebrevdo</denchmark-link>\n .\n \n It's hard to efficiently check an error condition coming off the GPU\n gather_nd does in a similar case. Want to send a PR to update the documentation for those two\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "Timeroot", "commentT": "2018-01-04T20:26:16Z", "comment_text": "\n \t\tAdded a PR <denchmark-link:https://github.com/tensorflow/tensorflow/pull/15857>#15857</denchmark-link>\n  to update the docs.\n \t\t"}}}, "commit": {"commit_id": "5386775e64aac0bb5020974122645da900bc312a", "commit_author": "Yong Tang", "commitT": "2018-01-05 15:53:30-05:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\core\\api_def\\base_api\\api_def_GatherNd.pbtxt", "file_new_name": "tensorflow\\core\\api_def\\base_api\\api_def_GatherNd.pbtxt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "46,47,48,49", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\core\\api_def\\base_api\\api_def_GatherV2.pbtxt", "file_new_name": "tensorflow\\core\\api_def\\base_api\\api_def_GatherV2.pbtxt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "53,54,55,56", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\core\\api_def\\base_api\\api_def_ScatterNd.pbtxt", "file_new_name": "tensorflow\\core\\api_def\\base_api\\api_def_ScatterNd.pbtxt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "101,102,103", "deleted_lines": null}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\core\\ops\\array_ops.cc", "file_new_name": "tensorflow\\core\\ops\\array_ops.cc", "file_complexity": {"file_NLOC": "5208", "file_CCN": "38", "file_NToken": "22110"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1563,1564,1565,1566,1636,1637,1638,1639,5424,5425,5426", "deleted_lines": null}}}}}}