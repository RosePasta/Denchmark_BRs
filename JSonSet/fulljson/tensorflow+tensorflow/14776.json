{"BR": {"BR_id": "14776", "BR_author": "droidicus", "BRopenT": "2017-11-22T00:35:51Z", "BRcloseT": "2018-03-07T01:17:02Z", "BR_text": {"BRsummary": "tf.keras.estimator.estimator_from_model does not respect options set in RunConfig", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below): tf.VERSION = 1.4.0 tf.GIT_VERSION = v1.4.0-rc1-11-g130a514\n Python version: 2.7.12\n Bazel version (if compiling from source): N/A\n GCC/Compiler version (if compiling from source): N/A\n CUDA/cuDNN version: 8.0.61/6.0.21\n GPU model and memory: NVIDIA Tesla M60 8 GB\n Exact command to reproduce: See Below\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n When trying to use an estimator that is derived from tf.keras.estimator.estimator_from_model() and training with tf.estimator.train_and_evaluate(), setting gpu_options in the session_config of tf.estimator.RunConfig does not cause the settings to be respected when passed to the estimator_from_model function. For example setting per_process_gpu_memory_fraction=0.5 does not decrease the memory allocated to the process on the GPU, similarly setting allow_growth=True continues to allocate all of the memory and does not allow memory growth.\n I also tested this with the canned estimator tf.estimator.DNNRegressor, and the settings were applied as expected when the RunConfig was passed to the estimator.\n Below is code to demonstrate this issue.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n Minimal example, runs to completion and trains successfully. But, changing the GPUOptions settings does not cause the GPU memory to be utilized as expected:\n import os\n import numpy as np\n import tensorflow as tf\n \n tf.logging.set_verbosity(tf.logging.INFO)\n \n # Neither of these GPUOptions are respected\n gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.5)\n #gpu_options = tf.GPUOptions(allow_growth=True)\n sess_config = tf.ConfigProto(gpu_options=gpu_options)\n run_config = tf.estimator.RunConfig(session_config=sess_config)\n \n inputs = tf.keras.layers.Input(shape=(10,))\n outputs = tf.keras.layers.Dense(10)(inputs)\n model = tf.keras.models.Model(inputs, outputs)\n model.compile(optimizer='sgd', loss='mse')\n est_keras = tf.keras.estimator.model_to_estimator(keras_model=model, config=run_config)\n \n input_name = model.input_names[0]\n data = np.random.rand(1000,10).astype(np.float32)\n train_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\n \n train_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100000)\n eval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\n tf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "droidicus", "commentT": "2017-11-22T00:37:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/fchollet>@fchollet</denchmark-link>\n  <denchmark-link:https://github.com/yifeif>@yifeif</denchmark-link>\n  May be related to <denchmark-link:https://github.com/tensorflow/tensorflow/issues/14504>#14504</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "droidicus", "commentT": "2017-11-27T19:47:08Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yifeif>@yifeif</denchmark-link>\n  could you please take a look.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "droidicus", "commentT": "2017-12-01T00:10:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ispirmustafa>@ispirmustafa</denchmark-link>\n  any idea? The run_config is passed in directly when creating the keras version of the Estimator. Do we need to pass these configurations anywhere else?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "droidicus", "commentT": "2017-12-01T19:11:22Z", "comment_text": "\n \t\tIt should not be related with Keras code. It should work since it is handled within Estimator.\n <denchmark-link:https://github.com/droidicus>@droidicus</denchmark-link>\n  could you please print est_keras.config and est_keras.config.cluster_spec.as_dict?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "droidicus", "commentT": "2017-12-03T17:00:01Z", "comment_text": "\n \t\tSure thing, here is the output:\n *********** est_keras.config *************************************\n <tensorflow.python.estimator.run_config.RunConfig object at 0x7f7694423fd0>\n *********** est_keras.config.cluster_spec.as_dict()  *************\n {}\n ******************************************************************\n Code to reproduce (same as the source in the origional issue above, but with print statements after the creation of the keras estimator), and full log output are avaliable here: <denchmark-link:https://gist.github.com/droidicus/146532eacf88ed57538bb41a8fc7da4b>https://gist.github.com/droidicus/146532eacf88ed57538bb41a8fc7da4b</denchmark-link>\n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "droidicus", "commentT": "2017-12-20T01:29:06Z", "comment_text": "\n \t\tIt has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "droidicus", "commentT": "2018-01-02T20:05:46Z", "comment_text": "\n \t\tGentle ping, this is still an issue for me.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "droidicus", "commentT": "2018-01-09T23:38:09Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/shivaniag>@shivaniag</denchmark-link>\n ,\n Estimator sends the given session_config directly to the Session constructor. Could you please assign somebody who is more familiar with tf.Session and it's handling of GPU settings?\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "droidicus", "commentT": "2018-01-09T23:39:52Z", "comment_text": "\n \t\tFYI, I've checked the keras.model_to_estimator. It's sending the config properly to tf.estimator.Estimator.\n tf.estimator.Estimator sends that config to tf.train.SessionManager calls which uses it as a constructor argument to tf.Session.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "droidicus", "commentT": "2018-01-10T00:04:09Z", "comment_text": "\n \t\tJust as an FYI, while this is still a problem in TFv1.5rc0 we were able to do the following as a workaround for now, by setting the default session manually the memory fraction is respected:\n import os\n import numpy as np\n import tensorflow as tf\n \n tf.logging.set_verbosity(tf.logging.INFO)\n \n gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.5)\n sess_config = tf.ConfigProto(gpu_options=gpu_options)\n # Manually set the default session instead\n tf.Session(config=sess_config).as_default()\n #run_config = tf.estimator.RunConfig(session_config=sess_config)\n \n inputs = tf.keras.layers.Input(shape=(10,))\n outputs = tf.keras.layers.Dense(10)(inputs)\n model = tf.keras.models.Model(inputs, outputs)\n model.compile(optimizer='sgd', loss='mse')\n est_keras = tf.keras.estimator.model_to_estimator(keras_model=model)#, config=run_config)\n \n input_name = model.input_names[0]\n data = np.random.rand(1000,10).astype(np.float32)\n train_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\n \n train_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100000)\n eval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\n tf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "droidicus", "commentT": "2018-01-10T00:14:24Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yifeif>@yifeif</denchmark-link>\n , <denchmark-link:https://github.com/fchollet>@fchollet</denchmark-link>\n   is there any place within underlying Keras code that uses default session while building the graph, train_op, ...?\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "droidicus", "commentT": "2018-01-23T22:57:11Z", "comment_text": "\n \t\tA member of the TensorFlow organization has replied after the stat:awaiting tensorflower label was applied.\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "droidicus", "commentT": "2018-02-07T13:43:59Z", "comment_text": "\n \t\tNagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "droidicus", "commentT": "2018-02-14T00:34:53Z", "comment_text": "\n \t\tSorry for the delay. <denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/_impl/keras/estimator.py#L147>This</denchmark-link>\n  is how model_to_estimator create its model_fn. <denchmark-link:https://github.com/ispirmustafa>@ispirmustafa</denchmark-link>\n  anything you see with session that should be done differently? Thanks!\n Also tried print out estimator.config.__dict__ and estimator.config.cluster_spec.__dict__ for canned estimator, custom estimator and keras converted estimator, and I'm seeing the same results:\n `\n *********** est_keras.config.dict *************************************\n {'_save_checkpoints_secs': 600, '_session_config': gpu_options {\n per_process_gpu_memory_fraction: 0.5\n }\n , '_keep_checkpoint_max': 5, '_task_type': 'worker', '_is_chief': True, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f8e3ebcabd0>, '_save_checkpoints_steps': None, '_keep_checkpoint_every_n_hours': 10000, '_service': None, '_num_ps_replicas': 0, '_tf_random_seed': None, '_master': '', '_num_worker_replicas': 1, '_task_id': 0, '_log_step_count_steps': 100, '_model_dir': '/tmp/tmp8jvdNt', '_save_summary_steps': 100}\n *********** est_keras.config.cluster_spec.dict  *************\n {'_cluster_def': , '_cluster_spec': {}}\n <denchmark-h:hr></denchmark-h>\n \n `\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "droidicus", "commentT": "2018-03-03T08:02:50Z", "comment_text": "\n \t\tNagging Assignees <denchmark-link:https://github.com/yifeif>@yifeif</denchmark-link>\n , <denchmark-link:https://github.com/shivaniag>@shivaniag</denchmark-link>\n , <denchmark-link:https://github.com/ispirmustafa>@ispirmustafa</denchmark-link>\n : It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.\n \t\t"}, "comments_15": {"comment_id": 16, "comment_author": "droidicus", "commentT": "2018-03-06T06:52:01Z", "comment_text": "\n \t\tA fix has been submitted internally and should make to master tomorrow. Thanks!\n \t\t"}, "comments_16": {"comment_id": 17, "comment_author": "droidicus", "commentT": "2018-03-06T19:34:10Z", "comment_text": "\n \t\tFantastic, thanks!\n \t\t"}}}, "commit": {"commit_id": "355fb5e14b325a1d106c4046f478da4bda350205", "commit_author": "Yifei Feng", "commitT": "2018-03-05 13:52:51-08:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\keras\\_impl\\keras\\estimator.py", "file_new_name": "tensorflow\\python\\keras\\_impl\\keras\\estimator.py", "file_complexity": {"file_NLOC": "177", "file_CCN": "22", "file_NToken": "1148"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "302,303,304,305,306", "deleted_lines": "299"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\_impl\\keras\\estimator_test.py", "file_new_name": "tensorflow\\python\\keras\\_impl\\keras\\estimator_test.py", "file_complexity": {"file_NLOC": "320", "file_CCN": "33", "file_NToken": "2508"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "381,382,383,384,385,386,387,388,389,390,391,392,393,394,395", "deleted_lines": null, "method_info": {"method_name": "test_gpu_config", "method_params": "self", "method_startline": "381", "method_endline": "395", "method_complexity": {"method_NLOC": "14", "method_CCN": "1", "method_NToken": "117", "method_nesting_level": "1"}}}}}}}}