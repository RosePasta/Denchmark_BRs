{"BR": {"BR_id": "38516", "BR_author": "phemmer", "BRopenT": "2020-04-14T02:12:53Z", "BRcloseT": "2020-04-15T20:47:00Z", "BR_text": {"BRsummary": "Cannot use set_visible_devices with mixed_precision", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): kind of. Combination of 2 example scripts\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux - Fedora 31\n Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\n TensorFlow installed from (source or\n binary): source\n TensorFlow version (use command below): v2.2.0-rc3-0-gaad398b5e9 2.2.0-rc3\n Python version: 3.7.6\n Bazel version (if compiling from source): 2.0.0\n GCC/Compiler version (if compiling from source): gcc (GCC) 9.2.1 20190827 (Red Hat 9.2.1-1)\n CUDA/cuDNN version: CUDA 10.2, cuDNN 7.6.5.33\n GPU model and memory: 2x GeForce RTX 2080 Ti 12gb\n \n Describe the current behavior\n When attempting to use tf.config.set_visible_devices() in conjunction with tf.python.keras.mixed_precision.experimental.policy.set_policy(), the Tensorflow errors with:\n <denchmark-code>RuntimeError: TensorFlow device (GPU:0) is being mapped to multiple CUDA devices (0 now, and 1 previously), which is not supported. This may be the result of providing different GPU configurations (ConfigProto.gpu_options, for example different visible_device_list) when creating multiple Sessions in the same process. This is not  currently supported, see https://github.com/tensorflow/tensorflow/issues/19083\n </denchmark-code>\n \n Describe the expected behavior\n No error\n Standalone code to reproduce the issue\n <denchmark-code>import tensorflow as tf\n devices = tf.config.list_physical_devices('GPU')\n tf.config.set_visible_devices(devices[1:], 'GPU')\n \n from tensorflow.python.keras.mixed_precision.experimental import policy as mixed_precision\n mixed_precision.set_policy(mixed_precision.Policy('mixed_float16'))\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "phemmer", "commentT": "2020-04-14T04:43:34Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/phemmer>@phemmer</denchmark-link>\n , I have run this code on google colab GPU but i don't found any issue. For your reference link of gist is <denchmark-link:https://gist.github.com/khimraj/262dbd66a71c266c81f17249f7ba67fe>here</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "phemmer", "commentT": "2020-04-14T04:49:59Z", "comment_text": "\n \t\tAnd google collab gives you multiple GPUs? I don't know what this will do if you only have 1 GPU\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "phemmer", "commentT": "2020-04-14T22:28:09Z", "comment_text": "\n \t\tUgh I thought I fixed this in <denchmark-link:https://github.com/tensorflow/tensorflow/commit/10e5748ddfcf0c60e5ef0a90bb72a34bc55190ec>10e5748</denchmark-link>\n  but didn't. I still call  even though I intended not to call it.\n I will fix, but I'm unsure if this can be cherrypicked into TF 2.2 this late in the process.\n As a hacky workaround, you can fix by adding the following lines of code anywhere before setting the policy.\n <denchmark-code>if tf.__version__.startswith('2.2.'):\n   from tensorflow.python.keras.mixed_precision.experimental import device_compatibility_check\n   device_compatibility_check.log_device_compatibility_check = lambda policy_name, skip_local: None\n </denchmark-code>\n \n This replaces the problematic function with one that does nothing. The function normally just logs some info. Due to this bug, the function fails if list_physical_devices is called.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "phemmer", "commentT": "2020-04-15T20:47:01Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38516>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38516>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "2730e4b0bcba80799ddc10f52081927848540f30", "commit_author": "Reed Wanderman-Milne", "commitT": "2020-04-15 13:44:29-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\mixed_precision\\experimental\\device_compatibility_check.py", "file_new_name": "tensorflow\\python\\keras\\mixed_precision\\experimental\\device_compatibility_check.py", "file_complexity": {"file_NLOC": "100", "file_CCN": "22", "file_NToken": "446"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "158", "deleted_lines": "157", "method_info": {"method_name": "log_device_compatibility_check", "method_params": "policy_name,skip_local", "method_startline": "137", "method_endline": "170", "method_complexity": {"method_NLOC": "16", "method_CCN": "6", "method_NToken": "72", "method_nesting_level": "0"}}}}}}}}