{"BR": {"BR_id": "32586", "BR_author": "guillaumekln", "BRopenT": "2019-09-17T12:35:38Z", "BRcloseT": "2019-09-17T22:09:08Z", "BR_text": {"BRsummary": "RNN does not forward the training flag to StackedRNNCells", "BRdescription": "\n System information\n \n Have I written custom code: Yes\n OS Platform and Distribution: Ubuntu 16.04\n TensorFlow installed from: binary\n TensorFlow version: 2.0.0rc0\n Python version: 3.6.6\n \n Describe the current behavior\n When using tf.keras.layers.StackedRNNCells with tf.keras.layers.RNN, the RNN layer does not forward the training flag to the cell. This is because the RNN code checks that cell explictly defines the training flag as argument, which tf.keras.layers.StackedRNNCells does not.\n <denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/recurrent.py#L709-L710>https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/recurrent.py#L709-L710</denchmark-link>\n \n Describe the expected behavior\n The training flag should be passed to tf.keras.layers.StackedRNNCells, and to each stacked cell.\n Code to reproduce the issue\n The code below should not raise the AssertionError:\n import tensorflow as tf\n \n class CellWrapper(tf.keras.layers.AbstractRNNCell):\n \n     def __init__(self, cell):\n         super(CellWrapper, self).__init__()\n         self.cell = cell\n \n     @property\n     def state_size(self):\n         return self.cell.state_size\n \n     @property\n     def output_size(self):\n         return self.cell.output_size\n \n     def get_initial_state(self, inputs=None, batch_size=None, dtype=None):\n         return self.cell.get_initial_state(\n             inputs=inputs, batch_size=batch_size, dtype=dtype)\n \n     def call(self, inputs, states, training=None, **kwargs):\n         assert training is not None\n \n \n cell = tf.keras.layers.LSTMCell(32)\n cell = CellWrapper(cell)\n cell = tf.keras.layers.StackedRNNCells([cell])\n \n rnn = tf.keras.layers.RNN(cell)\n inputs = tf.random.uniform([4, 7, 16])\n rnn(inputs, training=True)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "guillaumekln", "commentT": "2019-09-17T18:50:04Z", "comment_text": "\n \t\tWas able to reproduce this issue. Please find the attachment of github gist <denchmark-link:https://colab.sandbox.google.com/gist/gowthamkpr/6e1f7a532de56ec863606e7f1657f1c3/untitled144.ipynb>here</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "guillaumekln", "commentT": "2019-09-17T22:09:09Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=32586>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=32586>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "df2b252fa380994cd9236cc56b06557bcf12a9d3", "commit_author": "Scott Zhu", "commitT": "2019-09-17 15:06:57-07:00", "commit_complexity": {"commit_NLOC": "0.4444444444444444", "commit_CCN": "0.8888888888888888", "commit_Nprams": "0.7222222222222222"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\keras\\layers\\recurrent.py", "file_new_name": "tensorflow\\python\\keras\\layers\\recurrent.py", "file_complexity": {"file_NLOC": "2327", "file_CCN": "295", "file_NToken": "11147"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "122,135,136,137,138", "deleted_lines": "122", "method_info": {"method_name": "call", "method_params": "self,inputs,states,constants,kwargs", "method_startline": "122", "method_endline": "143", "method_complexity": {"method_NLOC": "17", "method_CCN": "7", "method_NToken": "183", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "122,135,136,137,138", "deleted_lines": "122", "method_info": {"method_name": "call", "method_params": "self,inputs,states,constants,training,kwargs", "method_startline": "122", "method_endline": "147", "method_complexity": {"method_NLOC": "21", "method_CCN": "8", "method_NToken": "215", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 7, "file_old_name": "tensorflow\\python\\keras\\layers\\recurrent_test.py", "file_new_name": "tensorflow\\python\\keras\\layers\\recurrent_test.py", "file_complexity": {"file_NLOC": "1363", "file_CCN": "96", "file_NToken": "12979"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "872,873,874", "deleted_lines": null, "method_info": {"method_name": "test_stacked_rnn_with_training_param.build", "method_params": "self,input_shape", "method_startline": "872", "method_endline": "874", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "860,861,862", "deleted_lines": null, "method_info": {"method_name": "test_stacked_rnn_with_training_param.__init__", "method_params": "self,cell", "method_startline": "860", "method_endline": "862", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "880,881,882", "deleted_lines": null, "method_info": {"method_name": "test_stacked_rnn_with_training_param.call", "method_params": "self,inputs,states,training,kwargs", "method_startline": "880", "method_endline": "882", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "36", "method_nesting_level": "3"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890", "deleted_lines": null, "method_info": {"method_name": "test_stacked_rnn_with_training_param", "method_params": "self", "method_startline": "855", "method_endline": "890", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "97", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "869,870", "deleted_lines": null, "method_info": {"method_name": "test_stacked_rnn_with_training_param.output_size", "method_params": "self", "method_startline": "869", "method_endline": "870", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "3"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "876,877,878", "deleted_lines": null, "method_info": {"method_name": "test_stacked_rnn_with_training_param.get_initial_state", "method_params": "self,inputs,batch_size,dtype", "method_startline": "876", "method_endline": "878", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "36", "method_nesting_level": "3"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "865,866", "deleted_lines": null, "method_info": {"method_name": "test_stacked_rnn_with_training_param.state_size", "method_params": "self", "method_startline": "865", "method_endline": "866", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "3"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\tools\\api\\golden\\v1\\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt", "file_new_name": "tensorflow\\tools\\api\\golden\\v1\\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "155", "deleted_lines": "155"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\tools\\api\\golden\\v2\\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt", "file_new_name": "tensorflow\\tools\\api\\golden\\v2\\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "155", "deleted_lines": "155"}}}}}}