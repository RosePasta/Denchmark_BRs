{"BR": {"BR_id": "17949", "BR_author": "denkuzin", "BRopenT": "2018-03-23T11:54:29Z", "BRcloseT": "2018-08-20T19:44:47Z", "BR_text": {"BRsummary": "incorrect description of num_sampled parameter in tf.nn.nce_loss() function: num_sampled is number of negative examples per 1 positive example (NOT per batch)", "BRdescription": "\n Hi all,\n Looks like parameter  in   function defines the number of negative examples per a positive example but not per a batch as described in tensorflow documentation (<denchmark-link:https://www.tensorflow.org/api_docs/python/tf/nn/nce_loss>https://www.tensorflow.org/api_docs/python/tf/nn/nce_loss</denchmark-link>\n )\n (see the next code)\n <denchmark-code>import tensorflow as tf\n import numpy as np\n # `_compute_sampled_logits` is invoked in nce_loss to generate negative sample and calculate logits\n from tensorflow.python.ops.nn_impl import _compute_sampled_logits\n \n embedding_size = 10\n words_number = 300\n batch_size = 3\n num_sampled = 3\n \n graph = tf.Graph()\n with graph.as_default():\n     # Input data.\n     train_inputs = tf.placeholder(tf.int32, shape=[batch_size])\n     train_labels = tf.placeholder(tf.int64, shape=[batch_size, 1])\n \n     with tf.device('/cpu:0'):\n         embeddings = tf.Variable(\n                 tf.random_uniform([words_number, embedding_size], -4., 4.))\n         embed = tf.nn.embedding_lookup(embeddings, train_inputs)\n         nce_weights = tf.Variable(\n                 tf.random_uniform([words_number, embedding_size], -4., 4.))\n         nce_biases = tf.Variable(tf.zeros([words_number]))\n         \n     logits, labels = _compute_sampled_logits(\n                        weights=nce_weights,\n                        biases=nce_biases,\n                        inputs=embed,\n                        labels=train_labels,\n                        num_true=1,\n                        num_sampled=num_sampled,\n                        num_classes=words_number,\n                        remove_accidental_hits = False)\n     init = tf.global_variables_initializer()\n \n \n session = tf.InteractiveSession(graph=graph)\n init.run(session=session)\n \n batch_inputs = np.array([0,1,2], dtype=np.int32)\n batch_labels = np.array([[3],[4],[5]], dtype=np.int32)\n \n feed_dict = {train_inputs : batch_inputs, train_labels : batch_labels}\n logits_val, labels_val = session.run([logits, labels], feed_dict=feed_dict)\n \n print (\"logits_val = {}\".format(logits_val))\n print (\"labels_val = {}\".format(labels_val))\n \n </denchmark-code>\n \n As a result, _compute_sampled_logits function generated num_sampled examples per 1 positive example:\n <denchmark-code>logits_val = [[ -8.18727493   2.02518415  14.18676853   0.51900673]\n  [ -8.97232056   5.60003376   4.52866602   3.68161726]\n  [ -0.36226368  -5.84330416  -3.39891291   5.58423615]]\n labels_val = [[ 1.  0.  0.  0.]\n  [ 1.  0.  0.  0.]\n  [ 1.  0.  0.  0.]]\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "denkuzin", "commentT": "2018-03-23T12:02:03Z", "comment_text": "\n \t\tMaybe it's not a bug but very significant typo in the documentation\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "denkuzin", "commentT": "2018-06-29T18:31:52Z", "comment_text": "\n \t\tFrom my limited understanding, I think the documentation is correct. The first logit in your output is computed from all true samples, not just from 1 true sample. The rest 3 logits are for the 3 random samples.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "denkuzin", "commentT": "2018-07-21T00:30:23Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/denkuzin>@denkuzin</denchmark-link>\n  thank you for pointing this out!\n <denchmark-link:https://github.com/MarkDaoust>@MarkDaoust</denchmark-link>\n  would you PTAL?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "denkuzin", "commentT": "2018-08-19T18:47:35Z", "comment_text": "\n \t\tNagging Assignee <denchmark-link:https://github.com/MarkDaoust>@MarkDaoust</denchmark-link>\n : It has been 29 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "denkuzin", "commentT": "2018-08-20T19:51:01Z", "comment_text": "\n \t\tHi denkuzin@,\n Thanks for the report. Here's a fix that I think clarifies what's actually happening here.\n \t\t"}}}, "commit": {"commit_id": "600caf99897e82cd0db8665acca5e7630ec1a292", "commit_author": "Mark Daoust", "commitT": "2018-08-20 12:42:36-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\ops\\nn_impl.py", "file_new_name": "tensorflow\\python\\ops\\nn_impl.py", "file_complexity": {"file_NLOC": "571", "file_CCN": "36", "file_NToken": "3791"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1213,1214,1215", "deleted_lines": "1213"}}}}}}