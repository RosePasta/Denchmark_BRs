{"BR": {"BR_id": "10729", "BR_author": "jkschin", "BRopenT": "2017-06-15T10:33:01Z", "BRcloseT": "2017-08-03T21:05:01Z", "BR_text": {"BRsummary": "tf.nn.max_pool wrong docs?", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n Not Applicable\n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n <denchmark-link:https://www.tensorflow.org/api_docs/python/tf/nn/max_pool>API</denchmark-link>\n  states that ksize has length >= 4, the size of window for each dimension of the input tensor. However, value is a 4-D Tensor so doesn't this mean that ksize should be length == 4? Same for strides.\n Digging into maxpooling_op.cc shows that there's some check that does ==. Line 212:\n <denchmark-code>    OP_REQUIRES(context, ksize_.size() == 4,\n                 errors::InvalidArgument(\"Sliding window ksize field must \"\n                                         \"specify 4 dimensions\"));\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jkschin", "commentT": "2017-06-15T23:48:21Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/martinwicke>@martinwicke</denchmark-link>\n , <denchmark-link:https://github.com/josh11b>@josh11b</denchmark-link>\n  , this seems to come from the attribute specifier only allowing a >= optionally and not ==.\n i.e.\n <denchmark-code>REGISTER_OP(\"AvgPool\")\n     .Input(\"value: T\")\n     .Output(\"output: T\")\n     .Attr(\"ksize: list(int) >= 4\")\n     .Attr(\"strides: list(int) >= 4\")\n     .Attr(GetPaddingAttrString())\n     .Attr(GetConvnetDataFormatAttrString())\n     .Attr(\"T: {half, float, double}\")\n     .SetShapeFn(shape_inference::AvgPoolShape)\n     .Doc(R\"doc(\n </denchmark-code>\n \n We can't make it list(int) == 4, because the op registration class doesn't support that for Attr. However, since the attribute constraint gets auto placed in the docs i.e. here:\n <denchmark-link:https://www.tensorflow.org/api_docs/python/tf/nn/max_pool>https://www.tensorflow.org/api_docs/python/tf/nn/max_pool</denchmark-link>\n \n It is confusing, maybe we should\n \n not  include the list constraints in auto-generated documentation.\n augment list constraints to allow == as well as >=.\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jkschin", "commentT": "2017-06-16T00:19:45Z", "comment_text": "\n \t\tTwo things we can do: support more constraint types (good, but work), and add support for = at the beginning of the doc string for attrs suppressing the generated prefix (which currently works for tensor inputs).\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "jkschin", "commentT": "2017-06-16T00:29:32Z", "comment_text": "\n \t\tIf you are accepting PRs for this and could point me to some resources to study how this works in detail (like the op registration class for one), I'd be happy to do one.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "jkschin", "commentT": "2017-06-16T19:18:48Z", "comment_text": "\n \t\tIf you want to fix the >= / = / == parsing issue, the code that processes that lives here in tensorflow/core/framework/op_def_builder.cc line 221ff. You could allow == as a token, and then we could use that in the Op registrations. There's no documentation for this, just the code.\n We would love a PR for that.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "jkschin", "commentT": "2017-06-16T21:02:22Z", "comment_text": "\n \t\tJosh also suggested there is a := syntax that lets you remove the constraint part in the docs and provide your own text completely.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "jkschin", "commentT": "2017-08-01T02:04:00Z", "comment_text": "\n \t\tAdded PR <denchmark-link:https://github.com/tensorflow/tensorflow/pull/11925>#11925</denchmark-link>\n  for the fix. As both  and  are wrapped in the python code, the fix only changes the docstring in tensorflow/python/ops/nn_ops.py.\n \t\t"}}}, "commit": {"commit_id": "d4a21196ac06e49f2581e27af62efc4efd5387c4", "commit_author": "Yong Tang", "commitT": "2017-08-03 14:05:00-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\ops\\nn_ops.py", "file_new_name": "tensorflow\\python\\ops\\nn_ops.py", "file_complexity": {"file_NLOC": "857", "file_CCN": "70", "file_NToken": "6151"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1753,1755", "deleted_lines": "1753,1755", "method_info": {"method_name": "max_pool", "method_params": "value,ksize,strides,padding,data_format,name", "method_startline": "1747", "method_endline": "1772", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "75", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "1724,1726", "deleted_lines": "1724,1726", "method_info": {"method_name": "avg_pool", "method_params": "value,ksize,strides,padding,data_format,name", "method_startline": "1715", "method_endline": "1744", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "75", "method_nesting_level": "0"}}}}}}}}