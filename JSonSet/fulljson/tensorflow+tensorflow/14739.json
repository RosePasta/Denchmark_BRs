{"BR": {"BR_id": "14739", "BR_author": "malmaud", "BRopenT": "2017-11-21T02:31:54Z", "BRcloseT": "2017-12-02T09:39:46Z", "BR_text": {"BRsummary": "Eager: Warn with invalid policy", "BRdescription": "\n If a user accidentally writes tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_WARN) instead of the correct tfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_WARN), they won't get an error until later in their program.\n For example, tfe.num_gpus() after  the incorrect enable call produces\n <denchmark-code>---------------------------------------------------------------------------\n AttributeError                            Traceback (most recent call last)\n <ipython-input-8-71d6509178f5> in <module>()\n ----> 1 tfe.num_gpus()\n \n ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus()\n     458     The number of available GPU devices.\n     459   \"\"\"\n --> 460   return context().num_gpus()\n \n ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus(self)\n     286   def num_gpus(self):\n     287     \"\"\"The number of GPUs available to execute operations.\"\"\"\n --> 288     self._initialize_handle_and_devices()\n     289     return self._num_gpus\n     290 \n \n ~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in _initialize_handle_and_devices(self)\n     121         with errors.raise_exception_on_not_ok_status() as status:\n     122           if self._config is not None:\n --> 123             config_str = self._config.SerializeToString()\n     124             pywrap_tensorflow.TFE_ContextOptionsSetConfig(\n     125                 opts, config_str, len(config_str), status)\n \n AttributeError: 'int' object has no attribute 'SerializeToString'\n </denchmark-code>\n \n I'd think it makes more sense to throw an error immediately after the incorrect enable_eager_execution.\n This is on  (<denchmark-link:https://github.com/tensorflow/tensorflow/commit/ab00df9b0b74910ca738e6ee850982f62ad42e55>ab00df9</denchmark-link>\n ).\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "malmaud", "commentT": "2017-11-25T06:31:40Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/asimshankar>@asimshankar</denchmark-link>\n  could you please take a look into this.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "malmaud", "commentT": "2017-11-28T01:10:15Z", "comment_text": "\n \t\tSounds like a fair request :), will send out a change to address this.\n \t\t"}}}, "commit": {"commit_id": "ba87a8030aa30f24c354cf705e79734658bb0a8b", "commit_author": "Asim Shankar", "commitT": "2017-11-28 12:22:09-08:00", "commit_complexity": {"commit_NLOC": "0.375", "commit_CCN": "0.375", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\framework\\ops.py", "file_new_name": "tensorflow\\python\\framework\\ops.py", "file_complexity": {"file_NLOC": "2596", "file_CCN": "645", "file_NToken": "13660"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "4798,4799,4800,4801,4802,4803,4804,4805,4806,4807", "deleted_lines": null, "method_info": {"method_name": "enable_eager_execution", "method_params": "config,device_policy", "method_startline": "4764", "method_endline": "4831", "method_complexity": {"method_NLOC": "34", "method_CCN": "12", "method_NToken": "193", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\framework\\ops_test.py", "file_new_name": "tensorflow\\python\\framework\\ops_test.py", "file_complexity": {"file_NLOC": "1931", "file_CCN": "203", "file_NToken": "17290"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2398,2399,2400,2401,2402,2403", "deleted_lines": null, "method_info": {"method_name": "testBadArgumentsToEnableEagerExecution", "method_params": "self", "method_startline": "2398", "method_endline": "2403", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "48", "method_nesting_level": "1"}}}}}}}}