{"BR": {"BR_id": "42386", "BR_author": "aingo03304", "BRopenT": "2020-08-15T06:55:39Z", "BRcloseT": "2021-01-03T19:21:30Z", "BR_text": {"BRsummary": "GradientTape.gradient needs to check target type.", "BRdescription": "\n \n \n \n tensorflow/tensorflow/python/eager/backprop.py\n \n \n          Line 991\n       in\n       b36436b\n \n \n \n \n \n \n        target: a list or nested structure of Tensors or Variables to be \n \n \n \n \n \n Recently, I wrote some code below which is very simple,\n tape.gradient(loss, model.trainable_variables)\n but it raises TypeError: Cannot convert value None to a Tensorflow DType.\n It turns out my custom loss function is returning None. yes, I know I was dumb.\n I had to check all of the related tensorflow code lines to find this dumb problem.\n So, I suggest the type checking block inside of this code.\n I think this suggestion can be helpful for fools like me.\n Thanks in advance :)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "aingo03304", "commentT": "2020-08-17T10:07:54Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/aingo03304>@aingo03304</denchmark-link>\n ,\n In order to expedite the trouble-shooting process, could you please provide the TensorFlow version, the complete code to reproduce the issue and the dataset you are using. Thanks!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "aingo03304", "commentT": "2020-08-18T06:26:06Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/amahendrakar>@amahendrakar</denchmark-link>\n  Thank you for the kind and quick response!\n You can reproduce with this code sample which is very simple.\n import tensorflow as tf\n def get_loss(y_true, y_pred):\n     pass\n \n with tf.GradientTape() as tape:\n     tape.gradient(get_loss(1, 2), None)\n It raises TypeError: Cannot convert value None to a TensorFlow DType.on tensorflow 2.3.0.\n It is foolish code, but the error is raised in tensorflow/python/framework/dtypes.py and the message doesn't tell you that the loss function is wrong.\n Because the error message should help people to find out where the code has a fault, I suggested you add some type check features in gradient function which is visible to users.\n And the docstring on gradient function says,\n <denchmark-code> Args:\n       target: a list or nested structure of Tensors or Variables to be\n         differentiated.\n       sources: a list or nested structure of Tensors or Variables. `target`\n         will be differentiated against elements in `sources`.\n       output_gradients: a list of gradients, one for each element of\n         target. Defaults to None.\n       unconnected_gradients: a value which can either hold 'none' or 'zero' and\n         alters the value which will be returned if the target and sources are\n         unconnected. The possible values and effects are detailed in\n         'UnconnectedGradients' and it defaults to 'none'.\n </denchmark-code>\n \n I would add the message like TypeError: target should be a list or nested structure of Tensors or Variables to be differentiated, but (TYPE) given.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "aingo03304", "commentT": "2020-08-21T05:47:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ymodak>@ymodak</denchmark-link>\n  Hi, can you tell me what the bug related to this issue? Just curious about it.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "aingo03304", "commentT": "2021-01-03T19:21:30Z", "comment_text": "\n \t\tClosing this issue since the <denchmark-link:https://github.com/tensorflow/tensorflow/commit/f25125e50bab365642335413356466883bf7f361>3edb086</denchmark-link>\n  commit fixes it. Thanks!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "aingo03304", "commentT": "2021-01-03T19:21:31Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42386>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42386>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "f25125e50bab365642335413356466883bf7f361", "commit_author": "A. Unique TensorFlower", "commitT": "2021-01-03 11:12:43-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\eager\\backprop.py", "file_new_name": "tensorflow\\python\\eager\\backprop.py", "file_complexity": {"file_NLOC": "692", "file_CCN": "128", "file_NToken": "3873"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1010,1032,1033,1034,1035,1036", "deleted_lines": null}}}}}}