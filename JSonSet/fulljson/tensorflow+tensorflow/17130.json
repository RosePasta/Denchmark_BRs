{"BR": {"BR_id": "17130", "BR_author": "benmosher", "BRopenT": "2018-02-19T15:01:11Z", "BRcloseT": "2018-02-23T05:43:34Z", "BR_text": {"BRsummary": "Java: SIGSEGV when `Tensors.create`-ing from an uninitialized array", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\n macOS 10.13.3\n JRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)\n TensorFlow installed from (source or binary): maven\n \n     <dependency>\n       <groupId>org.tensorflow</groupId>\n       <artifactId>tensorflow</artifactId>\n       <version>1.4.0</version>\n     </dependency>\n \n TensorFlow version (use command below): 1.4.0\n Python version: N/A\n Bazel version (if compiling from source): N/A\n GCC/Compiler version (if compiling from source): N/A\n CUDA/cuDNN version: N/A\n GPU model and memory: N/A\n Exact command to reproduce:\n \n     // JUnit test case\n     public void testSigSegv() {\n         byte[][] bb = new byte[3][];  // note: new byte[3][1] doesn't crash, presumably it is initialized by the compile\n \n         bb[0] = new byte[] { 0 };\n         bb[1] = new byte[] { 1 };\n         // no bb[2]\n \n         // next line sigsegv's\n         Tensors.create(bb);\n     }\n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n Using Tensors.create to get a Tensor<String> from an uninitialized 2D byte array (byte[][]) results in a SIGSEGV from JNI. See full log below.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n When running the above test case, I get the following output.\n <denchmark-code>#\n # A fatal error has been detected by the Java Runtime Environment:\n #\n #  SIGSEGV (0xb) at pc=0x000000010571f0b3, pid=30179, tid=0x0000000000001a03\n #\n # JRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)\n # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.121-b13 mixed mode bsd-amd64 compressed oops)\n # Problematic frame:\n # V  [libjvm.dylib+0x31f0b3]\n #\n # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n #\n # An error report file with more information is saved as:\n # /Users/ben/AGLabs/nfl/JavaProjects/nlp/hs_err_pid30179.log\n #\n # If you would like to submit a bug report, please visit:\n #   http://bugreport.java.com/bugreport/crash.jsp\n #\n \n Process finished with exit code 134 (interrupted by signal 6: SIGABRT)\n </denchmark-code>\n \n I'm not familiar enough with JNI in general to know if I'm expecting too much. I won't be surprised if you mark this wontfix, I was just surprised to be able to crash the process with a segfault given some bad data. Easy enough to work around (I will size/init my arrays more carefully) but thought you might want to know.\n Cheers! Thanks so much for this library!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "benmosher", "commentT": "2018-02-19T20:40:36Z", "comment_text": "\n \t\tThanks very much for the report! Yes, this is indeed a bug (it should not be possible to cause the JVM to segfault when using the Java API :).\n Will send a fix shortly.\n \t\t"}}}, "commit": {"commit_id": "624a2e47329fefa1f17373954ac541b0e42a9fca", "commit_author": "Asim Shankar", "commitT": "2018-02-20 13:40:07-08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "0.5"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tensorflow\\java\\src\\main\\native\\tensor_jni.cc", "file_new_name": "tensorflow\\java\\src\\main\\native\\tensor_jni.cc", "file_complexity": {"file_NLOC": "495", "file_CCN": "84", "file_NToken": "3422"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "453", "deleted_lines": null, "method_info": {"method_name": "Java_org_tensorflow_Tensor_allocateNonScalarBytes", "method_params": "env,clazz,shape,value", "method_startline": "436", "method_endline": "474", "method_complexity": {"method_NLOC": "37", "method_CCN": "5", "method_NToken": "261", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "403,404,405,406,407,409", "deleted_lines": null, "method_info": {"method_name": "nonScalarTF_STRINGTensorSize", "method_params": "env,value,num_dims", "method_startline": "391", "method_endline": "412", "method_complexity": {"method_NLOC": "20", "method_CCN": "5", "method_NToken": "141", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "431", "deleted_lines": "424", "method_info": {"method_name": "fillNonScalarTF_STRINGTensorData", "method_params": "env,value,num_dims,writer,status", "method_startline": "414", "method_endline": "433", "method_complexity": {"method_NLOC": "20", "method_CCN": "4", "method_NToken": "168", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\java\\src\\test\\java\\org\\tensorflow\\TensorTest.java", "file_new_name": "tensorflow\\java\\src\\test\\java\\org\\tensorflow\\TensorTest.java", "file_complexity": {"file_NLOC": "448", "file_CCN": "45", "file_NToken": "4123"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "541,542,543,544,545,546,547,548,549", "deleted_lines": null, "method_info": {"method_name": "TensorTest::gracefullyFailCreationFromNullArrayForStringTensor", "method_params": "", "method_startline": "541", "method_endline": "549", "method_complexity": {"method_NLOC": "7", "method_CCN": "2", "method_NToken": "37", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "435", "deleted_lines": "435", "method_info": {"method_name": "TensorTest::testCreateFromArrayOfBoxed", "method_params": "", "method_startline": "430", "method_endline": "437", "method_complexity": {"method_NLOC": "7", "method_CCN": "2", "method_NToken": "57", "method_nesting_level": "1"}}}}}}}}