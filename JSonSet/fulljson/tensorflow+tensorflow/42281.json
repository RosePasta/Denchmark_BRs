{"BR": {"BR_id": "42281", "BR_author": "DNXie", "BRopenT": "2020-08-12T20:06:58Z", "BRcloseT": "2020-10-27T00:19:52Z", "BR_text": {"BRsummary": "tf.nn.ctc_beam_search_decoder crashes(bad_alloc) when top_paths is large", "BRdescription": "\n Please make sure that this is a bug. As per our\n GitHub Policy,\n we only address code/doc bugs, performance issues, feature requests and\n build/installation issues on GitHub. tag:bug_template\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\n Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below):2.1.0\n Python version:3.7.6\n Bazel version (if compiling from source):N/A\n GCC/Compiler version (if compiling from source):N/A\n CUDA/cuDNN version:N/A\n GPU model and memory:N/A\n \n You can collect some of this information using our environment capture\n <denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh>script</denchmark-link>\n \n You can also obtain the TensorFlow version with:\n \n TF 1.0: python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\n TF 2.0: python -c \"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)\"\n \n Describe the current behavior\n tf.nn.ctc_beam_search_decoder crashes(bad_alloc) when top_paths is extremely large\n Describe the expected behavior\n Expect no crashes\n Standalone code to reproduce the issue\n Provide a reproducible test case that is the bare minimum necessary to generate\n the problem. If possible, please share a link to Colab/Jupyter/any notebook.\n import tensorflow as tf\n tf.nn.ctc_beam_search_decoder(inputs=tf.ones((1,1,1)), sequence_length=[1], top_paths=1000000000000)\n Other info / logs Include any logs or source code that would be helpful to\n diagnose the problem. If including tracebacks, please include the full\n traceback. Large logs and files should be attached.\n   what():  std::bad_alloc\n Aborted (core dumped)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "DNXie", "commentT": "2020-08-13T06:08:12Z", "comment_text": "\n \t\tI have tried in colab with TF version 2.1,2.3,nightly versions() and was able to reproduce the issue.Please, find the gist <denchmark-link:https://colab.research.google.com/gist/ravikyram/2969447f67d86720918d264620763d03/untitled247.ipynb>here</denchmark-link>\n .Thanks!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "DNXie", "commentT": "2020-08-18T16:56:59Z", "comment_text": "\n \t\tDepending on the version of TF i use, I get different errors.\n Internally; I get the error\n ValueError: Attr top_paths has value 1000000000000 out of range for an int32\n using python3.6; which I think is the real expected error.\n In OSS ipython3 I get the error:\n MemoryError: std::bad_alloc\n at the line\n <denchmark-code>--> 118   _result = _execute.execute(b\"CTCBeamSearchDecoder\", top_paths + top_paths +\n     119                              top_paths + 1, inputs=_inputs_flat, attrs=_attrs,\n     120                              ctx=ctx, name=name)\n </denchmark-code>\n \n (eager execution)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "DNXie", "commentT": "2020-08-18T16:58:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/alextp>@alextp</denchmark-link>\n  who should take this over?  looks like an error in attr size validation?  or perhaps we're allowing an int64 through when it should be an int32; and then differences in tcmalloc vs. some other malloc externally?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "DNXie", "commentT": "2020-08-18T16:58:53Z", "comment_text": "\n \t\tThe internal error is correctly identified here, I think:\n <denchmark-code>.../tensorflow/python/framework/ops.py in __init__(self, node_def, g, inputs, output_types, control_inputs, input_types, original_op, op_def)\n    2003         op_def = self._graph._get_op_def(node_def.op)\n    2004       self._c_op = _create_c_op(self._graph, node_def, inputs,\n -> 2005                                 control_input_ops, op_def)\n    2006       name = compat.as_str(node_def.name)\n    2007     # pylint: enable=protected-access\n \n .../tensorflow/python/framework/ops.py in _create_c_op(graph, node_def, inputs, control_inputs, op_def)\n    1843   except errors.InvalidArgumentError as e:\n    1844     # Convert to ValueError for backwards compatibility.\n -> 1845     raise ValueError(str(e))\n    1846 \n    1847   return c_op\n \n ValueError: Attr top_paths has value 1000000000000 out of range for an int32\n </denchmark-code>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "DNXie", "commentT": "2020-08-18T16:59:32Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/rohan100jain>@rohan100jain</denchmark-link>\n  can you help triage this? The error seems to be in the TF C API layer.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "DNXie", "commentT": "2020-10-27T00:19:54Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42281>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42281>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "7bd42cf6ba061ba7c06c072c9d962abe331461eb", "commit_author": "Rohan Jain", "commitT": "2020-10-26 17:18:34-07:00", "commit_complexity": {"commit_NLOC": "0.7906976744186046", "commit_CCN": "0.7906976744186046", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\core\\framework\\node_def_util.cc", "file_new_name": "tensorflow\\core\\framework\\node_def_util.cc", "file_complexity": {"file_NLOC": "736", "file_CCN": "159", "file_NToken": "5446"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "450,453,454,455,456", "deleted_lines": "450", "method_info": {"method_name": "tensorflow::AddArgToSig", "method_params": "", "method_startline": "445", "method_endline": "507", "method_complexity": {"method_NLOC": "59", "method_CCN": "15", "method_NToken": "482", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\core\\framework\\node_def_util_test.cc", "file_new_name": "tensorflow\\core\\framework\\node_def_util_test.cc", "file_complexity": {"file_NLOC": "588", "file_CCN": "30", "file_NToken": "3947"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "451,452,453,454,455,456,457,458,459,460,461,462,463", "deleted_lines": null, "method_info": {"method_name": "tensorflow::TEST", "method_params": "OutputTypesForNode,LargeOutput", "method_startline": "451", "method_endline": "463", "method_complexity": {"method_NLOC": "13", "method_CCN": "1", "method_NToken": "94", "method_nesting_level": "2"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\eager\\pywrap_tfe_src.cc", "file_new_name": "tensorflow\\python\\eager\\pywrap_tfe_src.cc", "file_complexity": {"file_NLOC": "3551", "file_CCN": "320", "file_NToken": "24452"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "3820,3823,3834,3837,3838,3839,3840,3841,3842,3843,3844,3845", "deleted_lines": "3820,3823,3834"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\eager\\pywrap_tfe_test.py", "file_new_name": "tensorflow\\python\\eager\\pywrap_tfe_test.py", "file_complexity": {"file_NLOC": "272", "file_CCN": "25", "file_NToken": "2225"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "241,242,243,244,245,246,247,248,249,250,251,252,253,254,255", "deleted_lines": null, "method_info": {"method_name": "testSlowPathExecute_VeryLargeOutputs", "method_params": "self", "method_startline": "241", "method_endline": "255", "method_complexity": {"method_NLOC": "13", "method_CCN": "1", "method_NToken": "115", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "229,230,231,232,233,234,235,236,237", "deleted_lines": null, "method_info": {"method_name": "testFastPathExecute_VeryLargeOutputs", "method_params": "self", "method_startline": "229", "method_endline": "237", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "81", "method_nesting_level": "1"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\tfe_wrapper.cc", "file_new_name": "tensorflow\\python\\tfe_wrapper.cc", "file_complexity": {"file_NLOC": "1317", "file_CCN": "71", "file_NToken": "10126"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "207,208,209,210,211,212,213", "deleted_lines": null, "method_info": {"method_name": "tensorflow::InputTFE_OutputTensorHandles", "method_params": "num_outputs", "method_startline": "189", "method_endline": "358", "method_complexity": {"method_NLOC": "141", "method_CCN": "17", "method_NToken": "1057", "method_nesting_level": "1"}}}}}}}}