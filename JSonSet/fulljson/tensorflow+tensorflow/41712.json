{"BR": {"BR_id": "41712", "BR_author": "EnderWiggin14", "BRopenT": "2020-07-24T21:08:42Z", "BRcloseT": "2020-07-28T22:08:19Z", "BR_text": {"BRsummary": "Conv1DTranspose Dilation support - Might be a bug, IDK.", "BRdescription": "\n Thank you for submitting a TensorFlow documentation issue. Per our GitHub\n policy, we only address code/doc bugs, performance issues, feature requests, and\n build/installation issues on GitHub.\n The TensorFlow docs are open source! To get involved, read the documentation\n contributor guide: <denchmark-link:https://www.tensorflow.org/community/contribute/docs>https://www.tensorflow.org/community/contribute/docs</denchmark-link>\n \n <denchmark-h:h2>URL(s) with the issue:</denchmark-h>\n \n Please provide a link to the documentation entry, for example:\n <denchmark-link:>https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv1DTranspose</denchmark-link>\n \n <denchmark-h:h2>Description of issue (what needs changing):</denchmark-h>\n \n Conv1DTranspose - Dilation - Does not inform uses that dilation doesn't work for any value  of Dilation>1 because it isn't implemented yet.\n <denchmark-h:h3>Clear description</denchmark-h>\n \n Currently documentation says:\n \"an integer, specifying the dilation rate to use for dilated convolution. Currently, specifying a dilation_rate value != 1 is incompatible with specifying a stride value != 1.\"\n This may not be implemented yet in the newest of nightly build, but with my tf-nightly==2.5.0dev20200629 build this didn't work. I fear updating to new nightly builds in case in breaks my research code which relies on nightly builds until Conv1DTranspose is released in a supported build.\n <denchmark-code>InvalidArgumentError:  Current libxsmm and customized CPU implementations do not yet support dilation rates larger than 1.\n \t [[node test1_AE/decoder/conv1d_transpose/conv1d_transpose (defined at D:\\Users\\[username]\\Desktop\\libs_python\\nn4n_autoencoder4.py:120) ]] [Op:__inference_train_function_2185]\n \n Function call stack:\n train_function\n </denchmark-code>\n \n This is with stride == 1.\n <denchmark-h:h3>Correct links</denchmark-h>\n \n <denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/convolutional.py>https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/convolutional.py</denchmark-link>\n \n <denchmark-h:h3>Parameters defined</denchmark-h>\n \n Yes, setting my dilation to 1 gets rid of the issue.\n <denchmark-h:h3>Returns defined</denchmark-h>\n \n Not necessary. (I'm not sure if you are asking if I have define returns in my code or if my code returns a defined value, or if the documentation claims to return something)\n <denchmark-h:h3>Raises listed and defined</denchmark-h>\n \n <denchmark-code>InvalidArgumentError:  Current libxsmm and customized CPU implementations do not yet support dilation rates larger than 1.\n \t [[node test1_AE/decoder/conv1d_transpose/conv1d_transpose (defined at D:\\Users\\[username]\\Desktop\\libs_python\\nn4n_autoencoder4.py:120) ]] [Op:__inference_train_function_2185]\n \n Function call stack:\n train_function\n </denchmark-code>\n \n <denchmark-h:h3>Usage example</denchmark-h>\n \n Nightly build, so no.\n <denchmark-h:h3>Request visuals, if applicable</denchmark-h>\n \n No.\n <denchmark-h:h3>Submit a pull request?</denchmark-h>\n \n I will not be doing so.\n <denchmark-h:h3>Test Code</denchmark-h>\n \n Note 1: This is built with tf-nightly==2.5.0dev20200626 which was removed from the PyPi archive for unknown reasons.\n Note 2: model.fit must be called for the error to occur. Simpy constructing and compiling the network was not enough to reproduce the error.\n <denchmark-code>import tensorflow as tf\n import tensorflow.keras as krs\n import numpy as np\n \n train_data = np.random.uniform(-1,1,(20,20))\n \n inputs = krs.Input((20,1))\n \n x = inputs\n \n x = krs.layers.Conv1D(1,3,strides = 1,padding='same',dilation_rate=2,activation='relu')(x)\n x = krs.layers.Flatten()(x)\n x = krs.layers.Dense(10,activation='relu')(x)\n x = krs.layers.Dense(2,activation='relu')(x)\n x = krs.layers.Dense(10,activation='relu')(x)\n x = krs.layers.Dense(20,activation='relu')(x)\n x = krs.layers.Reshape(target_shape=(20,1))(x)\n x = krs.layers.Conv1DTranspose(1,3,strides=1,dilation_rate=2,padding='same',activation='relu',output_padding=0)(x)\n output = krs.layers.Flatten()(x)\n \n model = krs.Model(inputs,output,name='test')\n \n model.compile(optimizer='adam',loss='MSE')\n \n model.summary()\n \n model.fit(train_data,train_data)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "EnderWiggin14", "commentT": "2020-07-27T04:48:39Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/EnderWiggin14>@EnderWiggin14</denchmark-link>\n \n Could you please update the issue template, we do not find any details.\n Please provide with simple indented stand alone code such that we can replicate the issue faced or if possible please provide a colab gist with error faced.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "EnderWiggin14", "commentT": "2020-07-27T12:49:30Z", "comment_text": "\n \t\tWell, this was originally labeled as a Documentation issue so that \"Details\" section wasn't part of the standard template. I will try to get a short example added to the issue.\n Update: I have added code that reproduces the error on my system.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "EnderWiggin14", "commentT": "2020-07-27T14:05:38Z", "comment_text": "\n \t\tI ran the code on nightly, please find the <denchmark-link:https://colab.research.google.com/gist/Saduf2019/c7953f7c83b7c403adadec092931076f/untitled284.ipynb>gist here</denchmark-link>\n  and on <denchmark-link:https://colab.research.google.com/gist/Saduf2019/79a85b1424a878f63d7fa31b369c5f68/untitled296.ipynb>2.3.0rc0 the dilation support error is seen as reported</denchmark-link>\n .\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "EnderWiggin14", "commentT": "2020-07-27T17:01:13Z", "comment_text": "\n \t\tIt is very odd that the TF nightly build used in the GIST (tf-nightly==2.4.0dev20200724) doesn't have Conv1DTranspose() support. I have another system that's running a slightly older tf-nightly build (tf-nightly==2.3.0dev20200622) which was still available 2-3 weeks ago but appears to now be deleted. This is one of the two builds that I actively use as well, and it supports the Conv1DTranspose() method, but also lacks the dilation support.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "EnderWiggin14", "commentT": "2020-07-27T18:21:08Z", "comment_text": "\n \t\tI can repro this with latest nightly build. See <denchmark-link:https://colab.research.google.com/gist/ymodak/a230402addcdda55e1cb87f7c1447ab7/untitled284.ipynb>gist</denchmark-link>\n \n When  and  in the  layer the code executes successfully.\n However for dilation_rate > 1 it fails.\n Perhaps the documentation can be updated for the  parameter. Thanks!\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "EnderWiggin14", "commentT": "2020-07-28T22:08:19Z", "comment_text": "\n \t\tDocs are updated now.  See commit <denchmark-link:https://github.com/tensorflow/tensorflow/commit/75801da4cd321aabbf79e78da1e5de1a10ba4c2a#diff-aa6c341a4b212afc57b49be73e689dc2>75801da</denchmark-link>\n \n Thanks!\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "EnderWiggin14", "commentT": "2020-07-29T16:57:38Z", "comment_text": "\n \t\tThanks! Is there any news as to when the dilation_rate > 1 will be supported?\n \t\t"}}}, "commit": {"commit_id": "75801da4cd321aabbf79e78da1e5de1a10ba4c2a", "commit_author": "A. Unique TensorFlower", "commitT": "2020-07-27 11:48:35-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\keras\\layers\\convolutional.py", "file_new_name": "tensorflow\\python\\keras\\layers\\convolutional.py", "file_complexity": {"file_NLOC": "3166", "file_CCN": "234", "file_NToken": "12883"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "865", "deleted_lines": null}}}}}}