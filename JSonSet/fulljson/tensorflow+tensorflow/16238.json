{"BR": {"BR_id": "16238", "BR_author": "namrata-ibm", "BRopenT": "2018-01-19T10:25:54Z", "BRcloseT": "2018-01-26T05:31:42Z", "BR_text": {"BRsummary": "//tensorflow/contrib/gan:losses_impl_test fails with AssertionError", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04  s390x\n TensorFlow installed from (source or binary): Source\n TensorFlow version (use command below): v1.4.1\n Python version: 2.7.12\n Bazel version (if compiling from source): 0.7.0\n GCC/Compiler version (if compiling from source): 5.4.0\n CUDA/cuDNN version: No GPU\n GPU model and memory: NA\n Exact command to reproduce: bazel test -c opt //tensorflow/contrib/gan:losses_impl_test\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n One of the sub-test test_stable_global_norm_unchanged fails on s390x with\n AssertionError: 110.709068 != 110.709084 +/- 0.000010\n Seems like a minor difference, so I tried changing the tolerance slightly as below:\n <denchmark-code>-        self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\n +        self.assertNear(gnorm_np, precond_gnorm_np, 2e-5)\n </denchmark-code>\n \n with this the test is passing.\n Is it ok to create a PR with this change? Could you please share your thoughts on this.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n <denchmark-code>.......................F..................................................................................\n ======================================================================\n FAIL: test_stable_global_norm_unchanged (__main__.CombineAdversarialLossTest)\n Test that preconditioning doesn't change global norm value.\n ----------------------------------------------------------------------\n Traceback (most recent call last):\n   File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/contrib/gan/python/losses/python/losses_impl_test.py\", line 602, in test_stable_global_norm_unchanged\n     self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\n   File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 879, in assertNear\n     if msg is not None else \"\"))\n AssertionError: 110.709068 != 110.709084 +/- 0.000010\n \n ----------------------------------------------------------------------\n Ran 106 tests in 9.119s\n \n FAILED (failures=1)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "namrata-ibm", "commentT": "2018-01-19T21:00:09Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yifeif>@yifeif</denchmark-link>\n : any reason loosening this bound would not be acceptable?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "namrata-ibm", "commentT": "2018-01-24T00:17:32Z", "comment_text": "\n \t\tredirect to <denchmark-link:https://github.com/joel-shor>@joel-shor</denchmark-link>\n  who owns tf.contrib.gan. Joel do you mind taking a look? Thanks!\n \t\t"}}}, "commit": {"commit_id": "4383f3d002ddb0712a7aac3303cde6e599de65eb", "commit_author": "Joel Shor", "commitT": "2018-01-25 21:30:45-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\contrib\\gan\\python\\losses\\python\\losses_impl_test.py", "file_new_name": "tensorflow\\contrib\\gan\\python\\losses\\python\\losses_impl_test.py", "file_complexity": {"file_NLOC": "519", "file_CCN": "67", "file_NToken": "4821"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "623", "deleted_lines": "623", "method_info": {"method_name": "test_stable_global_norm_unchanged", "method_params": "self", "method_startline": "613", "method_endline": "623", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "104", "method_nesting_level": "1"}}}}}}}}