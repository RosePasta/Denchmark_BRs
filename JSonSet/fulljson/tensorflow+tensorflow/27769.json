{"BR": {"BR_id": "27769", "BR_author": "zzh8829", "BRopenT": "2019-04-12T05:30:00Z", "BRcloseT": "2019-08-09T17:45:51Z", "BR_text": {"BRsummary": "[TF 2.0 keras] Unable save and load weights for double nested models", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): mac\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below): 2.0.0\n Python version: 3.7\n \n Describe the current behavior\n load_weights throw exception on a doubly nested model\n Describe the expected behavior\n load_weights should work\n This problem only happens on two+ layers of nested model with non-trainable weights.\n The reason is save_weights and load_weights handles nested model differently\n save_weights -> call layer.weights for each layer\n load_weights -> recursively call model.weights if layer is a nested Model\n Code to reproduce the issue\n <denchmark-code>import tensorflow as tf\n from tensorflow.keras import Model\n from tensorflow.keras.layers import Input, Conv2D, BatchNormalization\n \n shape = (None, None, 3)\n \n def BNModel():\n     x = inputs = Input(shape)\n     x = Conv2D(3, 1)(x)\n     x = BatchNormalization()(x)\n     return Model(inputs, x)\n \n x = inner_inputs = Input(shape)\n x = BNModel()(x)\n x = BNModel()(x)\n inner_model = Model(inner_inputs, x)\n \n inputs = Input(shape)\n model = Model(inputs, inner_model(inputs))\n \n inner_model.save_weights('test.h5')\n inner_model.load_weights('test.h5')  # works fine\n \n model.save_weights('test.h5')\n model.load_weights('test.h5')   # Exception: axes don't match array !!!\n </denchmark-code>\n \n \n This bug is also reported on upstream keras <denchmark-link:https://github.com/keras-team/keras/pull/11847>keras-team/keras#11847</denchmark-link>\n \n Here is a detailed analysis on why this is happening <denchmark-link:https://github.com/keras-team/keras/pull/11847#issuecomment-482438283>keras-team/keras#11847 (comment)</denchmark-link>\n \n Full Exception\n <denchmark-code>  File \"test.py\", line 27, in <module>\n     model.load_weights('test.h5')   # Exception: axes don't match array !!!\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/engine/network.py\", line 1497, in load_weights\n     hdf5_format.load_weights_from_hdf5_group(f, self.layers)\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py\", line 751, in load_weights_from_hdf5_group\n     layer, weight_values, original_keras_version, original_backend)\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py\", line 377, in preprocess_weights_for_loading\n     weights = convert_nested_model(weights)\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py\", line 365, in convert_nested_model\n     original_backend=original_backend))\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py\", line 377, in preprocess_weights_for_loading\n     weights = convert_nested_model(weights)\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py\", line 353, in convert_nested_model\n     original_backend=original_backend))\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py\", line 459, in preprocess_weights_for_loading\n     weights[0] = np.transpose(weights[0], (3, 2, 0, 1))\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py\", line 598, in transpose\n     return _wrapfunc(a, 'transpose', axes)\n   File \"/usr/local/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py\", line 51, in _wrapfunc\n     return getattr(obj, method)(*args, **kwds)\n ValueError: axes don't match array\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "zzh8829", "commentT": "2019-04-12T14:09:17Z", "comment_text": "\n \t\tThis only affected .h5 format, tensorflow checkpoints format works fine.\n I guess alternatively we can tell users to not use h5 format instead of fixing it\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "zzh8829", "commentT": "2019-05-03T06:42:37Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/zzh8829>@zzh8829</denchmark-link>\n   What is the alternative way to save a model/weights? I am having this proble min .hdf5 fromat too.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "zzh8829", "commentT": "2019-05-04T21:05:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/abhigyank>@abhigyank</denchmark-link>\n  the alternative is save to  which will create tensorflow checkpoint files instead of hdf5.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "zzh8829", "commentT": "2019-06-18T16:14:03Z", "comment_text": "\n \t\tAny news on this issue?\n I tried the *.tf and it works.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "zzh8829", "commentT": "2019-06-20T09:50:07Z", "comment_text": "\n \t\tIt might seem like .tf saving works but in my experience the only difference is that it doesn't throw an error.\n Steps to reproduce:\n Make a model with nested models and set some layers to trainable=False\n Train for some epochs\n Save weights\n Evaluate and save metrics\n Clear everything\n Make model\n Load weights\n Evaluate\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "zzh8829", "commentT": "2019-06-20T22:06:07Z", "comment_text": "\n \t\tI am currently submitting a fix for H5.\n <denchmark-link:https://github.com/veqtor>@veqtor</denchmark-link>\n  What problem are you seeing with using the TF format?\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "zzh8829", "commentT": "2019-07-01T00:23:59Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/k-w-w>@k-w-w</denchmark-link>\n  I have tested your fix and it works for me  Thank you a lot!\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "zzh8829", "commentT": "2019-08-05T11:24:18Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/k-w-w>@k-w-w</denchmark-link>\n  How can I use your fix? I have the same problem.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "zzh8829", "commentT": "2019-08-05T19:49:39Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/19giorgosts>@19giorgosts</denchmark-link>\n  The fix should be in tensorflow-nightly, which you can install using \n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "zzh8829", "commentT": "2019-08-07T02:57:20Z", "comment_text": "\n \t\t\n It might seem like .tf saving works but in my experience the only difference is that it doesn't throw an error.\n Steps to reproduce:\n Make a model with nested models and set some layers to trainable=False\n Train for some epochs\n Save weights\n Evaluate and save metrics\n Clear everything\n Make model\n Load weights\n Evaluate\n \n I am new coder to keras\u3002 Can you show me a demo about your description?\n Thx\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "zzh8829", "commentT": "2019-08-09T17:45:50Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Lannist>@Lannist</denchmark-link>\n  <denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/0153524fb3f6e0b114ace9da25ac3f77/tf_27769_saveweights_tfformat.ipynb>Here</denchmark-link>\n  is the colab gist to save/load the weights in *.tf format. Here is the <denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/48daec236b2c8a5c8cf7a482f258ee8a/tf_27769_saveweights_h5format.ipynb>gist</denchmark-link>\n  to save/load the weights in *.h5 format. The only difference between those two gist is in changing the extension. Thanks!\n I am closing the issue as it was resolved in tf-nightly. Please feel free to open if the issue persists again. Thanks!\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "zzh8829", "commentT": "2019-08-09T17:45:52Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=27769>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=27769>No</denchmark-link>\n \n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "zzh8829", "commentT": "2020-05-06T09:08:50Z", "comment_text": "\n \t\tis this change gonna be in tf 1 ?\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "zzh8829", "commentT": "2020-05-13T01:39:19Z", "comment_text": "\n \t\t\n is this change gonna be in tf 1 ?\n \n have you found the solution?\n I using the tensorflow 1.1.4 and meet the same error but can not find way to fix it\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "zzh8829", "commentT": "2020-05-13T01:39:57Z", "comment_text": "\n \t\t\n @19giorgosts The fix should be in tensorflow-nightly, which you can install using pip install tf-nightly\n \n how about tensorflow 1.1.4 or 1.1.5\n can not install tensorflow-nightly by pip\n \t\t"}}}, "commit": {"commit_id": "f42549a91a3759a9264ef4d44e9224be4ee3bdc3", "commit_author": "Katherine Wu", "commitT": "2019-06-20 17:39:20-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\saving\\hdf5_format.py", "file_new_name": "tensorflow\\python\\keras\\saving\\hdf5_format.py", "file_complexity": {"file_NLOC": "421", "file_CCN": "107", "file_NToken": "3443"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "275,276,277,278,279,282,283,284,285,287,288,290,291,292,293,294,295,296,297,298", "deleted_lines": "275,276,277,278,279,280,281,282,283,284,285,287,289,290,291,292,294,296,297,298", "method_info": {"method_name": "convert_nested_model", "method_params": "weights", "method_startline": "263", "method_endline": "298", "method_complexity": {"method_NLOC": "21", "method_CCN": "3", "method_NToken": "136", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tensorflow\\python\\keras\\saving\\hdf5_format_test.py", "file_new_name": "tensorflow\\python\\keras\\saving\\hdf5_format_test.py", "file_complexity": {"file_NLOC": "905", "file_CCN": "83", "file_NToken": "8157"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "269,272,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,294", "deleted_lines": "268,269,271,274,275,276,278,279,280,281,283,288,289,290,291,292,293,294", "method_info": {"method_name": "test_nested_model_weight_loading", "method_params": "self", "method_startline": "260", "method_endline": "298", "method_complexity": {"method_NLOC": "18", "method_CCN": "2", "method_NToken": "125", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "274,275,276,277,278", "deleted_lines": "274,275,276,278", "method_info": {"method_name": "test_nested_model_weight_loading.test_nested_model_weight_loading.gen_model.seq_model", "method_params": "", "method_startline": "274", "method_endline": "278", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "39", "method_nesting_level": "4"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "272,274,275,276,277,278,280,281,282,283,284,285,286", "deleted_lines": "274,275,276,278,279,280,281,283", "method_info": {"method_name": "test_nested_model_weight_loading.gen_model", "method_params": "", "method_startline": "272", "method_endline": "286", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "76", "method_nesting_level": "3"}}}}}}}}