{"BR": {"BR_id": "29439", "BR_author": "danieltudosiu", "BRopenT": "2019-06-05T12:45:29Z", "BRcloseT": "2019-11-12T00:19:09Z", "BR_text": {"BRsummary": "Unittest and test_session interaction", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\n Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below): 1.12.1 / 1.13.1 / 1.14.0rc0\n Python version: 3.5 / 3.6 / 3.7\n Bazel version (if compiling from source): N/A\n GCC/Compiler version (if compiling from source): N/A\n CUDA/cuDNN version: 10.0.130\n GPU model and memory: 7.5.0\n \n Environment capture available at: <denchmark-link:https://pastebin.com/N26BUeSy>https://pastebin.com/N26BUeSy</denchmark-link>\n \n Describe the current behavior\n Additional \"ghost\" tests are being run but skipped when using unittest with Tensorflow TestCase class. This behavior is present in 1.12.1. When upgrading to 1.13.1 or 1.14.0rc0, the tests are being skipped entirely as the \"ghost\" test is in regards to the test_session method that you have within the tensorflow.python.framework.testutils and unittest believes that the tests are not actually tests.\n Describe the expected behavior\n No \"ghost\" tests should be run at all in 1.12.1 and the tests work in 1.13.1 and 1.14.0rc0.\n Code to reproduce the issue\n <denchmark-code>import tensorflow as tf\n import numpy as np\n import unittest\n \n print(tf.__version__)\n \n def get_entry_np(t, indices_d1, indices_d2, batch_size):\n     result = np.zeros(batch_size)\n     for i in range(batch_size):\n         result[i] = t[i, indices_d1[i], indices_d2[i]]\n     return result\n     \n \n def get_entry_tf(t, indices_d1, indices_d2, batch_size):\n     indices = tf.stack([tf.range(batch_size), indices_d1, indices_d2], axis=1)\n     return tf.gather_nd(t, indices)\n \n ## Start of region of interest\n # Please enable and disable this region with Tensorflow 1.12.1 and then with 1.13.1 or 1.14.0rc0 and the behaviour will be seen   \n try:\n     delattr(tf.test.TestCase,'test_session')\n except AttributeError:\n     pass\n \n class OwnTestCase(tf.test.TestCase):\n     pass\n ## End of region of interest\n class TestCaseTest(tf.test.TestCase):\n         \n     def test_get_entry(self):\n         success = True\n         for _ in range(10):\n             # sample input\n             batch_size, d1, d2 = map(int, np.random.randint(low=2, high=100, size=3))\n             test_input = np.random.random([batch_size, d1, d2])\n             test_indices_d1 = np.random.randint(low=0, high=d1-1, size=[batch_size])\n             test_indices_d2 = np.random.randint(low=0, high=d2-1, size=[batch_size])\n             # evaluate the numpy version\n             test_result = get_entry_np(test_input, test_indices_d1, test_indices_d2, batch_size)\n             # evaluate the tensorflow version\n             with self.cached_session() as sess:\n                 tf_input = tf.constant(test_input, dtype=tf.float32)\n                 tf_indices_d1 = tf.constant(test_indices_d1, dtype=tf.int32)\n                 tf_indices_d2 = tf.constant(test_indices_d2, dtype=tf.int32)\n                 tf_result = get_entry_tf(tf_input, tf_indices_d1, tf_indices_d2, batch_size)\n                 tf_result = sess.run(tf_result)\n                 # check that outputs are similar\n                 success = success and np.allclose(test_result, tf_result)\n     \n         self.assertEqual(success, True)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "danieltudosiu", "commentT": "2019-06-05T13:36:47Z", "comment_text": "\n \t\tTo expand on this, unittest is search for method names and finds tf.test.TestCast.test_session. This is treated as a test which is erroneous and so gets logged as \"Not a test.\". However it also causes actual tests to be ignored as well in this manner. Deleting the method entirely allows tests to run as the above code shows.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "danieltudosiu", "commentT": "2019-06-11T17:35:46Z", "comment_text": "\n \t\tWhy would it cause actual tests to be ignored? I'm confused.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "danieltudosiu", "commentT": "2019-06-11T17:53:08Z", "comment_text": "\n \t\tWhat appears to be happening is the unittest framework is being used to search for methods beginning with \"test\". The test_session method is found to be one of these erroneously and causes tests to be skipped. We haven't been able to figure out why this wasn't a problem in the past. Our tests in TF 1.12 work correctly but having upgraded to 1.13 (and then tried 1.14 rc0) they acquire this skipping behaviour.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "danieltudosiu", "commentT": "2019-06-11T18:11:15Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/gunan>@gunan</denchmark-link>\n  do you know who maintains TestCase?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "danieltudosiu", "commentT": "2019-06-11T19:52:20Z", "comment_text": "\n \t\tI have been aware of the issue around \"test_session\", but afaik it has been that way for a very very long time. Here is the line that skips \"test_session\"\n <denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L1747>https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L1747</denchmark-link>\n \n A little investigation showed that we moved around the \"skip\" logic recently with this commit:\n <denchmark-link:https://github.com/tensorflow/tensorflow/commit/f9f50b6cf831cdfef15d952152f43ba6542a14ad>f9f50b6</denchmark-link>\n \n And I think that may be why you are seeing your tests that have the name \".test_session\" skipped.\n Pinging <denchmark-link:https://github.com/eddie-zhou>@eddie-zhou</denchmark-link>\n  <denchmark-link:https://github.com/mrry>@mrry</denchmark-link>\n  for the change.\n For the resolution, I think this is just the fallout from a small bad design decision we had within TensorFlowTestCase. We should document this behaviour to avoid the pain you went through. But my recommendation for the resolution would be to rename the tests, but have this behaviour documented. Maybe instead of \"Not a test\" the message can say \"due to test_session method in tensorflowTestCase, all tests with this name are skipped. Please rename your tests\"?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "danieltudosiu", "commentT": "2019-06-11T20:14:30Z", "comment_text": "\n \t\tI believe <denchmark-link:https://github.com/gunan>@gunan</denchmark-link>\n  is correct, and his suggestion seems reasonable.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "danieltudosiu", "commentT": "2019-06-11T21:15:07Z", "comment_text": "\n \t\tWe can try something like that. We're changing tests around a bit anyway so we can do that. The issue we noticed was that tests were getting skipped that didn't even use test_session nor have that in their names at all. We found it hard to correlate behaviour with what methods we were calling. Our solution of deleting test_session from the class works but of course is horrid. Thanks for the help.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "danieltudosiu", "commentT": "2019-06-11T23:09:07Z", "comment_text": "\n \t\tI agree with you that it is not a great solution.\n Thankfully, test_session is deprecated and is planned to be removed. At which point we can remove it completely from the TestCase class and remove the hack. Sorry for the inconvenience!\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "danieltudosiu", "commentT": "2019-11-12T00:19:10Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29439>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29439>No</denchmark-link>\n \n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "danieltudosiu", "commentT": "2020-03-06T23:22:36Z", "comment_text": "\n \t\tFor someone who might find this in the future by Googling:\n If you are using pytest, you could write a conftest.py (in the project root, etc.) file including the following hook, to have test_sessions not collected rather than skipped:\n def pytest_collection_modifyitems(session, config, items):\n   \"\"\"Do not collect TensorFlowTestCase.test_sesion as a test case.\"\"\"\n   items[:] = [item for item in items if not (\n     item.location[0].endswith('test_util.py') and item.name == 'test_session')]\n Reference: <denchmark-link:https://docs.pytest.org/en/latest/reference.html>https://docs.pytest.org/en/latest/reference.html</denchmark-link>\n \n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "danieltudosiu", "commentT": "2020-03-11T06:48:45Z", "comment_text": "\n \t\tUnfortunately, TF is not using pytest, our testing libraries are derived from <denchmark-link:https://docs.python.org/2/library/unittest.html>python unittest</denchmark-link>\n . So I do not think the above solution will work in this case.\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "danieltudosiu", "commentT": "2020-06-19T00:40:34Z", "comment_text": "\n \t\t\n What appears to be happening is the unittest framework is being used to search for methods beginning with \"test\". The test_session method is found to be one of these erroneously and causes tests to be skipped. We haven't been able to figure out why this wasn't a problem in the past. Our tests in TF 1.12 work correctly but having upgraded to 1.13 (and then tried 1.14 rc0) they acquire this skipping behaviour.\n \n Yes this appears to have happened\n \t\t"}}}, "commit": {"commit_id": "1e30076f57bf30838b5cb2e59f05e13deb944d1b", "commit_author": "Gunhan Gulsoy", "commitT": "2019-11-11 16:18:19-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\framework\\test_util.py", "file_new_name": "tensorflow\\python\\framework\\test_util.py", "file_complexity": {"file_NLOC": "1571", "file_CCN": "448", "file_NToken": "11098"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2170,2171,2172,2173,2174", "deleted_lines": "2170"}}}}}}