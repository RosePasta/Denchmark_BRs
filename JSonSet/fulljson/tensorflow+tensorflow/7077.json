{"BR": {"BR_id": "7077", "BR_author": "Mazecreator", "BRopenT": "2017-01-25T22:09:43Z", "BRcloseT": "2017-01-26T19:25:19Z", "BR_text": {"BRsummary": "TensorBoard ImportError: No module named werkzeug", "BRdescription": "\n using the current HEAD of tensorflow, I have bumped into an issue when I execute tensorboard.\n Version is reported as: 0.12.head\n git rev-parse HEAD: <denchmark-link:https://github.com/tensorflow/tensorflow/commit/a12c7dc3d83049e10c1dca8903d73cc71d3cb7b2>a12c7dc</denchmark-link>\n \n Linux: Linux tensor 4.4.0-53-generic <denchmark-link:https://github.com/tensorflow/tensorflow/issues/74>#74</denchmark-link>\n -Ubuntu SMP Fri Dec 2 15:59:10 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n \n 2017-01-25 17:02:36: I tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcudnn.so.5 locally\n 2017-01-25 17:02:36: I tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcufft.so.8.0 locally\n 2017-01-25 17:02:36: I tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcuda.so.1 locally\n 2017-01-25 17:02:36: I tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcurand.so.8.0 locally\n Traceback (most recent call last):\n File \"/usr/local/bin/tensorboard\", line 9, in \n load_entry_point('tensorflow', 'console_scripts', 'tensorboard')()\n File \"/home/greg/.local/lib/python2.7/site-packages/pkg_resources/init.py\", line 542, in load_entry_point\n return get_distribution(dist).load_entry_point(group, name)\n File \"/home/greg/.local/lib/python2.7/site-packages/pkg_resources/init.py\", line 2575, in load_entry_point\n return ep.load()\n File \"/home/greg/.local/lib/python2.7/site-packages/pkg_resources/init.py\", line 2235, in load\n return self.resolve()\n File \"/home/greg/.local/lib/python2.7/site-packages/pkg_resources/init.py\", line 2241, in resolve\n module = import(self.module_name, fromlist=['name'], level=0)\n File \"/home/greg/tensorflow/_python_build/tensorflow/tensorboard/tensorboard.py\", line 26, in \n from werkzeug import serving\n ImportError: No module named werkzeug\n \n I see the werkzeug.BUILD file on my system so not sure why it cannot be found.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Mazecreator", "commentT": "2017-01-25T23:17:45Z", "comment_text": "\n \t\tJust to be clear, you ran configure, built the whl file, installed, and running from there?\n /cc <denchmark-link:https://github.com/dandelionmane>@dandelionmane</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Mazecreator", "commentT": "2017-01-25T23:29:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/setup.py#L38>https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/setup.py#L38</denchmark-link>\n  also lists werkzeug, so it's not clear why pip installing the package would not install werkzeug too.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Mazecreator", "commentT": "2017-01-25T23:36:35Z", "comment_text": "\n \t\tSorry,\n I ran configure and use TensorFlow from source, but don't build the whl, I am setup for \"Setting up TensorFlow for Development\".  So I use the following:\n <denchmark-code># To build with GPU support:\n bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n \n mkdir _python_build\n cd _python_build \n ln -s ../bazel-bin/tensorflow/tools/pip_package/build_pip_package.runfiles/org_tensorflow/* .\n ln -s ../tensorflow/tools/pip_package/* .\n python setup.py develop\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Mazecreator", "commentT": "2017-01-25T23:38:41Z", "comment_text": "\n \t\tI am not super familiar with that style of development: I don't know why calling the setup.py with 'develop' mode doesn't install the required packages.\n You should be able to get around this by pip install werkzeug manually.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Mazecreator", "commentT": "2017-01-26T00:09:44Z", "comment_text": "\n \t\tI can try the PIP but a little concerned it might cause problems later as the PIP should be bundled with the development install.\n Here is the link to the \"setting up with TensorFlow for Development\":\n <denchmark-link:https://www.tensorflow.org/get_started/os_setup#setting_up_tensorflow_for_development>https://www.tensorflow.org/get_started/os_setup#setting_up_tensorflow_for_development</denchmark-link>\n \n EDIT: That did fix the error but unsure why we need to manually install via \"pip\"\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Mazecreator", "commentT": "2017-01-26T00:34:43Z", "comment_text": "\n \t\tIf you are concerned about polluting your environment, you should run virtualenv. We need werkzeug to run.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "Mazecreator", "commentT": "2017-01-26T18:49:53Z", "comment_text": "\n \t\tI understand, but wanted to report the break in the current HEAD development build.  This is the first include I have needed to PIP install that appears it should have been installed with bazel.  My only concern is I will not be able to detect when it is corrected in the future.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "Mazecreator", "commentT": "2017-01-26T19:02:56Z", "comment_text": "\n \t\tRight, we are thinking that setup.py should have installed it, but for some reason didn't. Is it working for you now?\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "Mazecreator", "commentT": "2017-01-26T19:15:40Z", "comment_text": "\n \t\tYes, I will remove the PIP package once you guys determine how to move forward as you could add the package as a prerequisite.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "Mazecreator", "commentT": "2017-01-26T19:25:19Z", "comment_text": "\n \t\tYes, it looks like it's a documentation issue. According to <denchmark-link:http://stackoverflow.com/questions/28509965/setuptools-development-requirements>stackoverflow</denchmark-link>\n , the  mode doesn't install the requirements. You have to install them separately. Closing a looping internally to update the doc.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "Mazecreator", "commentT": "2017-05-17T23:40:32Z", "comment_text": "\n \t\tI also encountered the same problem, but I found the werkzeug package. But still did not solve the problem\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "Mazecreator", "commentT": "2017-05-21T12:51:22Z", "comment_text": "\n \t\tI have the same problem with TwistedW ,and still did not solve,too.\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "Mazecreator", "commentT": "2017-11-24T19:51:50Z", "comment_text": "\n \t\tI have the same problem and pip install does not solve it.\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "Mazecreator", "commentT": "2017-11-27T21:36:38Z", "comment_text": "\n \t\tThis is strictly a TB dependency.\n You should reach out to tensorboard to look into fixing this dependency in tensorboard pip package.\n \t\t"}}}, "commit": {"commit_id": "bc72653cf7968115fe9f714d7d2bc63004524479", "commit_author": "Yifei Feng", "commitT": "2017-01-26 20:36:59-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\g3doc\\get_started\\os_setup.md", "file_new_name": "tensorflow\\g3doc\\get_started\\os_setup.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "926,927", "deleted_lines": null}}}}}}