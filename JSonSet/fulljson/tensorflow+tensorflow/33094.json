{"BR": {"BR_id": "33094", "BR_author": "luvwinnie", "BRopenT": "2019-10-06T23:45:43Z", "BRcloseT": "2019-10-25T18:28:58Z", "BR_text": {"BRsummary": "Tensorflow 2.0.0 / tf.keras.layers.TimeDistributed layer can't be save to saved Model", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No\n OS Platform and Distribution : Colaboratory (GPU Runtime)\n tensorflow version: 2.0.0\n python version: 3.6.8\n \n Describe the current behavior\n The model defined which has tf.keras.layers.timeDistributed layer cannot be save by model.save() function.\n It shows the error below\n <denchmark-code>ValueError                                Traceback (most recent call last)\n /usr/lib/python3.6/inspect.py in getfullargspec(func)\n    1125                                        skip_bound_arg=False,\n -> 1126                                        sigcls=Signature)\n    1127     except Exception as ex:\n \n 41 frames\n ValueError: no signature found for builtin <tensorflow.python.keras.saving.saved_model.save_impl.LayerCall object at 0x7f74467284a8>\n \n The above exception was the direct cause of the following exception:\n \n TypeError                                 Traceback (most recent call last)\n /usr/lib/python3.6/inspect.py in getfullargspec(func)\n    1130         # else. So to be fully backwards compatible, we catch all\n    1131         # possible exceptions here, and reraise a TypeError.\n -> 1132         raise TypeError('unsupported callable') from ex\n    1133 \n    1134     args = []\n \n TypeError: unsupported callable\n </denchmark-code>\n \n Describe the expected behavior\n In tensorflow 2.0.0 supposed the model.save model default to be saved in SavedModel format.\n Code to reproduce the issue\n <denchmark-code>\n def get_data():\n   datasets, ds_info = tfds.load(name='mnist', with_info=True, as_supervised=True)\n   mnist_train, mnist_test = datasets['train'], datasets['test']\n \n   BUFFER_SIZE = 10000\n \n   BATCH_SIZE_PER_REPLICA = 64\n   BATCH_SIZE = BATCH_SIZE_PER_REPLICA * mirrored_strategy.num_replicas_in_sync\n \n   def scale(image, label):\n     image = tf.cast(image, tf.float32)\n     image /= 255\n \n     return image, label\n \n   train_dataset = mnist_train.map(scale).cache().shuffle(BUFFER_SIZE).batch(BATCH_SIZE)\n   eval_dataset = mnist_test.map(scale).batch(BATCH_SIZE)\n \n   return train_dataset, eval_dataset\n \n def get_model():\n   with mirrored_strategy.scope():\n     model = tf.keras.Sequential([\n         tf.keras.layers.Conv2D(32, 3, activation='relu', input_shape=(28, 28, 1)),\n         tf.keras.layers.MaxPooling2D(),\n         # tf.keras.layers.Flatten(),\n         tf.keras.layers.TimeDistributed(tf.keras.layers.Dense(64, activation='softmax')),\n         # tf.keras.layers.TimeDistributed(tf.keras.layers.Dense(64, activation='softmax')),\n         # tf.keras.layers.Dense(10, activation='softmax')\n     ])\n \n     model.compile(loss='sparse_categorical_crossentropy',\n                   optimizer=tf.keras.optimizers.Adam(),\n                   metrics=['accuracy'])\n     return model\n \n model = get_model()\n model.save(\"test_save\")\n </denchmark-code>\n \n Other info / logs\n The not only can be reproduce in Colaboratory, but also in normal Ubuntu machien which installed with tensorflow-gpu 2.0.0\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "luvwinnie", "commentT": "2019-10-09T11:19:32Z", "comment_text": "\n \t\tCould reproduce this issue with TF Version 2.0. Here is the <denchmark-link:https://colab.sandbox.google.com/gist/rmothukuru/c698628e49bce4d456daac7c2ddf3bea/33094.ipynb>Gist</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "luvwinnie", "commentT": "2019-10-18T21:39:02Z", "comment_text": "\n \t\tAlso running into this. Here's a concise test case:\n <denchmark-code>model = tf.keras.Sequential([tf.keras.layers.TimeDistributed(tf.keras.layers.Dense(1), input_shape=(None, 1))])\n model.save('test_save')\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "luvwinnie", "commentT": "2019-10-23T01:48:41Z", "comment_text": "\n \t\tdoes this issues got any progress?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "luvwinnie", "commentT": "2019-10-24T23:52:21Z", "comment_text": "\n \t\tAny update?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "luvwinnie", "commentT": "2019-10-25T00:38:22Z", "comment_text": "\n \t\tThis appears to be an error with Python 3. Submitting a fix to resolve this.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "luvwinnie", "commentT": "2019-10-25T18:29:00Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33094>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33094>No</denchmark-link>\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "luvwinnie", "commentT": "2019-10-26T08:36:28Z", "comment_text": "\n \t\tso is this been fixed to tensorflow-gpu 2.0 stable build? or i have to install another build?\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "luvwinnie", "commentT": "2019-10-29T15:46:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/luvwinnie>@luvwinnie</denchmark-link>\n  It was fixed in  which is development version of  (will be released in\n the near future). Thanks!\n \t\t"}}}, "commit": {"commit_id": "66b9b602af695fddb76c113d823d2fa4d0646c04", "commit_author": "Katherine Wu", "commitT": "2019-10-25 11:27:57-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\keras\\saving\\saved_model\\saved_model_test.py", "file_new_name": "tensorflow\\python\\keras\\saving\\saved_model\\saved_model_test.py", "file_complexity": {"file_NLOC": "536", "file_CCN": "70", "file_NToken": "5197"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "620,621,622,623,624,625,626,627,628,629,630,631", "deleted_lines": null, "method_info": {"method_name": "testSaveTimeDistributedLayer", "method_params": "self", "method_startline": "620", "method_endline": "631", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "105", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\keras\\saving\\saved_model\\utils.py", "file_new_name": "tensorflow\\python\\keras\\saving\\saved_model\\utils.py", "file_complexity": {"file_NLOC": "105", "file_CCN": "23", "file_NToken": "666"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "45,47,48", "deleted_lines": "45"}}}}}}