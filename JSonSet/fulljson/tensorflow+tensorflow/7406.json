{"BR": {"BR_id": "7406", "BR_author": "poweic", "BRopenT": "2017-02-10T04:31:14Z", "BRcloseT": "2017-03-22T16:54:14Z", "BR_text": {"BRsummary": "Should check whether n_class is zero before calling sample_n() in mixture.py", "BRdescription": "\n <denchmark-h:h3>Problem Description</denchmark-h>\n \n Mixture model first use categorical to sample how much samples it need for each mixture components (this is variable  at <denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distributions/python/ops/mixture.py#L308>line 308</denchmark-link>\n , but it actually means ), and then it pass  to .\n The problem is  could be 0 and you can't pass  to , which is used in Beta distribution. (see <denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distributions/python/ops/mixture.py#L310>line 310</denchmark-link>\n  in mixture.py)\n <denchmark-h:h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</denchmark-h>\n \n It's easy to reproduce: just create a mixture of Beta + Uniform with 50/50 probability. Half of the time it'll sample from uniform, and half of the time it'll sample from Beta.\n #!/usr/bin/python\n import tensorflow as tf\n ds = tf.contrib.distributions\n \n # Create mixture distribution of Beta + Uniform\n components = [ds.Beta(2., 2.), ds.Uniform(a=0., b=1.)]\n cat = ds.Categorical(p=[0.5, 0.5])\n mix = ds.Mixture(cat=cat, components=components)\n \n # get ONLY 1 sample\n x = mix.sample_n(1)\n \n with tf.Session() as sess:\n     sess.run(tf.global_variables_initializer())    \n     # repeats until crash\n     for i in range(1000):\n         print sess.run(x)\n <denchmark-h:h3>What other attempted solutions have you tried?</denchmark-h>\n \n Two possible solutions:\n \n \n Add a conditional branch in mixture.py like this (tested with the above script):\n # INSTEAD OF DOING\n # samples_class_c = self.components[c].sample_n(n_class, seed=seed)\n # DO THIS\n samples_class_c = control_flow_ops.cond(\n     math_ops.equal(n_class, 0),\n     lambda: array_ops.zeros(0, self.components[c].dtype),\n     lambda: self.components[c].sample_n(n_class, seed=seed)\n )\n Just create a zero tensor with shape 0 when n_class is 0 and let the reshape operator at line 330 to worry about the shape.\n \n \n Support shape=0 in random_gamma(shape, alpha, ...). Personally I think it's a bad idea. It already caused InvalidArgumentError exception, which means the one who implemented this might already considered this problem before.\n \n \n <denchmark-h:h3>Logs or other output that would be helpful</denchmark-h>\n \n (If logs are large, please upload as attachment or provide link).\n I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\n I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\n I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\n I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\n I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\n I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \n name: TITAN X (Pascal)\n major: 6 minor: 1 memoryClockRate (GHz) 1.531\n pciBusID 0000:02:00.0\n Total memory: 11.90GiB\n Free memory: 337.50MiB\n W tensorflow/stream_executor/cuda/cuda_driver.cc:590] creating context when one is currently active; existing: 0x4190110\n I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 1 with properties: \n name: GeForce GTX 980 Ti\n major: 5 minor: 2 memoryClockRate (GHz) 1.076\n pciBusID 0000:01:00.0\n Total memory: 5.93GiB\n Free memory: 5.08GiB\n I tensorflow/core/common_runtime/gpu/gpu_device.cc:777] Peer access not supported between device ordinals 0 and 1\n I tensorflow/core/common_runtime/gpu/gpu_device.cc:777] Peer access not supported between device ordinals 1 and 0\n I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 1 \n I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y N \n I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 1:   N Y \n I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: TITAN X (Pascal), pci bus id: 0000:02:00.0)\n I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:1) -> (device: 1, name: GeForce GTX 980 Ti, pci bus id: 0000:01:00.0)\n [ 0.32805401]\n [ 0.2802822]\n W tensorflow/core/framework/op_kernel.cc:975] Invalid argument: Input shape should have non-zero element count, got: 0\n \t [[Node: Beta/sample_n/random_gamma_1/RandomGamma = RandomGamma[S=DT_INT32, T=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Beta/sample_n/random_gamma_1/shape/_25, Beta/sample_n/random_gamma_1/add/_27)]]\n Traceback (most recent call last):\n   File \"bug.py\", line 21, in <module>\n     print sess.run(x)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 766, in run\n     run_metadata_ptr)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 964, in _run\n     feed_dict_string, options, run_metadata)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\n     target_list, options, run_metadata)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\n     raise type(e)(node_def, op, message)\n tensorflow.python.framework.errors_impl.InvalidArgumentError: Input shape should have non-zero element count, got: 0\n \t [[Node: Beta/sample_n/random_gamma_1/RandomGamma = RandomGamma[S=DT_INT32, T=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Beta/sample_n/random_gamma_1/shape/_25, Beta/sample_n/random_gamma_1/add/_27)]]\n \n Caused by op u'Beta/sample_n/random_gamma_1/RandomGamma', defined at:\n   File \"bug.py\", line 15, in <module>\n     x = mix.sample_n(1)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/distributions/python/ops/distribution.py\", line 574, in sample_n\n     x = self._sample_n(n, seed, **condition_kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/distributions/python/ops/mixture.py\", line 313, in _sample_n\n     samples_class_c = self.components[c].sample_n(n_class, seed=seed)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/distributions/python/ops/distribution.py\", line 574, in sample_n\n     x = self._sample_n(n, seed, **condition_kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/distributions/python/ops/beta.py\", line 205, in _sample_n\n     seed=distribution_util.gen_new_seed(seed, \"beta\"))\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/random_ops.py\", line 437, in random_gamma\n     seed2=seed2) / beta\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_random_ops.py\", line 122, in _random_gamma\n     seed=seed, seed2=seed2, name=name)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 759, in apply_op\n     op_def=op_def)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2240, in create_op\n     original_op=self._default_original_op, op_def=op_def)\n   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1128, in __init__\n     self._traceback = _extract_stack()\n \n InvalidArgumentError (see above for traceback): Input shape should have non-zero element count, got: 0\n \t [[Node: Beta/sample_n/random_gamma_1/RandomGamma = RandomGamma[S=DT_INT32, T=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Beta/sample_n/random_gamma_1/shape/_25, Beta/sample_n/random_gamma_1/add/_27)]]\n P.S. The variable name n_class confused me for a while.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "poweic", "commentT": "2017-02-10T16:47:55Z", "comment_text": "\n \t\tThe bug here is that  doesn't allow zero samples.  <denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/random_op.cc#L306>https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/random_op.cc#L306</denchmark-link>\n  should be fixed to exit early in that case rather than crashing.  <denchmark-link:https://github.com/brianwa84>@brianwa84</denchmark-link>\n : Can you confirm this interpretation?\n @botonchou Pending Brian's ack, would you be interested in submitting a pull request?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "poweic", "commentT": "2017-02-10T17:08:25Z", "comment_text": "\n \t\tReturning a zero shape tensor is OK for the zero sample use-case. Feel free\n to submit the pull request.\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Fri, Feb 10, 2017 at 11:49 AM, Geoffrey Irving ***@***.***> wrote:\n  The bug here is that RandomGamma doesn't allow zero samples.\n  https://github.com/tensorflow/tensorflow/blob/master/\n  tensorflow/core/kernels/random_op.cc#L306 should be fixed to exit early\n  in that case rather than crashing. @brianwa84\n  <https://github.com/brianwa84>: Can you confirm this interpretation?\n \n  @botonchou <https://github.com/botonchou> Pending Brian's ack, would you\n  be interested in submitting a pull request?\n \n  \u2014\n  You are receiving this because you were mentioned.\n  Reply to this email directly, view it on GitHub\n  <#7406 (comment)>,\n  or mute the thread\n  <https://github.com/notifications/unsubscribe-auth/AVJZI8fwfqaPDIeg0TDDN-fBUXmQdIpAks5rbJURgaJpZM4L8_pY>\n  .\n \n \n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "poweic", "commentT": "2017-02-10T17:11:08Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/brianwa84>@brianwa84</denchmark-link>\n  Not to pry, but did you really intend to post your phone number in a Github comment?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "poweic", "commentT": "2017-02-10T18:14:25Z", "comment_text": "\n \t\theh thx. email signature fail\n \t\t"}}}, "commit": {"commit_id": "3116fa80450735e907907bc57a6834e9e212570a", "commit_author": "Mycosynth", "commitT": "2017-03-22 09:54:14-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\core\\kernels\\random_op.cc", "file_new_name": "tensorflow\\core\\kernels\\random_op.cc", "file_complexity": {"file_NLOC": "318", "file_CCN": "36", "file_NToken": "2400"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "306", "deleted_lines": "306,307,308,309", "method_info": {"method_name": "tensorflow::RandomGammaOp::Compute", "method_params": "ctx", "method_startline": "285", "method_endline": "455", "method_complexity": {"method_NLOC": "111", "method_CCN": "19", "method_NToken": "882", "method_nesting_level": "3"}}}}}}}}