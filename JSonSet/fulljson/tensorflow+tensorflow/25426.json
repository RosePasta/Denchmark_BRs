{"BR": {"BR_id": "25426", "BR_author": "annemariet", "BRopenT": "2019-02-01T17:00:05Z", "BRcloseT": "2019-07-13T04:28:06Z", "BR_text": {"BRsummary": "Segmentation Fault with tf.io.decode_csv , numpy record_defaults and tensor input", "BRdescription": "\n System information\n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\n No\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\n Ubuntu 16.04.4 LTS on Windows Linux SubSystem\n Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\n n/a\n TensorFlow installed from (source or binary):\n binary\n TensorFlow version (use command below):\n '2.0.0-preview' / \"b'v1.12.0-6503-g7cfe43a11d'\"\n Python version:\n Python 3.6.7\n Bazel version (if compiling from source):\n GCC/Compiler version (if compiling from source):\n CUDA/cuDNN version: No\n GPU model and memory: No\n \n You can collect some of this information using our environment capture <denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh>script</denchmark-link>\n \n You can also obtain the TensorFlow version with\n python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\" \n Describe the current behavior\n Segmentation fault (core dumped)\n Describe the expected behavior\n prints result\n Code to reproduce the issue\n <denchmark-code>import numpy as np\n import tensorflow as tf\n record_defaults=np.zeros(5)    \n parsed_fields = tf.io.decode_csv(tf.constant('1,2,3,4,5'), record_defaults)\n </denchmark-code>\n \n Other info / logs\n Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\n It's fine with either tf.constants for record defaults or plain string to decode, eg:\n <denchmark-code>parsed_fields = tf.io.decode_csv('1,2,3,4,5', record_defaults)\n \n \n Numpy version: \n numpy                     1.16.0          py36_blas_openblash1522bff_1000  [blas_openblas]  conda-forge\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "annemariet", "commentT": "2019-02-01T20:09:21Z", "comment_text": "\n \t\tI can confirm that I could reproduce this issue on MacOSX 10.13.6, python 3.6.8, TF version 2.0.0-dev20190126, git version b'v1.12.0-6726-g5522d670af', installed using pip3 install -U tf-nightly-2.0-preview.\n The decode_csv() function expects the record_defaults to be an array of tensors, so replacing np.zeros(5) with [tf.constant(0.)]*5 (or even with [0.]*5) solves the problem, but still segmentation faults should never happen.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "annemariet", "commentT": "2019-07-12T18:19:42Z", "comment_text": "\n \t\tI can reproduce this on a recent nightly in eager mode.  In graph mode, a shape inference check raises a safe failure exceptio.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "annemariet", "commentT": "2019-07-13T04:28:07Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=25426>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=25426>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "3ae3c3c9d43f870d6340cec529de03175e914595", "commit_author": "Eugene Brevdo", "commitT": "2019-07-12 21:26:03-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\eager\\pywrap_tfe_src.cc", "file_new_name": "tensorflow\\python\\eager\\pywrap_tfe_src.cc", "file_complexity": {"file_NLOC": "2814", "file_CCN": "267", "file_NToken": "20193"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,3039,3040,3041,3042,3043,3045,3052", "deleted_lines": "3030,3037"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\kernel_tests\\decode_csv_op_test.py", "file_new_name": "tensorflow\\python\\kernel_tests\\decode_csv_op_test.py", "file_complexity": {"file_NLOC": "244", "file_CCN": "37", "file_NToken": "1924"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "322,323,324,325,326,327,328,329,330", "deleted_lines": null, "method_info": {"method_name": "testNumpyAttribute", "method_params": "self", "method_startline": "322", "method_endline": "330", "method_complexity": {"method_NLOC": "9", "method_CCN": "2", "method_NToken": "66", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "43", "deleted_lines": "44", "method_info": {"method_name": "_test", "method_params": "self,args,expected_out,expected_err_re", "method_startline": "32", "method_endline": "45", "method_complexity": {"method_NLOC": "13", "method_CCN": "5", "method_NToken": "115", "method_nesting_level": "1"}}}}}}}}