{"BR": {"BR_id": "11692", "BR_author": "meijun", "BRopenT": "2017-07-23T15:20:45Z", "BRcloseT": "2017-08-08T20:01:28Z", "BR_text": {"BRsummary": "A bug of tf.reduce_logsumexp with `-inf`", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\n OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux CentOS 7\n TensorFlow installed from (source or binary): binary\n TensorFlow version (use command below): 1.2.0\n Python version: 2.7.13\n Bazel version (if compiling from source):\n CUDA/cuDNN version: 8.0/5.1.3\n GPU model and memory: Tesla K40m, 11439MiB\n Exact command to reproduce:  python -c \"import tensorflow as tf; print tf.Session().run(tf.reduce_logsumexp(float('-inf')))\"\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n The doc of tf.reduce_logsumexp says it\n \n Computes log(sum(exp(elements across dimensions of a tensor))).\n \n However, it does not when the tensor is -inf.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n <denchmark-code>python -c \"import tensorflow as tf; print tf.Session().run(tf.reduce_logsumexp(float('-inf')))\"\n </denchmark-code>\n \n prints\n <denchmark-code>nan\n </denchmark-code>\n \n <denchmark-h:hr></denchmark-h>\n \n <denchmark-code>python -c \"import tensorflow as tf; print tf.Session().run(tf.log(tf.reduce_sum(tf.exp(float('-inf')))))\"\n </denchmark-code>\n \n prints\n <denchmark-code>-inf\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "meijun", "commentT": "2017-07-24T07:25:19Z", "comment_text": "\n \t\tThe tf.reduce_logsumexp source code currently is:\n def reduce_logsumexp(input_tensor,\n                      axis=None,\n                      keep_dims=False,\n                      name=None,\n                      reduction_indices=None):\n   \"\"\"TF 1.2.0 source code\"\"\"\n   with ops.name_scope(name, \"ReduceLogSumExp\", [input_tensor]) as name:\n     my_max = array_ops.stop_gradient(\n         reduce_max(\n             input_tensor,\n             axis=axis,\n             reduction_indices=reduction_indices,\n             keep_dims=True))\n     result = gen_math_ops.log(\n         reduce_sum(\n             gen_math_ops.exp(input_tensor - my_max),\n             axis,\n             keep_dims=True,\n             reduction_indices=reduction_indices)) + my_max\n     if not keep_dims:\n       if isinstance(axis, int):\n         axis = [axis]\n       result = array_ops.squeeze(result, axis)\n     return result\n I have written my own tf_reduce_logsumexp to fix the bug:\n def tf_reduce_logsumexp(input_tensor,\n                         axis=None,\n                         keep_dims=False,\n                         name=None,\n                         reduction_indices=None):\n     \"\"\"Fix tf.reduce_logsumexp\"\"\"\n     with tf.name_scope(name, \"tf_ReduceLogSumExp\", [input_tensor]) as name:\n         raw_max = tf.reduce_max(\n             input_tensor,\n             axis=axis,\n             reduction_indices=reduction_indices,\n             keep_dims=True)\n         my_max = tf.stop_gradient(\n             tf.where(\n                 tf.is_finite(raw_max),\n                 raw_max,\n                 tf.zeros_like(raw_max)))\n         result = tf.log(\n             tf.reduce_sum(\n                 tf.exp(input_tensor - my_max),\n                 axis,\n                 keep_dims=True,\n                 reduction_indices=reduction_indices)) + my_max\n         if not keep_dims:\n             if isinstance(axis, int):\n                 axis = [axis]\n             result = tf.squeeze(result, axis)\n         return result\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "meijun", "commentT": "2017-07-25T01:15:32Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/fastturtle>@fastturtle</denchmark-link>\n , could you take a look?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "meijun", "commentT": "2017-07-25T16:24:53Z", "comment_text": "\n \t\tThis looks like a reasonable fix, would you be willing to submit it as a pull-request?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "meijun", "commentT": "2017-07-25T17:12:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/aselle>@aselle</denchmark-link>\n  Sure, I will try it.\n \t\t"}}}, "commit": {"commit_id": "30c13a450841b213d72dea93d9447a25169be0a7", "commit_author": "Jun MEI", "commitT": "2017-08-08 13:01:28-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\ops\\math_ops.py", "file_new_name": "tensorflow\\python\\ops\\math_ops.py", "file_complexity": {"file_NLOC": "1196", "file_CCN": "185", "file_NToken": "7214"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1642,1643,1644,1645,1646,1648,1649,1650,1651", "deleted_lines": "1643,1644,1645,1646,1647"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\ops\\math_ops_test.py", "file_new_name": "tensorflow\\python\\ops\\math_ops_test.py", "file_complexity": {"file_NLOC": "332", "file_CCN": "67", "file_NToken": "3788"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "137,138,139,140", "deleted_lines": null, "method_info": {"method_name": "testInfinity", "method_params": "self", "method_startline": "137", "method_endline": "140", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "41", "method_nesting_level": "1"}}}}}}}}