{"BR": {"BR_id": "164", "BR_author": "ArdalanM", "BRopenT": "2016-08-09T10:01:27Z", "BRcloseT": "2016-08-17T15:47:05Z", "BR_text": {"BRsummary": "\"full\" deletion of a service leads to core dump", "BRdescription": "\n Hello,\n I followed the tutorial \"Training a model from text\" (<denchmark-link:http://www.deepdetect.com/tutorials/txt-training/>http://www.deepdetect.com/tutorials/txt-training/</denchmark-link>\n ). Creating and training the model works however, it leads to core dump when I am looking to \"full\" delete the service.\n Step to reproduce (assuming news20 dataset is downloaded and DeepDetect is running):\n \n Create the service (just like the tutorial and specify the model repository):\n \n <denchmark-code>curl -X PUT \"http://localhost:8080/services/n20\" -d \"{\\\"mllib\\\":\\\"caffe\\\",\\\"description\\\":\\\"newsgroup classification service\\\",\\\"type\\\":\\\"supervised\\\",\\\"parameters\\\":{\\\"input\\\":{\\\"connector\\\":\\\"txt\\\"},\\\"mllib\\\":{\\\"template\\\":\\\"mlp\\\",\\\"nclasses\\\":20,\\\"layers\\\":[200,200],\\\"activation\\\":\\\"relu\\\"}},\\\"model\\\":{\\\"templates\\\":\\\"../templates/caffe/\\\",\\\"repository\\\":\\\".../data/dd_models\\\"}}\"\n </denchmark-code>\n \n \n Delete the service:\n \n <denchmark-code>curl -X DELETE \"http://localhost:8080/services/n20?clear=full\"\n </denchmark-code>\n \n Result:\n ERROR - 11:52:40 - service n20 mllib internal error: Failed deleting all files in directory .../data/dd_models\n terminate called after throwing an instance of 'dd::MLLibInternalException'\n what():  Failed deleting all files in directory\n .../data/dd_models\n [1]    32215 abort (core dumped)  ./main/dede\n This does not happen when deletion is made with \"lib\" or \"mem\"\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ArdalanM", "commentT": "2016-08-09T11:39:10Z", "comment_text": "\n \t\tDoesn't crash for me... Tried with both relative and absolute path to the directory. What are the permissions on the repository and what is possibly inside ? What filesystem are on you on ?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ArdalanM", "commentT": "2016-08-11T08:57:09Z", "comment_text": "\n \t\tAfter some tests I can be more specific.\n The 'dd_models' folder contains the following files and folder:\n \n deploy.prototxt\n mlp.prototxt\n mlp_solver.prototxt\n model.json\n dd_model_folder (this is a folder containing another DD model)\n \n When I try to delete model in 'dd_models' it lead to core dump only if there is sub folders containing other DD models.\n I guess this not a best practice to have sub folders of DD models :)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ArdalanM", "commentT": "2016-08-11T10:14:38Z", "comment_text": "\n \t\tOK thanks, I'll try to reproduce FTR and to provide a fix. But yes, model directories should be managed by DD, and they do not include subdirectories other than the training and testing databases when applicable.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "ArdalanM", "commentT": "2016-08-17T15:47:05Z", "comment_text": "\n \t\tThanks for bug report. The commit above fixes the exception catches and thus the server shall not crash anymore. However, the deletion of sub-directories within sub-directories will report a 500 error as the deletion only operates over a single depth (i.e. no recursivity). This is because in all cases, there shouldn't be the need for a repository that follows the DD structure.\n \t\t"}}}, "commit": {"commit_id": "77aa38e0733057bac5b3f7db5941270d5449945f", "commit_author": "Emmanuel Benazera", "commitT": "2016-08-17 17:45:25+02:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\jsonapi.cc", "file_new_name": "src\\jsonapi.cc", "file_complexity": {"file_NLOC": "734", "file_CCN": "130", "file_NToken": "4841"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "427,428,429,430,431,432,433,434,435,436,437,438,439,440", "deleted_lines": "427,428,429", "method_info": {"method_name": "dd::JsonAPI::service_delete", "method_params": "sname,jstr", "method_startline": "395", "method_endline": "442", "method_complexity": {"method_NLOC": "45", "method_CCN": "10", "method_NToken": "212", "method_nesting_level": "1"}}}}}}}}