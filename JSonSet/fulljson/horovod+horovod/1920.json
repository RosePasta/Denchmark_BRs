{"BR": {"BR_id": "1920", "BR_author": "sparticlesteve", "BRopenT": "2020-04-29T04:20:51Z", "BRcloseT": "2020-05-05T17:26:16Z", "BR_text": {"BRsummary": "hvd.load_model not properly wrapping optimizer in tf.keras 1.15", "BRdescription": "\n Environment:\n \n Framework: tf.keras\n Framework version: TF 1.15.0\n Horovod version: 0.19.0\n MPI version: cray-mpich/7.7.10\n CUDA version: n/a\n NCCL version: n/a\n Python version: 3.7.4\n OS and version: Cray linux based on SLES 15\n GCC version: 7.3.0\n \n Checklist:\n \n Did you search issues to find if somebody asked this question before? Oui\n If your question is about hang, did you read this doc? n/a\n If your question is about docker, did you read this doc? n/a\n Did you check if you question is answered in the troubleshooting guide? Oui oui\n \n Bug report:\n Please describe erroneous behavior you're observing and steps to reproduce it.\n I've been noticing bad training results when resuming from checkpoint with hvd.load_model. I tracked it down to diverging worker models, and noticed that my model optimizers from hvd.load_model were not properly wrapped in the horovod DistributedOptimizer. I believe it's a bug in this logic that determines all optimizer classes to wrap right here:\n \n \n \n horovod/horovod/_keras/__init__.py\n \n \n          Line 113\n       in\n       d1b13ec\n \n \n \n \n \n \n  horovod_objects = { \n \n \n \n \n \n This part:\n <denchmark-code>horovod_objects = {\n     subclass.__name__.lower(): wrap_optimizer(subclass)\n     for subclass in keras.optimizers.Optimizer.__subclasses__()\n     if subclass.__module__ == keras.optimizers.Optimizer.__module__\n }\n </denchmark-code>\n \n This check on the subclass module matching Optimizer module doesn't work in TF 1.15. E.g., for the SGD optimizer, the class module (the LHS) is actually\n <denchmark-code>In [9]: tensorflow.python.keras.optimizer_v2.gradient_descent.SGD.__module__\n Out[9]: 'tensorflow.python.keras.optimizer_v2.gradient_descent'\n </denchmark-code>\n \n whereas the RHS is\n <denchmark-code>In [10]: tf.keras.optimizers.Optimizer.__module__\n Out[10]: 'tensorflow.python.keras.optimizer_v2.optimizer_v2\u2019\n </denchmark-code>\n \n I have for now implemented a workaround in my code that just removes the module equality comparison and confirm that my optimizers are correctly being wrapped in DistributedOptimizer.\n I don't have a suggestion for how to fix this in Horovod. Presumably the module paths are inconsistent across Keras and TF versions :(\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "sparticlesteve", "commentT": "2020-05-01T22:07:33Z", "comment_text": "\n \t\tThanks for raising this issue, <denchmark-link:https://github.com/sparticlesteve>@sparticlesteve</denchmark-link>\n .  I'll take a look this.  Presumably, this means our load_model test is not behaving correctly (or at least missing some edge cases).\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "sparticlesteve", "commentT": "2020-05-04T21:57:55Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/sparticlesteve>@sparticlesteve</denchmark-link>\n , I think <denchmark-link:https://github.com/horovod/horovod/pull/1935>#1935</denchmark-link>\n  should address this issue.  Please give it a shot when you have some time and let us know how it goes.  Thanks.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "sparticlesteve", "commentT": "2020-05-04T22:08:28Z", "comment_text": "\n \t\tAwesome, <denchmark-link:https://github.com/tgaddair>@tgaddair</denchmark-link>\n  , thanks for the quick turnaround!\n I will report back when I can.\n \t\t"}}}, "commit": {"commit_id": "c0b2040e38c5135c65dd2b5e9b24f00ff3f31548", "commit_author": "Travis Addair", "commitT": "2020-05-05 10:26:15-07:00", "commit_complexity": {"commit_NLOC": "0.19858156028368795", "commit_CCN": "1.0", "commit_Nprams": "0.9361702127659575"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "horovod\\_keras\\__init__.py", "file_new_name": "horovod\\_keras\\__init__.py", "file_complexity": {"file_NLOC": "78", "file_CCN": "26", "file_NToken": "623"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "112,116", "deleted_lines": "112,116", "method_info": {"method_name": "load_model", "method_params": "keras,wrap_optimizer,optimizer_modules,filepath,custom_optimizers,custom_objects", "method_startline": "112", "method_endline": "128", "method_complexity": {"method_NLOC": "14", "method_CCN": "6", "method_NToken": "99", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "112,116", "deleted_lines": "112,116", "method_info": {"method_name": "load_model", "method_params": "keras,wrap_optimizer,filepath,custom_optimizers,custom_objects", "method_startline": "112", "method_endline": "128", "method_complexity": {"method_NLOC": "14", "method_CCN": "6", "method_NToken": "103", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "horovod\\keras\\__init__.py", "file_new_name": "horovod\\keras\\__init__.py", "file_complexity": {"file_NLOC": "34", "file_CCN": "7", "file_NToken": "302"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "150,151", "deleted_lines": "150", "method_info": {"method_name": "load_model", "method_params": "filepath,custom_optimizers,custom_objects,compression", "method_startline": "117", "method_endline": "151", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "50", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "horovod\\tensorflow\\keras\\__init__.py", "file_new_name": "horovod\\tensorflow\\keras\\__init__.py", "file_complexity": {"file_NLOC": "45", "file_CCN": "7", "file_NToken": "392"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "167", "deleted_lines": "156", "method_info": {"method_name": "load_model", "method_params": "filepath,custom_optimizers,custom_objects,compression", "method_startline": "134", "method_endline": "167", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "39", "method_nesting_level": "0"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 9, "file_old_name": "test\\test_tensorflow_keras.py", "file_new_name": "test\\test_tensorflow_keras.py", "file_complexity": {"file_NLOC": "216", "file_CCN": "21", "file_NToken": "2050"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "214,215,216,217,218,219,220,221,222,223,224,225,226,227", "deleted_lines": null, "method_info": {"method_name": "test_load_model_broadcast.create_model", "method_params": "", "method_startline": "214", "method_endline": "227", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "132", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272", "deleted_lines": null, "method_info": {"method_name": "test_load_model_broadcast", "method_params": "self", "method_startline": "213", "method_endline": "272", "method_complexity": {"method_NLOC": "33", "method_CCN": "4", "method_NToken": "257", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "253,254,255", "deleted_lines": null, "method_info": {"method_name": "test_load_model_broadcast.generator", "method_params": "", "method_startline": "253", "method_endline": "255", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "15", "method_nesting_level": "4"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210", "deleted_lines": null, "method_info": {"method_name": "test_load_model_custom_objects", "method_params": "self", "method_startline": "173", "method_endline": "210", "method_complexity": {"method_NLOC": "30", "method_CCN": "1", "method_NToken": "291", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "139,140", "deleted_lines": null, "method_info": {"method_name": "test_load_model_custom_optimizers.__init__", "method_params": "self,kwargs", "method_startline": "139", "method_endline": "140", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "3"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "274,275,276,277,278,279,280,281", "deleted_lines": null, "method_info": {"method_name": "_check_optimizer_weights", "method_params": "self,opt,new_opt", "method_startline": "274", "method_endline": "281", "method_complexity": {"method_NLOC": "8", "method_CCN": "3", "method_NToken": "85", "method_nesting_level": "1"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170", "deleted_lines": null, "method_info": {"method_name": "test_load_model_custom_optimizers", "method_params": "self", "method_startline": "137", "method_endline": "170", "method_complexity": {"method_NLOC": "26", "method_CCN": "1", "method_NToken": "254", "method_nesting_level": "1"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134", "deleted_lines": null, "method_info": {"method_name": "test_load_model", "method_params": "self", "method_startline": "105", "method_endline": "134", "method_complexity": {"method_NLOC": "24", "method_CCN": "1", "method_NToken": "259", "method_nesting_level": "1"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "175,176", "deleted_lines": null, "method_info": {"method_name": "test_load_model_custom_objects.__init__", "method_params": "self,kwargs", "method_startline": "175", "method_endline": "176", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "3"}}}}}}}}