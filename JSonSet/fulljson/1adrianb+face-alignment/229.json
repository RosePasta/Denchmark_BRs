{"BR": {"BR_id": "229", "BR_author": "JohanAR", "BRopenT": "2020-12-12T14:59:42Z", "BRcloseT": "2020-12-13T21:48:30Z", "BR_text": {"BRsummary": "SFD detector crashes with certain inputs", "BRdescription": "\n SFDDetector detect_from_image crashes on certain input. Noticed it when playing around with avatarify so I saved the current frame.\n It looks like batch_detect should not be able to return an empty bboxlists, but it can be [[]] which slips through the length check at the end and causes an IndexError in detect_from_image\n Here's the output when running facealignment_test.py with my image:\n <denchmark-code>docker run --gpus all -it --rm -v $PWD/.cache:/root/.cache:rw -v $PWD/test:/workspace/face-alignment/test face-alignment python3 test/facealignment_test.py\n E\n ======================================================================\n ERROR: test_predict_points (__main__.Tester)\n ----------------------------------------------------------------------\n Traceback (most recent call last):\n   File \"test/facealignment_test.py\", line 11, in test_predict_points\n     fa.get_landmarks('test/assets/crash.png')\n   File \"/opt/conda/lib/python3.8/site-packages/face_alignment-1.1.1-py3.8.egg/face_alignment/api.py\", line 107, in get_landmarks\n     return self.get_landmarks_from_image(image_or_path, detected_faces)\n   File \"/opt/conda/lib/python3.8/site-packages/torch/autograd/grad_mode.py\", line 26, in decorate_context\n     return func(*args, **kwargs)\n   File \"/opt/conda/lib/python3.8/site-packages/face_alignment-1.1.1-py3.8.egg/face_alignment/api.py\", line 140, in get_landmarks_from_image\n     detected_faces = self.face_detector.detect_from_image(image[..., ::-1].copy())\n   File \"/opt/conda/lib/python3.8/site-packages/face_alignment-1.1.1-py3.8.egg/face_alignment/detection/sfd/sfd_detector.py\", line 36, in detect_from_image\n     bboxlist = bboxlist[keep, :]\n IndexError: too many indices for array: array is 1-dimensional, but 2 were indexed\n \n ----------------------------------------------------------------------\n Ran 1 test in 3.986s\n \n FAILED (errors=1)\n </denchmark-code>\n \n <denchmark-link:https://user-images.githubusercontent.com/4918549/101987204-e3d1c780-3c92-11eb-94ee-319b7ca5e64e.png></denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "JohanAR", "commentT": "2020-12-13T21:50:27Z", "comment_text": "\n \t\tThanks a lot for you including a testing frame and proposing a potential solution!\n \t\t"}}}, "commit": {"commit_id": "632481fc02b3e194aeacbedaf65b76cf5ad4d580", "commit_author": "Adrian Bulat", "commitT": "2020-12-13 21:48:13+00:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "face_alignment\\detection\\sfd\\sfd_detector.py", "file_new_name": "face_alignment\\detection\\sfd\\sfd_detector.py", "file_complexity": {"file_NLOC": "48", "file_CCN": "12", "file_NToken": "329"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "42", "deleted_lines": null, "method_info": {"method_name": "detect_from_image", "method_params": "self,tensor_or_path", "method_startline": "38", "method_endline": "44", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "44", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "52", "deleted_lines": "47,48,49", "method_info": {"method_name": "detect_from_batch", "method_params": "self,tensor", "method_startline": "46", "method_endline": "55", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "62", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "30,31,32,33,34,35,36", "deleted_lines": "35,36", "method_info": {"method_name": "_filter_bboxes", "method_params": "self,bboxlist,threshold", "method_startline": "30", "method_endline": "36", "method_complexity": {"method_NLOC": "6", "method_CCN": "4", "method_NToken": "60", "method_nesting_level": "1"}}}}}}}}