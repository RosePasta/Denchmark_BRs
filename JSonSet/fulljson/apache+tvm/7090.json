{"BR": {"BR_id": "7090", "BR_author": "comaniac", "BRopenT": "2020-12-11T00:01:47Z", "BRcloseT": "2020-12-11T16:44:57Z", "BR_text": {"BRsummary": "[Bug][Relay] Winograd Conv2D for auto-scheduler errors out when input image is not square", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n When compiling a Conv2D with non-square input image, the weight transform has some bugs so that the transformed weight has the wrong shape. For example, the shape I used (1, 23, 40, 128) results in alpha=4 of the transform weight. Based on this value, the kernel size is alpha - tile_size + 1 = 4 - 4 + 1 = 1, which is no longer 3.\n <denchmark-h:h2>Error Log</denchmark-h>\n \n <denchmark-code>Exception in thread Thread-1:\n Traceback (most recent call last):\n   File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n     self.run()\n   File \"/usr/lib/python3.6/threading.py\", line 864, in run\n     self._target(*self._args, **self._kwargs)\n   File \"/home/ubuntu/cody-tvm/python/tvm/auto_scheduler/relay_integration.py\", line 61, in call_all_topi_funcs\n     grc.codegen(opt_mod[\"main\"])\n   File \"/home/ubuntu/cody-tvm/python/tvm/relay/backend/graph_runtime_codegen.py\", line 83, in codegen\n     self._codegen(func)\n   File \"tvm/_ffi/_cython/./packed_func.pxi\", line 321, in tvm._ffi._cy3.core.PackedFuncBase.__call__\n   File \"tvm/_ffi/_cython/./packed_func.pxi\", line 256, in tvm._ffi._cy3.core.FuncCall\n   File \"tvm/_ffi/_cython/./packed_func.pxi\", line 245, in tvm._ffi._cy3.core.FuncCall3\n   File \"tvm/_ffi/_cython/./base.pxi\", line 160, in tvm._ffi._cy3.core.CALL\n tvm._ffi.base.TVMError: Traceback (most recent call last):\n   [bt] (8) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)+0xa9) [0x7fce58f91e69]\n   [bt] (7) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)+0x82) [0x7fce58f91be2]\n   [bt] (6) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::InitVTable()::{lambda(tvm::runtime::ObjectRef const&, tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>*)#6}::_FUN(tvm::runtime::ObjectRef const&, tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>*)+0x27) [0x7fce58f832e7]\n   [bt] (5) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::ScheduleGetter::VisitExpr_(tvm::relay::CallNode const*)+0x14f) [0x7fce58f89a8f]\n   [bt] (4) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)+0xa9) [0x7fce58f91e69]\n   [bt] (3) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)+0x82) [0x7fce58f91be2]\n   [bt] (2) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::InitVTable()::{lambda(tvm::runtime::ObjectRef const&, tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>*)#6}::_FUN(tvm::runtime::ObjectRef const&, tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>*)+0x27) [0x7fce58f832e7]\n   [bt] (1) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::ScheduleGetter::VisitExpr_(tvm::relay::CallNode const*)+0x714) [0x7fce58f8a054]\n   [bt] (0) /home/ubuntu/cody-tvm/build/libtvm.so(+0x1230f0b) [0x7fce5913cf0b]\n   File \"tvm/_ffi/_cython/./packed_func.pxi\", line 55, in tvm._ffi._cy3.core.tvm_callback\n   File \"/home/ubuntu/cody-tvm/python/tvm/relay/backend/compile_engine.py\", line 300, in lower_call\n     best_impl, outputs = select_implementation(op, call.attrs, inputs, ret_type, target)\n   File \"/home/ubuntu/cody-tvm/python/tvm/relay/backend/compile_engine.py\", line 205, in select_implementation\n     outs = best_plevel_impl.compute(attrs, inputs, out_type)\n   File \"/home/ubuntu/cody-tvm/python/tvm/relay/op/op.py\", line 90, in compute\n     return _OpImplementationCompute(self, attrs, inputs, out_type)\n   File \"tvm/_ffi/_cython/./packed_func.pxi\", line 321, in tvm._ffi._cy3.core.PackedFuncBase.__call__\n   File \"tvm/_ffi/_cython/./packed_func.pxi\", line 266, in tvm._ffi._cy3.core.FuncCall\n   File \"tvm/_ffi/_cython/./base.pxi\", line 160, in tvm._ffi._cy3.core.CALL\n   [bt] (3) /home/ubuntu/cody-tvm/build/libtvm.so(TVMFuncCall+0x65) [0x7fce59140485]\n   [bt] (2) /home/ubuntu/cody-tvm/build/libtvm.so(+0x1140ca8) [0x7fce5904cca8]\n   [bt] (1) /home/ubuntu/cody-tvm/build/libtvm.so(tvm::relay::OpImplementation::Compute(tvm::Attrs const&, tvm::runtime::Array<tvm::te::Tensor, void> const&, tvm::Type const&)+0xb1) [0x7fce5904ca71]\n   [bt] (0) /home/ubuntu/cody-tvm/build/libtvm.so(+0x1230f0b) [0x7fce5913cf0b]\n   File \"tvm/_ffi/_cython/./packed_func.pxi\", line 55, in tvm._ffi._cy3.core.tvm_callback\n   File \"/home/ubuntu/cody-tvm/python/tvm/relay/op/strategy/generic.py\", line 214, in _compute_conv2d\n     return [topi_compute(*args)]\n   File \"/home/ubuntu/cody-tvm/python/tvm/topi/nn/conv2d.py\", line 1191, in conv2d_winograd_nhwc_without_weight_transform\n     data, weight, strides, padding, dilation, out_dtype, pre_computed=True\n   File \"<decorator-gen-57>\", line 2, in conv2d_winograd_nhwc\n   File \"/home/ubuntu/cody-tvm/python/tvm/target/generic_func.py\", line 275, in dispatch_func\n     return dispatch_dict[k](*args, **kwargs)\n   File \"/home/ubuntu/cody-tvm/python/tvm/topi/cuda/conv2d_winograd.py\", line 373, in conv2d_winograd_nhwc_cuda\n     data, weight, strides, padding, dilation, out_dtype, tile_size, pre_computed\n   File \"/home/ubuntu/cody-tvm/python/tvm/topi/nn/conv2d.py\", line 1036, in _conv2d_winograd_nhwc_impl\n     assert HSTR == 1 and WSTR == 1 and KH == 3 and KW == 3\n TVMError: AssertionError\n \n Get devices for measurement successfully!\n Traceback (most recent call last):\n   File \"tests/python/relay/test_auto_scheduler_tuning.py\", line 68, in <module>\n     test_tuning_cuda()\n   File \"tests/python/relay/test_auto_scheduler_tuning.py\", line 64, in test_tuning_cuda\n     tune_network(\"winograd-test\", \"cuda\")\n   File \"tests/python/relay/test_auto_scheduler_tuning.py\", line 37, in tune_network\n     tuner = auto_scheduler.TaskScheduler(tasks, task_weights)\n   File \"/home/ubuntu/cody-tvm/python/tvm/auto_scheduler/task_scheduler.py\", line 234, in __init__\n     assert len(self.tasks) != 0, \"No tasks\"\n AssertionError: No tasks\n </denchmark-code>\n \n <denchmark-h:h2>How to reproduce</denchmark-h>\n \n \n In tests/python/relay/test_auto_scheduler_task_extraction.py:get_network:\n \n     elif name == \"winograd-test\":\n         input_shape = [1, 23, 40, 128] # <-- modify\n \n         data = relay.var(\"data\", shape=input_shape, dtype=\"float32\")\n         net = relay.testing.layers.conv2d(\n             data=data,\n             channels=128, # <-- modify\n             kernel_size=3,\n             strides=1,\n             padding=1,\n             data_layout=\"NHWC\",\n             kernel_layout=\"HWIO\",\n             name=\"\",\n         )\n \n Run python tests/python/relay/test_auto_scheduler_tuning.py.\n \n cc <denchmark-link:https://github.com/merrymercy>@merrymercy</denchmark-link>\n  <denchmark-link:https://github.com/FrozenGene>@FrozenGene</denchmark-link>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "374f8092dd3ca8bdb5eb0f8e85860e7a920d2aeb", "commit_author": "Zhao Wu", "commitT": "2020-12-11 08:44:56-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\tvm\\topi\\cuda\\conv2d_winograd.py", "file_new_name": "python\\tvm\\topi\\cuda\\conv2d_winograd.py", "file_complexity": {"file_NLOC": "265", "file_CCN": "43", "file_NToken": "2945"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "371", "deleted_lines": "371"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\relay\\test_auto_scheduler_task_extraction.py", "file_new_name": "tests\\python\\relay\\test_auto_scheduler_task_extraction.py", "file_complexity": {"file_NLOC": "164", "file_CCN": "22", "file_NToken": "1629"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "49,54", "deleted_lines": "49,54", "method_info": {"method_name": "get_network", "method_params": "name,batch_size,layout", "method_startline": "25", "method_endline": "95", "method_complexity": {"method_NLOC": "65", "method_CCN": "13", "method_NToken": "565", "method_nesting_level": "0"}}}}}}}}