{"BR": {"BR_id": "1962", "BR_author": "brunodoamaral", "BRopenT": "2020-07-02T21:38:28Z", "BRcloseT": "2020-07-07T03:41:38Z", "BR_text": {"BRsummary": "CohenKappa raise exception for batch_size=1", "BRdescription": "\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Centos 7\n TensorFlow version and how it was installed (source or binary): 2.2.0\n TensorFlow-Addons version and how it was installed (source or binary): 0.10.0\n Python version: 3.6.9\n Is GPU used? (yes/no): no\n \n Describe the bug\n tfa.metrics.CohenKappa raise exception when batch_size=1.\n Code to reproduce the issue\n import tensorflow as tf\n import tensorflow_addons as tfa\n \n kappa = tfa.metrics.CohenKappa(5, regression=True, sparse_labels=True)\n \n # Batch-size > 1: this will not raise an exception\n kappa.update_state(tf.ones(2), tf.ones(2))\n \n # Batch-size = 1: this will raise an exception\n kappa.update_state(tf.ones(1), tf.ones(1))\n Other info / logs\n The issue is due to tf.squeeze being use in _update_confusion_matrix:\n \n \n \n addons/tensorflow_addons/metrics/cohens_kappa.py\n \n \n         Lines 170 to 171\n       in\n       5f618fd\n \n \n \n \n \n \n  y_true = tf.squeeze(y_true) \n \n \n \n  y_pred = tf.squeeze(y_pred) \n \n \n \n \n \n When the tensor has max shape equals to 1, like in (1,), all dims are removed and a single scalar is returned by tf.squeeze. A subsequent call to tf.math.confusion_matrix will raise the exception while trying to stack tensors over an invalid axis.\n <denchmark-code>ValueError                                Traceback (most recent call last)\n <ipython-input-12-7ea8164c36b0> in <module>\n       9\n      10 # Batch-size = 1: this will raise an exception due to tf.squeeze\n ---> 11 kappa.update_state(tf.ones(1), tf.ones(1))\n \n /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/metrics_utils.py in decorated(metric_obj, *args, **kwargs)\n      88\n      89     with tf_utils.graph_context_for_symbolic_tensors(*args, **kwargs):\n ---> 90       update_op = update_state_fn(*args, **kwargs)\n      91     if update_op is not None:  # update_op will be None in eager execution.\n      92       metric_obj.add_update(update_op)\n \n /usr/local/lib/python3.6/dist-packages/tensorflow_addons/metrics/cohens_kappa.py in update_state(self, y_true, y_pred, sample_weight)\n     137           Update op.\n     138         \"\"\"\n --> 139         return self._update(y_true, y_pred, sample_weight)\n     140\n     141     def _update_binary_class_model(self, y_true, y_pred, sample_weight=None):\n \n /usr/local/lib/python3.6/dist-packages/tensorflow_addons/metrics/cohens_kappa.py in _update_multi_class_model(self, y_true, y_pred, sample_weight)\n     153         y_pred = self._cast_ypred(y_pred)\n     154\n --> 155         return self._update_confusion_matrix(y_true, y_pred, sample_weight)\n     156\n     157     @tf.function\n \n /usr/local/lib/python3.6/dist-packages/tensorflow_addons/metrics/cohens_kappa.py in _update_confusion_matrix(self, y_true, y_pred, sample_weight)\n     176             num_classes=self.num_classes,\n     177             weights=sample_weight,\n --> 178             dtype=tf.float32,\n     179         )\n     180\n \n /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/confusion_matrix.py in confusion_matrix(labels, predictions, num_classes, weights, dtype, name)\n     190\n     191     shape = array_ops.stack([num_classes, num_classes])\n --> 192     indices = array_ops.stack([labels, predictions], axis=1)\n     193     values = (array_ops.ones_like(predictions, dtype)\n     194               if weights is None else weights)\n \n /usr/local/lib/python3.6/dist-packages/tensorflow/python/util/dispatch.py in wrapper(*args, **kwargs)\n     178     \"\"\"Call target, and fall back on dispatchers if there is a TypeError.\"\"\"\n     179     try:\n --> 180       return target(*args, **kwargs)\n     181     except (TypeError, ValueError):\n     182       # Note: convert_to_eager_tensor currently raises a ValueError, not a\n \n /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py in stack(values, axis, name)\n    1338     if axis < -expanded_num_dims or axis >= expanded_num_dims:\n    1339       raise ValueError(\"axis = %d not in [%d, %d)\" %\n -> 1340                        (axis, -expanded_num_dims, expanded_num_dims))\n    1341\n    1342   return gen_array_ops.pack(values, axis=axis, name=name)\n \n ValueError: axis = 1 not in [-1, 1)\n </denchmark-code>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "2a701190ff75c76120a7c4691291afa071512840", "commit_author": "Bruno Guberfain do Amaral", "commitT": "2020-07-06 20:41:35-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow_addons\\metrics\\cohens_kappa.py", "file_new_name": "tensorflow_addons\\metrics\\cohens_kappa.py", "file_complexity": {"file_NLOC": "163", "file_CCN": "17", "file_NToken": "1036"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "181,182", "deleted_lines": null, "method_info": {"method_name": "_update_confusion_matrix", "method_params": "self,y_true,y_pred,sample_weight", "method_startline": "180", "method_endline": "192", "method_complexity": {"method_NLOC": "11", "method_CCN": "1", "method_NToken": "69", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "171,172,173,174,175,176,177,178", "deleted_lines": "171,172", "method_info": {"method_name": "_safe_squeeze", "method_params": "self,y", "method_startline": "171", "method_endline": "178", "method_complexity": {"method_NLOC": "5", "method_CCN": "2", "method_NToken": "37", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow_addons\\metrics\\tests\\cohens_kappa_test.py", "file_new_name": "tensorflow_addons\\metrics\\tests\\cohens_kappa_test.py", "file_complexity": {"file_NLOC": "143", "file_CCN": "19", "file_NToken": "1945"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "241,242,243,244,245,246,247,248", "deleted_lines": null, "method_info": {"method_name": "test_cohen_kappa_single_batch", "method_params": "", "method_startline": "241", "method_endline": "248", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "54", "method_nesting_level": "0"}}}}}}}}