{"BR": {"BR_id": "2343", "BR_author": "Crispy13", "BRopenT": "2021-01-13T01:29:33Z", "BRcloseT": "2021-01-13T22:14:31Z", "BR_text": {"BRsummary": "ValueError: Tensor conversion requested dtype float32 for Tensor with dtype uint8 when using losses.SigmoidFocalCrossEntropy", "BRdescription": "\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04\n TensorFlow version and how it was installed (source or binary): 2.4.0, pip\n TensorFlow-Addons version and how it was installed (source or binary): 0.11.2, pip\n Python version: 3.8\n Is GPU used? (yes/no): yes\n \n <denchmark-code>ValueError: in user code:\n \n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py:805 train_function  *\n         return step_function(self, iterator)\n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow_addons/utils/keras_utils.py:61 call  *\n         return self.fn(y_true, y_pred, **self._fn_kwargs)\n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow_addons/losses/focal_loss.py:122 sigmoid_focal_crossentropy  *\n         y_true = tf.convert_to_tensor(y_true, dtype=y_pred.dtype)\n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow/python/util/dispatch.py:201 wrapper  **\n         return target(*args, **kwargs)\n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow/python/framework/ops.py:1404 convert_to_tensor_v2_with_dispatch\n         return convert_to_tensor_v2(\n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow/python/framework/ops.py:1410 convert_to_tensor_v2\n         return convert_to_tensor(\n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow/python/profiler/trace.py:163 wrapped\n         return func(*args, **kwargs)\n     /home/eck/software/anaconda3/envs/hk2/lib/python3.8/site-packages/tensorflow/python/framework/ops.py:1507 convert_to_tensor\n         raise ValueError(\n \n     ValueError: Tensor conversion requested dtype float32 for Tensor with dtype uint8: <tf.Tensor 'y_true:0' shape=(None, None, None, 1) dtype=uint8>\n </denchmark-code>\n \n When y_true had dtype of uint8 and y_pred had dtype float32, tf.conver_to_tensor(y_true, y_pred.dtype) in focal loss function failed.\n Is it intended that y_true and y_pred have the same dtype when passed to the loss function? Do I need to convert y_true into float32 tensor in data processing step?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Crispy13", "commentT": "2021-01-13T04:57:19Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/Crispy13>@Crispy13</denchmark-link>\n , thanks for the report. That's a bug. It should be  instead of .\n \t\t"}}}, "commit": {"commit_id": "11aad761bfdc5cd4ef29b29e678e0d081f846fa3", "commit_author": "Tzu-Wei Sung", "commitT": "2021-01-13 14:14:30-08:00", "commit_complexity": {"commit_NLOC": "0.825", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow_addons\\losses\\focal_loss.py", "file_new_name": "tensorflow_addons\\losses\\focal_loss.py", "file_complexity": {"file_NLOC": "111", "file_CCN": "2", "file_NToken": "370"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "115,118,134,138", "deleted_lines": "115,118,134,138"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "tensorflow_addons\\losses\\tests\\focal_loss_test.py", "file_new_name": "tensorflow_addons\\losses\\tests\\focal_loss_test.py", "file_complexity": {"file_NLOC": "43", "file_CCN": "4", "file_NToken": "450"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "98,99,100,101", "method_info": {"method_name": "log10", "method_params": "x", "method_startline": "98", "method_endline": "101", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "40", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70", "deleted_lines": "47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70", "method_info": {"method_name": "test_without_logits", "method_params": "y_pred_dtype,y_true_dtype,from_logits", "method_startline": "47", "method_endline": "70", "method_complexity": {"method_NLOC": "20", "method_CCN": "2", "method_NToken": "262", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": null, "deleted_lines": "36,37,38", "method_info": {"method_name": "to_logit", "method_params": "prob", "method_startline": "36", "method_endline": "38", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "23", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": null, "deleted_lines": "106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131", "method_info": {"method_name": "test_without_logits", "method_params": "", "method_startline": "106", "method_endline": "131", "method_complexity": {"method_NLOC": "18", "method_CCN": "1", "method_NToken": "212", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70", "deleted_lines": "42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85", "method_info": {"method_name": "test_with_logits", "method_params": "", "method_startline": "42", "method_endline": "85", "method_complexity": {"method_NLOC": "35", "method_CCN": "1", "method_NToken": "249", "method_nesting_level": "0"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "26", "deleted_lines": "25,29", "method_info": {"method_name": "test_config", "method_params": "", "method_startline": "25", "method_endline": "30", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "46", "method_nesting_level": "0"}}}}}}}}