{"BR": {"BR_id": "1509", "BR_author": "naeioi", "BRopenT": "2020-06-03T22:02:43Z", "BRcloseT": "2020-06-17T03:14:31Z", "BR_text": {"BRsummary": "log_std in agent info is wrong", "BRdescription": "\n After the tfp patch, log_std in agent info is actually standard deviation, but not the logarithm of it.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "naeioi", "commentT": "2020-06-03T22:03:55Z", "comment_text": "\n \t\tYou're saying it's std, not log_std?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "naeioi", "commentT": "2020-06-03T22:46:14Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ryanjulian>@ryanjulian</denchmark-link>\n  Yes. Sorry I had a typo.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "naeioi", "commentT": "2020-06-03T22:47:50Z", "comment_text": "\n \t\tagent_info is probably not needed as we move towards TFP?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "naeioi", "commentT": "2020-06-03T22:51:15Z", "comment_text": "\n \t\t\n \n \n garage/src/garage/tf/policies/gaussian_mlp_policy.py\n \n \n          Line 192\n       in\n       a75ce18\n \n \n \n \n \n \n  return sample, dict(mean=mean, log_std=log_std) \n \n \n \n \n \n The log_std is returned by self._f_dist, which is\n \n \n \n garage/src/garage/tf/policies/gaussian_mlp_policy.py\n \n \n         Lines 155 to 158\n       in\n       a75ce18\n \n \n \n \n \n \n  self._dist, _, _ = self.model.build(state_input, name=name) \n \n \n \n  self._f_dist = tf.compat.v1.get_default_session().make_callable( \n \n \n \n      [self._dist.sample(), self._dist.loc, \n \n \n \n  self._dist.stddev()], \n \n \n \n \n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "naeioi", "commentT": "2020-06-03T22:58:15Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ahtsan>@ahtsan</denchmark-link>\n  I agree. The only use case of agent info should be debugging. I am using it in TE to visualize embedding distribution.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "naeioi", "commentT": "2020-06-03T22:59:23Z", "comment_text": "\n \t\tBefore introducing TFP, agent_info basically represents a distribution and garage.distribution uses these dicts when calculating things like log likelihood. However, with TFP, agent_infos are no longer needed.\n I think we will probably have it removed when we refactor policy API.\n \t\t"}}}, "commit": {"commit_id": "4806717d2b2b9110b345e57a6565424609bee134", "commit_author": "Anson Wong", "commitT": "2020-06-16 20:14:30-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\garage\\tf\\embeddings\\gaussian_mlp_encoder.py", "file_new_name": "src\\garage\\tf\\embeddings\\gaussian_mlp_encoder.py", "file_complexity": {"file_NLOC": "158", "file_CCN": "12", "file_NToken": "651"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "128,129,131", "deleted_lines": "128,130,131", "method_info": {"method_name": "build", "method_params": "self,embedding_input,name", "method_startline": "118", "method_endline": "132", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "89", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\garage\\tf\\policies\\gaussian_mlp_policy.py", "file_new_name": "src\\garage\\tf\\policies\\gaussian_mlp_policy.py", "file_complexity": {"file_NLOC": "189", "file_CCN": "8", "file_NToken": "871"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "155,156,158", "deleted_lines": "155,157,158", "method_info": {"method_name": "build", "method_params": "self,state_input,name", "method_startline": "145", "method_endline": "159", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "89", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\garage\\tf\\policies\\gaussian_mlp_task_embedding_policy.py", "file_new_name": "src\\garage\\tf\\policies\\gaussian_mlp_task_embedding_policy.py", "file_complexity": {"file_NLOC": "197", "file_CCN": "12", "file_NToken": "1277"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "138,139,144,145,148,149,152", "deleted_lines": "138,139,144,145,148,149,150,151", "method_info": {"method_name": "_initialize", "method_params": "self", "method_startline": "119", "method_endline": "153", "method_complexity": {"method_NLOC": "27", "method_CCN": "1", "method_NToken": "309", "method_nesting_level": "1"}}}}}}}}