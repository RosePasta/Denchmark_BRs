{"BR": {"BR_id": "1334", "BR_author": "ahmedalbahnasawy", "BRopenT": "2019-11-06T09:58:10Z", "BRcloseT": "2020-05-15T09:58:48Z", "BR_text": {"BRsummary": "Parser in e2e_asr_transducer is missing a return statment", "BRdescription": "\n In the code: <denchmark-link:https://github.com/espnet/espnet/blob/master/espnet/nets/pytorch_backend/e2e_asr_transducer.py>https://github.com/espnet/espnet/blob/master/espnet/nets/pytorch_backend/e2e_asr_transducer.py</denchmark-link>\n \n You're not returning parser in add_arguments. This throws an error when attempting to call E2E.build()\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ahmedalbahnasawy", "commentT": "2019-11-06T11:28:23Z", "comment_text": "\n \t\tThanks for the report.\n <denchmark-link:https://github.com/b-flo>@b-flo</denchmark-link>\n , could you confirm it?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ahmedalbahnasawy", "commentT": "2019-11-06T12:50:43Z", "comment_text": "\n \t\tHi,\n Thank you for the report!\n I can confirm parser isn't returned as it should be. However before making any change, could you copy the error thrown please? I'm extensively using RNNT/RNNT-Att with arguments specific to the implementation and I did not encountered any errors. I'm a bit intrigued on why it wasn't reported/catched before.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ahmedalbahnasawy", "commentT": "2019-11-06T13:02:07Z", "comment_text": "\n \t\tUser classes are considered mutable. Python doesn't have (absolutely) private attributes, so you can always change a class by reaching into the internals. So the parser variable is considered a call by reference. I also did not encountered any errors.\n <denchmark-code>from espnet.utils.dynamic_import import dynamic_import\n     if args.model_module is None:\n         model_module = \"espnet.nets.\" + args.backend + \"_backend.e2e_asr:E2E\"\n     else:\n         model_module = args.model_module\n     model_class = dynamic_import(model_module)\n     model_class.add_arguments(parser)\n \n     args = parser.parse_args(cmd_args)\n     args.model_module = model_module\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "ahmedalbahnasawy", "commentT": "2019-11-06T13:04:21Z", "comment_text": "\n \t\t\n Python doesn't have (absolutely) private attributes, so you can always change a class by reaching into the internals. So the parser variable is considered a call by reference\n \n That's what I suspected but I wanted to be sure given the error! Thanks for the info!\n Edit : For consistency with other modules I'll make the changes when I have time today\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "ahmedalbahnasawy", "commentT": "2019-11-06T14:07:56Z", "comment_text": "\n \t\tThanks for taking the time to review my issue.\n The issue arises when trying to import E2E asr_transducer, then using the command E2E.build(). The error occurs when the line default_args, _ = add_arguments(argparse.ArgumentParser()).parse_known_args() is executed in the file (...)/espnet/utils/fill_missing_args.py.\n Using the available train and eval files will not yield that error, but creating a new python file with the correct imports will create the error: NoneType Object does not have attribute parse_known_args()\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "ahmedalbahnasawy", "commentT": "2019-11-06T19:33:52Z", "comment_text": "\n \t\tThank you for the PR that fixes the issue. I read your explanation and came to understanding of your point. What you're doing is passing a parser object by reference to the add_argument function, which is working well for you. However, in your code /path/to/utils/fill_missing_args.py you're assuming that parser is returned, since you're calling parse_known_args() on the execution of the function, therefore failing in this case. Another solution can be introduced which is to change the line default_args, _ = add_arguments(argparse.ArgumentParser()).parse_known_args() into separate lines as so:\n <denchmark-code>parser = argparse.ArgumentParser()\n add_arguments(parser)\n default_args, _ = parser.parse_known_args()\n </denchmark-code>\n \n Regards,\n \t\t"}}}, "commit": {"commit_id": "e13810c05a1a0bba5ab66f44f497fbb174c3ace2", "commit_author": "Yosuke Higuchi", "commitT": "2019-12-24 12:45:55+09:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "utils\\pack_model.sh", "file_new_name": "utils\\pack_model.sh", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "28", "deleted_lines": "28"}}}}}}