{"BR": {"BR_id": "4652", "BR_author": "leqiao-1", "BRopenT": "2020-07-29T07:30:21Z", "BRcloseT": "2020-10-11T11:41:37Z", "BR_text": {"BRsummary": "onnxruntime_perf_test core dumped with rel-1.4.0", "BRdescription": "\n Describe the bug\n I built onnxruntime_perf_test binaries for ep dnnl with rel-1.4.0, and it returns core dumped when setting OMP_WAIT_POLICY=active with command:\n onnxruntime_perf_test -e dnnl -P -y 1 -o 99 -m times -r 20 /data/mnist/mnist.onnx  result\n Setting inter_op_num_threads to 1\n Session creation time cost: 0.00756754 s\n Total inference time cost: 0.00109572 s\n Total inference requests: 20\n Average inference time cost: 0.0547861 ms\n Total inference run time: 0.00111142 s\n Avg CPU usage: 25 %\n Peak working set size: 20254720 bytes\n Segmentation fault (core dumped)\n This problem didn't occur in rel-1.3.0.\n System information\n \n Binaries built in base image ubuntu 16.04 and tested in base image python:3.6\n ONNX Runtime version: 1.4.0\n GCC/Compiler version: gcc version 5.4.0\n \n To Reproduce\n \n onnx model and test data:\n mnist.zip\n other\n core.onnxruntime_per.zip\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "leqiao-1", "commentT": "2020-07-29T21:54:15Z", "comment_text": "\n \t\tInteresting, we had to do a workaround on Windows to keep the OpenMP.dll loaded as it would crash on unload of the dnnl provider otherwise. I wonder if this is related.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "leqiao-1", "commentT": "2020-10-04T03:56:02Z", "comment_text": "\n \t\tThis issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "leqiao-1", "commentT": "2020-10-11T11:41:27Z", "comment_text": "\n \t\tThis issue has been automatically closed due to inactivity. Please reactivate if further support is needed.\n \t\t"}}}, "commit": {"commit_id": "082a741636f689d7f9c0ff5c68fe9132072686d7", "commit_author": "Tiago Koji Castro Shibata", "commitT": "2020-08-10 13:06:22-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\framework\\provider_bridge_ort.cc", "file_new_name": "onnxruntime\\core\\framework\\provider_bridge_ort.cc", "file_complexity": {"file_NLOC": "422", "file_CCN": "129", "file_NToken": "3831"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527", "method_info": {"method_name": "onnxruntime::ProviderLibrary::ProviderLibrary", "method_params": "filename", "method_startline": "506", "method_endline": "533", "method_complexity": {"method_NLOC": "17", "method_CCN": "4", "method_NToken": "133", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\dnnl\\dnnl_provider_factory.cc", "file_new_name": "onnxruntime\\core\\providers\\dnnl\\dnnl_provider_factory.cc", "file_complexity": {"file_NLOC": "42", "file_CCN": "8", "file_NToken": "218"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "36,37,38,39,40,41,42,43,44,45,46,47,48,49,50", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::Dnnl_Provider::CreateExecutionProviderFactory", "method_params": "use_arena", "method_startline": "35", "method_endline": "52", "method_complexity": {"method_NLOC": "10", "method_CCN": "3", "method_NToken": "60", "method_nesting_level": "2"}}}}}}}}