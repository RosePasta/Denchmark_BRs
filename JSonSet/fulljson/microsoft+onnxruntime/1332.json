{"BR": {"BR_id": "1332", "BR_author": "minus-one", "BRopenT": "2019-07-02T19:09:46Z", "BRcloseT": "2019-07-29T22:51:47Z", "BR_text": {"BRsummary": "SSD-Resnet34 model load fails with CPU-MKL-DNN backend", "BRdescription": "\n Describe the bug\n ssd-resnet34 onnx model fails to load on onnxruntime with mkl-dnn as backend. Fails with the following error:\n <denchmark-code>    self._sess.load_model(path_or_bytes)\n RuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : This is an invalid model. Error: the graph is not acyclic.\n \n </denchmark-code>\n \n The model loads correctly with onnxruntime as GPU as backend.\n The model also loads correctly with a CPU backend from the pypi builds.\n In all the cases it does throw warnings like\n [W:onnxruntime:Default, graph.cc:2227 CleanUnusedInitializers]\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\n Ubuntu 18.04\n ONNX Runtime installed from (source or binary):\n source - master\n ONNX Runtime version:\n 0.4.0\n Python version:\n 3.6.8\n Visual Studio version (if applicable):\n GCC/Compiler version (if compiling from source):\n 7.4.0\n CUDA/cuDNN version:\n GPU model and memory:\n \n \n Describe steps/code to reproduce the behavior:\n Download model from <denchmark-link:https://onnxzoo.blob.core.windows.net/models/opset_10/ssd/ssd.onnx>https://onnxzoo.blob.core.windows.net/models/opset_10/ssd/ssd.onnx</denchmark-link>\n \n Run inside python\n import onnxruntime as rt\n rt.InferenceSession('ssd.onnx')\n Expected behavior\n A clear and concise description of what you expected to happen.\n Model loads correctly.\n Screenshots\n If applicable, add screenshots to help explain your problem.\n Additional context\n Add any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "minus-one", "commentT": "2019-07-02T19:13:21Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/guschmue>@guschmue</denchmark-link>\n  <denchmark-link:https://github.com/jywu-msft>@jywu-msft</denchmark-link>\n  FYI\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "minus-one", "commentT": "2019-07-02T21:47:41Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/sreekanth-yalachigere>@sreekanth-yalachigere</denchmark-link>\n  , can you please take a look? i'm assuming this is with your latest subgraph changes.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "minus-one", "commentT": "2019-07-12T16:07:25Z", "comment_text": "\n \t\tYes, I see the same on a resnet50.\n I have the same resnet50 in opset8 and that one is ok.\n export ORT_MKLDNN_SUBGRAPH=0 will fix it but of course we'd want the subgraph. I can provide the resnet50 if you need it ... might be a little easier to debug than ssd.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "minus-one", "commentT": "2019-07-12T17:05:21Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/sreekanth-yalachigere>@sreekanth-yalachigere</denchmark-link>\n  , can you take a look? seems like new opset is not being handled properly?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "minus-one", "commentT": "2019-07-12T18:09:49Z", "comment_text": "\n \t\tYes. Working on it. Thank you\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "minus-one", "commentT": "2019-07-17T00:08:48Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/guschmue>@guschmue</denchmark-link>\n  Can you please provide me resnet50 model to test my fix?\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "minus-one", "commentT": "2019-07-17T16:16:33Z", "comment_text": "\n \t\tEasy to create by running:\n <denchmark-code>wget https://zenodo.org/record/2535873/files/resnet50_v1.pb\n pip install tf2onnx==1.5.2\n python -m tf2onnx.convert --input resnet50_v1.pb --output resnet50_v1.onnx \\\n     --inputs-as-nchw input_tensor:0 \\\n     --inputs input_tensor:0 \\\n     --outputs ArgMax:0,softmax_tensor:0 --fold_const --verbose  --opset 10\n </denchmark-code>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "minus-one", "commentT": "2019-07-26T17:49:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/minus-one>@minus-one</denchmark-link>\n  does the fix resolve the issue for you?\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "minus-one", "commentT": "2019-07-29T21:52:45Z", "comment_text": "\n \t\tYes, it does. Sorry for the delayed confirmation.\n \t\t"}}}, "commit": {"commit_id": "f3c74ec3e9ee7e80daa3ccc7e95c3249844e7e41", "commit_author": "Sreekanth Yalachigere", "commitT": "2019-07-18 22:57:00-07:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "cmake\\external\\mkldnn.cmake", "file_new_name": "cmake\\external\\mkldnn.cmake", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "64,73", "deleted_lines": null}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "cmake\\patches\\mkldnn\\mem-patch.cmake.patch", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "onnxruntime\\core\\providers\\mkldnn\\mkldnn_execution_provider.cc", "file_new_name": "onnxruntime\\core\\providers\\mkldnn\\mkldnn_execution_provider.cc", "file_complexity": {"file_NLOC": "368", "file_CCN": "64", "file_NToken": "3249"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "457", "deleted_lines": "439", "method_info": {"method_name": "onnxruntime::MKLDNNExecutionProvider::Compile", "method_params": "fused_nodes,node_compute_funcs", "method_startline": "438", "method_endline": "463", "method_complexity": {"method_NLOC": "22", "method_CCN": "3", "method_NToken": "204", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "115,121,122,134,135,136,137,138,139,140,141,142,143,144,145,146,147", "deleted_lines": "115,116,133,136,142", "method_info": {"method_name": "onnxruntime::MKLDNNExecutionProvider::UseSubgraph", "method_params": "graph_viewer,kernel_registries", "method_startline": "114", "method_endline": "159", "method_complexity": {"method_NLOC": "39", "method_CCN": "11", "method_NToken": "258", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "227,228,233,258,259,260,261,262,263", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::MKLDNNExecutionProvider::GetCapability", "method_params": "graph_viewer,kernel_registries", "method_startline": "220", "method_endline": "377", "method_complexity": {"method_NLOC": "122", "method_CCN": "29", "method_NToken": "906", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "115,121,122,134,135,136,137,138,139,140,141,142,143,144,145,146,147", "deleted_lines": "115,116,133,136,142", "method_info": {"method_name": "onnxruntime::MKLDNNExecutionProvider::UseSubgraph", "method_params": "graph_viewer,kernel_registries,result", "method_startline": "114", "method_endline": "147", "method_complexity": {"method_NLOC": "29", "method_CCN": "7", "method_NToken": "211", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "onnxruntime\\core\\providers\\mkldnn\\mkldnn_execution_provider.h", "file_new_name": "onnxruntime\\core\\providers\\mkldnn\\mkldnn_execution_provider.h", "file_complexity": {"file_NLOC": "112", "file_CCN": "20", "file_NToken": "837"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "102", "deleted_lines": "102,103"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\mkldnn\\subgraph\\mkldnn_conv.h", "file_new_name": "onnxruntime\\core\\providers\\mkldnn\\subgraph\\mkldnn_conv.h", "file_complexity": {"file_NLOC": "536", "file_CCN": "86", "file_NToken": "4799"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "241,247", "deleted_lines": "241,247", "method_info": {"method_name": "onnxruntime::mkl_dnn::MklDnnConv::CreatePrimitives", "method_params": "api,context,cpu_engine,net,source_format", "method_startline": "73", "method_endline": "337", "method_complexity": {"method_NLOC": "223", "method_CCN": "31", "method_NToken": "2192", "method_nesting_level": "3"}}}}}}}}