{"BR": {"BR_id": "554", "BR_author": "ghmole", "BRopenT": "2019-02-26T02:40:59Z", "BRcloseT": "2019-03-13T21:38:46Z", "BR_text": {"BRsummary": "Exception occurred at train() : Input contains NaN, infinity or a value too large for dtype('float32').  when run example/task_modules/image/cnn_mnist_regression.py", "BRdescription": "\n <denchmark-h:h3>Bug Description</denchmark-h>\n \n I try to run  'example/task_modules/image/cnn_mnist_regression.py'\n but this exception happens:\n Exception occurred at train() : Input contains NaN, infinity or a value too large for dtype('float32').\n <denchmark-h:h3>Expected Behavior</denchmark-h>\n \n Traceback (most recent call last):\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/multiprocessing/process.py\", line 258, in _bootstrap\n self.run()\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/multiprocessing/process.py\", line 93, in run\n self._target(*self._args, **self._kwargs)\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/autokeras/search.py\", line 343, in train\n verbose=verbose).train_model(**trainer_args)\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/autokeras/nn/model_trainer.py\", line 138, in train_model\n test_loss, metric_value = self._test()\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/autokeras/nn/model_trainer.py\", line 216, in _test\n return test_loss, self.metric.compute(all_predicted, all_targets)\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/autokeras/nn/metric.py\", line 47, in compute\n return cls.evaluate(prediction, target)\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/autokeras/nn/metric.py\", line 51, in evaluate\n return mean_squared_error(target, prediction)\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/sklearn/metrics/regression.py\", line 239, in mean_squared_error\n y_true, y_pred, multioutput)\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/sklearn/metrics/regression.py\", line 77, in _check_reg_targets\n y_pred = check_array(y_pred, ensure_2d=False)\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/sklearn/utils/validation.py\", line 573, in check_array\n allow_nan=force_all_finite == 'allow-nan')\n File \"/home/ukxu/anaconda3/envs/ak/lib/python3.6/site-packages/sklearn/utils/validation.py\", line 56, in _assert_all_finite\n raise ValueError(msg_err.format(type_err, X.dtype))\n ValueError: Input contains NaN, infinity or a value too large for dtype('float32').\n <denchmark-h:h3>Setup Details</denchmark-h>\n \n Include the details about the versions of:\n \n OS type and version:\n Python:                  3.6.8\n autokeras:              0.3.6\n scikit-learn:            0.20.1\n numpy:\n keras:                     2.2.4\n scipy:\n tensorflow:            1.12.0\n pytorch:                 0.4.1\n \n <denchmark-h:h3>Additional context</denchmark-h>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ghmole", "commentT": "2019-03-04T08:55:42Z", "comment_text": "\n \t\tI'm having the same issue on the example and on any regression I tried, even if i'm using numpy.nan_to_num on the inputs.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ghmole", "commentT": "2019-03-04T16:51:07Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/boyuangong>@boyuangong</denchmark-link>\n  Would you please look into this bug? Thanks.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ghmole", "commentT": "2019-03-10T04:57:05Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ghmole>@ghmole</denchmark-link>\n  <denchmark-link:https://github.com/rebouvet>@rebouvet</denchmark-link>\n \n This issue is because the learning rate is too large and cause the gradient explored. I just change the learning rate in the trainer to a smaller number. It tests fine now. In the future we may add customizable training args include learning rate feature to users.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "ghmole", "commentT": "2019-03-11T08:07:54Z", "comment_text": "\n \t\tThanks for your response <denchmark-link:https://github.com/ghmole>@ghmole</denchmark-link>\n !\n Wouldn't be a good fix to implement some kind of gradient clipping?\n \t\t"}}}, "commit": {"commit_id": "bf3f97c70cd77f0fb6c21e14a57eebbb75abb92d", "commit_author": "boyuangong", "commitT": "2019-03-13 16:38:46-05:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autokeras\\nn\\model_trainer.py", "file_new_name": "autokeras\\nn\\model_trainer.py", "file_complexity": {"file_NLOC": "400", "file_CCN": "51", "file_NToken": "2494"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "113", "deleted_lines": null, "method_info": {"method_name": "train_model", "method_params": "self,lr,max_iter_num,max_no_improvement_num,timeout", "method_startline": "112", "method_endline": "116", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "23", "method_nesting_level": "1"}}}}}}}}