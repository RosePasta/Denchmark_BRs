{"BR": {"BR_id": "189", "BR_author": "hiepph", "BRopenT": "2018-09-12T13:50:47Z", "BRcloseT": "2018-09-18T00:42:48Z", "BR_text": {"BRsummary": "RuntimeError: CUDA error (10): invalid device ordinal on multi-GPU machine", "BRdescription": "\n <denchmark-h:h3>Bug Description</denchmark-h>\n \n I tried running the MNIST example (<denchmark-link:https://autokeras.com/start/#example>https://autokeras.com/start/#example</denchmark-link>\n ) on an 8-GPU machine but chose only 1 GPU to use, and this error popped up:\n <denchmark-code>Traceback (most recent call last):\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/multiprocessing/pool.py\", line 119, in worker\n     result = (True, func(*args, **kwds))\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/multiprocessing/pool.py\", line 44, in mapstar\n     return list(map(*args))\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/site-packages/autokeras/search.py\", line 296, in train\n     verbose=verbose).train_model(**trainer_args)\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/site-packages/autokeras/model_trainer.py\", line 64, in __init__\n     self.model.to(self.device)\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 379, in to\n     return self._apply(convert)\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 185, in _apply\n     module._apply(fn)\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 191, in _apply\n     param.data = fn(param.data)\n   File \"/home/hoanghiep/miniconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 377, in convert\n     return t.to(device, dtype if t.is_floating_point() else None, non_blocking)\n RuntimeError: CUDA error (10): invalid device ordina\n </denchmark-code>\n \n <denchmark-h:h3>Reproducing Steps</denchmark-h>\n \n Steps to reproduce the behavior:\n \n Step 1: Choose 1 GPU to use (among 8 GPUs):\n \n <denchmark-code>export CUDA_VISIBLE_DEVICES='7'\n </denchmark-code>\n \n \n Step 2: Run the MNIST example on https://autokeras.com/start/#example page\n \n <denchmark-code># autokeras_mnist.py\n python autokeras_mnist.py\n </denchmark-code>\n \n <denchmark-h:h3>Expected Behavior</denchmark-h>\n \n Succeed in running the MNIST example without this error\n <denchmark-h:h3>Setup Details</denchmark-h>\n \n Include the details about the versions of:\n \n OS type and version: Ubuntu 16.04\n Python:  3.6 (Anaconda)\n autokeras: 0.2.14\n scikit-learn: 0.19.1\n numpy: 1.15.1\n keras: 2.2.2\n scipy: 1.0.1\n tensorflow: 1.10.0\n pytorch: 0.4.1\n \n <denchmark-h:h3>Additional context</denchmark-h>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "hiepph", "commentT": "2018-09-12T13:56:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/tl-yang>@tl-yang</denchmark-link>\n  Would you change the auto GPU selection to only select from the CUDA_VISIBLE_DEVICES pool?\n Thanks.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "hiepph", "commentT": "2018-09-18T00:42:48Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hiepph>@hiepph</denchmark-link>\n  This one is fixed in the develop version. Will be in the next release.\n Thanks.\n \t\t"}}}, "commit": {"commit_id": "a9e8f4b6847e4aa738227ddf564e912d791d8541", "commit_author": "tl-yang", "commitT": "2018-09-17 19:41:33-05:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autokeras\\search.py", "file_new_name": "autokeras\\search.py", "file_complexity": {"file_NLOC": "240", "file_CCN": "49", "file_NToken": "1784"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "202", "method_info": {"method_name": "search", "method_params": "self,train_data,test_data,timeout", "method_startline": "162", "method_endline": "242", "method_complexity": {"method_NLOC": "69", "method_CCN": "17", "method_NToken": "632", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autokeras\\utils.py", "file_new_name": "autokeras\\utils.py", "file_complexity": {"file_NLOC": "64", "file_CCN": "25", "file_NToken": "472"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "79,86,88,89,90,91,92,93,94", "deleted_lines": "84,85,86,87,88,89", "method_info": {"method_name": "get_device", "method_params": "", "method_startline": "71", "method_endline": "95", "method_complexity": {"method_NLOC": "13", "method_CCN": "9", "method_NToken": "129", "method_nesting_level": "0"}}}}}}}}