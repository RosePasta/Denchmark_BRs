{"BR": {"BR_id": "2599", "BR_author": "maxfy1992", "BRopenT": "2021-01-14T10:18:24Z", "BRcloseT": "2021-01-15T08:58:41Z", "BR_text": {"BRsummary": "binary op compute err by packing", "BRdescription": "\n <denchmark-code>ncnn version\n commit 6572e98f6656f1333189f46db9dad03068e1a697 (HEAD -> master, origin/master, origin/HEAD, dd/master)\n Author: nihuini <nihuini@tencent.com>\n Date:   Wed Jan 13 16:56:51 2021 +0800\n \n     handle onnx transpose 102 201 after lstm\n \n \n model.param like below:\n Input                     0                         0 1 0\n MemoryData       754                      0 1 754 0=2 1=800\n Convolution      365                        1 1 0 365 ...\n BinaryOp             755                      2 1 365 754 755 0=2\n \n When open Vulkan comute\n 365's shape is dims(2)w(2)h(200)c(1)pack(4) \n 754's shape is dims(2)w(2)h(800)c(1)pack(1) \n \n BinaryOp(755)'s broadcast is true but it should be false..\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "maxfy1992", "commentT": "2021-01-14T10:20:44Z", "comment_text": "\n \t\tI work around by add code below\n <denchmark-code>diff --git a/src/layer/memorydata.cpp b/src/layer/memorydata.cpp\n index 1c50b010..359d89e2 100644\n --- a/src/layer/memorydata.cpp\n +++ b/src/layer/memorydata.cpp\n @@ -49,6 +49,12 @@ int MemoryData::load_model(const ModelBin& mb)\n      {\n          data.create(1);\n      }\n +\n +    Option opt;\n +    Mat packed;\n +    convert_packing(data, packed, 4, opt);\n +    data = packed;\n +\n      if (data.empty())\n          return -100;\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "maxfy1992", "commentT": "2021-01-14T11:25:24Z", "comment_text": "\n \t\tconfirmed\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "maxfy1992", "commentT": "2021-01-15T08:41:17Z", "comment_text": "\n \t\t<denchmark-code>#include \"net.h\"\n \n #include \"datareader.h\"\n \n class DataReaderFromEmpty : public ncnn::DataReader\n {\n public:\n     virtual int scan(const char* format, void* p) const\n     {\n         return 0;\n     }\n     virtual size_t read(void* buf, size_t size) const\n     {\n         // assign float values\n         memset(buf, 0, size);\n \n         float* p = (float*)buf;\n         for (int i = 0; i < size / 4; i++)\n         {\n             p[i] = i;\n         }\n \n         return size;\n     }\n };\n \n void pretty_print(const ncnn::Mat& m)\n {\n     for (int q=0; q<m.c; q++)\n     {\n         const float* ptr = m.channel(q);\n         for (int y=0; y<m.h; y++)\n         {\n             for (int x=0; x<m.w; x++)\n             {\n                 printf(\"%f \", ptr[x]);\n             }\n             ptr += m.w;\n             printf(\"\\n\");\n         }\n         printf(\"------------------------\\n\");\n     }\n }\n \n int main()\n {\n     ncnn::Net net;\n     net.opt.num_threads = 1;\n     net.opt.use_vulkan_compute = true;\n \n     net.load_param(\"test.param\");\n \n     DataReaderFromEmpty dr;\n     net.load_model(dr);\n \n     ncnn::Extractor ex = net.create_extractor();\n \n     ncnn::Mat x(2, 800);\n     x.fill(20.f);\n     ex.input(\"x\", x);\n \n     ncnn::Mat y;\n     ex.extract(\"y\", y);\n \n     pretty_print(y);\n \n     return 0;\n }\n </denchmark-code>\n \n <denchmark-code>7767517\n 3 3\n Input        0    0 1 x\n MemoryData   1    0 1 w 0=2 1=800\n BinaryOp     2    2 1 x w y 0=2\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "maxfy1992", "commentT": "2021-01-15T08:59:23Z", "comment_text": "\n \t\t\u4fee\u597d\u4e86\n \t\t"}}}, "commit": {"commit_id": "34557fb1341e3572360629354de9cdfc6ae55523", "commit_author": "nihuini", "commitT": "2021-01-15 16:58:29+08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\layer\\vulkan\\memorydata_vulkan.cpp", "file_new_name": "src\\layer\\vulkan\\memorydata_vulkan.cpp", "file_complexity": {"file_NLOC": "74", "file_CCN": "41", "file_NToken": "670"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "66,67,68,69,70,71,72,73,74,75,78,82", "deleted_lines": "68,72", "method_info": {"method_name": "ncnn::MemoryData_vulkan::upload_model", "method_params": "cmd,opt", "method_startline": "64", "method_endline": "86", "method_complexity": {"method_NLOC": "19", "method_CCN": "15", "method_NToken": "191", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "29", "deleted_lines": "29", "method_info": {"method_name": "ncnn::MemoryData_vulkan::create_pipeline", "method_params": "opt", "method_startline": "27", "method_endline": "62", "method_complexity": {"method_NLOC": "30", "method_CCN": "21", "method_NToken": "314", "method_nesting_level": "1"}}}}}}}}