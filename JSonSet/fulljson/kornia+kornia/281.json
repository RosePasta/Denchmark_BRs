{"BR": {"BR_id": "281", "BR_author": "potocpav", "BRopenT": "2019-10-24T10:38:07Z", "BRcloseT": "2019-10-30T12:12:45Z", "BR_text": {"BRsummary": "[BUG] crop_and_resize doesn't work when it changes image aspect ratio", "BRdescription": "\n Here is a failing test-case, adapted from <denchmark-link:https://github.com/arraiyopensource/kornia/blob/a48164b1274827773f3da36dcbe2879c69f4471c/test/geometry/transform/test_crop.py#L14>this test</denchmark-link>\n  but with some aspect-ratio distortion:\n >>> inp = torch.tensor([[\n             [1., 2., 3., 4.],\n             [5., 6., 7., 8.],\n             [9., 10., 11., 12.],\n             [13., 14., 15., 16.],\n         ]])\n >>> height, width = 2, 3\n >>> boxes = torch.tensor([[\n             [1., 1.],\n             [1., 2.],\n             [2., 1.],\n             [2., 2.],\n         ]])\n >>> kornia.crop_and_resize(inp, boxes, (height, width))\n tensor([[[ 6.0000,  7.0000,  8.0000],\n          [ 8.0000,  9.0000, 10.0000]]])\n But the expected result, as per <denchmark-link:https://torchgeometry.readthedocs.io/en/latest/geometry.transform.html#kornia.geometry.transform.crop_and_resize>documentation</denchmark-link>\n , is:\n torch.tensor([[[6., 6.5, 7.],\n                [10., 10.5, 11.]]])\n The issue seems to be caused by a mis-use of the  function by . The arguments to <denchmark-link:https://torchgeometry.readthedocs.io/en/latest/geometry.transform.html#kornia.geometry.transform.get_perspective_transform>get_perspective_transform</denchmark-link>\n  expect points to be written in [x,y] format (not documented), but  passes them in [y,x]. The [x,y] ordering in  is <denchmark-link:https://kornia.readthedocs.io/en/latest/tutorials/warp_perspective.html>used in this example</denchmark-link>\n .\n The existing tests for crop_and_resize are written in such an unfortunate way that they work both ways.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "potocpav", "commentT": "2019-10-24T10:49:47Z", "comment_text": "\n \t\tThe question is how to correct this:\n \n Change crop_and_resize to take [x,y]\n Change get_perspective_transform to take [y,x]\n Leave the interfaces as-is, and convert between the representations inside crop_and_resize\n \n Edit: there's also an issue with point ordering: clockwise (get_perspective_transform), or left-to-right, top-to-bottom (`crop_and_resize')\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "potocpav", "commentT": "2019-10-26T16:55:06Z", "comment_text": "\n \t\tI will submit a PR if we decide which approach to take.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "potocpav", "commentT": "2019-10-27T12:43:51Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/potocpav>@potocpav</denchmark-link>\n  good catch ! I would go for 1 just make thing simple. If you can also update the test to cover this corners cases would be great.\n \t\t"}}}, "commit": {"commit_id": "9840e44a57a3b9f9c5819d668aabfb0621ac931f", "commit_author": "Pavel Potocek", "commitT": "2019-10-30 13:12:43+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "kornia\\geometry\\transform\\crop.py", "file_new_name": "kornia\\geometry\\transform\\crop.py", "file_complexity": {"file_NLOC": "144", "file_CCN": "8", "file_NToken": "834"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "23,24,25,65,66,70,71,74,75,76", "deleted_lines": "23,24,25,65,66,70,71,74,75,76"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "test\\geometry\\transform\\test_crop.py", "file_new_name": "test\\geometry\\transform\\test_crop.py", "file_complexity": {"file_NLOC": "223", "file_CCN": "14", "file_NToken": "2029"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "22,24,25,32", "deleted_lines": "22,24,25,30", "method_info": {"method_name": "test_crop", "method_params": "self", "method_startline": "14", "method_endline": "36", "method_complexity": {"method_NLOC": "20", "method_CCN": "1", "method_NToken": "179", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "101", "deleted_lines": "99", "method_info": {"method_name": "test_crop_batch_broadcast", "method_params": "self", "method_startline": "75", "method_endline": "105", "method_complexity": {"method_NLOC": "28", "method_CCN": "1", "method_NToken": "257", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "143", "deleted_lines": "141", "method_info": {"method_name": "test_jit", "method_params": "self", "method_startline": "127", "method_endline": "149", "method_complexity": {"method_NLOC": "20", "method_CCN": "1", "method_NToken": "177", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "116", "deleted_lines": "114", "method_info": {"method_name": "test_gradcheck", "method_params": "self", "method_startline": "107", "method_endline": "124", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "128", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "56,57,64,66,69", "deleted_lines": "56,57,62,66,67", "method_info": {"method_name": "test_crop_batch", "method_params": "self", "method_startline": "38", "method_endline": "73", "method_complexity": {"method_NLOC": "33", "method_CCN": "1", "method_NToken": "292", "method_nesting_level": "1"}}}}}}}}