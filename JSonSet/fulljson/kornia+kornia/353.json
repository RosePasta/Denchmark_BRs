{"BR": {"BR_id": "353", "BR_author": "pablovela5620", "BRopenT": "2019-11-25T23:30:47Z", "BRcloseT": "2020-10-15T11:38:40Z", "BR_text": {"BRsummary": "[BUG] Potential Spatial Soft Argmax Bug", "BRdescription": "\n Hi, I have the following issue. I'm not sure if this is the intended behavior of the  but I seem to be having trouble with it. I have the following heatmap. I created this in such a way that the min value is very close to zero and the max value is 1. I made sure to use  as stated in the documentation it should be a valid heatmap.\n <denchmark-link:https://user-images.githubusercontent.com/25287427/69586327-dd997c00-0fa7-11ea-9f4e-ef650d7543fe.png></denchmark-link>\n \n it has a shape of (1,1,224,224) and when I run spatial_softargmax_2d(heatmap, False) I get a value an output of  when what I expect to get is something like ~. Am I missing something?\n Thanks for the help!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "pablovela5620", "commentT": "2019-11-26T12:19:34Z", "comment_text": "\n \t\tHi,\n Could you please post a code you used to generate the heatmap, so we can run and check?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "pablovela5620", "commentT": "2019-12-20T09:07:23Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/pablovela5620>@pablovela5620</denchmark-link>\n  check <denchmark-link:https://github.com/kornia/kornia/issues/382>#382</denchmark-link>\n . Could you provide a snippet to reproduce this issue so that can be included as test ?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "pablovela5620", "commentT": "2019-12-31T23:37:21Z", "comment_text": "\n \t\tSure, this is what I used to generate the heatmaps from uv coords\n <denchmark-link:https://user-images.githubusercontent.com/25287427/71636346-291cf680-2bf4-11ea-9520-644acad0ad76.png></denchmark-link>\n \n def create_single_hm(grid, uv, sigma):\n     diff = grid-uv\n     norm = torch.norm(diff, dim=3)\n     return torch.exp(-(norm)/(sigma**2))\n def generate_heatmaps_from_uv(uv_coords, hm_size, sigma = torch.tensor(3)):\n     '''\n     uv_tensor (21x2)\n     '''\n     heatmaps = []\n     mesh_grid = kornia.utils.create_meshgrid(hm_size,hm_size, normalized_coordinates=False)\n     for uv in uv_coords:\n         heatmaps.append(create_single_hm(mesh_grid, uv, sigma))\n     heatmaps = torch.stack(heatmaps).squeeze(1)\n     return heatmaps\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "pablovela5620", "commentT": "2020-02-17T14:44:55Z", "comment_text": "\n \t\tHi,\n Discovered Kornia because of the comment in the DSNTNN repository that I've used in a previous project (thanks, <denchmark-link:https://github.com/anibali>@anibali</denchmark-link>\n  ). Kornia looks like a very promising repository, well done!\n I have a couple comments/questions related to this issue and to the soft-argmax implementation in Kornia. As this became longer than I planned (sorry), I'll split the post by topic.\n 1) Multiple function calls w/similar name\n I find it confusing that there are two function calls for \"spatial soft-argmax\", that do slightly different things:\n \n \n kornia.geometry.spatial_soft_argmax.spatial_soft_argmax2d\n \n \n \n kornia.geometry.dsnt.spatial_softargmax_2d\n \n \n \n Currently (1) applies \"spatial softmax\" to the input before applying (2) to the resulting 'soft_input'.\n I would propose to rename one of the functions.\n I suppose it depends on how one defines the soft-argmax function:\n In [1], soft-argmax is defined explicitly to include the softmax operation (equation 2 in the paper).\n This corresponds to implementation (1).\n In [2] (the DSNT paper), it is assumed that the input \"is a single-channel normalized heatmap\" (normalized -> non-negative elements, summing to one). In other words, the input is already assumed to have been normalized.\n This corresponds to implementation (2).\n References:\n [1] Human Pose Regression by Combining Indirect Part Detection and Contextual\n Information\n [2] Numerical Coordinate Regression with Convolutional Neural Networks\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "pablovela5620", "commentT": "2020-02-17T15:17:42Z", "comment_text": "\n \t\t\n I don't know exactly how <denchmark-link:https://github.com/pablovela5620>@pablovela5620</denchmark-link>\n  applies the heatmaps to the 'spatial_softmax_2d'-function, so I might be way off in what follows:\n A heatmap generated by the example function 'generate_heatmaps_from_uv' has a single max value of 1. This breaks the assumption that the DSNT input sums to one (assumption made in 'kornia.geometry.spatial_softargmax_2d').\n I saw that there is already a function that generates a suitable gaussian:\n <denchmark-code>kornia.geometry.dsnt.render_gaussian_2d\n </denchmark-code>\n \n The function 'kornia.geometry.dsnt.spatial_softargmax_2d' can be tested by applying a gaussian created by that function. Note that 'render_gaussian_2d' seems to cap values to zero at around 1e-15.\n To test using gaussians from \"generate_heatmaps_from_uv, I believe it would be best to normalize the values s.t. the heatmap values sum to one:\n input_ = generate_heatmaps_from_uv(center_point, grid_size, std)\n input_normalized = input_ / input_.sum()\n output = dsnt.spatial_softargmax_2d(input_normalized)\n If, on the other hand, softmax is appllied to the heatmap generated by 'generate_heatmaps_from_uv', the output is flattened to such a degree that soft-argmax seemingly yields the center coordinate.\n One \"dirty fix\" in this particular case is:\n scaling_factor = 10 # or some other high number\n input_ = generate_heatmaps_from_uv(center_point, grid_size, std)\n soft_input = dsnt.spatial_softmax_2d(scaling_factor*input_)\n output = dsnt.spatial_softargmax_2d(soft_input)\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "pablovela5620", "commentT": "2020-02-17T15:19:45Z", "comment_text": "\n \t\t3) Docstring update\n Some documentation related to the dsnt/soft-argmax modules needs to be updated (they still point to 'kornia.contrib', which is a bit confusing).\n 4) Implementation plan\n Do you have an estimate of when v0.2.1 will be released/this issue will be closed?\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "pablovela5620", "commentT": "2020-02-17T21:33:43Z", "comment_text": "\n \t\tWhat <denchmark-link:https://github.com/borgesa>@borgesa</denchmark-link>\n  said is spot on, and I suspect that they have also found the true cause of the problem <denchmark-link:https://github.com/pablovela5620>@pablovela5620</denchmark-link>\n  is having.\n The name clash is mainly my fault, since I was the one that brought the important parts of dsntnn into Kornia after some initial work had already been done. My thinking at the time was that I wanted to make it easier for people to transition to Kornia from dsntnn, but in hindsight that perhaps wasn't the best idea. I wouldn't be against renaming kornia.geometry.dsnt.spatial_softargmax_2d to something like kornia.geometry.dsnt.expected_coordinates_2d and deprecating the old name, since technically the function calculates the expectation of X, Y coordinate values using the normalised heatmap as a probability mass function.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "pablovela5620", "commentT": "2020-10-08T09:24:07Z", "comment_text": "\n \t\tThis issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions, and happy coding day \ud83d\ude0e\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "pablovela5620", "commentT": "2020-10-18T19:04:34Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/anibali>@anibali</denchmark-link>\n  <denchmark-link:https://github.com/pablovela5620>@pablovela5620</denchmark-link>\n  was this issue solved ?\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "pablovela5620", "commentT": "2020-10-18T21:26:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/edgarriba>@edgarriba</denchmark-link>\n  Yes, I think so. It seems like it was an issue related to confusing similarly named functions with each other. The naming has since been clarified ( -> )\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "pablovela5620", "commentT": "2020-10-19T06:46:59Z", "comment_text": "\n \t\tGreat, thanks!\n \t\t"}}}, "commit": {"commit_id": "9a49b3c473fbbef6df1e0f245f8e99e36f6fec6a", "commit_author": "Aiden Nibali", "commitT": "2020-05-05 13:02:18+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\source\\geometry.rst", "file_new_name": "docs\\source\\geometry.rst", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "19,23,24,25", "deleted_lines": "19,20,21,25"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "kornia\\geometry\\dsnt.py", "file_new_name": "kornia\\geometry\\dsnt.py", "file_complexity": {"file_NLOC": "129", "file_CCN": "6", "file_NToken": "660"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "22", "deleted_lines": "24", "method_info": {"method_name": "spatial_softmax2d", "method_params": "Tensor,Tensor", "method_startline": "22", "method_endline": "24", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "23", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "109", "deleted_lines": null, "method_info": {"method_name": "_safe_zero_division", "method_params": "Tensor,Tensor,float", "method_startline": "106", "method_endline": "109", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "16", "deleted_lines": "16,17,18", "method_info": {"method_name": "_validate_batched_image_tensor_input", "method_params": "tensor", "method_startline": "15", "method_endline": "19", "method_complexity": {"method_NLOC": "5", "method_CCN": "2", "method_NToken": "32", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": null, "deleted_lines": "117", "method_info": {"method_name": "render_gaussian_2d", "method_params": "Tensor,Tensor,int,bool", "method_startline": "117", "method_endline": "121", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "56", "deleted_lines": "54", "method_info": {"method_name": "spatial_softargmax_2d", "method_params": "Tensor,bool", "method_startline": "54", "method_endline": "56", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "14", "method_nesting_level": "0"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "52", "deleted_lines": "54", "method_info": {"method_name": "spatial_expectation2d", "method_params": "Tensor,bool", "method_startline": "52", "method_endline": "54", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "14", "method_nesting_level": "0"}}}, "hunk_6": {"Ismethod": 1, "added_lines": null, "deleted_lines": "24", "method_info": {"method_name": "spatial_softmax_2d", "method_params": "Tensor,Tensor", "method_startline": "24", "method_endline": "26", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "23", "method_nesting_level": "0"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "114", "deleted_lines": "117", "method_info": {"method_name": "render_gaussian2d", "method_params": "Tensor,Tensor,int,bool", "method_startline": "114", "method_endline": "118", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "kornia\\geometry\\spatial_soft_argmax.py", "file_new_name": "kornia\\geometry\\spatial_soft_argmax.py", "file_complexity": {"file_NLOC": "530", "file_CCN": "23", "file_NToken": "3465"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "514,515", "deleted_lines": "514,515,516"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "kornia\\jit\\__init__.py", "file_new_name": "kornia\\jit\\__init__.py", "file_complexity": {"file_NLOC": "7", "file_CCN": "0", "file_NToken": "82"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "7,8,9,10,11", "deleted_lines": null}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "kornia\\testing\\__init__.py", "file_new_name": "kornia\\testing\\__init__.py", "file_complexity": {"file_NLOC": "26", "file_CCN": "7", "file_NToken": "240"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "50,51,52,53,54", "deleted_lines": null, "method_info": {"method_name": "check_is_tensor", "method_params": "obj", "method_startline": "50", "method_endline": "54", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "30", "method_nesting_level": "0"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "kornia\\utils\\grid.py", "file_new_name": "kornia\\utils\\grid.py", "file_complexity": {"file_NLOC": "73", "file_CCN": "2", "file_NToken": "483"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "47", "deleted_lines": "47", "method_info": {"method_name": "create_meshgrid3d", "method_params": "int,int,int,True", "method_startline": "43", "method_endline": "48", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "44", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "47", "deleted_lines": "47", "method_info": {"method_name": "create_meshgrid3d", "method_params": "int,int,int,bool", "method_startline": "43", "method_endline": "48", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "41", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "9", "deleted_lines": "9", "method_info": {"method_name": "create_meshgrid", "method_params": "int,int,bool", "method_startline": "6", "method_endline": "10", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "37", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "9", "deleted_lines": "9", "method_info": {"method_name": "create_meshgrid", "method_params": "int,int,True", "method_startline": "6", "method_endline": "10", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "40", "method_nesting_level": "0"}}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "test\\common.py", "file_new_name": "test\\common.py", "file_complexity": {"file_NLOC": "36", "file_CCN": "5", "file_NToken": "217"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "21", "deleted_lines": "21", "method_info": {"method_name": "get_test_dtypes", "method_params": "", "method_startline": "21", "method_endline": "31", "method_complexity": {"method_NLOC": "11", "method_CCN": "1", "method_NToken": "53", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "47", "deleted_lines": "47", "method_info": {"method_name": "dtype", "method_params": "request", "method_startline": "47", "method_endline": "49", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "26", "method_nesting_level": "0"}}}}}, "file_7": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "test\\geometry\\test_dsnt.py", "file_complexity": {"file_NLOC": "90", "file_CCN": "14", "file_NToken": "1141"}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 10, "file_old_name": "test\\geometry\\test_spatial_softargmax.py", "file_new_name": "test\\geometry\\test_spatial_softargmax.py", "file_complexity": {"file_NLOC": "453", "file_CCN": "36", "file_NToken": "6408"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "194,195,196,197,198,199,200,201", "method_info": {"method_name": "test_spatial_softargmax_2d", "method_params": "self,device,input,expected_norm,expected_px", "method_startline": "194", "method_endline": "201", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "77", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "164,165,166,167,168", "deleted_lines": "164,165,166,167,168", "method_info": {"method_name": "test_jit_trace", "method_params": "self,device,dtype", "method_startline": "164", "method_endline": "168", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "75", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "166,167,168", "deleted_lines": "166,167,168,169,170,171,172", "method_info": {"method_name": "test_render_gaussian_2d_normalized_coordinates", "method_params": "self,device", "method_startline": "166", "method_endline": "172", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "88", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "137,140,148", "deleted_lines": "132,133,134,135,136,137,138,139,140,141,148,149,150,151,152,153,154,155,156", "method_info": {"method_name": "test_end_to_end", "method_params": "self,device", "method_startline": "132", "method_endline": "156", "method_complexity": {"method_NLOC": "19", "method_CCN": "1", "method_NToken": "341", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "158,159,160,161,162", "deleted_lines": "158,159,160,161,162", "method_info": {"method_name": "test_jit", "method_params": "self,device,dtype", "method_startline": "158", "method_endline": "162", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "67", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": null, "deleted_lines": "129,130,131,132", "method_info": {"method_name": "test_jit.op_script", "method_params": "Tensor,Tensor,bool,float", "method_startline": "129", "method_endline": "132", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "2"}}}, "hunk_6": {"Ismethod": 1, "added_lines": null, "deleted_lines": "178,179,180,181,182", "method_info": {"method_name": "test_spatial_softmax_2d", "method_params": "self,device,input", "method_startline": "178", "method_endline": "182", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "71", "method_nesting_level": "1"}}}, "hunk_7": {"Ismethod": 1, "added_lines": null, "deleted_lines": "231,232,233", "method_info": {"method_name": "test_jit.op", "method_params": "Tensor,Tensor,Tensor,bool,Tensor", "method_startline": "231", "method_endline": "233", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "35", "method_nesting_level": "2"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "137,140", "deleted_lines": "127,128,129,130,131,132,133,134,135,136,137,138,139,140", "method_info": {"method_name": "test_jit", "method_params": "self,device", "method_startline": "127", "method_endline": "140", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "82", "method_nesting_level": "1"}}}, "hunk_9": {"Ismethod": 1, "added_lines": "158,159,160,161,162,163,164", "deleted_lines": "158,159,160,161,162,163,164", "method_info": {"method_name": "test_render_gaussian_2d", "method_params": "self,device", "method_startline": "158", "method_endline": "164", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "88", "method_nesting_level": "1"}}}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "test\\test_losses.py", "file_new_name": "test\\test_losses.py", "file_complexity": {"file_NLOC": "330", "file_CCN": "40", "file_NToken": "4040"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "288,289,290,291,292,293,294", "deleted_lines": null, "method_info": {"method_name": "test_jit_trace_js", "method_params": "self,device,dtype", "method_startline": "288", "method_endline": "294", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "107", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "280,281,282,283,284,285,286", "deleted_lines": null, "method_info": {"method_name": "test_jit_trace_kl", "method_params": "self,device,dtype", "method_startline": "280", "method_endline": "286", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "107", "method_nesting_level": "1"}}}}}}}}