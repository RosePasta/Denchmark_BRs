{"BR": {"BR_id": "986", "BR_author": "addisonklinke", "BRopenT": "2020-11-06T18:05:13Z", "BRcloseT": "2020-11-06T23:30:12Z", "BR_text": {"BRsummary": "PyTorch topk not supported after mention in release notes", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1eDescribe the bug</denchmark-h>\n \n I am converting a PyTorch model that uses their  operator and I get a runtime error that is is unsupported. Contrary to this, the release <denchmark-link:https://github.com/apple/coremltools/releases/tag/4.0b4>notes</denchmark-link>\n  for 4.0b4 explicitly say support was added. I have installed coremltools v4.0 which came after that pre-release, so I assume topk should also be supported in my version\n <denchmark-h:h2>Trace</denchmark-h>\n \n <denchmark-code>Traceback (most recent call last):\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3331, in run_code\n     exec(code_obj, self.user_global_ns, self.user_ns)\n   File \"<ipython-input-9-21395711530d>\", line 1, in <module>\n     mlmodel = ct.convert(traced_model, inputs=[ct.ImageType(name='images', shape=dummy.shape)])\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/_converters_entry.py\", line 183, in convert\n     **kwargs\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/mil/converter.py\", line 129, in mil_convert\n     ConverterRegistry, **kwargs)\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/mil/converter.py\", line 171, in mil_convert_to_proto\n     prog = frontend_converter(model, **kwargs)\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/mil/converter.py\", line 85, in __call__\n     return load(*args, **kwargs)\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/mil/frontend/torch/load.py\", line 83, in load\n     raise e\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/mil/frontend/torch/load.py\", line 75, in load\n     prog = converter.convert()\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/mil/frontend/torch/converter.py\", line 224, in convert\n     convert_nodes(self.context, self.graph)\n   File \"/home/addison/miniconda3/envs/coreml/lib/python3.6/site-packages/coremltools/converters/mil/frontend/torch/ops.py\", line 53, in convert_nodes\n     \"PyTorch convert function for op '{}' not implemented.\".format(node.kind)\n RuntimeError: PyTorch convert function for op 'topk' not implemented.\n </denchmark-code>\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n If torch.topk is still not supported, that is okay and I do not need to upload a model and conversion script. I am mainly opening the issue to point out the discrepancy between release notes and actual behavior\n <denchmark-h:h2>System environment (please complete the following information):</denchmark-h>\n \n \n coremltools version: 4.0\n OS: Ubuntu 18.04\n macOS version (if applicable): NA\n XCode version (if applicable): NA\n How you install python: anaconda\n python version: 3.6.9\n PyTorch: 1.4.0\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "addisonklinke", "commentT": "2020-11-06T18:11:39Z", "comment_text": "\n \t\tyeah that seems to be a gap in testing and a bug.\n The  op was added to the torch  but it lacks the decorator , hence it fails to register.\n A temporary workaround is to install coremltools from source and add  <denchmark-link:https://github.com/apple/coremltools/blob/157c1b06997d1f61ea90075e7ad7f5efcb075875/coremltools/converters/mil/frontend/torch/ops.py#L2356>here</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "addisonklinke", "commentT": "2020-11-06T18:22:27Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/aseemw>@aseemw</denchmark-link>\n  Thank you for the quick workaround! I was able to run the conversion by simply editing the Python code without needing to reinstall. Shall we leave this open until the official release is fixed?\n \t\t"}}}, "commit": {"commit_id": "b6684ec5c5c338eaba0a87563462a5378dc0fc43", "commit_author": "Aseem Wadhwa", "commitT": "2020-11-06 15:30:11-08:00", "commit_complexity": {"commit_NLOC": "0.18181818181818182", "commit_CCN": "1.0", "commit_Nprams": "0.18181818181818182"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "coremltools\\converters\\mil\\frontend\\torch\\ops.py", "file_new_name": "coremltools\\converters\\mil\\frontend\\torch\\ops.py", "file_complexity": {"file_NLOC": "1634", "file_CCN": "373", "file_NToken": "14001"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2356", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "coremltools\\converters\\mil\\frontend\\torch\\test\\test_torch_ops.py", "file_new_name": "coremltools\\converters\\mil\\frontend\\torch\\test\\test_torch_ops.py", "file_complexity": {"file_NLOC": "1267", "file_CCN": "112", "file_NToken": "9076"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1459,1460", "deleted_lines": null, "method_info": {"method_name": "test_topk.forward", "method_params": "self,x", "method_startline": "1459", "method_endline": "1460", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "24", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472", "deleted_lines": null, "method_info": {"method_name": "test_topk", "method_params": "self,backend,largest,shape_dim_k", "method_startline": "1450", "method_endline": "1472", "method_complexity": {"method_NLOC": "18", "method_CCN": "1", "method_NToken": "90", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "1456,1457", "deleted_lines": null, "method_info": {"method_name": "test_topk.__init__", "method_params": "self", "method_startline": "1456", "method_endline": "1457", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "15", "method_nesting_level": "3"}}}}}}}}