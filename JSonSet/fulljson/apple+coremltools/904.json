{"BR": {"BR_id": "904", "BR_author": "j-paulus", "BRopenT": "2020-09-03T09:23:46Z", "BRcloseT": "2020-10-02T23:15:40Z", "BR_text": {"BRsummary": "In Pytorch conversion ConvTransposed with a weight matrix ndims!=4 not working", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1eDescribe the bug</denchmark-h>\n \n Converting a Pytorch model with ConvTransposed1D with a weight matrix having 3 dimensions fails. This is caused by the limited support for transposed convolution in _convolution() in  converters/mil/frontend/torch/ops.py. Some of the code appears to support weight matrix dimension of 3-5, but the if-block handling the transposed convolution assumes always 4 dimensional weights in the permutation of the weight matrix dimensions.\n The fix for the 3D weights seems to modify the permute statement to only swap the first two dimensions. I don't know if this is a valid fix also for 5D weights.\n <denchmark-h:h2>Trace</denchmark-h>\n \n \n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/_converters_entry.py\", line 303, in convert\n proto_spec = _convert(\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/converter.py\", line 134, in _convert\n prog = frontend_converter(model, **kwargs)\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/converter.py\", line 84, in call\n return load(*args, **kwargs)\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/load.py\", line 86, in load\n raise e\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/load.py\", line 76, in load\n prog = converter.convert()\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/converter.py\", line 224, in convert\n convert_nodes(self.context, self.graph)\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/ops.py\", line 55, in convert_nodes\n _add_op(context, node)\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/ops.py\", line 412, in _convolution\n weight_transpose = mb.transpose(\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/ops/registry.py\", line 62, in add_op\n return cls._add_op(op_cls, **kwargs)\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/builder.py\", line 192, in _add_op\n new_op.type_value_inference()\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/operation.py\", line 178, in type_value_inference\n output_types = self.type_inference()\n File \"/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/ops/defs/tensor_transformation.py\", line 786, in type_inference\n raise ValueError(msg.format(len(perm), self.x.rank))\n ValueError: perm should have the same length as rank(x): 4 != 3\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n <denchmark-code>import torch\n import coremltools as ct\n \n N = 5\n class TriggerBug(torch.nn.Module):\n     def __init__(self):\n         super(TriggerBug, self).__init__()\n         self.kernel = torch.nn.Parameter(torch.randn(N, 1, 8), requires_grad=False)\n \n     def forward(self, x):\n         return torch.nn.functional.conv_transpose1d(x, weight=self.kernel, bias=None, stride=4, padding=0)\n \n model = TriggerBug()\n model.eval()\n x_in = torch.randn((3, N, 50))\n traced_model = torch.jit.trace(model, x_in)\n \n model_ct = ct.convert(traced_model, inputs=[ct.TensorType(shape=ct.Shape(x_in.shape), name='x')])\n \n </denchmark-code>\n \n <denchmark-h:h2>System environment (please complete the following information):</denchmark-h>\n \n \n coremltools version: 4.0b3\n OS: MacOS\n macOS version: 10.15.6\n How you install python (anaconda, virtualenv, system): anaconda\n python version: 3.8.5\n pytorch version: 1.6.0\n \n <denchmark-h:h2>Additional context</denchmark-h>\n \n Add any other context about the problem here.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "j-paulus", "commentT": "2020-10-02T23:15:40Z", "comment_text": "\n \t\tThanks for reporting this issue, this has been fixed in the coremltools==4.0b4 release. Feel free to re-open or create another issue if you're still experiencing issues. Thanks!\n \t\t"}}}, "commit": {"commit_id": "a629958de1181d11565fc1c2396ec25be9f7146c", "commit_author": "Daniil-Osokin", "commitT": "2020-09-29 17:59:36-04:00", "commit_complexity": {"commit_NLOC": "0.9166666666666666", "commit_CCN": "0.9166666666666666", "commit_Nprams": "0.08333333333333333"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "coremltools\\converters\\mil\\frontend\\torch\\ops.py", "file_new_name": "coremltools\\converters\\mil\\frontend\\torch\\ops.py", "file_complexity": {"file_NLOC": "1570", "file_CCN": "343", "file_NToken": "13275"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "412,413,415", "deleted_lines": "413", "method_info": {"method_name": "_convolution", "method_params": "context,node", "method_startline": "351", "method_endline": "466", "method_complexity": {"method_NLOC": "81", "method_CCN": "20", "method_NToken": "591", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "coremltools\\converters\\mil\\frontend\\torch\\test\\test_torch_ops.py", "file_new_name": "coremltools\\converters\\mil\\frontend\\torch\\test\\test_torch_ops.py", "file_complexity": {"file_NLOC": "1100", "file_CCN": "89", "file_NToken": "7627"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "109,110,111,112,113,114,115,116,117,118", "deleted_lines": null, "method_info": {"method_name": "test_convolution_transpose1d", "method_params": "self,width,in_channels,out_channels,kernel_size,stride,padding,dilation,backend", "method_startline": "109", "method_endline": "118", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "167,168,169,170,171,172,173,174,175,176,177,178", "deleted_lines": null, "method_info": {"method_name": "test_convolution_transpose3d", "method_params": "self,depth,height,width,in_channels,out_channels,kernel_size,stride,padding,dilation,backend", "method_startline": "167", "method_endline": "178", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "24", "method_nesting_level": "1"}}}}}}}}