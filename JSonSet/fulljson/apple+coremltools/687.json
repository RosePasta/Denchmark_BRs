{"BR": {"BR_id": "687", "BR_author": "tirkarthi", "BRopenT": "2020-04-12T05:57:28Z", "BRcloseT": "2020-05-02T04:46:47Z", "BR_text": {"BRsummary": "Deprecation warning due to invalid escape sequences and literal comparison in Python 3.7", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1eDescribe the bug</denchmark-h>\n \n Deprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals. Syntax warning is caused due to comparison of literals using is.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n <denchmark-code>find . -iname '*.py' | grep -Ev 'example|utl|samples|deps' | xargs -P 4 -I{} python3.8 -Wall -m py_compile {} \n ./coremltools/models/neural_network/builder.py:618: DeprecationWarning: invalid escape sequence \\s\n   \"\"\"\n ./coremltools/models/_graph_visualization.py:541: DeprecationWarning: invalid escape sequence \\c\n   'f(x) = scaleValue \\cdot (x + shiftValue)'\n ./coremltools/converters/nnssa/commons/builtins/type_spec.py:53: DeprecationWarning: invalid escape sequence \\_\n   \"\"\"\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:161: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   if model.algorithm is 'brute' or model.algorithm is 'kd_tree':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:161: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   if model.algorithm is 'brute' or model.algorithm is 'kd_tree':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:164: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   elif model.algorithm is 'auto' and model._fit_method is 'kd_tree':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:164: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   elif model.algorithm is 'auto' and model._fit_method is 'kd_tree':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:167: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   elif model.algorithm is 'auto' and model._fit_method is 'brute':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:167: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   elif model.algorithm is 'auto' and model._fit_method is 'brute':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:176: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   if model.weights is 'uniform':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:192: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   if model.metric is 'euclidean':\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:194: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   elif model.metric is 'minkowski' and model.p == 2:\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:209: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   return model.algorithm is 'brute' or (model.algorithm is 'auto' and model._fit_method is 'brute')\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:209: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   return model.algorithm is 'brute' or (model.algorithm is 'auto' and model._fit_method is 'brute')\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:209: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   return model.algorithm is 'brute' or (model.algorithm is 'auto' and model._fit_method is 'brute')\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:213: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   return model.algorithm is 'kd_tree' or (model.algorithm is 'auto' and model._fit_method is 'kd_tree')\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:213: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   return model.algorithm is 'kd_tree' or (model.algorithm is 'auto' and model._fit_method is 'kd_tree')\n ./coremltools/converters/sklearn/_k_neighbors_classifier.py:213: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n   return model.algorithm is 'kd_tree' or (model.algorithm is 'auto' and model._fit_method is 'kd_tree')\n </denchmark-code>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "3649cfd55497e5d6cd7e64ba46a706790bc3fbcc", "commit_author": "Karthikeyan Singaravelan", "commitT": "2020-05-01 21:46:46-07:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "coremltools\\converters\\nnssa\\commons\\builtins\\type_spec.py", "file_new_name": "coremltools\\converters\\nnssa\\commons\\builtins\\type_spec.py", "file_complexity": {"file_NLOC": "67", "file_CCN": "23", "file_NToken": "447"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "53", "deleted_lines": "53"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "coremltools\\converters\\sklearn\\_k_neighbors_classifier.py", "file_new_name": "coremltools\\converters\\sklearn\\_k_neighbors_classifier.py", "file_complexity": {"file_NLOC": "141", "file_CCN": "52", "file_NToken": "1066"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "161,164,167", "deleted_lines": "161,164,167", "method_info": {"method_name": "_check_algorithm", "method_params": "model", "method_startline": "157", "method_endline": "171", "method_complexity": {"method_NLOC": "14", "method_CCN": "8", "method_NToken": "85", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "176", "deleted_lines": "176", "method_info": {"method_name": "_check_weighting_scheme", "method_params": "model", "method_startline": "173", "method_endline": "187", "method_complexity": {"method_NLOC": "11", "method_CCN": "4", "method_NToken": "68", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "209", "deleted_lines": "209", "method_info": {"method_name": "_is_algorithm_brute", "method_params": "model", "method_startline": "207", "method_endline": "209", "method_complexity": {"method_NLOC": "2", "method_CCN": "3", "method_NToken": "26", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "192,194", "deleted_lines": "192,194", "method_info": {"method_name": "_check_distance_metric", "method_params": "model", "method_startline": "189", "method_endline": "205", "method_complexity": {"method_NLOC": "13", "method_CCN": "6", "method_NToken": "84", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "213", "deleted_lines": "213", "method_info": {"method_name": "_is_algorithm_kd_tree", "method_params": "model", "method_startline": "211", "method_endline": "213", "method_complexity": {"method_NLOC": "2", "method_CCN": "3", "method_NToken": "26", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "coremltools\\models\\_graph_visualization.py", "file_new_name": "coremltools\\models\\_graph_visualization.py", "file_complexity": {"file_NLOC": "647", "file_CCN": "102", "file_NToken": "4872"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "541", "deleted_lines": "541", "method_info": {"method_name": "_pipeline_component_info", "method_params": "model,info", "method_startline": "463", "method_endline": "574", "method_complexity": {"method_NLOC": "93", "method_CCN": "15", "method_NToken": "815", "method_nesting_level": "0"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "coremltools\\models\\neural_network\\builder.py", "file_new_name": "coremltools\\models\\neural_network\\builder.py", "file_complexity": {"file_NLOC": "2439", "file_CCN": "442", "file_NToken": "20858"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "618", "deleted_lines": "618", "method_info": {"method_name": "set_categorical_cross_entropy_loss", "method_params": "self,name,input", "method_startline": "617", "method_endline": "695", "method_complexity": {"method_NLOC": "61", "method_CCN": "18", "method_NToken": "405", "method_nesting_level": "1"}}}}}}}}