{"BR": {"BR_id": "516", "BR_author": "michaelarfreed", "BRopenT": "2019-11-05T17:13:32Z", "BRcloseT": "2020-01-17T18:03:33Z", "BR_text": {"BRsummary": "\"RuntimeError: failed to convert from IR to Core ML.\" error when converting tf.keras to coreml in tensorflow 2.0", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1eDescribe the bug</denchmark-h>\n \n \n A clear and brief description of what the bug is. I am unable to convert a tf.keras model to coreml in tensorflow 2.0 because of a RuntimeError\n Is this a converter issue? Yes. If yes, please specify which converter (sci-kit, keras, xgboost etc.).  tensorflow converter, using tf.keras in tensorflow 2.0\n \n <denchmark-h:h2>Trace</denchmark-h>\n \n <denchmark-code>AssertionError                            Traceback (most recent call last)\n ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/tensorflow/_tf_converter.py in convert(filename, inputs, outputs, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_shape_functions, **kwargs)\n      95                                  custom_shape_functions=custom_shape_functions,\n ---> 96                                  optional_inputs=optional_inputs)\n      97     except ImportError as e:\n \n ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/nnssa/coreml/ssa_converter.py in ssa_convert(ssa, top_func, inputs, outputs, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_shape_functions, optional_inputs)\n     132     for f in list(ssa.functions.values()):\n --> 133         check_connections(f.graph)\n     134 \n \n ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/nnssa/commons/basic_graph_ops.py in check_connections(gd)\n     151         for i in v.control_outputs:\n --> 152             assert (k in gd[i].control_inputs)\n     153 \n \n AssertionError: \n \n During handling of the above exception, another exception occurred:\n \n RuntimeError                              Traceback (most recent call last)\n <ipython-input-4-d56b125b2b47> in <module>\n       4                  output_feature_names= ['output'],\n       5                  input_name_shape_dict= {'input': [1,450]},\n ----> 6                  class_labels=['A','B','C','D','E','F','G']) )\n       7\n       8\n \n ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/tensorflow/_tf_converter.py in convert(filename, inputs, outputs, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_shape_functions, **kwargs)\n      98         raise ImportError('backend converter not found. {}'.format(e))\n      99     except Exception as e:\n --> 100         raise RuntimeError('failed to convert from IR to Core ML. {}'.format(e))\n     101 \n     102     return MLModel(model_spec, useCPUOnly=use_cpu_only)\n \n RuntimeError: failed to convert from IR to Core ML. \n </denchmark-code>\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n \n If a python script can reproduce the error, please paste the code snippet\n \n <denchmark-code>import tensorflow as tf\n mymodel = tf.keras.Sequential([ \n     tf.keras.layers.Reshape((75,6),input_shape=(6*75,)), \n     tf.keras.layers.Dense(500,activation='relu'), \n     tf.keras.layers.Flatten(), \n     tf.keras.layers.Dense(7,activation='softmax')])  \n mymodel.compile(optimizer='adam',loss='categorical_crossentropy')\n mymodel.save('/path/to/mymodel.h5',save_format='h5')\n coremltools.converters.tensorflow.convert('/path/to/mymodel.h5',  \n                   mlmodel_path='my_model.mlmodel',  \n                   output_feature_names= ['output'],   \n                   input_name_shape_dict= {'input': [1,450]}, \n                   class_labels=['A','B','C','D','E','F','G']))     \n </denchmark-code>\n \n \n If applicable, please attach the source model\n \n If the model cannot be shared publicly, please attach it via filing a bug report at https://developer.apple.com/bug-reporting/  and provide the reference number here\n I am not attaching a source model because I can replicate it with any model I train in Keras.\n \n \n If it is a model conversion issue and the conversion succeeds, however, if there is a numerical mismatch between the original and the coreml model, please paste script used for comparison.\n \n <denchmark-h:h2>System environment (please complete the following information):</denchmark-h>\n \n \n coremltools version  (e.g., 3.0b5): 3.1\n OS (e.g., MacOS, Linux): MacOS\n macOS version (if applicable): 10.14.16\n XCode version (if applicable): N/A\n How you install python (anaconda, virtualenv, system): anaconda\n python version (e.g. 3.7): 3.7\n any other relevant information:\n - tensorflow version: 2.0\n \n <denchmark-h:h2>Additional context</denchmark-h>\n \n I was using coremltools converter before. I was training a model in tf.keras (version tf 1.13.1) and then using the keras converter, and it caused no errors. I am migrating to tf 2.0 and this is the last step where I am encountering errors. I have confirmed that my model trains, saves, loads, and validates well, and that the error is coming from the coreml converter step.\n <denchmark-h:hr></denchmark-h>\n \n <denchmark-h:h3>Update</denchmark-h>\n \n I did some more digging... I think the Reshape layer is causing the conversion error. When I tried with the following model, I got a different error\n <denchmark-code>mymodel = tf.keras.Sequential([ \n     tf.keras.layers.Dense(500,activation='relu',input_shape=(6*75,)), \n     tf.keras.layers.Flatten(), \n     tf.keras.layers.Dense(7,activation='softmax')])  ])\n </denchmark-code>\n \n The error I got was:\n <denchmark-code>~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/models/model.py:111: RuntimeWarning: You will not be able to run predict() on this Core ML model. Underlying exception message was: Error compiling model: \"Error reading protobuf spec. validator error: The .mlmodel supplied is of version 4, intended for a newer version of Xcode. This version of Xcode supports model version 3 or earlier.\".\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "michaelarfreed", "commentT": "2019-12-10T12:22:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/michaelarfreed>@michaelarfreed</denchmark-link>\n  the code snippet you provided should work correctly, if you make a slight change to it. That is, provide the correct output name to the convert function. Instead of , it can be obtained via \n <denchmark-code>model = tf.keras.Sequential()\n model.add(tf.keras.layers.Reshape((75, 6), input_shape=(6 * 75,)))\n model.add(tf.keras.layers.Dense(500, activation='relu'))\n model.add(tf.keras.layers.Flatten())\n model.add(tf.keras.layers.Dense(7, activation='softmax'))\n model.save(\"/tmp/keras_model.h5\")\n \n # convert this model to Core ML format\n input_name = model.inputs[0].name.split(':')[0]\n keras_out_name = model.outputs[0].name.split(':')[0]\n graph_output_name = keras_out_name.split('/')[-1]\n mlmodel = tfcoreml.convert(tf_model_path=\"/tmp/keras_model.h5\",\n                          input_name_shape_dict={input_name: (1, 6*75)},\n                          output_feature_names=[graph_output_name],\n                          minimum_ios_deployment_target='13')\n mlmodel.save('/tmp/keras_model.mlmodel')\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "michaelarfreed", "commentT": "2019-12-10T12:26:51Z", "comment_text": "\n \t\tThe converter should raise a more informative error message though. So will keep this issue open to track that change.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "michaelarfreed", "commentT": "2019-12-10T12:54:34Z", "comment_text": "\n \t\t(Have at least updated the documentation in PR <denchmark-link:https://github.com/apple/coremltools/pull/546>#546</denchmark-link>\n  )\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "michaelarfreed", "commentT": "2019-12-11T14:12:08Z", "comment_text": "\n \t\tThank you so much for the response! This fixed that issue in converter, and I am no longer getting this error in this example code or in my repo. In my less simplified repo, I am now getting an error AttributeError: module 'tensorflow' has no attribute 'reset_default_graph', but I will open a new issue for this.\n EDIT: Nevermind, I forgot to include minimum_ios_deployment_target='13', so now it is working.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "michaelarfreed", "commentT": "2019-12-11T15:42:33Z", "comment_text": "\n \t\tI have a follow up question: calling tfcoreml.convert (the code you provided) works great, but I would prefer to use coremltools.converters.tensorflow.convert. However, I am still getting the same RuntimeError when I change the call to\n <denchmark-code>coreml_model = coremltools.converters.tensorflow.convert(os.path.join(hparams.model_dir,yml_out['model_filename']),  \n                                                             input_name_shape_dict={input_name: (1,6*75)},\n                                                             output_feature_names=[graph_out_name],\n                                                             class_labels = gestL, \n                                                             minimum_ios_deployment_target='13')\n </denchmark-code>\n \n Is the new convention to use tfcoreml instead of coremltools? Or should I still be able to call from coremltools with the same arguments?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "michaelarfreed", "commentT": "2020-01-17T18:03:33Z", "comment_text": "\n \t\tThis bug fix should be included in coremltools 3.2 release. Please upgrade your coremltools(pip install --upgrade coremltools) to verify. Feel free to re-open if you still encountering this issue. Thanks!\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "michaelarfreed", "commentT": "2020-02-05T10:57:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/1duo>@1duo</denchmark-link>\n  can confirm that after updating to coremltools 3.2, the error no longer arises.\n However, another issue came up: I cannot convert a model with 2 outputs in coremltools: <denchmark-link:https://github.com/tf-coreml/tf-coreml/issues/374>tf-coreml/tf-coreml#374</denchmark-link>\n \n Any ideas? <denchmark-link:https://github.com/aseemw>@aseemw</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "b0c7717f867468d00a4baa58be5f6daad777f4ee", "commit_author": "Aseem Wadhwa", "commitT": "2019-12-11 09:43:08+05:18", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\NeuralNetworkGuide.md", "file_new_name": "docs\\NeuralNetworkGuide.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "269,272,273,274,275,278,279,282,298,300,301,302,303,304,307,308", "deleted_lines": "269,270,272,276,277,295,296,298,301,302"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "examples\\neural_network_inference\\tensorflow_converter\\Tensorflow_2\\tf_keras_fashion_mnist.ipynb", "file_new_name": "examples\\neural_network_inference\\tensorflow_converter\\Tensorflow_2\\tf_keras_fashion_mnist.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "186,187,188,189,190,193,194", "deleted_lines": "188,189"}}}}}}