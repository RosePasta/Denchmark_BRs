{"BR": {"BR_id": "583", "BR_author": "jaheba", "BRopenT": "2020-01-30T17:48:59Z", "BRcloseT": "2020-03-18T14:31:21Z", "BR_text": {"BRsummary": "RNNEncoder: \"HybridBlock, we do not support mixed NDArrays and Symbols\"", "BRdescription": "\n I've tried installing mxnet 1.6 (pre-release) and running our tests with it.\n There seems to be an issue with the RNNEncoder:\n src/gluonts/evaluation/backtest.py:177: in backtest_metrics\n     predictor = forecaster.train(train_dataset)\n src/gluonts/model/estimator.py:223: in train\n     return self.train_model(training_data, validation_data).predictor\n src/gluonts/model/estimator.py:208: in train_model\n     validation_iter=validation_data_loader,\n src/gluonts/trainer/_base.py:297: in __call__\n     epoch_loss = loop(epoch_no, train_iter)\n src/gluonts/trainer/_base.py:237: in loop\n     output = net(*inputs)\n ../../.virtualenvs/gluon-ts/lib/python3.7/site-packages/mxnet/gluon/block.py:694: in __call__\n     out = self.forward(*args)\n ../../.virtualenvs/gluon-ts/lib/python3.7/site-packages/mxnet/gluon/block.py:1152: in forward\n     return self._call_cached_op(x, *args)\n ../../.virtualenvs/gluon-ts/lib/python3.7/site-packages/mxnet/gluon/block.py:982: in _call_cached_op\n     self._build_cache(*args)\n ../../.virtualenvs/gluon-ts/lib/python3.7/site-packages/mxnet/gluon/block.py:934: in _build_cache\n     data, out = self._get_graph(*args)\n ../../.virtualenvs/gluon-ts/lib/python3.7/site-packages/mxnet/gluon/block.py:926: in _get_graph\n     out = self.hybrid_forward(symbol, *grouped_inputs, **params)  # pylint: disable=no-value-for-parameter\n src/gluonts/model/seq2seq/_forking_network.py:93: in hybrid_forward\n     past_target, feat_static_real, past_feat_dynamic_real\n ../../.virtualenvs/gluon-ts/lib/python3.7/site-packages/mxnet/gluon/block.py:694: in __call__\n     out = self.forward(*args)\n \n \n self = gluonts.block.encoder.RNNEncoder(bidirectional=True, hidden_size=50, mode=\"gru\", num_layers=1, prefix=\"encoder_\"), x = <Symbol data0>\n args = (\n []\n <NDArray 0 @cpu(0)>, \n []\n <NDArray 0 @cpu(0)>), has_symbol = True, has_ndarray = True, ctx_set = {cpu(0)}\n \n     def forward(self, x, *args):\n         \"\"\"Defines the forward computation. Arguments can be either\n         :py:class:`NDArray` or :py:class:`Symbol`.\"\"\"\n     \n         has_symbol, has_ndarray, ctx_set, first_ctx = _gather_type_ctx_info([x] + list(args))\n         if has_symbol and has_ndarray:\n >           raise ValueError('In HybridBlock, we do not support mixed NDArrays and Symbols'\n                              ' types for the input. Please check the type of the args.\\n')\n E           ValueError: In HybridBlock, we do not support mixed NDArrays and Symbols types for the input. Please check the type of the args.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jaheba", "commentT": "2020-02-14T19:36:40Z", "comment_text": "\n \t\tIssue could be related to these objects being ndarrays independently of F: \n \n \n gluon-ts/src/gluonts/model/seq2seq/_forking_network.py\n \n \n          Line 88\n       in\n       c44f0a0\n \n \n \n \n \n \n  feat_static_real = nd_None \n \n \n \n \n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jaheba", "commentT": "2020-02-19T17:51:55Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jaheba>@jaheba</denchmark-link>\n  <denchmark-link:https://github.com/lovvge>@lovvge</denchmark-link>\n  <denchmark-link:https://github.com/jgasthaus>@jgasthaus</denchmark-link>\n  one possible fix here is to just not support hybridization for the models using this block (and therefore not test it), but it\u2019s not ideal. The other option is to check whether mxnet now has some way of encoding an empty array as a symbol?\n A third option would be that of reducing the interface of encoders and decoders to something simpler: just one tensor, which will contain the stacked target + dynamic features + (repeated, embedded) static features. That will remove some flexibility of course, and not allow treating these three channels independently.\n \t\t"}}}, "commit": {"commit_id": "0f8119dc09d6c4dfbba57747c9b3339c72f2b3a0", "commit_author": "Lorenzo Stella", "commitT": "2020-03-18 15:31:20+01:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "README.md", "file_new_name": "README.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "28", "deleted_lines": "28"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\install.rst", "file_new_name": "docs\\install.rst", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "12", "deleted_lines": "12"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "env\\cpu\\py3-master.yml", "file_new_name": "env\\cpu\\py3-master.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "32,35", "deleted_lines": "32,35"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "env\\cpu\\py3.yml", "file_new_name": "env\\cpu\\py3.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "32,35", "deleted_lines": "32,35"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "env\\gpu\\py3-master.yml", "file_new_name": "env\\gpu\\py3-master.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "32,35", "deleted_lines": "32,35"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "env\\gpu\\py3.yml", "file_new_name": "env\\gpu\\py3.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "32,35", "deleted_lines": "32,35"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "requirements\\requirements-mxnet.txt", "file_new_name": "requirements\\requirements-mxnet.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1", "deleted_lines": "1"}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "requirements\\requirements.txt", "file_new_name": "requirements\\requirements.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "8", "deleted_lines": "8"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\gluonts\\model\\seq2seq\\_forking_network.py", "file_new_name": "src\\gluonts\\model\\seq2seq\\_forking_network.py", "file_complexity": {"file_NLOC": "106", "file_CCN": "4", "file_NToken": "453"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "123,124,125,132,133,134", "deleted_lines": "124,125,126,133", "method_info": {"method_name": "hybrid_forward", "method_params": "self,F,Tensor", "method_startline": "108", "method_endline": "146", "method_complexity": {"method_NLOC": "32", "method_CCN": "2", "method_NToken": "164", "method_nesting_level": "1"}}}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "test\\support\\test_jitter.py", "file_new_name": "test\\support\\test_jitter.py", "file_complexity": {"file_NLOC": "77", "file_CCN": "8", "file_NToken": "677"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "16,34,35,36,37,61,62,63,64", "deleted_lines": null}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\support\\test_util.py", "file_new_name": "test\\support\\test_util.py", "file_complexity": {"file_NLOC": "158", "file_CCN": "16", "file_NToken": "1473"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "176,177,178,179", "deleted_lines": "176", "method_info": {"method_name": "sym_block_import_export_test_cases", "method_params": "", "method_startline": "128", "method_endline": "179", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "64", "method_nesting_level": "0"}}}}}}}}