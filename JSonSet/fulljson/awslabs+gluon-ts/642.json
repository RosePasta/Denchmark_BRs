{"BR": {"BR_id": "642", "BR_author": "mbataillou", "BRopenT": "2020-02-14T18:22:27Z", "BRcloseT": "2020-02-17T08:56:45Z", "BR_text": {"BRsummary": "Index of forecast is wrong in multivariate Time Series", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n When forecasting multivariate Time Series the index has the length of the target dimension instead of the prediction length\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n import numpy as np\n \n from gluonts.dataset.common import ListDataset\n from gluonts.distribution import MultivariateGaussianOutput\n from gluonts.model.deepar import DeepAREstimator\n from gluonts.trainer import Trainer\n from gluonts.evaluation.backtest import make_evaluation_predictions\n \n \n train_dataset = ListDataset(\n     data_iter=[\n         {\n             \"start\": \"2019-01-01 00:00:00\",\n             \"target\": np.ones(shape=(4, 4)),\n         },\n     ],\n     freq=\"W\",\n     one_dim_target=False,\n )\n \n test_dataset = ListDataset(\n     data_iter=[\n         {\n             \"start\": \"2019-01-01 00:00:00\",\n             \"target\": np.ones(shape=(4, 5)),\n         },\n     ],\n     freq=\"W\",\n     one_dim_target=False,\n )\n \n estimator = DeepAREstimator(\n     'W', prediction_length=1, trainer=Trainer(epochs=3, hybridize=False),\n     distr_output=MultivariateGaussianOutput(dim=4),\n )\n \n predictor = estimator.train(train_dataset)\n \n forecast_it, ts_it = make_evaluation_predictions(dataset=test_dataset, predictor=predictor, num_samples=10)\n \n forecast_list = list(forecast_it)\n ts_list = list(ts_it)\n <denchmark-h:h2>Error Message</denchmark-h>\n \n DatetimeIndex(['2019-02-03', '2019-02-10', '2019-02-17', '2019-02-24'], dtype='datetime64[ns]', freq='W-SUN')\n While it should only be ['2019-02-03']\n <denchmark-h:h2>Environment</denchmark-h>\n \n \n Operating system: Amazon Linux\n Python version: 3.6\n GluonTS version: a96a0cc4 internal\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mbataillou", "commentT": "2020-02-14T23:42:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mbataillou>@mbataillou</denchmark-link>\n  how do you get that output? If I run your code using the master branch, and at the end I execute\n print(forecast_list[0].start_date)\n print(forecast_list[0].samples.shape)\n I get\n <denchmark-code>2019-02-03 00:00:00\n (10, 1, 4)\n </denchmark-code>\n \n The first seems to be the expected forecast start time, the second is the expected layout of the prediction samples: 10 samples, prediction length 1, dimension of the time series 4.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "mbataillou", "commentT": "2020-02-15T09:58:08Z", "comment_text": "\n \t\tHi, I forgot to add it forecast_list[0].index is what returns the above.\n \t\t"}}}, "commit": {"commit_id": "887ce261671ac76ae1c619b91f85c21347a055ff", "commit_author": "Lorenzo Stella", "commitT": "2020-02-17 09:56:44+01:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\gluonts\\model\\forecast.py", "file_new_name": "src\\gluonts\\model\\forecast.py", "file_complexity": {"file_NLOC": "524", "file_CCN": "59", "file_NToken": "2449"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "376", "deleted_lines": "376", "method_info": {"method_name": "prediction_length", "method_params": "self", "method_startline": "372", "method_endline": "376", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "15", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\model\\test_forecast.py", "file_new_name": "test\\model\\test_forecast.py", "file_complexity": {"file_NLOC": "99", "file_CCN": "9", "file_NToken": "647"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "129,130,131", "deleted_lines": null, "method_info": {"method_name": "test_forecast_multivariate", "method_params": "forecast,exp_index", "method_startline": "129", "method_endline": "131", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "0"}}}}}}}}