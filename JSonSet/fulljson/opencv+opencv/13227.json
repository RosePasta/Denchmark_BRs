{"BR": {"BR_id": "13227", "BR_author": "dan-masek", "BRopenT": "2018-11-20T20:34:13Z", "BRcloseT": "2018-12-25T14:37:47Z", "BR_text": {"BRsummary": "drawMatches with CV_8UC4 inputs draws on blank background", "BRdescription": "\n Based on the code, seems relevant to all OpenCV versions/platforms.\n When I call cv::drawMatches with img1 and img2 being BGRA images and outImg left empty, it doesn't complain. Since the documentation doesn't mention any restrictions on channel count, I assume this is a valid use-case. However, it fails to produce a background that's a composition of the two input images, as happens for 1 and 3 channel images.\n The problem seems to be here: <denchmark-link:https://github.com/opencv/opencv/blob/3.4/modules/features2d/src/draw.cpp#L149>https://github.com/opencv/opencv/blob/3.4/modules/features2d/src/draw.cpp#L149</denchmark-link>\n \n There's no check for invalid image depth as there is in <denchmark-link:https://github.com/opencv/opencv/blob/3.4/modules/features2d/src/draw.cpp#L106>drawKeypoints</denchmark-link>\n , and the  ends up reallocating the ROIs (so the master image is unmodified).\n Also, IMHO CV_8UC1 would seem more appropriate than just plain CV_8U when checking the Mat type (it's not entirely obvious that it means a 1-channel image, even though the enum values are the same).\n Example script:\n <denchmark-code>import numpy as np\n import cv2\n \n imageLeft = cv2.cvtColor(cv2.imread('box.png'), cv2.COLOR_BGR2BGRA)\n imageRight = cv2.cvtColor(cv2.imread('box_in_scene.png'), cv2.COLOR_BGR2BGRA)\n \n orb = cv2.ORB_create()\n kpLeft, desLeft = orb.detectAndCompute(imageLeft, None)\n kpRight, desRight = orb.detectAndCompute(imageRight, None)\n \n bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)\n matches = bf.match(desLeft, desRight)\n \n goodMatches = []\n for m in matches:\n     if m.distance < 100:\n         goodMatches.append(m)\n         \n output = cv2.drawMatches(imageLeft, kpLeft, imageRight, kpRight, [goodMatches[0]], None, flags=0)\n \n cv2.imwrite('output.png', output)\n </denchmark-code>\n \n Actual output:\n <denchmark-link:https://user-images.githubusercontent.com/10824015/48800255-8f54fb80-ed09-11e8-9a1c-12efee75ebe3.png></denchmark-link>\n \n Expected output:\n <denchmark-link:https://user-images.githubusercontent.com/10824015/48800264-9714a000-ed09-11e8-8298-9c4ee83a89e8.png></denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "dan-masek", "commentT": "2018-11-20T20:36:45Z", "comment_text": "\n \t\tWhat would be the preferred solution to this?\n \n Restrict it to just 1 and 3 channel inputs, just like in drawKeypoints, and fix the documentation (of both) to reflect this?\n Make it work correctly even with 4 channel images? Potentially also apply this to drawKeypoints.\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "dan-masek", "commentT": "2018-12-19T15:37:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/dan-masek>@dan-masek</denchmark-link>\n , please check <denchmark-link:https://github.com/opencv/opencv/pull/13481>#13481</denchmark-link>\n . I got the following image with code above. Perhaps it's different because of different box.png and box_in_scene.png.\n <denchmark-link:https://user-images.githubusercontent.com/25801568/50230122-1ce54300-03bd-11e9-8069-313bbb0bed7e.png></denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "ff8c53ea20ffec8154f2c5bafe92c325e64622d2", "commit_author": "Dmitry Kurtaev", "commitT": "2018-12-25 17:29:12+03:00", "commit_complexity": {"commit_NLOC": "0.16666666666666666", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "modules\\features2d\\src\\draw.cpp", "file_new_name": "modules\\features2d\\src\\draw.cpp", "file_complexity": {"file_NLOC": "182", "file_CCN": "44", "file_NToken": "1773"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "98,100,108", "deleted_lines": "98,100,108", "method_info": {"method_name": "cv::drawKeypoints", "method_params": "image,keypoints,outImage,_color,flags", "method_startline": "91", "method_endline": "123", "method_complexity": {"method_NLOC": "30", "method_CCN": "7", "method_NToken": "221", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142", "deleted_lines": null, "method_info": {"method_name": "cv::_prepareImage", "method_params": "src,dst", "method_startline": "125", "method_endline": "142", "method_complexity": {"method_NLOC": "17", "method_CCN": "11", "method_NToken": "179", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "162,163,164,170,171", "deleted_lines": "149,150,151,152,153,154,155,156,157", "method_info": {"method_name": "cv::_prepareImgAndDrawKeypoints", "method_params": "img1,keypoints1,img2,keypoints2,_outImg,outImg1,outImg2,singlePointColor,flags", "method_startline": "144", "method_endline": "183", "method_complexity": {"method_NLOC": "36", "method_CCN": "5", "method_NToken": "402", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "modules\\features2d\\test\\test_drawing.cpp", "file_complexity": {"file_NLOC": "58", "file_CCN": "8", "file_NToken": "748"}}}}}