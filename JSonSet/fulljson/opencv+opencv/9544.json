{"BR": {"BR_id": "9544", "BR_author": "Amin-Tgz", "BRopenT": "2017-09-02T16:33:29Z", "BRcloseT": "2017-09-17T19:24:44Z", "BR_text": {"BRsummary": "cannot open source file \"dynlink_nvcuvid.h\"\topencv_cudacodec", "BRdescription": "\n <denchmark-h:h5>System information (version)</denchmark-h>\n \n \n OpenCV => : 3.3:\n Operating System / Platform => : Windows 10 , 64 Bit:\n Compiler => :Visual Studio 2015:\n \n <denchmark-h:h5>Detailed description</denchmark-h>\n \n <denchmark-h:h2>i meet two bugs:</denchmark-h>\n \n 1.first enable preformance test cause error same as #6716\n 2.cannot open source file \"dynlink_nvcuvid.h\"\n <denchmark-code>Severity Code Description Project File Line Suppression State\n Error C1083\n Cannot open include file: 'dynlink_nvcuvid.h': No such file or directory\n opencv_cudacodec\topencv-master\\modules\\cudacodec\\src\\precomp.hpp\t59\t\n </denchmark-code>\n \n <denchmark-h:h2>cmake configure output</denchmark-h>\n \n <denchmark-code>CUDA detected: 8.0\n CUDA NVCC target flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-D_FORCE_INLINES\n </denchmark-code>\n \n General configuration for OpenCV 3.3.0-dev\n Extra modules:\n Location (extra):            opencv_contrib-master/modules\n <denchmark-code> Platform:\n    Timestamp:                   2017-09-02T15:37:49Z\n    Host:                        Windows 10.0.15063 AMD64\n    CMake:                       3.9.1\n    CMake generator:             Visual Studio 14 2015 Win64\n    CMake build tool:            C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe\n    MSVC:                        1900\n </denchmark-code>\n \n <denchmark-code>  CPU/HW features:\n     Baseline:                    SSE SSE2 SSE3\n       requested:                 SSE3\n     Dispatched code generation:  SSE4_2\n       SSE4_2 (3 files):          + SSSE3 SSE4_1 POPCNT SSE4_2\n </denchmark-code>\n \n <denchmark-code>    Use Lapack:                  NO\n     Use Eigen:                   NO\n     Use Cuda:                    YES (ver 8.0)\n     Use OpenCL:                  YES\n     Use OpenVX:                  NO\n     Use custom HAL:              NO\n </denchmark-code>\n \n <denchmark-code>  NVIDIA CUDA\n     Use CUFFT:                   YES\n     Use CUBLAS:                  YES\n     USE NVCUVID:                 YES\n     NVIDIA GPU arch:             50 52\n     NVIDIA PTX archs:\n     Use fast math:               NO\n </denchmark-code>\n \n <denchmark-code>  OpenCL:                        <Dynamic loading of OpenCL library>\n     Include path:               opencv-master/3rdparty/include/opencl/1.2\n     Use AMDFFT:                  NO\n     Use AMDBLAS:                 NO\n \n \n   Tests and samples:\n     Tests:                       NO\n     Performance tests:           NO\n     C/C++ Examples:              NO\n \n Configuring done\n Generating done\n \n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Amin-Tgz", "commentT": "2017-09-07T16:51:41Z", "comment_text": "\n \t\tAlso getting this error, same setup.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Amin-Tgz", "commentT": "2017-09-12T23:53:06Z", "comment_text": "\n \t\tI also ran into the same problem\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Amin-Tgz", "commentT": "2017-09-13T13:40:36Z", "comment_text": "\n \t\tThanks <denchmark-link:https://github.com/whizzzkid>@whizzzkid</denchmark-link>\n  , the solution proposed by <denchmark-link:https://github.com/opencv/opencv/pull/9599>#9599</denchmark-link>\n  worked!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Amin-Tgz", "commentT": "2017-09-14T17:36:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/lucaspbordignon>@lucaspbordignon</denchmark-link>\n  this is because cuda8 provides  and cuda9 provides  so opencv builds for cuda8 are not compatible with cuda9\n I am still working on the solution for this. Another workaround is to use -D WITH_NVCUVID=OFF flag when building.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Amin-Tgz", "commentT": "2018-09-20T18:17:29Z", "comment_text": "\n \t\tDespite the merge, the issue persists with CUDA 10.\n fatal error: dynlink_nvcuvid.h: No such file or directory\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Amin-Tgz", "commentT": "2018-09-20T19:53:20Z", "comment_text": "\n \t\tI have  the same issue with CUDA 10.\n Edit: I checked usr/local/cuda-10.0/include and there are no such files as dynlink_nvcuvid.h or nvcuvid.h!\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "Amin-Tgz", "commentT": "2018-09-21T02:12:28Z", "comment_text": "\n \t\tSame problem with CUDA 10\n precomp.hpp:60:18: fatal error: dynlink_nvcuvid.h: No such file or directory\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "Amin-Tgz", "commentT": "2018-09-21T10:33:00Z", "comment_text": "\n \t\tNVCUVID is deprecated: <denchmark-link:https://docs.nvidia.com/cuda/video-decoder/index.html>https://docs.nvidia.com/cuda/video-decoder/index.html</denchmark-link>\n \n A possible (and verified) hack is to download new NVDecode SDK: <denchmark-link:https://developer.nvidia.com/designworks/video_codec_sdk/downloads/v8.2-ga2>https://developer.nvidia.com/designworks/video_codec_sdk/downloads/v8.2-ga2</denchmark-link>\n \n Which provides in Video_Codec_SDK_8.2.16/Samples/NvCodec/NvDecoder two header files (cuviddec.h and nvcuvid.h) that just need to be copied to your include folder (/usr/local/cuda/include/)\n Changes to the header inclusion based on CUDA version need to be reverted accordingly, of course.\n I would suggest moving these two header files to opencv directly as they only specify the interface to the decoder.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "Amin-Tgz", "commentT": "2018-09-21T15:42:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/petrpulc>@petrpulc</denchmark-link>\n  Solved thanks\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "Amin-Tgz", "commentT": "2018-10-25T06:13:35Z", "comment_text": "\n \t\tThis workaround uses CUDA 8 definitions on CUDA 10 for a deprecated API. What is the \"longer\" term permanent fix? In other words, It's unclear to me if the older nvcuvid.h from Cuda 8 and the one in Cuda 10 / NVDecode SDK are compatible? I don't have Cuda 8 headers to compare.\n \t\t"}}}, "commit": {"commit_id": "37ba1d6f2d18511034b7336a24588460aa549d0d", "commit_author": "Nishant Arora", "commitT": "2017-09-17 19:24:43+00:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "modules\\cudacodec\\src\\cuvid_video_source.hpp", "file_new_name": "modules\\cudacodec\\src\\cuvid_video_source.hpp", "file_complexity": {"file_NLOC": "23", "file_CCN": "0", "file_NToken": "95"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "47,48,49,50,51", "deleted_lines": "47,48"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "modules\\cudacodec\\src\\frame_queue.hpp", "file_new_name": "modules\\cudacodec\\src\\frame_queue.hpp", "file_complexity": {"file_NLOC": "27", "file_CCN": "4", "file_NToken": "148"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "50,51,52,53,54", "deleted_lines": "50"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "modules\\cudacodec\\src\\precomp.hpp", "file_new_name": "modules\\cudacodec\\src\\precomp.hpp", "file_complexity": {"file_NLOC": "22", "file_CCN": "0", "file_NToken": "44"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "59,60,61,62,63", "deleted_lines": "59"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "modules\\cudacodec\\src\\video_decoder.hpp", "file_new_name": "modules\\cudacodec\\src\\video_decoder.hpp", "file_complexity": {"file_NLOC": "48", "file_CCN": "12", "file_NToken": "296"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "47,48,49,50,51", "deleted_lines": "47"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "modules\\cudacodec\\src\\video_parser.hpp", "file_new_name": "modules\\cudacodec\\src\\video_parser.hpp", "file_complexity": {"file_NLOC": "29", "file_CCN": "2", "file_NToken": "140"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "47,48,49,50,51", "deleted_lines": "47"}}}}}}