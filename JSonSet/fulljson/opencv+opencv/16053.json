{"BR": {"BR_id": "16053", "BR_author": "mcellis33", "BRopenT": "2019-12-03T18:23:59Z", "BRcloseT": "2019-12-12T12:50:31Z", "BR_text": {"BRsummary": "approxPolyDP OOMs", "BRdescription": "\n <denchmark-h:h3>System information (version)</denchmark-h>\n \n \n OpenCV => 3.4\n Operating System / Platform => Linux 64 Bit\n Compiler => x86_64-linux-gnu-g++-8\n \n <denchmark-h:h5>Detailed description</denchmark-h>\n \n For certain contours, if approxPolyDP is passed an epsilon of NaN, then it OOMs.\n This may simply be a request for input validation in approxPolyDP, because I believe an epsilon of NaN is meaningless.\n <denchmark-h:h5>Steps to reproduce</denchmark-h>\n \n Here is a fairly minimal repro. Note that this uses the same contour as in the repro of <denchmark-link:https://github.com/opencv/opencv/issues/16051>#16051</denchmark-link>\n . You may need to tweak the headers/namespaces.\n <denchmark-code>#include \"third_party/OpenCVX/include/opencv2/imgproc/imgproc.hpp\"\n int main(int argc, char **argv) {\n   std::vector<cv::Point> contour(\n       {cv::Point(2085, 1415), cv::Point(2087, 1415), cv::Point(2089, 1414),\n        cv::Point(2089, 1414), cv::Point(2087, 1412)});\n   float epsilon = NAN;\n   std::vector<cv::Point> approx;\n   cv::approxPolyDP(contour, approx, epsilon,\n                     true /* closed curve */);\n   // The process will OOM before getting here.\n }\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mcellis33", "commentT": "2019-12-04T23:24:42Z", "comment_text": "\n \t\tEpsilon is the error \"distance\" between the approximation and input polyline. So NaN in the Douglas-Peucker algo would cause it to go overboard. I agree,\n  CV_Error( Error::StsBadArg, \"Epsilon not valid.\" ) seems like a good response?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "mcellis33", "commentT": "2019-12-05T11:17:02Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/saskatchewancatch>@saskatchewancatch</denchmark-link>\n  Agreed on error message, like this:\n <denchmark-code>if (epsilon < 0 || !(epsilon < 1e30))\n     CV_Error(...)\n </denchmark-code>\n \n with simple regression test  with  check (avoid using of legacy testing approach with classes - <denchmark-link:https://github.com/opencv/opencv/blob/3.4.8/modules/imgproc/test/test_contours.cpp#L488-L500>use this as example</denchmark-link>\n )\n Target branch is 3.4\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "mcellis33", "commentT": "2019-12-08T02:33:19Z", "comment_text": "\n \t\tPR <denchmark-link:https://github.com/opencv/opencv/pull/16094>#16094</denchmark-link>\n  should take care of this.\n <denchmark-link:https://github.com/alalek>@alalek</denchmark-link>\n  as it turns out there was already a test file for polyapprox, so I added a test there.\n \t\t"}}}, "commit": {"commit_id": "b9435b9e38dfaa707623879158bcb92952010fe0", "commit_author": "RAJKIRAN NATARAJAN", "commitT": "2019-12-09 22:24:35+03:00", "commit_complexity": {"commit_NLOC": "0.7777777777777778", "commit_CCN": "0.7777777777777778", "commit_Nprams": "0.7777777777777778"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\imgproc\\src\\approx.cpp", "file_new_name": "modules\\imgproc\\src\\approx.cpp", "file_complexity": {"file_NLOC": "616", "file_CCN": "147", "file_NToken": "3846"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "680,681,682,683,684,685,686", "deleted_lines": null, "method_info": {"method_name": "cv::approxPolyDP", "method_params": "_curve,_approxCurve,epsilon,closed", "method_startline": "675", "method_endline": "710", "method_complexity": {"method_NLOC": "28", "method_CCN": "8", "method_NToken": "233", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\imgproc\\test\\test_approxpoly.cpp", "file_new_name": "modules\\imgproc\\test\\test_approxpoly.cpp", "file_complexity": {"file_NLOC": "214", "file_CCN": "32", "file_NToken": "1487"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377", "deleted_lines": null, "method_info": {"method_name": "opencv_test::TEST", "method_params": "Imgproc_ApproxPoly,bad_epsilon", "method_startline": "360", "method_endline": "377", "method_complexity": {"method_NLOC": "14", "method_CCN": "1", "method_NToken": "125", "method_nesting_level": "2"}}}}}}}}