{"BR": {"BR_id": "16370", "BR_author": "UnaNancyOwen", "BRopenT": "2020-01-17T02:43:31Z", "BRcloseT": "2020-02-20T19:25:11Z", "BR_text": {"BRsummary": "DNN: Required argument \"split\" not found into dictionary", "BRdescription": "\n <denchmark-h:h5>System information (version)</denchmark-h>\n \n \n OpenCV => 4.2.0\n Operating System / Platform => Windows 64 Bit\n Compiler => Visual Studio 2019\n \n <denchmark-h:h5>Detailed description</denchmark-h>\n \n I'm trying to inference classification model trained on <denchmark-link:https://www.customvision.ai/>Custom Vision</denchmark-link>\n  of Azure Cognitive Services using OpenCV DNN module.\n Custom Vision can download trained ONNX model. The following error occurs when read net from it.\n <denchmark-code>OpenCV: terminate handler is called! The last OpenCV error is:\n OpenCV(4.2.0) Error: Requested object was not found (Required argument \"split\" not found into dictionary) in cv::dnn::dnn4_v20191202::Dict::get, file C:\\opencv-4.2.0\\modules\\dnn\\include\\opencv2/dnn/dnn.inl.hpp, line 349\n </denchmark-code>\n \n This is part of model visualize image using Netron.\n <denchmark-link:https://user-images.githubusercontent.com/816705/72579738-59b39e80-391d-11ea-851e-2cc422be10b8.png></denchmark-link>\n \n (Other model visualize image is <denchmark-link:https://user-images.githubusercontent.com/816705/72579941-e8282000-391d-11ea-8bee-fbfc2989c6e3.png>here</denchmark-link>\n . All model visualize image is <denchmark-link:https://user-images.githubusercontent.com/816705/72579836-98e1ef80-391d-11ea-9b8e-60a2aed95f35.png>here</denchmark-link>\n .)\n What do you think? Thanks,\n <denchmark-h:h5>Steps to reproduce</denchmark-h>\n \n This issue can be reproduced with the following code:\n const std::string model = \"./model.onnx\";\n cv::dnn::Net net = cv::dnn::readNet( model ); // error\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "UnaNancyOwen", "commentT": "2020-01-17T02:50:42Z", "comment_text": "\n \t\tCould you please attach .onnx model file (google drive link or attach .zip file) which can be used to reproduce problem? (you may use random weighs)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "UnaNancyOwen", "commentT": "2020-01-17T02:53:53Z", "comment_text": "\n \t\tmodel.onnx can be downloaded from <denchmark-link:https://github.com/opencv/opencv/files/4074830/model.zip>here</denchmark-link>\n . (zip file)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "UnaNancyOwen", "commentT": "2020-01-22T15:21:28Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/UnaNancyOwen>@UnaNancyOwen</denchmark-link>\n  <denchmark-link:https://github.com/alalek>@alalek</denchmark-link>\n \n I think I am able to reproduce the error.\n \n // opencv_debug.cpp\n #include<opencv2/dnn.hpp>\n int main()\n {\n     const std::string model = \"./model.onnx\";\n     cv::dnn::Net net = cv::dnn::readNet( model ); // error\n }\n I used, g++ opencv_debug.cpp -o issue_16370 -lopencv_dnn -lopencv_core and got the following,\n terminate called after throwing an instance of 'cv::Exception'  what():  OpenCV(3.4.9-dev) /home/czgdp1807/opencv_project/opencv/modules/dnn/include/opencv2/dnn/dnn.inl.hpp:333: error: (-204:Requested object was not found) Required argument \"split\" not found into dictionary in function 'get'Aborted (core dumped)\n Can I start working on this issue as it appears that no PR has referenced this issue.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "UnaNancyOwen", "commentT": "2020-01-22T15:33:29Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/czgdp1807>@czgdp1807</denchmark-link>\n  Yes =)\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "UnaNancyOwen", "commentT": "2020-01-23T15:42:40Z", "comment_text": "\n \t\tI was trying to find the cause of the bug and observed that the corner case of absence of  attribute in  layer in the code base wasn't handled and therefore the above exception is thrown. We don't need  attribute, if it is not present then the input tensor is split into equal sized parts. I will make a PR for this issue by tomorrow(in IST).\n <denchmark-link:https://github.com/UnaNancyOwen>@UnaNancyOwen</denchmark-link>\n   Please let me know the expected output in your case so that I can add tests for the fix accordingly. Thank you.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "UnaNancyOwen", "commentT": "2020-01-23T16:42:12Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/czgdp1807>@czgdp1807</denchmark-link>\n  Thank you for looking on this!\n \"Expected output\" is handling ONNX operation properly (including its possible parameters/inputs/modes).\n Documentation about ONNX Split operation is <denchmark-link:https://github.com/onnx/onnx/blob/master/docs/Operators.md#Split>here</denchmark-link>\n .\n Some of ONNX testdata cases are generated through <denchmark-link:https://github.com/opencv/opencv_extra/blame/master/testdata/dnn/onnx/generate_onnx_models.py>this script</denchmark-link>\n  (using PyTorch and exporting to ONNX).\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "UnaNancyOwen", "commentT": "2020-01-24T15:13:09Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/UnaNancyOwen>@UnaNancyOwen</denchmark-link>\n  I have described some problems which I am facing while resolving this issue in <denchmark-link:https://github.com/opencv/opencv/pull/16424#issuecomment-578169612>#16424 (comment)</denchmark-link>\n \n There is  layer in the model which is having  with  entry twice. Can you please tell what's the purpose of these two entries? However, the tensor is having . So, I think the tensor is not empty. Waiting for your response. Thank you.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "UnaNancyOwen", "commentT": "2020-01-25T05:47:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/czgdp1807>@czgdp1807</denchmark-link>\n  Thanks for working on this issue.\n Sorry, I can't answer your question. I don't know the details of this model that was defined in Custom Vision. (Unfortunately, I don't have enough knowledge about deep learning to understand model. )\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "UnaNancyOwen", "commentT": "2020-01-25T05:58:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/UnaNancyOwen>@UnaNancyOwen</denchmark-link>\n  Thanks for the updates. Though I am sure that bug in processing of  layer has been fixed. I will try to fix the problems with  layer as soon as possible.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "UnaNancyOwen", "commentT": "2020-01-27T14:58:16Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/alalek>@alalek</denchmark-link>\n  <denchmark-link:https://github.com/UnaNancyOwen>@UnaNancyOwen</denchmark-link>\n  ,\n I parsed the model using python package,  and observed that this model outputs instead of a probability vector. In fact, the , a.k.a.  in the <denchmark-link:https://drive.google.com/file/d/1TEjZF_SJY8uzC_C0FFXFBlYxvaNVqJhb/view?usp=sharing>attached svg</denchmark-link>\n , layer in <denchmark-link:https://github.com/UnaNancyOwen>@UnaNancyOwen</denchmark-link>\n  's model contains the names of various labels which are extracted using the  and is done by the . Then the output of  and  are given to  which returns the final class label in the form of a string.\n \n To fix the  layer we have to provide support for  as it is included in <denchmark-link:https://github.com/onnx/onnx/blob/master/docs/Operators.md#type-constraints-20>type constraints for Constant layer</denchmark-link>\n . For that we have to provide support for strings in  because  data member of  are a vector of .\n Another approach can be, to change functions like ,  for making them compatible with .\n There can be other good approaches too.\n \n In my ongoing PR <denchmark-link:https://github.com/opencv/opencv/pull/16424>#16424</denchmark-link>\n  I will add a test for Split layer and complete it so that  layer works properly. Alongside, I will open an issue for discussing other fixes for supporting  types in  layer. In case if anyone can suggest a quick fix for supporting  then I will include them in my going PR itself.\n Please let me know if I have misinterpreted anything. Thanks.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "UnaNancyOwen", "commentT": "2020-02-15T12:02:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/UnaNancyOwen>@UnaNancyOwen</denchmark-link>\n  The fix for split layer has been made. Please follow the suggestion at <denchmark-link:https://github.com/opencv/opencv/pull/16424#issuecomment-583773283>#16424 (comment)</denchmark-link>\n  to verify. Please let me know if it's working for you.\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "UnaNancyOwen", "commentT": "2020-02-16T02:02:01Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/czgdp1807>@czgdp1807</denchmark-link>\n  Thanks, I tried it but got the following error instead of the previous one. (<denchmark-link:https://github.com/opencv/opencv/pull/16424>#16424</denchmark-link>\n  was merged into the 3.4 branch, so I tried with 3.4/HEAD.)\n <denchmark-code>OpenCV: terminate handler is called! The last OpenCV error is:\n OpenCV(3.4.9-dev) Error: Assertion failed (!tensor_proto.raw_data().empty() || !tensor_proto.float_data().empty() || !tensor_proto.double_data().empty() || !tensor_proto.int64_data().empty()) in cv::dnn::experimental_dnn_34_v16::getMatFromTensor, file C:\\opencv\\modules\\dnn\\src\\onnx\\onnx_importer.cpp, line 112\n </denchmark-code>\n \n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "UnaNancyOwen", "commentT": "2020-02-16T16:33:45Z", "comment_text": "\n \t\tYes that will happen as string isn't supported by Constant layer. You should make SoftMax as output layer.\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "UnaNancyOwen", "commentT": "2020-02-17T01:39:51Z", "comment_text": "\n \t\tDoes that mean changing the model?\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "UnaNancyOwen", "commentT": "2020-02-17T17:39:02Z", "comment_text": "\n \t\tIMO, the trick is mentioned at <denchmark-link:https://github.com/opencv/opencv/pull/16424#issuecomment-583773283>#16424 (comment)</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "a6f3a2125607ea8bb7750b3f889c8331e811fc98", "commit_author": "Gagandeep Singh", "commitT": "2020-02-15 14:12:20+03:00", "commit_complexity": {"commit_NLOC": "0.6111111111111112", "commit_CCN": "0.6111111111111112", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\dnn\\src\\onnx\\onnx_importer.cpp", "file_new_name": "modules\\dnn\\src\\onnx\\onnx_importer.cpp", "file_complexity": {"file_NLOC": "922", "file_CCN": "186", "file_NToken": "7742"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "488,489,490,491,492,494,495,496,497,498,499,500,501,503", "deleted_lines": "488,489,490,492,493,495,497", "method_info": {"method_name": "cv::dnn::ONNXImporter::populateNet", "method_params": "dstNet", "method_startline": "339", "method_endline": "1023", "method_complexity": {"method_NLOC": "612", "method_CCN": "115", "method_NToken": "5263", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\dnn\\test\\test_onnx_importer.cpp", "file_new_name": "modules\\dnn\\test\\test_onnx_importer.cpp", "file_complexity": {"file_NLOC": "591", "file_CCN": "210", "file_NToken": "3748"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "389,390,391,392,393,394,395,396,397,398,399", "deleted_lines": null, "method_info": {"method_name": "opencv_test::TEST_P", "method_params": "Test_ONNX_layers,Split", "method_startline": "389", "method_endline": "399", "method_complexity": {"method_NLOC": "11", "method_CCN": "3", "method_NToken": "50", "method_nesting_level": "2"}}}}}}}}