{"BR": {"BR_id": "6231", "BR_author": "pdstc", "BRopenT": "2016-03-10T00:19:58Z", "BRcloseT": "2017-08-17T16:32:53Z", "BR_text": {"BRsummary": "Stitcher examples crash with CUDA.", "BRdescription": "\n <denchmark-h:h3>Please state the information for your system</denchmark-h>\n \n \n OpenCV version: 3.1.0\n Host OS: Linux (Ubuntu 14.04)  / Mac OS X 10.11.3\n Compiler & CMake: GCC 4.8.4 & CMake 2.8.12.2 / AppleClang 7.0.2.7000181 & CMake 3.5.0\n CUDA: 7.5\n \n <denchmark-h:h3>In which part of the OpenCV library you got the issue?</denchmark-h>\n \n \n stitching\n cpp-example-stitching, cpp-example-stitching_detailed\n \n <denchmark-h:h3>Issue</denchmark-h>\n \n On both Linux and OSX stitcher examples crash when gpu is enabled.\n <denchmark-h:h3>Code example to reproduce the issue / Steps to reproduce the issue</denchmark-h>\n \n Linux:\n <denchmark-code>build/bin/cpp-example-stitching ~/Downloads/k1.jpg ~/Downloads/k2.jpg --try_use_gpu yes\n OpenCV Error: The function/feature is not implemented (You should explicitly call download method for cuda::GpuMat object) in getMat_, file /home/paul/opencv/opencv/modules/core/src/matrix.cpp, line 1224\n terminate called after throwing an instance of 'cv::Exception'\n   what():  /home/paul/opencv/opencv/modules/core/src/matrix.cpp:1224: error: (-213) You should explicitly call download method for cuda::GpuMat object in function getMat_\n \n Aborted (core dumped)\n </denchmark-code>\n \n OSX:\n <denchmark-code>bin/cpp-example-stitching ~/Downloads/k1.jpg ~/Downloads/k2.jpg --try_use_gpu yes\n OpenCV Error: The function/feature is not implemented (You should explicitly call download method for cuda::GpuMat object) in getMat_, file /Users/paul/work/opencv/opencv_git/modules/core/src/matrix.cpp, line 1224\n libc++abi.dylib: terminating with uncaught exception of type cv::Exception: /Users/paul/work/opencv/opencv_git/modules/core/src/matrix.cpp:1224: error: (-213) You should explicitly call download method for cuda::GpuMat object in function getMat_\n \n Abort trap: 6\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "pdstc", "commentT": "2016-03-16T12:49:48Z", "comment_text": "\n \t\tSame behaviour in Windows 8.1 x64, OpenCV 3.1.0 compiled from latest git with Cuda 7.5 using msvc2013:\n C:\\OpenCV-3.1.0\\opencv_build\\bin\\Release>cpp-example-stitching testdata\\stitching\\boat1.jpg testdata\\stitching\\boat2.jpg --try_use_gpu yes\n OpenCV Error: The function/feature is not implemented (You should explicitly call download method for cuda::GpuMat object) in cv::InputArray::getMat, file C:\\OpenCV-3.1.0\\opencv\\modules\\core\\src\\matrix.cpp, line 1232\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "pdstc", "commentT": "2016-03-17T18:22:30Z", "comment_text": "\n \t\tApparently the bug is related to SURF estimator (I built OpenCV with contrib modules, including xfeatures2d).\n For me, launching\n cpp-example-stitching_detailed.exe testdata\\stitching\\boat1.jpg testdata\\stitching\\boat2.jpg --try_cuda yes\n crashes with the above error message, but using orb feature detector works fine:\n cpp-example-stitching_detailed.exe testdata\\stitching\\boat1.jpg testdata\\stitching\\boat2.jpg --try_cuda yes --features orb\n My stack trace when using the standard SURF detector:\n opencv_core310.dll!cv::error(const cv::Exception & exc) Line 653    C++\n opencv_core310.dll!cv::error(int _code, const cv::String & _err, const char * _func, const char * _file, int _line) Line 658    C++\n opencv_core310.dll!cv::InputArray::getMat(int i) Line 1232    C++\n opencv_imgproc310.dll!cv::_InputArray::getMat(int i) Line 128   C++\n opencv_imgproc310.dll!cv::cvtColor(const cv::_InputArray & _src, const cv::_OutputArray & _dst, int code, int dcn) Line 7933    C++\n opencv_stitching310.dll!cv::detail::SurfFeaturesFinderGpu::find(const cv::_InputArray & image, cv::detail::ImageFeatures & features) Line 485   C++\n opencv_stitching310.dll!cv::detail::FeaturesFinder::operator()(const cv::_InputArray & image, cv::detail::ImageFeatures & features) Line 282    C++\n cpp-example-stitching_detailed.exe!main(int argc, char * * argv) Line 447   C++\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "pdstc", "commentT": "2016-10-16T10:23:45Z", "comment_text": "\n \t\tSame behaviour in Linux Mint 18.0 (Ubuntu 16.04 LTS), OpenCV 3.1 + contrib + Cuda 7.5 compiled with GCC 5.4.0\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "pdstc", "commentT": "2017-03-09T09:20:12Z", "comment_text": "\n \t\tThere is a bug in the implementation at <denchmark-link:https://github.com/opencv/opencv/blob/bf4c5bef7fa254e996f31d3e3d7f81ce63716c13/modules/stitching/src/matchers.cpp#L483>this line</denchmark-link>\n .\n void SurfFeaturesFinderGpu::find(InputArray image, ImageFeatures &features); \n GpuMats has been used in cvtColor function directly. Please replace this line\n cvtColor(image_, gray_image_, COLOR_BGR2GRAY); \n with:\n <denchmark-code>\tMat gray_image; //MEER TEMPORARY STORAGE FOR GRAY IMAGE\n \tcvtColor(image, gray_image, COLOR_BGR2GRAY); //MEER CREATE THE GRAY IMAGE\n \tgray_image_.upload(gray_image); //MEER SEND THE GRAY IMAGE TO GPU COUNTERPART\n </denchmark-code>\n \n In case you need more explanation please visit <denchmark-link:https://sadeqbillah.wordpress.com/2017/03/09/solving-opencv-gpu-image-stitching-error/>my blog</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "98db804541accd2ffd920037bf7a8f5ec55c801f", "commit_author": "Nishant Arora", "commitT": "2017-08-17 16:32:53+00:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\stitching\\src\\matchers.cpp", "file_new_name": "modules\\stitching\\src\\matchers.cpp", "file_complexity": {"file_NLOC": "601", "file_CCN": "127", "file_NToken": "5349"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "590,591,592,593,595", "deleted_lines": null, "method_info": {"method_name": "cv::detail::SurfFeaturesFinderGpu::find", "method_params": "image,features", "method_startline": "582", "method_endline": "609", "method_complexity": {"method_NLOC": "19", "method_CCN": "2", "method_NToken": "165", "method_nesting_level": "2"}}}}}}}}