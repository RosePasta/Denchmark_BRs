{"BR": {"BR_id": "9312", "BR_author": "PhilLab", "BRopenT": "2017-08-04T12:03:13Z", "BRcloseT": "2017-08-28T20:28:20Z", "BR_text": {"BRsummary": "Persistence: Reading a broken file does not close the file handle", "BRdescription": "\n <denchmark-h:h5>System information (version)</denchmark-h>\n \n \n OpenCV => 3.2 + X, SHA1 dcd8589\n Operating System / Platform => Windows 64 Bit\n Compiler => Visual Studio 2013\n \n <denchmark-h:h5>Detailed description</denchmark-h>\n \n cv::FilesStorage does not correctly close the file handle if reading threw an error. This leads to other processes / calls not being able to modify the file until the process is closed.\n The reason might be that if the <denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L4521>parsing</denchmark-link>\n  fails, <denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L4528>cvReleaseFileStorage</denchmark-link>\n  is called which then calls icvClose. But since <denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L669>fs->is_opened is false</denchmark-link>\n , this does not seem to close the file. This is because the flag is only set <denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L4537>after successful parsing</denchmark-link>\n \n <denchmark-h:h5>Steps to reproduce</denchmark-h>\n \n <denchmark-code>#include \"stdafx.h\"\n #include <opencv2/core.hpp>\n #include <boost/filesystem.hpp>\n #include <iostream>\n \n int main(int argc, char* argv[])\n {\n     const std::string filePath = \"test.yml\"; // This is a YML with wrong indentation\n     try {\n         cv::FileStorage fs(filePath, cv::FileStorage::READ);\n     }\n     catch (const std::exception& e) {\n         std::cerr << e.what() << std::endl;\n         // This will fail due to \"cannot access the file because it is being used by another process\"\n         boost::filesystem::rename(boost::filesystem::path(filePath), boost::filesystem::path(filePath + \"_broken.yml\"));\n         return 1;\n     }\n     return 0;\n }\n </denchmark-code>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "aa54acd54da22e7e61acba345365f290b4dc5850", "commit_author": "Vladislav Sovrasov", "commitT": "2017-08-07 16:16:14+03:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\core\\test\\test_io.cpp", "file_new_name": "modules\\core\\test\\test_io.cpp", "file_complexity": {"file_NLOC": "1136", "file_CCN": "171", "file_NToken": "10035"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368", "deleted_lines": null, "method_info": {"method_name": "TEST", "method_params": "Core_InputOutput,FileStorage_free_file_after_exception", "method_startline": "1349", "method_endline": "1368", "method_complexity": {"method_NLOC": "18", "method_CCN": "3", "method_NToken": "107", "method_nesting_level": "0"}}}}}}}}