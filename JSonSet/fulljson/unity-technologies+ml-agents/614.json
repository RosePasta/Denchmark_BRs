{"BR": {"BR_id": "614", "BR_author": "fre", "BRopenT": "2018-04-11T17:44:24Z", "BRcloseT": "2018-05-17T21:30:53Z", "BR_text": {"BRsummary": "Visual observations for internal brain are not normalized properly", "BRdescription": "\n Had an issue with my internal brain behaving differently than the external brain in inference mode when passed visual observations (a hand-generated 16x16 texture).\n It seems that images received by environment.py are normalized to [0;1] (pixel values are divided by 255):\n \n \n \n ml-agents/python/unityagents/environment.py\n \n \n          Line 196\n       in\n       8365e2c\n \n \n \n \n \n \n  s = np.array(image) / 255.0 \n \n \n \n \n \n But the values extracted by CoreBrainInternal::BatchVisualObservations are not:\n \n \n \n ml-agents/unity-environment/Assets/ML-Agents/Scripts/CoreBrainInternal.cs\n \n \n          Line 528\n       in\n       8365e2c\n \n \n \n \n \n \n  result[b, textures[b].height - h - 1, w, 0] = currentPixel.r; \n \n \n \n \n \n which leads to unpredictable agent behavior (since inputs are 255x bigger than expected).\n This solves my issue:\n <denchmark-code>{\n     result[b, textures[b].height - h - 1, w, 0] = currentPixel.r / 255.0f;\n     result[b, textures[b].height - h - 1, w, 1] = currentPixel.g / 255.0f;\n     result[b, textures[b].height - h - 1, w, 2] = currentPixel.b / 255.0f;\n }\n else\n {\n     result[b, textures[b].height - h - 1, w, 0] = (currentPixel.r + currentPixel.g + currentPixel.b) / 3  / 255.0f;\n }```\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "fre", "commentT": "2018-04-12T23:14:07Z", "comment_text": "\n \t\tHi, ,  and  return floats between 0 and 1. <denchmark-link:https://docs.unity3d.com/ScriptReference/Color-r.html>Source here</denchmark-link>\n  We divide on python because we send the image as PNG instead of a Texture2D. Do you manage to have the gridworld working ? It surprises me that you get better results by dividing by 255. Could you compare the performance for gridworld?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "fre", "commentT": "2018-04-13T06:22:45Z", "comment_text": "\n \t\tThis code is using Color32, which returns values between 0 and 255.\n I've only tested this on my own experimental project where I use visual observations to pass the state of the game (think chessboard state) rather than camera renders, so it may be much more sensitive to scaling than the example.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "fre", "commentT": "2018-04-13T13:05:51Z", "comment_text": "\n \t\tSo, is this a bug?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "fre", "commentT": "2018-04-14T05:49:04Z", "comment_text": "\n \t\tI think you are right, this is a bug. I will try to get is fixed. Thank you for your help <denchmark-link:https://github.com/fre>@fre</denchmark-link>\n .\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "fre", "commentT": "2018-04-14T08:13:51Z", "comment_text": "\n \t\tAFAIK, this bug only affects internal brains, i.e. importing the trained\n agent in unity.\n \n Training a gridworld-type task works fine for me. FYI I generate a 16x16\n board representation centered on the agent where each type of entity is\n rendered on a different channel (R,G,B) of the output texture and only use\n a single 3x3 convolution layer with 256 filters and stride 1 before a\n single fully connected layer of size 128.\n \n Slowing down the time scale during training (adding UI buttons for that is\n helpful) shows that the agent learns properly. It's only when I import the\n trained model in unity that the internal brain behaves differently (without\n this normalization fix).\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Sat, Apr 14, 2018, 9:46 AM Marco Pleines ***@***.***> wrote:\n  I'm wondering if this is why I could not get anything environment working,\n  which relies on visuals only. (#198\n  <#198>)\n \n  \u2014\n  You are receiving this because you were mentioned.\n  Reply to this email directly, view it on GitHub\n  <#614 (comment)>,\n  or mute the thread\n  <https://github.com/notifications/unsubscribe-auth/AAFakKdl9TGPHGSqsYZmN_zuTAJGJzlxks5toalwgaJpZM4TQdn3>\n  .\n \n \n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "fre", "commentT": "2018-04-14T17:09:35Z", "comment_text": "\n \t\tThank you very much fre for this fix.  I applied fre's code above and it fixed a very nagging problem I have been having.  Now my app work just as well in Internal mode!\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "fre", "commentT": "2018-05-17T21:30:53Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/fre>@fre</denchmark-link>\n  <denchmark-link:https://github.com/RossMelbourne>@RossMelbourne</denchmark-link>\n , we are closing this issue due to inactivity, feel free to open it if you need more help on this, hopefully Vince's fix solves your issue.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "fre", "commentT": "2020-01-03T10:20:04Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "5165e883c353ea67a5a76bbcf22e16ce4241c769", "commit_author": "vincentpierre", "commitT": "2018-04-16 13:29:08-07:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\Installation.md", "file_new_name": "docs\\Installation.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "61", "deleted_lines": "61,62,63,64,65"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\localized\\zh-CN\\docs\\Installation.md", "file_new_name": "docs\\localized\\zh-CN\\docs\\Installation.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "59", "deleted_lines": "59,60,61,62,63"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "unity-environment\\Assets\\ML-Agents\\Examples\\Basic\\Scene.unity", "file_new_name": "unity-environment\\Assets\\ML-Agents\\Examples\\Basic\\Scene.unity", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": null}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "unity-environment\\Assets\\ML-Agents\\Examples\\Basic\\TFModels\\Basic.bytes", "file_new_name": "unity-environment\\Assets\\ML-Agents\\Examples\\Basic\\TFModels\\Basic.bytes", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": null}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "unity-environment\\Assets\\ML-Agents\\Examples\\Basic\\TFModels\\Basic.bytes.meta", "file_new_name": "unity-environment\\Assets\\ML-Agents\\Examples\\Basic\\TFModels\\Basic.bytes.meta", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": null}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "unity-environment\\Assets\\ML-Agents\\Scripts\\CoreBrainInternal.cs", "file_new_name": "unity-environment\\Assets\\ML-Agents\\Scripts\\CoreBrainInternal.cs", "file_complexity": {"file_NLOC": "432", "file_CCN": "68", "file_NToken": "2597"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "193", "deleted_lines": "193", "method_info": {"method_name": "CoreBrainInternal::DecideAction", "method_params": "agentInfo", "method_startline": "164", "method_endline": "396", "method_complexity": {"method_NLOC": "196", "method_CCN": "29", "method_NToken": "1264", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "526,527,533,547,549,550,551,552,553,554,555,556,560,561,562", "deleted_lines": "526,528,529,530,534", "method_info": {"method_name": "CoreBrainInternal::BatchVisualObservations", "method_params": "textures,blackAndWhite", "method_startline": "526", "method_endline": "568", "method_complexity": {"method_NLOC": "40", "method_CCN": "6", "method_NToken": "287", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,533", "deleted_lines": "506,512,526,528,529,530,534", "method_info": {"method_name": "CoreBrainInternal::BatchVisualObservations", "method_params": "textures,BlackAndWhite", "method_startline": "506", "method_endline": "540", "method_complexity": {"method_NLOC": "34", "method_CCN": "6", "method_NToken": "275", "method_nesting_level": "1"}}}}}}}}