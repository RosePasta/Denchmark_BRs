{"BR": {"BR_id": "1330", "BR_author": "MengNan-Li", "BRopenT": "2020-07-15T12:01:26Z", "BRcloseT": "2020-09-03T13:49:49Z", "BR_text": {"BRsummary": "CPU usage is high with MYRIAD plugin", "BRdescription": "\n using object_detection_demo_ssd_async demo:\n \n Load inference engine\n Read IR Generated by ModelOptimizer (.xml and .bin files)\n Configure input & output\n Loading model to the device\n Create infer request\n Do inference\n while(true){\n std::this_thread::sleep_for(std::chrono::milliseconds(10));\n }\n do nothing, but the CPU usage is still high. When changing to the MKLDNNPlugin, the cpu usage is low.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "MengNan-Li", "commentT": "2020-07-15T17:39:38Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/MengNan-Li>@MengNan-Li</denchmark-link>\n \n Which version of the OpenVINO toolkit are you using? Could you share additional information about your system (CPU model)?\n Regards,\n Jesus\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "MengNan-Li", "commentT": "2020-07-16T02:08:51Z", "comment_text": "\n \t\tThe version of OpenVINO toolkit is 2020.3.\n CPU info:\n <denchmark-code>cpu family\t: 6 \n model\t\t: 158 \n model name\t: Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz \n </denchmark-code>\n \n The attachment is the object_detection_demo_ssd_async demo code. The running command is:\n <denchmark-code>./object_detection_demo_ssd_async -i cam -m ~/openvino_ws/openvino_models/ir/public/ssd_mobilenet_v2_coco/FP16/ssd_mobilenet_v2_coco.xml -no_show -d MYRIAD (CPU usage is about 60%)\n ./object_detection_demo_ssd_async -i cam -m ~/openvino_ws/openvino_models/ir/public/ssd_mobilenet_v2_coco/FP16/ssd_mobilenet_v2_coco.xml -no_show (CPU usage is about 7%)\n </denchmark-code>\n \n <denchmark-link:https://github.com/openvinotoolkit/openvino/files/4928959/object_detection_demo_ssd_async.zip>object_detection_demo_ssd_async.zip</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "MengNan-Li", "commentT": "2020-07-16T02:12:40Z", "comment_text": "\n \t\tWhen I use the version 2019R3 with MYRIAD, the CPU usage is very low.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "MengNan-Li", "commentT": "2020-07-16T17:59:52Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/MengNan-Li>@MengNan-Li</denchmark-link>\n \n We just released OpenVINO 2020.4, could you see if you see the same CPU usage when running MYRIAD?\n Regards,\n Jesus\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "MengNan-Li", "commentT": "2020-07-17T06:56:45Z", "comment_text": "\n \t\tI upgrade OpenVINO to the new release version 2020.4. I already upload the test demo code(<denchmark-link:https://github.com/openvinotoolkit/openvino/issues/1330#issuecomment-659113506>#1330 (comment)</denchmark-link>\n ), which do nothing after loading the model and plugin etc. The CPU usage is as follows.\n <denchmark-link:https://user-images.githubusercontent.com/27143147/87756799-22766980-c83c-11ea-9268-571d8b461b19.png></denchmark-link>\n \n \n \n \n Devices\n CPU usage\n \n \n \n \n CPU\n 0.7%\n \n \n GPU\n 99%\n \n \n MYRIAD\n 66%\n \n \n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "MengNan-Li", "commentT": "2020-07-17T17:18:08Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/MengNan-Li>@MengNan-Li</denchmark-link>\n \n I tested OpenVINO 2020.4 release with our object_detection_demo_ssd_async demo code and MYRIAD. I saw about 6% CPU usage. Could you try with our demo code included in the latest release? The code attached to your previous comments are from an older release and seems like you have made some modifications.\n <denchmark-code>python \"C:\\Program Files (x86)\\IntelSWTools\\openvino\\deployment_tools\\tools\\model_downloader\\downloader.py\" --name ssd_mobilenet_v2_coco\n \n python \"C:\\Program Files (x86)\\IntelSWTools\\openvino\\deployment_tools\\model_optimizer\\mo_tf.py\" --input_model frozen_inference_graph.pb --batch 1 --reverse_input_model --tensorflow_object_detection_api_pipeline_config pipeline.config --transformations_config \"C:\\Program Files (x86)\\IntelSWTools\\openvino\\deployment_tools\\model_optimizer\\extensions\\front\\tf\\ssd_v2_support.json\" --data_type FP16\n \n object_detection_demo_ssd_async.exe -i cam -m ssd_mobilenet_v2_coco\\ssd_mobilenet_v2_coco_2018_03_29\\frozen_inference_graph.xml -no_show -d MYRIAD\n </denchmark-code>\n \n Regards,\n Jesus\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "MengNan-Li", "commentT": "2020-07-21T02:45:40Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/jgespino>@jgespino</denchmark-link>\n \n This is weird. I use the latest demo code as same as yours, which will still take up a lot of CPU.\n <denchmark-code>openvino_ws/releases/2020.4/openvino/deployment_tools/inference_engine/demos/build/intel64/Release$ ./object_detection_demo_ssd_async -i cam -d MYRIAD -m ~/openvino_ws/openvino_models/ir/public/ssd_mobilenet_v2_coco/FP16/ssd_mobilenet_v2_coco.xml -no_show\n InferenceEngine: 0x7fe6f385e030\n [ INFO ] Parsing input parameters\n [ INFO ] Reading input\n [ INFO ] Loading Inference Engine\n [ INFO ] Device info: \n \tMYRIAD\n \tmyriadPlugin version ......... 2.1\n \tBuild ........... 2020.4.0-359-21e092122f4-releases/2020/4\n [ INFO ] Loading network files\n [ INFO ] Batch size is forced to  1.\n [ INFO ] Checking that the inputs are as the demo expects\n [ INFO ] Checking that the outputs are as the demo expects\n [ INFO ] Loading model to the device\n [ INFO ] Start inference \n To close the application, press 'CTRL+C' here or switch to the output window and press ESC key\n To switch between sync/async modes, press TAB key in the output window\n \n </denchmark-code>\n \n <denchmark-link:https://user-images.githubusercontent.com/27143147/88006426-2c4ee400-cb3e-11ea-8c6f-b8781a72efbb.png></denchmark-link>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "MengNan-Li", "commentT": "2020-07-21T05:58:31Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/MengNan-Li>@MengNan-Li</denchmark-link>\n \n I ran my test again on an Ubuntu system and I too see around 60% CPU utilization. Same model and demo shows around 6% CPU utilization on windows.  I will open a bug for the development team to take a look.\n Regards,\n Jesus\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "MengNan-Li", "commentT": "2020-07-28T12:09:49Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jgespino>@jgespino</denchmark-link>\n   Im seeing the same behaviour in raspbian compiling from source, using myriad device cpu usage in one core goes very high, can you tell me wich branch do not suffer this behaviour?\n Thank you\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "MengNan-Li", "commentT": "2020-07-28T12:36:56Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/natxopedreira>@natxopedreira</denchmark-link>\n \n Thanks for providing this information. As I mentioned above this may be a bug with the MYRIAD plugin. I have escalated to the development team to further investigate.\n Regards,\n Jesus\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "MengNan-Li", "commentT": "2020-07-28T12:40:36Z", "comment_text": "\n \t\tOk <denchmark-link:https://github.com/jgespino>@jgespino</denchmark-link>\n , i will try to compile backwards versions to see if one works.\n Note that i was only asking wich branch works ok, so i do not spend hours compiling\n Thank you\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "MengNan-Li", "commentT": "2020-07-29T18:16:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/natxopedreira>@natxopedreira</denchmark-link>\n  I am currently building 2020.4 branch to test, if the issue is preset there I will open another bug with the dev team. If I recall correctly, the error is due to some changes in the IR files, 2019 R3.1 should not have this issue.\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "MengNan-Li", "commentT": "2020-07-29T18:30:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jgespino>@jgespino</denchmark-link>\n  thank you, let us know the results please. And if you are able to reproduce please ask with your team, i know about 2019R3 but i can not use it because is not compatible with my model, i need to be able to use a IR10 model.\n If helps is working on a arm64 board(jetson nano) compiling master branch... few days ago <denchmark-link:https://github.com/openvinotoolkit/openvino.git>https://github.com/openvinotoolkit/openvino.git</denchmark-link>\n  but i need it on rpi.\n But in raspbian armv7 is allways showing one core 100% cpu usage\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "MengNan-Li", "commentT": "2020-07-30T18:29:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/natxopedreira>@natxopedreira</denchmark-link>\n  Just to add to this thread, I was able to reproduce with the pre-built OpenVINO 2020.4 for Raspbian OS and opened a bug with the dev team.\n Ref. 35438\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "MengNan-Li", "commentT": "2020-07-30T18:56:01Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jgespino>@jgespino</denchmark-link>\n  thanks for let me know.\n \t\t"}, "comments_15": {"comment_id": 16, "comment_author": "MengNan-Li", "commentT": "2020-08-03T09:08:48Z", "comment_text": "\n \t\tIf someone has this problem, at least on x64 linux, compiling 2020.2 release works ok i do not test on rpi\n \t\t"}, "comments_16": {"comment_id": 17, "comment_author": "MengNan-Li", "commentT": "2020-08-06T11:50:17Z", "comment_text": "\n \t\tok, just tested that workarround in rpi and it doesnt work it trows a reshape error.\n \t\t"}, "comments_17": {"comment_id": 18, "comment_author": "MengNan-Li", "commentT": "2020-08-06T13:13:14Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jgespino>@jgespino</denchmark-link>\n  can you comment if this is going to be fixed in the repo or have to wait for a new release, please? we have to start production a device and if not available we will be forced to move to another arquitecture\n \t\t"}, "comments_18": {"comment_id": 19, "comment_author": "MengNan-Li", "commentT": "2020-08-06T13:46:40Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/natxopedreira>@natxopedreira</denchmark-link>\n  I am still waiting to hear back from the development team.\n \t\t"}, "comments_19": {"comment_id": 20, "comment_author": "MengNan-Li", "commentT": "2020-08-06T15:41:26Z", "comment_text": "\n \t\tok, thank you.\n \t\t"}, "comments_20": {"comment_id": 21, "comment_author": "MengNan-Li", "commentT": "2020-09-01T15:13:50Z", "comment_text": "\n \t\tHi! Please try this fix: <denchmark-link:https://github.com/openvinotoolkit/openvino/pull/2030>#2030</denchmark-link>\n \n \t\t"}, "comments_21": {"comment_id": 22, "comment_author": "MengNan-Li", "commentT": "2020-09-03T13:54:05Z", "comment_text": "\n \t\tThank you <denchmark-link:https://github.com/dkurt>@dkurt</denchmark-link>\n  !!\n \t\t"}}}, "commit": {"commit_id": "37a7bbc08cdb1bbd75ad9c3be0ce8370a2ed5ce9", "commit_author": "Dmitry Kurtaev", "commitT": "2020-09-03 16:49:48+03:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "inference-engine\\thirdparty\\movidius\\mvnc\\src\\watchdog\\watchdog.cpp", "file_new_name": "inference-engine\\thirdparty\\movidius\\mvnc\\src\\watchdog\\watchdog.cpp", "file_complexity": {"file_NLOC": "329", "file_CCN": "69", "file_NToken": "2182"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "114,115,117,118", "deleted_lines": "113", "method_info": {"method_name": "WatchdogImpl::WatchdogImpl", "method_params": "", "method_startline": "91", "method_endline": "122", "method_complexity": {"method_NLOC": "24", "method_CCN": "7", "method_NToken": "180", "method_nesting_level": "1"}}}}}}}}