{"BR": {"BR_id": "1841", "BR_author": "Y4rd13", "BRopenT": "2020-09-01T21:43:04Z", "BRcloseT": "2020-09-02T14:56:04Z", "BR_text": {"BRsummary": "AttributeError: 'DistilBertConfig' object has no attribute 'return_dict'", "BRdescription": "\n <denchmark-h:h2>Environment info</denchmark-h>\n \n \n Google Colab\n \n \n transformers version: 3.1.0\n Platform: Linux-4.19.112+-x86_64-with-Ubuntu-18.04-bionic\n Python version: 3.6.9\n PyTorch version (GPU?): 1.6.0+cu101 (False)\n Tensorflow version (GPU?): 2.3.0 (False)\n Using GPU in script?: \n Using distributed or parallel set-up in script?: \n \n <denchmark-h:h2>Information</denchmark-h>\n \n Model I am using (Bert, XLNet ...):\n The problem arises when using:\n \n  the official example scripts: (give details below)\n  my own modified scripts: (give details below)\n \n import flair\n flair_sent = flair.models.TextClassifier.load('en-sentiment')\n \n def flair_lstm(text):\n     sentence = flair.data.Sentence(text)\n     flair_sent.predict(sentences=sentence)\n     total_sent = sentence.labels\n     for label in total_sent:\n         value = label.value\n         score = label.score\n         return '1' if value == 'POSITIVE' else '-1'\n The tasks I am working on is:\n \n I'm working with flair to get classification polarities, but the issue seems refer to transformers\n \n <denchmark-h:h2>To reproduce</denchmark-h>\n \n Steps to reproduce the behavior:\n \n write\n \n def flair_lstm(text):\n     sentence = flair.data.Sentence(text)\n     flair_sent.predict(sentences=sentence)\n     total_sent = sentence.labels\n     for label in total_sent:\n         value = label.value\n         score = label.score\n         return '1' if value == 'POSITIVE' else '-1'\n \n df_test = \"some test dataframe\"\n df_test['flair'] = df_test['word'].apply(lambda x: flair_lstm(x))\n \n See error:\n \n <denchmark-h:h2>Traceback:</denchmark-h>\n \n ---------------------------------------------------------------------------\n AttributeError                            Traceback (most recent call last)\n <ipython-input-26-1ee39d7138b3> in <module>()\n ----> 1 df_test['flair'] = df_test['word'].apply(lambda x: flair_lstm(x))\n \n 10 frames\n pandas/_libs/lib.pyx in pandas._libs.lib.map_infer()\n \n /usr/local/lib/python3.6/dist-packages/transformers/configuration_utils.py in use_return_dict(self)\n     217         \"\"\"\n     218         # If torchscript is set, force `return_dict=False` to avoid jit errors\n --> 219         return self.return_dict and not self.torchscript\n     220 \n     221     @property\n \n AttributeError: 'DistilBertConfig' object has no attribute 'return_dict'\n <denchmark-h:h2>Expected output:</denchmark-h>\n \n \n prediction of each word of the dataframe using the flair_lstm function\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Y4rd13", "commentT": "2020-09-02T00:37:18Z", "comment_text": "\n \t\tAnswer from transformers repository: <denchmark-link:https://github.com/huggingface/transformers/issues/6891>huggingface/transformers#6891</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Y4rd13", "commentT": "2020-09-02T05:50:33Z", "comment_text": "\n \t\tIt looks like the update to transformers 3.1.0 added new variables that are missing in our serialized models that we trained using 3.0. Just adding return_dict to the serialized model config does not seem to be enough, since there are new attributes like chunk_size_feed_forward that are now part of each FFN in the transformer.\n A first workaround to fix the classifier is to do this:\n # load the sentiment tagger and get the serialized (\"old\") embeddings\n classifier = TextClassifier.load(\"sentiment\")\n serialized_embeddings = classifier.document_embeddings\n \n # load a new version of distilbert transformer embeddings with the correct config\n new_embeddings = TransformerDocumentEmbeddings(\"distilbert-base-uncased\")\n \n # transfer weights from serialized embedding to new embedding\n new_embeddings.model.load_state_dict(serialized_embeddings.model.state_dict())\n \n # set updated embedding on classifier\n classifier.document_embeddings = new_embeddings\n I'll take a closer look to see if there is a better fix.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Y4rd13", "commentT": "2020-09-02T22:32:45Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/alanakbik>@alanakbik</denchmark-link>\n  how this will change to the current classifier?\n import flair\n from flair.data import Sentence\n from flair.models import TextClassifier\n \n classifier = TextClassifier.load('sentiment')\n sentence = Sentence(text)\n \n classifier.predict(sentences=sentence)\n result = sentence.labels\n for label in result:\n     value = label.value\n     score = label.score\n A: I just needed to update\n !pip install --upgrade git+https://github.com/flairNLP/flair.git\n \t\t"}}}, "commit": {"commit_id": "0a6e8161d99a1ef0962f885ff9a860ebfa79b975", "commit_author": "alanakbik", "commitT": "2020-09-02 08:46:58+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "flair\\models\\text_classification_model.py", "file_new_name": "flair\\models\\text_classification_model.py", "file_complexity": {"file_NLOC": "349", "file_CCN": "34", "file_NToken": "2443"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "470,473", "deleted_lines": "470,473", "method_info": {"method_name": "_fetch_model", "method_params": "model_name", "method_startline": "459", "method_endline": "488", "method_complexity": {"method_NLOC": "22", "method_CCN": "2", "method_NToken": "127", "method_nesting_level": "1"}}}}}}}}