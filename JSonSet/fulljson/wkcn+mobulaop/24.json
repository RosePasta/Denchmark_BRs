{"BR": {"BR_id": "24", "BR_author": "YutingZhang", "BRopenT": "2018-12-28T06:16:57Z", "BRcloseT": "2018-12-29T14:18:55Z", "BR_text": {"BRsummary": "Not working with MXNet nightly build (1.5.0b20181222)", "BRdescription": "\n With MXNet 1.5 nightly build (1.5.0b20181222), import mobula gives segmentation fault.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "YutingZhang", "commentT": "2018-12-28T07:35:22Z", "comment_text": "\n \t\tThanks for your report.\n In my test,\n <denchmark-code>OS: Arch Linux\n Python: 2.7.15 & 3.7.1\n mxnet==1.5.0b20181222 (only cpu)\n MobulaOP (master, a58c062)\n \n OS: Ubuntu 16.04\n Python: 3.5.2\n mxnet-cu90==1.5.0b20181222\n MobulaOP (master, a58c062)\n </denchmark-code>\n \n Script:\n import mobula\n It works fine.\n Could you please provide the following information?\n \n Operating System\n Python Version\n Error message, including stack trace\n \n Thank you!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "YutingZhang", "commentT": "2018-12-28T23:48:41Z", "comment_text": "\n \t\tThank you for your reply.\n EC2 machine: p3.xlarge\n OS: Ubuntu 16.04\n CUDA: 9.0\n Python: 3.6.6 (anaconda mxnet_p36 from AWS deep learning AMI)\n MXNet: installed by pip install -U mxnet-cu90mkl --pre (so now it is mxnet-cu90mkl-1.5.0b20181228)\n Error message:\n <denchmark-code>[15:47:50] $ python3 -c 'import mobula'\n \n Segmentation fault: 11\n \n Stack trace returned 10 entries:\n [bt] (0) /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x3ebbea) [0x7f20fb0ecbea]\n [bt] (1) /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x34740b6) [0x7f20fe1750b6]\n [bt] (2) /lib/x86_64-linux-gnu/libc.so.6(+0x354b0) [0x7f213dd524b0]\n [bt] (3) /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/torch/_C.cpython-36m-x86_64-linux-gnu.so(+0x420308) [0x7f206b1c1308]\n [bt] (4) /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/torch/_C.cpython-36m-x86_64-linux-gnu.so(+0x422520) [0x7f206b1c3520]\n [bt] (5) /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/torch/_C.cpython-36m-x86_64-linux-gnu.so(+0xbbfcb2) [0x7f206b960cb2]\n [bt] (6) /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/torch/_C.cpython-36m-x86_64-linux-gnu.so(torch::onnx::initONNXBindings(_object*)+0x4f) [0x7f206b95aeff]\n [bt] (7) /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/torch/_C.cpython-36m-x86_64-linux-gnu.so(PyInit__C+0x15a) [0x7f206b11f60a]\n [bt] (8) python3(_PyImport_LoadDynamicModuleWithSpec+0x185) [0x55c473b50b85]\n [bt] (9) python3(+0x215d85) [0x55c473b50d85]\n </denchmark-code>\n \n By the way, it is working with mxnet-cu90mkl-1.3.1\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "YutingZhang", "commentT": "2018-12-29T01:26:01Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/YutingZhang>@YutingZhang</denchmark-link>\n  Thanks.\n MobulaOP will import MXNet and PyTorch simultaneously if MXNet and PyTorch exist.\n It seems that there is a conflict when importing MXNet and PyTorch.\n The following script may trigger segmentation fault too.\n import mxnet\n import torch\n or\n import torch\n import mxnet\n I will fix the bug of MobulaOP to avoid importing MXNet and PyTorch simultaneously.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "YutingZhang", "commentT": "2018-12-29T02:34:11Z", "comment_text": "\n \t\tI create a new branch <denchmark-link:https://github.com/wkcn/MobulaOP/tree/patch_for_24>patch_for_24</denchmark-link>\n  to fix the bug.\n It may work. Thanks.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "YutingZhang", "commentT": "2018-12-29T04:15:06Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wkcn>@wkcn</denchmark-link>\n  Thank you so much! The patch is working.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "YutingZhang", "commentT": "2018-12-29T14:18:55Z", "comment_text": "\n \t\tFixed the bug in PR <denchmark-link:https://github.com/wkcn/MobulaOP/pull/26>#26</denchmark-link>\n  :)\n \t\t"}}}, "commit": {"commit_id": "c93b6ad4720ef031f053e21e68f501832191aa1b", "commit_author": "JackieWu", "commitT": "2018-12-29 22:17:48+08:00", "commit_complexity": {"commit_NLOC": "0.9130434782608695", "commit_CCN": "0.9130434782608695", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "mobula\\glue\\backend.py", "file_new_name": "mobula\\glue\\backend.py", "file_complexity": {"file_NLOC": "80", "file_CCN": "25", "file_NToken": "497"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "17,18,33,34,35,39", "deleted_lines": "31,35", "method_info": {"method_name": "_register_backend_real", "method_params": "glue_name,types_name", "method_startline": "17", "method_endline": "39", "method_complexity": {"method_NLOC": "22", "method_CCN": "7", "method_NToken": "124", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "61,62,63,64,65,66,67,68,69,70,71", "deleted_lines": null, "method_info": {"method_name": "get_var_type_backend", "method_params": "v_type", "method_startline": "61", "method_endline": "71", "method_complexity": {"method_NLOC": "10", "method_CCN": "3", "method_NToken": "65", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "75", "deleted_lines": null, "method_info": {"method_name": "get_var_backend", "method_params": "v", "method_startline": "74", "method_endline": "75", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "13", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "42,43,44,45,46,47,48,49,50,51,52", "deleted_lines": "42,44,45,46,50", "method_info": {"method_name": "register_backend", "method_params": "glue_name,types_name", "method_startline": "42", "method_endline": "52", "method_complexity": {"method_NLOC": "11", "method_CCN": "3", "method_NToken": "57", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "mobula\\glue\\common.py", "file_new_name": "mobula\\glue\\common.py", "file_complexity": {"file_NLOC": "132", "file_CCN": "26", "file_NToken": "961"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "99", "deleted_lines": "99", "method_info": {"method_name": "__getitem__", "method_params": "self,input_type", "method_startline": "98", "method_endline": "108", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "34", "method_nesting_level": "1"}}}}}}}}