{"BR": {"BR_id": "919", "BR_author": "miguelgfierro", "BRopenT": "2019-09-09T10:54:26Z", "BRcloseT": "2019-09-17T21:00:02Z", "BR_text": {"BRsummary": "[BUG] error with tqmd and pandas", "BRdescription": "\n <denchmark-h:h3>Description</denchmark-h>\n \n <denchmark-code>============================= test session starts ==============================\n platform linux -- Python 3.6.8, pytest-5.0.1, py-1.8.0, pluggy-0.12.0\n rootdir: /data/home/recocat/cicd/28/s\n collected 29 items / 12 deselected / 17 selected\n \n tests/integration/test_criteo.py .                                       [  5%]\n tests/integration/test_movielens.py .........                            [ 58%]\n tests/integration/test_notebooks_python.py ......F                       [100%]\n \n =================================== FAILURES ===================================\n __________________________ test_wikidata_integration ___________________________\n \n notebooks = {'als_deep_dive': '/data/home/recocat/cicd/28/s/notebooks/02_model/als_deep_dive.ipynb', 'als_pyspark': '/data/home/re...aseline_deep_dive.ipynb', 'data_split': '/data/home/recocat/cicd/28/s/notebooks/01_prepare_data/data_split.ipynb', ...}\n tmp = '/tmp/pytest-of-recocat/pytest-1697/tmpruv_um4p'\n \n     @pytest.mark.integration\n     def test_wikidata_integration(notebooks, tmp):\n         notebook_path = notebooks[\"wikidata_KG\"]\n         MOVIELENS_SAMPLE_SIZE = 5\n         pm.execute_notebook(notebook_path, OUTPUT_NOTEBOOK, kernel_name=KERNEL_NAME,\n                             parameters=dict(MOVIELENS_DATA_SIZE='100k',\n                                             MOVIELENS_SAMPLE=True,\n >                                           MOVIELENS_SAMPLE_SIZE=MOVIELENS_SAMPLE_SIZE))\n \n tests/integration/test_notebooks_python.py:173: \n _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n /anaconda/envs/nightly_reco_base/lib/python3.6/site-packages/papermill/execute.py:94: in execute_notebook\n     raise_for_execution_errors(nb, output_path)\n _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n \n nb = {'cells': [{'cell_type': 'code', 'metadata': {'inputHidden': True, 'hide_input': True}, 'execution_count': None, 'sour...nd_time': '2019-09-07T23:48:50.115802', 'duration': 14.995972, 'exception': True}}, 'nbformat': 4, 'nbformat_minor': 2}\n output_path = 'output.ipynb'\n \n     def raise_for_execution_errors(nb, output_path):\n         \"\"\"Assigned parameters into the appropriate place in the input notebook\n     \n         Parameters\n         ----------\n         nb : NotebookNode\n            Executable notebook object\n         output_path : str\n            Path to write executed notebook\n         \"\"\"\n         error = None\n         for cell in nb.cells:\n             if cell.get(\"outputs\") is None:\n                 continue\n     \n             for output in cell.outputs:\n                 if output.output_type == \"error\":\n                     error = PapermillExecutionError(\n                         exec_count=cell.execution_count,\n                         source=cell.source,\n                         ename=output.ename,\n                         evalue=output.evalue,\n                         traceback=output.traceback,\n                     )\n                     break\n     \n         if error:\n             # Write notebook back out with the Error Message at the top of the Notebook.\n             error_msg = ERROR_MESSAGE_TEMPLATE % str(error.exec_count)\n             error_msg_cell = nbformat.v4.new_code_cell(\n                 source=\"%%html\\n\" + error_msg,\n                 outputs=[\n                     nbformat.v4.new_output(output_type=\"display_data\", data={\"text/html\": error_msg})\n                 ],\n                 metadata={\"inputHidden\": True, \"hide_input\": True},\n             )\n             nb.cells = [error_msg_cell] + nb.cells\n             write_ipynb(nb, output_path)\n >           raise error\n E           papermill.exceptions.PapermillExecutionError: \n E           ---------------------------------------------------------------------------\n E           Exception encountered at \"In [19]\":\n E           ---------------------------------------------------------------------------\n E           ImportError                               Traceback (most recent call last)\n E           /anaconda/envs/nightly_reco_base/lib/python3.6/site-packages/tqdm/_tqdm.py in pandas(tclass, *targs, **tkwargs)\n E               612             # pandas>=0.23.0\n E           --> 613             from pandas.core.groupby.groupby import DataFrameGroupBy, \\\n E               614                 SeriesGroupBy, GroupBy, PanelGroupBy\n E           \n E           ImportError: cannot import name 'DataFrameGroupBy'\n E           \n E           During handling of the above exception, another exception occurred:\n E           \n E           ImportError                               Traceback (most recent call last)\n E           <ipython-input-19-6ccb9974139b> in <module>\n E           ----> 1 tqdm().pandas(desc=\"Number of movies completed\")\n E                 2 result = pd.concat(list(movies.progress_apply(lambda x: wikidata_KG_from_movielens(x), axis=1)))\n E           \n E           /anaconda/envs/nightly_reco_base/lib/python3.6/site-packages/tqdm/_tqdm.py in pandas(tclass, *targs, **tkwargs)\n E               614                 SeriesGroupBy, GroupBy, PanelGroupBy\n E               615         except ImportError:\n E           --> 616             from pandas.core.groupby import DataFrameGroupBy, \\\n E               617                 SeriesGroupBy, GroupBy, PanelGroupBy\n E               618 \n E           \n E           ImportError: cannot import name 'PanelGroupBy'\n </denchmark-code>\n \n <denchmark-h:h3>In which platform does it happen?</denchmark-h>\n \n <denchmark-h:h3>How do we replicate the issue?</denchmark-h>\n \n <denchmark-h:h3>Expected behavior (i.e. solution)</denchmark-h>\n \n <denchmark-h:h3>Other Comments</denchmark-h>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "7a0f836c22c77bf34ac2e722dae77f1cc7be10d3", "commit_author": "miguelgfierro", "commitT": "2019-09-16 16:57:54+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "notebooks\\01_prepare_data\\wikidata_knowledge_graph.ipynb", "file_new_name": "notebooks\\01_prepare_data\\wikidata_knowledge_graph.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "39,40,41,42,47", "deleted_lines": "43,44,45,46,47,48,49,50"}}}}}}