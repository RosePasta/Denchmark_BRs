{"BR": {"BR_id": "17176", "BR_author": "LihangLiu", "BRopenT": "2019-04-30T02:43:14Z", "BRcloseT": "2019-04-30T11:50:04Z", "BR_text": {"BRsummary": "fetch_var \u4eceGPU\u62f7\u8d1dparameter\u5230CPU\u7684np.array\uff0c\u5185\u5b58\u6cc4\u6f0f", "BRdescription": "\n fetch_var \u4eceGPU\u62f7\u8d1dparameter\u5230CPU\u7684np.array\uff0c\u5185\u5b58\u6cc4\u6f0f\u3002\n \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n <denchmark-code>import paddle\n import paddle.fluid as fluid\n from paddle.fluid import layers\n import numpy as np\n \n def fetch_var(program, scope):\n     for param in program.global_block().all_parameters():\n         var = scope.find_var(param.name)\n         t = var.get_tensor()\n         array = np.array(t)             # TODO: This line will cause memory leak\n \n def net():\n     x = layers.data(name='x', shape=[-1, 1000], dtype='float32')\n     h = layers.fc(x, size=1000)\n     y = layers.reduce_mean(h)\n     return y\n \n def train():\n     place = fluid.CUDAPlace(0)\n \n     scope = fluid.Scope()\n     program = fluid.Program()\n     start_up = fluid.Program()\n     with fluid.scope_guard(scope):\n         with fluid.program_guard(program, start_up):\n             with fluid.unique_name.guard():\n                 out = net()\n         exe = fluid.Executor(place)\n         exe.run(start_up)\n \n     print('start showing memory leak')\n     while True:\n         fetch_var(program, scope)\n                                 \n if __name__ == \"__main__\":\n     train()\n </denchmark-code>\n \n How to run:\n <denchmark-code>CUDA_VISIBLE_DEVICES=0 python fetch_var.py\n </denchmark-code>\n \n \u7cfb\u7edf\u4fe1\u606f\uff1a\n \n centos\n fluid 1.3\n CUDA9 CUDNN7\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "LihangLiu", "commentT": "2019-04-30T03:10:57Z", "comment_text": "\n \t\t\u76ee\u524d\u5b9a\u4f4d\u95ee\u9898\u53ef\u80fd\u4e0epybind\u673a\u5236\u6709\u5173\uff0c\u8fdb\u4e00\u6b65\u4fee\u590d\u4e2d\u3002\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "LihangLiu", "commentT": "2019-04-30T03:12:23Z", "comment_text": "\n \t\t\u8fd9\u4e48\u5e38\u7528\u7684\u64cd\u4f5c\u5c45\u7136\u4f1a\u6709\u5185\u5b58\u6cc4\u6f0f\uff0c\u5e0c\u671b\u8d76\u7d27\u4fee\u590d\uff1a\uff09\n \t\t"}}}, "commit": {"commit_id": "5dfe2ab9e883a9d2ea1f227730a26dc3d1a42cd2", "commit_author": "Zeng Jinle", "commitT": "2019-04-30 06:50:03-05:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "paddle\\fluid\\pybind\\CMakeLists.txt", "file_new_name": "paddle\\fluid\\pybind\\CMakeLists.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "29"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "paddle\\fluid\\pybind\\pybind.cc", "file_new_name": "paddle\\fluid\\pybind\\pybind.cc", "file_complexity": {"file_NLOC": "1258", "file_CCN": "23", "file_NToken": "8782"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "305,421", "deleted_lines": "305,306,422,423", "method_info": {"method_name": "paddle::pybind::PYBIND11_MODULE", "method_params": "core,m", "method_startline": "144", "method_endline": "1427", "method_complexity": {"method_NLOC": "1164", "method_CCN": "14", "method_NToken": "8497", "method_nesting_level": "2"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "paddle\\fluid\\pybind\\tensor_py.h", "file_new_name": "paddle\\fluid\\pybind\\tensor_py.h", "file_complexity": {"file_NLOC": "422", "file_CCN": "76", "file_NToken": "3787"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512", "deleted_lines": null, "method_info": {"method_name": "paddle::pybind::TensorToPyArray", "method_params": "tensor", "method_startline": "473", "method_endline": "512", "method_complexity": {"method_NLOC": "30", "method_CCN": "5", "method_NToken": "296", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "42,43,44,45", "method_info": {"method_name": "paddle::pybind::details::CastToPyBufferImpl<false,I,ARGS...>::operator ( )", "method_params": "tensor", "method_startline": "42", "method_endline": "45", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "4"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469", "deleted_lines": null, "method_info": {"method_name": "paddle::pybind::details::TensorDTypeToPyDTypeStr", "method_params": "type", "method_startline": "453", "method_endline": "469", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "3"}}}, "hunk_3": {"Ismethod": 1, "added_lines": null, "deleted_lines": "132,133,134,135,136,137", "method_info": {"method_name": "paddle::pybind::CastToPyBuffer", "method_params": "tensor", "method_startline": "132", "method_endline": "137", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "49", "method_nesting_level": "2"}}}, "hunk_4": {"Ismethod": 1, "added_lines": null, "deleted_lines": "51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127", "method_info": {"method_name": "paddle::pybind::details::CastToPyBufferImpl<true,I,ARGS...>::operator ( )", "method_params": "tensor", "method_startline": "51", "method_endline": "127", "method_complexity": {"method_NLOC": "65", "method_CCN": "10", "method_NToken": "689", "method_nesting_level": "4"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "434,435,436", "deleted_lines": null, "method_info": {"method_name": "paddle::pybind::details::IsValidDTypeToPyArray", "method_params": "", "method_startline": "434", "method_endline": "436", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "8", "method_nesting_level": "3"}}}}}, "file_3": {"file_change_type": "DELETE", "file_Nmethod": 0, "file_old_name": "paddle\\fluid\\pybind\\tensor_py_test.cc", "file_new_name": "None", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\paddle\\fluid\\dygraph\\layers.py", "file_new_name": "python\\paddle\\fluid\\dygraph\\layers.py", "file_complexity": {"file_NLOC": "219", "file_CCN": "67", "file_NToken": "1534"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "294,295,296,297,298,299", "deleted_lines": "294,295,296", "method_info": {"method_name": "_to_tuple", "method_params": "inputs", "method_startline": "289", "method_endline": "300", "method_complexity": {"method_NLOC": "12", "method_CCN": "5", "method_NToken": "84", "method_nesting_level": "1"}}}}}, "file_5": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "python\\paddle\\fluid\\tests\\unittests\\test_tensor_to_numpy.py", "file_complexity": {"file_NLOC": "29", "file_CCN": "5", "file_NToken": "222"}}}}}