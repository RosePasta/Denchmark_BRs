{"BR": {"BR_id": "644", "BR_author": "tangzhe0220", "BRopenT": "2020-06-29T10:09:12Z", "BRcloseT": "2020-06-29T15:07:49Z", "BR_text": {"BRsummary": "Jaccard (IOU) loss issue", "BRdescription": "\n Describe the bug\n I'm using dice loss and Jaccard (IOU) loss for segmentation tasks. However, I found the Jaccard(IOU) loss is lower than 0.0 , when I check the code at 'monai/losses/dice.py', class DiceLoss, line128-133, I found the function is implemented as follow:\n ground_o = torch.sum(target, dim=reduce_axis)\n pred_o = torch.sum(input, dim=reduce_axis)\n denominator = ground_o + pred_o\n if self.jaccard:\n denominator -= intersection\n f = 1.0 - (2.0 * intersection + smooth) / (denominator + smooth)\n this means, the Jaccard loss function is written by:\n jaccard loss function = 1.0 - 2.0 * A\u2229B/A\u222aB\n but the actual jaccard loss should be:\n jaccard loss function = 1.0 - A\u2229B/A\u222aB\n To Reproduce\n current code has no problem to run optimizer, the loss value reduced even the value is smaller than 0, but I think it is better to fix with standard Jaccard (IOU) function.\n Expected behavior\n I think the corrected code is :\n ground_o = torch.sum(target, dim=reduce_axis)\n pred_o = torch.sum(input, dim=reduce_axis)\n denominator = ground_o + pred_o\n if self.jaccard:\n denominator = 2.0 * (denominator - intersection)\n f = 1.0 - (2.0 * intersection + smooth) / (denominator + smooth)\n Screenshots\n None\n Environment (please complete the following information):\n \n OS: Centos7, windows10\n Python version, 3.7\n MONAI version #632\n CUDA/cuDNN version, cuda 10.2\n GPU models and configuration, None\n \n \t"}, "comments": {}}, "commit": {"commit_id": "24dd41107895d274a1f179a4d7940d61fc2315f8", "commit_author": "Wenqi Li", "commitT": "2020-06-29 16:07:48+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "monai\\losses\\dice.py", "file_new_name": "monai\\losses\\dice.py", "file_complexity": {"file_NLOC": "176", "file_CCN": "33", "file_NToken": "1159"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "131", "deleted_lines": "131", "method_info": {"method_name": "forward", "method_params": "self,Tensor,Tensor,float", "method_startline": "80", "method_endline": "144", "method_complexity": {"method_NLOC": "42", "method_CCN": "14", "method_NToken": "330", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_dice_loss.py", "file_new_name": "tests\\test_dice_loss.py", "file_complexity": {"file_NLOC": "129", "file_CCN": "4", "file_NToken": "1611"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "109", "deleted_lines": "109"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_masked_dice_loss.py", "file_new_name": "tests\\test_masked_dice_loss.py", "file_complexity": {"file_NLOC": "133", "file_CCN": "4", "file_NToken": "1767"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "113", "deleted_lines": "113"}}}}}}