{"BR": {"BR_id": "550", "BR_author": "wayneshawn", "BRopenT": "2019-09-12T13:26:35Z", "BRcloseT": "2019-09-14T07:18:22Z", "BR_text": {"BRsummary": "Be confused by the memory format NCHW and NHWC", "BRdescription": "\n <denchmark-link:https://github.com/intel/mkl-dnn/blob/b5f3e6e09e970d9766b73d8237619c55e93a88ee/examples/memory_format_propagation.cpp#L165>https://github.com/intel/mkl-dnn/blob/b5f3e6e09e970d9766b73d8237619c55e93a88ee/examples/memory_format_propagation.cpp#L165</denchmark-link>\n \n <denchmark-code>/// We assume that the 'user' source and destination memory format is\n     /// NHWC. Since there is no result validation in this tutorial, we do not\n     /// bother with filling the data with some values and let the Intel\n     /// DNNL library to allocate the memory.\n     ///\n     /// @snippet memory_format_propagation.cpp Create source and destination memory objects\n     // [Create source and destination memory objects]\n     auto src_mem = memory(\n             {{N, IC, H, W}, memory::data_type::f32, memory::format_tag::nchw},\n             eng);\n </denchmark-code>\n \n As the comment says, we assume source memory format is NHWC, but the statement seems to define src_mem as memory::format_tag::nchw, I'm confused.\n When I change src men to nchw, and use reorder to transform NCHW to NHWC, I got could not create a reorder primitive descriptor.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "wayneshawn", "commentT": "2019-09-12T14:54:35Z", "comment_text": "\n \t\tThe comment has a typo, the intended format is NCHW. We'll fix this. It is hard to say what's up with the reorder without looking at some code...\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "wayneshawn", "commentT": "2019-09-12T16:07:37Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/rsdubtso>@rsdubtso</denchmark-link>\n \n If I change the below code\n <denchmark-link:https://github.com/intel/mkl-dnn/blob/6f54e5b78925c16a19fc11b1453cdcbfc37951f0/examples/memory_format_propagation.cpp#L164-L166>https://github.com/intel/mkl-dnn/blob/6f54e5b78925c16a19fc11b1453cdcbfc37951f0/examples/memory_format_propagation.cpp#L164-L166</denchmark-link>\n \n to\n  auto src_mem = memory({{N, H, W, IC},\n     memory::data_type::f32, memory::format_tag::nhwc},\n     cpu_engine);\n I assume that\n  bool need_reorder_src = conv_pd.src_desc() != src_mem.get_desc(); will get true\n and\n if (need_reorder_src) {\n         auto reorder_src = reorder(src_mem, conv_src_mem);\n         reorder_src.execute(\n                 s, {{DNNL_ARG_FROM, src_mem}, {DNNL_ARG_TO, conv_src_mem}});\n         s.wait(); // wait for the reorder to complete\n     }\n will reorder src_mem (nhwc) to selected format of Conv_src_mem(e.g. nChw8c).\n But I get\n \n DNNL error: could not create a reorder primitive descriptor\n Error status: invalid_arguments\n \n So, what should I do, if my input data is nhwc? thanks\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "wayneshawn", "commentT": "2019-09-12T16:12:17Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wayneshawn>@wayneshawn</denchmark-link>\n ,\n Tensor dimensions always follow logical order that does not depend on the memory format. So you do not need to change {N, IC, H, W} to {N, H, W, IC}. Changing the format tag alone (and the way you populate buffer) is enough.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "wayneshawn", "commentT": "2019-09-14T07:18:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/vpirogov>@vpirogov</denchmark-link>\n  thanks a lot!\n \t\t"}}}, "commit": {"commit_id": "eef8a6b356b20e0390b6e797f9f3963e1a73929c", "commit_author": "Pirogov, Vadim", "commitT": "2019-09-12 13:11:49-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "examples\\memory_format_propagation.cpp", "file_new_name": "examples\\memory_format_propagation.cpp", "file_complexity": {"file_NLOC": "98", "file_CCN": "10", "file_NToken": "788"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "171,172,173", "deleted_lines": "171,172,173", "method_info": {"method_name": "memory_format_propagation_tutorial", "method_params": "engine_kind", "method_startline": "103", "method_endline": "308", "method_complexity": {"method_NLOC": "77", "method_CCN": "7", "method_NToken": "655", "method_nesting_level": "0"}}}}}}}}