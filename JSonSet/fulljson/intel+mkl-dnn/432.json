{"BR": {"BR_id": "432", "BR_author": "mabalenk", "BRopenT": "2019-03-21T14:50:19Z", "BRcloseT": "2019-04-13T03:45:49Z", "BR_text": {"BRsummary": "Compilation crashes on macOS 10.14.3 with GNU 8.3.0 due to errors in `strncpy`", "BRdescription": "\n Dear all,\n I'm attempting to compile MKL-DNN on a macOS platform using the GNU 8.3.0 compiler toolchain. Unfortunately, the compilation crashes due to the errors in strncpy() function, e.g.:\n In function 'int mkldnn::impl::getenv(const char*, char*, int)',\n inlined from 'int mkldnn::impl::getenv_int(const char*, int)' at /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:73:15:\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:57:20: error: 'char* strncpy(char*, const char*, size_t)' destination unchanged after copying no bytes [-Werror=stringop-truncation]\n strncpy(buffer, value, value_length);\n ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n <denchmark-h:h3>Environment</denchmark-h>\n \n \n CPU make and model Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz\n OS version Darwin galerkin.local 18.2.0 Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64 i386 MacBookPro11,4 Darwin\n Compiler version gcc (MacPorts gcc8 8.3.0_0) 8.3.0\n MKLROOT value /opt/intel/compilers_and_libraries_2018.2.164/mac/mkl\n CMake version cmake version 3.14.0\n git hash e35877d\n \n <denchmark-h:h3>Steps to reproduce</denchmark-h>\n \n CC=gcc CXX=g++ CMAKE_INSTALL_PREFIX=/opt/intel cmake -G \"Unix Makefiles\" ..\n make\n <denchmark-h:h3>Actual behavior</denchmark-h>\n \n The compilation crashes due to (a potentially) incorrect usage of strncpy function:\n [ 10%] Building CXX object src/CMakeFiles/mkldnn.dir/common/utils.cpp.o\n In function 'int mkldnn::impl::getenv(const char*, char*, int)',\n inlined from 'int mkldnn::impl::getenv_int(const char*, int)' at /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:73:15:\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:57:20: error: 'char* strncpy(char*, const char*, size_t)' destination unchanged after copying no bytes [-Werror=stringop-truncation]\n strncpy(buffer, value, value_length);\n ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:57:20: error: 'char* strncpy(char*, const char*, size_t)' output truncated before terminating nul copying as many bytes from a string as its length [-Werror=stringop-truncation]\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp: In function 'int mkldnn::impl::getenv_int(const char*, int)':\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:44:46: note: length computed here\n value_length = value == NULL ? 0 : strlen(value);\n ~~~~~~^~~~~~~\n In function 'int mkldnn::impl::getenv(const char*, char*, int)',\n inlined from 'int mkldnn::impl::getenv_int(const char*, int)' at /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:73:15,\n inlined from 'bool mkldnn::impl::jit_dump_enabled()' at /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:121:35:\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:57:20: error: 'char* strncpy(char*, const char*, size_t)' destination unchanged after copying no bytes [-Werror=stringop-truncation]\n strncpy(buffer, value, value_length);\n ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:57:20: error: 'char* strncpy(char*, const char*, size_t)' output truncated before terminating nul copying as many bytes from a string as its length [-Werror=stringop-truncation]\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp: In function 'bool mkldnn::impl::jit_dump_enabled()':\n /Users/mabalenk/repo/git/mkl-dnn/src/common/utils.cpp:44:46: note: length computed here\n value_length = value == NULL ? 0 : strlen(value);\n ~~~~~~^~~~~~~\n cc1plus: all warnings being treated as errors\n make[2]: *** [src/CMakeFiles/mkldnn.dir/build.make:427: src/CMakeFiles/mkldnn.dir/common/utils.cpp.o] Error 1\n make[1]: *** [CMakeFiles/Makefile2:123: src/CMakeFiles/mkldnn.dir/all] Error 2\n make: *** [Makefile:141: all] Error 2\n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n Flawless compilation.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mabalenk", "commentT": "2019-03-27T00:57:31Z", "comment_text": "\n \t\tShould not actually be a bug because the string is zero-terminated at a later point. I will fix this as soon as I get a hold of 8.3.0 to test this with.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "mabalenk", "commentT": "2019-04-02T03:57:11Z", "comment_text": "\n \t\tReproduced.\n \t\t"}}}, "commit": {"commit_id": "983e097a93a47ad3ffa0815c9c9b6eb7c610b732", "commit_author": "Roman Dubtsov", "commitT": "2019-04-08 09:23:39-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\common\\utils.cpp", "file_new_name": "src\\common\\utils.cpp", "file_complexity": {"file_NLOC": "82", "file_CCN": "27", "file_NToken": "481"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "57,58", "deleted_lines": "57", "method_info": {"method_name": "mkldnn::impl::getenv", "method_params": "name,buffer,buffer_size", "method_startline": "32", "method_endline": "66", "method_complexity": {"method_NLOC": "26", "method_CCN": "11", "method_NToken": "165", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\common\\utils.hpp", "file_new_name": "src\\common\\utils.hpp", "file_complexity": {"file_NLOC": "238", "file_CCN": "63", "file_NToken": "2161"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "331,332", "deleted_lines": "331"}}}}}}