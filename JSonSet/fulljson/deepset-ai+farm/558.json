{"BR": {"BR_id": "558", "BR_author": "EhsanM4t1qbit", "BRopenT": "2020-09-24T21:52:24Z", "BRcloseT": "2020-11-03T10:38:49Z", "BR_text": {"BRsummary": "QA Answers at the Beginning of the Document are Labeled as  (0, 0)", "BRdescription": "\n I suspect that there is a bug in the function  <denchmark-link:https://github.com/deepset-ai/FARM/blob/master/farm/data_handler/input_features.py#L577>https://github.com/deepset-ai/FARM/blob/master/farm/data_handler/input_features.py#L577</denchmark-link>\n .  The conditional statement should be changed to . In its current form, this causes an answer that starts from the beginning of the sentence (i.e. ) to be labeled as (0, 0). This might be related to <denchmark-link:https://github.com/deepset-ai/FARM/issues/552>#552</denchmark-link>\n  .\n <denchmark-code>processor = SquadProcessor(...)\n data_silo = DataSilo(processor=processor, batch_size=16, automatic_loading=False)\n basic_texts = {\"context\": \"endesa, s.a. financial statements for the year ended 31 december 2018 5 endesa, s.a. \"\n                           \"and subsidiaries consolidated financial statements for the year ended 31 december 2018 207\",\n  \"qas\": [{\"question\": \"What is the company name?\", \"id\": \"0\",\n           \"answers\": [{\"text\": \"endesa\", \"answer_start\": 0},\n                       ], \"is_impossible\": False}]}\n \n data_silo._load_data(train_dicts=[basic_texts])\n </denchmark-code>\n \n <denchmark-code>print(data_silo.data['train'].datasets[0].tensors[6]) # labels\n tensor([[[ 0,  0],\n          [-1, -1],\n          [-1, -1],\n          [-1, -1],\n          [-1, -1],\n          [-1, -1]]])\n \n print(data_silo.data['train'].datasets[0].tensors[-1]) # seq_2_start_t\n tensor([8])\n </denchmark-code>\n \n After changing the conditional statement to passage_len > start_idx >= 0:\n <denchmark-code>print(data_silo.data['train'].datasets[0].tensors[6]) # labels\n tensor([[[ 8, 10],\n          [-1, -1],\n          [-1, -1],\n          [-1, -1],\n          [-1, -1],\n          [-1, -1]]])\n print(data_silo.data['train'].datasets[0].tensors[-1]) # seq_2_start_t\n tensor([8])\n </denchmark-code>\n \n \n FARM version: 0.4.8\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "EhsanM4t1qbit", "commentT": "2020-10-05T15:19:55Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/EhsanM4t1qbit>@EhsanM4t1qbit</denchmark-link>\n  thanks for pointing this out! The new PR <denchmark-link:https://github.com/deepset-ai/FARM/pull/564>#564</denchmark-link>\n  implements the fix that you suggested. Can you confirm that this fixes your issue?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "EhsanM4t1qbit", "commentT": "2020-10-05T16:00:28Z", "comment_text": "\n \t\tYes it does, thanks!\n Do you think it makes sense to allow passage_len to be equal to  end_idx too? (i.e. passage_len >= end_idx > 0)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "EhsanM4t1qbit", "commentT": "2020-11-03T10:38:49Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/EhsanM4t1qbit>@EhsanM4t1qbit</denchmark-link>\n  Sorry I missed that last message!\n If end_idx = passage_len, it is pointing to a token that is outside of the passage so I think its best we keep > instead of >=.\n But thanks for raising this issue in the first place! It has helped us greatly in debugging various issues that have come up.\n \t\t"}}}, "commit": {"commit_id": "9055094e339285bb47b06a49cfb4589c735dc7b4", "commit_author": "Branden Chan", "commitT": "2020-10-16 09:45:16+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "farm\\data_handler\\input_features.py", "file_new_name": "farm\\data_handler\\input_features.py", "file_complexity": {"file_NLOC": "365", "file_CCN": "30", "file_NToken": "2526"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "577", "deleted_lines": "577", "method_info": {"method_name": "answer_in_passage", "method_params": "start_idx,end_idx,passage_len", "method_startline": "576", "method_endline": "579", "method_complexity": {"method_NLOC": "4", "method_CCN": "3", "method_NToken": "26", "method_nesting_level": "0"}}}}}}}}