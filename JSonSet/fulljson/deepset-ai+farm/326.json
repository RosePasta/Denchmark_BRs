{"BR": {"BR_id": "326", "BR_author": "renaud", "BRopenT": "2020-04-16T19:18:44Z", "BRcloseT": "2020-04-20T19:47:19Z", "BR_text": {"BRsummary": "model.inference_from_dicts does not return an item if no named entity is found in text", "BRdescription": "\n Describe the bug\n When calling model.inference_from_dicts,  does not return an item if no named entity is found in text\n To Reproduce\n model = Inferencer.load(save_dir) # Connl EN NER\n basic_texts = [\n {\"text\": \"I love you.\"},\n {\"text\": \"I love Anna.\"}, # only this sentence has a NE, Anna\n {\"text\": \"I love you so much!\"},\n ]\n result = model.inference_from_dicts(dicts=basic_texts)\n actual output\n [{'task': 'ner', 'predictions': [{'start': 7, 'end': 12, 'context': 'Anna.', 'label': 'PER', 'probability': 0.9851147}]}]\n expected output\n [{'task': 'ner', 'predictions': [{}, {'start': 7, 'end': 12, 'context': 'Anna.', 'label': 'PER', 'probability': 0.9851147}, {}]}]\n (note the two empty dicts for the sentences where no NE was found.\n Why it's important\n Otherwise it's tricky to map it back to the original text...\n Thanks!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "renaud", "commentT": "2020-04-17T10:18:56Z", "comment_text": "\n \t\tHey, I totally agree that we need a better grouped output from the NER inferencer. I opened a pull request that now makes the Inferencer return one list per input_text that contains all the predictions for that input_text. The output looks like this:\n [{'task': 'ner', 'predictions': [[], [{'start': 7, 'end': 11, 'context': 'Anna', 'label': 'PER', 'probability': 0.9971745}], []]}]\n Can you give this a go and let me know if it's working for you?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "renaud", "commentT": "2020-04-17T12:36:21Z", "comment_text": "\n \t\tThanks <denchmark-link:https://github.com/brandenchan>@brandenchan</denchmark-link>\n  , exactly!\n (I guess you noticed, but your branch merge did not work. I was about to fix the text myself, but you beat me to it in #bc738b5 )\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "renaud", "commentT": "2020-04-20T10:35:27Z", "comment_text": "\n \t\tThe tests have been fixed and the branch is now merged. You can now try out these changes in master!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "renaud", "commentT": "2020-04-20T19:47:19Z", "comment_text": "\n \t\tthanks a lot <denchmark-link:https://github.com/brandenchan>@brandenchan</denchmark-link>\n  !\n \t\t"}}}, "commit": {"commit_id": "bfce4407d0c11f765fd39ec7dfe2d1c4bba3bb88", "commit_author": "Branden Chan", "commitT": "2020-04-20 12:33:12+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "farm\\modeling\\prediction_head.py", "file_new_name": "farm\\modeling\\prediction_head.py", "file_complexity": {"file_NLOC": "893", "file_CCN": "213", "file_NToken": "6714"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "689", "deleted_lines": "689", "method_info": {"method_name": "formatted_preds", "method_params": "self,logits,initial_mask,samples,return_class_probs,kwargs", "method_startline": "645", "method_endline": "690", "method_complexity": {"method_NLOC": "40", "method_CCN": "7", "method_NToken": "300", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\test_ner_amp.py", "file_new_name": "test\\test_ner_amp.py", "file_complexity": {"file_NLOC": "82", "file_CCN": "2", "file_NToken": "484"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "94,95", "deleted_lines": "94,95", "method_info": {"method_name": "test_ner_amp", "method_params": "caplog", "method_startline": "18", "method_endline": "95", "method_complexity": {"method_NLOC": "67", "method_CCN": "2", "method_NToken": "387", "method_nesting_level": "0"}}}}}}}}