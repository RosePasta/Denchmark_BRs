{"BR": {"BR_id": "366", "BR_author": "ftesser", "BRopenT": "2020-05-13T14:47:19Z", "BRcloseT": "2020-06-11T09:40:26Z", "BR_text": {"BRsummary": "pip install on Windows", "BRdescription": "\n Describe the bug\n Installing FARM on Windows by pip install does not work because pip install torch does not work on Windows.\n Error message\n pip install farm\n Collecting farm\n   Using cached farm-0.4.3.tar.gz (153 kB)\n Requirement already satisfied: setuptools in c:\\programs\\python\\python37\\lib\\site-packages (from farm) (46.2.0)\n Requirement already satisfied: wheel in c:\\programs\\python\\python37\\lib\\site-packages (from farm) (0.34.2)\n ERROR: Could not find a version that satisfies the requirement torch==1.4.0 (from farm) (from versions: 0.1.2, 0.1.2.post1, 0.1.2.post2)\n ERROR: No matching distribution found for torch==1.4.0 (from farm)\n Expected behavior\n Install torch package also on Windows.\n Additional context\n I know that this is not really a bug of FARM, but I have some suggestions to allow the dependency installation works also on Windows.\n The suggestion cames from this discussion:\n <denchmark-link:https://discuss.pytorch.org/t/how-to-add-pytorch-as-a-requirement-for-a-windows-python-package/67353/5>https://discuss.pytorch.org/t/how-to-add-pytorch-as-a-requirement-for-a-windows-python-package/67353/5</denchmark-link>\n \n Adding some windows specific code on setup.py can allow the auto-installalation of the dependecies when setup.py is used.\n Moreover I like to have both solutions working:\n \n auto install dependencies with setup.py\n pip install -r requirements.txt\n \n For this second option my proposal is that setup.py can produce (just in teh windows case) a modifed version of requirements.txt adding -f <denchmark-link:https://download.pytorch.org/whl/cpu/torch_stable.html>https://download.pytorch.org/whl/cpu/torch_stable.html</denchmark-link>\n  on the torch line.\n I agree with the author that I am not happy to do this (the best should be that torch fix that, I do not undertsand why torch for Windows can not be availabe on pypi.org) but at least this give the possibility of automatize installations on different OS in some way.\n If you agree on this solution I can prepare a merge request.\n To Reproduce\n pip install farm\n System:\n \n OS: Windows\n GPU/CPU: CPU\n FARM version:\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ftesser", "commentT": "2020-05-25T10:50:49Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/ftesser>@ftesser</denchmark-link>\n  sorry for the late reply.\n I think having a clean solution inside FARM would be great. I think the most important point is that installation on other systems do not break. If you already have changes please create a WIP merge request so we can get this functionality into farm.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ftesser", "commentT": "2020-06-01T17:32:27Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/Timoeller>@Timoeller</denchmark-link>\n , sorry for the late reply as well. I have just submitted a PR.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ftesser", "commentT": "2020-06-11T09:40:25Z", "comment_text": "\n \t\tFixed by <denchmark-link:https://github.com/deepset-ai/FARM/pull/393>#393</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "13a235777b7c407c2e22067b775c2c7236f5c9bd", "commit_author": "ftesser", "commitT": "2020-06-11 11:39:27+02:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "requirements.txt", "file_new_name": "requirements.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "5", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "setup.py", "file_new_name": "setup.py", "file_complexity": {"file_NLOC": "48", "file_CCN": "7", "file_NToken": "282"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41", "deleted_lines": null, "method_info": {"method_name": "get_dependency_links", "method_params": "filename", "method_startline": "25", "method_endline": "41", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "66", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22", "deleted_lines": "6,7,8,9,10,11,12", "method_info": {"method_name": "parse_requirements", "method_params": "filename", "method_startline": "6", "method_endline": "22", "method_complexity": {"method_NLOC": "7", "method_CCN": "4", "method_NToken": "67", "method_nesting_level": "0"}}}}}}}}