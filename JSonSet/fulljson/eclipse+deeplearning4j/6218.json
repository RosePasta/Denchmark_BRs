{"BR": {"BR_id": "6218", "BR_author": "xiptos", "BRopenT": "2018-08-20T15:19:04Z", "BRcloseT": "2018-08-21T10:30:03Z", "BR_text": {"BRsummary": "Invalid configuration of layer", "BRdescription": "\n Sorry if this is not relevant, but I'm getting the following exception when importing a keras model.\n <denchmark-code>[main] INFO org.nd4j.linalg.factory.Nd4jBackend - Loaded [CpuBackend] backend\n [main] INFO org.nd4j.nativeblas.NativeOpsHolder - Number of threads used for NativeOps: 2\n [main] INFO org.nd4j.nativeblas.Nd4jBlas - Number of threads used for BLAS: 2\n [main] INFO org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner - Backend used: [CPU]; OS: [Mac OS X]\n [main] INFO org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner - Cores: [4]; Memory: [1.8GB];\n [main] INFO org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner - Blas vendor: [MKL]\n [main] WARN org.deeplearning4j.nn.modelimport.keras.KerasModel - If enforceTrainingConfig is true, a training configuration object has to be provided. Usually the only practical way to do this is to store your keras model with `model.save('model_path.h5'. If you store model config and weights separately no training configuration is attached.\n Exception in thread \"main\" org.deeplearning4j.exception.DL4JInvalidConfigException: Invalid configuration for layer (idx=-1, name=conv1, type=ConvolutionLayer) for height dimension:  Invalid input configuration for kernel height. Require 0 < kH <= inHeight + 2*padH; got (kH=3, inHeight=0, padH=0)\n Input type = InputTypeConvolutional(h=0,w=0,c=3), kernel = [3, 3], strides = [1, 1], padding = [0, 0], layer size (output channels) = 10, convolution mode = Truncate\n \tat org.deeplearning4j.nn.conf.layers.InputTypeUtil.getOutputTypeCnnLayers(InputTypeUtil.java:342)\n \tat org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getOutputType(ConvolutionLayer.java:181)\n \tat org.deeplearning4j.nn.modelimport.keras.layers.convolutional.KerasConvolution2D.getOutputType(KerasConvolution2D.java:150)\n \tat org.deeplearning4j.nn.modelimport.keras.KerasModel.inferOutputTypes(KerasModel.java:306)\n \tat org.deeplearning4j.nn.modelimport.keras.KerasModel.<init>(KerasModel.java:181)\n \tat org.deeplearning4j.nn.modelimport.keras.KerasModel.<init>(KerasModel.java:98)\n \tat org.deeplearning4j.nn.modelimport.keras.utils.KerasModelBuilder.buildModel(KerasModelBuilder.java:305)\n \tat org.deeplearning4j.nn.modelimport.keras.KerasModelImport.importKerasModelAndWeights(KerasModelImport.java:234)\n \tat pt.ipb.face.Mtcnn2Dl4j.main(Mtcnn2Dl4j.java:16)\n </denchmark-code>\n \n I'm using macOS High Sierra and java version \"1.8.0_151\"\n Java(TM) SE Runtime Environment (build 1.8.0_151-b12)\n Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)\n The model and source code is in attach.\n Thanks!\n <denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/2302923/Mtcnn2Dl4j.java.zip>Mtcnn2Dl4j.java.zip</denchmark-link>\n \n <denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/2302924/model.zip>model.zip</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "xiptos", "commentT": "2018-08-20T16:08:39Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/xiptos>@xiptos</denchmark-link>\n  I closed your other one, let me have a look at this tomorrow\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "xiptos", "commentT": "2018-08-21T10:31:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/xiptos>@xiptos</denchmark-link>\n  the magic sauce here is to provide input shape like this:\n <denchmark-code>    @Test\n     public void importMTCNN2D() throws Exception {\n         ComputationGraph model = importFunctionalModelH5Test(\"modelimport/keras/examples/12net.h5\",\n                 new int[] {24, 24, 3}, false);\n         INDArray input = Nd4j.create(10, 3, 24, 24);\n         model.output(input);\n     }\n </denchmark-code>\n \n If you don't, DL4J can't infer input shapes and shape validation for e.g. conv2d layers fails (in your case the net thinks height and width are 0). Whenever you see this error this is likely the solution\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "xiptos", "commentT": "2018-09-21T09:20:57Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "dd2ef4d94401dac8755dcf35247c0c3659408339", "commit_author": "Max Pumperla", "commitT": "2018-08-21 12:29:58+02:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.8571428571428571"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "deeplearning4j\\deeplearning4j-modelimport\\src\\test\\java\\org\\deeplearning4j\\nn\\modelimport\\keras\\e2e\\KerasModelEndToEndTest.java", "file_new_name": "deeplearning4j\\deeplearning4j-modelimport\\src\\test\\java\\org\\deeplearning4j\\nn\\modelimport\\keras\\e2e\\KerasModelEndToEndTest.java", "file_complexity": {"file_NLOC": "606", "file_CCN": "106", "file_NToken": "4803"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "579,580", "deleted_lines": null, "method_info": {"method_name": "KerasModelEndToEndTest::importFunctionalModelH5Test", "method_params": "modelPath,inputShape,train", "method_startline": "579", "method_endline": "593", "method_complexity": {"method_NLOC": "15", "method_CCN": "2", "method_NToken": "122", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "567,568,569,570,571,572", "deleted_lines": "570", "method_info": {"method_name": "KerasModelEndToEndTest::importMTCNN2D", "method_params": "", "method_startline": "567", "method_endline": "572", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "52", "method_nesting_level": "1"}}}}}}}}