{"BR": {"BR_id": "5710", "BR_author": "TheKingDiamond", "BRopenT": "2018-06-26T10:52:43Z", "BRcloseT": "2018-07-31T12:05:10Z", "BR_text": {"BRsummary": "NullPointerException when serializing Word2Vec model", "BRdescription": "\n (EDIT: I am using version 0.9.1 of DL4J, but have checked and this issue persists in 1.0.0-beta.)\n If a Word2Vec model has useUnknown set to true and the vocabulary has been limited (to a size smaller than the number of unique words in the text corpus), then the writeWordVectors(WeightLookupTable lookupTable, OutputStream stream) method of WordVectorSerializer throws a NullPointerException when it attempts to execute the last iteration of the for loop (specifically at line 418).\n The UNK string will not generally have an index value contiguous with the words that have been included in the vocabulary - and thus in the idxMap. The index values are used as the keys in the idxMap and this is where the issue occurs. The following example should help to illustrate the issue:\n If we have a vocabulary of restricted to a size of 2 (from an original size much larger than this) and are using UNK, then we may have something like the following in the idxMap (simplified):\n Element [0]: Key = 0, Value = \"the\"\n Element [1]: Key = 1, Value = \"an\"\n Element [2]: Key = 11356, Value = \"UNK\"\n The call to vocabCache.elementAtIndex(x) will execute successfully for the first two words. However, the for loop is configured to run a final time to get the UNK value. The issue is that  now x = 2, but the key for UNK is actually 11356. Thus, a NullPointerException is thrown as no element exists in the idxMap with a key of '2'.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "TheKingDiamond", "commentT": "2018-06-27T01:00:37Z", "comment_text": "\n \t\tCan you show source code please, that reproduces this problem?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "TheKingDiamond", "commentT": "2018-06-27T07:57:48Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/raver119>@raver119</denchmark-link>\n  Sure thing, the following should cause the error provided you use a sensible text file as the corpus (i.e. at least a few unique words, such that UNK will be used when the vocab is limited):\n <denchmark-code>String modelOutputPath = **some path**;\n String corpusPath = **some path containing a text file**;\n \n SentenceIterator iter = new BasicLineIterator(corpusPath);\n TokenizerFactory t = new DefaultTokenizerFactory();\n t.setTokenPreProcessor(new CommonPreprocessor());\n         \n Word2Vec vec = new Word2Vec.Builder()\n         .minWordFrequency(1)\n         .epochs(1)\n         .layerSize(300)\n         .limitVocabularySize(1) // Limit the vocab size to 2 words\n         .windowSize(5)\n         .allowParallelTokenization(true)\n         .batchSize(512)\n         .learningRate(0.025)\n         .minLearningRate(0.0001)\n         .negativeSample(0.0)\n         .sampling(0.0)\n         .useAdaGrad(false)\n         .useHierarchicSoftmax(true)\n         .iterations(1)\n         .useUnknown(true) // Using UNK with limited vocab size causes the issue\n         .seed(42)\n         .iterate(iter)\n         .workers(4)\n         .tokenizerFactory(t).build();\n         \n System.out.println(\"Starting to train the model...\");\n vec.fit();\n System.out.println(\"Model trained!\");\n         \n System.out.println(\"Writing model to file...\");\n WordVectorSerializer.writeWord2VecModel(vec, new File(modelOutputPath)); // NullPointerException thrown here\n System.out.println(\"Model written to file successfully!\");\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "TheKingDiamond", "commentT": "2018-07-31T12:05:10Z", "comment_text": "\n \t\tFixed. THanks for highlighting this problem\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "TheKingDiamond", "commentT": "2018-09-12T10:13:03Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/raver119>@raver119</denchmark-link>\n  , I'm taking a look at the changes in 1.0.0-beta2.\n It seems that the case is now that all the indices for the words in the object returned from iterator.nextSequence() (VocabConstructor, line 246) are -1. These indices are carried through the rest of the program, which leads to a totally new issue in that limiting the vocabulary size is no longer possible (as the removal of words works by removing elements with indices greater than the specified limit). Please let me know if I should create a new issue for this defect, or if we can use this one instead!\n Many thanks!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "TheKingDiamond", "commentT": "2018-09-12T19:55:18Z", "comment_text": "\n \t\tYes please, file an issue. It was quite a while ago, but i think -1 means \"element not found in vocabulary\".\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "TheKingDiamond", "commentT": "2018-09-12T19:55:44Z", "comment_text": "\n \t\tAre you sure there's no delta between vocab and actual data fed into training pipeline?\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "TheKingDiamond", "commentT": "2018-10-12T20:33:16Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "TheKingDiamond", "commentT": "2018-11-17T15:06:13Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "195c57c92b2d2da24375ea47e86ba76628128d9a", "commit_author": "raver119", "commitT": "2018-07-16 14:14:21-07:00", "commit_complexity": {"commit_NLOC": "0.15", "commit_CCN": "0.4166666666666667", "commit_Nprams": "0.9083333333333333"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\embeddings\\loader\\WordVectorSerializer.java", "file_new_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\embeddings\\loader\\WordVectorSerializer.java", "file_complexity": {"file_NLOC": "1666", "file_CCN": "293", "file_NToken": "14971"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "342,346,351,352,355,357,358,359", "deleted_lines": "345,349,354,357,359,360", "method_info": {"method_name": "WordVectorSerializer::writeWordVectors", "method_params": "lookupTable,stream", "method_startline": "340", "method_endline": "368", "method_complexity": {"method_NLOC": "23", "method_CCN": "4", "method_NToken": "229", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\sequencevectors\\SequenceVectors.java", "file_new_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\sequencevectors\\SequenceVectors.java", "file_complexity": {"file_NLOC": "748", "file_CCN": "179", "file_NToken": "5767"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "196,237,244,248,284,286,289,294,295,297", "deleted_lines": "235,242,246,275,276,284,286,289,294,295,297,298", "method_info": {"method_name": "SequenceVectors<T::fit", "method_params": "", "method_startline": "195", "method_endline": "339", "method_complexity": {"method_NLOC": "106", "method_CCN": "45", "method_NToken": "950", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "113,116", "deleted_lines": "112", "method_info": {"method_name": "SequenceVectors<T::buildVocab", "method_params": "", "method_startline": "110", "method_endline": "163", "method_complexity": {"method_NLOC": "24", "method_CCN": "7", "method_NToken": "209", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\word2vec\\Word2Vec.java", "file_new_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\word2vec\\Word2Vec.java", "file_complexity": {"file_NLOC": "332", "file_CCN": "56", "file_NToken": "2104"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "585,586,587,633,634", "deleted_lines": null, "method_info": {"method_name": "Word2Vec::Builder::build", "method_params": "", "method_startline": "537", "method_endline": "636", "method_complexity": {"method_NLOC": "81", "method_CCN": "8", "method_NToken": "697", "method_nesting_level": "2"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\word2vec\\wordstore\\VocabConstructor.java", "file_new_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\main\\java\\org\\deeplearning4j\\models\\word2vec\\wordstore\\VocabConstructor.java", "file_complexity": {"file_NLOC": "374", "file_CCN": "79", "file_NToken": "2848"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "330,331,332,334,335,336,337,340,341,342,343,344", "deleted_lines": "328,329,330,331,332,334,335,336,337,338,340,341", "method_info": {"method_name": "VocabConstructor<T::buildJointVocabulary", "method_params": "resetCounters,buildHuffmanTree", "method_startline": "169", "method_endline": "358", "method_complexity": {"method_NLOC": "125", "method_CCN": "25", "method_NToken": "1056", "method_nesting_level": "1"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\test\\java\\org\\deeplearning4j\\models\\word2vec\\Word2VecTestsSmall.java", "file_new_name": "deeplearning4j\\deeplearning4j-nlp-parent\\deeplearning4j-nlp\\src\\test\\java\\org\\deeplearning4j\\models\\word2vec\\Word2VecTestsSmall.java", "file_complexity": {"file_NLOC": "74", "file_CCN": "5", "file_NToken": "513"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85", "deleted_lines": null, "method_info": {"method_name": "Word2VecTestsSmall::testUnkSerialization_1", "method_params": "", "method_startline": "52", "method_endline": "86", "method_complexity": {"method_NLOC": "30", "method_CCN": "1", "method_NToken": "197", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "49", "deleted_lines": null, "method_info": {"method_name": "Word2VecTestsSmall::testWordsNearest2NNeighbours", "method_params": "", "method_startline": "42", "method_endline": "49", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "50", "method_nesting_level": "1"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "libnd4j\\blas\\cpu\\NativeOps.cpp", "file_new_name": "libnd4j\\blas\\cpu\\NativeOps.cpp", "file_complexity": {"file_NLOC": "2564", "file_CCN": "422", "file_NToken": "18717"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2627,2628,2642", "deleted_lines": "2640", "method_info": {"method_name": "NativeOps::execAggregateBatchFloat", "method_params": "extraPointers,numAggregates,opNum,maxArgs,maxShapes,maxIntArrays,maxIntArraySize,maxIdx,maxReals,ptrToArguments", "method_startline": "2616", "method_endline": "2670", "method_complexity": {"method_NLOC": "43", "method_CCN": "3", "method_NToken": "242", "method_nesting_level": "0"}}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "libnd4j\\include\\helpers\\shape.h", "file_new_name": "libnd4j\\include\\helpers\\shape.h", "file_complexity": {"file_NLOC": "2073", "file_CCN": "476", "file_NToken": "17087"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484", "deleted_lines": null, "method_info": {"method_name": "shape::printArray", "method_params": "arr,length,message", "method_startline": "3469", "method_endline": "3484", "method_complexity": {"method_NLOC": "12", "method_CCN": "4", "method_NToken": "87", "method_nesting_level": "1"}}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "libnd4j\\include\\ops\\aggregate_ops.h", "file_new_name": "libnd4j\\include\\ops\\aggregate_ops.h", "file_complexity": {"file_NLOC": "637", "file_CCN": "142", "file_NToken": "5563"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "273", "deleted_lines": "261", "method_info": {"method_name": "aggregateOps::NegativeSampling::executeAggregate", "method_params": "arguments,numArguments,shapeArguments,numShapeArguments,indexArguments,numIndexArguments,intArrays,numIntArrays,realArguments,numRealArguments", "method_startline": "257", "method_endline": "306", "method_complexity": {"method_NLOC": "36", "method_CCN": "9", "method_NToken": "338", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "125,126,127,128,131,132,133,134,135,136,137,139,149,156,157,158", "deleted_lines": "123,124,125,129,139,146", "method_info": {"method_name": "aggregateOps::HierarchicSoftmax::executeAggregate", "method_params": "arguments,numArguments,shapeArguments,numShapeArguments,indexArguments,numIndexArguments,intArrays,numIntArrays,realArguments,numRealArguments", "method_startline": "114", "method_endline": "173", "method_complexity": {"method_NLOC": "34", "method_CCN": "9", "method_NToken": "336", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "490,516,517,518,525,527,555,556", "deleted_lines": "478,504,511,513,514", "method_info": {"method_name": "aggregateOps::SkipGram::executeAggregate", "method_params": "arguments,numArguments,shapeArguments,numShapeArguments,indexArguments,numIndexArguments,intArrays,numIntArrays,realArguments,numRealArguments", "method_startline": "478", "method_endline": "570", "method_complexity": {"method_NLOC": "63", "method_CCN": "13", "method_NToken": "588", "method_nesting_level": "2"}}}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "libnd4j\\tests_cpu\\layers_tests\\JavaInteropTests.cpp", "file_new_name": "libnd4j\\tests_cpu\\layers_tests\\JavaInteropTests.cpp", "file_complexity": {"file_NLOC": "510", "file_CCN": "38", "file_NToken": "19448"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "750", "deleted_lines": null, "method_info": {"method_name": "TEST_F", "method_params": "JavaInteropTests,Test_Results_Conversion_1", "method_startline": "700", "method_endline": "750", "method_complexity": {"method_NLOC": "23", "method_CCN": "4", "method_NToken": "214", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846", "deleted_lines": null, "method_info": {"method_name": "TEST_F", "method_params": "JavaInteropTests,Test_NLP_Aggregations_1", "method_startline": "752", "method_endline": "847", "method_complexity": {"method_NLOC": "71", "method_CCN": "9", "method_NToken": "1053", "method_nesting_level": "0"}}}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "nd4j\\nd4j-backends\\nd4j-backend-impls\\nd4j-native\\src\\main\\java\\org\\nd4j\\linalg\\cpu\\nativecpu\\ops\\NativeOpExecutioner.java", "file_new_name": "nd4j\\nd4j-backends\\nd4j-backend-impls\\nd4j-native\\src\\main\\java\\org\\nd4j\\linalg\\cpu\\nativecpu\\ops\\NativeOpExecutioner.java", "file_complexity": {"file_NLOC": "1513", "file_CCN": "364", "file_NToken": "18230"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1015", "deleted_lines": "1014", "method_info": {"method_name": "NativeOpExecutioner::getPointer", "method_params": "batch", "method_startline": "1010", "method_endline": "1021", "method_complexity": {"method_NLOC": "10", "method_CCN": "3", "method_NToken": "110", "method_nesting_level": "1"}}}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "nd4j\\nd4j-backends\\nd4j-tests\\src\\test\\java\\org\\nd4j\\imports\\OnnxImportTest.java", "file_new_name": "nd4j\\nd4j-backends\\nd4j-tests\\src\\test\\java\\org\\nd4j\\imports\\OnnxImportTest.java", "file_complexity": {"file_NLOC": "36", "file_CCN": "5", "file_NToken": "260"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "26,27,28", "deleted_lines": null, "method_info": {"method_name": "OnnxImportTest::ordering", "method_params": "", "method_startline": "26", "method_endline": "28", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "8", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "20,21,22", "deleted_lines": null, "method_info": {"method_name": "OnnxImportTest::OnnxImportTest", "method_params": "backend", "method_startline": "20", "method_endline": "22", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "12", "method_nesting_level": "1"}}}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "nd4j\\nd4j-backends\\nd4j-tests\\src\\test\\java\\org\\nd4j\\linalg\\Nd4jTestsC.java", "file_new_name": "nd4j\\nd4j-backends\\nd4j-tests\\src\\test\\java\\org\\nd4j\\linalg\\Nd4jTestsC.java", "file_complexity": {"file_NLOC": "4911", "file_CCN": "618", "file_NToken": "63292"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "6507", "deleted_lines": "6507", "method_info": {"method_name": "Nd4jTestsC::Nd4jTestsC::testTensorDot.testTranspose_Custom", "method_params": "", "method_startline": "6495", "method_endline": "6509", "method_complexity": {"method_NLOC": "11", "method_CCN": "1", "method_NToken": "89", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "6507", "deleted_lines": "6507", "method_info": {"method_name": "Nd4jTestsC::testTensorDot", "method_params": "", "method_startline": "2207", "method_endline": "6757", "method_complexity": {"method_NLOC": "505", "method_CCN": "1", "method_NToken": "1264", "method_nesting_level": "1"}}}}}}}}