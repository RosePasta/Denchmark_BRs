{"BR": {"BR_id": "2005", "BR_author": "RizhaoCai", "BRopenT": "2020-02-06T12:28:41Z", "BRcloseT": "2020-02-07T05:58:24Z", "BR_text": {"BRsummary": "Encounter type error when running pruning examples", "BRdescription": "\n Traceback\n \n Traceback (most recent call last):\n File \"main_torch_pruner.py\", line 97, in \n main()\n File \"main_torch_pruner.py\", line 90, in main\n train(model, device, train_loader, optimizer)\n File \"main_torch_pruner.py\", line 31, in train\n output = model(data)\n File \"/home/rizhao/anaconda3/envs/distiller/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 541, in call\n result = self.forward(*input, **kwargs)\n File \"main_torch_pruner.py\", line 16, in forward\n x = F.relu(self.conv1(x))\n File \"/home/rizhao/anaconda3/envs/distiller/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 541, in call\n result = self.forward(*input, **kwargs)\n File \"/home/rizhao/anaconda3/envs/distiller/lib/python3.6/site-packages/nni/compression/torch/compressor.py\", line 197, in new_forward\n mask = self.calc_mask(layer, config)\n File \"/home/rizhao/anaconda3/envs/distiller/lib/python3.6/site-packages/nni/compression/torch/pruners.py\", line 116, in calc_mask\n w_abs = weight.abs() * mask\n TypeError: mul(): argument 'other' (position 1) must be Tensor, not dict\n \n Hey NNI developers,\n I would like to utilize NNI for pruning. However, when I just installed NNI and ran the demo example from here: <denchmark-link:https://github.com/microsoft/nni/blob/master/examples/model_compress/main_torch_pruner.py>https://github.com/microsoft/nni/blob/master/examples/model_compress/main_torch_pruner.py</denchmark-link>\n \n I came with this error.\n How to reproduce it:\n python main_torch_pruner.py\n nni Environment:\n \n nni version: 1.3\n nni mode(local|pai|remote): local\n OS: Ubuntu 16.04\n python version: 3.6\n is conda or virtualenv used?: Yes\n is running in docker?: Yes. Nvidia-docker\n PyTorch: 1.3\n CUDA: 10.1\n \n Any idea to solve it? If there is something wrong with the demo, there should be bugs in the code.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "RizhaoCai", "commentT": "2020-02-06T13:01:29Z", "comment_text": "\n \t\tI tracked back to the source code and set a tracepoint at nni/compression/torch/pruners.py\", line 116.\n Then, I found that  is a dict, which only has a key 'weight' and  is the mask_dict, of which the type a torch.Tensor and the size is the same as the weight parameter.\n <denchmark-link:https://user-images.githubusercontent.com/37952703/73938900-35971c00-4923-11ea-9589-be8973b4c4b9.png></denchmark-link>\n \n After that, I modified the code at nni/compression/torch/pruners.py\", line 116\n from\n  w_abs = weight.abs() * mask\n to\n  w_abs = weight.abs() * mask['weight'].\n And the program runs successfully.\n However, I am not sure if this solution would result in other side effects since I am not familiar with NNI.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "RizhaoCai", "commentT": "2020-02-06T13:47:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Cjkkkk>@Cjkkkk</denchmark-link>\n  - if <denchmark-link:https://github.com/RizhaoCai>@RizhaoCai</denchmark-link>\n  's fix works, shall we encourage him/her submit a PR directly =)?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "RizhaoCai", "commentT": "2020-02-06T14:10:33Z", "comment_text": "\n \t\tThanks for bringing up this issue. Your fix makes sense and you can submit a PR directly.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "RizhaoCai", "commentT": "2020-02-07T02:44:53Z", "comment_text": "\n \t\t\n I tracked back to the source code and set a tracepoint at nni/compression/torch/pruners.py\", line 116.\n Then, I found that mask is a dict, which only has a key 'weight' and mask['weight'] is the mask_dict, of which the type a torch.Tensor and the size is the same as the weight parameter.\n \n After that, I modified the code at nni/compression/torch/pruners.py\", line 116\n from\n  w_abs = weight.abs() * mask\n to\n  w_abs = weight.abs() * mask['weight'].\n And the program runs successfully.\n However, I am not sure if this solution would result in other side effects since I am not familiar with NNI.\n \n <denchmark-link:https://github.com/RizhaoCai>@RizhaoCai</denchmark-link>\n  - could you please submit a PR for this fix? thanks.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "RizhaoCai", "commentT": "2020-02-07T04:28:34Z", "comment_text": "\n \t\t\n \n I tracked back to the source code and set a tracepoint at nni/compression/torch/pruners.py\", line 116.\n Then, I found that mask is a dict, which only has a key 'weight' and mask['weight'] is the mask_dict, of which the type a torch.Tensor and the size is the same as the weight parameter.\n \n After that, I modified the code at nni/compression/torch/pruners.py\", line 116\n from\n  w_abs = weight.abs() * mask\n to\n  w_abs = weight.abs() * mask['weight'].\n And the program runs successfully.\n However, I am not sure if this solution would result in other side effects since I am not familiar with NNI.\n \n @RizhaoCai - could you please submit a PR for this fix? thanks.\n \n OK. I will check if there will be any side effects and then submit a PR.\n \t\t"}}}, "commit": {"commit_id": "7425098787ae8dce175c3e78b30eddffdd7d4b28", "commit_author": "CAI, RIZHAO", "commitT": "2020-02-07 13:58:06+08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\sdk\\pynni\\nni\\compression\\torch\\pruners.py", "file_new_name": "src\\sdk\\pynni\\nni\\compression\\torch\\pruners.py", "file_complexity": {"file_NLOC": "212", "file_CCN": "46", "file_NToken": "1702"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "116", "deleted_lines": "116", "method_info": {"method_name": "calc_mask", "method_params": "self,layer,config", "method_startline": "89", "method_endline": "123", "method_complexity": {"method_NLOC": "20", "method_CCN": "7", "method_NToken": "252", "method_nesting_level": "1"}}}}}}}}