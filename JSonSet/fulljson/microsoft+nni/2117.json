{"BR": {"BR_id": "2117", "BR_author": "arvoelke", "BRopenT": "2020-03-03T23:25:26Z", "BRcloseT": "2020-03-06T13:37:07Z", "BR_text": {"BRsummary": "MedianstopAssessor silently crashes dispatcher when reporting multiple metrics", "BRdescription": "\n Short summary about the issue/question:\n When reporting multiple metrics, e.g.,\n <denchmark-code>nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value})\n </denchmark-code>\n \n the MedianstopAssessor errors which ends up silently crashing the dispatcher (which makes the WebUI unresponsive and stops the experiment from making any progress). See dispatcher.log:\n <denchmark-code>[03/03/2020, 05:34:16 PM] WARNING (medianstop_Assessor/Thread-2) incorrect data type or value:\n [03/03/2020, 05:34:16 PM] ERROR (medianstop_Assessor/Thread-2) float() argument must be a string or a number, not 'collections.OrderedDict'\n Traceback (most recent call last):\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/medianstop_assessor/medianstop_assessor.py\", line 95, in assess_trial\n     num_trial_history = [float(ele) for ele in trial_history]\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/medianstop_assessor/medianstop_assessor.py\", line 95, in <listcomp>\n     num_trial_history = [float(ele) for ele in trial_history]\n TypeError: float() argument must be a string or a number, not 'collections.OrderedDict'\n [03/03/2020, 05:34:16 PM] ERROR (nni.msg_dispatcher/Thread-2) Assessor error\n [03/03/2020, 05:34:16 PM] ERROR (nni.msg_dispatcher/Thread-2) local variable 'num_trial_history' referenced before assignment\n Traceback (most recent call last):\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py\", line 206, in _handle_intermediate_metric_data\n     result = self.assessor.assess_trial(trial_job_id, ordered_history)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/medianstop_assessor/medianstop_assessor.py\", line 103, in assess_trial\n     self._update_data(trial_job_id, num_trial_history)\n UnboundLocalError: local variable 'num_trial_history' referenced before assignment\n [03/03/2020, 05:34:16 PM] ERROR (nni.msg_dispatcher_base/Thread-2) local variable 'result' referenced before assignment\n Traceback (most recent call last):\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py\", line 90, in command_queue_worker\n     self.process_command(command, data)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py\", line 149, in process_command\n     command_handlers[command](data)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py\", line 139, in handle_report_metric_data\n     self._handle_intermediate_metric_data(data)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py\", line 211, in _handle_intermediate_metric_data\n     if isinstance(result, bool):\n UnboundLocalError: local variable 'result' referenced before assignment\n [03/03/2020, 05:34:17 PM] INFO (nni.msg_dispatcher_base/MainThread) Dispatcher exiting...\n [03/03/2020, 05:34:20 PM] INFO (nni.msg_dispatcher_base/MainThread) Terminated by NNI manager\n </denchmark-code>\n \n How to reproduce it:\n Call nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value}) while using the MedianstopAssessor.\n nni Environment:\n \n nni version: master\n nni mode(local|pai|remote): local\n OS: Ubuntu 18.04\n python version: Python 3.7.6\n is conda or virtualenv used?: conda\n is running in docker?: no\n \n Anything else we need to know:\n The root of the issue is on this line: \n \n \n nni/src/sdk/pynni/nni/medianstop_assessor/medianstop_assessor.py\n \n \n          Line 95\n       in\n       9987014\n \n \n \n \n \n \n  num_trial_history = [float(ele) for ele in trial_history] \n \n \n \n \n \n My work-around is to create a file called assessor.py that contains:\n from nni.medianstop_assessor import MedianstopAssessor\n \n \n class FixedMedianstopAssessor(MedianstopAssessor):\n \n     def assess_trial(self, trial_job_id, trial_history):\n         trial_history = [float(ele['default']) for ele in trial_history]\n         return super().assess_trial(trial_job_id, trial_history)\n and then change the assessor in the experimental config to:\n <denchmark-code>assessor:\n   codeDir: .\n   classFileName: assessor.py\n   className: FixedMedianstopAssessor\n   classArgs:\n     optimize_mode: ...\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "arvoelke", "commentT": "2020-03-04T01:03:24Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/arvoelke>@arvoelke</denchmark-link>\n  thanks for reporting this issue. It seems builit-in assessors have not supported  metric. We will fix this problem very soon.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "arvoelke", "commentT": "2020-03-04T23:52:34Z", "comment_text": "\n \t\tGreat, thanks. Also not sure if this is a different issue, but there appears to be some interaction with the tuner's includeIntermediateResults: true setting. My work-around is fine when it is false, but when true an early stop triggers the following in dispatcher.log:\n <denchmark-code>ERROR (nni.msg_dispatcher_base/Thread-1) The input was of non-string type \"<class 'collections.OrderedDict'>\" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode(\"utf-8\") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.\n Traceback (most recent call last):\n   File \"/home/arvoelke/anaconda3/envs/*i/lib/python3.7/site-packages/nni/msg_dispatcher_base.py\", line 90, in command_queue_worker\n     self.process_command(command, data)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py\", line 149, in process_command\n     command_handlers[command](data)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py\", line 134, in handle_report_metric_data\n     data['value'] = json_tricks.loads(data['value'])\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/json_tricks/nonp.py\", line 210, in loads\n     .format(type(string)))\n TypeError: The input was of non-string type \"<class 'collections.OrderedDict'>\" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode(\"utf-8\") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.\n </denchmark-code>\n \n I can't find the root of the error in the logs. However, it is triggered at the exact same time that nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value}) is called and an early stop occurs (according to trial logs). For now I'll revert to using includeIntermediateResults: false since I'd like to be able to monitor these additional intermediate metrics.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "arvoelke", "commentT": "2020-03-05T03:54:57Z", "comment_text": "\n \t\t\n Great, thanks. Also not sure if this is a different issue, but there appears to be some interaction with the tuner's includeIntermediateResults: true setting. My work-around is fine when it is false, but when true an early stop triggers the following in dispatcher.log:\n ERROR (nni.msg_dispatcher_base/Thread-1) The input was of non-string type \"<class 'collections.OrderedDict'>\" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode(\"utf-8\") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.\n Traceback (most recent call last):\n   File \"/home/arvoelke/anaconda3/envs/*i/lib/python3.7/site-packages/nni/msg_dispatcher_base.py\", line 90, in command_queue_worker\n     self.process_command(command, data)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py\", line 149, in process_command\n     command_handlers[command](data)\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py\", line 134, in handle_report_metric_data\n     data['value'] = json_tricks.loads(data['value'])\n   File \"/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/json_tricks/nonp.py\", line 210, in loads\n     .format(type(string)))\n TypeError: The input was of non-string type \"<class 'collections.OrderedDict'>\" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode(\"utf-8\") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.\n \n I can't find the root of the error in the logs. However, it is triggered at the exact same time that nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value}) is called and an early stop occurs (according to trial logs). For now I'll revert to using includeIntermediateResults: false since I'd like to be able to monitor these additional intermediate metrics.\n \n <denchmark-link:https://github.com/arvoelke>@arvoelke</denchmark-link>\n  thanks for reporting this issue. This is a bug and fixed in <denchmark-link:https://github.com/microsoft/nni/pull/2121>#2121</denchmark-link>\n  .\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "arvoelke", "commentT": "2020-03-06T13:37:07Z", "comment_text": "\n \t\tmerged, close\n \t\t"}}}, "commit": {"commit_id": "29e60c22948d79837a5156a594f7bd9d4ff5c1b9", "commit_author": "QuanluZhang", "commitT": "2020-03-06 15:06:17+08:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\sdk\\pynni\\nni\\curvefitting_assessor\\curvefitting_assessor.py", "file_new_name": "src\\sdk\\pynni\\nni\\curvefitting_assessor\\curvefitting_assessor.py", "file_complexity": {"file_NLOC": "87", "file_CCN": "18", "file_NToken": "458"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "95,96,99,111", "deleted_lines": "94,97,109", "method_info": {"method_name": "assess_trial", "method_params": "self,trial_job_id,trial_history", "method_startline": "75", "method_endline": "135", "method_complexity": {"method_NLOC": "36", "method_CCN": "11", "method_NToken": "223", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\sdk\\pynni\\nni\\medianstop_assessor\\medianstop_assessor.py", "file_new_name": "src\\sdk\\pynni\\nni\\medianstop_assessor\\medianstop_assessor.py", "file_complexity": {"file_NLOC": "68", "file_CCN": "18", "file_NToken": "399"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "95,96,98,100", "deleted_lines": "94,95,96,97,98,99,100,101,102,103,105,107", "method_info": {"method_name": "assess_trial", "method_params": "self,trial_job_id,trial_history", "method_startline": "71", "method_endline": "115", "method_complexity": {"method_NLOC": "24", "method_CCN": "9", "method_NToken": "167", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\sdk\\pynni\\nni\\msg_dispatcher.py", "file_new_name": "src\\sdk\\pynni\\nni\\msg_dispatcher.py", "file_complexity": {"file_NLOC": "169", "file_CCN": "53", "file_NToken": "1171"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "237", "deleted_lines": null, "method_info": {"method_name": "_earlystop_notify_tuner", "method_params": "self,data", "method_startline": "228", "method_endline": "238", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "59", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\sdk\\pynni\\nni\\utils.py", "file_new_name": "src\\sdk\\pynni\\nni\\utils.py", "file_complexity": {"file_NLOC": "65", "file_CCN": "16", "file_NToken": "324"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "65,66,67,68,69,70,71", "deleted_lines": null, "method_info": {"method_name": "extract_scalar_reward", "method_params": "value,scalar_key", "method_startline": "61", "method_endline": "85", "method_complexity": {"method_NLOC": "9", "method_CCN": "5", "method_NToken": "68", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "120,121,122", "deleted_lines": null, "method_info": {"method_name": "init_dispatcher_logger", "method_params": "", "method_startline": "119", "method_endline": "126", "method_complexity": {"method_NLOC": "5", "method_CCN": "2", "method_NToken": "38", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105", "deleted_lines": "93", "method_info": {"method_name": "extract_scalar_history", "method_params": "trial_history,scalar_key", "method_startline": "88", "method_endline": "105", "method_complexity": {"method_NLOC": "2", "method_CCN": "2", "method_NToken": "23", "method_nesting_level": "0"}}}}}}}}