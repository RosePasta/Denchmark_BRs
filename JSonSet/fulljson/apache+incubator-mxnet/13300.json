{"BR": {"BR_id": "13300", "BR_author": "wangxinanbook", "BRopenT": "2018-11-16T16:30:37Z", "BRcloseT": "2019-01-09T22:49:11Z", "BR_text": {"BRsummary": "Data type error when import onnx model", "BRdescription": "\n Note: Providing complete information in the most concise form is the best way to get help. This issue template serves as the checklist for essential information to most of the technical issues and bug reports. For non-technical issues and feature requests, feel free to present the information in what you believe is the best form.\n For Q & A and discussion, please start a discussion thread at <denchmark-link:https://discuss.mxnet.io>https://discuss.mxnet.io</denchmark-link>\n \n <denchmark-h:h2>Description</denchmark-h>\n \n I report a bug in\n incubator-mxnet/python/mxnet/contrib/onnx/onnx2mx/import_onnx.py\n <denchmark-code>def _parse_array(self, tensor_proto):\n         \"\"\"Grab data in TensorProto and convert to numpy array.\"\"\"\n         try:\n             from onnx.numpy_helper import to_array\n         except ImportError:\n             raise ImportError(\"Onnx and protobuf need to be installed. \"\n                               + \"Instructions to install - https://github.com/onnx/onnx\")\n         np_array = to_array(tensor_proto).reshape(tuple(tensor_proto.dims))\n         return nd.array(np_array)\n </denchmark-code>\n \n tensor_proto can be an numeric variable like Long, etc. Then,  tensor_proto.dims will be empty, and to_array(tensor_proto) cannot be reshaped to an empty shape.\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n <denchmark-code>What to do:\n 1. Download the diagnosis script from https://raw.githubusercontent.com/apache/incubator-mxnet/master/tools/diagnose.py\n 2. Run the script using `python diagnose.py` and paste its output here.\n \n </denchmark-code>\n \n Package used (Python/R/Scala/Julia):\n (I'm using ...)\n For Scala user, please provide:\n \n Java version: (java -version)\n Maven version: (mvn -version)\n Scala runtime if applicable: (scala -version)\n \n For R user, please provide R sessionInfo():\n <denchmark-h:h2>Build info (Required if built from source)</denchmark-h>\n \n Compiler (gcc/clang/mingw/visual studio):\n MXNet commit hash:\n (Paste the output of git rev-parse HEAD here.)\n Build config:\n (Paste the content of config.mk, or the build command.)\n <denchmark-h:h2>Error Message:</denchmark-h>\n \n (Paste the complete error message, including stack trace.)\n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n (If you are using your own code, please provide a short script that reproduces the error. Otherwise, please provide link to the existing example.)\n <denchmark-h:h2>Steps to reproduce</denchmark-h>\n \n (Paste the commands you ran that produced the error.)\n \n \n \n \n <denchmark-h:h2>What have you tried to solve it?</denchmark-h>\n \n One way to  fix:\n <denchmark-code>def _parse_array(self, tensor_proto):\n         \"\"\"Grab data in TensorProto and convert to numpy array.\"\"\"\n         try:\n             from onnx.numpy_helper import to_array\n         except ImportError:\n             raise ImportError(\"Onnx and protobuf need to be installed. \"\n                               + \"Instructions to install - https://github.com/onnx/onnx\")\n         if len(tuple(tensor_proto.dims)) > 0:\n             np_array = to_array(tensor_proto).reshape(tuple(tensor_proto.dims))\n         else:\n             np_array = np.array([to_array(tensor_proto)])\n         return nd.array(np_array)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "wangxinanbook", "commentT": "2018-11-16T17:30:41Z", "comment_text": "\n \t\tThanks for reporting the issue and proposing a fix too <denchmark-link:https://github.com/wangxinanbook>@wangxinanbook</denchmark-link>\n . You could go ahead and raise a PR with this proposed fix. Please verify if all the ONNX import tests pass (tests/python-pytest/onnx/import/mxnet_backend_test.py)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "wangxinanbook", "commentT": "2018-11-16T17:31:36Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [ONNX, Bug]\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "wangxinanbook", "commentT": "2018-11-18T06:21:27Z", "comment_text": "\n \t\tSure <denchmark-link:https://github.com/vandanavk>@vandanavk</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "wangxinanbook", "commentT": "2018-11-18T13:36:41Z", "comment_text": "\n \t\tI ran the test. It came out another issue on ,  even I used the master code.  I think this should be fixed elsewhere.  How do you think ?  <denchmark-link:https://github.com/vandanavk>@vandanavk</denchmark-link>\n \n <denchmark-code>Traceback (most recent call last):\n   File \"/opt/home/wangxinan/anaconda3/envs/test_mxnet/lib/python3.6/site-packages/onnx/backend/test/runner/__init__.py\", line 243, in device_test_func\n     return test_func(*args, device=device, **kwargs)\n   File \"/opt/home/wangxinan/anaconda3/envs/test_mxnet/lib/python3.6/site-packages/onnx/backend/test/runner/__init__.py\", line 273, in run\n     prepared_model = self.backend.prepare(model, device)\n   File \"/opt/home/wangxinan/workspace/incubator-mxnet/tests/python-pytest/onnx/import/mxnet_backend.py\", line 57, in prepare\n     sym, arg_params, aux_params = graph.from_onnx(model.graph)\n   File \"/opt/home/wangxinan/workspace/incubator-mxnet/python/mxnet/contrib/onnx/onnx2mx/import_onnx.py\", line 131, in from_onnx\n     raise err\n   File \"/opt/home/wangxinan/workspace/incubator-mxnet/python/mxnet/contrib/onnx/onnx2mx/import_onnx.py\", line 128, in from_onnx\n     mxnet_sym = self._convert_operator(node_name, op_name, onnx_attr, inputs)\n   File \"/opt/home/wangxinan/workspace/incubator-mxnet/python/mxnet/contrib/onnx/onnx2mx/import_onnx.py\", line 69, in _convert_operator\n     mxnet_sym = new_op(*inputs, **new_attrs)\n   File \"<string>\", line 73, in clip\n   File \"/opt/home/wangxinan/workspace/incubator-mxnet/python/mxnet/_ctypes/symbol.py\", line 125, in _symbol_creator\n     ctypes.byref(sym_handle)))\n   File \"/opt/home/wangxinan/workspace/incubator-mxnet/python/mxnet/base.py\", line 252, in check_call\n     raise MXNetError(py_str(_LIB.MXGetLastError()))\n mxnet.base.MXNetError: Invalid Parameter format for a_max expect float but value='inf', in operator clip(name=\"\", a_max=\"inf\", a_min=\"0.0\")\n </denchmark-code>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "wangxinanbook", "commentT": "2018-11-19T18:45:49Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wangxinanbook>@wangxinanbook</denchmark-link>\n  I don't see this error. It seems to pass on my setup\n \t\t"}}}, "commit": {"commit_id": "ed92b8d6201694d2c427ca1a9191b06597f8c58d", "commit_author": "Roshani Nagmote", "commitT": "2019-01-09 14:49:10-08:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\mxnet\\contrib\\onnx\\onnx2mx\\import_onnx.py", "file_new_name": "python\\mxnet\\contrib\\onnx\\onnx2mx\\import_onnx.py", "file_complexity": {"file_NLOC": "133", "file_CCN": "50", "file_NToken": "1157"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "200,201,202,203,204", "deleted_lines": "199", "method_info": {"method_name": "_parse_array", "method_params": "self,tensor_proto", "method_startline": "193", "method_endline": "205", "method_complexity": {"method_NLOC": "11", "method_CCN": "3", "method_NToken": "77", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "91", "deleted_lines": "90", "method_info": {"method_name": "from_onnx", "method_params": "self,graph", "method_startline": "76", "method_endline": "135", "method_complexity": {"method_NLOC": "33", "method_CCN": "15", "method_NToken": "358", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python-pytest\\onnx\\test_models.py", "file_new_name": "tests\\python-pytest\\onnx\\test_models.py", "file_complexity": {"file_NLOC": "121", "file_CCN": "12", "file_NToken": "1075"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "156,157,158,159,160,161,162,163,164,165", "deleted_lines": null, "method_info": {"method_name": "test_nodims_import", "method_params": "self", "method_startline": "156", "method_endline": "165", "method_complexity": {"method_NLOC": "9", "method_CCN": "2", "method_NToken": "113", "method_nesting_level": "1"}}}}}}}}