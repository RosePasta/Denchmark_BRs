{"BR": {"BR_id": "15172", "BR_author": "wkcn", "BRopenT": "2019-06-07T01:26:15Z", "BRcloseT": "2019-06-09T09:59:39Z", "BR_text": {"BRsummary": "mx.nd.contrib.boolean_mask doesn't support GradientAddition", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n Hi, there.\n I found mx.nd.contrib.boolean_mask gives a wrong gradient when gradient addition on it.\n mx.nd.contrib.boolean_mask doesn't support Gradient Addition.\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n <denchmark-code>----------Python Info---------- \n Version      : 3.7.3        \n Compiler     : GCC 8.2.1 20181127\n Build        : ('default', 'Mar 26 2019 21:43:19')\n Arch         : ('64bit', 'ELF')   \n ------------Pip Info-----------                       \n Version      : 19.0.3     \n Directory    : /usr/lib/python3.7/site-packages/pip\n ----------MXNet Info-----------                                                                                               \n Version      : 1.5.0                                                                                                    \n Directory    : /home/wkcn/proj/incubator-mxnet/python/mxnet                                                                   Hashtag not found. Not installed from pre-built package.                                                                      ----------System Info----------                                                                                       \n Platform     : Linux-5.1.6-arch1-1-ARCH-x86_64-with-arch                                                                      \n system       : Linux                                           \n node         : MiraiT                                          \n release      : 5.1.6-arch1-1-ARCH                                                                                             \n version      : #1 SMP PREEMPT Fri May 31 15:17:53 UTC 2019\n </denchmark-code>\n \n Package used (Python/R/Scala/Julia):\n Python\n <denchmark-h:h2>Build info (Required if built from source)</denchmark-h>\n \n Compiler (gcc/clang/mingw/visual studio): gcc\n MXNet commit hash:\n <denchmark-link:https://github.com/apache/incubator-mxnet/commit/b0be6c50ae686a59c340c56b9c11493a5c84ff72>b0be6c5</denchmark-link>\n \n Build config:\n make -j 5 USE_OPENCV=1 USE_BLAS=openblas USE_MKLDNN=0\n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n import mxnet as mx\n \n a = mx.nd.array([1,2,3,4,5])\n a.attach_grad()\n \n bi = mx.nd.array([1,1,0,0,0])\n \n ci = mx.nd.array([1,0,0,1,0])\n \n with mx.autograd.record():\n     b = mx.nd.contrib.boolean_mask(a, bi)\n     c = mx.nd.contrib.boolean_mask(a, ci)\n     su = b.sum() + c.sum()\n \n su.backward()\n print(a.grad)\n '''\n [2.0000000e+00 1.0000000e+00 0.0000000e+00 1.0000000e+00 5.0171812e+04]\n <NDArray 5 @cpu(0)>\n '''\n <denchmark-h:h2>Steps to reproduce</denchmark-h>\n \n \n Run the reproduce example\n The last gradient is wrong and random.\n \n <denchmark-h:h2>What have you tried to solve it?</denchmark-h>\n \n \n I read the code, and I found mx.nd.contrib.boolean_mask doesn't support GradAdd.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "wkcn", "commentT": "2019-06-07T01:26:18Z", "comment_text": "\n \t\tHey, this is the MXNet Label Bot.\n Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.\n Here are my recommended labels: Feature\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "wkcn", "commentT": "2019-06-09T09:59:39Z", "comment_text": "\n \t\tThe issue has been fixed. Close it.\n \t\t"}}}, "commit": {"commit_id": "8d8c5d523348e872433b54911c6aba47c986f58f", "commit_author": "JackieWu", "commitT": "2019-06-09 13:08:26+08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "0.5384615384615384"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\operator\\contrib\\boolean_mask-inl.h", "file_new_name": "src\\operator\\contrib\\boolean_mask-inl.h", "file_complexity": {"file_NLOC": "76", "file_CCN": "10", "file_NToken": "422"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "74,83,84,85,86,87,88,89", "deleted_lines": "82", "method_info": {"method_name": "mxnet::op::BooleanMaskBackwardKernel::Map", "method_params": "i,igrad,req,ograd,idx,col_size", "method_startline": "72", "method_endline": "91", "method_complexity": {"method_NLOC": "20", "method_CCN": "6", "method_NToken": "132", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "74,83,84", "deleted_lines": "82", "method_info": {"method_name": "mxnet::op::BooleanMaskBackwardKernel::Map", "method_params": "i,igrad,ograd,idx,col_size", "method_startline": "72", "method_endline": "84", "method_complexity": {"method_NLOC": "13", "method_CCN": "3", "method_NToken": "87", "method_nesting_level": "3"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\operator\\contrib\\boolean_mask.cc", "file_new_name": "src\\operator\\contrib\\boolean_mask.cc", "file_complexity": {"file_NLOC": "192", "file_CCN": "25", "file_NToken": "1616"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "121", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::BooleanMaskForward<cpu>", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "114", "method_endline": "156", "method_complexity": {"method_NLOC": "39", "method_CCN": "5", "method_NToken": "445", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "166,184,185,186,187,188,189,190,191,192", "deleted_lines": "178,179,180", "method_info": {"method_name": "mxnet::op::BooleanMaskBackward<cpu>", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "159", "method_endline": "195", "method_complexity": {"method_NLOC": "35", "method_CCN": "6", "method_NToken": "396", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "98,107,108", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::BooleanMaskBackwardCPUWriteKernel::Map", "method_params": "i,igrad,OpReqType,ograd,idx,col_size", "method_startline": "96", "method_endline": "110", "method_complexity": {"method_NLOC": "14", "method_CCN": "3", "method_NToken": "109", "method_nesting_level": "3"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\contrib\\boolean_mask.cu", "file_new_name": "src\\operator\\contrib\\boolean_mask.cu", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "39,105,147", "deleted_lines": "145"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_operator.py", "file_new_name": "tests\\python\\unittest\\test_operator.py", "file_complexity": {"file_NLOC": "7113", "file_CCN": "1176", "file_NToken": "88744"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "5340,5341,5342,5343,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362", "deleted_lines": null, "method_info": {"method_name": "test_boolean_mask", "method_params": "", "method_startline": "5327", "method_endline": "5362", "method_complexity": {"method_NLOC": "33", "method_CCN": "2", "method_NToken": "462", "method_nesting_level": "0"}}}}}}}}