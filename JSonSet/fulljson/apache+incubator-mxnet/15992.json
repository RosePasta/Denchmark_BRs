{"BR": {"BR_id": "15992", "BR_author": "larroy", "BRopenT": "2019-08-24T02:37:59Z", "BRcloseT": "2019-08-26T19:07:45Z", "BR_text": {"BRsummary": "Out of bounds access in req vector in MKLDNN", "BRdescription": "\n Request vector (SetupOpExec) might have only one element. (OpExecutor)\n <denchmark-h:h2>Description</denchmark-h>\n \n req vector access is out of bounds. I wonder why this is not catch by CI.\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n <denchmark-code>commit fbdfc78cabdeef341708514c6370db43b46fe31f (HEAD -> master, origin/master, origin/HEAD)\n Author: Pedro Larroy <pedro.larroy.lists@gmail.com>\n Date:   Wed Aug 21 14:12:49 2019 -0700\n \n     Add option to choose between OMP implementations\n </denchmark-code>\n \n <denchmark-code>Architecture:        x86_64\n CPU op-mode(s):      32-bit, 64-bit\n Byte Order:          Little Endian\n CPU(s):              64\n On-line CPU(s) list: 0-63\n Thread(s) per core:  2\n Core(s) per socket:  16\n Socket(s):           2\n NUMA node(s):        2\n Vendor ID:           GenuineIntel\n CPU family:          6\n Model:               79\n Model name:          Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz\n Stepping:            1\n CPU MHz:             1831.720\n CPU max MHz:         3000.0000\n CPU min MHz:         1200.0000\n BogoMIPS:            4600.06\n Hypervisor vendor:   Xen\n Virtualization type: full\n L1d cache:           32K\n L1i cache:           32K\n L2 cache:            256K\n L3 cache:            46080K\n NUMA node0 CPU(s):   0-15,32-47\n NUMA node1 CPU(s):   16-31,48-63\n Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq monitor est ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx xsaveopt ida\n ----------Python Info----------\n Version      : 3.6.8\n Compiler     : GCC 8.0.1 20180414 (experimental) [trunk revision 259383\n Build        : ('default', 'Jan 14 2019 11:02:34')\n Arch         : ('64bit', 'ELF')\n ------------Pip Info-----------\n Version      : 19.2.2\n Directory    : /home/piotr/mxnet/py3_venv/lib/python3.6/site-packages/pip\n ----------MXNet Info-----------\n Version      : 1.6.0\n Directory    : /home/piotr/mxnet/python/mxnet\n Commit hash file \"/home/piotr/mxnet/python/mxnet/COMMIT_HASH\" not found. Not installed from pre-built package or built from source.\n Library      : ['/home/piotr/mxnet/python/mxnet/../../build/libmxnet.so']\n Build features:\n \u2716 CUDA\n \u2716 CUDNN\n \u2716 NCCL\n \u2716 CUDA_RTC\n \u2716 TENSORRT\n \u2714 CPU_SSE\n \u2714 CPU_SSE2\n \u2714 CPU_SSE3\n \u2714 CPU_SSE4_1\n \u2714 CPU_SSE4_2\n \u2716 CPU_SSE4A\n \u2714 CPU_AVX\n \u2716 CPU_AVX2\n \u2714 OPENMP\n \u2716 SSE\n \u2714 F16C\n \u2714 JEMALLOC\n \u2714 BLAS_OPEN\n \u2716 BLAS_ATLAS\n \u2716 BLAS_MKL\n \u2716 BLAS_APPLE\n \u2714 LAPACK\n \u2714 MKLDNN\n \u2714 OPENCV\n \u2716 CAFFE\n \u2716 PROFILER\n \u2716 DIST_KVSTORE\n \u2716 CXX14\n \u2716 INT64_TENSOR_SIZE\n \u2714 SIGNAL_HANDLER\n \u2714 DEBUG\n \u2716 TVM_OP\n ----------System Info----------\n Platform     : Linux-4.15.0-1045-aws-x86_64-with-Ubuntu-18.04-bionic\n system       : Linux\n node         : ip-172-31-21-122\n release      : 4.15.0-1045-aws\n version      : #47-Ubuntu SMP Fri Aug 2 13:50:30 UTC 2019\n ----------Hardware Info----------\n machine      : x86_64\n processor    : x86_64\n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0009 sec, LOAD: 0.5070 sec.\n Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0004 sec, LOAD: 0.0661 sec.\n Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.0004 sec, LOAD: 0.0474 sec.\n Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0003 sec, LOAD: 0.0720 sec.\n Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0003 sec, LOAD: 0.1958 sec.\n Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0003 sec, LOAD: 0.0469 sec.\n \n </denchmark-code>\n \n <denchmark-code>183|       }\n 184|     }\n 185|\n 186|     fwd_.reset(new MKLDNNFullyConnectedForward(full_param_, ctx.is_train, data, weight,\n 187|       (has_bias ? &cached_bias_ : nullptr), out_md));\n 188|     initialized_ = true;\n 189|   }\n 190|   std::vector<NDArray> new_inputs;\n 191|   std::vector<OpReqType> new_req;\n 192|   if (has_bias) {\n 193|     new_inputs = {data, weight, cached_bias_};\n 194+>    new_req = {req[fullc::kData], req[fullc::kWeight], req[fullc::kBias]};\n 195|   } else {\n 196|     new_inputs = {data, weight};\n 197|     new_req = {req[fullc::kData], req[fullc::kWeight]};\n 198|   }\n 199|\n 200|   MKLDNNFCForwardFullFeature(full_param_, ctx, fwd_.get(), new_inputs, new_req, out_data);\n 201|\n 202|   if (mkldnn_param.quantized && !mkldnn_param.enable_float_output) {\n 203|     float *min_output_ptr = out_data[quantized_fullc::kOutMin].data().dptr<float>();\n 204|     float *max_output_ptr = out_data[quantized_fullc::kOutMax].data().dptr<float>();\n 205|     *min_output_ptr = cached_min_output_;\n /home/piotr/mxnet/src/operator/subgraph/mkldnn/mkldnn_fc.cc\n (gdb) down\n #3  0x00007f58e8bd9a89 in std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> >::operator[] (this=0x2732408, __n=1) at /usr/include/c++/7/bits/stl_vector.h:815\n (gdb) up\n #4  0x00007f58eb10e62f in mxnet::op::SgMKLDNNFCOp::Forward (this=0x2763b50, ctx=..., in_data=std::vector of length 3, capacity 4 = {...}, req=std::vector of length 1, capacity 1 = {...}, out_data=st\n d::vector of length 1, capacity 1 = {...}) at ../src/operator/subgraph/mkldnn/mkldnn_fc.cc:194\n (gdb) p req\n $4 = std::vector of length 1, capacity 1 = {mxnet::kWriteTo}\n (gdb) p req.size\n $5 = {std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> >::size_type (const std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > * const)} 0x7f58e8a73d80\n      <std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> >::size() const>\n (gdb) bt 5\n #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\n #1  0x00007f59943ae801 in __GI_abort () at abort.c:79\n #2  0x00007f58e8a44e48 in std::__replacement_assert (__file=0x7f58ed5762a0 \"/usr/include/c++/7/bits/stl_vector.h\", __line=815, __function=0x7f58ed5775e0 <std::vector<mxnet::OpReqType, std::allocator\n <mxnet::OpReqType> >::operator[](unsigned long) const::__PRETTY_FUNCTION__> \"std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const\n  [with _Tp = mxnet::OpReqType; _Alloc = std::allocator<mxnet::OpReqType>; std::\"..., __condition=0x7f58ed576270 \"__builtin_expect(__n < this->size(), true)\") at /usr/include/x86_64-linux-gnu/c++/7/b\n its/c++config.h:472\n #3  0x00007f58e8bd9a89 in std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> >::operator[] (this=0x2732408, __n=1) at /usr/include/c++/7/bits/stl_vector.h:815\n #4  0x00007f58eb10e62f in mxnet::op::SgMKLDNNFCOp::Forward (this=0x2763b50, ctx=..., in_data=std::vector of length 3, capacity 4 = {...}, req=std::vector of length 1, capacity 1 = {...}, out_data=st\n d::vector of length 1, capacity 1 = {...}) at ../src/operator/subgraph/mkldnn/mkldnn_fc.cc:194\n (More stack frames follow...)\n (gdb)\n  ip-172-311:cgdb* 2:fish- 3:vi  4:vi\n </denchmark-code>\n \n Repro\n <denchmark-code>./dev_menu.py build\n source py3_venv/bin/activate.fish\n ulimit -c unlimited\n nosetests -v -s --with-timer --timer-ok 1 --timer-warning 15 --timer-filter warning,error --with-xunit --xunit-file nosetests_unittest.xml tests/python/unittest/test_executor.py:test_reshape\n cgdb (which python) core\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "larroy", "commentT": "2019-08-24T02:38:03Z", "comment_text": "\n \t\tHey, this is the MXNet Label Bot.\n Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.\n Here are my recommended labels: Bug\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "larroy", "commentT": "2019-08-24T02:38:15Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/pengzhao-intel>@pengzhao-intel</denchmark-link>\n  <denchmark-link:https://github.com/TaoLv>@TaoLv</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "larroy", "commentT": "2019-08-24T02:38:24Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Bug, MKL]\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "larroy", "commentT": "2019-08-24T02:41:52Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [breaking]\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "larroy", "commentT": "2019-08-24T09:18:43Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ciyongch>@ciyongch</denchmark-link>\n  <denchmark-link:https://github.com/wuxun-zhang>@wuxun-zhang</denchmark-link>\n   please help take a look for this bug.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "larroy", "commentT": "2019-08-25T10:43:34Z", "comment_text": "\n \t\tSure, I will take a look at this.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "larroy", "commentT": "2019-08-25T11:27:36Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/larroy>@larroy</denchmark-link>\n  I've created a PR <denchmark-link:https://github.com/apache/incubator-mxnet/pull/16000>#16000</denchmark-link>\n  to fix this bug. The reason of CI not catching this is: STL vector dosen't check for  operator, while  does.\n I checked the  in the code, and seems it's not necessary, so it could be removed and use original  instead.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "larroy", "commentT": "2019-08-25T17:25:37Z", "comment_text": "\n \t\tThanks for looking into this. With cmake we are adding range check for stl containers in debug mode which also checks in operator []. See h\n -D_GLIBCXX_ASSERTIONS  define in cmake build.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "larroy", "commentT": "2019-08-26T01:41:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/larroy>@larroy</denchmark-link>\n  Thanks for point out this. Does the current CI enable debug mode?\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "larroy", "commentT": "2019-08-26T19:07:45Z", "comment_text": "\n \t\tIssue fixed by <denchmark-link:https://github.com/apache/incubator-mxnet/pull/16000>#16000</denchmark-link>\n \n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "larroy", "commentT": "2019-08-26T20:26:27Z", "comment_text": "\n \t\tSeems that we are not building and testing with STL range checks and MKLDNN enabled, otherwise this would be caught by CI.\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "larroy", "commentT": "2019-08-27T01:17:00Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/larroy>@larroy</denchmark-link>\n  Yeah, that make sense for not catching such error in current CI. So it's better to enable this check in CI in the future, right?\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "larroy", "commentT": "2019-08-27T17:24:07Z", "comment_text": "\n \t\tYes indeed.\n \t\t"}}}, "commit": {"commit_id": "5042d2ad9fe6d98da7ff81775d23717604f8aa93", "commit_author": "ciyong", "commitT": "2019-08-26 10:30:08+08:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_conv.cc", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_conv.cc", "file_complexity": {"file_NLOC": "714", "file_CCN": "150", "file_NToken": "6396"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "434", "deleted_lines": "429,432,435,437", "method_info": {"method_name": "mxnet::op::SgMKLDNNConvOperator::Forward", "method_params": "ctx,inputs,req,outputs", "method_startline": "203", "method_endline": "448", "method_complexity": {"method_NLOC": "230", "method_CCN": "68", "method_NToken": "2161", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_fc.cc", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_fc.cc", "file_complexity": {"file_NLOC": "392", "file_CCN": "73", "file_NToken": "3285"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "197", "deleted_lines": "191,194,197,200", "method_info": {"method_name": "mxnet::op::SgMKLDNNFCOp::Forward", "method_params": "ctx,in_data,req,out_data", "method_startline": "80", "method_endline": "205", "method_complexity": {"method_NLOC": "111", "method_CCN": "29", "method_NToken": "1039", "method_nesting_level": "2"}}}}}}}}