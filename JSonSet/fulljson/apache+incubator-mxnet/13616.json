{"BR": {"BR_id": "13616", "BR_author": "eric-haibin-lin", "BRopenT": "2018-12-11T19:52:19Z", "BRcloseT": "2019-03-15T17:07:56Z", "BR_text": {"BRsummary": "SymbolBlock doesn't print anything", "BRdescription": "\n When I print a symbolblock loaded from a json file, printing it doesn't help me at all:\n <denchmark-code>>>> block = mx.gluon.nn.SymbolBlock.imports('test.json-symbol.json', ['data'], 'test.json-0000.params')\n SymbolBlock(\n \n )\n </denchmark-code>\n \n It does not show anything useful to help me understand what is in the block, even for symbols exported from nn.Dense(1)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "eric-haibin-lin", "commentT": "2018-12-12T16:45:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Gluon, question]\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "eric-haibin-lin", "commentT": "2018-12-27T20:30:26Z", "comment_text": "\n \t\tI confirm this behavior, and here is the minimal reproducible example:\n <denchmark-code>import mxnet as mx\n from mxnet.gluon.nn import HybridSequential, Dense\n \n model = HybridSequential()\n model.add(Dense(units=10))\n \n model.initialize()\n model.hybridize()\n \n model(mx.random.uniform(shape=(10, 100)))\n model.export(\"./model\")\n \n block = mx.gluon.nn.SymbolBlock.imports('model-symbol.json', ['data'], 'model-0000.params')\n print(block)\n </denchmark-code>\n \n Result that is printed on the screen looks like:\n <denchmark-code>SymbolBlock(\n \n )\n </denchmark-code>\n \n Funny that both pure Gluon and pure Symbol models are still printing something. For Gluon model I would receive expected output:\n <denchmark-code>HybridSequential(\n   (0): Dense(100 -> 10, linear)\n )\n </denchmark-code>\n \n For same model using Symbolic API I receive only the name of the last layer (not very useful, but still it is something):\n <denchmark-code><Symbol fc1>\n </denchmark-code>\n \n I would mark this issue as a bug.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "eric-haibin-lin", "commentT": "2018-12-29T23:38:23Z", "comment_text": "\n \t\tMaybe we can print the json representation\n \t\t"}}}, "commit": {"commit_id": "226212b40b5b1a43a3d91d3a810541887beaae8c", "commit_author": "Vandana Kannan", "commitT": "2019-03-15 10:07:55-07:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\mxnet\\gluon\\block.py", "file_new_name": "python\\mxnet\\gluon\\block.py", "file_complexity": {"file_NLOC": "798", "file_CCN": "208", "file_NToken": "5191"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1027,1028,1029,1030,1031,1032,1033,1034", "deleted_lines": null, "method_info": {"method_name": "__repr__", "method_params": "self", "method_startline": "1027", "method_endline": "1034", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "75", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_gluon.py", "file_new_name": "tests\\python\\unittest\\test_gluon.py", "file_complexity": {"file_NLOC": "2122", "file_CCN": "332", "file_NToken": "21577"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "885,888,889,890", "deleted_lines": null, "method_info": {"method_name": "test_import", "method_params": "", "method_startline": "872", "method_endline": "890", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "145", "method_nesting_level": "0"}}}}}}}}