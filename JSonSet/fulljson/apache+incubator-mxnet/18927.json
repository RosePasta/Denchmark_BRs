{"BR": {"BR_id": "18927", "BR_author": "leeyeetonn", "BRopenT": "2020-08-14T22:35:18Z", "BRcloseT": "2020-08-21T00:01:11Z", "BR_text": {"BRsummary": "Floating Point Exception mxnet.ndarray.contrib.bipartite_matching", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n (A clear and concise description of what the bug is.)\n \n mxnet.ndarray.contrib.bipartite_matching gives floating point exception when input data's shape contains 0.\n Curiously, it only gives floating point exception when 0 is at certain location in shape, and gives dmlc::Error for other locations. See the provided code snippets for example.\n \n <denchmark-h:h3>Error Message</denchmark-h>\n \n (Paste the complete error message. Please also include stack trace by setting environment variable DMLC_LOG_STACK_TRACE_DEPTH=10 before running your script.)\n \n Floating point exception(core dumped)\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n (If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)\n The code below produces floating point exception:\n import mxnet as mx\n import numpy as np\n \n input = mx.nd.array(np.random.rand(0,2))\n mx.ndarray.contrib.bipartite_matching(input, threshold=0.1)\n gives:\n \n Floating point exception (core dumped)\n \n If swap the position of the 0 in shape, it gives dmlc::Error instead:\n import mxnet as mx\n import numpy as np\n \n input = mx.nd.array(np.random.rand(2,0))\n mx.ndarray.contrib.bipartite_matching(input, threshold=0.1)\n gives:\n \n terminate called after throwing an instance of 'dmlc::Error'\n what():  [22:15:23] src/imperative/./imperative_utils.h:146: Operator _contrib_bipartite_matching inferring shapes failed.\n input shapes:\n [2,-1]\n output shapes:\n [2]\n [-1]\n operator attributes:\n threshold : 0.1\n Stack trace:\n [bt] (0) /root/miniconda3/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x307d3b) [0x7f5828e96d3b]\n [bt] (1) /root/miniconda3/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocatormxnet::NDArray* > const&, std::vector<mxnet::NDArray*, std::allocatormxnet::NDArray* > const&, mxnet::DispatchMode*)+0x363b) [0x7f582c0323bb]\n Aborted (core dumped)\n \n <denchmark-h:h3>Steps to reproduce</denchmark-h>\n \n (Paste the commands you ran that produced the error.)\n \n run the above code snippets in python Interpreter or run it as a python script\n \n \n <denchmark-h:h2>What have you tried to solve it?</denchmark-h>\n \n \n \n \n \n <denchmark-h:h2>Environment</denchmark-h>\n \n We recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\n <denchmark-code>curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\n \n # paste outputs here\n </denchmark-code>\n \n I got 404 when trying to get the script.\n Some environment information:\n \n OS: ubuntu 18.04\n Python: 3.7.6\n pip: 20.0.2\n numpy: 1.18.5\n mxnet: 1.6.0\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "leeyeetonn", "commentT": "2020-08-14T22:36:02Z", "comment_text": "\n \t\tWelcome to Apache MXNet (incubating)! We are on a mission to democratize AI, and we are glad that you are contributing to it by opening this issue.\n Please make sure to include all the relevant context, and one of the @apache/mxnet-committers will be here shortly.\n If you are interested in contributing to our project, let us know! Also, be sure to check out our guide on <denchmark-link:https://mxnet.apache.org/community/contribute>contributing to MXNet</denchmark-link>\n  and our <denchmark-link:https://cwiki.apache.org/confluence/display/MXNET/Developments>development guides wiki</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "leeyeetonn", "commentT": "2020-08-20T18:53:43Z", "comment_text": "\n \t\tSee the above PR for the fix.\n \t\t"}}}, "commit": {"commit_id": "9bdd4d6347c284770ee5bfe5ae98f1dabc283829", "commit_author": "Sheng Zha", "commitT": "2020-08-20 17:01:10-07:00", "commit_complexity": {"commit_NLOC": "0.375", "commit_CCN": "1.0", "commit_Nprams": "0.375"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\contrib\\bounding_box-inl.h", "file_new_name": "src\\operator\\contrib\\bounding_box-inl.h", "file_complexity": {"file_NLOC": "918", "file_CCN": "98", "file_NToken": "8795"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "731,732,733,734,735", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::BipartiteMatchingForward", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "718", "method_endline": "774", "method_complexity": {"method_NLOC": "53", "method_CCN": "2", "method_NToken": "639", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\contrib\\bounding_box.cc", "file_new_name": "src\\operator\\contrib\\bounding_box.cc", "file_complexity": {"file_NLOC": "219", "file_CCN": "0", "file_NToken": "1011"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "40,122,164,212,235", "deleted_lines": null}}}, "file_2": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "tests\\python\\unittest\\test_smoke.py", "file_complexity": {"file_NLOC": "6", "file_CCN": "1", "file_NToken": "46"}}}}}