{"BR": {"BR_id": "14181", "BR_author": "andrewfayres", "BRopenT": "2019-02-15T23:19:59Z", "BRcloseT": "2019-03-07T18:13:10Z", "BR_text": {"BRsummary": "Scala Infer ObjectDector crashes on models which don't return", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n The Scala Infer API's ObjectDetector will crash when provided with a model which doesn't return coordinates for bounding boxes. We should handle this situation more gracefully. Either return an error message stating that the model doesn't have the required outputs or return the results without the bounding boxes.\n <denchmark-h:h2>Error Message:</denchmark-h>\n \n <denchmark-code>$ ./bin/run_det.sh\n SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n SLF4J: Defaulting to no-operation (NOP) logger implementation\n SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n [22:18:13] src/nnvm/legacy_json_util.cc:209: Loading symbol saved by previous version v1.3.1. Attempting to upgrade...\n [22:18:13] src/nnvm/legacy_json_util.cc:217: Symbol successfully upgraded!\n [22:18:17] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (setting env variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)\n Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 1\n     at org.apache.mxnet.infer.ObjectDetector$$anonfun$2.apply(ObjectDetector.scala:132)\n     at org.apache.mxnet.infer.ObjectDetector$$anonfun$2.apply(ObjectDetector.scala:132)\n     at scala.math.Ordering$$anon$5.compare(Ordering.scala:122)\n     at java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n     at java.util.TimSort.sort(TimSort.java:234)\n     at java.util.Arrays.sort(Arrays.java:1438)\n     at scala.collection.SeqLike$class.sorted(SeqLike.scala:648)\n     at scala.collection.mutable.ArrayOps$ofRef.sorted(ArrayOps.scala:186)\n     at scala.collection.SeqLike$class.sortBy(SeqLike.scala:623)\n     at scala.collection.mutable.ArrayOps$ofRef.sortBy(ArrayOps.scala:186)\n     at org.apache.mxnet.infer.ObjectDetector.sortAndReformat(ObjectDetector.scala:132)\n     at org.apache.mxnet.infer.ObjectDetector$$anonfun$objectDetectWithNDArray$1.apply$mcVI$sp(ObjectDetector.scala:106)\n     at org.apache.mxnet.infer.ObjectDetector$$anonfun$objectDetectWithNDArray$1.apply(ObjectDetector.scala:104)\n     at org.apache.mxnet.infer.ObjectDetector$$anonfun$objectDetectWithNDArray$1.apply(ObjectDetector.scala:104)\n     at scala.collection.parallel.mutable.ParArray$ParArrayIterator.foreach_quick(ParArray.scala:143)\n     at scala.collection.parallel.mutable.ParArray$ParArrayIterator.foreach(ParArray.scala:136)\n     at scala.collection.parallel.ParIterableLike$Foreach.leaf(ParIterableLike.scala:972)\n     at scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply$mcV$sp(Tasks.scala:49)\n     at scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply(Tasks.scala:48)\n     at scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply(Tasks.scala:48)\n     at scala.collection.parallel.Task$class.tryLeaf(Tasks.scala:51)\n     at scala.collection.parallel.ParIterableLike$Foreach.tryLeaf(ParIterableLike.scala:969)\n     at scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask$class.compute(Tasks.scala:152)\n     at scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.compute(Tasks.scala:443)\n     at scala.concurrent.forkjoin.RecursiveAction.exec(RecursiveAction.java:160)\n     at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\n     at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\n     at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\n     at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\n </denchmark-code>\n \n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n <denchmark-code>    public static void main(String[] args) {\n         String modelPathPrefix = \"./resnet-152\";\n         String inputImagePath = \"./cat.jpg\";\n \n         List<Context> context = new ArrayList<Context>();\n         context.add(Context.gpu());\n \n         // Prepare the model                                                                                                                          \n         List<DataDesc> inputDesc = new ArrayList<>();\n         Shape inputShape = new Shape(new int[]{1, 3, 224, 224});\n         inputDesc.add(new DataDesc(\"data\", inputShape, DType.Float32(), \"NCHW\"));\n         ObjectDetector objDet = new ObjectDetector(modelPathPrefix, inputDesc, context, 0);\n \n         // predict                                                                                                                                    \n         int iter = 100;\n         ArrayList<Double> data = new ArrayList<Double>(iter);\n         for(int i=0; i<iter; i++) {\n             // Prepare data                                                                                                                           \n             BufferedImage img = ObjectDetector.loadImageFromFile(inputImagePath);\n \n             long start = System.nanoTime();\n             List<List<ObjectDetectorOutput>> result = objDet.imageObjectDetect(img,3);\n             long stop = System.nanoTime();\n \n             double elapsed = (stop-start)/1000000.0;\n             data.add(elapsed);\n         }\n </denchmark-code>\n \n <denchmark-h:h2>Steps to reproduce</denchmark-h>\n \n (Paste the commands you ran that produced the error.)\n \n Download resnet-152 model\n Run above code calling ObjectDetector (above code is Java and call the Java API but error is in the Scala layer)\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "andrewfayres", "commentT": "2019-02-15T23:20:02Z", "comment_text": "\n \t\tHey, this is the MXNet Label Bot.\n Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.\n Here are my recommended labels: Scala, Bug\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "andrewfayres", "commentT": "2019-02-15T23:21:23Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Bug, Scala]\n \t\t"}}}, "commit": {"commit_id": "e70369437bea25b92bd5531b08fff92988b2ff02", "commit_author": "Frank Liu", "commitT": "2019-03-07 10:13:09-08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "0.05555555555555555"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "scala-package\\infer\\src\\main\\scala\\org\\apache\\mxnet\\infer\\ImageClassifier.scala", "file_new_name": "scala-package\\infer\\src\\main\\scala\\org\\apache\\mxnet\\infer\\ImageClassifier.scala", "file_complexity": {"file_NLOC": "107", "file_CCN": "11", "file_NToken": "991"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "69,70", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "scala-package\\infer\\src\\main\\scala\\org\\apache\\mxnet\\infer\\ObjectDetector.scala", "file_new_name": "scala-package\\infer\\src\\main\\scala\\org\\apache\\mxnet\\infer\\ObjectDetector.scala", "file_complexity": {"file_NLOC": "112", "file_CCN": "10", "file_NToken": "1020"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198", "deleted_lines": "177,178", "method_info": {"method_name": "getImageClassifier", "method_params": "String,cpu,0", "method_startline": "173", "method_endline": "199", "method_complexity": {"method_NLOC": "25", "method_CCN": "4", "method_NToken": "154", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "scala-package\\infer\\src\\main\\scala\\org\\apache\\mxnet\\infer\\Predictor.scala", "file_new_name": "scala-package\\infer\\src\\main\\scala\\org\\apache\\mxnet\\infer\\Predictor.scala", "file_complexity": {"file_NLOC": "129", "file_CCN": "7", "file_NToken": "1282"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "59,60,61,62,63", "deleted_lines": null, "method_info": {"method_name": "predictWithNDArray", "method_params": "", "method_startline": "57", "method_endline": "84", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "59", "method_nesting_level": "0"}}}}}}}}