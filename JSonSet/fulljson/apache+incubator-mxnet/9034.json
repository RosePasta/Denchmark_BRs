{"BR": {"BR_id": "9034", "BR_author": "adrianloy", "BRopenT": "2017-12-12T11:15:44Z", "BRcloseT": "2018-09-18T17:53:47Z", "BR_text": {"BRsummary": "Understanding the correlation layer", "BRdescription": "\n Hey everyone,\n I do not understand the impact of the stride parameter for the mxnet.sym.correlation layer. I have this simple minimal example:\n <denchmark-code>import numpy as np\n import mxnet as mx\n \n # Network\n data1 = mx.symbol.Variable('data1')\n #data2 = mx.symbol.Variable('data2')\n cor = mx.sym.Correlation(data1=data1, data2=data1, kernel_size=28, stride1=1, stride2=1, pad_size=0, max_displacement=0)\n loss = mx.sym.MakeLoss(cor, normalization='batch')\n group = mx.symbol.Group([mx.sym.BlockGrad(cor), loss])\n \n # Data\n datashape = (1, 1, 28, 28)  # like mnist\n data = np.random.rand(1, 1, 28, 28)\n \n #Bind, execute, get computed correlation\n executor = group.simple_bind(ctx=mx.cpu(), data1=datashape)\n outs = executor.forward(is_train=True, data1=data)\n cor = executor.outputs[0]\n grad1 = executor.outputs[1]\n print(cor)\n </denchmark-code>\n \n It computes the correlation between 2 identical feature maps with a kernel of the same size as the feature maps. I do not understand why the output of the correlation layer has shape 1x1x2x2. If I set the strides to anything bigger than 1, the output is a 1x1x1x1 matrix, that makes more sense to me. As the Kernel has the size of the feature maps, the output should always be a 1x1x1x1 matrix, independent from the value of the strides parameters!\n The documentation notes\n \n Given a maximum displacement :math:d, for each location :math:x_{1} it computes correlations :math:c(x_{1}, x_{2}) only in a neighborhood of size :math:D:=2d+1,\n by limiting the range of :math:x_{2}. We use strides :math:s_{1}, s_{2}, to quantize :math:x_{1} globally and to quantize :math:x_{2} within the neighborhood\n centered around :math:x_{1}.\n The final output is defined by the following expression:\n \n .. math::\n   out[n, q, i, j] = c(x_{i, j}, x_{q})\n \n where :math:`i` and :math:`j` enumerate spatial locations in :math:`f_{1}`, and :math:`q` denotes the :math:`q^{th}` neighborhood of :math:`x_{i,j}`.\n \n \n Unfortunately I do not really understand from this the impact of the strides parameter, as s_1 and s_2 do not appear in the equation.\n Furthermore, if you just run the code a couple of times you will notice that the correlation matrix sometimes contains \"Infinity\" values. I do not understand mathematically or conceptually how the correlation can be infinity.\n Any help is much appreciated.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "adrianloy", "commentT": "2018-07-12T16:52:15Z", "comment_text": "\n \t\tkernel_size must be odd number, otherwise strange things happen! It's mentioned in the docs string, but I think it would be better for this to be added as strict validation to avoid confusion like this in the future.\n With regards to the stride (once a odd kernel_size is used), stride1 relates to the striding on the data1 feature map 1 and stride2 relates to the striding within the 'neighborhood' defined on feature map 2. Without a neighborhood this method would compare all patches from feature map 1 with all patches from feature map 2. With large feature maps, the number of comparisons becomes too large, so we restrict to a region in feature map 2 centered around the corresponding location of the patch in feature map 1. And stride2 strides within this neighborhood region.\n I recommend taking a look the <denchmark-link:https://arxiv.org/pdf/1504.06852.pdf>'FlowNet: Learning Optical Flow with Convolutional Networks'</denchmark-link>\n  paper that defined this type of layer.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "adrianloy", "commentT": "2018-07-12T16:54:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/dsqx71>@dsqx71</denchmark-link>\n , <denchmark-link:https://github.com/sxjscience>@sxjscience</denchmark-link>\n , <denchmark-link:https://github.com/eric-haibin-lin>@eric-haibin-lin</denchmark-link>\n  it would be good to get some input validation on  here to avoid this issue in the future.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "adrianloy", "commentT": "2018-07-12T16:56:17Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/sandeep-krishnamurthy>@sandeep-krishnamurthy</denchmark-link>\n  can we now retag, thanks! I think Bug and Operator are the most appropriate tags.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "adrianloy", "commentT": "2018-08-22T21:46:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  : [Bug, Operator]\n \t\t"}}}, "commit": {"commit_id": "53d786dc6e3485714c9d1c23a4b2e3e1857922e7", "commit_author": "Chaitanya Prakash Bapat", "commitT": "2018-09-18 10:53:46-07:00", "commit_complexity": {"commit_NLOC": "0.9333333333333333", "commit_CCN": "1.0", "commit_Nprams": "0.9333333333333333"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\correlation-inl.h", "file_new_name": "src\\operator\\correlation-inl.h", "file_complexity": {"file_NLOC": "240", "file_CCN": "18", "file_NToken": "2039"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "81", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::CorrelationOp::Forward", "method_params": "ctx,in_data,req,out_data,aux_args", "method_startline": "73", "method_endline": "118", "method_complexity": {"method_NLOC": "46", "method_CCN": "1", "method_NToken": "557", "method_nesting_level": "3"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\python\\unittest\\test_operator.py", "file_new_name": "tests\\python\\unittest\\test_operator.py", "file_complexity": {"file_NLOC": "5685", "file_CCN": "919", "file_NToken": "71018"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "6917,6918,6919,6920,6921,6922,6923,6924", "deleted_lines": null, "method_info": {"method_name": "test_invalid_kernel_size", "method_params": "", "method_startline": "6917", "method_endline": "6924", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "65", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "6927,6928,6929,6930,6931,6932", "deleted_lines": null, "method_info": {"method_name": "test_valid_kernel_size", "method_params": "", "method_startline": "6927", "method_endline": "6932", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "61", "method_nesting_level": "0"}}}}}}}}