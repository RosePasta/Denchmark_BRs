{"BR": {"BR_id": "15709", "BR_author": "TaoLv", "BRopenT": "2019-07-31T06:13:05Z", "BRcloseT": "2019-09-02T14:17:51Z", "BR_text": {"BRsummary": "Transpose does not support inplace", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n Crash with below code snippet:\n <denchmark-code>import mxnet as mx\n import numpy as np\n \n a = mx.sym.Variable('a')\n b = mx.sym.transpose(a, axes=(1, 0, 2))\n c = mx.sym.zeros_like(b)\n \n mod = c.simple_bind(mx.cpu(), a=(3, 4, 5), grad_req='null')\n mod.arg_arrays[0][:] = np.random.normal(size=mod.arg_arrays[0].shape)\n out = mod.forward(is_train=False)\n print(out[0]) \n </denchmark-code>\n \n Error message:\n <denchmark-code>mxnet.base.MXNetError: [22:56:12] src/operator/tensor/./matrix_op-inl.h:328: Check failed: req[0] == kWriteTo (0 vs. 1) : Transpose does not support inplace\n </denchmark-code>\n \n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n Package used (Python/R/Scala/Julia):\n Python\n Reproduce:\n pip install mxnet and run the demo case above.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "TaoLv", "commentT": "2019-07-31T06:13:08Z", "comment_text": "\n \t\tHey, this is the MXNet Label Bot.\n Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.\n Here are my recommended labels: Bug, Feature\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "TaoLv", "commentT": "2019-07-31T21:27:41Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Feature request]\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "TaoLv", "commentT": "2019-08-12T14:50:32Z", "comment_text": "\n \t\tHi,\n I would like to work on this. However I'll need some pointer as to how to go about it or even a reference of other operator which supports this should do.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "TaoLv", "commentT": "2019-08-12T15:39:20Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/kshitij12345>@kshitij12345</denchmark-link>\n , thank you for looking into this. Your contribution will be highly appreciated!\n Actually this is not an in-place issue and the transpose operator in MXNet is not designed to support in-place.\n From the error log and the check at <denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/src/operator/tensor/matrix_op-inl.h#L334>https://github.com/apache/incubator-mxnet/blob/master/src/operator/tensor/matrix_op-inl.h#L334</denchmark-link>\n , the  here is  which means the operator should do nothing before return.\n So the logic should look like:\n if (req[0] == kNullOp) {\n   return;\n } else {\n   CHECK_EQ(req[0], kWriteTo) << \"Transpose does not support kWriteInplace or kAddTo\";\n   // ....\n }\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "TaoLv", "commentT": "2019-08-12T16:27:47Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/TaoLv>@TaoLv</denchmark-link>\n  Oh, I see. Thank You for the nice explanation. Will send a PR soon.\n \t\t"}}}, "commit": {"commit_id": "56999399a44467cbd1d0fbdf9cbba8b46ac53956", "commit_author": "kshitij12345", "commitT": "2019-09-02 22:17:50+08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "0.6470588235294118"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\tensor\\matrix_op-inl.h", "file_new_name": "src\\operator\\tensor\\matrix_op-inl.h", "file_complexity": {"file_NLOC": "2462", "file_CCN": "408", "file_NToken": "23516"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "333,334,335,337", "deleted_lines": "334", "method_info": {"method_name": "mxnet::op::Transpose", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "328", "method_endline": "347", "method_complexity": {"method_NLOC": "20", "method_CCN": "4", "method_NToken": "205", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\tensor\\matrix_op.cc", "file_new_name": "src\\operator\\tensor\\matrix_op.cc", "file_complexity": {"file_NLOC": "1134", "file_CCN": "23", "file_NToken": "5689"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "325,326,327,329", "deleted_lines": "326", "method_info": {"method_name": "mxnet::op::TransposeComputeExCPU", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "320", "method_endline": "338", "method_complexity": {"method_NLOC": "18", "method_CCN": "3", "method_NToken": "167", "method_nesting_level": "2"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_symbol.py", "file_new_name": "tests\\python\\unittest\\test_symbol.py", "file_complexity": {"file_NLOC": "298", "file_CCN": "41", "file_NToken": "3723"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "393,394,395,396,397,398,399,400,401,402,403,404,405", "deleted_lines": null, "method_info": {"method_name": "test_transpose_nullop", "method_params": "", "method_startline": "393", "method_endline": "405", "method_complexity": {"method_NLOC": "11", "method_CCN": "2", "method_NToken": "144", "method_nesting_level": "0"}}}}}}}}