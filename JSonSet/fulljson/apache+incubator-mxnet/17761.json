{"BR": {"BR_id": "17761", "BR_author": "cepera-ang", "BRopenT": "2020-03-04T16:07:09Z", "BRcloseT": "2020-03-05T17:10:44Z", "BR_text": {"BRsummary": "cmake stuck in infinite loop at configuration if nvcc is not found", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n I'm trying to build Mxnet from source using this guide <denchmark-link:https://mxnet.apache.org/get_started/ubuntu_setup>https://mxnet.apache.org/get_started/ubuntu_setup</denchmark-link>\n  and at running  command the build is stuck at infinite loop.\n <denchmark-h:h3>Error Message</denchmark-h>\n \n <denchmark-code>\u279c  build git:(master) cmake ..                                            \n -- The C compiler identification is GNU 8.3.0\n -- The CXX compiler identification is GNU 8.3.0\n -- Check for working C compiler: /usr/local/bin/cc\n -- Check for working C compiler: /usr/local/bin/cc -- works\n -- Detecting C compiler ABI info\n -- Detecting C compiler ABI info - done\n -- Detecting C compile features\n -- Detecting C compile features - done\n -- Check for working CXX compiler: /usr/local/bin/c++\n -- Check for working CXX compiler: /usr/local/bin/c++ -- works\n -- Detecting CXX compiler ABI info\n -- Detecting CXX compiler ABI info - done\n -- Detecting CXX compile features\n -- Detecting CXX compile features - done\n -- CMAKE_CROSSCOMPILING FALSE\n -- CMAKE_HOST_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_NAME Linux\n -- CMake version '3.13.4' using generator 'Unix Makefiles'\n -- Looking for a CUDA compiler\n -- Looking for a CUDA compiler - /usr/local/bin/nvcc\n CMake Warning at CMakeLists.txt:95 (message):\n   CMAKE_CUDA_COMPILER guessed: /usr/local/cuda/bin/nvcc\n \n \n -- The CUDA compiler identification is NVIDIA 10.1.243\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works\n -- Detecting CUDA compiler ABI info\n -- Detecting CUDA compiler ABI info - done\n -- Performing Test SUPPORT_CXX11\n -- Performing Test SUPPORT_CXX11 - Success\n -- Performing Test SUPPORT_CXX0X\n -- Performing Test SUPPORT_CXX0X - Success\n -- CMAKE_BUILD_TYPE is unset, defaulting to Release\n -- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value `OFF`\n -- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value `OFF`\n -- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value `OFF`\n -- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value `STATIC`\n -- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``\n -- Looking for pthread.h\n -- Looking for pthread.h - found\n -- Looking for pthread_create\n -- Looking for pthread_create - not found\n -- Looking for pthread_create in pthreads\n -- Looking for pthread_create in pthreads - not found\n -- Looking for pthread_create in pthread\n -- Looking for pthread_create in pthread - found\n -- Found Threads: TRUE  \n -- Found OpenMP_C: -fopenmp (found version \"4.5\") \n -- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n -- Found OpenMP: TRUE (found version \"4.5\")  \n -- GPU support is disabled\n -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \n -- Found Git: /usr/bin/git (found version \"2.20.1\") \n -- Intel(R) VTune(TM) Amplifier JIT profiling disabled\n -- Found OpenBLAS libraries: /usr/lib/x86_64-linux-gnu/libopenblas.so\n -- Found OpenBLAS include: /usr/include/x86_64-linux-gnu\n -- OpenCV Disabled\n -- Performing Test OPENMP_HAVE_WERROR_FLAG\n -- Performing Test OPENMP_HAVE_WERROR_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG - Success\n -- Found PythonInterp: /usr/bin/python (found version \"2.7.17\") \n -- Cannot find llvm-lit.\n -- Please put llvm-lit in your PATH, set OPENMP_LLVM_LIT_EXECUTABLE to its full path, or point OPENMP_LLVM_TOOLS_DIR to its directory.\n CMake Warning at 3rdparty/openmp/cmake/OpenMPTesting.cmake:22 (message):\n   The check targets will not be available!\n Call Stack (most recent call first):\n   3rdparty/openmp/cmake/OpenMPTesting.cmake:40 (find_standalone_test_dependencies)\n   3rdparty/openmp/CMakeLists.txt:49 (include)\n \n \n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG - Success\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_M32_FLAG\n -- Performing Test LIBOMP_HAVE_M32_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_X_FLAG\n -- Performing Test LIBOMP_HAVE_X_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG - Success\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG - Success\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FINI_FLAG\n -- Performing Test LIBOMP_HAVE_FINI_FLAG - Success\n -- Found Perl: /usr/bin/perl (found version \"5.28.1\") \n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS\n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS - Success\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS - Success\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE - Success\n -- Looking for include files windows.h, psapi.h\n -- Looking for include files windows.h, psapi.h - not found\n -- Looking for EnumProcessModules in psapi\n -- Looking for EnumProcessModules in psapi - not found\n -- LIBOMP: Operating System     -- Linux\n -- LIBOMP: Target Architecture  -- x86_64\n -- LIBOMP: Build Type           -- Release\n -- LIBOMP: Library Kind         -- SHARED\n -- LIBOMP: Library Type         -- normal\n -- LIBOMP: Fortran Modules      -- FALSE\n -- LIBOMP: Build                -- 20140926\n -- LIBOMP: Use Stats-gathering  -- FALSE\n -- LIBOMP: Use Debugger-support -- FALSE\n -- LIBOMP: Use ITT notify       -- TRUE\n -- LIBOMP: Use OMPT-support     -- TRUE\n -- LIBOMP: Use OMPT-optional  -- TRUE\n -- LIBOMP: Use Adaptive locks   -- TRUE\n -- LIBOMP: Use quad precision   -- TRUE\n -- LIBOMP: Use TSAN-support     -- FALSE\n -- LIBOMP: Use Hwloc library    -- FALSE\n -- Looking for sqrt in m\n -- Looking for sqrt in m - found\n -- Looking for __atomic_load_1\n -- Looking for __atomic_load_1 - not found\n -- Looking for __atomic_load_1 in atomic\n -- Looking for __atomic_load_1 in atomic - found\n -- check-libomp does nothing.\n -- check-ompt does nothing.\n -- check-openmp does nothing.\n USE_LAPACK is ON\n CMake Warning at 3rdparty/googletest/googletest/CMakeLists.txt:47 (project):\n   VERSION keyword not followed by a value or was followed by a value that\n   expanded to nothing.\n \n \n -- Found GTest: gtest  \n -- Found CUDNN: /usr/lib/x86_64-linux-gnu/libcudnn.so  \n -- Found OpenMP_C: -fopenmp  \n -- Found OpenMP_CXX: -fopenmp  \n -- Found OpenMP: TRUE   \n -- Looking for clock_gettime in rt\n -- Looking for clock_gettime in rt - found\n -- Looking for fopen64\n -- Looking for fopen64 - not found\n -- Looking for C++ include cxxabi.h\n -- Looking for C++ include cxxabi.h - found\n -- Looking for nanosleep\n -- Looking for nanosleep - found\n -- Looking for backtrace\n -- Looking for backtrace - found\n -- backtrace facility detected in default set of libraries\n -- Found Backtrace: /usr/include  \n -- Check if the system is big endian\n -- Searching 16 bit integer\n -- Looking for sys/types.h\n -- Looking for sys/types.h - found\n -- Looking for stdint.h\n -- Looking for stdint.h - found\n -- Looking for stddef.h\n -- Looking for stddef.h - found\n -- Check size of unsigned short\n -- Check size of unsigned short - done\n -- Using unsigned short\n -- Check if the system is big endian - little endian\n -- /mnt/data/mxnet/3rdparty/dmlc-core/cmake/build_config.h.in -> include/dmlc/build_config.h\n -- Performing Test SUPPORT_MSSE2\n -- Performing Test SUPPORT_MSSE2 - Success\n -- CUDA: Using the following NVCC architecture flags -gencode;arch=compute_61,code=sm_61\n -- Found CUDAToolkit: /usr/local/cuda/include (found version \"10.1.243\") \n -- Found NCCL: /usr/include  \n -- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\n -- Performing Test SUPPORT_MSSE3\n -- Performing Test SUPPORT_MSSE3 - Success\n -- Found Python3: /usr/bin/python3.7 (found version \"3.7.5\") found components:  Interpreter \n CMake Warning at CMakeLists.txt:851 (message):\n   OpenCV_VERSION_MAJOR: , version 3 with imgcodecs is required for im2rec,\n   im2rec will not be available\n \n \n CMake Warning at example/image-classification/predict-cpp/CMakeLists.txt:3 (message):\n   OpenCV version >= 3 should be enabled and found to build image\n   classification example, skipping...\n \n \n -- Configuring done\n \n You have changed variables that require your cache to be deleted.\n Configure will be re-run and you may have to reset some variables.\n The following variables have changed:\n CMAKE_CUDA_COMPILER= /usr/local/bin/nvcc\n CMAKE_CUDA_COMPILER= /usr/local/bin/nvcc\n </denchmark-code>\n \n Last lines look relevant.\n And than the process repeats itself indefinitely:\n <denchmark-code>-- The C compiler identification is GNU 8.3.0\n -- The CXX compiler identification is GNU 8.3.0\n -- Check for working C compiler: /usr/local/bin/cc\n -- Check for working C compiler: /usr/local/bin/cc -- works\n ...\n </denchmark-code>\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n Follow <denchmark-link:https://mxnet.apache.org/get_started/ubuntu_setup>https://mxnet.apache.org/get_started/ubuntu_setup</denchmark-link>\n \n <denchmark-h:h3>Steps to reproduce</denchmark-h>\n \n (Paste the commands you ran that produced the error.)\n 1.Install prerequisites\n 2. Clone repo and copy config\n <denchmark-code>git clone --recursive https://github.com/apache/incubator-mxnet.git mxnet\n cd mxnet\n cp config/linux_gpu.cmake config.cmake  # or config/linux_gpu.cmake for build with CUDA\n </denchmark-code>\n \n The only change in config I did -- I disabled OpenCV.\n \n Run config:\n \n <denchmark-code>rm -rf build\n mkdir -p build && cd build\n cmake ..\n </denchmark-code>\n \n <denchmark-h:h2>What have you tried to solve it?</denchmark-h>\n \n \n \n I uncommented CMAKE_CUDA_COMPILER line and removed cache from there\n set(CMAKE_CUDA_COMPILER \"nvcc\" STRING \"Cuda compiler (nvcc)\")\n \n \n And it's building as it should.\n \n \n <denchmark-h:h2>Environment</denchmark-h>\n \n We recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\n <denchmark-code>(base) \u279c  ~ curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\n ----------Python Info----------\n Version      : 3.7.4\n Compiler     : GCC 7.3.0\n Build        : ('default', 'Aug 13 2019 20:35:49')\n Arch         : ('64bit', 'ELF')\n ------------Pip Info-----------\n Version      : 20.0.2\n Directory    : /home/cepera/miniconda3/lib/python3.7/site-packages/pip\n ----------MXNet Info-----------\n No MXNet installed.\n ----------System Info----------\n Platform     : Linux-5.3.0-29-generic-x86_64-with-debian-buster-sid\n system       : Linux\n node         : server\n release      : 5.3.0-29-generic\n version      : #31-Ubuntu SMP Fri Jan 17 17:27:26 UTC 2020\n ----------Hardware Info----------\n machine      : x86_64\n processor    : x86_64\n Architecture:                    x86_64\n CPU op-mode(s):                  32-bit, 64-bit\n Byte Order:                      Little Endian\n Address sizes:                   46 bits physical, 48 bits virtual\n CPU(s):                          32\n On-line CPU(s) list:             0-31\n Thread(s) per core:              2\n Core(s) per socket:              8\n Socket(s):                       2\n NUMA node(s):                    2\n Vendor ID:                       GenuineIntel\n CPU family:                      6\n Model:                           45\n Model name:                      Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz\n Stepping:                        7\n CPU MHz:                         2992.801\n CPU max MHz:                     3300.0000\n CPU min MHz:                     1200.0000\n BogoMIPS:                        5187.52\n Virtualization:                  VT-x\n L1d cache:                       512 KiB\n L1i cache:                       512 KiB\n L2 cache:                        4 MiB\n L3 cache:                        40 MiB\n NUMA node0 CPU(s):               0-7,16-23\n NUMA node1 CPU(s):               8-15,24-31\n Vulnerability Itlb multihit:     KVM: Mitigation: Split huge pages\n Vulnerability L1tf:              Mitigation; PTE Inversion; VMX conditional cache flushes, SMT vulnerable\n Vulnerability Mds:               Mitigation; Clear CPU buffers; SMT vulnerable\n Vulnerability Meltdown:          Mitigation; PTI\n Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\n Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\n Vulnerability Spectre v2:        Mitigation; Full generic retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling\n Vulnerability Tsx async abort:   Not affected\n Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 \n                                  ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonsto\n                                  p_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca ss\n                                  e4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb pti ssbd ibrs ibpb stibp tpr_shadow \n                                  vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts md_clear flush_l1d\n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0396 sec, LOAD: 0.7047 sec.\n Timing for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0013 sec, LOAD: 0.6802 sec.\n Timing for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0542 sec, LOAD: 0.6213 sec.\n Timing for D2L: http://d2l.ai, DNS: 0.0374 sec, LOAD: 0.1000 sec.\n Timing for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0410 sec, LOAD: 0.3118 sec.\n Timing for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0624 sec, LOAD: 0.8390 sec.\n Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0325 sec, LOAD: 0.8983 sec.\n Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0351 sec, LOAD: 0.9956 sec.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "cepera-ang", "commentT": "2020-03-04T18:17:09Z", "comment_text": "\n \t\tPlease try again with latest master. cf <denchmark-link:https://github.com/apache/incubator-mxnet/commit/64d8e0f598b34ed2c3c3017491d851a5cf4d4acd>64d8e0f</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "cepera-ang", "commentT": "2020-03-04T18:48:52Z", "comment_text": "\n \t\tNope, it's still looping on my system\n Fresh cloned latest master, config: linux_gpu\n <denchmark-code>(base) \u279c  build git:(master) git rev-parse HEAD\n \n 64d8e0f598b34ed2c3c3017491d851a5cf4d4acd\n \n (base) \u279c  build git:(master) cmake -GNinja ..                            \n -- The C compiler identification is GNU 8.3.0\n -- The CXX compiler identification is GNU 8.3.0\n -- Check for working C compiler: /usr/local/bin/cc\n -- Check for working C compiler: /usr/local/bin/cc -- works\n -- Detecting C compiler ABI info\n -- Detecting C compiler ABI info - done\n -- Detecting C compile features\n -- Detecting C compile features - done\n -- Check for working CXX compiler: /usr/local/bin/c++\n -- Check for working CXX compiler: /usr/local/bin/c++ -- works\n -- Detecting CXX compiler ABI info\n -- Detecting CXX compiler ABI info - done\n -- Detecting CXX compile features\n -- Detecting CXX compile features - done\n -- CMAKE_CROSSCOMPILING FALSE\n -- CMAKE_HOST_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_NAME Linux\n -- CMake version '3.13.4' using generator 'Ninja'\n -- Looking for a CUDA compiler\n -- Looking for a CUDA compiler - /usr/local/bin/nvcc\n CMake Warning at CMakeLists.txt:95 (message):\n   CMAKE_CUDA_COMPILER guessed: /usr/local/cuda/bin/nvcc\n \n \n -- The CUDA compiler identification is NVIDIA 10.1.243\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works\n -- Detecting CUDA compiler ABI info\n -- Detecting CUDA compiler ABI info - done\n -- Performing Test SUPPORT_CXX11\n -- Performing Test SUPPORT_CXX11 - Success\n -- Performing Test SUPPORT_CXX0X\n -- Performing Test SUPPORT_CXX0X - Success\n -- CMAKE_BUILD_TYPE is unset, defaulting to Release\n -- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value `OFF`\n -- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value `OFF`\n -- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value `OFF`\n -- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value `STATIC`\n -- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``\n -- Looking for pthread.h\n -- Looking for pthread.h - found\n -- Looking for pthread_create\n -- Looking for pthread_create - not found\n -- Looking for pthread_create in pthreads\n -- Looking for pthread_create in pthreads - not found\n -- Looking for pthread_create in pthread\n -- Looking for pthread_create in pthread - found\n -- Found Threads: TRUE  \n -- Found OpenMP_C: -fopenmp (found version \"4.5\") \n -- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n -- Found OpenMP: TRUE (found version \"4.5\")  \n -- GPU support is disabled\n -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \n -- Found Git: /usr/bin/git (found version \"2.20.1\") \n -- Intel(R) VTune(TM) Amplifier JIT profiling disabled\n -- Found OpenBLAS libraries: /usr/lib/x86_64-linux-gnu/libopenblas.so\n -- Found OpenBLAS include: /usr/include/x86_64-linux-gnu\n -- Found OpenCV: /home/cepera/miniconda3 (found version \"4.2.0\") found components:  core highgui imgproc imgcodecs \n -- OpenCV 4.2.0 found (/home/cepera/miniconda3/lib/cmake/opencv4)\n --  OpenCV_LIBS=opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs\n -- Performing Test OPENMP_HAVE_WERROR_FLAG\n -- Performing Test OPENMP_HAVE_WERROR_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG - Success\n -- Found PythonInterp: /home/cepera/miniconda3/bin/python (found version \"3.7.4\") \n -- Cannot find llvm-lit.\n -- Please put llvm-lit in your PATH, set OPENMP_LLVM_LIT_EXECUTABLE to its full path, or point OPENMP_LLVM_TOOLS_DIR to its directory.\n CMake Warning at 3rdparty/openmp/cmake/OpenMPTesting.cmake:22 (message):\n   The check targets will not be available!\n Call Stack (most recent call first):\n   3rdparty/openmp/cmake/OpenMPTesting.cmake:40 (find_standalone_test_dependencies)\n   3rdparty/openmp/CMakeLists.txt:49 (include)\n \n \n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG - Success\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_M32_FLAG\n -- Performing Test LIBOMP_HAVE_M32_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_X_FLAG\n -- Performing Test LIBOMP_HAVE_X_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG - Success\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG - Success\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FINI_FLAG\n -- Performing Test LIBOMP_HAVE_FINI_FLAG - Success\n -- Found Perl: /usr/bin/perl (found version \"5.28.1\") \n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS\n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS - Success\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS - Success\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE - Success\n -- Looking for include files windows.h, psapi.h\n -- Looking for include files windows.h, psapi.h - not found\n -- Looking for EnumProcessModules in psapi\n -- Looking for EnumProcessModules in psapi - not found\n -- LIBOMP: Operating System     -- Linux\n -- LIBOMP: Target Architecture  -- x86_64\n -- LIBOMP: Build Type           -- Release\n -- LIBOMP: Library Kind         -- SHARED\n -- LIBOMP: Library Type         -- normal\n -- LIBOMP: Fortran Modules      -- FALSE\n -- LIBOMP: Build                -- 20140926\n -- LIBOMP: Use Stats-gathering  -- FALSE\n -- LIBOMP: Use Debugger-support -- FALSE\n -- LIBOMP: Use ITT notify       -- TRUE\n -- LIBOMP: Use OMPT-support     -- TRUE\n -- LIBOMP: Use OMPT-optional  -- TRUE\n -- LIBOMP: Use Adaptive locks   -- TRUE\n -- LIBOMP: Use quad precision   -- TRUE\n -- LIBOMP: Use TSAN-support     -- FALSE\n -- LIBOMP: Use Hwloc library    -- FALSE\n -- Looking for sqrt in m\n -- Looking for sqrt in m - found\n -- Looking for __atomic_load_1\n -- Looking for __atomic_load_1 - not found\n -- Looking for __atomic_load_1 in atomic\n -- Looking for __atomic_load_1 in atomic - found\n -- check-libomp does nothing.\n -- check-ompt does nothing.\n -- check-openmp does nothing.\n USE_LAPACK is ON\n CMake Warning at 3rdparty/googletest/googletest/CMakeLists.txt:47 (project):\n   VERSION keyword not followed by a value or was followed by a value that\n   expanded to nothing.\n \n \n -- Found GTest: gtest  \n -- Found CUDNN: /usr/lib/x86_64-linux-gnu/libcudnn.so  \n -- Found OpenMP_C: -fopenmp  \n -- Found OpenMP_CXX: -fopenmp  \n -- Found OpenMP: TRUE   \n -- Looking for clock_gettime in rt\n -- Looking for clock_gettime in rt - found\n -- Looking for fopen64\n -- Looking for fopen64 - not found\n -- Looking for C++ include cxxabi.h\n -- Looking for C++ include cxxabi.h - found\n -- Looking for nanosleep\n -- Looking for nanosleep - found\n -- Looking for backtrace\n -- Looking for backtrace - found\n -- backtrace facility detected in default set of libraries\n -- Found Backtrace: /usr/include  \n -- Check if the system is big endian\n -- Searching 16 bit integer\n -- Looking for sys/types.h\n -- Looking for sys/types.h - found\n -- Looking for stdint.h\n -- Looking for stdint.h - found\n -- Looking for stddef.h\n -- Looking for stddef.h - found\n -- Check size of unsigned short\n -- Check size of unsigned short - done\n -- Using unsigned short\n -- Check if the system is big endian - little endian\n -- /home/cepera/tmp/mxnet/3rdparty/dmlc-core/cmake/build_config.h.in -> include/dmlc/build_config.h\n -- Performing Test SUPPORT_MSSE2\n -- Performing Test SUPPORT_MSSE2 - Success\n -- Autodetected CUDA architecture(s):  6.1 6.1 6.1\n -- CUDA: Using the following NVCC architecture flags -gencode;arch=compute_61,code=sm_61\n -- Found CUDAToolkit: /usr/local/cuda/include (found version \"10.1.243\") \n -- Found NCCL: /usr/include  \n -- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\n -- Performing Test SUPPORT_MSSE3\n -- Performing Test SUPPORT_MSSE3 - Success\n -- Determining F16C support\n -- Performing Test COMPILER_SUPPORT_MF16C\n -- Performing Test COMPILER_SUPPORT_MF16C - Success\n CPU does not support F16C instructions\n -- Found Python3: /home/cepera/miniconda3/bin/python3.7 (found version \"3.7.4\") found components:  Interpreter \n -- Configuring done\n You have changed variables that require your cache to be deleted.\n Configure will be re-run and you may have to reset some variables.\n The following variables have changed:\n CMAKE_CUDA_COMPILER= /usr/local/bin/nvcc\n CMAKE_CUDA_COMPILER= /usr/local/bin/nvcc\n \n -- The C compiler identification is GNU 8.3.0\n -- The CXX compiler identification is GNU 8.3.0\n -- Check for working C compiler: /usr/local/bin/cc\n -- Check for working C compiler: /usr/local/bin/cc -- works\n -- Detecting C compiler ABI info\n -- Detecting C compiler ABI info - done\n -- Detecting C compile features\n -- Detecting C compile features - done\n -- Check for working CXX compiler: /usr/local/bin/c++\n -- Check for working CXX compiler: /usr/local/bin/c++ -- works\n -- Detecting CXX compiler ABI info\n -- Detecting CXX compiler ABI info - done\n -- Detecting CXX compile features\n -- Detecting CXX compile features - done\n -- CMAKE_CROSSCOMPILING FALSE\n -- CMAKE_HOST_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_NAME Linux\n -- CMake version '3.13.4' using generator 'Ninja'\n CMake Warning at CMakeLists.txt:95 (message):\n   CMAKE_CUDA_COMPILER guessed: /usr/local/cuda/bin/nvcc\n \n \n -- The CUDA compiler identification is NVIDIA 10.1.243\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works\n -- Detecting CUDA compiler ABI info\n -- Detecting CUDA compiler ABI info - done\n -- Performing Test SUPPORT_CXX11\n -- Performing Test SUPPORT_CXX11 - Success\n -- Performing Test SUPPORT_CXX0X\n -- Performing Test SUPPORT_CXX0X - Success\n -- CMAKE_BUILD_TYPE is unset, defaulting to Release\n -- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value `OFF`\n -- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value `OFF`\n -- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value `OFF`\n -- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value `STATIC`\n -- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``\n -- Looking for pthread.h\n -- Looking for pthread.h - found\n -- Looking for pthread_create\n -- Looking for pthread_create - not found\n -- Looking for pthread_create in pthreads\n -- Looking for pthread_create in pthreads - not found\n -- Looking for pthread_create in pthread\n -- Looking for pthread_create in pthread - found\n -- Found Threads: TRUE  \n -- Found OpenMP_C: -fopenmp (found version \"4.5\") \n -- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n -- Found OpenMP: TRUE (found version \"4.5\")  \n -- GPU support is disabled\n -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \n -- Found Git: /usr/bin/git (found version \"2.20.1\") \n -- Intel(R) VTune(TM) Amplifier JIT profiling disabled\n -- Found OpenBLAS libraries: /usr/lib/x86_64-linux-gnu/libopenblas.so\n -- Found OpenBLAS include: /usr/include/x86_64-linux-gnu\n -- Found OpenCV: /home/cepera/miniconda3 (found version \"4.2.0\") found components:  core highgui imgproc imgcodecs \n -- OpenCV 4.2.0 found (/home/cepera/miniconda3/lib/cmake/opencv4)\n --  OpenCV_LIBS=opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs\n -- Performing Test OPENMP_HAVE_WERROR_FLAG\n -- Performing Test OPENMP_HAVE_WERROR_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG - Success\n -- Found PythonInterp: /home/cepera/miniconda3/bin/python (found version \"3.7.4\") \n -- Cannot find llvm-lit.\n -- Please put llvm-lit in your PATH, set OPENMP_LLVM_LIT_EXECUTABLE to its full path, or point OPENMP_LLVM_TOOLS_DIR to its directory.\n CMake Warning at 3rdparty/openmp/cmake/OpenMPTesting.cmake:22 (message):\n   The check targets will not be available!\n Call Stack (most recent call first):\n   3rdparty/openmp/cmake/OpenMPTesting.cmake:40 (find_standalone_test_dependencies)\n   3rdparty/openmp/CMakeLists.txt:49 (include)\n \n \n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG - Success\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_M32_FLAG\n -- Performing Test LIBOMP_HAVE_M32_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_X_FLAG\n -- Performing Test LIBOMP_HAVE_X_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG - Success\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG - Success\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FINI_FLAG\n -- Performing Test LIBOMP_HAVE_FINI_FLAG - Success\n -- Found Perl: /usr/bin/perl (found version \"5.28.1\") \n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS\n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS - Success\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS - Success\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE - Success\n -- Looking for include files windows.h, psapi.h\n -- Looking for include files windows.h, psapi.h - not found\n -- Looking for EnumProcessModules in psapi\n -- Looking for EnumProcessModules in psapi - not found\n -- LIBOMP: Operating System     -- Linux\n -- LIBOMP: Target Architecture  -- x86_64\n -- LIBOMP: Build Type           -- Release\n -- LIBOMP: Library Kind         -- SHARED\n -- LIBOMP: Library Type         -- normal\n -- LIBOMP: Fortran Modules      -- FALSE\n -- LIBOMP: Build                -- 20140926\n -- LIBOMP: Use Stats-gathering  -- FALSE\n -- LIBOMP: Use Debugger-support -- FALSE\n -- LIBOMP: Use ITT notify       -- TRUE\n -- LIBOMP: Use OMPT-support     -- TRUE\n -- LIBOMP: Use OMPT-optional  -- TRUE\n -- LIBOMP: Use Adaptive locks   -- TRUE\n -- LIBOMP: Use quad precision   -- TRUE\n -- LIBOMP: Use TSAN-support     -- FALSE\n -- LIBOMP: Use Hwloc library    -- FALSE\n -- Looking for sqrt in m\n -- Looking for sqrt in m - found\n -- Looking for __atomic_load_1\n -- Looking for __atomic_load_1 - not found\n -- Looking for __atomic_load_1 in atomic\n -- Looking for __atomic_load_1 in atomic - found\n -- check-libomp does nothing.\n -- check-ompt does nothing.\n -- check-openmp does nothing.\n USE_LAPACK is ON\n CMake Warning at 3rdparty/googletest/googletest/CMakeLists.txt:47 (project):\n   VERSION keyword not followed by a value or was followed by a value that\n   expanded to nothing.\n \n \n -- Found GTest: gtest  \n -- Found CUDNN: /usr/lib/x86_64-linux-gnu/libcudnn.so  \n -- Found OpenMP_C: -fopenmp  \n -- Found OpenMP_CXX: -fopenmp  \n -- Found OpenMP: TRUE   \n -- Looking for clock_gettime in rt\n -- Looking for clock_gettime in rt - found\n -- Looking for fopen64\n -- Looking for fopen64 - not found\n -- Looking for C++ include cxxabi.h\n -- Looking for C++ include cxxabi.h - found\n -- Looking for nanosleep\n -- Looking for nanosleep - found\n -- Looking for backtrace\n -- Looking for backtrace - found\n -- backtrace facility detected in default set of libraries\n -- Found Backtrace: /usr/include  \n -- Check if the system is big endian\n -- Searching 16 bit integer\n -- Looking for sys/types.h\n -- Looking for sys/types.h - found\n -- Looking for stdint.h\n -- Looking for stdint.h - found\n -- Looking for stddef.h\n -- Looking for stddef.h - found\n -- Check size of unsigned short\n -- Check size of unsigned short - done\n -- Using unsigned short\n -- Check if the system is big endian - little endian\n -- /home/cepera/tmp/mxnet/3rdparty/dmlc-core/cmake/build_config.h.in -> include/dmlc/build_config.h\n -- Performing Test SUPPORT_MSSE2\n -- Performing Test SUPPORT_MSSE2 - Success\n -- Autodetected CUDA architecture(s):  6.1 6.1 6.1\n -- CUDA: Using the following NVCC architecture flags -gencode;arch=compute_61,code=sm_61\n -- Found CUDAToolkit: /usr/local/cuda/include (found version \"10.1.243\") \n -- Found NCCL: /usr/include  \n -- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\n -- Performing Test SUPPORT_MSSE3\n -- Performing Test SUPPORT_MSSE3 - Success\n -- Determining F16C support\n -- Performing Test COMPILER_SUPPORT_MF16C\n -- Performing Test COMPILER_SUPPORT_MF16C - Success\n CPU does not support F16C instructions\n -- Found Python3: /home/cepera/miniconda3/bin/python3.7 (found version \"3.7.4\") found components:  Interpreter \n -- Configuring done\n You have changed variables that require your cache to be deleted.\n Configure will be re-run and you may have to reset some variables.\n The following variables have changed:\n CMAKE_CUDA_COMPILER= /usr/local/bin/nvcc\n CMAKE_CUDA_COMPILER= /usr/local/bin/nvcc\n \n -- The C compiler identification is GNU 8.3.0\n -- The CXX compiler identification is GNU 8.3.0\n -- Check for working C compiler: /usr/local/bin/cc\n -- Check for working C compiler: /usr/local/bin/cc -- works\n -- Detecting C compiler ABI info\n -- Detecting C compiler ABI info - done\n -- Detecting C compile features\n -- Detecting C compile features - done\n -- Check for working CXX compiler: /usr/local/bin/c++\n -- Check for working CXX compiler: /usr/local/bin/c++ -- works\n -- Detecting CXX compiler ABI info\n -- Detecting CXX compiler ABI info - done\n -- Detecting CXX compile features\n -- Detecting CXX compile features - done\n -- CMAKE_CROSSCOMPILING FALSE\n -- CMAKE_HOST_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_NAME Linux\n -- CMake version '3.13.4' using generator 'Ninja'\n CMake Warning at CMakeLists.txt:95 (message):\n   CMAKE_CUDA_COMPILER guessed: /usr/local/cuda/bin/nvcc\n \n \n -- The CUDA compiler identification is NVIDIA 10.1.243\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works\n -- Detecting CUDA compiler ABI info\n -- Detecting CUDA compiler ABI info - done\n -- Performing Test SUPPORT_CXX11\n -- Performing Test SUPPORT_CXX11 - Success\n -- Performing Test SUPPORT_CXX0X\n -- Performing Test SUPPORT_CXX0X - Success\n -- CMAKE_BUILD_TYPE is unset, defaulting to Release\n -- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value `OFF`\n -- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value `OFF`\n -- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value `OFF`\n -- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value `STATIC`\n -- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``\n -- Looking for pthread.h\n -- Looking for pthread.h - found\n -- Looking for pthread_create\n -- Looking for pthread_create - not found\n -- Looking for pthread_create in pthreads\n -- Looking for pthread_create in pthreads - not found\n -- Looking for pthread_create in pthread\n -- Looking for pthread_create in pthread - found\n -- Found Threads: TRUE  \n -- Found OpenMP_C: -fopenmp (found version \"4.5\") \n -- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n -- Found OpenMP: TRUE (found version \"4.5\")  \n -- GPU support is disabled\n -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \n -- Found Git: /usr/bin/git (found version \"2.20.1\") \n -- Intel(R) VTune(TM) Amplifier JIT profiling disabled\n -- Found OpenBLAS libraries: /usr/lib/x86_64-linux-gnu/libopenblas.so\n -- Found OpenBLAS include: /usr/include/x86_64-linux-gnu\n -- Found OpenCV: /home/cepera/miniconda3 (found version \"4.2.0\") found components:  core highgui imgproc imgcodecs \n -- OpenCV 4.2.0 found (/home/cepera/miniconda3/lib/cmake/opencv4)\n --  OpenCV_LIBS=opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs\n -- Performing Test OPENMP_HAVE_WERROR_FLAG\n -- Performing Test OPENMP_HAVE_WERROR_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG - Success\n -- Found PythonInterp: /home/cepera/miniconda3/bin/python (found version \"3.7.4\") \n -- Cannot find llvm-lit.\n -- Please put llvm-lit in your PATH, set OPENMP_LLVM_LIT_EXECUTABLE to its full path, or point OPENMP_LLVM_TOOLS_DIR to its directory.\n CMake Warning at 3rdparty/openmp/cmake/OpenMPTesting.cmake:22 (message):\n   The check targets will not be available!\n Call Stack (most recent call first):\n   3rdparty/openmp/cmake/OpenMPTesting.cmake:40 (find_standalone_test_dependencies)\n   3rdparty/openmp/CMakeLists.txt:49 (include)\n \n \n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG - Success\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_M32_FLAG\n -- Performing Test LIBOMP_HAVE_M32_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_X_FLAG\n -- Performing Test LIBOMP_HAVE_X_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG - Success\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG - Success\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FINI_FLAG\n -- Performing Test LIBOMP_HAVE_FINI_FLAG - Success\n -- Found Perl: /usr/bin/perl (found version \"5.28.1\") \n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS\n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS - Success\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS - Success\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE - Success\n -- Looking for include files windows.h, psapi.h\n -- Looking for include files windows.h, psapi.h - not found\n -- Looking for EnumProcessModules in psapi\n -- Looking for EnumProcessModules in psapi - not found\n -- LIBOMP: Operating System     -- Linux\n -- LIBOMP: Target Architecture  -- x86_64\n -- LIBOMP: Build Type           -- Release\n -- LIBOMP: Library Kind         -- SHARED\n -- LIBOMP: Library Type         -- normal\n -- LIBOMP: Fortran Modules      -- FALSE\n -- LIBOMP: Build                -- 20140926\n -- LIBOMP: Use Stats-gathering  -- FALSE\n -- LIBOMP: Use Debugger-support -- FALSE\n -- LIBOMP: Use ITT notify       -- TRUE\n -- LIBOMP: Use OMPT-support     -- TRUE\n -- LIBOMP: Use OMPT-optional  -- TRUE\n -- LIBOMP: Use Adaptive locks   -- TRUE\n -- LIBOMP: Use quad precision   -- TRUE\n -- LIBOMP: Use TSAN-support     -- FALSE\n -- LIBOMP: Use Hwloc library    -- FALSE\n -- Looking for sqrt in m\n -- Looking for sqrt in m - found\n -- Looking for __atomic_load_1\n -- Looking for __atomic_load_1 - not found\n -- Looking for __atomic_load_1 in atomic\n -- Looking for __atomic_load_1 in atomic - found\n -- check-libomp does nothing.\n -- check-ompt does nothing.\n -- check-openmp does nothing.\n USE_LAPACK is ON\n CMake Warning at 3rdparty/googletest/googletest/CMakeLists.txt:47 (project):\n   VERSION keyword not followed by a value or was followed by a value that\n   expanded to nothing.\n \n \n -- Found GTest: gtest  \n -- Found CUDNN: /usr/lib/x86_64-linux-gnu/libcudnn.so  \n -- Found OpenMP_C: -fopenmp  \n -- Found OpenMP_CXX: -fopenmp  \n -- Found OpenMP: TRUE   \n -- Looking for clock_gettime in rt\n -- Looking for clock_gettime in rt - found\n -- Looking for fopen64\n -- Looking for fopen64 - not found\n -- Looking for C++ include cxxabi.h\n -- Looking for C++ include cxxabi.h - found\n -- Looking for nanosleep\n -- Looking for nanosleep - found\n -- Looking for backtrace\n -- Looking for backtrace - found\n -- backtrace facility detected in default set of libraries\n -- Found Backtrace: /usr/include  \n -- Check if the system is big endian\n -- Searching 16 bit integer\n -- Looking for sys/types.h\n -- Looking for sys/types.h - found\n -- Looking for stdint.h\n -- Looking for stdint.h - found\n -- Looking for stddef.h\n -- Looking for stddef.h - found\n -- Check size of unsigned short\n -- Check size of unsigned short - done\n -- Using unsigned short\n -- Check if the system is big endian - little endian\n -- /home/cepera/tmp/mxnet/3rdparty/dmlc-core/cmake/build_config.h.in -> include/dmlc/build_config.h\n -- Performing Test SUPPORT_MSSE2\n -- Performing Test SUPPORT_MSSE2 - Success\n ^C\n (base) \u279c  build git:(master) \n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "cepera-ang", "commentT": "2020-03-04T18:52:06Z", "comment_text": "\n \t\twhat version of cmake are you using?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "cepera-ang", "commentT": "2020-03-04T18:57:10Z", "comment_text": "\n \t\t```\n (base) \u279c  ~ cmake --version\n cmake version 3.13.4\n ```\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Wed, 4 Mar 2020 at 21:52, Leonard Lausen ***@***.***> wrote:\n  what version of cmake are you using?\n \n  \u2014\n  You are receiving this because you authored the thread.\n  Reply to this email directly, view it on GitHub\n  <#17761?email_source=notifications&email_token=ACRP6O3MBV2YVS3ZR7F635TRF2PNPA5CNFSM4LBL7W2KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENZSE2Q#issuecomment-594748010>,\n  or unsubscribe\n  <https://github.com/notifications/unsubscribe-auth/ACRP6O5WCJLGISQOA35Z7LDRF2PNPANCNFSM4LBL7W2A>\n  .\n \n \n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "cepera-ang", "commentT": "2020-03-04T20:23:30Z", "comment_text": "\n \t\tWe recently added a convenience functionality in <denchmark-link:https://github.com/apache/incubator-mxnet/pull/17293>#17293</denchmark-link>\n  that attempts to do the right thing even if cuda is not installed correctly. Seems that leads to an infinite loop unfortunately. It needs to be fixed. Thanks for reporting the issue.\n You didn't install cuda correctly. In particular you didn't do <denchmark-link:https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#mandatory-post>https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#mandatory-post</denchmark-link>\n \n nvcc is not on your PATH.\n As a quick workaround, you can run with CUDACXX=/usr/local/cuda/nvcc cmake\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "cepera-ang", "commentT": "2020-03-04T21:04:32Z", "comment_text": "\n \t\tI have nvcc in my $PATH as follows:\n <denchmark-code>\u279c  build git:(master) echo $PATH\n /home/cepera/miniconda3/condabin:/home/cepera/bin:/home/cepera/.nvm/versions/node/v12.3.1/bin:\n /home/cepera/.local/bin:/home/cepera/bin:/usr/local/sbin:/usr/local/bin:\n /usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:\n /home/cepera/.fzf/bin:/usr/local/cuda-10.1/bin\n \u279c  build git:(master) which nvcc            \n /usr/local/bin/nvcc\n </denchmark-code>\n \n Also, if I set CUDACXX as you suggested it seems like Cmake ignores it and still guesses different path and, unfortunately, still loops:\n <denchmark-code>\u279c  build git:(master) CUDACXX=/usr/local/bin/nvcc cmake -GNinja ..\n -- The C compiler identification is GNU 8.3.0\n -- The CXX compiler identification is GNU 8.3.0\n -- Check for working C compiler: /usr/local/bin/cc\n -- Check for working C compiler: /usr/local/bin/cc -- works\n -- Detecting C compiler ABI info\n -- Detecting C compiler ABI info - done\n -- Detecting C compile features\n -- Detecting C compile features - done\n -- Check for working CXX compiler: /usr/local/bin/c++\n -- Check for working CXX compiler: /usr/local/bin/c++ -- works\n -- Detecting CXX compiler ABI info\n -- Detecting CXX compiler ABI info - done\n -- Detecting CXX compile features\n -- Detecting CXX compile features - done\n -- CMAKE_CROSSCOMPILING FALSE\n -- CMAKE_HOST_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_NAME Linux\n -- CMake version '3.13.4' using generator 'Ninja'\n -- Looking for a CUDA compiler\n -- Looking for a CUDA compiler - /usr/local/bin/nvcc\n CMake Warning at CMakeLists.txt:95 (message):\n   CMAKE_CUDA_COMPILER guessed: /usr/local/cuda/bin/nvcc\n \n \n -- The CUDA compiler identification is NVIDIA 10.1.243\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works\n \n <truncated>\n </denchmark-code>\n \n Update: if I set CUDACXX=/usr/local/cuda/bin/nvcc (exactly as Cmake \"guesses\") then it configures successfully.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "cepera-ang", "commentT": "2020-03-04T21:11:22Z", "comment_text": "\n \t\tThanks for the update <denchmark-link:https://github.com/cepera-ang>@cepera-ang</denchmark-link>\n . Could you try changing\n   if (NOT CMAKE_CUDA_COMPILER_LOADED AND UNIX AND EXISTS \"/usr/local/cuda/bin/nvcc\")\n to\n   if (NOT CMAKE_CUDA_COMPILER AND UNIX AND EXISTS \"/usr/local/cuda/bin/nvcc\")\n Seems in <denchmark-link:https://github.com/apache/incubator-mxnet/pull/17293>#17293</denchmark-link>\n  we used the wrong variable, as per <denchmark-link:https://gitlab.kitware.com/cmake/cmake/issues/19013>https://gitlab.kitware.com/cmake/cmake/issues/19013</denchmark-link>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "cepera-ang", "commentT": "2020-03-04T22:56:26Z", "comment_text": "\n \t\tNow it fails in different place:\n <denchmark-code>(base) \u279c  build git:(master) \u2717 cmake -GNinja ..\n -- The C compiler identification is GNU 8.3.0\n -- The CXX compiler identification is GNU 8.3.0\n -- Check for working C compiler: /usr/local/bin/cc\n -- Check for working C compiler: /usr/local/bin/cc -- works\n -- Detecting C compiler ABI info\n -- Detecting C compiler ABI info - done\n -- Detecting C compile features\n -- Detecting C compile features - done\n -- Check for working CXX compiler: /usr/local/bin/c++\n -- Check for working CXX compiler: /usr/local/bin/c++ -- works\n -- Detecting CXX compiler ABI info\n -- Detecting CXX compiler ABI info - done\n -- Detecting CXX compile features\n -- Detecting CXX compile features - done\n -- CMAKE_CROSSCOMPILING FALSE\n -- CMAKE_HOST_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_NAME Linux\n -- CMake version '3.13.4' using generator 'Ninja'\n -- Looking for a CUDA compiler\n -- Looking for a CUDA compiler - /usr/local/bin/nvcc\n -- The CUDA compiler identification is NVIDIA 10.1.243\n -- Check for working CUDA compiler: /usr/local/bin/nvcc\n -- Check for working CUDA compiler: /usr/local/bin/nvcc -- works\n -- Detecting CUDA compiler ABI info\n -- Detecting CUDA compiler ABI info - done\n -- Performing Test SUPPORT_CXX11\n -- Performing Test SUPPORT_CXX11 - Success\n -- Performing Test SUPPORT_CXX0X\n -- Performing Test SUPPORT_CXX0X - Success\n -- CMAKE_BUILD_TYPE is unset, defaulting to Release\n -- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value `OFF`\n -- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value `OFF`\n -- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value `OFF`\n -- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value `STATIC`\n -- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``\n -- Looking for pthread.h\n -- Looking for pthread.h - found\n -- Looking for pthread_create\n -- Looking for pthread_create - not found\n -- Looking for pthread_create in pthreads\n -- Looking for pthread_create in pthreads - not found\n -- Looking for pthread_create in pthread\n -- Looking for pthread_create in pthread - found\n -- Found Threads: TRUE  \n -- Found OpenMP_C: -fopenmp (found version \"4.5\") \n -- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n -- Found OpenMP: TRUE (found version \"4.5\")  \n -- GPU support is disabled\n -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \n -- Found Git: /usr/bin/git (found version \"2.20.1\") \n -- Intel(R) VTune(TM) Amplifier JIT profiling disabled\n -- Found OpenBLAS libraries: /usr/lib/x86_64-linux-gnu/libopenblas.so\n -- Found OpenBLAS include: /usr/include/x86_64-linux-gnu\n -- OpenCV Disabled\n -- Performing Test OPENMP_HAVE_WERROR_FLAG\n -- Performing Test OPENMP_HAVE_WERROR_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG - Success\n -- Found PythonInterp: /home/cepera/miniconda3/bin/python (found version \"3.7.4\") \n -- Cannot find llvm-lit.\n -- Please put llvm-lit in your PATH, set OPENMP_LLVM_LIT_EXECUTABLE to its full path, or point OPENMP_LLVM_TOOLS_DIR to its directory.\n CMake Warning at 3rdparty/openmp/cmake/OpenMPTesting.cmake:22 (message):\n   The check targets will not be available!\n Call Stack (most recent call first):\n   3rdparty/openmp/cmake/OpenMPTesting.cmake:40 (find_standalone_test_dependencies)\n   3rdparty/openmp/CMakeLists.txt:49 (include)\n \n \n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG - Success\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_M32_FLAG\n -- Performing Test LIBOMP_HAVE_M32_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_X_FLAG\n -- Performing Test LIBOMP_HAVE_X_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG - Success\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG - Success\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FINI_FLAG\n -- Performing Test LIBOMP_HAVE_FINI_FLAG - Success\n -- Found Perl: /usr/bin/perl (found version \"5.28.1\") \n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS\n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS - Success\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS - Success\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE - Success\n -- Looking for include files windows.h, psapi.h\n -- Looking for include files windows.h, psapi.h - not found\n -- Looking for EnumProcessModules in psapi\n -- Looking for EnumProcessModules in psapi - not found\n -- LIBOMP: Operating System     -- Linux\n -- LIBOMP: Target Architecture  -- x86_64\n -- LIBOMP: Build Type           -- Release\n -- LIBOMP: Library Kind         -- SHARED\n -- LIBOMP: Library Type         -- normal\n -- LIBOMP: Fortran Modules      -- FALSE\n -- LIBOMP: Build                -- 20140926\n -- LIBOMP: Use Stats-gathering  -- FALSE\n -- LIBOMP: Use Debugger-support -- FALSE\n -- LIBOMP: Use ITT notify       -- TRUE\n -- LIBOMP: Use OMPT-support     -- TRUE\n -- LIBOMP: Use OMPT-optional  -- TRUE\n -- LIBOMP: Use Adaptive locks   -- TRUE\n -- LIBOMP: Use quad precision   -- TRUE\n -- LIBOMP: Use TSAN-support     -- FALSE\n -- LIBOMP: Use Hwloc library    -- FALSE\n -- Looking for sqrt in m\n -- Looking for sqrt in m - found\n -- Looking for __atomic_load_1\n -- Looking for __atomic_load_1 - not found\n -- Looking for __atomic_load_1 in atomic\n -- Looking for __atomic_load_1 in atomic - found\n -- check-libomp does nothing.\n -- check-ompt does nothing.\n -- check-openmp does nothing.\n USE_LAPACK is ON\n CMake Warning at 3rdparty/googletest/googletest/CMakeLists.txt:47 (project):\n   VERSION keyword not followed by a value or was followed by a value that\n   expanded to nothing.\n \n \n -- Found GTest: gtest  \n -- Found CUDNN: /usr/lib/x86_64-linux-gnu/libcudnn.so  \n -- Found OpenMP_C: -fopenmp  \n -- Found OpenMP_CXX: -fopenmp  \n -- Found OpenMP: TRUE   \n -- Looking for clock_gettime in rt\n -- Looking for clock_gettime in rt - found\n -- Looking for fopen64\n -- Looking for fopen64 - not found\n -- Looking for C++ include cxxabi.h\n -- Looking for C++ include cxxabi.h - found\n -- Looking for nanosleep\n -- Looking for nanosleep - found\n -- Looking for backtrace\n -- Looking for backtrace - found\n -- backtrace facility detected in default set of libraries\n -- Found Backtrace: /usr/include  \n -- Check if the system is big endian\n -- Searching 16 bit integer\n -- Looking for sys/types.h\n -- Looking for sys/types.h - found\n -- Looking for stdint.h\n -- Looking for stdint.h - found\n -- Looking for stddef.h\n -- Looking for stddef.h - found\n -- Check size of unsigned short\n -- Check size of unsigned short - done\n -- Using unsigned short\n -- Check if the system is big endian - little endian\n -- /home/cepera/tmp/mxnet/3rdparty/dmlc-core/cmake/build_config.h.in -> include/dmlc/build_config.h\n -- Performing Test SUPPORT_MSSE2\n -- Performing Test SUPPORT_MSSE2 - Success\n -- Autodetected CUDA architecture(s):  6.1 6.1 6.1\n -- CUDA: Using the following NVCC architecture flags -gencode;arch=compute_61,code=sm_61\n -- Unable to find cudart library.\n CMake Error at /usr/share/cmake-3.13/Modules/FindPackageHandleStandardArgs.cmake:137 (message):\n   Could NOT find CUDAToolkit (missing: CUDAToolkit_INCLUDE_DIR CUDA_CUDART)\n   (found version \"10.1.243\")\n Call Stack (most recent call first):\n   /usr/share/cmake-3.13/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)\n   cmake/upstream/FindCUDAToolkit.cmake:697 (find_package_handle_standard_args)\n   CMakeLists.txt:617 (find_package)\n \n \n -- Configuring incomplete, errors occurred!\n See also \"/home/cepera/tmp/mxnet/build/CMakeFiles/CMakeOutput.log\".\n See also \"/home/cepera/tmp/mxnet/build/CMakeFiles/CMakeError.log\".\n \n </denchmark-code>\n \n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "cepera-ang", "commentT": "2020-03-04T23:25:43Z", "comment_text": "\n \t\tThe search behavio for CUDAToolkit is specified in <denchmark-link:https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindCUDAToolkit.cmake>https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindCUDAToolkit.cmake</denchmark-link>\n  In general, it relies on the location of nvcc, so it may get confused by  . It's a strange location to have nvcc at. Did you install the cuda libraries also to ? Usually they are at .\n The infinite loop issue is a separate issue and should be fixed by <denchmark-link:https://github.com/apache/incubator-mxnet/pull/17773>#17773</denchmark-link>\n .\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "cepera-ang", "commentT": "2020-03-05T14:54:50Z", "comment_text": "\n \t\tIt is indeed strange location for nvcc and it happens to be some misconfiguration on my machine.  is a symbolic link to  and removing it solves the problem (tried with changes in <denchmark-link:https://github.com/apache/incubator-mxnet/pull/17773>#17773</denchmark-link>\n ).\n Thanks for you time <denchmark-link:https://github.com/leezu>@leezu</denchmark-link>\n ! It is rare to get this kind of fast and thorough response with open source project and I highly appreciate it.\n \t\t"}}}, "commit": {"commit_id": "66e4c27de6ffa610c185df1563600eadea190d7d", "commit_author": "Leonard Lausen", "commitT": "2020-03-05 09:10:43-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CMakeLists.txt", "file_new_name": "CMakeLists.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "93,94,95,96", "deleted_lines": "93,94,95"}}}}}}