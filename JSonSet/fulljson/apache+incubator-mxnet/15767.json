{"BR": {"BR_id": "15767", "BR_author": "matteosal", "BRopenT": "2019-08-06T16:56:28Z", "BRcloseT": "2019-09-19T08:22:52Z", "BR_text": {"BRsummary": "FullyConnected op with float64 and MKL-DNN fails if gradient are not set in a specific way", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n With MKL-DNN and float64 arrays, getting the output of a FullyConnected op after a forward pass fails unless the gradient update method is not 'null' and explicit gradient arrays are specified (even though no backward pass is involved).\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n <denchmark-code>----------Python Info----------\n Version      : 3.7.2\n Compiler     : GCC 7.3.0\n Build        : ('default', 'Dec 29 2018 06:19:36')\n Arch         : ('64bit', '')\n ------------Pip Info-----------\n Version      : 19.0.1\n Directory    : /opt/Anaconda/lib/python3.7/site-packages/pip\n ----------MXNet Info-----------\n Version      : 1.5.0\n Directory    : /home/matteo/Git/mxnet/python/mxnet\n Commit hash file \"/home/matteo/Git/mxnet/python/mxnet/COMMIT_HASH\" not found. Not installed from pre-built package or built from source.\n Library      : ['/home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so']\n Build features:\n \u2716 CUDA\n \u2716 CUDNN\n \u2716 NCCL\n \u2716 CUDA_RTC\n \u2716 TENSORRT\n \u2714 CPU_SSE\n \u2714 CPU_SSE2\n \u2714 CPU_SSE3\n \u2714 CPU_SSE4_1\n \u2714 CPU_SSE4_2\n \u2716 CPU_SSE4A\n \u2714 CPU_AVX\n \u2716 CPU_AVX2\n \u2716 OPENMP\n \u2716 SSE\n \u2714 F16C\n \u2714 JEMALLOC\n \u2716 BLAS_OPEN\n \u2714 BLAS_ATLAS\n \u2716 BLAS_MKL\n \u2716 BLAS_APPLE\n \u2716 LAPACK\n \u2714 MKLDNN\n \u2716 OPENCV\n \u2716 CAFFE\n \u2716 PROFILER\n \u2716 DIST_KVSTORE\n \u2716 CXX14\n \u2716 INT64_TENSOR_SIZE\n \u2716 SIGNAL_HANDLER\n \u2716 DEBUG\n ----------System Info----------\n Platform     : Linux-4.15.0-55-generic-x86_64-with-debian-buster-sid\n system       : Linux\n node         : mongolius\n release      : 4.15.0-55-generic\n version      : #60-Ubuntu SMP Tue Jul 2 18:22:20 UTC 2019\n ----------Hardware Info----------\n machine      : x86_64\n processor    : x86_64\n Architecture:        x86_64\n CPU op-mode(s):      32-bit, 64-bit\n Byte Order:          Little Endian\n CPU(s):              8\n On-line CPU(s) list: 0-7\n Thread(s) per core:  2\n Core(s) per socket:  4\n Socket(s):           1\n NUMA node(s):        1\n Vendor ID:           GenuineIntel\n CPU family:          6\n Model:               94\n Model name:          Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz\n Stepping:            3\n CPU MHz:             2700.253\n CPU max MHz:         3500,0000\n CPU min MHz:         800,0000\n BogoMIPS:            5184.00\n Virtualization:      VT-x\n L1d cache:           32K\n L1i cache:           32K\n L2 cache:            256K\n L3 cache:            6144K\n NUMA node0 CPU(s):   0-7\n Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d\n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0117 sec, LOAD: 0.8935 sec.\n Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0599 sec, LOAD: 2.1901 sec.\n Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.1028 sec, LOAD: 0.9832 sec.\n Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0657 sec, LOAD: 1.2597 sec.\n Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0380 sec, LOAD: 0.8543 sec.\n Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0395 sec, LOAD: 0.4625 sec.\n </denchmark-code>\n \n Package used: python\n <denchmark-h:h2>Build info (Required if built from source)</denchmark-h>\n \n Compiler: gcc\n MXNet commit hash: <denchmark-link:https://github.com/apache/incubator-mxnet/commit/3255d879674a7c10ba30982baa09d3b30f91f8e8>3255d87</denchmark-link>\n \n Build config: plain config.mk with USE_OPENCV=0\n <denchmark-h:h2>Error Message:</denchmark-h>\n \n <denchmark-code>Traceback (most recent call last):\n   File \"script.py\", line 30, in <module>\n     print(ex.outputs[0])\n   File \"/home/matteo/Git/mxnet/python/mxnet/ndarray/ndarray.py\", line 194, in __repr__\n     return '\\n%s\\n<%s %s @%s>' % (str(self.asnumpy()),\n   File \"/home/matteo/Git/mxnet/python/mxnet/ndarray/ndarray.py\", line 2096, in asnumpy\n     ctypes.c_size_t(data.size)))\n   File \"/home/matteo/Git/mxnet/python/mxnet/base.py\", line 253, in check_call\n     raise MXNetError(py_str(_LIB.MXGetLastError()))\n mxnet.base.MXNetError: [18:46:52] src/operator/subgraph/mkldnn/../.././../common/../operator/nn/mkldnn/mkldnn_base-inl.h:217: unknown type for MKLDNN\n Stack trace:\n   [bt] (0) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x43) [0x7fdeee8a4fc3]\n   [bt] (1) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(mxnet::op::SgMKLDNNFCOp::Forward(mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)+0x902) [0x7fdeee92ece2]\n   [bt] (2) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(mxnet::exec::StatefulComputeExExecutor::Run(mxnet::RunContext, bool)+0x2d1) [0x7fdef0e0ec81]\n   [bt] (3) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(+0x2b00ead) [0x7fdef0dcaead]\n   [bt] (4) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(+0x2b0103f) [0x7fdef0dcb03f]\n   [bt] (5) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(mxnet::engine::ThreadedEngine::ExecuteOprBlock(mxnet::RunContext, mxnet::engine::OprBlock*)+0x585) [0x7fdef16810a5]\n   [bt] (6) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(std::_Function_handler<void (std::shared_ptr<dmlc::ManualEvent>), mxnet::engine::ThreadedEnginePerDevice::PushToExecute(mxnet::engine::OprBlock*, bool)::{lambda()#1}::operator()() const::{lambda(std::shared_ptr<dmlc::ManualEvent>)#1}>::_M_invoke(std::_Any_data const&, std::shared_ptr<dmlc::ManualEvent>&&)+0x147) [0x7fdef16944d7]\n   [bt] (7) /home/matteo/Git/mxnet/python/mxnet/../../lib/libmxnet.so(std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::function<void (std::shared_ptr<dmlc::ManualEvent>)>, std::shared_ptr<dmlc::ManualEvent> > > >::_M_run()+0x4e) [0x7fdef167f7ce]\n   [bt] (8) /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xbd66f) [0x7fdee656c66f]\n </denchmark-code>\n \n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n <denchmark-code>import mxnet as mx\n \n sym = mx.sym.FullyConnected(\n \tmx.sym.Variable('in'), \n \tmx.sym.Variable('w'), \n \tmx.sym.Variable('b'), \n \tnum_hidden=2\n )\n \n dtype = 'float64'\n explicit_grad = {\n \t'in': mx.nd.array([[2, 3, 4]], dtype=dtype),\n \t'w': mx.nd.array([[1, 2, 3], [4, 5, 6]], dtype=dtype),\n \t'b': mx.nd.array([7, 8], dtype=dtype)\n }\n \n args_grad = explicit_grad\n grad_req = 'write'\n \n ex = sym.bind(mx.cpu(), \n \t{\n \t\t'in': mx.nd.array([[2, 3, 4]], dtype = dtype),\n \t\t'w': mx.nd.array([[1, 2, 3], [4, 5, 6]], dtype = dtype),\n \t\t'b': mx.nd.array([7, 8], dtype = dtype)\n \t},\n \targs_grad = args_grad,\n \tgrad_req = grad_req\n )\n ex.forward()\n print(ex.outputs[0])\n </denchmark-code>\n \n The above script works, but setting args_grad = None or grad_req = 'null' (or both) makes it fail with this error:\n <denchmark-code>src/operator/subgraph/mkldnn/../.././../common/../operator/nn/mkldnn/mkldnn_base-inl.h:217: unknown type for MKLDNN\n </denchmark-code>\n \n Every combination used to work in commit <denchmark-link:https://github.com/apache/incubator-mxnet/commit/076b2f330c60f05cb939beea28dd04cd571a34c0>076b2f3</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "matteosal", "commentT": "2019-08-06T16:56:31Z", "comment_text": "\n \t\tHey, this is the MXNet Label Bot.\n Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.\n Here are my recommended labels: Bug\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "matteosal", "commentT": "2019-08-06T23:28:37Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Bug]\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "matteosal", "commentT": "2019-08-07T05:27:00Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wuxun-zhang>@wuxun-zhang</denchmark-link>\n  please take a look for this bug.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "matteosal", "commentT": "2019-08-07T08:42:52Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/matteosal>@matteosal</denchmark-link>\n  Thanks for reporting this issue. I can reproduce this issue locally. Firstly,  is not supported yet for current MKL-DNN implementation, so actually mkl-dnn pass should not be executed in this example and there should be missing or imcomplete datatype check somewhere. Additionally,  is dependent on , so  is always  when  (see <denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/src/c_api/c_api_executor.cc#L167>#L167</denchmark-link>\n ).\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "matteosal", "commentT": "2019-08-07T10:33:26Z", "comment_text": "\n \t\tI also get the same problem with RNN, but setting explicit gradients doesn't help in this case. It seems completely broken on float64:\n <denchmark-code>import mxnet as mx\n \n sym = mx.sym.RNN(\n \tmx.sym.Variable('in'), \n \tmx.sym.Variable('par'), \n \tmx.sym.Variable('s'), \n \tstate_size = (2),\n \tnum_layers = 1,\n \tmode = 'rnn_tanh'\n )\n \n dtype = 'float64'\n explicit_grad = {\n \t'in': mx.nd.ones([2, 1, 2], dtype=dtype),\n \t'par': mx.nd.ones([12], dtype=dtype),\n \t's': mx.nd.ones([1, 1, 2], dtype=dtype)\n }\n \n args_grad = explicit_grad\n grad_req = 'write'\n \n ex = sym.bind(mx.cpu(), \n \t{\n \t\t'in': mx.nd.ones([2, 1, 2], dtype=dtype),\n \t\t'par': mx.nd.ones([12], dtype=dtype),\n \t\t's': mx.nd.ones([1, 1, 2], dtype=dtype)\n \t},\n \targs_grad = args_grad,\n \tgrad_req = grad_req\n )\n ex.forward()\n print(ex.outputs[0])\n </denchmark-code>\n \n Other RNN modes besides 'rnn_tanh' are also affected.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "matteosal", "commentT": "2019-08-07T13:07:05Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wuxun-zhang>@wuxun-zhang</denchmark-link>\n  let's double-check all data type in MKLDNN backend. Maybe fix should be in 1.5.1. <denchmark-link:https://github.com/TaoLv>@TaoLv</denchmark-link>\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "matteosal", "commentT": "2019-08-07T13:51:30Z", "comment_text": "\n \t\tSeems that there are no data type check for MKL-DNN stateful RNN implementation (see <denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/src/operator/rnn.cc#L226>https://github.com/apache/incubator-mxnet/blob/master/src/operator/rnn.cc#L226</denchmark-link>\n ). So, when input data is , mkldnn rnn pass still be executed and then  error will be got.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "matteosal", "commentT": "2019-08-07T14:37:34Z", "comment_text": "\n \t\t\n Seems that there are no data type check for MKL-DNN stateful RNN implementation (see https://github.com/apache/incubator-mxnet/blob/master/src/operator/rnn.cc#L226). So, when input data is float64, mkldnn rnn pass still be executed and then unknown mkldnn type error will be got.\n \n The execution trace of RNN is maked out as below.\n \n \n \n incubator-mxnet/src/operator/rnn.cc\n \n \n          Line 254\n       in\n       7186123\n \n \n \n \n \n \n  mkldnn::memory::data_type mkldnn_dtype = get_mkldnn_type(dtype); \n \n \n \n \n \n \n \n \n incubator-mxnet/src/operator/nn/mkldnn/mkldnn_base-inl.h\n \n \n         Lines 206 to 220\n       in\n       7186123\n \n \n \n \n \n \n  static inline mkldnn::memory::data_type get_mkldnn_type(int dtype) { \n \n \n \n  switch (dtype) { \n \n \n \n  case mshadow::kFloat32: \n \n \n \n  return mkldnn::memory::data_type::f32; \n \n \n \n  case mshadow::kInt32: \n \n \n \n  return mkldnn::memory::data_type::s32; \n \n \n \n  case mshadow::kInt8: \n \n \n \n  return mkldnn::memory::data_type::s8; \n \n \n \n  case mshadow::kUint8: \n \n \n \n  return mkldnn::memory::data_type::u8; \n \n \n \n  default: \n \n \n \n  LOG(FATAL) << \"unknown type for MKLDNN\"; \n \n \n \n  return mkldnn::memory::data_type::data_undef; \n \n \n \n    } \n \n \n \n  } \n \n \n \n \n \n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "matteosal", "commentT": "2019-08-08T00:32:57Z", "comment_text": "\n \t\tIt's not all about float64, but about MKLDNN subgraph backend. The problem is, recently we enabled MKLDNN subgraph backend by default on master, and this will break the fallback mechanism when handing float64. So for nightly build from master, please use export MXNET_SUBGRAPH_BACKEND=NONE to work around shortly, for MXNet v1.5.0, please unset MXNET_SUBGRAPH_BACKEND.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "matteosal", "commentT": "2019-08-08T01:02:40Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/pengzhao-intel>@pengzhao-intel</denchmark-link>\n  <denchmark-link:https://github.com/TaoLv>@TaoLv</denchmark-link>\n  v1.5.0 doesn't have this issue. So don't need to fix in v1.5.1.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "matteosal", "commentT": "2019-08-08T01:10:49Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ZhennanQin>@ZhennanQin</denchmark-link>\n  Can we add data type check here <denchmark-link:https://github.com/apache/incubator-mxnet/blob/7186123874/src/executor/graph_executor.cc#L1663>#L1663</denchmark-link>\n  to disable subgraph when input data type is not supported by MKL-DNN?\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "matteosal", "commentT": "2019-08-08T01:21:27Z", "comment_text": "\n \t\t\n @pengzhao-intel @TaoLv v1.5.0 doesn't have this issue. So don't need to fix in v1.5.1.\n \n It's nice and we can try to resolve in 1.6.\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "matteosal", "commentT": "2019-09-05T11:40:18Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/matteosal>@matteosal</denchmark-link>\n  sorry for the delay. The PR is blocked by 3rd party package but it is resolved and will be merged soon.\n \t\t"}}}, "commit": {"commit_id": "a37a76c42bf790f288a06adfc81e2df325fe0c24", "commit_author": "Zhennan Qin", "commitT": "2019-09-19 16:22:51+08:00", "commit_complexity": {"commit_NLOC": "0.45806451612903226", "commit_CCN": "0.7548387096774194", "commit_Nprams": "0.6516129032258065"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\nn\\mkldnn\\mkldnn_base-inl.h", "file_new_name": "src\\operator\\nn\\mkldnn\\mkldnn_base-inl.h", "file_complexity": {"file_NLOC": "431", "file_CCN": "101", "file_NToken": "3363"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "136,137,138,139", "deleted_lines": null, "method_info": {"method_name": "mxnet::SupportMKLDNNRNN", "method_params": "input", "method_startline": "136", "method_endline": "139", "method_complexity": {"method_NLOC": "4", "method_CCN": "2", "method_NToken": "41", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\operator\\nn\\mkldnn\\mkldnn_base.cc", "file_new_name": "src\\operator\\nn\\mkldnn\\mkldnn_base.cc", "file_complexity": {"file_NLOC": "541", "file_CCN": "190", "file_NToken": "5000"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539", "deleted_lines": null, "method_info": {"method_name": "mxnet::SimilarArray", "method_params": "arr1,arr2,rtol,atol", "method_startline": "482", "method_endline": "638", "method_complexity": {"method_NLOC": "135", "method_CCN": "33", "method_NToken": "1503", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "424,465", "deleted_lines": "464", "method_info": {"method_name": "mxnet::FallBackCompute", "method_params": "fn,attrs_states,ctx,inputs,req,outputs", "method_startline": "424", "method_endline": "470", "method_complexity": {"method_NLOC": "39", "method_CCN": "12", "method_NToken": "403", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "423,424,465", "deleted_lines": "423,464", "method_info": {"method_name": "mxnet::FallBackCompute", "method_params": "fn,attrs,ctx,inputs,req,outputs", "method_startline": "423", "method_endline": "469", "method_complexity": {"method_NLOC": "39", "method_CCN": "12", "method_NToken": "405", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\rnn.cc", "file_new_name": "src\\operator\\rnn.cc", "file_complexity": {"file_NLOC": "638", "file_CCN": "57", "file_NToken": "5602"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "637,638,639,640,641,642,643,644,645,646,647,648,649", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::RNNStatefulComputeExCPU", "method_params": "state_ptr,ctx,inputs,req,outputs", "method_startline": "637", "method_endline": "649", "method_complexity": {"method_NLOC": "13", "method_CCN": "2", "method_NToken": "119", "method_nesting_level": "2"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\operator\\subgraph\\build_subgraph.cc", "file_new_name": "src\\operator\\subgraph\\build_subgraph.cc", "file_complexity": {"file_NLOC": "544", "file_CCN": "111", "file_NToken": "5022"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "349,353,354,358", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::sg::SelectSubgraphNodes", "method_params": "g,subgraph_selector,simple_nodes,subgraph_nodes,subgraph_selectors,node,snid,subgraph_id", "method_startline": "343", "method_endline": "389", "method_complexity": {"method_NLOC": "37", "method_CCN": "7", "method_NToken": "348", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::sg::PrepareNodeAttr", "method_params": "g,node", "method_startline": "110", "method_endline": "127", "method_complexity": {"method_NLOC": "18", "method_CCN": "5", "method_NToken": "189", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "177,194", "deleted_lines": "156,173", "method_info": {"method_name": "mxnet::op::sg::LabelSubgraph", "method_params": "g,subgraph_selector,label,snid,simple_nodes,subgraph_nodes,excluded_nodes", "method_startline": "144", "method_endline": "292", "method_complexity": {"method_NLOC": "125", "method_CCN": "29", "method_NToken": "1309", "method_nesting_level": "3"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_conv_property.h", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_conv_property.h", "file_complexity": {"file_NLOC": "225", "file_CCN": "59", "file_NToken": "1610"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "64,67,72", "deleted_lines": "64,67,72", "method_info": {"method_name": "mxnet::op::SgMKLDNNConvSelector::Select", "method_params": "n,node_attr", "method_startline": "64", "method_endline": "75", "method_complexity": {"method_NLOC": "12", "method_CCN": "6", "method_NToken": "108", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "64,67,72", "deleted_lines": "64,67,72", "method_info": {"method_name": "mxnet::op::SgMKLDNNConvSelector::Select", "method_params": "n", "method_startline": "64", "method_endline": "75", "method_complexity": {"method_NLOC": "12", "method_CCN": "5", "method_NToken": "93", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "164", "deleted_lines": "164", "method_info": {"method_name": "mxnet::op::SgMKLDNNConvSelector::Reset", "method_params": "", "method_startline": "160", "method_endline": "166", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "51", "method_nesting_level": "3"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_fc_post_quantize_property.h", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_fc_post_quantize_property.h", "file_complexity": {"file_NLOC": "161", "file_CCN": "37", "file_NToken": "1074"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "36", "deleted_lines": "36"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_fc_property.h", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_fc_property.h", "file_complexity": {"file_NLOC": "169", "file_CCN": "42", "file_NToken": "1188"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "153", "deleted_lines": "153", "method_info": {"method_name": "mxnet::op::SgMKLDNNFCSelector::Reset", "method_params": "", "method_startline": "150", "method_endline": "155", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "45", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "61,62", "deleted_lines": "61,62", "method_info": {"method_name": "mxnet::op::SgMKLDNNFCSelector::Select", "method_params": "n,node_attr", "method_startline": "61", "method_endline": "69", "method_complexity": {"method_NLOC": "9", "method_CCN": "4", "method_NToken": "72", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "61,62", "deleted_lines": "61,62", "method_info": {"method_name": "mxnet::op::SgMKLDNNFCSelector::Select", "method_params": "n", "method_startline": "61", "method_endline": "69", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "57", "method_nesting_level": "3"}}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_post_quantize_align_scale_property.h", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_post_quantize_align_scale_property.h", "file_complexity": {"file_NLOC": "117", "file_CCN": "32", "file_NToken": "875"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "27", "deleted_lines": "27"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_post_quantize_property.h", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_post_quantize_property.h", "file_complexity": {"file_NLOC": "139", "file_CCN": "28", "file_NToken": "906"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "23,28,29,30", "deleted_lines": "25,26,27,29"}}}, "file_9": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "src\\operator\\subgraph\\mkldnn\\mkldnn_subgraph_base-inl.h", "file_complexity": {"file_NLOC": "14", "file_CCN": "6", "file_NToken": "91"}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 22, "file_old_name": "src\\operator\\subgraph\\subgraph_property.h", "file_new_name": "src\\operator\\subgraph\\subgraph_property.h", "file_complexity": {"file_NLOC": "300", "file_CCN": "67", "file_NToken": "2283"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "123,124,125,126", "deleted_lines": "123", "method_info": {"method_name": "mxnet::op::SubgraphSelector::SelectOutput", "method_params": "cur_node,output_node,output_node_attr", "method_startline": "123", "method_endline": "126", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "36", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "178", "deleted_lines": "175,176,177", "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2Bridge::SelectOutput", "method_params": "cur_node,output_node", "method_startline": "175", "method_endline": "178", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "155,156,157", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2::Select", "method_params": "seed_node,node_attr", "method_startline": "155", "method_endline": "157", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "3"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "226", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2Bridge::Filter", "method_params": "candidates", "method_startline": "226", "method_endline": "237", "method_complexity": {"method_NLOC": "12", "method_CCN": "3", "method_NToken": "107", "method_nesting_level": "3"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "221,222,223", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2Bridge::SelectOutput", "method_params": "cur_node,output_node,node_attr", "method_startline": "221", "method_endline": "224", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "43", "method_nesting_level": "3"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "502,503", "deleted_lines": "501,502", "method_info": {"method_name": "mxnet::op::SubgraphBackendRegistry::GetSubgraphBackend", "method_params": "name", "method_startline": "500", "method_endline": "505", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "46", "method_nesting_level": "3"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "178,179,180,181", "deleted_lines": "180,181", "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2::SelectOutput", "method_params": "cur_node,output_node", "method_startline": "178", "method_endline": "181", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "3"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "96,97,98", "deleted_lines": "98", "method_info": {"method_name": "mxnet::op::SubgraphSelector::Select", "method_params": "seed_node,node_attr", "method_startline": "96", "method_endline": "98", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "3"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "119,120,121,122", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelector::SelectOutput", "method_params": "cur_node,output_node", "method_startline": "119", "method_endline": "122", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "3"}}}, "hunk_9": {"Ismethod": 1, "added_lines": "211,212,213", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2Bridge::Select", "method_params": "seed_node,node_attr", "method_startline": "211", "method_endline": "214", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "33", "method_nesting_level": "3"}}}, "hunk_10": {"Ismethod": 1, "added_lines": "105,106,107,108", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelector::SelectInput", "method_params": "cur_node,input_node", "method_startline": "105", "method_endline": "108", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "3"}}}, "hunk_11": {"Ismethod": 1, "added_lines": "168,169,170,171", "deleted_lines": "170,171", "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2::SelectInput", "method_params": "cur_node,input_node,input_node_attr", "method_startline": "168", "method_endline": "171", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "32", "method_nesting_level": "3"}}}, "hunk_12": {"Ismethod": 1, "added_lines": "170,171", "deleted_lines": "170,171,172", "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2Bridge::SelectInput", "method_params": "cur_node,input_node", "method_startline": "170", "method_endline": "173", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "3"}}}, "hunk_13": {"Ismethod": 1, "added_lines": "330", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphProperty::AdjustSubgraphNode", "method_params": "subgraph_nodes,subgraph_selector,subgraph_id", "method_startline": "329", "method_endline": "334", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "46", "method_nesting_level": "3"}}}, "hunk_14": {"Ismethod": 1, "added_lines": "164,165,166,167", "deleted_lines": "166,167", "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2::SelectInput", "method_params": "cur_node,input_node", "method_startline": "164", "method_endline": "167", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "3"}}}, "hunk_15": {"Ismethod": 1, "added_lines": "109,110,111,112", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelector::SelectInput", "method_params": "cur_node,input_node,input_node_attr", "method_startline": "109", "method_endline": "112", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "36", "method_nesting_level": "3"}}}, "hunk_16": {"Ismethod": 1, "added_lines": "216,217,218", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2Bridge::SelectInput", "method_params": "cur_node,input_node,node_attr", "method_startline": "216", "method_endline": "219", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "43", "method_nesting_level": "3"}}}, "hunk_17": {"Ismethod": 1, "added_lines": "92,93,94,95", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelector::Select", "method_params": "seed_node", "method_startline": "92", "method_endline": "95", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "3"}}}, "hunk_18": {"Ismethod": 1, "added_lines": "166,167,168", "deleted_lines": "166,167", "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2Bridge::Select", "method_params": "seed_node", "method_startline": "166", "method_endline": "168", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "21", "method_nesting_level": "3"}}}, "hunk_19": {"Ismethod": 1, "added_lines": "182,183,184,185", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2::SelectOutput", "method_params": "cur_node,output_node,output_node_attr", "method_startline": "182", "method_endline": "185", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "32", "method_nesting_level": "3"}}}, "hunk_20": {"Ismethod": 1, "added_lines": "151,152,153,154", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2::Select", "method_params": "seed_node", "method_startline": "151", "method_endline": "154", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "3"}}}, "hunk_21": {"Ismethod": 1, "added_lines": "192", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphSelectorV2::Filter", "method_params": "candidates", "method_startline": "192", "method_endline": "194", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "18", "method_nesting_level": "3"}}}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\tensor\\matrix_op-inl.h", "file_new_name": "src\\operator\\tensor\\matrix_op-inl.h", "file_complexity": {"file_NLOC": "2462", "file_CCN": "408", "file_NToken": "23510"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2659", "deleted_lines": "2659", "method_info": {"method_name": "mxnet::op::SplitOpShape", "method_params": "attrs,in_attrs,out_attrs", "method_startline": "2649", "method_endline": "2717", "method_complexity": {"method_NLOC": "67", "method_CCN": "16", "method_NToken": "636", "method_nesting_level": "2"}}}}}, "file_12": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\mkl\\test_subgraph.py", "file_new_name": "tests\\python\\mkl\\test_subgraph.py", "file_complexity": {"file_NLOC": "677", "file_CCN": "118", "file_NToken": "7146"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866", "deleted_lines": null, "method_info": {"method_name": "test_float64_fallback", "method_params": "", "method_startline": "847", "method_endline": "866", "method_complexity": {"method_NLOC": "19", "method_CCN": "1", "method_NToken": "156", "method_nesting_level": "0"}}}}}, "file_13": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_operator.py", "file_new_name": "tests\\python\\unittest\\test_operator.py", "file_complexity": {"file_NLOC": "7653", "file_CCN": "1252", "file_NToken": "94923"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345", "deleted_lines": null, "method_info": {"method_name": "test_RNN_float64", "method_params": "", "method_startline": "313", "method_endline": "345", "method_complexity": {"method_NLOC": "30", "method_CCN": "2", "method_NToken": "228", "method_nesting_level": "0"}}}}}}}}