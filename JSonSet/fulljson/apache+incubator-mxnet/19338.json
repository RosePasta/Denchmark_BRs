{"BR": {"BR_id": "19338", "BR_author": "gilbertfrancois", "BRopenT": "2020-10-12T22:18:17Z", "BRcloseT": "2020-10-14T00:20:58Z", "BR_text": {"BRsummary": "The print output of `mx.nn.Conv2dTranspose` shows the wrong direction of in and out channels.", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n The print output of mx.nn.Conv2dTranspose shows the wrong direction of in and out channels. When e.g. defining:\n <denchmark-code>conv_t = mx.gluon.nn.Conv2DTranspose(in_channels=1, channels=2, kernel_size=3, strides=1)\n print(conv_t)\n </denchmark-code>\n \n it shows:\n <denchmark-code>Conv2DTranspose(2 -> 1, kernel_size=(3, 3), stride=(1, 1))\n </denchmark-code>\n \n However, I think it should be:\n <denchmark-code>Conv2DTranspose(1 -> 2, kernel_size=(3, 3), stride=(1, 1))\n </denchmark-code>\n \n When printing a summary, the output is correct and the layer works as expected. It is just a bit confusing when printing out a network to console for inspection and debugging.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n <denchmark-code>import mxnet as mx\n \n data = mx.nd.random.randn(1, 1, 8, 8)\n \n conv_t = mx.gluon.nn.Conv2DTranspose(in_channels=1, channels=2, kernel_size=3, strides=1)\n conv_t.initialize()\n \n print(conv_t)\n print(\"++++++++++++\")\n print(conv_t.summary(data))\n </denchmark-code>\n \n output:\n <denchmark-code>Conv2DTranspose(2 -> 1, kernel_size=(3, 3), stride=(1, 1))\n ++++++++++++\n --------------------------------------------------------------------------------\n         Layer (type)                                Output Shape         Param #\n ================================================================================\n                Input                                (1, 1, 8, 8)               0\n    Conv2DTranspose-1                              (1, 2, 10, 10)              20\n ================================================================================\n Parameters in forward computation graph, duplicate included\n    Total params: 20\n    Trainable params: 20\n    Non-trainable params: 0\n Shared params in forward computation graph: 0\n Unique parameters in model: 20\n --------------------------------------------------------------------------------\n None\n </denchmark-code>\n \n <denchmark-h:h2>Environment</denchmark-h>\n \n We recommend using our script for collecting the diagnostic information with the following command\n curl --retry 10 -s https://raw.githubusercontent.com/apache/incubator-mxnet/master/tools/diagnose.py | python3\n \n Environment Information\n Architecture:        x86_64\n CPU op-mode(s):      32-bit, 64-bit\n Byte Order:          Little Endian\n CPU(s):              16\n On-line CPU(s) list: 0-15\n Thread(s) per core:  2\n Core(s) per socket:  8\n Socket(s):           1\n NUMA node(s):        1\n Vendor ID:           GenuineIntel\n CPU family:          6\n Model:               158\n Model name:          Intel(R) Core(TM) i9-9900K CPU @ 3.60GHz\n Stepping:            13\n CPU MHz:             1758.593\n CPU max MHz:         5000.0000\n CPU min MHz:         800.0000\n BogoMIPS:            7200.00\n Virtualization:      VT-x\n L1d cache:           32K\n L1i cache:           32K\n L2 cache:            256K\n L3 cache:            16384K\n NUMA node0 CPU(s):   0-15\n Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d arch_capabilities\n ----------Python Info----------\n Version      : 3.7.7\n Compiler     : GCC 7.5.0\n Build        : ('default', 'Sep  7 2020 12:08:56')\n Arch         : ('64bit', '')\n ------------Pip Info-----------\n Version      : 20.2.3\n Directory    : /home/ubuntu/.cache/pypoetry/virtualenvs/lab-SOISfXoO-py3.7/lib/python3.7/site-packages/pip\n ----------MXNet Info-----------\n Version      : 1.7.0\n Directory    : /home/ubuntu/.cache/pypoetry/virtualenvs/lab-SOISfXoO-py3.7/lib/python3.7/site-packages/mxnet\n Commit Hash   : 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n 64f737cdd59fe88d2c5b479f25d011c5156b6a8a\n Library      : ['/home/ubuntu/.cache/pypoetry/virtualenvs/lab-SOISfXoO-py3.7/lib/python3.7/site-packages/mxnet/libmxnet.so']\n Build features:\n \u2714 CUDA\n \u2714 CUDNN\n \u2714 NCCL\n \u2714 CUDA_RTC\n \u2716 TENSORRT\n \u2714 CPU_SSE\n \u2714 CPU_SSE2\n \u2714 CPU_SSE3\n \u2714 CPU_SSE4_1\n \u2714 CPU_SSE4_2\n \u2716 CPU_SSE4A\n \u2714 CPU_AVX\n \u2716 CPU_AVX2\n \u2714 OPENMP\n \u2716 SSE\n \u2714 F16C\n \u2716 JEMALLOC\n \u2714 BLAS_OPEN\n \u2716 BLAS_ATLAS\n \u2716 BLAS_MKL\n \u2716 BLAS_APPLE\n \u2714 LAPACK\n \u2714 MKLDNN\n \u2714 OPENCV\n \u2716 CAFFE\n \u2716 PROFILER\n \u2714 DIST_KVSTORE\n \u2716 CXX14\n \u2716 INT64_TENSOR_SIZE\n \u2714 SIGNAL_HANDLER\n \u2716 DEBUG\n \u2716 TVM_OP\n ----------System Info----------\n Platform     : Linux-5.4.0-47-generic-x86_64-with-debian-buster-sid\n system       : Linux\n node         : blackbox-1\n release      : 5.4.0-47-generic\n version      : #51~18.04.1-Ubuntu SMP Sat Sep 5 14:35:50 UTC 2020\n ----------Hardware Info----------\n machine      : x86_64\n processor    : x86_64\n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0048 sec, LOAD: 0.6262 sec.\n Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0061 sec, LOAD: 0.1290 sec.\n Error open Gluon Tutorial(cn): https://zh.gluon.ai, <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1076)>, DNS finished in 0.0066070556640625 sec.\n Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0058 sec, LOAD: 0.2460 sec.\n Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0118 sec, LOAD: 0.4622 sec.\n Error open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.013593912124633789 sec.\n ----------Environment----------\n MXNET_CPU_WORKER_NTHREADS=\"4\"\n KMP_DUPLICATE_LIB_OK=\"True\"\n KMP_INIT_AT_FORK=\"FALSE\"\n \n \n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "gilbertfrancois", "commentT": "2020-10-12T22:34:30Z", "comment_text": "\n \t\tYou can adapt \n \n \n incubator-mxnet/python/mxnet/gluon/nn/conv_layers.py\n \n \n         Lines 156 to 175\n       in\n       af2b4bc\n \n \n \n \n \n \n  def __repr__(self): \n \n \n \n  s = '{name}({mapping}, kernel_size={kernel}, stride={stride}' \n \n \n \n  len_kernel_size = len(self._kwargs['kernel']) \n \n \n \n  if self._kwargs['pad'] != (0,) * len_kernel_size: \n \n \n \n  s += ', padding={pad}' \n \n \n \n  if self._kwargs['dilate'] != (1,) * len_kernel_size: \n \n \n \n  s += ', dilation={dilate}' \n \n \n \n  if hasattr(self, 'out_pad') and self.out_pad != (0,) * len_kernel_size: \n \n \n \n  s += ', output_padding={out_pad}'.format(out_pad=self.out_pad) \n \n \n \n  if self._kwargs['num_group'] != 1: \n \n \n \n  s += ', groups={num_group}' \n \n \n \n  if self.bias is None: \n \n \n \n  s += ', bias=False' \n \n \n \n  if self.act: \n \n \n \n  s += ', {}'.format(self.act) \n \n \n \n  s += ')' \n \n \n \n  shape = self.weight.shape \n \n \n \n  return s.format(name=self.__class__.__name__, \n \n \n \n  mapping='{0} -> {1}'.format(shape[1] if shape[1] else None, shape[0]), \n \n \n \n  **self._kwargs) \n \n \n \n \n  or overwrite the __repr__ method of Conv2dTranspose class in the same file\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "gilbertfrancois", "commentT": "2020-10-13T10:55:40Z", "comment_text": "\n \t\tWe proposed a PR to fix the repr function for ConvTranspose classes and a small test.\n \t\t"}}}, "commit": {"commit_id": "94b649fc599a3a85c8d3592b50f229cdf8da75fc", "commit_author": "Gilbert Fran\u00e7ois", "commitT": "2020-10-13 17:20:57-07:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\mxnet\\gluon\\nn\\conv_layers.py", "file_new_name": "python\\mxnet\\gluon\\nn\\conv_layers.py", "file_complexity": {"file_NLOC": "1675", "file_CCN": "92", "file_NToken": "5833"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "173,174,175,176,178", "deleted_lines": "174", "method_info": {"method_name": "__repr__", "method_params": "self", "method_startline": "156", "method_endline": "179", "method_complexity": {"method_NLOC": "24", "method_CCN": "10", "method_NToken": "193", "method_nesting_level": "1"}}}}}}}}