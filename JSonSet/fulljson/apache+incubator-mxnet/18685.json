{"BR": {"BR_id": "18685", "BR_author": "leezu", "BRopenT": "2020-07-10T04:05:48Z", "BRcloseT": "2020-07-22T06:31:49Z", "BR_text": {"BRsummary": "mx.symbol.numpy._Symbol.__deepcopy__ logic error", "BRdescription": "\n mx.symbol.numpy._Symbol.__deepcopy__ performs shallow copy instead of deep copy like mx.symbol.Symbol.__deepcopy__ .\n Problem:\n <denchmark-code>[ins] In [1]: import mxnet as mx\n \n [ins] In [2]: import copy\n \n [ins] In [3]: v = mx.sym.Variable('a').as_np_ndarray()\n \n [ins] In [4]: b = copy.copy(v)\n \n [ins] In [5]: b._set_attr(name='b')\n \n [ins] In [6]: v\n Out[6]: <_Symbol b>\n \n [ins] In [7]: b\n Out[7]: <_Symbol b>\n </denchmark-code>\n \n Expected:\n <denchmark-code>[ins] In [1]: import mxnet as mx\n \n [ins] In [2]: import copy\n \n [ins] In [3]: v = mx.sym.Variable('a').as_np_ndarray()\n \n [ins] In [4]: b = copy.copy(v)\n \n [ins] In [5]: b._set_attr(name='b')\n \n [ins] In [6]: v\n Out[6]: <_Symbol a>\n \n [ins] In [7]: b\n Out[7]: <_Symbol b>\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "leezu", "commentT": "2020-07-10T06:38:50Z", "comment_text": "\n \t\tAgree the expected result, which is consistent with mx.nd:\n import mxnet as mx\n import copy\n \n v = mx.nd.array([1,2,3]).as_np_ndarray()\n b = copy.copy(v)\n b[0] = 10\n print(b) # [10. 2. 3.]\n print(v) # [1. 2. 3.]\n \t\t"}}}, "commit": {"commit_id": "a330a022d4c32b9096c4b6d7066a936d6eef59a1", "commit_author": "Leonard Lausen", "commitT": "2020-07-21 23:31:47-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_symbol.py", "file_new_name": "tests\\python\\unittest\\test_symbol.py", "file_complexity": {"file_NLOC": "382", "file_CCN": "59", "file_NToken": "4125"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "482,483,484,485,486,487,488,489,490,491", "deleted_lines": null, "method_info": {"method_name": "test_symbol_copy", "method_params": "", "method_startline": "482", "method_endline": "491", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "84", "method_nesting_level": "0"}}}}}}}}