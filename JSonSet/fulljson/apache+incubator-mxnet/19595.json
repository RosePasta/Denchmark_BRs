{"BR": {"BR_id": "19595", "BR_author": "sxjscience", "BRopenT": "2020-11-29T07:11:02Z", "BRcloseT": "2020-11-30T23:10:36Z", "BR_text": {"BRsummary": "[Bug] Serialization Bug", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n I noticed a serialization bug when rerunning the machine translation example in GluonNLP. This might be due to the recently upgraded serialization format.\n Here's the reproducible example:\n import mxnet as mx\n import numpy as np\n mx.npx.set_np()\n \n net = mx.gluon.nn.Embedding(input_dim=32768, output_dim=512)\n net.initialize()\n net.save_parameters('temp.params')\n original_weight = net.collect_params()['weight'].data().asnumpy()\n loaded_params = mx.npx.load('temp.params')\n loaded_weight = loaded_params['weight'].asnumpy()\n np.testing.assert_allclose(original_weight, loaded_weight, 1E-4, 1E-4)\n Output:\n <denchmark-code>---> 11 np.testing.assert_allclose(original_weight, loaded_weight, 1E-4, 1E-4)\n \n     [... skipping hidden 2 frame]\n \n AssertionError: \n Not equal to tolerance rtol=0.0001, atol=0.0001\n \n Mismatched elements: 16735981 / 16777216 (99.8%)\n Max absolute difference: 0.13994947\n Max relative difference: 4780370.5\n  x: array([[-0.019636,  0.020329, -0.045591, ..., -0.036925, -0.007389,\n          0.043669],\n        [-0.01338 ,  0.055998,  0.046903, ..., -0.006462,  0.001994,...\n  y: array([[-0.019636,  0.020329, -0.045591, ..., -0.036925, -0.007389,\n          0.043669],\n        [-0.01338 ,  0.055998,  0.046903, ..., -0.006462,  0.001994,...\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "sxjscience", "commentT": "2020-11-29T07:11:24Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/leezu>@leezu</denchmark-link>\n  <denchmark-link:https://github.com/szha>@szha</denchmark-link>\n  This is a very serious bug and we need to fix it. Would you try to verify the bug?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "sxjscience", "commentT": "2020-11-29T15:27:42Z", "comment_text": "\n \t\tI can reproduce. Added a couple of waitall() calls didn't resolve it so I think it's not related to synchronization. Thus, I think it's related to serialization/deserialization itself.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "sxjscience", "commentT": "2020-11-29T18:35:45Z", "comment_text": "\n \t\tThis is quite critical...... I trained several NMT models but the weights are not saved appropriately....\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "sxjscience", "commentT": "2020-11-29T20:12:30Z", "comment_text": "\n \t\tI tried the 20201117 wheel and it does not have the issue. So I think it's introduced by the recent npx.savez PR.\n \t\t"}}}, "commit": {"commit_id": "78fc40f68e062258f6897987e8b93686f47af85a", "commit_author": "Leonard Lausen", "commitT": "2020-11-30 15:10:35-08:00", "commit_complexity": {"commit_NLOC": "0.8571428571428571", "commit_CCN": "1.0", "commit_Nprams": "0.8571428571428571"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\serialization\\cnpy.cc", "file_new_name": "src\\serialization\\cnpy.cc", "file_complexity": {"file_NLOC": "713", "file_CCN": "101", "file_NToken": "6988"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "318,319", "deleted_lines": "318", "method_info": {"method_name": "mxnet::npz::npy_header_blob_read_callback", "method_params": "pOpaque,file_ofs,pBuf,n", "method_startline": "300", "method_endline": "323", "method_complexity": {"method_NLOC": "18", "method_CCN": "4", "method_NToken": "245", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_numpy_ndarray.py", "file_new_name": "tests\\python\\unittest\\test_numpy_ndarray.py", "file_complexity": {"file_NLOC": "1208", "file_CCN": "274", "file_NToken": "13563"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1004,1005,1006,1007,1008,1009", "deleted_lines": null, "method_info": {"method_name": "test_np_save_load_large_ndarrays", "method_params": "load_fn,tmp_path", "method_startline": "1004", "method_endline": "1009", "method_complexity": {"method_NLOC": "6", "method_CCN": "2", "method_NToken": "80", "method_nesting_level": "0"}}}}}}}}