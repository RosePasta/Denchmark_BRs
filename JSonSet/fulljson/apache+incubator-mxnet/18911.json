{"BR": {"BR_id": "18911", "BR_author": "rogerdettloff", "BRopenT": "2020-08-12T04:53:40Z", "BRcloseT": "2020-08-13T05:47:48Z", "BR_text": {"BRsummary": "Image transforms sometimes produce incorrect result", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n I've noticed that image transforms like npx.image.random_flip_left_right and npx.image.random_flip_top_bottom sometimes produce an incorrect result--although, sometimes they work correctly.  Please see my example below...\n <denchmark-h:h3>Error Message</denchmark-h>\n \n No error message is produced.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n <denchmark-code>>>> from mxnet import np, npx\n >>> npx.set_np()\n \n >>> img=np.arange(11*9).reshape(11,9,1)\n \n >>> img[:,:,0]  # have a look at our test image for reference.\n array([[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.],\n        [ 9., 10., 11., 12., 13., 14., 15., 16., 17.],\n        [18., 19., 20., 21., 22., 23., 24., 25., 26.],\n        [27., 28., 29., 30., 31., 32., 33., 34., 35.],\n        [36., 37., 38., 39., 40., 41., 42., 43., 44.],\n        [45., 46., 47., 48., 49., 50., 51., 52., 53.],\n        [54., 55., 56., 57., 58., 59., 60., 61., 62.],\n        [63., 64., 65., 66., 67., 68., 69., 70., 71.],\n        [72., 73., 74., 75., 76., 77., 78., 79., 80.],\n        [81., 82., 83., 84., 85., 86., 87., 88., 89.],\n        [90., 91., 92., 93., 94., 95., 96., 97., 98.]])\n \n >>> img_flip_lr = npx.image.random_flip_left_right(img)\n >>> img_flip_lr[:,:,0]  # correctly flipped image\n array([[ 8.,  7.,  6.,  5.,  4.,  3.,  2.,  1.,  0.],\n        [17., 16., 15., 14., 13., 12., 11., 10.,  9.],\n        [26., 25., 24., 23., 22., 21., 20., 19., 18.],\n        [35., 34., 33., 32., 31., 30., 29., 28., 27.],\n        [44., 43., 42., 41., 40., 39., 38., 37., 36.],\n        [53., 52., 51., 50., 49., 48., 47., 46., 45.],\n        [62., 61., 60., 59., 58., 57., 56., 55., 54.],\n        [71., 70., 69., 68., 67., 66., 65., 64., 63.],\n        [80., 79., 78., 77., 76., 75., 74., 73., 72.],\n        [89., 88., 87., 86., 85., 84., 83., 82., 81.],\n        [98., 97., 96., 95., 94., 93., 92., 91., 90.]])\n \n >>> img_flip_lr = npx.image.random_flip_left_right(img)  # try again...\n >>> img_flip_lr[:,:,0]  # sometimes I get a messed-up result...\n array([[ 8.0000000e+00,  7.0000000e+00,  6.0000000e+00,  5.0000000e+00,\n          4.4816047e-38,  3.0000000e+00,  2.0000000e+00,  1.0000000e+00,\n          0.0000000e+00],\n        [ 1.7000000e+01,  1.6000000e+01,  1.5000000e+01,  1.4000000e+01,\n          5.9144397e-38,  1.2000000e+01,  1.1000000e+01,  1.0000000e+01,\n          9.0000000e+00],\n        [ 2.6000000e+01,  2.5000000e+01,  2.4000000e+01,  2.3000000e+01,\n          7.3440759e-34,  2.1000000e+01,  2.0000000e+01,  1.9000000e+01,\n          1.8000000e+01],\n        [ 3.5000000e+01,  3.4000000e+01,  3.3000000e+01,  3.2000000e+01,\n          4.8542180e-32,  3.0000000e+01,  2.9000000e+01,  2.8000000e+01,\n          2.7000000e+01],\n        [ 4.4000000e+01,  4.3000000e+01,  4.2000000e+01,  4.1000000e+01,\n         -5.2694353e-17,  3.9000000e+01,  3.8000000e+01,  3.7000000e+01,\n          3.6000000e+01],\n        [ 5.3000000e+01,  5.2000000e+01,  5.1000000e+01,  5.0000000e+01,\n          9.3095263e-41,  4.8000000e+01,  4.7000000e+01,  4.6000000e+01,\n          4.5000000e+01],\n        [ 6.2000000e+01,  6.1000000e+01,  6.0000000e+01,  5.9000000e+01,\n          4.6286172e-38,  5.7000000e+01,  5.6000000e+01,  5.5000000e+01,\n          5.4000000e+01],\n        [ 7.1000000e+01,  7.0000000e+01,  6.9000000e+01,  6.8000000e+01,\n          1.9254146e-37,  6.6000000e+01,  6.5000000e+01,  6.4000000e+01,\n          6.3000000e+01],\n        [ 8.0000000e+01,  7.9000000e+01,  7.8000000e+01,  7.7000000e+01,\n          1.8514722e-37,  7.5000000e+01,  7.4000000e+01,  7.3000000e+01,\n          7.2000000e+01],\n        [ 8.9000000e+01,  8.8000000e+01,  8.7000000e+01,  8.6000000e+01,\n          1.0652919e-38,  8.4000000e+01,  8.3000000e+01,  8.2000000e+01,\n          8.1000000e+01],\n        [ 9.8000000e+01,  9.7000000e+01,  9.6000000e+01,  9.5000000e+01,\n          2.3658196e-37,  9.3000000e+01,  9.2000000e+01,  9.1000000e+01,\n          9.0000000e+01]])\n \n </denchmark-code>\n \n The example above does not always produce messed-up results for me, but I found that it seems more frequently messed-up when I Compose several sequential transformations, like this:\n <denchmark-code>>>> from mxnet.gluon.data.vision import transforms\n >>> transformer = transforms.Compose([\n ...         transforms.RandomFlipLeftRight(),\n ...         transforms.RandomFlipTopBottom()\n ...     ])\n >>> transformer(img)[:,:,0]\n array([[8.0000000e+00, 7.0000000e+00, 6.0000000e+00, 5.0000000e+00,\n         6.3878950e-04, 3.0000000e+00, 2.0000000e+00, 1.0000000e+00,\n         0.0000000e+00],\n        [1.7000000e+01, 1.6000000e+01, 1.5000000e+01, 1.4000000e+01,\n         4.7425812e+30, 1.2000000e+01, 1.1000000e+01, 1.0000000e+01,\n         9.0000000e+00],\n        [2.6000000e+01, 2.5000000e+01, 2.4000000e+01, 2.3000000e+01,\n         1.7657325e+22, 2.1000000e+01, 2.0000000e+01, 1.9000000e+01,\n         1.8000000e+01],\n        [3.5000000e+01, 3.4000000e+01, 3.3000000e+01, 3.2000000e+01,\n         7.5839171e+31, 3.0000000e+01, 2.9000000e+01, 2.8000000e+01,\n         2.7000000e+01],\n        [4.4000000e+01, 4.3000000e+01, 4.2000000e+01, 4.1000000e+01,\n         3.3809470e+03, 3.9000000e+01, 3.8000000e+01, 3.7000000e+01,\n         3.6000000e+01],\n        [5.3000000e+01, 5.2000000e+01, 5.1000000e+01, 5.0000000e+01,\n         2.2267046e-15, 4.8000000e+01, 4.7000000e+01, 4.6000000e+01,\n         4.5000000e+01],\n        [6.2000000e+01, 6.1000000e+01, 6.0000000e+01, 5.9000000e+01,\n         7.5033516e+28, 5.7000000e+01, 5.6000000e+01, 5.5000000e+01,\n         5.4000000e+01],\n        [7.1000000e+01, 7.0000000e+01, 6.9000000e+01, 6.8000000e+01,\n         4.7427375e+30, 6.6000000e+01, 6.5000000e+01, 6.4000000e+01,\n         6.3000000e+01],\n        [8.0000000e+01, 7.9000000e+01, 7.8000000e+01, 7.7000000e+01,\n         1.4589531e-19, 7.5000000e+01, 7.4000000e+01, 7.3000000e+01,\n         7.2000000e+01],\n        [8.9000000e+01, 8.8000000e+01, 8.7000000e+01, 8.6000000e+01,\n         4.7427375e+30, 8.4000000e+01, 8.3000000e+01, 8.2000000e+01,\n         8.1000000e+01],\n        [9.8000000e+01, 9.7000000e+01, 9.6000000e+01, 9.5000000e+01,\n         1.9209545e+31, 9.3000000e+01, 9.2000000e+01, 9.1000000e+01,\n         9.0000000e+01]])\n \n >>> transformer(img)[:,:,0]  # try again, and sometimes it works okay...\n array([[90., 91., 92., 93., 94., 95., 96., 97., 98.],\n        [81., 82., 83., 84., 85., 86., 87., 88., 89.],\n        [72., 73., 74., 75., 76., 77., 78., 79., 80.],\n        [63., 64., 65., 66., 67., 68., 69., 70., 71.],\n        [54., 55., 56., 57., 58., 59., 60., 61., 62.],\n        [45., 46., 47., 48., 49., 50., 51., 52., 53.],\n        [36., 37., 38., 39., 40., 41., 42., 43., 44.],\n        [27., 28., 29., 30., 31., 32., 33., 34., 35.],\n        [18., 19., 20., 21., 22., 23., 24., 25., 26.],\n        [ 9., 10., 11., 12., 13., 14., 15., 16., 17.],\n        [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.]])\n </denchmark-code>\n \n <denchmark-h:h2>Environment</denchmark-h>\n \n <denchmark-code>----------Python Info----------\n Version      : 3.7.6\n Compiler     : MSC v.1916 64 bit (AMD64)\n Build        : ('tags/v3.7.6:43364a7ae0', 'Dec 19 2019 00:42:30')\n Arch         : ('64bit', 'WindowsPE')\n ------------Pip Info-----------\n Version      : 20.2.1\n Directory    : D:\\Projects\\Combinati\\dPCR-analysis\\env-mxnet\\lib\\site-packages\\pip\n ----------MXNet Info-----------\n Version      : 1.6.0\n Directory    : D:\\Projects\\Combinati\\dPCR-analysis\\env-mxnet\\lib\\site-packages\\mxnet\n Num GPUs     : 0\n Hashtag not found. Not installed from pre-built package.\n ----------System Info----------\n Platform     : Windows-10-10.0.18362-SP0\n system       : Windows\n node         : roger-5577\n release      : 10\n version      : 10.0.18362\n ----------Hardware Info----------\n machine      : AMD64\n processor    : Intel64 Family 6 Model 158 Stepping 9, GenuineIntel\n Name                                       \n Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz  \n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0080 sec, LOAD: 1.1030 sec.\n Timing for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0010 sec, LOAD: 0.5180 sec.\n Timing for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0861 sec, LOAD: 0.3459 sec.\n Timing for D2L: http://d2l.ai, DNS: 0.0520 sec, LOAD: 0.2090 sec.\n Timing for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0190 sec, LOAD: 0.2664 sec.\n Timing for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0870 sec, LOAD: 0.4820 sec.\n Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0100 sec, LOAD: 0.5760 sec.\n Error open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.006048440933227539 sec.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "rogerdettloff", "commentT": "2020-08-12T04:55:12Z", "comment_text": "\n \t\tWelcome to Apache MXNet (incubating)! We are on a mission to democratize AI, and we are glad that you are contributing to it by opening this issue.\n Please make sure to include all the relevant context, and one of the @apache/mxnet-committers will be here shortly.\n If you are interested in contributing to our project, let us know! Also, be sure to check out our guide on <denchmark-link:https://mxnet.apache.org/community/contribute>contributing to MXNet</denchmark-link>\n  and our <denchmark-link:https://cwiki.apache.org/confluence/display/MXNET/Developments>development guides wiki</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "rogerdettloff", "commentT": "2020-08-12T07:06:24Z", "comment_text": "\n \t\tThanks for reporting this. <denchmark-link:https://github.com/zhreshold>@zhreshold</denchmark-link>\n  mind taking a look?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "rogerdettloff", "commentT": "2020-08-12T23:16:15Z", "comment_text": "\n \t\tconfirmed, will update once I rooted the cause\n \t\t"}}}, "commit": {"commit_id": "a2b400c72e4069a2ee531a969fa874bef109a763", "commit_author": "Joshua Z. Zhang", "commitT": "2020-08-12 22:47:47-07:00", "commit_complexity": {"commit_NLOC": "0.6666666666666666", "commit_CCN": "0.6666666666666666", "commit_Nprams": "0.6666666666666666"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\image\\image_random-inl.h", "file_new_name": "src\\operator\\image\\image_random-inl.h", "file_complexity": {"file_NLOC": "881", "file_CCN": "130", "file_NToken": "8713"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "555,556,557", "deleted_lines": "555", "method_info": {"method_name": "mxnet::op::image::FlipImpl", "method_params": "shape,src,dst", "method_startline": "549", "method_endline": "567", "method_complexity": {"method_NLOC": "17", "method_CCN": "7", "method_NToken": "220", "method_nesting_level": "3"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\python\\unittest\\test_gluon_data_vision.py", "file_new_name": "tests\\python\\unittest\\test_gluon_data_vision.py", "file_complexity": {"file_NLOC": "348", "file_CCN": "40", "file_NToken": "4750"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "197,198,199,200,201", "deleted_lines": "197,198,199,200", "method_info": {"method_name": "test_flip_left_right", "method_params": "", "method_startline": "196", "method_endline": "201", "method_complexity": {"method_NLOC": "6", "method_CCN": "2", "method_NToken": "86", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "206,207,208,209,210", "deleted_lines": "205,206,207,208", "method_info": {"method_name": "test_flip_top_bottom", "method_params": "", "method_startline": "205", "method_endline": "210", "method_complexity": {"method_NLOC": "6", "method_CCN": "2", "method_NToken": "86", "method_nesting_level": "0"}}}}}}}}