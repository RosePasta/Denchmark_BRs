{"BR": {"BR_id": "18299", "BR_author": "acphile", "BRopenT": "2020-05-13T07:46:12Z", "BRcloseT": "2020-06-02T07:31:17Z", "BR_text": {"BRsummary": "Fail to use \"==\" operation between different types", "BRdescription": "\n for example\n <denchmark-code>import mxnet as mx\n mx.npx.set_np()\n mx.np.arange(5)\n array([0., 1., 2., 3., 4.])\n b=mx.np.arange(5)\n a=b.astype('int32')\n a==b\n </denchmark-code>\n \n it will raise Error:\n <denchmark-code>Traceback (most recent call last):\n   File \"<stdin>\", line 1, in <module>\n   File \"/home/ubuntu/incubator-mxnet/python/mxnet/numpy/multiarray.py\", line 991, in __eq__\n     return equal(self, other)\n   File \"/home/ubuntu/incubator-mxnet/python/mxnet/numpy/multiarray.py\", line 8451, in equal\n     return _mx_nd_np.equal(x1, x2, out)\n   File \"/home/ubuntu/incubator-mxnet/python/mxnet/ndarray/numpy/_op.py\", line 6622, in equal\n     return _api_internal.equal(x1, x2, out)\n   File \"/home/ubuntu/incubator-mxnet/python/mxnet/_ffi/_ctypes/function.py\", line 115, in __call__\n     raise get_last_ffi_error()\n mxnet.base.MXNetError: MXNetError: Type inconsistent, Provided = float32, inferred type = int32\n </denchmark-code>\n \n But numpy supports \"==\" operation between different types\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "acphile", "commentT": "2020-05-21T05:51:51Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/BenjaminCHEN2016>@BenjaminCHEN2016</denchmark-link>\n  will be helping after <denchmark-link:https://github.com/apache/incubator-mxnet/pull/18277>#18277</denchmark-link>\n  is merged.\n \t\t"}}}, "commit": {"commit_id": "c59a3255346ebe9bc0729c5a702fc99624ed2374", "commit_author": "Yijun Chen", "commitT": "2020-06-02 00:31:16-07:00", "commit_complexity": {"commit_NLOC": "0.4666666666666667", "commit_CCN": "0.7", "commit_Nprams": "0.3"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\mshadow_op.h", "file_new_name": "src\\operator\\mshadow_op.h", "file_complexity": {"file_NLOC": "1098", "file_CCN": "209", "file_NToken": "10019"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "117,118,119,120", "deleted_lines": "117,118"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\mxnet_op.h", "file_new_name": "src\\operator\\mxnet_op.h", "file_complexity": {"file_NLOC": "417", "file_CCN": "86", "file_NToken": "4037"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "866,867,868", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::mxnet_op::op_with_req::Map", "method_params": "i,out,lhs,rhs", "method_startline": "866", "method_endline": "868", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "46", "method_nesting_level": "4"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\numpy\\np_elemwise_broadcast_logic_op.cc", "file_new_name": "src\\operator\\numpy\\np_elemwise_broadcast_logic_op.cc", "file_complexity": {"file_NLOC": "184", "file_CCN": "15", "file_NToken": "1507"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "67,68", "method_info": {"method_name": "mxnet::op::NumpyBinaryLogicOpType", "method_params": "attrs,in_attrs,out_attrs", "method_startline": "61", "method_endline": "71", "method_complexity": {"method_NLOC": "11", "method_CCN": "3", "method_NToken": "121", "method_nesting_level": "2"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\operator\\tensor\\elemwise_binary_broadcast_op.h", "file_new_name": "src\\operator\\tensor\\elemwise_binary_broadcast_op.h", "file_complexity": {"file_NLOC": "684", "file_CCN": "126", "file_NToken": "7399"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::mxnet_op::binary_broadcast_kernel::Map", "method_params": "base,length,req,lstride,rstride,oshape,lhs,rhs,out", "method_startline": "213", "method_endline": "228", "method_complexity": {"method_NLOC": "13", "method_CCN": "2", "method_NToken": "180", "method_nesting_level": "4"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "452,453,454,455,462,463,464,470,471,473", "deleted_lines": "447,448", "method_info": {"method_name": "mxnet::op::BinaryBroadcastComputeLogic", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "445", "method_endline": "476", "method_complexity": {"method_NLOC": "32", "method_CCN": "4", "method_NToken": "349", "method_nesting_level": "2"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\tensor\\elemwise_binary_op.h", "file_new_name": "src\\operator\\tensor\\elemwise_binary_op.h", "file_complexity": {"file_NLOC": "697", "file_CCN": "157", "file_NToken": "6762"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "623,630,632", "deleted_lines": "629", "method_info": {"method_name": "mxnet::op::ElemwiseBinaryOp::ComputeLogic", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "611", "method_endline": "635", "method_complexity": {"method_NLOC": "25", "method_CCN": "3", "method_NToken": "259", "method_nesting_level": "3"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_numpy_op.py", "file_new_name": "tests\\python\\unittest\\test_numpy_op.py", "file_complexity": {"file_NLOC": "8296", "file_CCN": "1909", "file_NToken": "93576"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2784,2785,2786,2787,2788,2789,2790,2791,2792", "deleted_lines": null, "method_info": {"method_name": "test_np_mixed_precision_binary_funcs", "method_params": "", "method_startline": "2716", "method_endline": "2823", "method_complexity": {"method_NLOC": "50", "method_CCN": "10", "method_NToken": "719", "method_nesting_level": "0"}}}}}}}}