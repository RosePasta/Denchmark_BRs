{"BR": {"BR_id": "17299", "BR_author": "ChaokunChang", "BRopenT": "2020-01-14T08:11:49Z", "BRcloseT": "2020-03-02T22:27:55Z", "BR_text": {"BRsummary": "Error when building mxnet with USE_DIST_KVSTORE", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n (A clear and concise description of what the bug is.)\n I am building MxNet from source code, following the steps:\n \n git clone --recursive https://github.com/ChaokunChang/incubator-mxnet byteps-backend\n cd byteps-backend; mkdir build; cd build;\n cmake -DUSE_CUDA=1 -DUSE_MKLDNN=1 -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DBUILD_CYTHON_MODULES=1 -DUSE_DIST_KVSTORE=1 ..\n DEBUG=1 make -j48\n \n Then I met an error like this:\n <denchmark-h:h3>Error Message</denchmark-h>\n \n [  1%] Built target libomp-needed-headers                                                                                                                                                                       [5/1878]\n [  2%] Built target dmlc\n [  1%] Built target sample_lib\n [  3%] Performing build step for 'ZMQ'\n [  4%] Built target subgraph_lib\n make[3]: *** No targets specified and no makefile found.  Stop.\n 3rdparty/ps-lite/CMakeFiles/ZMQ.dir/build.make:111: recipe for target 'external/ZMQ-prefix/src/ZMQ-stamp/ZMQ-build' failed\n make[2]: *** [external/ZMQ-prefix/src/ZMQ-stamp/ZMQ-build] Error 2\n Scanning dependencies of target gtest_main\n CMakeFiles/Makefile2:2196: recipe for target '3rdparty/ps-lite/CMakeFiles/ZMQ.dir/all' failed\n make[1]: *** [3rdparty/ps-lite/CMakeFiles/ZMQ.dir/all] Error 2\n make[1]: *** Waiting for unfinished jobs....\n [  9%] Built target dnnl_common\n [ 10%] Building CXX object 3rdparty/googletest/googletest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o\n [ 14%] Built target omp\n In file included from /home/ubuntu/byteps-backend/build/3rdparty/ps-lite/src/meta.pb.cc:4:0:\n /home/ubuntu/byteps-backend/build/3rdparty/ps-lite/src/meta.pb.h:10:10: fatal error: google/protobuf/port_def.inc: No such file or directory\n #include <google/protobuf/port_def.inc>\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n compilation terminated.\n 3rdparty/ps-lite/CMakeFiles/pslite.dir/build.make:113: recipe for target '3rdparty/ps-lite/CMakeFiles/pslite.dir/src/meta.pb.cc.o' failed\n make[2]: *** [3rdparty/ps-lite/CMakeFiles/pslite.dir/src/meta.pb.cc.o] Error 1\n make[2]: *** Waiting for unfinished jobs....\n [ 32%] Built target dnnl_cpu\n In file included from /home/ubuntu/byteps-backend/3rdparty/ps-lite/src/van.cc:14:0:\n /home/ubuntu/byteps-backend/build/3rdparty/ps-lite/src/./meta.pb.h:10:10: fatal error: google/protobuf/port_def.inc: No such file or directory\n #include <google/protobuf/port_def.inc>\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n compilation terminated.\n 3rdparty/ps-lite/CMakeFiles/pslite.dir/build.make\ud83d\udcaf recipe for target '3rdparty/ps-lite/CMakeFiles/pslite.dir/src/van.cc.o' failed\n make[2]: *** [3rdparty/ps-lite/CMakeFiles/pslite.dir/src/van.cc.o] Error 1\n CMakeFiles/Makefile2:2159: recipe for target '3rdparty/ps-lite/CMakeFiles/pslite.dir/all' failed\n make[1]: *** [3rdparty/ps-lite/CMakeFiles/pslite.dir/all] Error 2\n [ 32%] Linking CXX static library ../../../lib/libgtest_main.a\n [ 32%] Built target gtest_main\n [ 95%] Built target mxnet_static\n Makefile:140: recipe for target 'all' failed\n <denchmark-link:https://user-images.githubusercontent.com/33217209/72325271-b6c60f00-36e7-11ea-8803-f59ebaf16c9a.png></denchmark-link>\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n The code is from <denchmark-link:https://github.com/ChaokunChang/incubator-mxnet>https://github.com/ChaokunChang/incubator-mxnet</denchmark-link>\n ; branck byteps-backend. The <denchmark-link:https://github.com/apache/incubator-mxnet/compare/master...ChaokunChang:byteps-backend>code change</denchmark-link>\n  doesn't include settings related to compile.\n <denchmark-h:h3>Steps to reproduce</denchmark-h>\n \n <denchmark-h:h2>What have you tried to solve it?</denchmark-h>\n \n \n I have tried with ninja (add _GNinja when cmake), but with the same error.\n Everything will be ok if I remove the -DUSE_DIST_KVSTORE in cmake-step.\n \n <denchmark-h:h2>Environment</denchmark-h>\n \n We recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\n <denchmark-code>curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\n \n # paste outputs here\n ----------Python Info----------\n Version      : 3.6.6\n Compiler     : GCC 7.2.0\n Build        : ('default', 'Jun 28 2018 17:14:51')\n Arch         : ('64bit', '')\n ------------Pip Info-----------\n Version      : 19.3.1\n Directory    : /home/ubuntu/anaconda3/lib/python3.6/site-packages/pip\n ----------MXNet Info-----------\n No MXNet installed.\n ----------System Info----------\n Platform     : Linux-4.15.0-1054-aws-x86_64-with-debian-buster-sid\n system       : Linux\n node         : ip-172-31-39-16\n release      : 4.15.0-1054-aws\n version      : #56-Ubuntu SMP Thu Nov 7 16:15:59 UTC 2019\n ----------Hardware Info----------\n machine      : x86_64\n processor    : x86_64\n Architecture:        x86_64\n CPU op-mode(s):      32-bit, 64-bit\n Byte Order:          Little Endian\n CPU(s):              8\n On-line CPU(s) list: 0-7\n Thread(s) per core:  2\n Core(s) per socket:  4\n Socket(s):           1\n NUMA node(s):        1\n Vendor ID:           GenuineIntel\n CPU family:          6\n Model:               79\n Model name:          Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz\n Stepping:            1\n CPU MHz:             2724.723\n CPU max MHz:         3000.0000\n CPU min MHz:         1200.0000\n BogoMIPS:            4600.12\n Hypervisor vendor:   Xen\n Virtualization type: full\n L1d cache:           32K\n L1i cache:           32K\n L2 cache:            256K\n L3 cache:            46080K\n NUMA node0 CPU(s):   0-7\n Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx xsaveopt\n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0028 sec, LOAD: 0.3791 sec.\n Timing for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0005 sec, LOAD: 0.3934 sec.\n Timing for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0008 sec, LOAD: 0.0229 sec.\n Timing for D2L: http://d2l.ai, DNS: 0.0005 sec, LOAD: 0.0032 sec.\n Timing for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0002 sec, LOAD: 0.1704 sec.\n Timing for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0003 sec, LOAD: 0.0171 sec.\n Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0005 sec, LOAD: 0.0531 sec.\n Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0002 sec, LOAD: 0.0235 sec.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ChaokunChang", "commentT": "2020-01-14T15:28:29Z", "comment_text": "\n \t\tPlease post the output of cmake -DUSE_CUDA=1 -DUSE_MKLDNN=1 -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DBUILD_CYTHON_MODULES=1 -DUSE_DIST_KVSTORE=1 ...\n It seems protobuf is not found correctly on your system. If this is the case and if protobuf is required, we can change the CMakeLists.txt to error out in case of not finding protobuf.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ChaokunChang", "commentT": "2020-01-14T15:31:05Z", "comment_text": "\n \t\tBesides protobuf, zmq is also a required dependency. However, cmake currently treats it as optional, leading to build error\n ../3rdparty/ps-lite/src/./zmq_van.h:8:10: fatal error: zmq.h: No such file or directory #include <zmq.h>\n if -DUSE_DIST_KVSTORE=1 is used.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ChaokunChang", "commentT": "2020-01-16T12:28:04Z", "comment_text": "\n \t\t\n Please post the output of cmake -DUSE_CUDA=1 -DUSE_MKLDNN=1 -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DBUILD_CYTHON_MODULES=1 -DUSE_DIST_KVSTORE=1 ...\n It seems protobuf is not found correctly on your system. If this is the case and if protobuf is required, we can change the CMakeLists.txt to error out in case of not finding protobuf.\n \n This is the output of cmake:\n -- The C compiler identification is GNU 7.4.0\n -- The CXX compiler identification is GNU 7.4.0\n -- Check for working C compiler: /usr/bin/cc\n -- Check for working C compiler: /usr/bin/cc -- works\n -- Detecting C compiler ABI info\n -- Detecting C compiler ABI info - done\n -- Detecting C compile features\n -- Detecting C compile features - done\n -- Check for working CXX compiler: /usr/bin/c++\n -- Check for working CXX compiler: /usr/bin/c++ -- works\n -- Detecting CXX compiler ABI info\n -- Detecting CXX compiler ABI info - done\n -- Detecting CXX compile features\n -- Detecting CXX compile features - done\n -- CMAKE_CROSSCOMPILING FALSE\n -- CMAKE_HOST_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_PROCESSOR x86_64\n -- CMAKE_SYSTEM_NAME Linux\n -- CMake version '3.13.3' using generator 'Unix Makefiles'\n -- The CUDA compiler identification is NVIDIA 10.0.130\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc\n -- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works\n -- Detecting CUDA compiler ABI info\n -- Detecting CUDA compiler ABI info - done\n -- Performing Test SUPPORT_CXX11\n -- Performing Test SUPPORT_CXX11 - Success\n -- Performing Test SUPPORT_CXX0X\n -- Performing Test SUPPORT_CXX0X - Success\n -- Performing Test SUPPORT_MSSE3\n -- Performing Test SUPPORT_MSSE3 - Success\n -- Performing Test SUPPORT_MSSE2\n -- Performing Test SUPPORT_MSSE2 - Success\n -- Determining F16C support\n -- Performing Test COMPILER_SUPPORT_MF16C\n -- Performing Test COMPILER_SUPPORT_MF16C - Success\n -- F16C enabled\n -- CMAKE_BUILD_TYPE is unset, defaulting to Release\n -- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value OFF\n -- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value OFF\n -- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value OFF\n -- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value STATIC\n -- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``\n -- Looking for pthread.h\n -- Looking for pthread.h - found\n -- Looking for pthread_create\n -- Looking for pthread_create - not found\n -- Looking for pthread_create in pthreads\n -- Looking for pthread_create in pthreads - not found\n -- Looking for pthread_create in pthread\n -- Looking for pthread_create in pthread - found\n -- Found Threads: TRUE\n -- Found OpenMP_C: -fopenmp (found version \"4.5\")\n -- Found OpenMP_CXX: -fopenmp (found version \"4.5\")\n -- Found OpenMP: TRUE (found version \"4.5\")\n -- GPU support is disabled\n -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)\n -- Found Git: /usr/bin/git (found version \"2.17.1\")\n -- Intel(R) VTune(TM) Amplifier JIT profiling disabled\n -- Could NOT find MKL (missing: MKL_INCLUDE_DIR MKL_RT_LIBRARY)\n -- Found OpenBLAS libraries: /usr/local/lib/libopenblas.so\n -- Found OpenBLAS include: /usr/local/include\n -- Found PkgConfig: /usr/bin/pkg-config (found version \"0.29.1\")\n -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR)\n -- Found OpenCV: /usr/local (found version \"4.0.0\") found components:  core highgui imgproc imgcodecs\n -- OpenCV 4.0.0 found (/usr/local/lib/cmake/opencv4)\n --  OpenCV_LIBS=opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs\n -- Found OpenMP_C: -fopenmp\n -- Found OpenMP_CXX: -fopenmp\n -- Found OpenMP: TRUE\n -- Performing Test OPENMP_HAVE_WERROR_FLAG\n -- Performing Test OPENMP_HAVE_WERROR_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_GNUPP11_FLAG - Success\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG\n -- Performing Test OPENMP_HAVE_STD_CPP11_FLAG - Success\n -- Found PythonInterp: /home/ubuntu/anaconda3/bin/python (found version \"3.6.6\")\n -- Cannot find llvm-lit.\n -- Please put llvm-lit in your PATH, set OPENMP_LLVM_LIT_EXECUTABLE to its full path, or point OPENMP_LLVM_TOOLS_DIR to its directory.\n CMake Warning at 3rdparty/openmp/cmake/OpenMPTesting.cmake:22 (message):\n The check targets will not be available!\n Call Stack (most recent call first):\n 3rdparty/openmp/cmake/OpenMPTesting.cmake:40 (find_standalone_test_dependencies)\n 3rdparty/openmp/CMakeLists.txt:49 (include)\n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG\n -- Performing Test LIBOMP_HAVE_FNO_RTTI_FLAG - Success\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG\n -- Performing Test LIBOMP_HAVE_X_CPP_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG\n -- Performing Test LIBOMP_HAVE_WCAST_QUAL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SWITCH_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_COMMENT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG\n -- Performing Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG\n -- Performing Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG\n -- Performing Test LIBOMP_HAVE_MSSE2_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG\n -- Performing Test LIBOMP_HAVE_FTLS_MODEL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG\n -- Performing Test LIBOMP_HAVE_MMIC_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_M32_FLAG\n -- Performing Test LIBOMP_HAVE_M32_FLAG - Failed\n -- Performing Test LIBOMP_HAVE_X_FLAG\n -- Performing Test LIBOMP_HAVE_X_FLAG - Success\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG\n -- Performing Test LIBOMP_HAVE_WARN_SHARED_TEXTREL_FLAG - Success\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG\n -- Performing Test LIBOMP_HAVE_AS_NEEDED_FLAG - Success\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG\n -- Performing Test LIBOMP_HAVE_VERSION_SCRIPT_FLAG - Success\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG\n -- Performing Test LIBOMP_HAVE_STATIC_LIBGCC_FLAG - Success\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG\n -- Performing Test LIBOMP_HAVE_Z_NOEXECSTACK_FLAG - Success\n -- Performing Test LIBOMP_HAVE_FINI_FLAG\n -- Performing Test LIBOMP_HAVE_FINI_FLAG - Success\n -- Found Perl: /usr/bin/perl (found version \"5.26.1\")\n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS\n -- Performing Test LIBOMP_HAVE_VERSION_SYMBOLS - Success\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS\n -- Performing Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS - Success\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE\n -- Performing Test LIBOMP_HAVE_WEAK_ATTRIBUTE - Success\n -- Looking for include files windows.h, psapi.h\n -- Looking for include files windows.h, psapi.h - not found\n -- Looking for EnumProcessModules in psapi\n -- Looking for EnumProcessModules in psapi - not found\n -- LIBOMP: Operating System     -- Linux\n -- LIBOMP: Target Architecture  -- x86_64\n -- LIBOMP: Build Type           -- Release\n -- LIBOMP: Library Kind         -- SHARED\n -- LIBOMP: Library Type         -- normal\n -- LIBOMP: Fortran Modules      -- FALSE\n -- LIBOMP: Build                -- 20140926\n -- LIBOMP: Use Stats-gathering  -- FALSE\n -- LIBOMP: Use Debugger-support -- FALSE\n -- LIBOMP: Use ITT notify       -- TRUE\n -- LIBOMP: Use OMPT-support     -- TRUE\n -- LIBOMP: Use OMPT-optional  -- TRUE\n -- LIBOMP: Use Adaptive locks   -- TRUE\n -- LIBOMP: Use quad precision   -- TRUE\n -- LIBOMP: Use TSAN-support     -- FALSE\n -- LIBOMP: Use Hwloc library    -- FALSE\n -- Looking for sqrt in m\n -- Looking for sqrt in m - found\n -- Looking for __atomic_load_1\n -- Looking for __atomic_load_1 - not found\n -- Looking for __atomic_load_1 in atomic\n -- Looking for __atomic_load_1 in atomic - found\n -- check-libomp does nothing.\n -- check-ompt does nothing.\n -- check-openmp does nothing.\n USE_LAPACK is ON\n -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR)\n CMake Warning at 3rdparty/googletest/googletest/CMakeLists.txt:47 (project):\n VERSION keyword not followed by a value or was followed by a value that\n expanded to nothing.\n -- Found GTest: gtest\n -- Found CUDNN: /usr/local/cuda/lib64/libcudnn.so\n -- Looking for clock_gettime in rt\n -- Looking for clock_gettime in rt - found\n -- Looking for fopen64\n -- Looking for fopen64 - not found\n -- Looking for C++ include cxxabi.h\n -- Looking for C++ include cxxabi.h - found\n -- Looking for nanosleep\n -- Looking for nanosleep - found\n -- Looking for backtrace\n -- Looking for backtrace - found\n -- backtrace facility detected in default set of libraries\n -- Found Backtrace: /usr/include\n -- Check if the system is big endian\n -- Searching 16 bit integer\n -- Looking for sys/types.h\n -- Looking for sys/types.h - found\n -- Looking for stdint.h\n -- Looking for stdint.h - found\n -- Looking for stddef.h\n -- Looking for stddef.h - found\n -- Check size of unsigned short\n -- Check size of unsigned short - done\n -- Using unsigned short\n -- Check if the system is big endian - little endian\n -- /home/ubuntu/incubator-mxnet/3rdparty/dmlc-core/cmake/build_config.h.in -> include/dmlc/build_config.h\n -- Found OpenMP_C: -fopenmp\n -- Found OpenMP_CXX: -fopenmp\n -- Automatic GPU detection failed. Building for common architectures.\n -- Autodetected CUDA architecture(s): 3.0;3.5;5.0;5.2;6.0;6.1;7.0;7.0+PTX;7.5;7.5+PTX\n -- CUDA: Using the following NVCC architecture flags -gencode;arch=compute_30,code=sm_30;-gencode;arch=compute_35,code=sm_35;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_70,code=compute_70;-gencode;arch=compute_75,code=compute_75\n -- Found CUDAToolkit: /usr/local/cuda/include (found version \"10.0.130\")\n -- Could NOT find ZMQ (missing: ZMQ_LIBRARY ZMQ_INCLUDE_DIR)\n CMake Warning at /usr/local/lib/python3.6/dist-packages/cmake/data/share/cmake-3.13/Modules/FindProtobuf.cmake:495 (message):\n Protobuf compiler version 3.8.0 doesn't match library version 3.0.0\n Call Stack (most recent call first):\n 3rdparty/ps-lite/cmake/ProtoBuf.cmake:4 (find_package)\n 3rdparty/ps-lite/CMakeLists.txt:22 (include)\n -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-lpthread (found version \"3.0.0\")\n -- Found PROTOBUF Compiler: /home/ubuntu/anaconda3/bin/protoc\n -- Found PythonInterp: /usr/bin/python2 (found suitable exact version \"2.7.15\")\n -- Cython modules for python2 will be built\n -- Found PythonInterp: /home/ubuntu/anaconda3/bin/python3 (found suitable exact version \"3.6.6\")\n -- Cython modules for python3 will be built\n -- Configuring done\n -- Generating done\n -- Build files have been written to: /home/ubuntu/incubator-mxnet/build\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "ChaokunChang", "commentT": "2020-01-16T12:35:04Z", "comment_text": "\n \t\tLooking at your output, you can see\n <denchmark-code> -- Could NOT find ZMQ (missing: ZMQ_LIBRARY ZMQ_INCLUDE_DIR)\n </denchmark-code>\n \n You need to install ZMQ. This should have been a fatal error preventing build.\n <denchmark-code>CMake Warning at /usr/local/lib/python3.6/dist-packages/cmake/data/share/cmake-3.13/Modules/FindProtobuf.cmake:495 (message):\n Protobuf compiler version 3.8.0 doesn't match library version 3.0.0\n Call Stack (most recent call first):\n 3rdparty/ps-lite/cmake/ProtoBuf.cmake:4 (find_package)\n 3rdparty/ps-lite/CMakeLists.txt:22 (include)\n \n -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-lpthread (found version \"3.0.0\")\n -- Found PROTOBUF Compiler: /home/ubuntu/anaconda3/bin/protoc\n </denchmark-code>\n \n Your system is not setup correctly. You're mixing system protobuf and some conda protobuf.\n Conda messes a lot with your system. You shouldn't use it if you want to compile MXNet.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "ChaokunChang", "commentT": "2020-01-16T12:58:36Z", "comment_text": "\n \t\t\n Looking at your output, you can see\n  -- Could NOT find ZMQ (missing: ZMQ_LIBRARY ZMQ_INCLUDE_DIR)\n \n You need to install ZMQ. This should have been a fatal error preventing build.\n CMake Warning at /usr/local/lib/python3.6/dist-packages/cmake/data/share/cmake-3.13/Modules/FindProtobuf.cmake:495 (message):\n Protobuf compiler version 3.8.0 doesn't match library version 3.0.0\n Call Stack (most recent call first):\n 3rdparty/ps-lite/cmake/ProtoBuf.cmake:4 (find_package)\n 3rdparty/ps-lite/CMakeLists.txt:22 (include)\n \n -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-lpthread (found version \"3.0.0\")\n -- Found PROTOBUF Compiler: /home/ubuntu/anaconda3/bin/protoc\n \n Your system is not setup correctly. You're mixing system protobuf and some conda protobuf.\n Conda messes a lot with your system. You shouldn't use it if you want to compile MXNet.\n \n Thank you a lot. Do you have any suggestions to disable Conda protobuf without uninstalling? (I didn't use conda meaningly.)\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "ChaokunChang", "commentT": "2020-01-16T13:10:05Z", "comment_text": "\n \t\t\n Thank you a lot. Do you have any suggestions to disable Conda protobuf without uninstalling? (I didn't use conda meaningly.)\n \n I suppose you activated conda after logging in to your machine. Something like source activate mxnet_p36. If you did so, try not doing so.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "ChaokunChang", "commentT": "2020-01-16T13:19:05Z", "comment_text": "\n \t\t\n so\n \n I have never used source activate mxnet_p3 command before (In fact I even didn't know what is it ...). I thought I didn't use conda because there is no something like (base) before ubuntu@ip-xx-xx-xx-xx:~$ \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "ChaokunChang", "commentT": "2020-01-16T14:47:04Z", "comment_text": "\n \t\tIt means you are using the (base) conda environment.\n Maybe it's activated by default on the Deep Learning AMI. You can check the .bashrc file and delete any lines like source activate.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "ChaokunChang", "commentT": "2020-01-17T01:07:39Z", "comment_text": "\n \t\tclose in mistake, reopen\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "ChaokunChang", "commentT": "2020-01-23T23:56:45Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ChaokunChang>@ChaokunChang</denchmark-link>\n  Sorry, I misread your comment at <denchmark-link:https://github.com/apache/incubator-mxnet/issues/17299#issuecomment-575147222>#17299 (comment)</denchmark-link>\n \n I understand you're not using conda. Unfortunately the environment you're using (DLAMI) activates some conda features by default (for example you're using /home/ubuntu/anaconda3/lib/python3.6/site-packages/pip and /home/ubuntu/anaconda3/bin/protoc). This is a problem with DLAMI.\n I recommend you use Base-DLAMI instead. We'll report this problem to DLAMI team.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "ChaokunChang", "commentT": "2020-01-29T00:36:48Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/leezu>@leezu</denchmark-link>\n  I encountered the same problem trying to install mxnet with USE_DIST_KVSTORE ON in the latest AWS DLAMI. I think we need to solve this problem for a better user experience.\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "ChaokunChang", "commentT": "2020-01-29T00:42:34Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/apeforest>@apeforest</denchmark-link>\n  may be able to add a workaround for DLAMI at <denchmark-link:https://github.com/dmlc/ps-lite/blob/master/cmake/ProtoBuf.cmake>https://github.com/dmlc/ps-lite/blob/master/cmake/ProtoBuf.cmake</denchmark-link>\n \n I think the problem here is that DLAMI has a strange setup including /home/ubuntu/anaconda3/bin/protoc by default on PATH. What do you think?\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "ChaokunChang", "commentT": "2020-01-29T20:21:30Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/leezu>@leezu</denchmark-link>\n  Just FYI, if I use make with the USE_DIST_KVSTORE=ON in config.mk, then the build is fine.\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "ChaokunChang", "commentT": "2020-01-29T21:40:01Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/apeforest>@apeforest</denchmark-link>\n  thank you. cmake build fails due to DLAMI violating some assumption taken when writing <denchmark-link:https://github.com/dmlc/ps-lite/blob/master/cmake/ProtoBuf.cmake>https://github.com/dmlc/ps-lite/blob/master/cmake/ProtoBuf.cmake</denchmark-link>\n  in 2017 (cc <denchmark-link:https://github.com/yajiedesign>@yajiedesign</denchmark-link>\n ).\n I'll look into finding a workaround it in a few days\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "ChaokunChang", "commentT": "2020-02-28T21:38:27Z", "comment_text": "\n \t\tI verified this error is due to DLAMI shipping protoc version 3.8.0 but headers from version 3.0.0.\n google/protobuf/port_def.inc is included in headers generated by protoc version >= 3.7.0, but of course if your system comes only with headers from 3.0.0 compilation will fail.\n \t\t"}, "comments_15": {"comment_id": 16, "comment_author": "ChaokunChang", "commentT": "2020-02-28T21:57:24Z", "comment_text": "\n \t\tYou can workaround the DLAMI bugs by running with\n cmake -DProtobuf_PROTOC_EXECUTABLE=/usr/bin/protoc [...]\n \t\t"}, "comments_16": {"comment_id": 17, "comment_author": "ChaokunChang", "commentT": "2020-02-28T22:07:27Z", "comment_text": "\n \t\tReported an issue upstream requesting if cmake may have any strategy to handle broken systems such as DLAMI <denchmark-link:https://gitlab.kitware.com/cmake/cmake/issues/20403>https://gitlab.kitware.com/cmake/cmake/issues/20403</denchmark-link>\n \n \t\t"}, "comments_17": {"comment_id": 18, "comment_author": "ChaokunChang", "commentT": "2020-02-28T22:18:11Z", "comment_text": "\n \t\tWith respect to the Makefile build <denchmark-link:https://github.com/apeforest>@apeforest</denchmark-link>\n , the reason is that Makefile based build doesn't use system protobuf, but downloads and compiles  as part of the build.\n \t\t"}, "comments_18": {"comment_id": 19, "comment_author": "ChaokunChang", "commentT": "2020-02-29T01:49:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/dmlc/ps-lite/pull/170>dmlc/ps-lite#170</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "04ae3898783846811e6e57e3d9fc900f6aec48dc", "commit_author": "Leonard Lausen", "commitT": "2020-03-02 14:27:53-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "3rdparty\\ps-lite", "file_new_name": "3rdparty\\ps-lite", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1", "deleted_lines": "1"}}}}}}