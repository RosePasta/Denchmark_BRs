{"BR": {"BR_id": "11339", "BR_author": "wenyangchu", "BRopenT": "2018-06-19T23:50:03Z", "BRcloseT": "2018-07-17T17:57:59Z", "BR_text": {"BRsummary": "compiling error when USE_CUDA=1  and USE_CUDNN=0 with make command", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n compiling error when USE_CUDA=1  and USE_CUDNN=0 with make command\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n <denchmark-code>Ubuntu 16.04 \n \n </denchmark-code>\n \n <denchmark-h:h2>Build info (Required if built from source)</denchmark-h>\n \n Compiler g++/gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\n <denchmark-h:h2>Error Message:</denchmark-h>\n \n src/operator/nn/convolution.cu(93): error: identifier \"param_\" is undefined\n src/operator/nn/convolution.cu(171): error: identifier \"param_\" is undefined\n and fix it in the code, get more errors:\n build/src/engine/naive_engine.o: In function mxnet::engine::NaiveEngine::~NaiveEngine()': naive_engine.cc:(.text._ZN5mxnet6engine11NaiveEngineD2Ev[_ZN5mxnet6engine11NaiveEngineD5Ev]+0xd35): undefined reference to cudnnDestroy'\n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n Use the latest master branch\n <denchmark-h:h2>Steps to reproduce</denchmark-h>\n \n (Paste the commands you ran that produced the error.)\n \n checkout latest master branch\n run\n make -j $(nproc) USE_OPENCV=1 USE_BLAS=openblas USE_CUDA=1 USE_CUDA_PATH=/usr/local/cuda USE_CUDNN=0\n \n <denchmark-h:h2>What have you tried to solve it?</denchmark-h>\n \n \n By changing the following:\n diff --git a/src/operator/nn/convolution.cu b/src/operator/nn/convolution.cu\n index 9f61212..9f573f1 100644\n --- a/src/operator/nn/convolution.cu\n +++ b/src/operator/nn/convolution.cu\n @@ -89,7 +89,7 @@ void ConvolutionCompute(const nnvm::NodeAttrs& attrs,\n const ConvolutionParam& param = nnvm::get(attrs.parsed);\n int dtype = inputs[conv::kData].type_flag_;\n \n -#if CUDNN_MAJOR < 5\n +#if MXNET_USE_CUDNN ==1 && CUDNN_MAJOR < 5\n if (param_.layout.value() != kNCW &&\n param_.layout.value() != kNCHW &&\n param_.layout.value() != kNCDHW) {\n @@ -167,7 +167,7 @@ void ConvolutionGradCompute(const nnvm::NodeAttrs& attrs,\n const std::vector &in_grad = outputs;\n int dtype = out_grad.type_flag_;\n -#if CUDNN_MAJOR < 5\n +#if MXNET_USE_CUDNN ==1 && CUDNN_MAJOR < 5\n if (param_.layout.value() != kNCW &&\n param_.layout.value() != kNCHW &&\n param_.layout.value() != kNCDHW) {\n I can continue compiling but get another error below:\n build/src/engine/naive_engine.o: In function mxnet::engine::NaiveEngine::~NaiveEngine()': naive_engine.cc:(.text._ZN5mxnet6engine11NaiveEngineD2Ev[_ZN5mxnet6engine11NaiveEngineD5Ev]+0xd35): undefined reference to cudnnDestroy'\n naive_engine.cc:(.text._ZN5mxnet6engine11NaiveEngineD2Ev[_ZN5mxnet6engine11NaiveEngineD5Ev]+0x1ce4): undefined reference to cudnnGetErrorString' build/src/engine/naive_engine.o: In function void mshadow::DeleteStreammshadow::gpu(mshadow::Streammshadow::gpu*)':\n naive_engine.cc:(.text._ZN7mshadow12DeleteStreamINS_3gpuEEEvPNS_6StreamIT_EE[_ZN7mshadow12DeleteStreamINS_3gpuEEEvPNS_6StreamIT_EE]+0x12a): undefined reference to `cudnnDestroy'\n ....\n The cudnn flag is set in mshadow I suppose but I haven't found out what makes the cudnn flag is true\n By the way, I think jenkins does not test this configuration I suppose\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "wenyangchu", "commentT": "2018-06-24T18:28:45Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wenyangchu>@wenyangchu</denchmark-link>\n  thank you for reporting the issue, <denchmark-link:https://github.com/sandeep-krishnamurthy>@sandeep-krishnamurthy</denchmark-link>\n  Requesting this to labeled under Installation\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "wenyangchu", "commentT": "2018-07-11T20:12:51Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wenyangchu>@wenyangchu</denchmark-link>\n  It's actually a typo, it should be  instead of . Fixed in <denchmark-link:https://github.com/apache/incubator-mxnet/pull/11470>#11470</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "wenyangchu", "commentT": "2018-07-17T18:00:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wenyangchu>@wenyangchu</denchmark-link>\n  Would you please verify whether this has been fixed on your end when you have a minute? I've tried this out and verified that the fix works on my end.\n \t\t"}}}, "commit": {"commit_id": "5b631444974b72238a5d0a6929cf7a10ff532643", "commit_author": "Anirudh Subramanian", "commitT": "2018-07-12 16:40:24-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "Jenkinsfile", "file_new_name": "Jenkinsfile", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "166,167,168,169,170,171,172,302,303,304,305,306,307,308,309,310,311,312,688,689,690,691,692,693,694,695,696,697,698,699,700,701", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "ci\\docker\\runtime_functions.sh", "file_new_name": "ci\\docker\\runtime_functions.sh", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,631,632,633,634,635,636,637,638", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\c_api\\c_api.cc", "file_new_name": "src\\c_api\\c_api.cc", "file_complexity": {"file_NLOC": "1167", "file_CCN": "154", "file_NToken": "8193"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "1322"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\nn\\convolution.cu", "file_new_name": "src\\operator\\nn\\convolution.cu", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "93,94,95,171,172,173", "deleted_lines": "93,94,95,171,172,173"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\python\\gpu\\test_operator_gpu.py", "file_new_name": "tests\\python\\gpu\\test_operator_gpu.py", "file_complexity": {"file_NLOC": "1516", "file_CCN": "181", "file_NToken": "21504"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "35,425,1320,1332,1354,1366,1385,1557,1613", "deleted_lines": "35"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tests\\python\\unittest\\common.py", "file_new_name": "tests\\python\\unittest\\common.py", "file_complexity": {"file_NLOC": "122", "file_CCN": "31", "file_NToken": "878"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "98,99,100,101,102,103,104,105,106,107,108,109,110,111,112", "deleted_lines": null, "method_info": {"method_name": "assert_raises_cudnn_disabled", "method_params": "assertion_error", "method_startline": "98", "method_endline": "112", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "101,102,103,104,105,106,107,108,109,110", "deleted_lines": null, "method_info": {"method_name": "assert_raises_cudnn_disabled.assert_raises_cudnn_disabled.test_helper.test_new", "method_params": "args,kwargs", "method_startline": "101", "method_endline": "110", "method_complexity": {"method_NLOC": "10", "method_CCN": "4", "method_NToken": "80", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "99,100,101,102,103,104,105,106,107,108,109,110,111", "deleted_lines": null, "method_info": {"method_name": "assert_raises_cudnn_disabled.test_helper", "method_params": "orig_test", "method_startline": "99", "method_endline": "111", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "14", "method_nesting_level": "1"}}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\python\\unittest\\test_gluon.py", "file_new_name": "tests\\python\\unittest\\test_gluon.py", "file_complexity": {"file_NLOC": "1113", "file_CCN": "146", "file_NToken": "11390"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "23,1262", "deleted_lines": "23"}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\python\\unittest\\test_gluon_rnn.py", "file_new_name": "tests\\python\\unittest\\test_gluon_rnn.py", "file_complexity": {"file_NLOC": "432", "file_CCN": "69", "file_NToken": "5901"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "25,28,109,130,131,147,428,541,542", "deleted_lines": null}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\python\\unittest\\test_operator.py", "file_new_name": "tests\\python\\unittest\\test_operator.py", "file_complexity": {"file_NLOC": "5716", "file_CCN": "932", "file_NToken": "72571"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "206,211", "deleted_lines": "204", "method_info": {"method_name": "test_rnnrelu_bidirectional", "method_params": "", "method_startline": "201", "method_endline": "219", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "204", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "168,173,178", "deleted_lines": "167,172", "method_info": {"method_name": "test_rnntanh_bidirectional", "method_params": "", "method_startline": "163", "method_endline": "181", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "204", "method_nesting_level": "0"}}}}}}}}