{"BR": {"BR_id": "1412", "BR_author": "tonyyang-svail", "BRopenT": "2019-12-13T05:58:37Z", "BRcloseT": "2019-12-17T05:39:01Z", "BR_text": {"BRsummary": "TestGetPodLogs fails randomly", "BRdescription": "\n To reproduce, we can run TestGetPodLogs many times.\n Sample script:\n <denchmark-code>set -e\n for i in {0..100}; do\n \techo $i\n \tgo test -run TestGetPodLogs\n done\n </denchmark-code>\n \n The test failed at the 17th run.\n <denchmark-code>sqlflow/pkg/argo# bash long_test.sh\n ...\n 15\n PASS\n ok  \tsqlflow.org/sqlflow/pkg/argo\t10.109s\n 16\n PASS\n ok  \tsqlflow.org/sqlflow/pkg/argo\t8.144s\n 17\n --- FAIL: TestGetPodLogs (9.48s)\n     fetch_test.go:305:\n         \tError Trace:\tfetch_test.go:305\n         \tError:      \tNot equal:\n         \t            \texpected: []string{\"hello1\", \"hello2\"}\n         \t            \tactual  : []string{\"hello1\", \"hello2\", \"hello3\"}\n \n         \t            \tDiff:\n         \t            \t--- Expected\n         \t            \t+++ Actual\n         \t            \t@@ -1,4 +1,5 @@\n         \t            \t-([]string) (len=2) {\n         \t            \t+([]string) (len=3) {\n         \t            \t  (string) (len=6) \"hello1\",\n         \t            \t- (string) (len=6) \"hello2\"\n         \t            \t+ (string) (len=6) \"hello2\",\n         \t            \t+ (string) (len=6) \"hello3\"\n         \t            \t }\n         \tTest:       \tTestGetPodLogs\n FAIL\n exit status 1\n FAIL\tsqlflow.org/sqlflow/pkg/argo\t9.512s\n </denchmark-code>\n \n Related code\n \n \n \n sqlflow/pkg/argo/fetch_test.go\n \n \n         Lines 275 to 302\n       in\n       a8ac42f\n \n \n \n \n \n \n  func TestGetPodLogs(t *testing.T) { \n \n \n \n  if os.Getenv(\"SQLFLOW_TEST\") != \"workflow\" { \n \n \n \n  t.Skip(\"argo: skip workflow tests\") \n \n \n \n  \t} \n \n \n \n  a := assert.New(t) \n \n \n \n  _, err := kubectlDeleteFromYAML(podYAML) \n \n \n \n  a.NoError(err) \n \n \n \n  podID, err := kubectlCreateFromYAML(podYAML) \n \n \n \n  a.NoError(err) \n \n \n \n  \n \n \n \n  err = waitUntilPodRunning(podID) \n \n \n \n  a.NoError(err) \n \n \n \n  offset := \"\" \n \n \n \n  realLogs := []string{} \n \n \n \n  for { \n \n \n \n  logs, newOffset, err := getPodLogs(podID, offset) \n \n \n \n  a.NoError(err) \n \n \n \n  if len(logs) != 0 { \n \n \n \n  realLogs = append(realLogs, logs...) \n \n \n \n  \t\t} \n \n \n \n  if isPodCompleted(podID) && offset == newOffset { \n \n \n \n  break \n \n \n \n  \t\t} \n \n \n \n  offset = newOffset \n \n \n \n  \t} \n \n \n \n  a.Equal(realLogs, []string{\"hello1\", \"hello2\", \"hello3\"}) \n \n \n \n  \n \n \n \n  } \n \n \n \n \n \n \t"}, "comments": {}}, "commit": {"commit_id": "e30e18f8f220175d802face68f7164280c27eea5", "commit_author": "Yan Xu", "commitT": "2019-12-17 13:39:00+08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "pkg\\argo\\fetch.go", "file_new_name": "pkg\\argo\\fetch.go", "file_complexity": {"file_NLOC": "188", "file_CCN": "46", "file_NToken": "1284"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "167", "deleted_lines": "167,168", "method_info": {"method_name": "getPodLogs", "method_params": "string,string", "method_startline": "158", "method_endline": "168", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "88", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "121,125,127", "deleted_lines": "121,125,127", "method_info": {"method_name": "parseOffset", "method_params": "string", "method_startline": "121", "method_endline": "128", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "81", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "139,140", "deleted_lines": "139,140", "method_info": {"method_name": "getOffsetAndContentFromLogs", "method_params": "logs,string", "method_startline": "130", "method_endline": "156", "method_complexity": {"method_NLOC": "23", "method_CCN": "6", "method_NToken": "114", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "pkg\\argo\\fetch_test.go", "file_new_name": "pkg\\argo\\fetch_test.go", "file_complexity": {"file_NLOC": "258", "file_CCN": "40", "file_NToken": "1429"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "277,282,283,285,289,291,295,297", "deleted_lines": "280,281,288,293,295", "method_info": {"method_name": "TestGetPodLogs", "method_params": "T", "method_startline": "270", "method_endline": "299", "method_complexity": {"method_NLOC": "28", "method_CCN": "6", "method_NToken": "164", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "111,112,113,115,117", "deleted_lines": "111,112,114,116,117,118", "method_info": {"method_name": "kubectlDeletePod", "method_params": "string", "method_startline": "111", "method_endline": "118", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "53", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "111,112,113,115,117", "deleted_lines": "111,112,114,116,117,118,119,120,121,122", "method_info": {"method_name": "kubectlDeleteFromYAML", "method_params": "string", "method_startline": "111", "method_endline": "123", "method_complexity": {"method_NLOC": "13", "method_CCN": "3", "method_NToken": "92", "method_nesting_level": "0"}}}}}}}}