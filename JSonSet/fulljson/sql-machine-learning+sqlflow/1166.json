{"BR": {"BR_id": "1166", "BR_author": "Echo9573", "BRopenT": "2019-11-10T06:46:21Z", "BRcloseT": "2019-11-18T18:34:01Z", "BR_text": {"BRsummary": "Throw Exception\"genTF unsupported label data type: DOUBLE_TYPE\"", "BRdescription": "\n Description\n Throw Exception \"converting driver.Value type float64 (\"-0.034224987\") to a int64 \" when select data from predictions in notebook.\n \n <denchmark-link:https://user-images.githubusercontent.com/24820352/68540168-91a3e000-03c8-11ea-92bb-b7d7557126aa.png></denchmark-link>\n \n %%sqlflow\n SELECT *\n FROM intelligence_da_dev.titanic_train\n TRAIN DNNClassifier\n WITH\n   model.n_classes = 2,\n   model.hidden_units = [10, 40, 10],\n   train.epoch = 200,\n   train.batch_size = 64\n COLUMN age, fare, pclass_3, pclass_1, pclass_2, sex_male, sex_female, sibsp_1, sibsp_0, sibsp_others_type, parch_0, parch_1, parch_2, parch_others_type, embarked_s, embarked_c, embarked_others_type, embarked_unknown_type\n LABEL survived\n INTO intelligence_da_dev.my_dnn_model;\n --------------------------------Exception------------------------------\n _Rendezvous: <_Rendezvous of RPC that terminated with:\n status = StatusCode.UNKNOWN\n details = \"genTF unsupported label data type: DOUBLE_TYPE\"\n debug_error_string = \"{\"created\":\"@1573309027.737003066\",\"description\":\"Error received from peer ipv4:10.82.128.7:8005\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1055,\"grpc_message\":\"genTF unsupported label data type: DOUBLE_TYPE\",\"grpc_status\":2}\"\n \n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Echo9573", "commentT": "2019-11-10T06:47:48Z", "comment_text": "\n \t\tThis question is similar to <denchmark-link:https://github.com/sql-machine-learning/sqlflow/issues/770>#770</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Echo9573", "commentT": "2019-11-10T12:51:21Z", "comment_text": "\n \t\tHi, <denchmark-link:https://github.com/Yancey1989>@Yancey1989</denchmark-link>\n , When I manually convert the double type to a float, another exception is also thrown, as followings shows. Maybe it is necessary for SQLFlow to support common database types.\n --------------------------------Exception------------------------------\n _Rendezvous: <_Rendezvous of RPC that terminated with:\n status = StatusCode.UNKNOWN\n details = \"genTF unsupported label data type: BIGINT_TYPE\"\n debug_error_string = \"{\"created\":\"@1573389345.693687540\",\"description\":\"Error received from peer ipv4:10.82.128.7:8005\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1055,\"grpc_message\":\"genTF unsupported label data type: BIGINT_TYPE\",\"grpc_status\":2}\"\n \n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Echo9573", "commentT": "2019-11-10T13:07:34Z", "comment_text": "\n \t\tThe hive data type is as follows:\n Tinyint, smallint, int, bigint, boolean, float, double, string, binary, timestamp, decimal, date, varchar, char, array, map, struct.\n Common data types may have at least tinyint, smallint, int, bigint, float, double, decimal, varchar, char\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Echo9573", "commentT": "2019-11-10T16:16:23Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/Echo9573>@Echo9573</denchmark-link>\n  , thanks for your report, I will reproduce your case.\n <denchmark-h:hr></denchmark-h>\n \n \n The hive data type is as follows:\n Tinyint, smallint, int, bigint, boolean, float, double, string, binary, timestamp, decimal, date, varchar, char, array, map, struct.\n Common data types may have at least tinyint, smallint, int, bigint, float, double, decimal, varchar, char\n \n It seems that array/map/struct is more complex, can you show some cases that how to use them in Tensorflow/XGBoost or other toolkit ?\n \t\t"}}}, "commit": {"commit_id": "c67f41e8a4fd54e53f98dbb9329d0b9f3dc39e8d", "commit_author": "Wu Yi", "commitT": "2019-11-18 10:34:00-08:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "cmd\\sqlflowserver\\main_test.go", "file_new_name": "cmd\\sqlflowserver\\main_test.go", "file_complexity": {"file_NLOC": "933", "file_CCN": "146", "file_NToken": "6381"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "371", "deleted_lines": null, "method_info": {"method_name": "TestEnd2EndHive", "method_params": "T", "method_startline": "349", "method_endline": "376", "method_complexity": {"method_NLOC": "27", "method_CCN": "4", "method_NToken": "177", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "pkg\\sql\\feature_derivation.go", "file_new_name": "pkg\\sql\\feature_derivation.go", "file_complexity": {"file_NLOC": "313", "file_CCN": "74", "file_NToken": "2059"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "99,100,101,102,106,110", "deleted_lines": "102,103,107"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "pkg\\sql\\testdata\\housing_sql.go", "file_new_name": "pkg\\sql\\testdata\\housing_sql.go", "file_complexity": {"file_NLOC": "542", "file_CCN": "0", "file_NToken": "29488"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "29,33,452,456", "deleted_lines": "29,33,452,456"}}}}}}