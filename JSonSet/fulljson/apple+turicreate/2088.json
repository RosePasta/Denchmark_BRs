{"BR": {"BR_id": "2088", "BR_author": "guihao-liang", "BRopenT": "2019-06-25T23:15:54Z", "BRcloseT": "2019-06-27T19:46:06Z", "BR_text": {"BRsummary": "SAarray fails to construct from data when dtype is explicitly specified", "BRdescription": "\n The test failed when passing a map type.\n <denchmark-code>        # map input type\n         toy_data = SFrame({'a': range(100)})\n         map_result = map(lambda x: x+1, [1, 30])\n         result = toy_data.filter_by(map_result, 'a')\n >       self.assertEqual(len(result), 2)\n E       AssertionError: 1 != 2\n </denchmark-code>\n \n minimal repro:\n <denchmark-code>map_result = map(lambda x: x+1, [1, 30])\n g = tc.SArray(map(lambda x: x+1, [1, 30]), int)\n TypeError                                 Traceback (most recent call last)\n <ipython-input-40-04fb1819e4fc> in <module>\n ----> 1 g = tc.SArray(map(lambda x: x+1, [1, 30]), int)\n \n ~/Work/guicreate/debug/src/python/turicreate/data_structures/sarray.py in __init__(self, data, dtype, ignore_cast_failure, _proxy)\n     424                     self.__proxy__.load_from_iterable(data, dtype, ignore_cast_failure)\n     425             else:\n --> 426                 raise TypeError(\"Unexpected data source. \" \\\n     427                                 \"Possible data source types are: list, \" \\\n     428                                 \"numpy.ndarray, pandas.Series, and string(url)\")\n \n TypeError: Unexpected data source. Possible data source types are: list, numpy.ndarray, pandas.Series, and string(url)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "guihao-liang", "commentT": "2019-06-26T17:07:21Z", "comment_text": "\n \t\t@Jarvi-Izana - I'm assuming this is a Python 3 issues. Can you confirm what version of Python you are using?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "guihao-liang", "commentT": "2019-06-27T19:42:08Z", "comment_text": "\n \t\tI'm using python 3.6.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "guihao-liang", "commentT": "2019-06-27T19:47:30Z", "comment_text": "\n \t\tSolved by <denchmark-link:https://github.com/apple/turicreate/pull/2089>#2089</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "44556085d01eef01a1188eb13f64487c5ed3b4e1", "commit_author": "Guihao Liang", "commitT": "2019-06-27 12:42:56-07:00", "commit_complexity": {"commit_NLOC": "0.14563106796116504", "commit_CCN": "0.0", "commit_Nprams": "0.8932038834951457"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\python\\turicreate\\data_structures\\sarray.py", "file_new_name": "src\\python\\turicreate\\data_structures\\sarray.py", "file_complexity": {"file_NLOC": "1265", "file_CCN": "363", "file_NToken": "7861"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "374,375,376,377,378", "deleted_lines": null, "method_info": {"method_name": "_is_iterable_required_to_listify", "method_params": "cls,obj", "method_startline": "374", "method_endline": "378", "method_complexity": {"method_NLOC": "4", "method_CCN": "5", "method_NToken": "60", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "386,401,402,403,404,405", "deleted_lines": "401,402", "method_info": {"method_name": "__init__", "method_params": "self,data,dtype,ignore_cast_failure,_proxy", "method_startline": "381", "method_endline": "474", "method_complexity": {"method_NLOC": "66", "method_CCN": "34", "method_NToken": "484", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\python\\turicreate\\data_structures\\sframe.py", "file_new_name": "src\\python\\turicreate\\data_structures\\sframe.py", "file_complexity": {"file_NLOC": "2294", "file_CCN": "485", "file_NToken": "13039"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "4364,4365,4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,4417,4418,4419,4420,4421,4422,4423,4424,4425,4426,4427,4428,4429,4430,4431,4432,4448,4449,4450,4451,4452,4453,4454,4455,4456,4470,4471", "deleted_lines": "4364,4431,4432", "method_info": {"method_name": "filter_by", "method_params": "self,values,column_name,exclude", "method_startline": "4354", "method_endline": "4495", "method_complexity": {"method_NLOC": "40", "method_CCN": "11", "method_NToken": "280", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "src\\python\\turicreate\\test\\test_sarray.py", "file_new_name": "src\\python\\turicreate\\test\\test_sarray.py", "file_complexity": {"file_NLOC": "2370", "file_CCN": "442", "file_NToken": "32385"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "96", "deleted_lines": null, "method_info": {"method_name": "__test_creation_type_inference_pd", "method_params": "self,data,expected_dtype,expected", "method_startline": "96", "method_endline": "98", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "32", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "80", "deleted_lines": "80", "method_info": {"method_name": "__test_creation_pd", "method_params": "self,data,dtype,expected", "method_startline": "80", "method_endline": "82", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "34", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "84,89,90", "deleted_lines": "86", "method_info": {"method_name": "__test_creation", "method_params": "self,data,dtype,expected", "method_startline": "84", "method_endline": "90", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "32", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "92", "deleted_lines": null, "method_info": {"method_name": "__test_creation_type_inference_raw", "method_params": "self,data,expected_dtype,expected", "method_startline": "92", "method_endline": "94", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "100,101,102,103,104,105,106", "deleted_lines": null, "method_info": {"method_name": "__test_creation_type_inference", "method_params": "self,data,expected_dtype,expected", "method_startline": "100", "method_endline": "106", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "32", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229", "deleted_lines": null, "method_info": {"method_name": "test_creation", "method_params": "self", "method_startline": "108", "method_endline": "243", "method_complexity": {"method_NLOC": "109", "method_CCN": "17", "method_NToken": "1451", "method_nesting_level": "1"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "210,211,212", "deleted_lines": null, "method_info": {"method_name": "test_creation.__generator_parrot", "method_params": "data", "method_startline": "210", "method_endline": "212", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "12", "method_nesting_level": "2"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "76", "deleted_lines": "76,77,78", "method_info": {"method_name": "__test_creation_raw", "method_params": "self,data,dtype,expected", "method_startline": "76", "method_endline": "78", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\python\\turicreate\\test\\test_sframe.py", "file_new_name": "src\\python\\turicreate\\test\\test_sframe.py", "file_complexity": {"file_NLOC": "2708", "file_CCN": "323", "file_NToken": "32594"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911", "deleted_lines": null, "method_info": {"method_name": "test_filter_by", "method_params": "self", "method_startline": "1843", "method_endline": "1995", "method_complexity": {"method_NLOC": "109", "method_CCN": "1", "method_NToken": "1607", "method_nesting_level": "1"}}}}}}}}