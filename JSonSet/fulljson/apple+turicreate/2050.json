{"BR": {"BR_id": "2050", "BR_author": "erik-cog", "BRopenT": "2019-06-13T01:19:21Z", "BRcloseT": "2019-08-06T23:09:16Z", "BR_text": {"BRsummary": "Error bundling dylib and pushing to App Store", "BRdescription": "\n I haven't seen this error elsewhere, has anyone pushed an app to the App Store/TestFlight with a dylib for either the Recommender or SoundClassifier guides? Specifically, when following the <denchmark-link:https://apple.github.io/turicreate/docs/userguide/sound_classifier/export-coreml.html>SoundClassifier</denchmark-link>\n  guide, I have the libAudioPreprocessing.dylib (v5.6) added to my project, bundling and pushing to devices and running the model as expected. However, I cannot push to TestFlight with the following error:\n <denchmark-code>ERROR ITMS-90171: \"Invalid Bundle Structure - The binary file 'QACameraDemo.app/libAudioPreprocessing.dylib' is not permitted. Your app can\u2019t contain standalone executables or libraries, other than a valid CFBundleExecutable of supported bundles. Refer to the Bundle Programming Guide at https://developer.apple.com/go/?id=bundle-structure for information on the iOS app bundle structure.\"\n Return status of iTunes Transporter was 1: ERROR ITMS-90171: \"Invalid Bundle Structure - The binary file 'QACameraDemo.app/libAudioPreprocessing.dylib' is not permitted. Your app can\u2019t contain standalone executables or libraries, other than a valid CFBundleExecutable of supported bundles. Refer to the Bundle Programming Guide at https://developer.apple.com/go/?id=bundle-structure for information on the iOS app bundle structure.\"\n The call to the iTMSTransporter completed with a non-zero exit status: 1. This indicates a failure.\n </denchmark-code>\n \n There are a few references on this issue, in the past it was forbidden to bundle dynamic libraries for security reasons, but in iOS8, apparently this was allowed and it is allowed now in iOS 12. I haven't found anything solid to go on, so if other people have pushed to app store, then I'll at least know its possible. I suspect other people are pushing apps to the app store while containing one of the dylibs distributed via turicreate's releases page. Can anyone confirm whether they've done so?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "erik-cog", "commentT": "2019-06-13T21:00:14Z", "comment_text": "\n \t\tThe code for both the Recommender and Sound Classifier dylib can be found <denchmark-link:https://github.com/apple/turicreate/tree/master/src/objc>in this folder</denchmark-link>\n . To unblock you, I would try including that code directly in your app.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "erik-cog", "commentT": "2019-06-13T21:01:46Z", "comment_text": "\n \t\tFantastic! Thank you <denchmark-link:https://github.com/TobyRoseman>@TobyRoseman</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "erik-cog", "commentT": "2019-06-13T21:02:35Z", "comment_text": "\n \t\tRelated <denchmark-link:https://github.com/apple/turicreate/issues/2027>#2027</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "erik-cog", "commentT": "2019-06-13T21:04:27Z", "comment_text": "\n \t\tI'll post back here any pertinent information for others, if there's anything different from the turicreate tutorial needed done to get it to work. I didn't realize the code for the dylib was public too, now I don't have to treat the dylib's mfcc functioning as a black box, which makes me much happier.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "erik-cog", "commentT": "2019-06-14T01:27:23Z", "comment_text": "\n \t\tNo problems at all. Added the .m and .h files to my project, adding the .m pulled up the dialogue about mixed swift and obj-c and I let xcode create a bridging file. No errors on upload to app store as expected since no dylib this time. Personally I'd recommend this way because its much simpler. There are a number of ways one can screw up adding the dylib (and I can't be the only one who is preternaturally good at finding those ways).\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "erik-cog", "commentT": "2019-06-14T18:56:32Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/erik-cog>@erik-cog</denchmark-link>\n  - Thanks for letting us know that worked. Being able to uses these dylib in deployed apps is important. So let's leave this issue open.\n Also now that I have thought more about the workaround, I realize that including the code directly will not be an option for people using the recommender dylib. That code is not self contained like the sound classifier dylib.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "erik-cog", "commentT": "2019-06-14T19:38:20Z", "comment_text": "\n \t\tThe correct way to bundle a dylib is to wrap it in a framework, detailed in this <denchmark-link:https://developer.apple.com/library/archive/technotes/tn2435/_index.html#//apple_ref/doc/uid/DTS40017543-CH1-TROUBLESHOOTING_BUNDLE_ERRORS-EMBEDDED__DYLIB_FILES>technical note</denchmark-link>\n . At a minimum, we need to update our user docs. We should have a larger discussion around shipping a  instead of a dylib.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "erik-cog", "commentT": "2019-07-18T16:34:54Z", "comment_text": "\n \t\tI'm currently trying to determine if we can resolve the App Store submission issues by not embedding the .dylib directly but currently having issues with iTunes Connect accounts and uploads to apps within our team. This needs more debugging. If the App Store lets users ship .dylibs without embedding them it seems reasonable to just update our user docs to mention this. Otherwise, we'll want to look into modifying our build processes to generate a .framework which would require a non-trivial amount of work. Note that these .dylibs are only intended to be used on macOS so we don't have a Linux compatibility need (and hence have the option of providing .frameworks).\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "erik-cog", "commentT": "2019-07-19T15:54:06Z", "comment_text": "\n \t\tThe link to the dylibs is broken \"Page not found - Github\"\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "erik-cog", "commentT": "2019-07-19T16:30:35Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/JSingh-sol>@JSingh-sol</denchmark-link>\n  - which link are you talking about? You can download the dylibs on our <denchmark-link:https://github.com/apple/turicreate/releases>releases page</denchmark-link>\n , see the \"Assets\" section.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "erik-cog", "commentT": "2019-07-22T17:53:14Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/TobyRoseman>@TobyRoseman</denchmark-link>\n   : \"The code for both the Recommender and Sound Classifier dylib can be found in this folder.\" <-- the link was broken when I tried it. Nevertheless, I have been getting LibRecommender.zip from the link you provided and I have even tried earlier versions. The screenshots from my early project show that I placed the dylib in the correct spots. I tried a very simple xCode project where all I had was a line to initialize the model when the page loads, ie ' let model = MyRecommender() ' with the dylib placed in the 3 areas mentioned in Apple's instructions. It still did not seem to initialize my .mlmodel because it could not find the TCRecommender. Thank you so much for your continued help and I will also keep trying different solutions as I await your response!\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "erik-cog", "commentT": "2019-07-22T22:56:12Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/JSingh-sol>@JSingh-sol</denchmark-link>\n  - we recently did some code reorganization <denchmark-link:https://github.com/apple/turicreate/tree/master/src/deployment>here is the the updated link</denchmark-link>\n .\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "erik-cog", "commentT": "2019-07-22T23:02:41Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/TobyRoseman>@TobyRoseman</denchmark-link>\n  Thank you so much but bare with me, I am an intern and have a tendency to miss the obvious. How do I incorporate your solution to my existing project?\n So the link takes me to the following files on Github:\n <denchmark-link:https://user-images.githubusercontent.com/51454748/61670853-c7527b00-acaa-11e9-8490-9475eb54b3ff.png></denchmark-link>\n \n But I thought my issue was with the .dylib file, so how should I implement these newly configured files. Again, thank you so much!\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "erik-cog", "commentT": "2019-07-22T23:04:31Z", "comment_text": "\n \t\tI previously imported Turicreate 5.4 on a python script to create a custom model on Google Colab or Jupyter notebook, export it as a .mlmodel and then integrate with my project. How exactly can I use these files?\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "erik-cog", "commentT": "2019-07-22T23:20:01Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/JSingh-sol>@JSingh-sol</denchmark-link>\n  - it sounds like you're using the recommender dylib. So using these source files directly is not an option for you. That dylib is not self contained like the sound classifier dylib. To unblock you we'll need to resolve <denchmark-link:https://github.com/apple/turicreate/issues/2148>#2148</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "fbd6e9a39b89bf6fb2950d5787c86ee7c1d163e6", "commit_author": "Sam Youtsey", "commitT": "2019-08-06 17:09:16-06:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "userguide\\recommender\\coreml-deployment.md", "file_new_name": "userguide\\recommender\\coreml-deployment.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "30,31,36,37", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "userguide\\sound_classifier\\export-coreml.md", "file_new_name": "userguide\\sound_classifier\\export-coreml.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "6,24,28,29,34,35", "deleted_lines": "6,24"}}}}}}