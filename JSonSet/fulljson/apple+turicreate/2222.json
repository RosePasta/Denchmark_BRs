{"BR": {"BR_id": "2222", "BR_author": "guihao-liang", "BRopenT": "2019-08-09T23:06:34Z", "BRcloseT": "2019-08-13T19:41:37Z", "BR_text": {"BRsummary": "unity_sframe::append should accept SFrame with different name order", "BRdescription": "\n it should behave the same as python layer. Talked <denchmark-link:https://github.com/hoytak>@hoytak</denchmark-link>\n , we should move logics from python to engine so people relying on c-api will expect the same behavior.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "guihao-liang", "commentT": "2019-08-11T04:04:06Z", "comment_text": "\n \t\tsframe x with columns {a:int, b:str, c:int} should accept appending sframe y with same columns but appearing different order, such as {b:str, c:int, a:int}.\n The logic to reorder columns of sframe y is inside python instead of cpp unity_sframe.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "guihao-liang", "commentT": "2019-08-13T19:41:33Z", "comment_text": "\n \t\tWork is completed. Closing this issue with such a fortunate and lucky issue number.\n \t\t"}}}, "commit": {"commit_id": "4283945041d34cb3193732ca21e5064d972a45f9", "commit_author": "Guihao Liang", "commitT": "2019-08-13 12:38:40-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "src\\core\\storage\\sframe_interface\\unity_sframe.cpp", "file_new_name": "src\\core\\storage\\sframe_interface\\unity_sframe.cpp", "file_complexity": {"file_NLOC": "1771", "file_CCN": "348", "file_NToken": "13606"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "471,482", "deleted_lines": "471,482", "method_info": {"method_name": "turi::unity_sframe::select_columns", "method_params": "indices", "method_startline": "467", "method_endline": "496", "method_complexity": {"method_NLOC": "23", "method_CCN": "5", "method_NToken": "199", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "1615,1616,1617,1618,1619,1622", "deleted_lines": "1605,1606,1607,1608,1609,1612", "method_info": {"method_name": "turi::unity_sframe::drop_missing_values", "method_params": "column_names,all,split,recursive", "method_startline": "1595", "method_endline": "1712", "method_complexity": {"method_NLOC": "93", "method_CCN": "24", "method_NToken": "663", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "429,431", "deleted_lines": "429,431", "method_info": {"method_name": "turi::unity_sframe::select_column", "method_params": "name", "method_startline": "414", "method_endline": "432", "method_complexity": {"method_NLOC": "13", "method_CCN": "2", "method_NToken": "134", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "926,928,929,939,940,958,959,960,961,962,965", "deleted_lines": "926", "method_info": {"method_name": "turi::unity_sframe::append", "method_params": "other", "method_startline": "909", "method_endline": "991", "method_complexity": {"method_NLOC": "61", "method_CCN": "9", "method_NToken": "504", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "454,457,464", "deleted_lines": "454,457,464", "method_info": {"method_name": "turi::unity_sframe::select_columns", "method_params": "names", "method_startline": "445", "method_endline": "465", "method_complexity": {"method_NLOC": "14", "method_CCN": "2", "method_NToken": "126", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "1291,1292,1293,1294,1295", "deleted_lines": "1281,1282,1283,1284,1285", "method_info": {"method_name": "turi::unity_sframe::sort", "method_params": "sort_keys,sort_ascending", "method_startline": "1278", "method_endline": "1311", "method_complexity": {"method_NLOC": "28", "method_CCN": "5", "method_NToken": "204", "method_nesting_level": "1"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "2170", "deleted_lines": "2160", "method_info": {"method_name": "turi::unity_sframe::explore", "method_params": "path_to_client,title", "method_startline": "1832", "method_endline": "2205", "method_complexity": {"method_NLOC": "315", "method_CCN": "45", "method_NToken": "2398", "method_nesting_level": "1"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "1768", "deleted_lines": "1758", "method_info": {"method_name": "turi::unity_sframe::_convert_column_names_to_indices", "method_params": "column_names", "method_startline": "1733", "method_endline": "1776", "method_complexity": {"method_NLOC": "29", "method_CCN": "6", "method_NToken": "229", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\python\\turicreate\\data_structures\\sframe.py", "file_new_name": "src\\python\\turicreate\\data_structures\\sframe.py", "file_complexity": {"file_NLOC": "2292", "file_CCN": "487", "file_NToken": "13041"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "3785", "deleted_lines": "3784,3785", "method_info": {"method_name": "append", "method_params": "self,other", "method_startline": "3746", "method_endline": "3785", "method_complexity": {"method_NLOC": "5", "method_CCN": "2", "method_NToken": "43", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "test\\unity\\unity_sframe.cxx", "file_new_name": "test\\unity\\unity_sframe.cxx", "file_complexity": {"file_NLOC": "588", "file_CCN": "77", "file_NToken": "5632"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "338", "deleted_lines": "338", "method_info": {"method_name": "unity_sframe_test::test_append_name_mismatch", "method_params": "", "method_startline": "320", "method_endline": "339", "method_complexity": {"method_NLOC": "15", "method_CCN": "1", "method_NToken": "145", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "181", "deleted_lines": "181", "method_info": {"method_name": "unity_sframe_test::test_logical_filter", "method_params": "", "method_startline": "119", "method_endline": "213", "method_complexity": {"method_NLOC": "71", "method_CCN": "5", "method_NToken": "755", "method_nesting_level": "1"}}}}}}}}