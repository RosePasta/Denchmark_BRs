{"BR": {"BR_id": "1400", "BR_author": "dogahe", "BRopenT": "2019-02-06T15:35:35Z", "BRcloseT": "2019-03-15T15:50:10Z", "BR_text": {"BRsummary": "Size of Recommender Model", "BRdescription": "\n I am looking at ways that I can reduce the size of a recommender model I am working on. You can assume I want to train a model for recommending topics to readers. Using one dataset which has 6452 observations of (TopicID, UserID), there are 342 unique topics and 3281 unique users. The size of the model that was trained by using tc.recommender.create is 442 KB which is fine.\n Now I have a larger dataset with 3,549,113 observations, 2174 unique topics and 251,514 unique users, the size of the model is 32.2 MB which is really large for my application. I was wondering if you have any recommendations on what the different things that I can try are to reduce the size of the model.\n One thing I had in mind was to let say only try to make recommendations for the top topics (623 out of 2174), therefore removing all the observations for topics which are not among top 623. That resulted in 3,395,846 observations with 245,963 users and 623 topics and the size of the model becoming 28.8 MB, just a small decrease in size.\n Next thing, I am going to try is to remove all the observations by users who have only read one topic. Meaning if a user has only one row in the observations I am going to remove the data (that one row) for that user. Does this make sense to you? Would this make the model less effective? Any thoughts on this approach that I yet have to try to see how much it will reduce the size of the model?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "dogahe", "commentT": "2019-02-06T19:54:13Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/dogahe>@dogahe</denchmark-link>\n  - To make sure we provide you with useful information, please provide some additional details:\n 1 - Which recommender model type are you using? Is it ItemSimilarityRecommender?\n 2 - Are you concerned about the size of the output file when you call model.save(...) or model.export_coreml(...)?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "dogahe", "commentT": "2019-02-06T20:20:24Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/TobyRoseman>@TobyRoseman</denchmark-link>\n  - Yes, I believe based on the fact that data has only the two mentioned columns it picks ItemSimilarityRecommender. I am concerned about the size of the  which is the output of \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "dogahe", "commentT": "2019-02-06T21:45:04Z", "comment_text": "\n \t\tEven doing what I asked you if it makes sense to do only reduces the size of the model to 24.7 MB. I still would like to hear your thoughts on whether \" remove all the observations by users who have only read one topic.\" affects the performance of recommendation? Even though for my case does not reduce the size of the model by too much. Also I would like to hear if there is anything you can suggest for me to do to reduce the size of the model?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "dogahe", "commentT": "2019-02-06T22:47:19Z", "comment_text": "\n \t\tHEy <denchmark-link:https://github.com/dogahe>@dogahe</denchmark-link>\n , if you go create the item similarity recommender directly (using tc.recommender.item_similarity_recommender.create), it has one additional parameter, only_top_k, which controls the size of the item similarity graph stored.  Decreasing this decreases the amount of storage required for the model but it may also decrease the accuracy.  By default it's 64, but you can probably drop that to 20 or 30 and still get decent results (check it in detail), which would cut the model size in half.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "dogahe", "commentT": "2019-02-07T20:18:05Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hoytak>@hoytak</denchmark-link>\n  Thanks for the suggestion, however, the effect of changing  from default  to , is to reduce the size of the model from 32.3 MB to 30.2 MB. I am still waiting for other suggestions if somebody here has any? Thanks a lot.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "dogahe", "commentT": "2019-02-07T21:43:25Z", "comment_text": "\n \t\tThis is weird.  I think I know what's going on, and it may be a bug.  Let me investigate.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "dogahe", "commentT": "2019-02-12T02:23:06Z", "comment_text": "\n \t\tConfirmed.  This is a bug.  The export routines are not dropping the user indexing tables from the archive.  Fix in the works.\n \t\t"}}}, "commit": {"commit_id": "bca9121c4f55dc05fac7dfa2db73455e5610d361", "commit_author": "Hoyt Koepke", "commitT": "2019-03-15 08:50:09-07:00", "commit_complexity": {"commit_NLOC": "0.48484848484848486", "commit_CCN": "0.6666666666666666", "commit_Nprams": "0.25757575757575757"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\unity\\python\\turicreate\\test\\test_recommender.py", "file_new_name": "src\\unity\\python\\turicreate\\test\\test_recommender.py", "file_complexity": {"file_NLOC": "1899", "file_CCN": "223", "file_NToken": "16641"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595", "deleted_lines": null, "method_info": {"method_name": "test_export_model_size", "method_params": "self", "method_startline": "2564", "method_endline": "2595", "method_complexity": {"method_NLOC": "19", "method_CCN": "2", "method_NToken": "202", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "99", "deleted_lines": "99", "method_info": {"method_name": "_test_coreml_export", "method_params": "self,m,item_ids,ratings", "method_startline": "67", "method_endline": "99", "method_complexity": {"method_NLOC": "27", "method_CCN": "8", "method_NToken": "273", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\data_storage\\internal_metadata.cpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\data_storage\\internal_metadata.cpp", "file_complexity": {"file_NLOC": "156", "file_CCN": "29", "file_NToken": "1062"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "203,204,205,206,207,208,209,210", "deleted_lines": null, "method_info": {"method_name": "turi::v2::ml_data_internal::column_metadata::create_cleared_copy", "method_params": "", "method_startline": "203", "method_endline": "210", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "45", "method_nesting_level": "3"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\data_storage\\internal_metadata.hpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\data_storage\\internal_metadata.hpp", "file_complexity": {"file_NLOC": "112", "file_CCN": "15", "file_NToken": "735"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "143,144,145,146,147,148", "deleted_lines": null}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\indexing\\column_indexer.hpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\indexing\\column_indexer.hpp", "file_complexity": {"file_NLOC": "74", "file_CCN": "9", "file_NToken": "530"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "154", "deleted_lines": "154", "method_info": {"method_name": "turi::v2::ml_data_internal::column_indexer::set_data", "method_params": "params", "method_startline": "154", "method_endline": "154", "method_complexity": {"method_NLOC": "1", "method_CCN": "1", "method_NToken": "18", "method_nesting_level": "4"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\indexing\\column_unique_indexer.cpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\indexing\\column_unique_indexer.cpp", "file_complexity": {"file_NLOC": "202", "file_CCN": "52", "file_NToken": "1388"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "305,306,309", "deleted_lines": "305,306,307", "method_info": {"method_name": "turi::v2::ml_data_internal::column_unique_indexer::load_version", "method_params": "iarc,version", "method_startline": "295", "method_endline": "309", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "89", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "312,313,314,315,316,317,318,319,320", "deleted_lines": null, "method_info": {"method_name": "turi::v2::ml_data_internal::column_unique_indexer::reset_and_return_values", "method_params": "", "method_startline": "312", "method_endline": "320", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "361,362,363,364,365", "deleted_lines": null, "method_info": {"method_name": "turi::v2::ml_data_internal::column_unique_indexer::create_cleared_copy", "method_params": "", "method_startline": "361", "method_endline": "365", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "33", "method_nesting_level": "3"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "324,325,326,334,337", "deleted_lines": "340", "method_info": {"method_name": "turi::v2::ml_data_internal::column_unique_indexer::set_values", "method_params": "values", "method_startline": "324", "method_endline": "357", "method_complexity": {"method_NLOC": "22", "method_CCN": "5", "method_NToken": "187", "method_nesting_level": "3"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\indexing\\column_unique_indexer.hpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\indexing\\column_unique_indexer.hpp", "file_complexity": {"file_NLOC": "40", "file_CCN": "1", "file_NToken": "261"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "155,156,157,158,159,160,161,162,163,164,165,166", "deleted_lines": "44,45,46,47,48,49,50"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\metadata.cpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\metadata.cpp", "file_complexity": {"file_NLOC": "161", "file_CCN": "42", "file_NToken": "1248"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "234,235,244,245,246,247,268,269,270,271,272,273", "deleted_lines": "234,263", "method_info": {"method_name": "turi::v2::ml_metadata::select_columns", "method_params": "new_columns,include_target", "method_startline": "233", "method_endline": "311", "method_complexity": {"method_NLOC": "42", "method_CCN": "12", "method_NToken": "379", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "234,235,244,245,246,247,268,269,270,271,272,273", "deleted_lines": "234,263", "method_info": {"method_name": "turi::v2::ml_metadata::select_columns", "method_params": "new_columns,include_target,clr_columns", "method_startline": "233", "method_endline": "321", "method_complexity": {"method_NLOC": "49", "method_CCN": "13", "method_NToken": "451", "method_nesting_level": "2"}}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\metadata.hpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\metadata.hpp", "file_complexity": {"file_NLOC": "106", "file_CCN": "7", "file_NToken": "898"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "408,409,410,411,412,427,428", "deleted_lines": "422,423"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\statistics\\basic_column_statistics.cpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\statistics\\basic_column_statistics.cpp", "file_complexity": {"file_NLOC": "402", "file_CCN": "87", "file_NToken": "3081"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "635,636,637,638,639,640,641,642", "deleted_lines": null, "method_info": {"method_name": "turi::v2::ml_data_internal::basic_column_statistics::create_cleared_copy", "method_params": "", "method_startline": "635", "method_endline": "642", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "41", "method_nesting_level": "3"}}}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\statistics\\basic_column_statistics.hpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\statistics\\basic_column_statistics.hpp", "file_complexity": {"file_NLOC": "128", "file_CCN": "30", "file_NToken": "929"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "147,148,149,150,151", "deleted_lines": null}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\unity\\toolkits\\ml_data_2\\statistics\\column_statistics.hpp", "file_new_name": "src\\unity\\toolkits\\ml_data_2\\statistics\\column_statistics.hpp", "file_complexity": {"file_NLOC": "73", "file_CCN": "11", "file_NToken": "599"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "123,124,125,126,127", "deleted_lines": "27,28,29,30,31,128"}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\unity\\toolkits\\recsys\\models\\itemcf.cpp", "file_new_name": "src\\unity\\toolkits\\recsys\\models\\itemcf.cpp", "file_complexity": {"file_NLOC": "597", "file_CCN": "84", "file_NToken": "4645"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907", "deleted_lines": "882", "method_info": {"method_name": "turi::recsys::recsys_itemcf::export_to_coreml", "method_params": "filename", "method_startline": "797", "method_endline": "917", "method_complexity": {"method_NLOC": "91", "method_CCN": "10", "method_NToken": "678", "method_nesting_level": "2"}}}}}}}}