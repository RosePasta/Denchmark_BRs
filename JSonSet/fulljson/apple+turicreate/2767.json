{"BR": {"BR_id": "2767", "BR_author": "hoytak", "BRopenT": "2019-12-02T22:43:14Z", "BRcloseT": "2020-09-11T20:44:10Z", "BR_text": {"BRsummary": "export_coreml does not respect ~ in filenames (sound classifier).", "BRdescription": "\n The following code:\n <denchmark-code>model.export_coreml(\"~/models/sc.mlmodel\")\n </denchmark-code>\n \n Will save the model file in a <current directory>/\\~/models/sc.mlmodel.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "hoytak", "commentT": "2019-12-02T22:59:40Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hoytak>@hoytak</denchmark-link>\n  Is this a regression from 5.8?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "hoytak", "commentT": "2019-12-03T19:25:26Z", "comment_text": "\n \t\t\n @hoytak Is this a regression from 5.8?\n \n In 5.8 we get different behavior which is also wrong. It errors out: FileNotFoundError: [Errno 2] No such file or directory: '~/models/sc.mlmodel'. (~/models does exist; if I expand the ~, it works.)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "hoytak", "commentT": "2020-01-02T09:13:24Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hoytak>@hoytak</denchmark-link>\n  I tried your code:\n <denchmark-code>model.export_coreml('~/Desktop/test.mlmodel')\n </denchmark-code>\n \n and couldn't reproduce your error. Instead, it produced this kind of error like <denchmark-link:https://github.com/TobyRoseman>@TobyRoseman</denchmark-link>\n  said:\n <denchmark-code>IOError: [Errno 2] No such file or directory: '~/Desktop/test.mlmodel'\n </denchmark-code>\n \n It seems like a coreml bug that it cannot recognize ~ in the path.\n Any thought?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "hoytak", "commentT": "2020-01-08T00:48:06Z", "comment_text": "\n \t\tYes, it depends on the write permissions of the current directory.  If it can't create ~/models, it will error out with a file not found error.\n Regardless, the correct behavior should be that ~/ is expanded universally when it's the first component in a file path.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "hoytak", "commentT": "2020-02-26T21:00:26Z", "comment_text": "\n \t\tAs far as I can tell we have this same issue with all of our toolkits, not just the sound classifier. I think it makes more sense to fix this issue in the coremltools package.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "hoytak", "commentT": "2020-02-26T21:38:11Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/apple/coremltools/pull/650>Pull request to fix this issue</denchmark-link>\n  has been submitted to the coremltools.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "hoytak", "commentT": "2020-03-18T00:42:17Z", "comment_text": "\n \t\tThe fix for this issue has been merged into the coremltool repository. Once coremltools does a release we can depend on the new version and close this issue.\n Since there is nothing more that can be done here in the current release, I'll remove this issue from the milestone.\n \t\t"}}}, "commit": {"commit_id": "33d664c33215fad95f3f18064791606f17dbf747", "commit_author": "Toby Roseman", "commitT": "2020-09-11 13:44:10-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "scripts\\requirements.txt", "file_new_name": "scripts\\requirements.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "5", "deleted_lines": "5"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\python\\turicreate\\toolkits\\recommender\\factorization_recommender.py", "file_new_name": "src\\python\\turicreate\\toolkits\\recommender\\factorization_recommender.py", "file_complexity": {"file_NLOC": "238", "file_CCN": "3", "file_NToken": "394"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "412", "method_info": {"method_name": "__init__", "method_params": "self,model_proxy", "method_startline": "411", "method_endline": "413", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "13", "method_nesting_level": "1"}}}}}}}}