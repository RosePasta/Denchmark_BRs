{"BR": {"BR_id": "2830", "BR_author": "jakesabathia2", "BRopenT": "2019-12-09T23:59:15Z", "BRcloseT": "2019-12-11T01:05:38Z", "BR_text": {"BRsummary": "OD predict function shouldn't depend on the annotation column", "BRdescription": "\n Now the predict function for OD is still depending on the annotation column.\n repro:\n <denchmark-code>import turicreate as tc\n \n data = tc.SFrame('ig02.sframe')\n \n data.remove_column(\"name\", inplace=True)\n data.remove_column(\"label\", inplace=True)\n print(data)\n \n train_data, test_data = data.random_split(0.8, seed=1)\n model = tc.object_detector.create(train_data, max_iterations=1)\n \n alt_train_data = train_data[\"annotations\"].apply(lambda x: \"invalid\")\n bad_train_data = train_data.remove_column(\"annotations\")\n bad_train_data = bad_train_data.add_column(alt_train_data, \"annotations\")\n \n print(bad_train_data)\n print(isinstance(bad_train_data, tc.SFrame))\n pred = model.predict(bad_train_data)\n </denchmark-code>\n \n 5.8:\n <denchmark-code>+------------------------+-------------------------------+\n |         image          |          annotations          |\n +------------------------+-------------------------------+\n | Height: 480 Width: 640 | [{'coordinates': {'y': 296... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 242... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 266... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 162... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 240... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 248... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 221... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 144... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 222... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 286... |\n +------------------------+-------------------------------+\n [785 rows x 2 columns]\n Note: Only the head of the SFrame is printed.\n You can use print_rows(num_rows=m, num_columns=n) to print more rows and columns.\n Using 'image' as feature column\n Using 'annotations' as annotations column\n Setting 'batch_size' to 32\n Using GPU to create model (AMD Radeon Pro 560X)\n +--------------+--------------+--------------+\n | Iteration    | Loss         | Elapsed Time |\n +--------------+--------------+--------------+\n | 1            | 6.235        | 9.6          |\n +--------------+--------------+--------------+\n +------------------------+-------------+\n |         image          | annotations |\n +------------------------+-------------+\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n +------------------------+-------------+\n [629 rows x 2 columns]\n Note: Only the head of the SFrame is printed.\n You can use print_rows(num_rows=m, num_columns=n) to print more rows and columns.\n True\n Predicting   1/629\n Predicting  97/629\n Predicting 193/629\n Predicting 289/629\n Predicting 385/629\n Predicting 481/629\n Predicting 577/629\n Predicting 629/629\n /Users/henry/Desktop/test/od_visual/venv_5_8/lib/python2.7/site-packages/turicreate/aggregate.py:92: UserWarning: Passing parameter(s) to COUNT is deprecated. This functionality will be removed in the next major release. Any passed parameters are ignored.\n   + 'the next major release. Any passed parameters are ignored.')\n </denchmark-code>\n \n 6.0:\n <denchmark-code>+------------------------+-------------------------------+\n |         image          |          annotations          |\n +------------------------+-------------------------------+\n | Height: 480 Width: 640 | [{'coordinates': {'y': 296... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 242... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 266... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 162... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 240... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 248... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 221... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 144... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 222... |\n | Height: 480 Width: 640 | [{'coordinates': {'y': 286... |\n +------------------------+-------------------------------+\n [785 rows x 2 columns]\n Note: Only the head of the SFrame is printed.\n You can use print_rows(num_rows=m, num_columns=n) to print more rows and columns.\n Using 'image' as feature column\n Using 'annotations' as annotations column\n Using GPU to create model (AMD Radeon Pro 560X)\n Setting 'batch_size' to 32\n +--------------+--------------+--------------+\n | Iteration    | Loss         | Elapsed Time |\n +--------------+--------------+--------------+\n | 1            | 5.23736      | 1.08s        |\n +--------------+--------------+--------------+\n +------------------------+-------------+\n |         image          | annotations |\n +------------------------+-------------+\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n | Height: 480 Width: 640 |   invalid   |\n +------------------------+-------------+\n [629 rows x 2 columns]\n Note: Only the head of the SFrame is printed.\n You can use print_rows(num_rows=m, num_columns=n) to print more rows and columns.\n True\n Traceback (most recent call last):\n   File \"od_message.py\", line 18, in <module>\n     pred = model.predict(bad_train_data)\n   File \"/Users/henry/Desktop/turicreate/release/src/python/turicreate/toolkits/object_detector/object_detector.py\", line 1730, in predict\n     return self.__proxy__.predict(dataset, options)\n   File \"/Users/henry/Desktop/turicreate/release/src/python/turicreate/extensions.py\", line 290, in <lambda>\n     ret = lambda *args, **kwargs: self.__run_class_function(name, args, kwargs)\n   File \"/Users/henry/Desktop/turicreate/release/src/python/turicreate/extensions.py\", line 277, in __run_class_function\n     raise _ToolkitError(exc)\n turicreate.toolkits._main.ToolkitError: Annotations column must be of type dict or list\n </denchmark-code>\n \n Basically the predict function show only depends on the image column :)))))).\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jakesabathia2", "commentT": "2019-12-10T04:13:34Z", "comment_text": "\n \t\tchange it into p2. It won't crash the program.\n \t\t"}}}, "commit": {"commit_id": "06999479bd178d552b2730468505967a9ed6b75a", "commit_author": "Henry Tao", "commitT": "2019-12-10 17:05:37-08:00", "commit_complexity": {"commit_NLOC": "0.36363636363636365", "commit_CCN": "0.36363636363636365", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\python\\turicreate\\test\\test_object_detector.py", "file_new_name": "src\\python\\turicreate\\test\\test_object_detector.py", "file_complexity": {"file_NLOC": "361", "file_CCN": "50", "file_NToken": "3478"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "244,245,246,247,248", "deleted_lines": null, "method_info": {"method_name": "test_predict_with_invalid_annotation", "method_params": "self", "method_startline": "244", "method_endline": "248", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "45", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\toolkits\\object_detection\\object_detector.cpp", "file_new_name": "src\\toolkits\\object_detection\\object_detector.cpp", "file_complexity": {"file_NLOC": "1017", "file_CCN": "123", "file_NToken": "7707"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "663,664,665,666,667,668,669,670,671,672", "deleted_lines": "663", "method_info": {"method_name": "turi::object_detection::object_detector::predict", "method_params": "data,opts", "method_startline": "612", "method_endline": "683", "method_complexity": {"method_NLOC": "59", "method_CCN": "7", "method_NToken": "477", "method_nesting_level": "2"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\unity\\toolkits\\object_detection\\test_object_detector.cxx", "file_new_name": "test\\unity\\toolkits\\object_detection\\test_object_detector.cxx", "file_complexity": {"file_NLOC": "731", "file_CCN": "46", "file_NToken": "6197"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "764,765", "deleted_lines": "764", "method_info": {"method_name": "turi::object_detection::BOOST_AUTO_TEST_CASE", "method_params": "test_object_detector_predict", "method_startline": "751", "method_endline": "1099", "method_complexity": {"method_NLOC": "244", "method_CCN": "15", "method_NToken": "2207", "method_nesting_level": "3"}}}}}}}}