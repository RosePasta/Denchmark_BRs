{"BR": {"BR_id": "1641", "BR_author": "shuki-hpcnt", "BRopenT": "2020-06-15T08:05:18Z", "BRcloseT": "2020-06-23T03:45:56Z", "BR_text": {"BRsummary": "[Bug] Calling edge_subgraph on DGLHeteroGraph emits error", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n When we call graph.edge_subgraph(..., preserve_nodes=True) on DGLHeteroGraph, it emits error with Invalid vertex type: 1 message.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n <denchmark-code>import dgl\n graph = dgl.graph([(0, 2), (3, 1), (1, 2), (1, 0)])\n graph.edge_subgraph({etype: [0, 1] for etype in graph.etypes}, True)\n \n >>>\n \n ~/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/heterograph.py in edge_subgraph(self, edges, preserve_nodes)\n    1974             utils.toindex(edges.get(canonical_etype, []))\n    1975             for canonical_etype in self.canonical_etypes]\n -> 1976         sgi = self._graph.edge_subgraph(induced_edges, preserve_nodes)\n    1977         induced_nodes = sgi.induced_nodes\n    1978\n \n ~/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/heterograph_index.py in edge_subgraph(self, induced_edges, preserve_nodes)\n     865         \"\"\"\n     866         eids = [edges.todgltensor() for edges in induced_edges]\n --> 867         return _CAPI_DGLHeteroEdgeSubgraph(self, eids, preserve_nodes)\n     868\n     869     @utils.cached_member(cache='_cache', prefix='unitgraph')\n \n dgl/_ffi/_cython/./function.pxi in dgl._ffi._cy3.core.FunctionBase.__call__()\n \n dgl/_ffi/_cython/./function.pxi in dgl._ffi._cy3.core.FuncCall()\n \n dgl/_ffi/_cython/./function.pxi in dgl._ffi._cy3.core.FuncCall3()\n \n dgl/_ffi/_cython/./base.pxi in dgl._ffi._cy3.core.CALL()\n \n DGLError: [17:00:45] /opt/dgl/src/graph/unit_graph.cc:164: Invalid vertex type: 1\n Stack trace:\n   [bt] (0) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x22) [0x7f108aa19782]\n   [bt] (1) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(dgl::UnitGraph::COO::NumVertices(unsigned long) const+0x7b) [0x7f108b1407eb]\n   [bt] (2) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(dgl::UnitGraph::COO::EdgeSubgraph(std::vector<dgl::runtime::NDArray, std::allocator<dgl::runtime::NDArray> > const&, bool) const+0x80b) [0x7f108b147eeb]\n   [bt] (3) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(dgl::UnitGraph::EdgeSubgraph(std::vector<dgl::runtime::NDArray, std::allocator<dgl::runtime::NDArray> > const&, bool) const+0x67) [0x7f108b13ef97]\n   [bt] (4) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(+0xd277ca) [0x7f108b08f7ca]\n   [bt] (5) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(dgl::HeteroGraph::EdgeSubgraph(std::vector<dgl::runtime::NDArray, std::allocator<dgl::runtime::NDArray> > const&, bool) const+0x1d) [0x7f108b09079d]\n   [bt] (6) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(+0xd36342) [0x7f108b09e342]\n   [bt] (7) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/libdgl.so(DGLFuncCall+0x52) [0x7f108b0216e2]\n   [bt] (8) /home/shuki/.miniconda3/envs/cupid-gnn/lib/python3.6/site-packages/dgl/_ffi/_cy3/core.cpython-36m-x86_64-linux-gnu.so(+0x19f6b) [0x7f1088f87f6b]\n \n \n </denchmark-code>\n \n <denchmark-h:h2>Expected behavior</denchmark-h>\n \n No error.\n <denchmark-h:h2>Environment</denchmark-h>\n \n \n DGL Version (e.g., 1.0): 0.4.3.post2\n Backend Library & Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3): Pytorch 1.3.1\n OS (e.g., Linux): Ubuntu 18.04\n How you installed DGL (conda, pip, source): conda (conda install -c dglteam dgl-cuda10.1)\n Build command you used (if compiling from source):\n Python version: 3.6.10\n CUDA/cuDNN version (if applicable): CUDA 10.1, cuDNN 7.6.5\n GPU models and configuration (e.g. V100): Titan Xp\n Any other relevant information:\n \n <denchmark-h:h2>Additional context</denchmark-h>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "421763fb6791261e004a2833263425cddc6bf783", "commit_author": "Quan (Andy) Gan", "commitT": "2020-06-23 11:45:55+08:00", "commit_complexity": {"commit_NLOC": "0.5294117647058824", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\graph\\unit_graph.cc", "file_new_name": "src\\graph\\unit_graph.cc", "file_complexity": {"file_NLOC": "1239", "file_CCN": "292", "file_NToken": "9876"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "379,380,381,382,384", "deleted_lines": "379,380,382", "method_info": {"method_name": "dgl::UnitGraph::COO::EdgeSubgraph", "method_params": "eids,preserve_nodes", "method_startline": "362", "method_endline": "388", "method_complexity": {"method_NLOC": "27", "method_CCN": "2", "method_NToken": "311", "method_nesting_level": "2"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "tests\\compute\\test_heterograph.py", "file_new_name": "tests\\compute\\test_heterograph.py", "file_complexity": {"file_NLOC": "1402", "file_CCN": "148", "file_NToken": "17181"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "947,950,951,952,955", "deleted_lines": "947,951,952,953,954", "method_info": {"method_name": "test_subgraph._check_subgraph_single_etype", "method_params": "g,sg", "method_startline": "947", "method_endline": "956", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "146", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "936,940,941,942,943,944,945", "deleted_lines": "936,940,941,944", "method_info": {"method_name": "test_subgraph._check_subgraph_single_ntype", "method_params": "g,sg", "method_startline": "936", "method_endline": "945", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "175", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "936,940,941,942,943,944,945,946,947,950,951,952,955,959,960,961,962,963,964,965,966,967,968,974,975,976,977,980,981", "deleted_lines": "936,940,941,944,947,951,952,953,954", "method_info": {"method_name": "test_subgraph", "method_params": "index_dtype", "method_startline": "902", "method_endline": "1028", "method_complexity": {"method_NLOC": "43", "method_CCN": "2", "method_NToken": "444", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "936,940,941,942,943,944,945,946,947,950,951,952", "deleted_lines": "936,940,941,944,947,951,952,953", "method_info": {"method_name": "test_subgraph._check_subgraph_single_ntype", "method_params": "g,sg,preserve_nodes", "method_startline": "936", "method_endline": "953", "method_complexity": {"method_NLOC": "15", "method_CCN": "4", "method_NToken": "210", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "955,959,960,961,962,963,964,965,966,967,968", "deleted_lines": null, "method_info": {"method_name": "test_subgraph._check_subgraph_single_etype", "method_params": "g,sg,preserve_nodes", "method_startline": "955", "method_endline": "970", "method_complexity": {"method_NLOC": "14", "method_CCN": "3", "method_NToken": "177", "method_nesting_level": "1"}}}}}}}}