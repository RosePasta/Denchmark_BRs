{"BR": {"BR_id": "2973", "BR_author": "muellerzr", "BRopenT": "2020-11-11T15:12:07Z", "BRcloseT": "2020-11-18T01:32:41Z", "BR_text": {"BRsummary": "\"only one element tensors can be converted to Python scalars\" exception in Siamese Tutorial", "BRdescription": "\n When following the Siamese tutorial eventually you'll hit a snag on show_results:\n (Also to open a colab notebook with the error see <denchmark-link:https://colab.research.google.com/gist/muellerzr/548abbf2401af5e0716829721df48a79/24_tutorial-siamese.ipynb>here</denchmark-link>\n \n ---------------------------------------------------------------------------\n ValueError                                Traceback (most recent call last)\n <ipython-input-76-c3b657dcc9ae> in <module>()\n ----> 1 learn.show_results()\n \n 4 frames\n /usr/local/lib/python3.6/dist-packages/fastai/learner.py in show_results(self, ds_idx, dl, max_n, shuffle, **kwargs)\n     261         b = dl.one_batch()\n     262         _,_,preds = self.get_preds(dl=[b], with_decoded=True)\n --> 263         self.dls.show_results(b, preds, max_n=max_n, **kwargs)\n     264 \n     265     def show_training_loop(self):\n \n /usr/local/lib/python3.6/dist-packages/fastai/data/core.py in show_results(self, b, out, max_n, ctxs, show, **kwargs)\n     109         res = (x,x1,None,None) if its is None else (x, y, its, outs.itemgot(slice(self.n_inp,None)))\n     110         if not show: return res\n --> 111         show_results(*res, ctxs=ctxs, max_n=max_n, **kwargs)\n     112 \n     113     @property\n \n /usr/local/lib/python3.6/dist-packages/fastcore/dispatch.py in __call__(self, *args, **kwargs)\n     127         elif self.inst is not None: f = MethodType(f, self.inst)\n     128         elif self.owner is not None: f = MethodType(f, self.owner)\n --> 129         return f(*args, **kwargs)\n     130 \n     131     def __get__(self, inst, owner):\n \n <ipython-input-75-32c98030f37b> in show_results(x, y, samples, outs, ctxs, max_n, nrows, ncols, figsize, **kwargs)\n       5     for i,ctx in enumerate(ctxs):\n       6         print(type(x[2][i]))\n ----> 7         title = f'Actual: {[\"Not similar\",\"Similar\"][x[2][i].item()]} \\n Prediction: {[\"Not similar\",\"Similar\"][y[2][i].item()]}'\n       8         SiameseImage(x[0][i], x[1][i], title).show(ctx=ctx)\n \n /usr/local/lib/python3.6/dist-packages/fastai/torch_core.py in __torch_function__(self, func, types, args, kwargs)\n     315 \n     316     def __torch_function__(self, func, types, args=(), kwargs=None):\n --> 317         with torch._C.DisableTorchFunction(): ret = _convert(func(*args, **(kwargs or {})), self.__class__)\n     318         if isinstance(ret, TensorBase): ret.set_meta(self, as_copy=True)\n     319         return ret\n \n ValueError: only one element tensors can be converted to Python scalars\n <denchmark-link:https://github.com/jph00>@jph00</denchmark-link>\n  likely a torch upgrade issue?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "muellerzr", "commentT": "2020-11-11T17:28:55Z", "comment_text": "\n \t\tthis is pretty weird indeed... if we run %debug just after this, the x  is correct, butt the y vector is wrong.\n <denchmark-code>y[2].shape\n >> (1,3,64,1)\n </denchmark-code>\n \n The problem comes from get_preds, the output of the model is of type TensorImage. This shouldn't be the case, it is probably linked to the new typed-Tensors, even if you do:\n <denchmark-code>b  = dls.one_batch()\n out = learn.model(b[0], b[1])\n type(out)\n >> TensorImage\n </denchmark-code>\n \n so TensorImage propagates all through the model, images in, images out...\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "muellerzr", "commentT": "2020-11-12T11:42:55Z", "comment_text": "\n \t\tThis fixes the issue:\n def apply_wo_type(func, x, *args, **kwargs):\n     \"Apply `func` recursively to `x`, passing on args\"\n     if is_listy(x): return type(x)([apply_wo_type(func, o, *args, **kwargs) for o in x])\n     if isinstance(x,dict):  return {k: apply_wo_type(func, v, *args, **kwargs) for k,v in x.items()}\n     res = func(x, *args, **kwargs)\n     return res\n \n def remove_tensor_type(b):\n     \"Recursively map lists of int tensors in `b ` to float.\"\n     return apply_wo_type(lambda x: cast(x,typ=Tensor), b)\n \n class RemoveTypeCB(Callback):\n     def after_pred(self):\n         self.learn.pred = remove_tensor_type(self.pred)\n or a  last Transform that removes types before feeding the model.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "muellerzr", "commentT": "2020-11-17T20:02:13Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/tcapelle>@tcapelle</denchmark-link>\n  , I've been seeing this issue as well.\n For your proposed fix above, where would that be implemented to get this code working? Or do you have plans to integrate it into this tutorial notebook?\n And as long as we're here, I'm also seeing the below error in response to the last line in this notebook. Possibly related?\n <denchmark-code>---------------------------------------------------------------------------\n RuntimeError                              Traceback (most recent call last)\n <ipython-input-85-97c83ebb6f57> in <module>()\n ----> 1 res = learn.siampredict(siamtest)\n \n 1 frames\n <ipython-input-78-c877b0c06524> in siampredict(self, item, rm_type_tfms, with_input)\n       2 def siampredict(self:Learner, item, rm_type_tfms=None, with_input=False):\n       3     res = self.predict(item, rm_type_tfms=None, with_input=False)\n ----> 4     if res[0] == tensor(0):\n       5         SiameseImage(item[0], item[1], 'Prediction: Not similar').show()\n       6     else:\n \n /usr/local/lib/python3.6/dist-packages/fastai/torch_core.py in __torch_function__(self, func, types, args, kwargs)\n     315 \n     316     def __torch_function__(self, func, types, args=(), kwargs=None):\n --> 317         with torch._C.DisableTorchFunction(): ret = _convert(func(*args, **(kwargs or {})), self.__class__)\n     318         if isinstance(ret, TensorBase): ret.set_meta(self, as_copy=True)\n     319         return ret\n \n RuntimeError: Boolean value of Tensor with more than one value is ambiguous\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "muellerzr", "commentT": "2020-11-17T20:46:17Z", "comment_text": "\n \t\tThe issue is it needs to be a proper tensor type. Jeremy and Marii are\n currently working on a fix.\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Tue, Nov 17, 2020 at 3:02 PM Scott Butters ***@***.***> wrote:\n  Hi @tcapelle <https://github.com/tcapelle> , I've been seeing this issue\n  as well.\n \n  For your proposed fix above, where would that be implemented to get this\n  code working? Or do you have plans to integrate it into this tutorial\n  notebook?\n \n  And as long as we're here, I'm also seeing the below error in response to\n  the last line in this notebook. Possibly related?\n \n  ---------------------------------------------------------------------------\n  RuntimeError                              Traceback (most recent call last)\n  <ipython-input-85-97c83ebb6f57> in <module>()\n  ----> 1 res = learn.siampredict(siamtest)\n \n  1 frames\n  <ipython-input-78-c877b0c06524> in siampredict(self, item, rm_type_tfms, with_input)\n        2 def siampredict(self:Learner, item, rm_type_tfms=None, with_input=False):\n        3     res = self.predict(item, rm_type_tfms=None, with_input=False)\n  ----> 4     if res[0] == tensor(0):\n        5         SiameseImage(item[0], item[1], 'Prediction: Not similar').show()\n        6     else:\n \n  /usr/local/lib/python3.6/dist-packages/fastai/torch_core.py in __torch_function__(self, func, types, args, kwargs)\n      315\n      316     def __torch_function__(self, func, types, args=(), kwargs=None):\n  --> 317         with torch._C.DisableTorchFunction(): ret = _convert(func(*args, **(kwargs or {})), self.__class__)\n      318         if isinstance(ret, TensorBase): ret.set_meta(self, as_copy=True)\n      319         return ret\n \n  RuntimeError: Boolean value of Tensor with more than one value is ambiguous\n \n  \u2014\n  You are receiving this because you authored the thread.\n  Reply to this email directly, view it on GitHub\n  <#2973 (comment)>, or\n  unsubscribe\n  <https://github.com/notifications/unsubscribe-auth/AB3YCV2X5FWKOAAMWELB6S3SQLJFJANCNFSM4TSDLLHQ>\n  .\n \n \n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "muellerzr", "commentT": "2020-11-17T22:13:32Z", "comment_text": "\n \t\tyes, it actually needs to be of Pyotrch tensor type instead of fastai's cutom tensors. My fix does this, removes the type to the output of the model. You can apply this fix, by passing this cb to the learner.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "muellerzr", "commentT": "2020-11-17T22:15:06Z", "comment_text": "\n \t\tThe other option is to fix the bug in fastai itself and cast it to a proper fastai custom tensor instead (which is what they are doing)\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "muellerzr", "commentT": "2020-11-17T22:15:44Z", "comment_text": "\n \t\tbut what custom tensor would that be?\n \t\t"}}}, "commit": {"commit_id": "eb98c4a490c319f8136be92cfc1628b5de3f33e2", "commit_author": "Jeremy Howard", "commitT": "2020-11-17 17:32:31-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "fastai\\_nbdev.py", "file_new_name": "fastai\\_nbdev.py", "file_complexity": {"file_NLOC": "875", "file_CCN": "1", "file_NToken": "3416"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "40,293", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "fastai\\callback\\fp16.py", "file_new_name": "fastai\\callback\\fp16.py", "file_complexity": {"file_NLOC": "129", "file_CCN": "50", "file_NToken": "1294"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "141,170", "deleted_lines": "140,169"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "fastai\\data\\core.py", "file_new_name": "fastai\\data\\core.py", "file_complexity": {"file_NLOC": "314", "file_CCN": "115", "file_NToken": "3957"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "378", "deleted_lines": "377"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "fastai\\torch_core.py", "file_new_name": "fastai\\torch_core.py", "file_complexity": {"file_NLOC": "556", "file_CCN": "237", "file_NToken": "5916"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "640", "deleted_lines": null, "method_info": {"method_name": "distrib_barrier", "method_params": "", "method_startline": "639", "method_endline": "641", "method_complexity": {"method_NLOC": "3", "method_CCN": "3", "method_NToken": "27", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "317,318,319", "deleted_lines": "317", "method_info": {"method_name": "__torch_function__", "method_params": "self,func,types,args", "method_startline": "316", "method_endline": "321", "method_complexity": {"method_NLOC": "4", "method_CCN": "2", "method_NToken": "58", "method_nesting_level": "1"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "fastai\\vision\\augment.py", "file_new_name": "fastai\\vision\\augment.py", "file_complexity": {"file_NLOC": "723", "file_CCN": "205", "file_NToken": "10806"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "850", "deleted_lines": null, "method_info": {"method_name": "hsv", "method_params": "TensorImage,func", "method_startline": "844", "method_endline": "850", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "32", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "695", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,fs,kwargs", "method_startline": "694", "method_endline": "695", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "309,310", "deleted_lines": null, "method_info": {"method_name": "affine_grid", "method_params": "theta,size,align_corners", "method_startline": "309", "method_endline": "310", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "451,454", "deleted_lines": "448", "method_info": {"method_name": "_draw_mask", "method_params": "x,def_draw,draw,p,neutral,batch", "method_startline": "446", "method_endline": "454", "method_complexity": {"method_NLOC": "9", "method_CCN": "4", "method_NToken": "129", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "674", "deleted_lines": null, "method_info": {"method_name": "lighting.__init__", "method_params": "self,fs,space_fn,kwargs", "method_startline": "674", "method_endline": "677", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "34", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "850", "deleted_lines": null, "method_info": {"method_name": "hsv.__init__", "method_params": "self,fs,kwargs", "method_startline": "849", "method_endline": "850", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "1"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "nbs\\00_torch_core.ipynb", "file_new_name": "nbs\\00_torch_core.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1191,1192,1193,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,2256,2478,2563,2567,2568,2569,2570,2571,2572,2573,2723,2745,2783", "deleted_lines": "1191,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,2168,2390,2475,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2668,2690,2728"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "nbs\\03_data.core.ipynb", "file_new_name": "nbs\\03_data.core.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "360,406,441,476,502,1921", "deleted_lines": "360,406,441,476,502,1920"}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "nbs\\09_vision.augment.ipynb", "file_new_name": "nbs\\09_vision.augment.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "217,349,544,568,702,733,908,940,1043,1076,1136,1244,1276,1309,1342,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1392,1411,1412,1413,1514,1693,1827,1830,1850,1879,1880,1881,1882,1884,2068,2075,2082,2089,2095,2106,2215,2227,2239,2251,2357,2369,2381,2393,2495,2507,2519,2531,2610,2661,2706,2718,2730,2742,2764,2765,2766,2767,2809,2856,2868,2880,2892,3002,3079,3091,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3198,3241,3276,3314,3356,3379,3380,3381,3382,3383,3384,3385,3386,3387,3392,3438,3480,3589,3625,3787,3804,3874,3909,4009,4086,4112,4137,4274,4300,4353,4397,4444", "deleted_lines": "217,349,544,568,702,733,908,940,1043,1076,1136,1244,1276,1309,1342,1381,1400,1501,1680,1814,1817,1837,1866,1867,1868,1869,1871,1872,1873,2057,2064,2071,2078,2084,2085,2086,2087,2088,2099,2100,2209,2221,2233,2245,2351,2363,2375,2387,2489,2501,2513,2525,2604,2654,2700,2712,2724,2736,2758,2759,2800,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2866,2878,2890,2902,3011,3089,3101,3191,3234,3269,3306,3349,3372,3421,3464,3572,3609,3771,3788,3857,3893,3993,4070,4096,4121,4258,4284,4337,4381,4428"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "nbs\\09b_vision.utils.ipynb", "file_new_name": "nbs\\09b_vision.utils.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "20,127,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,329,330,331,332,333,334,335,336", "deleted_lines": "46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,144"}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "nbs\\10_tutorial.pets.ipynb", "file_new_name": "nbs\\10_tutorial.pets.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "153,272,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,833,860,1026,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1117,1146,1220,1279,1308,1418,1501,1578", "deleted_lines": "153,272,770,797,824,990,1019,1045,1074,1148,1207,1236,1346,1429,1506"}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "nbs\\18_callback.fp16.ipynb", "file_new_name": "nbs\\18_callback.fp16.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "419,433,696,697,702,703,708,709,757,758,763,764,769,770,806,832,833,838,839,844,845,891,892,897,898,903,904,1004,1005,1010,1011,1016,1017,1051,1088,1100,1114", "deleted_lines": "419,433,696,697,702,703,708,709,757,758,763,764,769,770,805,832,833,838,839,844,845,891,892,897,898,903,904,1004,1005,1010,1011,1016,1017,1050"}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "nbs\\74_callback.cutmix.ipynb", "file_new_name": "nbs\\74_callback.cutmix.ipynb", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "186,245,257,271,308,310", "deleted_lines": "186"}}}}}}