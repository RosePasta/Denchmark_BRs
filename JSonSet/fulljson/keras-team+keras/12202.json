{"BR": {"BR_id": "12202", "BR_author": "Mistariano", "BRopenT": "2019-02-04T16:52:31Z", "BRcloseT": "2019-02-26T08:06:36Z", "BR_text": {"BRsummary": "'Could not compute output Tensor' error when I\u2018m using clone_model()", "BRdescription": "\n Hi guys, I think I just met a bug.\n There was something wrong when I was using multi_gpu_model with cpu_relocation=True. After analyzing the traceback I think it is a bug inside keras.models.clone_model\n The script below can reproduce it\n from keras.models import Model, clone_model\n from keras.layers import Input, Add, Lambda\n from keras.utils import multi_gpu_model\n \n \n def build_model():\n     input_layer = Input(shape=(1,))\n     test1, test2 = Lambda(lambda x: [x, x])(input_layer)\n     add = Add()([test1, test2])\n     model = Model(inputs=[input_layer], outputs=[add])\n     return model\n \n \n if __name__ == '__main__':\n     model = build_model()\n     model = clone_model(model)\n     # model = multi_gpu_model(model, cpu_relocation=True)  # it uses clone_model when set cpu_relocation=True\n If I didn't make any mistake, the script will raise AssertionError: Could not compute output Tensor(\"add_1/add:0\", shape=(?, 1), dtype=float32)\n My environment:\n \n Keras 2.2.4\n tensorflow 1.12.0\n \n I met the error on both 4 GTX1080tis and my own laptop with a GTX1060MQ\n <denchmark-h:hr></denchmark-h>\n \n I noticed that output_masks here will always be [None](but [None, None] is expected)\n \n \n \n keras/keras/models.py\n \n \n          Line 157\n       in\n       a139716\n \n \n \n \n \n \n  for x, y, mask in zip(reference_output_tensors, \n \n \n \n \n \n and that's because layer.compute_mask(...) will always return None since Lambda doesn't support using masks\n \n \n \n keras/keras/models.py\n \n \n          Line 153\n       in\n       a139716\n \n \n \n \n \n \n  output_masks = to_list( \n \n \n \n \n \n So if I'm using a functional model with a layer which has more outputs without a mask support, I think the error can appear.\n <denchmark-h:hr></denchmark-h>\n \n P.S. thanks a lot for your brilliant works :)\n From my perspective, Keras is an amazing gift to everyone. Thank you all!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Mistariano", "commentT": "2019-02-04T23:07:02Z", "comment_text": "\n \t\t\n P.S. thanks a lot for your brilliant works :)\n From my perspective, Keras is an amazing gift to everyone. Thank you all!\n \n From the Keras team and all the contributors, you're welcome!\n Thanks for the very nice report. I'll flag this as a bug. I'm not very familiar with multi_gpu_model so I hope someone else will have the time to look into it.\n If you have an idea on how to fix the issue, feel free to do a pull request, pull requests usually get much more attention than issues.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Mistariano", "commentT": "2019-02-05T03:22:44Z", "comment_text": "\n \t\t\n If you have an idea on how to fix the issue, feel free to do a pull request, pull requests usually get much more attention than issues.\n \n Thanks for applying. I just commited a PR <denchmark-link:https://github.com/keras-team/keras/pull/12205>#12205</denchmark-link>\n  minutes ago. It's my pleasure! :)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Mistariano", "commentT": "2019-02-26T08:06:36Z", "comment_text": "\n \t\tClosing this issue, since the PR has been merged. Thanks!\n \t\t"}}}, "commit": {"commit_id": "c13d2723d01212d09dfdda39b0ad439803ec9230", "commit_author": "Mist", "commitT": "2019-02-15 15:58:44-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "keras\\models.py", "file_new_name": "keras\\models.py", "file_complexity": {"file_NLOC": "160", "file_CCN": "38", "file_NToken": "1012"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "140,141,142,143,144,145,156,157,158,159,160,161", "deleted_lines": "140,141,142,153,154,155", "method_info": {"method_name": "_clone_functional_model", "method_params": "model,input_tensors", "method_startline": "26", "method_endline": "175", "method_complexity": {"method_NLOC": "104", "method_CCN": "28", "method_NToken": "662", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tests\\keras\\test_sequential_model.py", "file_new_name": "tests\\keras\\test_sequential_model.py", "file_complexity": {"file_NLOC": "370", "file_CCN": "26", "file_NToken": "3328"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366", "deleted_lines": null, "method_info": {"method_name": "test_clone_functional_model_with_multi_outputs", "method_params": "", "method_startline": "342", "method_endline": "366", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "173", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "351,352", "deleted_lines": null, "method_info": {"method_name": "test_clone_functional_model_with_multi_outputs.call", "method_params": "self,inputs,kwargs", "method_startline": "351", "method_endline": "352", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "354,355", "deleted_lines": null, "method_info": {"method_name": "test_clone_functional_model_with_multi_outputs.compute_output_shape", "method_params": "self,input_shape", "method_startline": "354", "method_endline": "355", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "19", "method_nesting_level": "2"}}}}}}}}