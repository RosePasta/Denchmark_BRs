{"BR": {"BR_id": "61", "BR_author": "jwmueller", "BRopenT": "2019-11-07T02:36:19Z", "BRcloseT": "2019-12-04T20:05:21Z", "BR_text": {"BRsummary": "MXNet segfault error when calling scheduler.run() 2+ times in same Python session", "BRdescription": "\n <denchmark-link:https://github.com/zhanghang1989>@zhanghang1989</denchmark-link>\n  :  Below is the MXNet error I get when I call scheduler.run() two times in the same Python session.  Here are the steps to reproduce:\n \n \n checkout tabular branch: https://github.com/awslabs/autogluon/tree/tabular\n git checkout tabular\n \n \n install tabular module by following steps in tabular/README:  https://github.com/awslabs/autogluon/blob/tabular/tabular/README.md\n \n \n Verify your installation worked by running the simple example in:\n https://github.com/awslabs/autogluon/blob/tabular/autogluon/task/predict_table_column/examples/example_tabular_predictions.py\n \n \n Note that this example does not do any HPO and does not use ag.schedulers at all.\n You can run this example many times in a row inside the same Python session without any segfault issue.\n \n Now try running the example in:\n https://github.com/awslabs/autogluon/blob/tabular/autogluon/task/predict_table_column/examples/example_advanced_tabular.py\n \n This example should also work (it may produce tons of warnings, but should not produce any MXNet segfault).  This example demonstrates doing HPO during task.fit() by leveraging the ag.scheduler and internally calls scheduler.run() one time.  The key line of code that does this is: <denchmark-link:https://github.com/awslabs/autogluon/blob/tabular/autogluon/task/predict_table_column/examples/example_advanced_tabular.py#L30>https://github.com/awslabs/autogluon/blob/tabular/autogluon/task/predict_table_column/examples/example_advanced_tabular.py#L30</denchmark-link>\n \n predictor = task.fit(train_data=train_data, label=label_column, output_directory=savedir, hyperparameter_tune=True,  num_trials=10, time_limits=10*60, nn_options=nn_options)\n \n Now re-run this same example, but instead of calling ag.done() after running the above line of code, try running this line of code two times in a row, ie.\n \n `predictor = task.fit(train_data=train_data, label=label_column, output_directory=savedir, hyperparameter_tune=True,\n num_trials=10, time_limits=10*60, nn_options=nn_options)\n predictor = task.fit(train_data=train_data, label=label_column, output_directory=savedir, hyperparameter_tune=True,\n num_trials=10, time_limits=10*60, nn_options=nn_options)\n `\n \n This should produce the segfault error below:\n \n 0%|                                                                              | 0/10 [00:00<?, ?it/s]\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x0000000117e062b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000000000000000 0x0 + 0\n [bt] (3) 4   libBLAS.dylib                       0x00007fff4fac5d44 APL_sgemm + 806\n [bt] (4) 5   libBLAS.dylib                       0x00007fff4fa504c2 cblas_sgemm + 1592\n [bt] (5) 6   libmxnet.so                         0x000000011654e8b5 mxnet::op::FullyConnectedComputeExCPU(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 14421\n [bt] (6) 7   libmxnet.so                         0x000000011654b5f8 mxnet::op::FullyConnectedComputeExCPU(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 1432\n [bt] (7) 8   libmxnet.so                         0x000000011654b363 mxnet::op::FullyConnectedComputeExCPU(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 771\n [bt] (8) 9   libmxnet.so                         0x000000011774dca9 mxnet::imperative::PushFComputeEx(std::__1::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&)> const&, nnvm::Op const*, nnvm::NodeAttrs const&, mxnet::Context const&, std::__1::vector<mxnet::engine::Var*, std::__1::allocatormxnet::engine::Var* > const&, std::__1::vector<mxnet::engine::Var*, std::__1::allocatormxnet::engine::Var* > const&, std::__1::vector<mxnet::Resource, std::__1::allocatormxnet::Resource > const&, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* > const&, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&)::'lambda'(mxnet::RunContext)::operator()(mxnet::RunContext) const + 217\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x0000000117e062b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000000000000000 0x0 + 0\n [bt] (3) 4   libBLAS.dylib                       0x00007fff4fac5d44 APL_sgemm + 806\n [bt] (4) 5   libBLAS.dylib                       0x00007fff4fa504c2 cblas_sgemm + 1592\n [bt] (5) 6   libmxnet.so                         0x000000011654e8b5 mxnet::op::FullyConnectedComputeExCPU(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 14421\n [bt] (6) 7   libmxnet.so                         0x000000011654b5f8 mxnet::op::FullyConnectedComputeExCPU(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 1432\n [bt] (7) 8   libmxnet.so                         0x000000011654b363 mxnet::op::FullyConnectedComputeExCPU(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 771\n [bt] (8) 9   libmxnet.so                         0x000000011774dca9 mxnet::imperative::PushFComputeEx(std::__1::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&)> const&, nnvm::Op const*, nnvm::NodeAttrs const&, mxnet::Context const&, std::__1::vector<mxnet::engine::Var*, std::__1::allocatormxnet::engine::Var* > const&, std::__1::vector<mxnet::engine::Var*, std::__1::allocatormxnet::engine::Var* > const&, std::__1::vector<mxnet::Resource, std::__1::allocatormxnet::Resource > const&, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* > const&, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&)::'lambda'(mxnet::RunContext)::operator()(mxnet::RunContext) const + 217\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x0000000117e062b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x000000010e3eea00 0x0 + 4533971456\n [bt] (3) 4   libmxnet.so                         0x00000001161c4ad3 std::__1::map<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator >, mxnet::NDArrayFunctionReg*, std::__1::less<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const, mxnet::NDArrayFunctionReg*> > >::__find_equal_key(std::__1::__tree_node_base<void*>&, std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&) + 867\n [bt] (4) 5   libmxnet.so                         0x0000000117479f3a void mxnet::op::FillComputeZerosExmshadow::cpu(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 666\n [bt] (5) 6   libmxnet.so                         0x0000000117685b62 SetNDInputsOutputs(nnvm::Op const, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray* >, int, void const*, int*, int, int, void***) + 3330\n [bt] (6) 7   libmxnet.so                         0x00000001176853c8 SetNDInputsOutputs(nnvm::Op const*, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray* >, int, void const*, int*, int, int, void***) + 1384\n [bt] (7) 8   libmxnet.so                         0x00000001176861d0 MXImperativeInvokeEx + 176\n [bt] (8) 9   _ctypes.cpython-37m-darwin.so       0x000000010f609367 ffi_call_unix64 + 79\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x0000000117e062b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   Python                              0x000000010e1a6fdd member_set + 52\n [bt] (3) 4   libmxnet.so                         0x00000001161c4ad3 std::__1::map<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator >, mxnet::NDArrayFunctionReg*, std::__1::less<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const, mxnet::NDArrayFunctionReg*> > >::__find_equal_key(std::__1::__tree_node_base<void*>&, std::__1::basic_string<char, std::__1::char_traits, std::__1::allocator > const&) + 867\n [bt] (4) 5   libmxnet.so                         0x0000000117479f3a void mxnet::op::FillComputeZerosExmshadow::cpu(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&, std::__1::vector<mxnet::OpReqType, std::__1::allocatormxnet::OpReqType > const&, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray > const&) + 666\n [bt] (5) 6   libmxnet.so                         0x0000000117685b62 SetNDInputsOutputs(nnvm::Op const, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray* >, int, void const*, int*, int, int, void***) + 3330\n [bt] (6) 7   libmxnet.so                         0x00000001176853c8 SetNDInputsOutputs(nnvm::Op const*, std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >, std::__1::vector<mxnet::NDArray, std::__1::allocatormxnet::NDArray* >, int, void const*, int*, int, int, void***) + 1384\n [bt] (7) 8   libmxnet.so                         0x00000001176861d0 MXImperativeInvokeEx + 176\n [bt] (8) 9   _ctypes.cpython-37m-darwin.so       0x000000010f609367 ffi_call_unix64 + 79\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jwmueller", "commentT": "2019-11-07T02:49:19Z", "comment_text": "\n \t\tpip show mxnet output:\n Name: mxnet\n Version: 1.5.1.post0\n Summary: MXNet is an ultra-scalable deep learning framework. This version uses openblas.\n Home-page: <denchmark-link:https://github.com/apache/incubator-mxnet>https://github.com/apache/incubator-mxnet</denchmark-link>\n \n Author: UNKNOWN\n Author-email: UNKNOWN\n License: Apache 2.0\n Location: /Users/jonasmue/virtual/t3/lib/python3.7/site-packages\n Requires: requests, numpy, graphviz\n Required-by:\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jwmueller", "commentT": "2019-11-07T07:45:36Z", "comment_text": "\n \t\tAs I previously mentioned, I also get MXNet segfault when I run the image-classification tutorial on Mac:\n <denchmark-code>import autogluon as ag\n \n from autogluon import ImageClassification as task\n \n dataset = task.Dataset(train_path='~/data/train') # already downloaded data to right place\n \n classifier = task.fit(dataset, time_limits=3, epochs=1, ngpus_per_trial=0)\n </denchmark-code>\n \n produces the error below:\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*,\n Segmentation fault: 11\n Segmentation fault: 11\n std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*,Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*, std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*, std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*,\n Segmentation fault: 11\n std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n Segmentation fault: 11\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*,Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forwar std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n d_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*, std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*, std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n libc++abi.dylib: Pure virtual function called!\n libc++abi.dylib: Pure virtual function called!\n Segmentation fault: 11\n Stack trace:\n [bt] (0) 1   libmxnet.so                         0x000000010a85b2b0 mxnet::Storage::Get() + 4880\n [bt] (1) 2   libsystem_platform.dylib            0x00007fff7f0f3b5d _sigtramp + 29\n [bt] (2) 3   ???                                 0x0000ff980000ff97 0x0 + 281028300177303\n [bt] (3) 4   libmxnet.so                         0x000000010ab96751 mxnet::Storage::Get() + 3393457\n [bt] (4) 5   libmxnet.so                         0x000000010aa33dd5 mxnet::Storage::Get() + 1941045\n [bt] (5) 6   libmxnet.so                         0x000000010aa34dba mxnet::Storage::Get() + 1945114\n [bt] (6) 7   libmxnet.so                         0x000000010aa1b99f mxnet::Storage::Get() + 1841663\n [bt] (7) 8   libmxnet.so                         0x000000010a1bbe61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\n [bt] (8) 9   libmxnet.so                         0x000000010a1196c7 std::__1::enable_if<(__is_forward_iteratormxnet::NDArray**::value) && (is_constructible<mxnet::NDArray*, std::__1::iterator_traitsmxnet::NDArray**::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocatormxnet::NDArray* >::assignmxnet::NDArray**(mxnet::NDArray**, mxnet::NDArray**) + 30295\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "jwmueller", "commentT": "2019-11-17T00:04:16Z", "comment_text": "\n \t\tAfter discussion with <denchmark-link:https://github.com/zhreshold>@zhreshold</denchmark-link>\n  , this is MXNet release error on MacOS. To fully resolve this problem need help from MXNet maintainers.\n A work around for now is installing mxnet from source.\n <denchmark-code>git  clone https://github.com/apache/incubator-mxnet --recursive\n cd incubator-mxnet/\n cp make/osx.mk ./config.mk\n make -j$(sysctl -n hw.ncpu)\n cd python && python setup.py develop\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "jwmueller", "commentT": "2019-11-19T07:41:01Z", "comment_text": "\n \t\tVerified as Hang said, this can be fixed by building MXNet from source:  <denchmark-link:https://mxnet.apache.org/get_started/osx_setup>https://mxnet.apache.org/get_started/osx_setup</denchmark-link>\n \n But hopefully we can get this fixed by somebody soon.\n \t\t"}}}, "commit": {"commit_id": "49ef0525363e8bcb3d38f763b2565eb42cfbf8ea", "commit_author": "Hang Zhang", "commitT": "2019-12-04 12:05:19-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "Jenkinsfile", "file_new_name": "Jenkinsfile", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "11,12,38,39", "deleted_lines": "11,12,38"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "autogluon\\__init__.py", "file_new_name": "autogluon\\__init__.py", "file_complexity": {"file_NLOC": "10", "file_CCN": "0", "file_NToken": "52"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "11", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "autogluon\\core\\decorator.py", "file_new_name": "autogluon\\core\\decorator.py", "file_complexity": {"file_NLOC": "188", "file_CCN": "56", "file_NToken": "1399"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "221,230", "deleted_lines": "221,230", "method_info": {"method_name": "obj.obj.registered_class.sample", "method_params": "self,config", "method_startline": "220", "method_endline": "231", "method_complexity": {"method_NLOC": "11", "method_CCN": "5", "method_NToken": "107", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "216,217", "deleted_lines": "216,217", "method_info": {"method_name": "obj.obj.registered_class.__init__", "method_params": "self,args,kwargs", "method_startline": "215", "method_endline": "218", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "26", "method_nesting_level": "3"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "216,217,221,230", "deleted_lines": "216,217,221,230", "method_info": {"method_name": "obj.registered_class", "method_params": "Cls", "method_startline": "212", "method_endline": "240", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "48", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "216,217,221,230", "deleted_lines": "216,217,221,230", "method_info": {"method_name": "obj", "method_params": "kwvars", "method_startline": "192", "method_endline": "242", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "0"}}}}}, "file_3": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "autogluon\\core\\loss.py", "file_complexity": {"file_NLOC": "6", "file_CCN": "0", "file_NToken": "30"}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "autogluon\\core\\optimizer.py", "file_new_name": "autogluon\\core\\optimizer.py", "file_complexity": {"file_NLOC": "12", "file_CCN": "0", "file_NToken": "60"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "1,3"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "autogluon\\scheduler\\__init__.py", "file_new_name": "autogluon\\scheduler\\__init__.py", "file_complexity": {"file_NLOC": "6", "file_CCN": "0", "file_NToken": "33"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2", "deleted_lines": null}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "autogluon\\scheduler\\remote\\remote.py", "file_new_name": "autogluon\\scheduler\\remote\\remote.py", "file_complexity": {"file_NLOC": "109", "file_CCN": "23", "file_NToken": "643"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "88,89,90,91,92,93,94,95,96", "deleted_lines": "88,89,90,91,92,93,94,95,96", "method_info": {"method_name": "__init__", "method_params": "self,remote_addr,scheduler_port,ssh_username,ssh_port,ssh_private_key,remote_python,remote_dask_worker", "method_startline": "63", "method_endline": "97", "method_complexity": {"method_NLOC": "30", "method_CCN": "1", "method_NToken": "132", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "121", "deleted_lines": "121", "method_info": {"method_name": "monitor_remote_processes", "method_params": "self", "method_startline": "105", "method_endline": "121", "method_complexity": {"method_NLOC": "15", "method_CCN": "7", "method_NToken": "75", "method_nesting_level": "1"}}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "autogluon\\task\\image_classification\\classifier.py", "file_new_name": "autogluon\\task\\image_classification\\classifier.py", "file_complexity": {"file_NLOC": "149", "file_CCN": "26", "file_NToken": "1080"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "110,111,112,113", "deleted_lines": null, "method_info": {"method_name": "loader", "method_params": "path", "method_startline": "110", "method_endline": "113", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "30", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "85,86,87,88,89,90,91,92", "deleted_lines": "85", "method_info": {"method_name": "predict.predict_img", "method_params": "img", "method_startline": "85", "method_endline": "92", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "83", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "65,66,69,70,71,72,73,74,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107", "deleted_lines": "63,64,66,67,68,69,70,74,75,76,77,80,81,82,83,84,85", "method_info": {"method_name": "predict", "method_params": "self,X,input_size,plot", "method_startline": "63", "method_endline": "107", "method_complexity": {"method_NLOC": "33", "method_CCN": "7", "method_NToken": "213", "method_nesting_level": "1"}}}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "autogluon\\task\\image_classification\\dataset.py", "file_new_name": "autogluon\\task\\image_classification\\dataset.py", "file_complexity": {"file_NLOC": "252", "file_CCN": "42", "file_NToken": "1843"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "228", "method_info": {"method_name": "__getitem__", "method_params": "self,index", "method_startline": "214", "method_endline": "232", "method_complexity": {"method_NLOC": "7", "method_CCN": "2", "method_NToken": "54", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "33,34", "deleted_lines": null, "method_info": {"method_name": "get_dataset", "method_params": "path,train,name,input_size,crop_ratio,jitter_param,args,kwargs", "method_startline": "32", "method_endline": "34", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "37", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "178", "deleted_lines": "160,167,178", "method_info": {"method_name": "make_dataset", "method_params": "dir,class_to_idx,extensions,is_valid_file", "method_startline": "160", "method_endline": "179", "method_complexity": {"method_NLOC": "18", "method_CCN": "8", "method_NToken": "162", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "178,185,186,187,188,189,190,191,192,203,204,205,206,207,208,209", "deleted_lines": "178,183", "method_info": {"method_name": "make_dataset", "method_params": "self,dir,class_to_idx,extensions,is_valid_file", "method_startline": "178", "method_endline": "210", "method_complexity": {"method_NLOC": "25", "method_CCN": "12", "method_NToken": "231", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "185,186,187,188,189,190,191,192", "deleted_lines": null, "method_info": {"method_name": "make_dataset.is_valid_file", "method_params": "x", "method_startline": "184", "method_endline": "192", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "39", "method_nesting_level": "3"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "310,311", "deleted_lines": null, "method_info": {"method_name": "transform", "method_params": "data,label", "method_startline": "310", "method_endline": "311", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "40", "method_nesting_level": "2"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "185,186", "deleted_lines": "183", "method_info": {"method_name": "loader", "method_params": "path", "method_startline": "182", "method_endline": "186", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "30", "method_nesting_level": "1"}}}, "hunk_7": {"Ismethod": 1, "added_lines": null, "deleted_lines": "234,235", "method_info": {"method_name": "_sample_transform", "method_params": "self,img", "method_startline": "234", "method_endline": "235", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "26", "method_nesting_level": "1"}}}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autogluon\\task\\image_classification\\image_classification.py", "file_new_name": "autogluon\\task\\image_classification\\image_classification.py", "file_complexity": {"file_NLOC": "137", "file_CCN": "2", "file_NToken": "537"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "59", "deleted_lines": "57,78", "method_info": {"method_name": "fit", "method_params": "dataset,net", "method_startline": "54", "method_endline": "79", "method_complexity": {"method_NLOC": "26", "method_CCN": "1", "method_NToken": "147", "method_nesting_level": "1"}}}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "autogluon\\task\\image_classification\\metrics.py", "file_new_name": "autogluon\\task\\image_classification\\metrics.py", "file_complexity": {"file_NLOC": "17", "file_CCN": "2", "file_NToken": "124"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "13", "deleted_lines": "10,11,12,16,17"}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 9, "file_old_name": "autogluon\\task\\image_classification\\nets.py", "file_new_name": "autogluon\\task\\image_classification\\nets.py", "file_complexity": {"file_NLOC": "101", "file_CCN": "29", "file_NToken": "891"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "14,15", "deleted_lines": null, "method_info": {"method_name": "hybrid_forward", "method_params": "self,F,x", "method_startline": "14", "method_endline": "15", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "87,88", "deleted_lines": null, "method_info": {"method_name": "get_built_in_network._get_finetune_network", "method_params": "model_name,num_classes,ctx,args,kwargs", "method_startline": "87", "method_endline": "101", "method_complexity": {"method_NLOC": "13", "method_CCN": "2", "method_NToken": "128", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "9,10,11,12,13,14,15,16,17,18,19,20,21,22,23", "deleted_lines": "9,10", "method_info": {"method_name": "get_built_in_network._get_finetune_network", "method_params": "model_name,num_classes,ctx", "method_startline": "9", "method_endline": "23", "method_complexity": {"method_NLOC": "13", "method_CCN": "2", "method_NToken": "116", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "87,88", "deleted_lines": null, "method_info": {"method_name": "get_built_in_network", "method_params": "name,args,kwargs", "method_startline": "86", "method_endline": "114", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "51", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "17,18,19,20,21,22", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,in_channels,channels,kernel,stride", "method_startline": "17", "method_endline": "22", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "70", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "79,80,81,82,83,84", "deleted_lines": null, "method_info": {"method_name": "get_network", "method_params": "net,num_classes,ctx", "method_startline": "79", "method_endline": "84", "method_complexity": {"method_NLOC": "6", "method_CCN": "2", "method_NToken": "41", "method_nesting_level": "0"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "39,40,41,42,43,44,45,46,47,48", "deleted_lines": null, "method_info": {"method_name": "mnist_net", "method_params": "", "method_startline": "39", "method_endline": "48", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "130", "method_nesting_level": "0"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "27,28,29,30,31,32,33,34", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,in_channels,channels,hidden_channels,kernel,stride", "method_startline": "27", "method_endline": "34", "method_complexity": {"method_NLOC": "8", "method_CCN": "3", "method_NToken": "86", "method_nesting_level": "1"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77", "deleted_lines": null, "method_info": {"method_name": "auto_suggest_network", "method_params": "dataset,net", "method_startline": "50", "method_endline": "77", "method_complexity": {"method_NLOC": "28", "method_CCN": "14", "method_NToken": "181", "method_nesting_level": "0"}}}}}, "file_12": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autogluon\\task\\image_classification\\pipeline.py", "file_new_name": "autogluon\\task\\image_classification\\pipeline.py", "file_complexity": {"file_NLOC": "65", "file_CCN": "15", "file_NToken": "531"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "37,38,78", "deleted_lines": "37,55,78", "method_info": {"method_name": "train_image_classification", "method_params": "args,reporter", "method_startline": "28", "method_endline": "78", "method_complexity": {"method_NLOC": "35", "method_CCN": "11", "method_NToken": "321", "method_nesting_level": "0"}}}}}, "file_13": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "autogluon\\task\\image_classification\\utils.py", "file_new_name": "autogluon\\task\\image_classification\\utils.py", "file_complexity": {"file_NLOC": "66", "file_CCN": "17", "file_NToken": "543"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "34,36,39", "deleted_lines": "33,35,38", "method_info": {"method_name": "get_data_loader", "method_params": "dataset,input_size,batch_size,num_workers,final_fit,split_ratio", "method_startline": "13", "method_endline": "44", "method_complexity": {"method_NLOC": "31", "method_CCN": "7", "method_NToken": "183", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "45,46,47,48,49,50", "method_info": {"method_name": "get_network", "method_params": "net,num_classes,ctx", "method_startline": "45", "method_endline": "50", "method_complexity": {"method_NLOC": "6", "method_CCN": "2", "method_NToken": "41", "method_nesting_level": "0"}}}}}, "file_14": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "autogluon\\task\\text_classification\\pipeline.py", "file_new_name": "autogluon\\task\\text_classification\\pipeline.py", "file_complexity": {"file_NLOC": "257", "file_CCN": "55", "file_NToken": "2009"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "108", "deleted_lines": "196,223,256", "method_info": {"method_name": "train_text_classification", "method_params": "args,reporter", "method_startline": "105", "method_endline": "359", "method_complexity": {"method_NLOC": "148", "method_CCN": "39", "method_NToken": "1078", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "223", "method_info": {"method_name": "train_text_classification.evaluate", "method_params": "loader_dev,metric,segment", "method_startline": "221", "method_endline": "252", "method_complexity": {"method_NLOC": "26", "method_CCN": "6", "method_NToken": "235", "method_nesting_level": "1"}}}}}, "file_15": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autogluon\\task\\text_classification\\text_classification.py", "file_new_name": "autogluon\\task\\text_classification\\text_classification.py", "file_complexity": {"file_NLOC": "132", "file_CCN": "2", "file_NToken": "596"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "39", "method_info": {"method_name": "fit", "method_params": "dataset,net", "method_startline": "32", "method_endline": "64", "method_complexity": {"method_NLOC": "33", "method_CCN": "1", "method_NToken": "163", "method_nesting_level": "1"}}}}}, "file_16": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "autogluon\\utils\\__init__.py", "file_new_name": "autogluon\\utils\\__init__.py", "file_complexity": {"file_NLOC": "16", "file_CCN": "0", "file_NToken": "80"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "3,4,5,13,14", "deleted_lines": "5,7,10,12,13,14"}}}, "file_17": {"file_change_type": "DELETE", "file_Nmethod": 0, "file_old_name": "autogluon\\utils\\data_analyzer.py", "file_new_name": "None", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_18": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "autogluon\\utils\\pil_transforms.py", "file_complexity": {"file_NLOC": "281", "file_CCN": "72", "file_NToken": "2122"}}, "file_19": {"file_change_type": "RENAME", "file_Nmethod": 0, "file_old_name": "autogluon\\utils\\visualizer.py", "file_new_name": "autogluon\\utils\\plot_network.py", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_20": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\install-include.rst", "file_new_name": "docs\\install-include.rst", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "11,12,13,14,15,16,17,18,19,20,21,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,100,102,104,106,108,110,111,112,114,116,118,119,120", "deleted_lines": "36,38,40,42,44,46,48,49,50,52,54,56,58,59,60,62,64,66,67,68,69,70"}}}, "file_21": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\course\\algorithm.md", "file_new_name": "docs\\tutorials\\course\\algorithm.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "188,189,190,191,192,193"}}}, "file_22": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\course\\core.md", "file_new_name": "docs\\tutorials\\course\\core.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "206", "deleted_lines": "206,257,258,259,260,261,262"}}}, "file_23": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\image_classification\\beginner.md", "file_new_name": "docs\\tutorials\\image_classification\\beginner.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "17,18,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,75,76,77,78,80,81", "deleted_lines": "17,27,59,60,62,63,70,71,72,73,74,82,83,84,85,86,87"}}}, "file_24": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\image_classification\\hpo.md", "file_new_name": "docs\\tutorials\\image_classification\\hpo.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "147,148,149,150,151"}}}, "file_25": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\image_classification\\kaggle.md", "file_new_name": "docs\\tutorials\\image_classification\\kaggle.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "45,47,52,53,54,57,60,61,62,63,64,65,66,74,91,95,101,102,106,131,134,135,148,154,157", "deleted_lines": "46,51,52,53,56,59,60,61,62,63,71,72,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,153,154,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,231,234,247,253,256,263,264,265,266,267,268"}}}, "file_26": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\index.rst", "file_new_name": "docs\\tutorials\\index.rst", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "104", "deleted_lines": null}}}, "file_27": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\nas\\enas_mnist.md", "file_new_name": "docs\\tutorials\\nas\\enas_mnist.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "147,148,149,150,151,152,153,154,155,156"}}}, "file_28": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\nas\\index.rst", "file_new_name": "docs\\tutorials\\nas\\index.rst", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "7,8", "deleted_lines": null}}}, "file_29": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\nas\\rl_searcher.md", "file_new_name": "docs\\tutorials\\nas\\rl_searcher.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "47,53", "deleted_lines": "47,53"}}}, "file_30": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\object_detection\\beginner.md", "file_new_name": "docs\\tutorials\\object_detection\\beginner.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "55,56,57,58,59,60,61"}}}, "file_31": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\tabular_prediction\\tabular-indepth.md", "file_new_name": "docs\\tutorials\\tabular_prediction\\tabular-indepth.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "82,83,84,85,86,87"}}}, "file_32": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\tabular_prediction\\tabular-quickstart.md", "file_new_name": "docs\\tutorials\\tabular_prediction\\tabular-quickstart.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "111,112,113,114,115"}}}, "file_33": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\text_classification\\beginner.md", "file_new_name": "docs\\tutorials\\text_classification\\beginner.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "75,76,77,78,79,80"}}}, "file_34": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\text_classification\\index.rst", "file_new_name": "docs\\tutorials\\text_classification\\index.rst", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "18", "deleted_lines": "18"}}}, "file_35": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\torch\\hpo.md", "file_new_name": "docs\\tutorials\\torch\\hpo.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "39,44,143,152,153,161", "deleted_lines": "39,44,143,152,153,161"}}}, "file_36": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "setup.py", "file_new_name": "setup.py", "file_complexity": {"file_NLOC": "79", "file_CCN": "3", "file_NToken": "373"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "45,46,48,49,50,56,57,58,59,63,86", "deleted_lines": "46,47,52,54,55,56,57,58,62,64,65,69,70"}}}}}}