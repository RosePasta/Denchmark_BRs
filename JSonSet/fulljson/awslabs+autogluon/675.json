{"BR": {"BR_id": "675", "BR_author": "amybachir", "BRopenT": "2020-09-21T19:25:48Z", "BRcloseT": "2020-09-24T23:07:55Z", "BR_text": {"BRsummary": "fit_summary Error KeyError: 'trial_info'", "BRdescription": "\n I'm trying autogluon for the first time with a dataset of 75,000 data points and labels.\n autogluon version 0.0.13\n OS:\n Distributor ID: Ubuntu\n Description:    Ubuntu 18.04.4 LTS\n Release:        18.04\n Codename:       bionic\n Here is my predictor, it is a TabularPrediction with hyperparameter_tune turned on:\n predictor = task.fit(train_data=train_data, label=label_column, output_directory=savedir, problem_type='binary', eval_metric='accuracy', hyperparameter_tune=True )\n I tried with hyperparameter_tune  off and the task finished with no problem. Once I turned on hyperparameter_tune, it errored with the following error:\n <denchmark-code>*** Details of Hyperparameter optimization ***\n ---------------------------------------------------------------------------\n KeyError                                  Traceback (most recent call last)\n <ipython-input-2-1b709fc952c0> in <module>\n      11 predictor = task.fit(train_data=train_data, label=label_column, output_directory=savedir, problem_type='binary', eval_metric='accuracy', hyperparameter_tune=True )\n ---> 13 results = predictor.fit_summary()\n      14 \n      15 # Inference time:\n \n /usr/local/lib/python3.6/dist-packages/autogluon/task/tabular_prediction/predictor.py in fit_summary(self, verbosity)\n     414                     hpo_model = hpo_results[model_type]\n     415                     print(\"HPO for %s model:  Num. configurations tried = %s, Time spent = %s, Search strategy = %s\"\n --> 416                           % (model_type, len(hpo_model['trial_info']), hpo_model['total_time'], hpo_model['search_strategy']))\n     417                     print(\"Best hyperparameter-configuration (validation-performance: %s = %s):\"\n     418                           % (self.eval_metric, hpo_model['validation_performance']))\n \n KeyError: 'trial_info'\n \n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "amybachir", "commentT": "2020-09-22T06:43:27Z", "comment_text": "\n \t\tThanks for pointing out this bug. I believe it should be fixed in this PR:  <denchmark-link:https://github.com/awslabs/autogluon/pull/678>#678</denchmark-link>\n \n if you'd like to install that version of autogluon locally and try it out.\n Also just FYI:  hyperparameter_tune is currently not typically the best way to maximize accuracy in TabularPrediction. Instead consider specifying: task.fit(..., presets='best_quality') which utilizes stack-ensembling instead of HPO.\n <denchmark-link:https://autogluon.mxnet.io/tutorials/tabular_prediction/tabular-quickstart.html#maximizing-predictive-performance>https://autogluon.mxnet.io/tutorials/tabular_prediction/tabular-quickstart.html#maximizing-predictive-performance</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "amybachir", "commentT": "2020-09-22T13:32:32Z", "comment_text": "\n \t\t\n Thanks for pointing out this bug. I believe it should be fixed in this PR: #678\n if you'd like to install that version of autogluon locally and try it out.\n Also just FYI: hyperparameter_tune is currently not typically the best way to maximize accuracy in TabularPrediction. Instead consider specifying: task.fit(..., presets='best_quality') which utilizes stack-ensembling instead of HPO.\n https://autogluon.mxnet.io/tutorials/tabular_prediction/tabular-quickstart.html#maximizing-predictive-performance\n \n Thanks for the tip <denchmark-link:https://github.com/jwmueller>@jwmueller</denchmark-link>\n  ! I will try that out!\n \t\t"}}}, "commit": {"commit_id": "ff86985c5038a1b80188780d51a8ce591c8071ac", "commit_author": "Jonas Mueller", "commitT": "2020-09-24 16:07:52-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autogluon\\task\\tabular_prediction\\predictor.py", "file_new_name": "autogluon\\task\\tabular_prediction\\predictor.py", "file_complexity": {"file_NLOC": "468", "file_CCN": "90", "file_NToken": "2622"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "424,425,426,427", "deleted_lines": "424,425,426,427,428", "method_info": {"method_name": "fit_summary", "method_params": "self,verbosity", "method_startline": "319", "method_endline": "438", "method_complexity": {"method_NLOC": "97", "method_CCN": "26", "method_NToken": "639", "method_nesting_level": "1"}}}}}}}}