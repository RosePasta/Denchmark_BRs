{"BR": {"BR_id": "378", "BR_author": "tlienart", "BRopenT": "2020-03-25T15:16:40Z", "BRcloseT": "2020-03-26T00:29:25Z", "BR_text": {"BRsummary": "Balanced accuracy error", "BRdescription": "\n (this is with <denchmark-link:https://github.com/awslabs/autogluon/commit/6b247bfea9d504381cc512e36ba1909e6c54c0c3>6b247bf</denchmark-link>\n )\n Consider (from tabular-indepth tutorial):\n >>> y_test[:5]\n 0               Sales\n 1               Sales\n 2     Exec-managerial\n 3     Exec-managerial\n 4      Prof-specialty\n Name: occupation, dtype: object\n \n >>> y_pred[:5]\n array([' Other-service', ' Craft-repair', ' Exec-managerial', ' Sales',\n        ' Other-service'], dtype=object)\n with ag\n >>> ag.utils.tabular.metrics.accuracy(y_test, y_pred)\n 0.3393387245368001\n \n >>> ag.utils.tabular.metrics.balanced_accuracy(y_test, y_pred)\n [error see stacktrace]\n with sklearn\n >>> sklearn.metrics.balanced_accuracy_score(y_test, y_pred)\n 0.21896145445995055\n <denchmark-h:h3>Reason</denchmark-h>\n \n I believe the issue stems from this line: \n \n \n autogluon/autogluon/utils/tabular/metrics/classification_metrics.py\n \n \n          Line 21\n       in\n       6b247bf\n \n \n \n \n \n \n  max_class = int(np.max((np.max(solution), np.max(prediction)))) \n \n \n \n \n \n which would be ok if prediction and solution have been encoded to integer values but not in general. The max should be over the number of unique elements. This requires a bit more than a one line refactoring though, I'll open a PR.\n <denchmark-h:h3>Stacktrace</denchmark-h>\n \n <denchmark-code>---------------------------------------------------------------------------\n TypeError                                 Traceback (most recent call last)\n <ipython-input-28-ddcca1d23e69> in <module>\n ----> 1 ag.utils.tabular.metrics.balanced_accuracy(y_test, y_pred)\n \n ~/Desktop/github-aws/autogluon-public/autogluon/utils/tabular/metrics/__init__.py in __call__(self, y_true, y_pred, sample_weight)\n      87         else:\n      88             return self._sign * self._score_func(y_true, y_pred,\n ---> 89                                                  **self._kwargs)\n      90 \n      91 \n \n ~/Desktop/github-aws/autogluon-public/autogluon/utils/tabular/metrics/classification_metrics.py in balanced_accuracy(solution, prediction)\n      19     elif y_type == 'multiclass':\n      20         # Need to create a multiclass solution and a multiclass predictions\n ---> 21         max_class = int(np.max((np.max(solution), np.max(prediction))))\n      22         solution_binary = np.zeros((len(solution), max_class + 1))\n      23         prediction_binary = np.zeros((len(prediction), max_class + 1))\n \n <__array_function__ internals> in amax(*args, **kwargs)\n \n ~/Desktop/github-aws/ghaws/lib/python3.7/site-packages/numpy/core/fromnumeric.py in amax(a, axis, out, keepdims, initial, where)\n    2666     \"\"\"\n    2667     return _wrapreduction(a, np.maximum, 'max', axis, None, out,\n -> 2668                           keepdims=keepdims, initial=initial, where=where)\n    2669 \n    2670 \n \n ~/Desktop/github-aws/ghaws/lib/python3.7/site-packages/numpy/core/fromnumeric.py in _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs)\n      88                 return reduction(axis=axis, out=out, **passkwargs)\n      89 \n ---> 90     return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n      91 \n      92 \n \n TypeError: cannot perform reduce with flexible type\n </denchmark-code>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "a7551e75f4a87283bb2a6ca0e371319ccc2f394d", "commit_author": "Thibaut Lienart", "commitT": "2020-03-25 17:29:24-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "autogluon\\utils\\tabular\\metrics\\classification_metrics.py", "file_new_name": "autogluon\\utils\\tabular\\metrics\\classification_metrics.py", "file_complexity": {"file_NLOC": "151", "file_CCN": "32", "file_NToken": "1335"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "20,21,22,23,24,25,26,27,28,29,30,31,32", "deleted_lines": "20,21,22,23,24,25,26,27,28", "method_info": {"method_name": "balanced_accuracy", "method_params": "solution,prediction", "method_startline": "9", "method_endline": "66", "method_complexity": {"method_NLOC": "48", "method_CCN": "9", "method_NToken": "457", "method_nesting_level": "0"}}}}}}}}