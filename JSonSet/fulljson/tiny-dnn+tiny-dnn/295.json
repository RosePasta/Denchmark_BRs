{"BR": {"BR_id": "295", "BR_author": "syoyo", "BRopenT": "2016-08-24T16:26:16Z", "BRcloseT": "2016-10-02T08:24:10Z", "BR_text": {"BRsummary": "CIFAR-10 train example got segmentation fault.", "BRdescription": "\n Firstly, thank you for the great DNN library!\n Secondary, I have experienced segmentation fault when running CIFAR-10 train example.\n It looks the problem is composed of several issues. At least I found Conv2d does not allocate memory for temporary buffer in  which will be fixed with PR <denchmark-link:https://github.com/tiny-dnn/tiny-dnn/pull/294>#294</denchmark-link>\n .\n Still I got the following error(detected by AddressSanitizer). Something is going wrong at layer.h:628 or layer.h:450\n <denchmark-code>==5884==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300006c0b8 at pc 0x000100b8df1e bp 0x700000103d80 sp 0x700000103d78\n READ of size 8 at 0x60300006c0b8 thread T10\n ==5884==AddressSanitizer: while reporting a bug found another one. Ignoring.\n ==5884==AddressSanitizer: while reporting a bug found another one. Ignoring.\n     #0 0x100b8df1d in void std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()>::__execute<>(std::__1::__tuple_indices<>) vector:1497\n     #1 0x100b8d91d in std::__1::__async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >::__execute() future:1025\n     #2 0x100b8e0bb in void* std::__1::__thread_proxy<std::__1::tuple<void (std::__1::__async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >::*)(), std::__1::__async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >*> >(void*) __functional_base:383\n     #3 0x7fff8cf2d99c in _pthread_body (libsystem_pthread.dylib+0x399c)\n     #4 0x7fff8cf2d919 in _pthread_start (libsystem_pthread.dylib+0x3919)\n     #5 0x7fff8cf2b350 in thread_start (libsystem_pthread.dylib+0x1350)\n \n 0x60300006c0b8 is located 0 bytes to the right of 24-byte region [0x60300006c0a0,0x60300006c0b8)\n allocated by thread T0 here:\n     #0 0x100cbf2bb in wrap__Znwm (libclang_rt.asan_osx_dynamic.dylib+0x542bb)\n     #1 0x100b632c9 in tiny_dnn::edge::edge(tiny_dnn::node*, tiny_dnn::index3d<unsigned long> const&, tiny_dnn::vector_type) new:168\n     #2 0x100b65065 in tiny_dnn::layer::setup(bool) memory:2185\n     #3 0x100b73310 in tiny_dnn::connect(tiny_dnn::layer*, tiny_dnn::layer*, unsigned long, unsigned long) layer.h:628\n     #4 0x100bae346 in void tiny_dnn::sequential::add<tiny_dnn::convolutional_layer<tiny_dnn::activation::identity> >(tiny_dnn::convolutional_layer<tiny_dnn::activation::identity>&&) nodes.h:267\n     #5 0x100b4cae6 in void construct_net<tiny_dnn::network<tiny_dnn::sequential> >(tiny_dnn::network<tiny_dnn::sequential>&) train.cpp:46\n     #6 0x100b3ddaa in train_cifar10(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::basic_ostream<char, std::__1::char_traits<char> >&) train.cpp:59\n     #7 0x100b410a5 in main train.cpp:122\n     #8 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)\n     #9 0x2  (<unknown module>)\n \n Thread T10 created by T0 here:\n     #0 0x100ca9f99 in wrap_pthread_create (libclang_rt.asan_osx_dynamic.dylib+0x3ef99)\n     #1 0x100b8d757 in std::__1::future<unsigned long> std::__1::__make_async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >(tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)&&) thread:359\n     #2 0x100b8cb59 in void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int) future:2357\n     #3 0x100b821fe in tiny_dnn::core::tiny_backend::maxpool(std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> > const&, std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> >&) parallel_for.h:162\n     #4 0x100ba7c0c in tiny_dnn::max_pooling_layer<tiny_dnn::activation::relu>::forward_propagation(std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> > const&, std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> >&) max_pooling_layer.h:132\n     #5 0x100b708e8 in tiny_dnn::layer::forward() layer.h:450\n     #6 0x100b6af6d in tiny_dnn::sequential::forward(std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > > > const&) nodes.h:249\n     #7 0x100bd0850 in void tiny_dnn::network<tiny_dnn::sequential>::train_onebatch<tiny_dnn::cross_entropy, tiny_dnn::adam>(tiny_dnn::adam&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, int, int, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*) network.h:685\n     #8 0x100bcee64 in void tiny_dnn::network<tiny_dnn::sequential>::train_once<tiny_dnn::cross_entropy, tiny_dnn::adam>(tiny_dnn::adam&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, int, int, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*) network.h:661\n     #9 0x100b3f315 in train_cifar10(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::basic_ostream<char, std::__1::char_traits<char> >&) network.h:628\n     #10 0x100b410a5 in main train.cpp:122\n     #11 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)\n     #12 0x2  (<unknown module>)\n \n SUMMARY: AddressSanitizer: heap-buffer-overflow vector:1497 in void std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > >&, std::__1::vector<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std\n Shadow bytes around the buggy address:\n   0x1c060000d7c0: 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa\n   0x1c060000d7d0: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00\n   0x1c060000d7e0: 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa\n   0x1c060000d7f0: 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa\n   0x1c060000d800: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00\n =>0x1c060000d810: 00 fa fa fa 00 00 00[fa]fa fa 00 00 00 fa fa fa\n   0x1c060000d820: 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00 00 00\n   0x1c060000d830: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00\n   0x1c060000d840: 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa\n   0x1c060000d850: 00 00 00 fa fa fa 00 00 00 fa fa fa fd fd fd fa\n   0x1c060000d860: fa fa 00 00 00 fa fa fa fd fd fd fa fa fa 00 00\n Shadow byte legend (one shadow byte represents 8 application bytes):\n   Addressable:           00\n   Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:       fa\n   Heap right redzone:      fb\n   Freed heap region:       fd\n   Stack left redzone:      f1\n   Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack partial redzone:   f4\n   Stack after return:      f5\n   Stack use after scope:   f8\n   Global redzone:          f9\n   Global init order:       f6\n   Poisoned by user:        f7\n   Container overflow:      fc\n   Array cookie:            ac\n   Intra object redzone:    bb\n   ASan internal:           fe\n   Left alloca redzone:     ca\n   Right alloca redzone:    cb\n ==5884==AddressSanitizer: while reporting a bug found another one. Ignoring.\n ==5884==ABORTING\n Abort trap: 6\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "syoyo", "commentT": "2016-08-25T15:44:49Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/syoyo>@syoyo</denchmark-link>\n \n Thank you for reporting and PR! This SEGV is solved by  <denchmark-link:https://github.com/tiny-dnn/tiny-dnn/commit/83b9733a6d9efebdd9a904391edf7312a020d15e>83b9733</denchmark-link>\n  , but I find we still have SEGV around  conv2d's  and .  /cc: <denchmark-link:https://github.com/edgarriba>@edgarriba</denchmark-link>\n  Let's check our code :)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "syoyo", "commentT": "2016-08-26T16:18:57Z", "comment_text": "\n \t\tThank you for quick response.\n Although it looks CIFAR-10 train example using recent master does not seg fault anymore, but ASAN still reports some buffer overrun errors. I guess it would be better solve these ASAN error to avoid potential bug.\n <denchmark-code>==11343==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x625001074110 at pc 0x0001005a4da4 bp 0x700000103ca0 sp 0x700000103c98\n READ of size 4 at 0x625001074110 thread T150\n ==11343==AddressSanitizer: while reporting a bug found another one. Ignoring.\n ==11343==AddressSanitizer: while reporting a bug found another one. Ignoring.\n ==11343==AddressSanitizer: while reporting a bug found another one. Ignoring.\n     #0 0x1005a4da3 in tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int)::operator()(int) const conv2d_op_custom.h:150\n     #1 0x1005a3195 in std::__1::__async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >::__execute() parallel_for.h:173\n     #2 0x1005a50db in void* std::__1::__thread_proxy<std::__1::tuple<void (std::__1::__async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >::*)(), std::__1::__async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >*> >(void*) __functional_base:383\n     #3 0x7fff8cf2d99c in _pthread_body (libsystem_pthread.dylib+0x399c)\n     #4 0x7fff8cf2d919 in _pthread_start (libsystem_pthread.dylib+0x3919)\n     #5 0x7fff8cf2b350 in thread_start (libsystem_pthread.dylib+0x1350)\n \n 0x625001074110 is located 16 bytes to the right of 8192-byte region [0x625001072100,0x625001074100)\n allocated by thread T0 here:\n     #0 0x100696336 in wrap_posix_memalign (libclang_rt.asan_osx_dynamic.dylib+0x49336)\n     #1 0x10053b748 in tiny_dnn::aligned_allocator<float, 64ul>::allocate(unsigned long, void const*) aligned_allocator.h:120\n     #2 0x1005428c8 in std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >::vector(std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&) vector:928\n     #3 0x100581719 in std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >::__append(unsigned long, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&) __split_buffer:217\n     #4 0x10055d1e0 in tiny_dnn::layer::set_sample_count(unsigned long) layer.h:552\n     #5 0x10058c533 in tiny_dnn::max_pooling_layer<tiny_dnn::activation::relu>::set_sample_count(unsigned long) max_pooling_layer.h:163\n     #6 0x100554bf8 in tiny_dnn::layer::forward() layer.h:443\n     #7 0x10054f6fd in tiny_dnn::sequential::forward(std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > > > const&) nodes.h:249\n     #8 0x1005b3e90 in void tiny_dnn::network<tiny_dnn::sequential>::train_onebatch<tiny_dnn::cross_entropy, tiny_dnn::adam>(tiny_dnn::adam&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, int, int, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*) network.h:685\n     #9 0x1005b24a4 in void tiny_dnn::network<tiny_dnn::sequential>::train_once<tiny_dnn::cross_entropy, tiny_dnn::adam>(tiny_dnn::adam&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, int, int, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*) network.h:661\n     #10 0x100523aa5 in train_cifar10(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::basic_ostream<char, std::__1::char_traits<char> >&) network.h:628\n     #11 0x100525835 in main train.cpp:122\n     #12 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)\n     #13 0x2  (<unknown module>)\n \n Thread T150 created by T0 here:\n     #0 0x10068bf99 in wrap_pthread_create (libclang_rt.asan_osx_dynamic.dylib+0x3ef99)\n     #1 0x1005a2f67 in std::__1::future<unsigned long> std::__1::__make_async_assoc_state<void, std::__1::__async_func<void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int)::'lambda'()> >(tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int)&&) thread:359\n     #2 0x1005a2909 in void tiny_dnn::parallel_for<void tiny_dnn::for_i<unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int)>(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, tiny_dnn::core::conv_params const&, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&)>(int, int, unsigned long const&, int) future:2357\n     #3 0x1005a07c4 in tiny_dnn::Conv2dGradOp::compute(tiny_dnn::core::OpKernelContext const&) parallel_for.h:148\n     #4 0x10059690e in tiny_dnn::convolutional_layer<tiny_dnn::activation::identity>::back_propagation(std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> > const&, std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> > const&, std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> >&, std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >*> >&) convolutional_layer.h:269\n     #5 0x1005512a1 in tiny_dnn::layer::backward() layer.h:469\n     #6 0x10054f022 in tiny_dnn::sequential::backward(std::__1::vector<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > > > const&) nodes.h:236\n     #7 0x1005b3eba in void tiny_dnn::network<tiny_dnn::sequential>::train_onebatch<tiny_dnn::cross_entropy, tiny_dnn::adam>(tiny_dnn::adam&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, int, int, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*) network.h:772\n     #8 0x1005b24a4 in void tiny_dnn::network<tiny_dnn::sequential>::train_once<tiny_dnn::cross_entropy, tiny_dnn::adam>(tiny_dnn::adam&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*, int, int, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const*) network.h:661\n     #9 0x100523aa5 in train_cifar10(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::basic_ostream<char, std::__1::char_traits<char> >&) network.h:628\n     #10 0x100525835 in main train.cpp:122\n     #11 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)\n     #12 0x2  (<unknown module>)\n \n SUMMARY: AddressSanitizer: heap-buffer-overflow conv2d_op_custom.h:150 in tiny_dnn::conv2d_op_custom_impl(std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > const&, std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > const&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >&, std::__1::vector<std::__1::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::__1::allocator<std::__1::vector<fl\n Shadow bytes around the buggy address:\n   0x1c4a0020e7d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x1c4a0020e7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x1c4a0020e7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x1c4a0020e800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   0x1c4a0020e810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n =>0x1c4a0020e820: fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa\n   0x1c4a0020e830: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n   0x1c4a0020e840: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n   0x1c4a0020e850: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n   0x1c4a0020e860: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n   0x1c4a0020e870: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n Shadow byte legend (one shadow byte represents 8 application bytes):\n   Addressable:           00\n   Partially addressable: 01 02 03 04 05 06 07 \n   Heap left redzone:       fa\n   Heap right redzone:      fb\n   Freed heap region:       fd\n   Stack left redzone:      f1\n   Stack mid redzone:       f2\n   Stack right redzone:     f3\n   Stack partial redzone:   f4\n   Stack after return:      f5\n   Stack use after scope:   f8\n   Global redzone:          f9\n   Global init order:       f6\n   Poisoned by user:        f7\n   Container overflow:      fc\n   Array cookie:            ac\n   Intra object redzone:    bb\n   ASan internal:           fe\n   Left alloca redzone:     ca\n   Right alloca redzone:    cb\n ==11343==ABORTING\n Abort trap: 6\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "syoyo", "commentT": "2016-08-26T18:36:57Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/syoyo>@syoyo</denchmark-link>\n  Can you open a PR to have an Asan build with Cmake? It could be useful in other contexts.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "syoyo", "commentT": "2016-08-27T06:20:02Z", "comment_text": "\n \t\tActually I'm compiling CIFAR-10 example with ASAN support(-fsanitize=address)  without cmake, so  I have no idea how to add ASAN support to CMake project for tiny-dnn, but you may be interested in this cmake module\n <denchmark-link:https://github.com/arsenm/sanitizers-cmake>https://github.com/arsenm/sanitizers-cmake</denchmark-link>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "syoyo", "commentT": "2016-08-27T10:08:43Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/syoyo>@syoyo</denchmark-link>\n \n I think that the easier will be copying  inside \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "syoyo", "commentT": "2016-08-27T10:08:52Z", "comment_text": "\n \t\t/cc <denchmark-link:https://github.com/nyanp>@nyanp</denchmark-link>\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "syoyo", "commentT": "2016-08-27T11:19:24Z", "comment_text": "\n \t\tThere are still couple of memory bug(buffer overflow) wen running CIFAR-10 train, so it gives wrong train result. At least one of the issue is ppdelta_dst[idx] as shown the above ASAN log.\n <denchmark-link:https://github.com/tiny-dnn/tiny-dnn/blob/master/tiny_dnn/core/kernels/conv2d_op_custom.h#L149>https://github.com/tiny-dnn/tiny-dnn/blob/master/tiny_dnn/core/kernels/conv2d_op_custom.h#L149</denchmark-link>\n \n This happens when prev_delta[sample].size() is smaller than out.width * out.height * out.depth(plus some padding for weight kernel).\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "syoyo", "commentT": "2016-10-02T08:29:39Z", "comment_text": "\n \t\tI've confirmed at least it does not seg fault anymore in recent master,  thus closing the issue.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "syoyo", "commentT": "2016-10-03T13:22:47Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/syoyo>@syoyo</denchmark-link>\n \n Thank you very much for confirming!\n \t\t"}}}, "commit": {"commit_id": "83b9733a6d9efebdd9a904391edf7312a020d15e", "commit_author": "nyanp", "commitT": "2016-08-26 00:39:46+09:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tiny_dnn\\layers\\max_pooling_layer.h", "file_new_name": "tiny_dnn\\layers\\max_pooling_layer.h", "file_complexity": {"file_NLOC": "191", "file_CCN": "33", "file_NToken": "1330"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "163", "deleted_lines": null, "method_info": {"method_name": "tiny_dnn::max_pooling_layer::set_sample_count", "method_params": "sample_count", "method_startline": "162", "method_endline": "165", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "40", "method_nesting_level": "2"}}}}}}}}