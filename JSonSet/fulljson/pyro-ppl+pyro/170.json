{"BR": {"BR_id": "170", "BR_author": "martinjankowiak", "BRopenT": "2017-09-28T20:56:47Z", "BRcloseT": "2017-10-19T01:24:23Z", "BR_text": {"BRsummary": "bug in pyro.module", "BRdescription": "\n something i noticed a long time ago is that if you have a nn.Module which shares certain submodules between its different component parts, e.g. something like\n class MyModule(nn.Module):\n     def __init__(self, lin1, lin2=None):\n         self.lin1 = lin1\n         self.lin2 = lin1 if lin2 is None else lin2\n then the doubled module messes up pyro.module, specifically the following assert statement fails:\n missing = set(current_nn_state.keys()) - set(state_dict.keys())\n if len(missing) > 0:\n     raise KeyError('missing keys in state_dict: \"{}\"'.format(missing))\n this serves as a reminder for someone (probably me) to look into this at some point\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "martinjankowiak", "commentT": "2017-09-30T08:29:32Z", "comment_text": "\n \t\thm this is a pretty serious problem, i can look into this. i suspect the problem is with the if statement\n <denchmark-code> if id(param) != id(current_nn_state[name]):\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "martinjankowiak", "commentT": "2017-10-07T08:17:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jpchen>@jpchen</denchmark-link>\n  any update on this?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "martinjankowiak", "commentT": "2017-10-19T01:24:23Z", "comment_text": "\n \t\tclosed by <denchmark-link:https://github.com/pyro-ppl/pyro/pull/249>#249</denchmark-link>\n  and <denchmark-link:https://github.com/pyro-ppl/pyro/pull/274>#274</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "ce755cf14a7e04084e96c81621d59bd3abe220fc", "commit_author": "martinjankowiak", "commitT": "2017-10-12 00:18:44-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "pyro\\__init__.py", "file_new_name": "pyro\\__init__.py", "file_complexity": {"file_NLOC": "124", "file_CCN": "31", "file_NToken": "880"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "261,262,263,264", "deleted_lines": "261,262,263,264", "method_info": {"method_name": "module._copy_in_place", "method_params": "source,target", "method_startline": "261", "method_endline": "264", "method_complexity": {"method_NLOC": "4", "method_CCN": "3", "method_NToken": "49", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "252,253,254,255,256,257,258,259,260,261,262,263,264,267,268,269,270", "deleted_lines": "252,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271", "method_info": {"method_name": "module", "method_params": "pyro_name,nn_obj,tags", "method_startline": "233", "method_endline": "271", "method_complexity": {"method_NLOC": "14", "method_CCN": "4", "method_NToken": "101", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "255,256,257,258,259", "deleted_lines": "256,257,258,259", "method_info": {"method_name": "module._cdata", "method_params": "t", "method_startline": "255", "method_endline": "259", "method_complexity": {"method_NLOC": "5", "method_CCN": "2", "method_NToken": "29", "method_nesting_level": "1"}}}}}}}}