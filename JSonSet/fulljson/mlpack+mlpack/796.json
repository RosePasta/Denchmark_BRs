{"BR": {"BR_id": "796", "BR_author": "thejonan", "BRopenT": "2016-10-05T12:57:37Z", "BRcloseT": "2016-10-05T17:14:17Z", "BR_text": {"BRsummary": "`target_compile_features` from NewCXX11.cmake produce an error with LLVM's clang", "BRdescription": "\n Trying to build mlpack with OpenMP support on MacOS X (10.11.6) led me to using <denchmark-link:http://www.llvm.org>llvm</denchmark-link>\n 's clang (installed via <denchmark-link:http://brew.sh>Homebrew</denchmark-link>\n  ). With appropriate  command that almost worked:\n <denchmark-code>LDFLAGS=-L/usr/local/opt/llvm/lib CFLAGS=-I/usr/local/opt/llvm/include CPPFLAGS=-I/usr/local/opt/llvm/include\\ -std=c++0x cmake -D CMAKE_C_COMPILER=clang-omp -D CMAKE_CXX_COMPILER=clang-omp++ ../\n </denchmark-code>\n \n (clang-omp and clang-omp++ are symlinks to llvm's binaries).\n However, there was an error referring to target_compile_features directive in CMake/NewCXX11.cmake file:\n <denchmark-code>CMake Error at CMake/NewCXX11.cmake:4 (target_compile_features):\n   target_compile_features no known features for CXX compiler\n \n   \"Clang\"\n \n   version 3.8.1.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "thejonan", "commentT": "2016-10-05T14:02:37Z", "comment_text": "\n \t\tUgh: <denchmark-link:http://stackoverflow.com/questions/28119552/no-known-features-for-cxx-compiler-when-compiling-with-msvc-2013>http://stackoverflow.com/questions/28119552/no-known-features-for-cxx-compiler-when-compiling-with-msvc-2013</denchmark-link>\n \n Looks like what I will have to do is add a flag you can specify to CMake to force CMake to believe that the compiler is a C++11 compiler and bypass the check in NewCXX11.cmake.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "thejonan", "commentT": "2016-10-05T14:07:18Z", "comment_text": "\n \t\tSounds like it can help. However, I've tried manually adding the -std=c++11 flag to CPPFLAGS when invoking cmake. No success.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "thejonan", "commentT": "2016-10-05T14:13:11Z", "comment_text": "\n \t\tSorry, I've just made another test and this time it worked, so yes your suggestion will do the job.\n Here's what I did:\n \n Commented NewCXX11.cmake inclusion as before\n Added -D \"CMAKE_CXX_FLAGS=-I/usr/local/opt/llvm/include -std=c++11\" to cmake-'s arguments.\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "thejonan", "commentT": "2016-10-05T14:14:19Z", "comment_text": "\n \t\tYep, that will work.  I am writing up a patch now to make this easier and I will let you know when it's done and how it works.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "thejonan", "commentT": "2016-10-05T17:14:16Z", "comment_text": "\n \t\tOkay, I added some changes that should fix this issue.  If the compiler is not detected as a valid C++11 compiler, you can do specify the -DFORCE_CXX11=ON option and that will force CMake to treat the C++ compiler as having valid C++11 support.  You may also need to specify extra CXXFLAGS like with -DCMAKE_CXX_FLAGS=\"-std=c++11\" or something like that.  Let me know if there are any problems with that.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "thejonan", "commentT": "2016-10-05T19:52:44Z", "comment_text": "\n \t\tSuccessfully building. Thanks.\n \t\t"}}}, "commit": {"commit_id": "a2d45ebc93d175602500df8136d54328399e40a8", "commit_author": "Ryan Curtin", "commitT": "2016-10-05 10:19:45-04:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CMakeLists.txt", "file_new_name": "CMakeLists.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43", "deleted_lines": "4,5,6,7,8,9,10,11,12,13,14,15,16,17,18"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\mlpack\\CMakeLists.txt", "file_new_name": "src\\mlpack\\CMakeLists.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "26,27,28,29,30"}}}}}}