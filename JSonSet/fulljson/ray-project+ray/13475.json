{"BR": {"BR_id": "13475", "BR_author": "cruyffturn", "BRopenT": "2021-01-15T01:13:03Z", "BRcloseT": "2021-01-20T10:25:33Z", "BR_text": {"BRsummary": "[tune] reuse_actors doesn't reuse actors for the class based API", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n \"reuse_actors = True\" doesn't work as expected for the class based API. When I inspect the timeline I observe that workers are not reused. On the other hand, when I use the function based API it works faster and only 3 workers are used in the timeline as expected.\n Ray version 1.1.0, Python 3.6.12.\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n <denchmark-code>import time\n import ray\n from ray import tune\n import numpy as np\n \n class Trainable(tune.Trainable):\n     \n     def _setup(self, config):\n         self.i = 0\n     \n     def _train(self):  # This is called iteratively.\n         print(self.i)\n         time.sleep(1)\n         self.i += 1\n             \n         return {'i':self.i}    \n \n ray.init(num_cpus=3, num_gpus=0)\n         \n search_space = {\n         \"i\": tune.grid_search(np.arange(20).tolist())\n         }\n \n analysis = tune.run(Trainable,\n                     name = 'exp',\n                     stop = {'i':1},\n                     config=search_space,\n                     reuse_actors = True\n                     )\n </denchmark-code>\n \n \n [y] I have verified my script runs in a clean environment and reproduces the issue.\n [y] I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "cruyffturn", "commentT": "2021-01-15T11:07:20Z", "comment_text": "\n \t\tIn order to use  with the class based API you need to implement a  method - see here: <denchmark-link:https://docs.ray.io/en/master/tune/api_docs/trainable.html#advanced-reusing-actors>https://docs.ray.io/en/master/tune/api_docs/trainable.html#advanced-reusing-actors</denchmark-link>\n \n Your output should also show a warning that this is not the case.\n Please feel free to re-open if you have more questions.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "cruyffturn", "commentT": "2021-01-15T16:22:38Z", "comment_text": "\n \t\tThank you. I apologize, I missed that.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "cruyffturn", "commentT": "2021-01-15T21:30:32Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/krfricke>@krfricke</denchmark-link>\n  I have included the reset_config method that returns true but the timeline shows that the actors are not being reused.\n What can be the problem?\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n <denchmark-code>import time\n import ray\n from ray import tune\n import numpy as np\n \n class Trainable(tune.Trainable):\n     \n     def setup(self, config):\n         self.i = 0\n     \n     def step(self):\n         print(self.i)\n         time.sleep(1)\n         self.i += 1\n             \n         return {'i':self.i}\n     \n     def reset_config(self, new_config):\n         \n         self.config = new_config\n         return True\n \n ray.init(num_cpus=3, num_gpus=0)\n         \n search_space = {\n         \"i\": tune.grid_search(np.arange(20).tolist())\n         }\n \n analysis = tune.run(Trainable,\n                     name = 'exp',\n                     stop = {'i':1},\n                     config=search_space,\n                     reuse_actors = True\n                     )\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "cruyffturn", "commentT": "2021-01-19T10:16:04Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/cruyffturn>@cruyffturn</denchmark-link>\n , there seems to be the requirement that the trial has to start from a checkpoint in order to reuse existing trainables. This might be a legacy requirement that we can get rid of. I'm actively looking into this for a similar case, so I'll keep you posted with our progress there.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "cruyffturn", "commentT": "2021-01-19T21:33:46Z", "comment_text": "\n \t\tThank you!\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "cruyffturn", "commentT": "2021-01-20T10:26:09Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/cruyffturn>@cruyffturn</denchmark-link>\n , this was fixed in <denchmark-link:https://github.com/ray-project/ray/pull/13549>#13549</denchmark-link>\n  and will be included in the next nightly wheels and next release.\n \t\t"}}}, "commit": {"commit_id": "6c23bef2a7306b0256a220f37201c091257fa7f8", "commit_author": "Kai Fricke", "commitT": "2021-01-20 11:25:33+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\ray\\tune\\ray_trial_executor.py", "file_new_name": "python\\ray\\tune\\ray_trial_executor.py", "file_complexity": {"file_NLOC": "667", "file_CCN": "145", "file_NToken": "4035"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "254,260", "deleted_lines": "249,255,256", "method_info": {"method_name": "_setup_remote_runner", "method_params": "self,trial,reuse_allowed", "method_startline": "249", "method_endline": "318", "method_complexity": {"method_NLOC": "59", "method_CCN": "13", "method_NToken": "390", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "248,254,260", "deleted_lines": "249,255,256", "method_info": {"method_name": "_setup_remote_runner", "method_params": "self,trial", "method_startline": "248", "method_endline": "317", "method_complexity": {"method_NLOC": "58", "method_CCN": "12", "method_NToken": "386", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\ray\\tune\\tests\\test_actor_reuse.py", "file_new_name": "python\\ray\\tune\\tests\\test_actor_reuse.py", "file_complexity": {"file_NLOC": "175", "file_CCN": "35", "file_NToken": "1477"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "52", "deleted_lines": null, "method_info": {"method_name": "create_resettable_class", "method_params": "", "method_startline": "20", "method_endline": "56", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "180,195", "deleted_lines": "179,194", "method_info": {"method_name": "testTrialReuseLogToFile", "method_params": "self", "method_startline": "165", "method_endline": "207", "method_complexity": {"method_NLOC": "37", "method_CCN": "1", "method_NToken": "393", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "52", "deleted_lines": null, "method_info": {"method_name": "create_resettable_class.reset_config", "method_params": "self,new_config", "method_startline": "48", "method_endline": "54", "method_complexity": {"method_NLOC": "7", "method_CCN": "2", "method_NToken": "40", "method_nesting_level": "2"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "135", "deleted_lines": "134", "method_info": {"method_name": "testTrialReuseEnabled", "method_params": "self", "method_startline": "129", "method_endline": "135", "method_complexity": {"method_NLOC": "7", "method_CCN": "4", "method_NToken": "100", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\trainable.py", "file_new_name": "python\\ray\\tune\\trainable.py", "file_complexity": {"file_NLOC": "397", "file_CCN": "81", "file_NToken": "2406"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "434,435,436,437", "deleted_lines": null, "method_info": {"method_name": "reset", "method_params": "self,new_config,logger_creator", "method_startline": "427", "method_endline": "469", "method_complexity": {"method_NLOC": "29", "method_CCN": "4", "method_NToken": "173", "method_nesting_level": "1"}}}}}}}}