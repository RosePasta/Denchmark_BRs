{"BR": {"BR_id": "2731", "BR_author": "robertnishihara", "BRopenT": "2018-08-24T00:08:48Z", "BRcloseT": "2018-08-24T23:31:05Z", "BR_text": {"BRsummary": "Logging issues with GLOG (composite logging statements don't always work).", "BRdescription": "\n We just switched to using GLOG in <denchmark-link:https://github.com/ray-project/ray/pull/2695>#2695</denchmark-link>\n .\n I'm trying this on MacOS at the current master.\n I'm seeing logging statements that log multiple things fail. For example the following works fine.\n // This works.\n RAY_LOG(INFO) << \"aaaa\";\n RAY_LOG(INFO) << 1111;\n RAY_LOG(INFO) << 3.14;\n RAY_LOG(INFO) << TaskID::from_random();\n It produces\n <denchmark-code>I0823 17:04:43.768009 2788152192 node_manager.cc:1363] aaaa\n I0823 17:04:43.768018 2788152192 node_manager.cc:1364] 1111\n I0823 17:04:43.768041 2788152192 node_manager.cc:1367] 3.14\n I0823 17:04:43.768050 2788152192 node_manager.cc:1368] a7841706c3ecc4f5bfb54b3518eddeb6972bc5fe\n </denchmark-code>\n \n However, when I do\n // This does not work.\n RAY_LOG(INFO) << \"aaaa\" << 1111;\n RAY_LOG(INFO) << \"bbbb\" << \"cccc\";\n RAY_LOG(INFO) << 2222 << 3333;\n I see the following (the second item doesn't appear).\n <denchmark-code>I0823 17:04:43.768060 2788152192 node_manager.cc:1369] aaaa\n I0823 17:04:43.768069 2788152192 node_manager.cc:1370] bbbb\n I0823 17:04:43.768076 2788152192 node_manager.cc:1371] 2222\n </denchmark-code>\n \n Compare with\n std::cout << \"aaaa\" << 1111 << std::endl;;\n std::cout << \"bbbb\" << \"cccc\" << std::endl;;\n std::cout << 2222 << 3333 << std::endl;;\n which produces the following as desired.\n <denchmark-code>aaaa1111\n bbbbcccc\n 22223333\n </denchmark-code>\n \n <denchmark-link:https://github.com/guoyuhong>@guoyuhong</denchmark-link>\n  any idea about this? cc <denchmark-link:https://github.com/concretevitamin>@concretevitamin</denchmark-link>\n  <denchmark-link:https://github.com/pcmoritz>@pcmoritz</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "robertnishihara", "commentT": "2018-08-24T00:29:39Z", "comment_text": "\n \t\tyeah, I'm seeing this as well on MacOSX\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "robertnishihara", "commentT": "2018-08-24T00:51:22Z", "comment_text": "\n \t\tsame on linux, and disabling it in CMakeLists.txt didn't turn it off:\n <denchmark-code>option(RAY_USE_GLOG\n   \"Build the logging system using glog\"\n   OFF)\n </denchmark-code>\n \n commenting it out in src/ray/CMakeLists.txt causes logging to malfunction, printing all log levels, from what it looks like:\n <denchmark-code>src/ray/CMakeLists.txt\n #if(RAY_USE_GLOG)\n #  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DRAY_USE_GLOG\")\n #  set(RAY_LIB_STATIC_LINK_LIBS ${RAY_LIB_STATIC_LINK_LIBS} ${GLOG_STATIC_LIB})\n #  set(RAY_LIB_DEPENDENCIES ${RAY_LIB_DEPENDENCIES} glog)\n #endif()\n </denchmark-code>\n \n Any other workarounds for now?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "robertnishihara", "commentT": "2018-08-24T02:32:51Z", "comment_text": "\n \t\tI cannot make the template operator function virtual and the return type is RayLogBase, which could be the cause. I will make a fix soon.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "robertnishihara", "commentT": "2018-08-24T23:31:05Z", "comment_text": "\n \t\tFixed by <denchmark-link:https://github.com/ray-project/ray/pull/2734>#2734</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "697bfb14db6b897ea21aaa07fb35c8a58734e587", "commit_author": "Yuhong Guo", "commitT": "2018-08-24 16:30:51-07:00", "commit_complexity": {"commit_NLOC": "0.6666666666666666", "commit_CCN": "1.0", "commit_Nprams": "0.8888888888888888"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\ray\\util\\logging.cc", "file_new_name": "src\\ray\\util\\logging.cc", "file_complexity": {"file_NLOC": "100", "file_CCN": "31", "file_NToken": "575"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "133,134", "deleted_lines": null, "method_info": {"method_name": "ray::RayLog::Stream", "method_params": "", "method_startline": "131", "method_endline": "139", "method_complexity": {"method_NLOC": "4", "method_CCN": "2", "method_NToken": "21", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "141", "deleted_lines": null, "method_info": {"method_name": "ray::RayLog::IsEnabled", "method_params": "", "method_startline": "141", "method_endline": "141", "method_complexity": {"method_NLOC": "1", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "117,118,119,121", "deleted_lines": "117,119,120", "method_info": {"method_name": "ray::RayLog::RayLog", "method_params": "file_name,line_number,severity", "method_startline": "117", "method_endline": "129", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "76", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "src\\ray\\util\\logging.h", "file_new_name": "src\\ray\\util\\logging.h", "file_complexity": {"file_NLOC": "51", "file_CCN": "7", "file_NToken": "246"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "72,73,74,75,76", "deleted_lines": null, "method_info": {"method_name": "ray::RayLogBase::operator < <", "method_params": "t", "method_startline": "71", "method_endline": "78", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "38", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "68", "deleted_lines": null, "method_info": {"method_name": "ray::RayLogBase::IsEnabled", "method_params": "", "method_startline": "68", "method_endline": "68", "method_complexity": {"method_NLOC": "1", "method_CCN": "1", "method_NToken": "9", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "81,87", "deleted_lines": "81,82,83,84,85,86,87,88,89", "method_info": {"method_name": "ray::RayLog::operator < <", "method_params": "t", "method_startline": "81", "method_endline": "89", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "40", "method_nesting_level": "2"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "81", "deleted_lines": "81", "method_info": {"method_name": "ray::RayLogBase::Stream", "method_params": "", "method_startline": "81", "method_endline": "81", "method_complexity": {"method_NLOC": "1", "method_CCN": "1", "method_NToken": "10", "method_nesting_level": "2"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\ray\\util\\logging_test.cc", "file_new_name": "src\\ray\\util\\logging_test.cc", "file_complexity": {"file_NLOC": "67", "file_CCN": "9", "file_NToken": "422"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "56,57,65,66,74,75", "deleted_lines": "50,58,66", "method_info": {"method_name": "ray::TEST", "method_params": "LogPerfTest,PerfTest", "method_startline": "50", "method_endline": "81", "method_complexity": {"method_NLOC": "29", "method_CCN": "4", "method_NToken": "229", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "21,22,23,24,25,26,27,28,29,30,31", "deleted_lines": "21,22,23,24,25", "method_info": {"method_name": "ray::PrintLog", "method_params": "", "method_startline": "20", "method_endline": "35", "method_complexity": {"method_NLOC": "13", "method_CCN": "1", "method_NToken": "63", "method_nesting_level": "1"}}}}}}}}