{"BR": {"BR_id": "12195", "BR_author": "richardliaw", "BRopenT": "2020-11-20T05:32:36Z", "BRcloseT": "2020-11-21T21:04:37Z", "BR_text": {"BRsummary": "[aws] unspecified boto dependency breaks autoscaler examples", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n In many of our examples, boto3 is pinned to 1.4.8.\n However, with this version of boto3, Tte autoscaler is throwing an error on describe_instance_types without any hint as to what the user should do next.\n I'm not sure why we can't just load a copy of these instance types in the repo, to be honest.\n cc <denchmark-link:https://github.com/ericl>@ericl</denchmark-link>\n  <denchmark-link:https://github.com/AmeerHajAli>@AmeerHajAli</denchmark-link>\n \n Ray version and other system information (Python version, TensorFlow version, OS): master, 3.7\n <denchmark-code>(base) \u279c  tune git:(fix-kubernetes-dep) \u2717 pip list | grep boto\n boto                          2.49.0\n boto3                         1.4.8\n botocore                      1.8.50\n </denchmark-code>\n \n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):\n <denchmark-code>(base) \u279c  tune git:(fix-kubernetes-dep) \u2717 ray up $CFG -y\n Cluster: basic\n \n Checking AWS environment settings\n Traceback (most recent call last):\n   File \"/Users/rliaw/miniconda3/bin/ray\", line 8, in <module>\n     sys.exit(main())\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/ray/scripts/scripts.py\", line 1471, in main\n     return cli()\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\n     return self.main(*args, **kwargs)\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/click/core.py\", line 782, in main\n     rv = self.invoke(ctx)\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\n     return _process_result(sub_ctx.command.invoke(sub_ctx))\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\n     return ctx.invoke(self.callback, **ctx.params)\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\n     return callback(*args, **kwargs)\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/ray/scripts/scripts.py\", line 860, in up\n     use_login_shells=use_login_shells)\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/ray/autoscaler/_private/commands.py\", line 213, in create_or_update_cluster\n     config = _bootstrap_config(config, no_config_cache=no_config_cache)\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/ray/autoscaler/_private/commands.py\", line 274, in _bootstrap_config\n     config = provider_cls.fillout_available_node_types_resources(config)\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/ray/autoscaler/_private/aws/node_provider.py\", line 487, in fillout_available_node_types_resources\n     cluster_config[\"provider\"].get(\"aws_credentials\"))\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/ray/autoscaler/_private/aws/node_provider.py\", line 76, in list_ec2_instances\n     instance_types = ec2.describe_instance_types()\n   File \"/Users/rliaw/miniconda3/lib/python3.7/site-packages/botocore/client.py\", line 565, in __getattr__\n     self.__class__.__name__, item)\n AttributeError: 'EC2' object has no attribute 'describe_instance_types'\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "richardliaw", "commentT": "2020-11-20T21:16:14Z", "comment_text": "\n \t\tI am not sure if the best solution is to store the table because we have to keep updating it. I think a quick workaround here is to make this a non breaking feature (keep it in try except as it was previously) with logger.exception().\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "richardliaw", "commentT": "2020-11-20T22:06:32Z", "comment_text": "\n \t\tyeah, that would be great <denchmark-link:https://github.com/AmeerHajAli>@AmeerHajAli</denchmark-link>\n  can you open a PR and cc me?\n \t\t"}}}, "commit": {"commit_id": "2a9499a1bdf49fbdbf7410c419b5282f26b68551", "commit_author": "Ameer Haj Ali", "commitT": "2020-11-21 13:04:24-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\autoscaler\\_private\\commands.py", "file_new_name": "python\\ray\\autoscaler\\_private\\commands.py", "file_complexity": {"file_NLOC": "891", "file_CCN": "44", "file_NToken": "4956"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "273,274,275,276,277,278,279,280,281", "deleted_lines": "273,274"}}}}}}