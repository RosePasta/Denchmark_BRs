{"BR": {"BR_id": "1049", "BR_author": "ericl", "BRopenT": "2017-10-01T06:46:36Z", "BRcloseT": "2017-11-20T23:19:12Z", "BR_text": {"BRsummary": "ray.get() hangs if you call it on a actor task that calls sys.exit()", "BRdescription": "\n I was trying to kill actor processes to release GPU resources by having a method that would raise SystemExit. However, ray.get() hangs forever in this case. I see in the console:\n <denchmark-code>Disconnecting client on fd 42                                                                              \n Error in atexit._run_exitfuncs:                                                                            \n Traceback (most recent call last):                                                                         \n   File \"/home/ubuntu/.local/lib/python3.6/site-packages/ray-0.2.0-py3.6-linux-x86_64.egg/ray/worker.py\", li\n ne 1358, in cleanup                                                                                        \n A worker died or was killed while executing a task.                                                        \n                                                                                                            \n   You can inspect errors by running                                                                        \n                                                                                                            \n       ray.error_info()                                                                                     \n                                                                                                            \n   If this driver is hanging, start a new one with                                                          \n                                                                                                            \n       ray.init(redis_address=\"127.0.0.1:25614\")                                                            \n                                                                                                            \n     worker.plasma_client.disconnect()                                                                      \n   File \"/home/ubuntu/.local/lib/python3.6/site-packages/ray-0.2.0-py3.6-linux-x86_64.egg/ray/worker.py\", li\n ne 865, in exit                                                                                            \n     sys.exit(0)                                                                                            \n SystemExit: 0                                                                                              \n </denchmark-code>\n \n If you interrupt the driver, you see that it's hanging in the ray.get() for the stop method.\n <denchmark-code>Traceback (most recent call last):\n   File \"./rllib-eval.py\", line 261, in <module>\n     runner.process_events()\n   File \"./rllib-eval.py\", line 200, in process_events\n     exp.stop()\n   File \"./rllib-eval.py\", line 66, in stop\n     ray.get(self.agent.stop.remote())\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ericl", "commentT": "2017-10-01T17:40:58Z", "comment_text": "\n \t\tGood point, I just verified that this also happens for remote functions (though in the remote function case the task gets resubmitted over and over by the local scheduler).\n I think what we want to do here is the following. The local scheduler detects that the worker died, it looks at what task the worker was executing and then there are a couple options.\n \n It can put an object representing a failed task in the object store for the objects that were supposed to be created by the failed task. Whoever calls ray.get on that object will retrieve the object and reraise the exception. This is the normal approach we use when tasks raise exceptions.\n It can stick a key in Redis saying that the task failed (this is easy to implement), but then whoever is waiting for the objects will have to check Redis, which is pretty inconvenient (that is it's not clear what the right way to do this is when you're calling ray.get on one million objects).\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ericl", "commentT": "2017-11-20T23:19:12Z", "comment_text": "\n \t\tFixed by <denchmark-link:https://github.com/ray-project/ray/pull/1224>#1224</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "9233e496ccad1f14925999c003a32160e7b5ddf3", "commit_author": "Eric Liang", "commitT": "2017-11-20 15:18:39-08:00", "commit_complexity": {"commit_NLOC": "0.3669724770642202", "commit_CCN": "0.908256880733945", "commit_Nprams": "0.5688073394495413"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\worker.py", "file_new_name": "python\\ray\\worker.py", "file_complexity": {"file_NLOC": "1403", "file_CCN": "236", "file_NToken": "8730"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "380,381,382,383,384,385,386,387", "deleted_lines": null, "method_info": {"method_name": "retrieve_and_deserialize", "method_params": "self,object_ids,timeout,error_timeout", "method_startline": "361", "method_endline": "408", "method_complexity": {"method_NLOC": "37", "method_CCN": "9", "method_NToken": "201", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\common\\state\\actor_notification_table.cc", "file_new_name": "src\\common\\state\\actor_notification_table.cc", "file_complexity": {"file_NLOC": "18", "file_CCN": "2", "file_NToken": "90"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "19,20,21", "deleted_lines": null, "method_info": {"method_name": "actor_table_mark_removed", "method_params": "db_handle,actor_id", "method_startline": "19", "method_endline": "21", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "18", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\common\\state\\actor_notification_table.h", "file_new_name": "src\\common\\state\\actor_notification_table.h", "file_complexity": {"file_NLOC": "19", "file_CCN": "0", "file_NToken": "73"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "44,45,46,47,48,49,50,51,52", "deleted_lines": null}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\common\\state\\redis.cc", "file_new_name": "src\\common\\state\\redis.cc", "file_complexity": {"file_NLOC": "1218", "file_CCN": "205", "file_NToken": "9000"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1579,1580,1581,1582,1583,1584,1585,1586", "deleted_lines": null, "method_info": {"method_name": "redis_actor_table_mark_removed", "method_params": "db,actor_id", "method_startline": "1579", "method_endline": "1586", "method_complexity": {"method_NLOC": "8", "method_CCN": "3", "method_NToken": "63", "method_nesting_level": "0"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\common\\state\\redis.h", "file_new_name": "src\\common\\state\\redis.h", "file_complexity": {"file_NLOC": "66", "file_CCN": "0", "file_NToken": "424"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "324,325,326,327,328,329,330,331,332", "deleted_lines": null}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\local_scheduler\\local_scheduler.cc", "file_new_name": "src\\local_scheduler\\local_scheduler.cc", "file_complexity": {"file_NLOC": "1054", "file_CCN": "182", "file_NToken": "6754"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "83,84", "deleted_lines": "83,84", "method_info": {"method_name": "kill_worker", "method_params": "state,worker,cleanup,suppress_warning", "method_startline": "65", "method_endline": "148", "method_complexity": {"method_NLOC": "54", "method_CCN": "11", "method_NToken": "423", "method_nesting_level": "0"}}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "src\\local_scheduler\\local_scheduler_algorithm.cc", "file_new_name": "src\\local_scheduler\\local_scheduler_algorithm.cc", "file_complexity": {"file_NLOC": "934", "file_CCN": "159", "file_NToken": "6216"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "1267,1268", "method_info": {"method_name": "handle_actor_worker_disconnect", "method_params": "state,algorithm_state,actor_id", "method_startline": "1265", "method_endline": "1272", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "449,450,451,452,453,454", "deleted_lines": "495,496,497,498", "method_info": {"method_name": "insert_actor_task_queue", "method_params": "state,algorithm_state,task_entry", "method_startline": "441", "method_endline": "506", "method_complexity": {"method_NLOC": "43", "method_CCN": "9", "method_NToken": "283", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "545,546,547,548,549", "deleted_lines": null, "method_info": {"method_name": "queue_actor_task", "method_params": "state,algorithm_state,spec,task_spec_size,from_global_scheduler", "method_startline": "521", "method_endline": "550", "method_complexity": {"method_NLOC": "19", "method_CCN": "3", "method_NToken": "129", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428", "deleted_lines": null, "method_info": {"method_name": "finish_killed_task", "method_params": "state,spec,task_spec_size", "method_startline": "406", "method_endline": "428", "method_complexity": {"method_NLOC": "20", "method_CCN": "4", "method_NToken": "157", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325", "deleted_lines": null, "method_info": {"method_name": "handle_actor_worker_disconnect", "method_params": "state,algorithm_state,worker,cleanup", "method_startline": "1300", "method_endline": "1329", "method_complexity": {"method_NLOC": "23", "method_CCN": "5", "method_NToken": "167", "method_nesting_level": "0"}}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\local_scheduler\\local_scheduler_algorithm.h", "file_new_name": "src\\local_scheduler\\local_scheduler_algorithm.h", "file_complexity": {"file_NLOC": "74", "file_CCN": "0", "file_NToken": "384"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "200,201,206,207", "deleted_lines": "200,205"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\local_scheduler\\local_scheduler_shared.h", "file_new_name": "src\\local_scheduler\\local_scheduler_shared.h", "file_complexity": {"file_NLOC": "51", "file_CCN": "0", "file_NToken": "217"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "51,52,53", "deleted_lines": null}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "test\\failure_test.py", "file_new_name": "test\\failure_test.py", "file_complexity": {"file_NLOC": "278", "file_CCN": "48", "file_NToken": "2138"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDyingNothingInProgress", "method_params": "self", "method_startline": "324", "method_endline": "339", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "99", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDyingFutureTasks", "method_params": "self", "method_startline": "300", "method_endline": "322", "method_complexity": {"method_NLOC": "16", "method_CCN": "4", "method_NToken": "142", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "329,330", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDyingNothingInProgress.getpid", "method_params": "self", "method_startline": "329", "method_endline": "330", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "3"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDying", "method_params": "self", "method_startline": "280", "method_endline": "298", "method_complexity": {"method_NLOC": "13", "method_CCN": "1", "method_NToken": "117", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "308,309", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDyingFutureTasks.sleep", "method_params": "self", "method_startline": "308", "method_endline": "309", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "3"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "289,290", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDying.consume", "method_params": "x", "method_startline": "289", "method_endline": "290", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "6", "method_nesting_level": "2"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "285,286", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDying.kill", "method_params": "self", "method_startline": "285", "method_endline": "286", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "9", "method_nesting_level": "3"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "305,306", "deleted_lines": null, "method_info": {"method_name": "testActorWorkerDyingFutureTasks.getpid", "method_params": "self", "method_startline": "305", "method_endline": "306", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "3"}}}}}}}}