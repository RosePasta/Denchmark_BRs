{"BR": {"BR_id": "8687", "BR_author": "pdames", "BRopenT": "2020-05-31T05:23:20Z", "BRcloseT": "2020-06-09T02:25:26Z", "BR_text": {"BRsummary": "[ray] Consistent Crashes w/ Actor-Handle-Based Implementation of Parquet File Compactor", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n I\u2019ve been running a task-based compactor against production Parquet datasets successfully and stably for the last few days, but just had my first crash with an actor-handle-based compactor running against a relatively small ~7GB parquet input dataset (divided into 20MB chunks).\n The original pure-task-based compactor launches one distributed task per input delta in a table\u2019s stream, takes a hash of the primary key modulo a desired number of buckets to group \u201clike\u201d primary keys together, saves each parallel task\u2019s bucket groupings into distinct S3 files, and then \"compacts\" (i.e. sorts by sort key columns and dedupes by primary keys) these like-groupings by creating one parallel compaction task per hash bucket index.\n The actor-based compactor I was just testing tries to reduce the number of small hash bucket grouping files by passing a list of hash bucket actor handles into the task - in this case 75 for 75 hash buckets. Basically this:\n @ray.remote\n class HashBucket:\n     def __init__(self, ):\n         self.dataframes = list()\n     def append(self, dataframe):\n         self.dataframes.append(dataframe)\n     def write(self, file_path):\n         output = next(iter(self.dataframes)) if len(self.dataframes) == 1 \\\n             else pd.concat(self.dataframes, axis=0, copy=False)\n         output.to_parquet(file_path)\n So, whereas each parallel task would previously just write multiple small dataframe parquet file to S3 for the same bucket, they now call hashBucket.append.remote(dataframe).\n This step went just fine.\n Once all appends have completed, I iterate through the completed hash buckets to produce 1 output file in S3 per bucket, like so:\n  write_tasks_pending = []\n     for hash_bucket_index in all_hash_bucket_indices:\n         file_path = #[...]\n         write_task_promise = hb_actors[hash_bucket_index].write.remote(file_path)\n         write_tasks_pending.append(write_task_promise)\n     while len(write_tasks_pending):\n         write_task_complete, write_tasks_pending = ray.wait(write_tasks_pending)\n The failure occurred here - it wrote several outputs successfully, then crashed with the following stack trace (while calling hb_actors[hash_bucket_index].write.remote(file_path)):\n <denchmark-link:https://github.com/ray-project/ray/files/4707110/simple_compactor_actor_stack_trace.txt>simple_compactor_actor_stack_trace.txt</denchmark-link>\n \n Subsequent ray exec attempts then fail to connect to the cluster:\n <denchmark-code>2020-05-27 23:24:06,509\tINFO updater.py:201 -- NodeUpdater: i-09bf37eaf088eef3d: Waiting for IP...\n 2020-05-27 23:24:06,510\tINFO log_timer.py:17 -- NodeUpdater: i-09bf37eaf088eef3d: Got IP [LogTimer=571ms]\n 2020-05-27 23:24:06,510\tINFO updater.py:257 -- NodeUpdater: i-09bf37eaf088eef3d: Running python ./simple_compactor_actors.py \u201ccompactor\u201d \u201ccompactor\u201d \u201ctestTableStreamId\u201d \u2018[\u201ccustomer_id\u201d,\u201csession_id\u201d]\u2019 \u2018[\u201cdw_insert_date\u201d]\u2019 1_000_000 75 on 54.84.223.16...\n E0528 06:24:29.959751 24475 24475 raylet_client.cc:69] Retrying to connect to socket for pathname /tmp/ray/session_2020-05-27_14-47-54_876303_4354/sockets/raylet (num_attempts = 1, num_retries = 5)\n E0528 06:24:30.459939 24475 24475 raylet_client.cc:69] Retrying to connect to socket for pathname /tmp/ray/session_2020-05-27_14-47-54_876303_4354/sockets/raylet (num_attempts = 2, num_retries = 5)\n E0528 06:24:30.960027 24475 24475 raylet_client.cc:69] Retrying to connect to socket for pathname /tmp/ray/session_2020-05-27_14-47-54_876303_4354/sockets/raylet (num_attempts = 3, num_retries = 5)\n E0528 06:24:31.460111 24475 24475 raylet_client.cc:69] Retrying to connect to socket for pathname /tmp/ray/session_2020-05-27_14-47-54_876303_4354/sockets/raylet (num_attempts = 4, num_retries = 5)\n F0528 06:24:31.960207 24475 24475 raylet_client.cc:78] Could not connect to socket /tmp/ray/session_2020-05-27_14-47-54_876303_4354/sockets/raylet\n *** Check failure stack trace: ***\n   @   0x7f2cd19a6afd google::LogMessage::Fail()\n   @   0x7f2cd19a7f6c google::LogMessage::SendToLog()\n   @   0x7f2cd19a67d9 google::LogMessage::Flush()\n   @   0x7f2cd19a69f1 google::LogMessage::~LogMessage()\n   @   0x7f2cd1726439 ray::RayLog::~RayLog()\n   @   0x7f2cd15010cd ray::raylet::RayletConnection::RayletConnection()\n   @   0x7f2cd1501a5c ray::raylet::RayletClient::RayletClient()\n   @   0x7f2cd149dc37 ray::CoreWorker::CoreWorker()\n   @   0x7f2cd14a1ac4 ray::CoreWorkerProcess::CreateWorker()\n   @   0x7f2cd14a204f ray::CoreWorkerProcess::CoreWorkerProcess()\n   @   0x7f2cd14a269b ray::CoreWorkerProcess::Initialize()\n   @   0x7f2cd140d064 __pyx_pw_3ray_7_raylet_10CoreWorker_1__cinit__()\n   @   0x7f2cd140e145 __pyx_tp_new_3ray_7_raylet_CoreWorker()\n   @   0x55eb57a1a725 type_call\n   @   0x55eb5799338b _PyObject_FastCallDict\n   @   0x55eb57a1a58e call_function\n   @   0x55eb57a3ea1a _PyEval_EvalFrameDefault\n   @   0x55eb57a13b3e _PyEval_EvalCodeWithName\n   @   0x55eb57a146b1 fast_function\n   @   0x55eb57a1a515 call_function\n   @   0x55eb57a3f734 _PyEval_EvalFrameDefault\n   @   0x55eb57a13814 _PyEval_EvalCodeWithName\n   @   0x55eb57a146b1 fast_function\n   @   0x55eb57a1a515 call_function\n   @   0x55eb57a3f734 _PyEval_EvalFrameDefault\n   @   0x55eb57a151c9 PyEval_EvalCodeEx\n   @   0x55eb57a15f5c PyEval_EvalCode\n   @   0x55eb57a985e4 run_mod\n   @   0x55eb57a989e1 PyRun_FileExFlags\n   @   0x55eb57a98be4 PyRun_SimpleFileExFlags\n   @   0x55eb57a9c6c4 Py_Main\n   @   0x55eb5796452e main\n Shared connection to 54.84.223.16 closed.\n Error: Command failed:\n </denchmark-code>\n \n \n Python 3.6\n <denchmark-link:https://github.com/ray-project/ray/commit/99cc2e28b3f1f11b51c857c0fdffc7c9f64444cf>99cc2e2</denchmark-link>\n \n 4 r5n-8xlarge instances in us-east-1 w/ ami-0dbb717f493016a1a (Deep Learning AMI, Ubuntu 18.04, Version 27.0)\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Reproduction relies on the files available at <denchmark-link:https://github.com/ray-project/ray/pull/8707>#8707</denchmark-link>\n .\n \n Create an S3 bucket like \"compactor-8687\"\n Create an \"input\" S3 folder within this bucket, and place 7GB+ of Parquet file input files (w/ 20MB per file to reproduce the original scenario). Ensure that each input file follows the naming convention: {tableStreamId}-{eventTimeInt}.[parq|parquet]. For example, testTableStreamId-0.parq\" is a valid input file name for table steam ID \"testTableStreamId\" and event time \"0\".\n Stand up a new Ray cluster from https://github.com/ray-project/ray/blob/2d167062ccd64fc8c65a2a1be75cbe6a675fb978/doc/examples/compactor/compactor.yaml, sync https://github.com/ray-project/ray/blob/2d167062ccd64fc8c65a2a1be75cbe6a675fb978/doc/examples/compactor/compactor_actors_example.py, and run it with a command of the following form:\n \n <denchmark-code>ray exec ./compactor.yaml 'python ./compactor_actors_example.py \"compactor-8687\" \"compactor-8687\" \"testTableStreamId\" --primary-keys \"primary_key_column_1\" \"primary_key_column_2\" --sort-keys \"sort_key_column_1\" --records-per-output-file 1_000_000 --hash-bucket-count 75'\n </denchmark-code>\n \n \n Verify that the above failure occurs while attempting to write Parquet output files with the HashBucket actor.\n \n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "pdames", "commentT": "2020-05-31T06:45:04Z", "comment_text": "\n \t\tIs it possible to create a simplified reproduction script you can share?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "pdames", "commentT": "2020-06-01T18:02:35Z", "comment_text": "\n \t\tFull reproduction script available at:\n <denchmark-link:https://github.com/ray-project/ray/blob/2d167062ccd64fc8c65a2a1be75cbe6a675fb978/doc/examples/compactor/compactor_actors_example.py>https://github.com/ray-project/ray/blob/2d167062ccd64fc8c65a2a1be75cbe6a675fb978/doc/examples/compactor/compactor_actors_example.py</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "pdames", "commentT": "2020-06-01T18:20:27Z", "comment_text": "\n \t\tCan you mock out the data/etc dependencies so the file can be run without any additional setup?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "pdames", "commentT": "2020-06-06T02:56:29Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/pdames>@pdames</denchmark-link>\n  we merged a possible fix. Is it possible for you to try again with the latest master?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "pdames", "commentT": "2020-06-09T02:25:26Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/rkooo567>@rkooo567</denchmark-link>\n  Fix verified on the latest build from master - 10/10 job runs succeeded using the same source dataset and cluster config that consistently crashed before. Thanks!\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "pdames", "commentT": "2020-06-09T06:47:08Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/pdames>@pdames</denchmark-link>\n  Happy to hear that!!\n \t\t"}}}, "commit": {"commit_id": "b160b83d3ec399a086f3c44271eb85812924914a", "commit_author": "Stephanie Wang", "commitT": "2020-06-05 19:49:19-07:00", "commit_complexity": {"commit_NLOC": "0.35", "commit_CCN": "0.6", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "BUILD.bazel", "file_new_name": "BUILD.bazel", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1163,1164", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tests\\BUILD", "file_new_name": "python\\ray\\tests\\BUILD", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "462,463", "deleted_lines": "462"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "src\\ray\\gcs\\pubsub\\gcs_pub_sub.cc", "file_new_name": "src\\ray\\gcs\\pubsub\\gcs_pub_sub.cc", "file_complexity": {"file_NLOC": "124", "file_CCN": "22", "file_NToken": "1012"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "47,48,49,50,51,52,53,54,55,56,57", "deleted_lines": "47,48,49,50,51,52,53,54,55,56", "method_info": {"method_name": "ray::gcs::GcsPubSub::Unsubscribe", "method_params": "channel_name,id", "method_startline": "47", "method_endline": "58", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "87", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95", "deleted_lines": "59,60,62,63,64,67,68,69,71,72,79,82,83,84,85,86,87,88,89,90,91,92", "method_info": {"method_name": "ray::gcs::GcsPubSub::SubscribeInternal", "method_params": "channel,subscribe,done,id", "method_startline": "59", "method_endline": "95", "method_complexity": {"method_NLOC": "34", "method_CCN": "7", "method_NToken": "250", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "47,48,49,50,51,52,53,54,55,56,57", "deleted_lines": "47,48,49,50,51,52,53,54,55,56", "method_info": {"method_name": "ray::gcs::GcsPubSub::Unsubscribe", "method_params": "channel,id", "method_startline": "47", "method_endline": "57", "method_complexity": {"method_NLOC": "11", "method_CCN": "1", "method_NToken": "92", "method_nesting_level": "2"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,139,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160", "deleted_lines": "82,83,84,85,86,87,88,89,90,91,92", "method_info": {"method_name": "ray::gcs::GcsPubSub::ExecuteCommandIfPossible", "method_params": "channel_key,channel", "method_startline": "80", "method_endline": "163", "method_complexity": {"method_NLOC": "66", "method_CCN": "13", "method_NToken": "516", "method_nesting_level": "2"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78", "deleted_lines": "60,62,63,64,67,68,69,71,72", "method_info": {"method_name": "ray::gcs::GcsPubSub::SubscribeInternal", "method_params": "channel_name,subscribe,done,id", "method_startline": "60", "method_endline": "78", "method_complexity": {"method_NLOC": "12", "method_CCN": "2", "method_NToken": "121", "method_nesting_level": "2"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\ray\\gcs\\pubsub\\gcs_pub_sub.h", "file_new_name": "src\\ray\\gcs\\pubsub\\gcs_pub_sub.h", "file_complexity": {"file_NLOC": "52", "file_CCN": "4", "file_NToken": "374"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "114", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::GcsPubSub::Channel::Channel", "method_params": "", "method_startline": "114", "method_endline": "114", "method_complexity": {"method_NLOC": "1", "method_CCN": "1", "method_NToken": "5", "method_nesting_level": "4"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "102", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::GcsPubSub::Command::Command", "method_params": "", "method_startline": "102", "method_endline": "102", "method_complexity": {"method_NLOC": "1", "method_CCN": "1", "method_NToken": "10", "method_nesting_level": "4"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "97,98,99,100", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::GcsPubSub::Command::Command", "method_params": "subscribe_callback,done_callback", "method_startline": "97", "method_endline": "100", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "4"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\ray\\gcs\\pubsub\\test\\gcs_pub_sub_test.cc", "file_new_name": "src\\ray\\gcs\\pubsub\\test\\gcs_pub_sub_test.cc", "file_complexity": {"file_NLOC": "199", "file_CCN": "23", "file_NToken": "1836"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPubSubTest,TestManyPubsub", "method_startline": "134", "method_endline": "157", "method_complexity": {"method_NLOC": "20", "method_CCN": "3", "method_NToken": "203", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "95,96", "deleted_lines": null, "method_info": {"method_name": "ray::GcsPubSubTest::WaitPendingDone", "method_params": "data,expected_count", "method_startline": "93", "method_endline": "100", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "87", "method_nesting_level": "2"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 12, "file_old_name": "src\\ray\\gcs\\redis_context.cc", "file_new_name": "src\\ray\\gcs\\redis_context.cc", "file_complexity": {"file_NLOC": "351", "file_CCN": "62", "file_NToken": "2665"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "40,41,53", "deleted_lines": "40,52", "method_info": {"method_name": "ProcessCallback", "method_params": "callback_index,callback_reply", "method_startline": "36", "method_endline": "55", "method_complexity": {"method_NLOC": "15", "method_CCN": "3", "method_NToken": "121", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "219,220,221,222", "deleted_lines": "217,218,220,221", "method_info": {"method_name": "ray::gcs::RedisCallbackManager::get", "method_params": "callback_index", "method_startline": "217", "method_endline": "222", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "44", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "379", "deleted_lines": "382", "method_info": {"method_name": "ray::gcs::RedisContext::RunArgvAsync", "method_params": "args,redis_callback", "method_startline": "368", "method_endline": "385", "method_complexity": {"method_NLOC": "16", "method_CCN": "2", "method_NToken": "160", "method_nesting_level": "2"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "207,208,209,210,211,212,213,214,215", "deleted_lines": "206,207,212,214", "method_info": {"method_name": "ray::gcs::RedisCallbackManager::add", "method_params": "function,is_subscription,io_service", "method_startline": "206", "method_endline": "215", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "73", "method_nesting_level": "2"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "396", "deleted_lines": "406,409,410,411", "method_info": {"method_name": "ray::gcs::RedisContext::SubscribeAsync", "method_params": "client_id,pubsub_channel,redisCallback,out_callback_index", "method_startline": "387", "method_endline": "416", "method_complexity": {"method_NLOC": "26", "method_CCN": "2", "method_NToken": "190", "method_nesting_level": "2"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "225,227", "deleted_lines": "224", "method_info": {"method_name": "ray::gcs::RedisCallbackManager::remove", "method_params": "callback_index", "method_startline": "224", "method_endline": "227", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "2"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "238", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::RedisCallbackManager::RemoveCallback", "method_params": "callback_index", "method_startline": "238", "method_endline": "241", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "2"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "420,423,424", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::RedisContext::PSubscribeAsync", "method_params": "pattern,redisCallback,callback_index", "method_startline": "418", "method_endline": "430", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "96", "method_nesting_level": "2"}}}, "hunk_8": {"Ismethod": 1, "added_lines": null, "deleted_lines": "406,409,410,411", "method_info": {"method_name": "ray::gcs::RedisContext::PSubscribeAsync", "method_params": "pattern,redisCallback,out_callback_index", "method_startline": "404", "method_endline": "417", "method_complexity": {"method_NLOC": "13", "method_CCN": "1", "method_NToken": "100", "method_nesting_level": "2"}}}, "hunk_9": {"Ismethod": 1, "added_lines": "230,231,233,234,235", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::RedisCallbackManager::GetCallback", "method_params": "callback_index", "method_startline": "230", "method_endline": "236", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "52", "method_nesting_level": "2"}}}, "hunk_10": {"Ismethod": 1, "added_lines": "212,213,214,215,219,220,221,222,223,225,227", "deleted_lines": "212,214,217,218,220,221,224", "method_info": {"method_name": "ray::gcs::RedisCallbackManager::AddCallback", "method_params": "function,is_subscription,io_service,callback_index", "method_startline": "212", "method_endline": "228", "method_complexity": {"method_NLOC": "15", "method_CCN": "2", "method_NToken": "91", "method_nesting_level": "2"}}}, "hunk_11": {"Ismethod": 1, "added_lines": "207,208,209,210", "deleted_lines": "207", "method_info": {"method_name": "ray::gcs::RedisCallbackManager::AllocateCallbackIndex", "method_params": "", "method_startline": "207", "method_endline": "210", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "24", "method_nesting_level": "2"}}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\ray\\gcs\\redis_context.h", "file_new_name": "src\\ray\\gcs\\redis_context.h", "file_complexity": {"file_NLOC": "198", "file_CCN": "20", "file_NToken": "1434"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "306", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::RedisContext::RunAsync", "method_params": "command,id,data,length,prefix,pubsub_channel,redisCallback,log_length", "method_startline": "300", "method_endline": "331", "method_complexity": {"method_NLOC": "32", "method_CCN": "3", "method_NToken": "286", "method_nesting_level": "2"}}}}}}}}