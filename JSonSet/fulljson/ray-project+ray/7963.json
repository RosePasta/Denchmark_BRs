{"BR": {"BR_id": "7963", "BR_author": "VishDev12", "BRopenT": "2020-04-10T14:52:01Z", "BRcloseT": "2020-04-11T23:28:04Z", "BR_text": {"BRsummary": "[tune] [ray] _stop in Trainable not running to completion", "BRdescription": "\n Ray version and other system information (Python version, TensorFlow version, OS):\n ray 0.8.4\n python 3.6.9\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n We're using _stop in our Trainable class to upload the weights files and call other end-of-training functions.\n When uploading a file using boto3's S3Transfer or using subprocess.Popen(\"aws s3 cp source target\", shell=True), the code exits too soon and doesn't complete.\n Here's the rough flow:\n _stop() -> our_function() -> upload_function() -> exit\n So, as soon as the upload_function makes a call to a different subprocess, the code seems to exit and the remaining lines of code in _stop are left unexecuted.\n Observations:\n \n The code seems to exit exactly at the point where a different subprocess is called:\n a. future.result() in boto3.s3.transfer.S3Transfer.upload_file.\n b. After calling subprocess.Popen().\n If local_mode=True is passed into ray.init, there are no problems and the code in _stop executes fully.\n When a single trial is called, this error pops up every single time without fail.\n For larger experiments with n trials, (n-1) trials have no issue, but for the final trial, the code exits before _stop completes.\n \n Tested Fixes:\n \n [crude] Calling time.sleep just after tune.run so that the _stop function has time to finish its execution.\n In _stop_trial of RayTrialExecutor, get an object ID from the trial.runner.stop.remote() line and call ray.get(object_id). This works perfectly.\n \n <denchmark-code>object_id = trial.runner.stop.remote()\n ray.get(object_id)\n trial.runner.__ray_terminate__.remote()\n </denchmark-code>\n \n Question:\n While fix 2 above seems to work fine, there's no visibility for any outputs from _stop since it seems to run in the background and produces no logs. What could be a better way to resolve this?\n Note:\n Wasn't able to provide code to reproduce this issue without the use of external libraries like boto3 or the AWS CLI.\n cc: <denchmark-link:https://github.com/richardliaw>@richardliaw</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "VishDev12", "commentT": "2020-04-10T17:32:36Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/VishDev12>@VishDev12</denchmark-link>\n  this is super helpful; I'm pretty sure I know what the problem is.\n I'll push a fix soon; for now, one thing you can do is just check that all of the resources have been released:\n tune.run()...\n def all_resources_released():\n     available = ray.available_resources()\n     for resource, value in ray.cluster_resources():\n         if not available[resource] == value:\n             return False\n     return True\n \n while not all_resources_released():\n     time.sleep(1)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "VishDev12", "commentT": "2020-04-10T21:16:07Z", "comment_text": "\n \t\tOpened a PR to fix this (<denchmark-link:https://github.com/ray-project/ray/pull/7967>#7967</denchmark-link>\n ).\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "VishDev12", "commentT": "2020-04-11T04:31:33Z", "comment_text": "\n \t\tThanks <denchmark-link:https://github.com/richardliaw>@richardliaw</denchmark-link>\n , I will implement the resource checking solution for now. I'll wait for the fix in the upcoming releases.\n \t\t"}}}, "commit": {"commit_id": "87e3c39b482dbf89afece274b13cacc8e5bd7f4a", "commit_author": "Richard Liaw", "commitT": "2020-04-11 16:28:03-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.8863636363636364"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "python\\ray\\tune\\ray_trial_executor.py", "file_new_name": "python\\ray\\tune\\ray_trial_executor.py", "file_complexity": {"file_NLOC": "495", "file_CCN": "113", "file_NToken": "3267"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "704,705", "deleted_lines": null, "method_info": {"method_name": "cleanup", "method_params": "self", "method_startline": "704", "method_endline": "705", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "15", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "151", "deleted_lines": null, "method_info": {"method_name": "_setup_remote_runner", "method_params": "self,trial,reuse_allowed", "method_startline": "128", "method_endline": "185", "method_complexity": {"method_NLOC": "42", "method_CCN": "7", "method_NToken": "277", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "50,51,52", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,threshold", "method_startline": "50", "method_endline": "52", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "20", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88", "deleted_lines": null, "method_info": {"method_name": "cleanup", "method_params": "self,partial", "method_startline": "71", "method_endline": "88", "method_complexity": {"method_NLOC": "13", "method_CCN": "4", "method_NToken": "85", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69", "deleted_lines": null, "method_info": {"method_name": "add", "method_params": "self,trial,actor", "method_startline": "54", "method_endline": "69", "method_complexity": {"method_NLOC": "6", "method_CCN": "2", "method_NToken": "54", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "python\\ray\\tune\\tests\\test_api.py", "file_new_name": "python\\ray\\tune\\tests\\test_api.py", "file_complexity": {"file_NLOC": "704", "file_CCN": "158", "file_NToken": "4965"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "624,625,626,627", "deleted_lines": null, "method_info": {"method_name": "testLotsOfStops._stop", "method_params": "self", "method_startline": "624", "method_endline": "627", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "34", "method_nesting_level": "3"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634", "deleted_lines": null, "method_info": {"method_name": "testLotsOfStops", "method_params": "self", "method_startline": "618", "method_endline": "634", "method_complexity": {"method_NLOC": "10", "method_CCN": "2", "method_NToken": "70", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "620,621,622", "deleted_lines": null, "method_info": {"method_name": "testLotsOfStops._train", "method_params": "self", "method_startline": "620", "method_endline": "622", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "3"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\trial_executor.py", "file_new_name": "python\\ray\\tune\\trial_executor.py", "file_complexity": {"file_NLOC": "113", "file_CCN": "36", "file_NToken": "678"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "263,264,265", "deleted_lines": null, "method_info": {"method_name": "cleanup", "method_params": "self,trial", "method_startline": "263", "method_endline": "265", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "9", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\trial_runner.py", "file_new_name": "python\\ray\\tune\\trial_runner.py", "file_complexity": {"file_NLOC": "542", "file_CCN": "128", "file_NToken": "3300"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "743,744", "deleted_lines": null, "method_info": {"method_name": "cleanup_trials", "method_params": "self", "method_startline": "743", "method_endline": "744", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "12", "method_nesting_level": "1"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\tune.py", "file_new_name": "python\\ray\\tune\\tune.py", "file_complexity": {"file_NLOC": "227", "file_CCN": "9", "file_NToken": "1139"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "334", "deleted_lines": null}}}}}}