{"BR": {"BR_id": "6659", "BR_author": "hugwi", "BRopenT": "2020-01-01T12:43:15Z", "BRcloseT": "2020-03-05T23:14:22Z", "BR_text": {"BRsummary": "[tune] Handle nan case for AsynchScheduler", "BRdescription": "\n To deal with the case of recording nan values i would suggest changing from np.percentile to np.nanpercentile in this line.\n \n \n \n ray/python/ray/tune/schedulers/async_hyperband.py\n \n \n         Lines 145 to 148\n       in\n       f745583\n \n \n \n \n \n \n  def cutoff(self, recorded): \n \n \n \n  if not recorded: \n \n \n \n  return None \n \n \n \n  return np.percentile(list(recorded.values()), (1 - 1 / self.rf) * 100) \n \n \n \n \n \n As stated in <denchmark-link:https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanpercentile.html#numpy.nanpercentile>https://docs.scipy.org/doc/numpy/reference/generated/numpy.nanpercentile.html#numpy.nanpercentile</denchmark-link>\n  any time a nan result is recorded this will result in the cutoff being nan.\n \n \n \n array([[10.,  nan,   4.],\n [ 3.,   2.,   1.]])\n np.percentile(a, 50)\n nan\n \n \n \n Ultimately leading to this line evaluating to false, preventing any following trial from stopping.\n \n \n \n ray/python/ray/tune/schedulers/async_hyperband.py\n \n \n         Lines 157 to 158\n       in\n       f745583\n \n \n \n \n \n \n  if cutoff is not None and cur_rew < cutoff: \n \n \n \n  action = TrialScheduler.STOP \n \n \n \n \n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "hugwi", "commentT": "2020-01-02T22:25:34Z", "comment_text": "\n \t\tI think the change is good. cc <denchmark-link:https://github.com/richardliaw>@richardliaw</denchmark-link>\n  to confirm. Thanks for reporting the issue.\n <denchmark-link:https://github.com/hugwi>@hugwi</denchmark-link>\n  would you want to create a pull request for it? perhaps with a unit test.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "hugwi", "commentT": "2020-01-03T05:44:34Z", "comment_text": "\n \t\tThis change sounds good! <denchmark-link:https://github.com/hugwi>@hugwi</denchmark-link>\n  could you push a PR?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "hugwi", "commentT": "2020-01-23T19:01:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/richardliaw>@richardliaw</denchmark-link>\n  <denchmark-link:https://github.com/hugwi>@hugwi</denchmark-link>\n  any follow up on this?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "hugwi", "commentT": "2020-01-23T20:29:17Z", "comment_text": "\n \t\tYeah, sorry haven't had time. Should be able to push a PR at the weekend <denchmark-link:https://github.com/richardliaw>@richardliaw</denchmark-link>\n  <denchmark-link:https://github.com/edoakes>@edoakes</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "552156f22d144c4a99360d0dfb2268190a03c6ea", "commit_author": "hyggan", "commitT": "2020-01-25 17:26:30-08:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\schedulers\\async_hyperband.py", "file_new_name": "python\\ray\\tune\\schedulers\\async_hyperband.py", "file_complexity": {"file_NLOC": "155", "file_CCN": "27", "file_NToken": "860"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "144,145", "deleted_lines": "144", "method_info": {"method_name": "cutoff", "method_params": "self,recorded", "method_startline": "141", "method_endline": "145", "method_complexity": {"method_NLOC": "5", "method_CCN": "2", "method_NToken": "39", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\ray\\tune\\tests\\test_trial_scheduler.py", "file_new_name": "python\\ray\\tune\\tests\\test_trial_scheduler.py", "file_complexity": {"file_NLOC": "1013", "file_CCN": "167", "file_NToken": "9042"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107", "deleted_lines": null, "method_info": {"method_name": "nanSetup", "method_params": "self,scheduler", "method_startline": "1094", "method_endline": "1107", "method_complexity": {"method_NLOC": "14", "method_CCN": "3", "method_NToken": "105", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176", "deleted_lines": null, "method_info": {"method_name": "testAsyncHBNanPercentile", "method_params": "self", "method_startline": "1163", "method_endline": "1176", "method_complexity": {"method_NLOC": "14", "method_CCN": "1", "method_NToken": "129", "method_nesting_level": "1"}}}}}}}}