{"BR": {"BR_id": "5769", "BR_author": "devin-petersohn", "BRopenT": "2019-09-24T18:00:52Z", "BRcloseT": "2019-09-26T19:55:15Z", "BR_text": {"BRsummary": "StringIO objects are not correctly serialized by Ray", "BRdescription": "\n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n StringIO objects are not correctly serialized by Ray, nor is there an error message saying not to expect the output to be correct. It may not be possible to correctly serialize StringIO, but it would be nice to have some message stating that.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n from io import StringIO\n import ray\n ray.init()\n \n f = open(\"some_file.txt\", \"rb\").read()\n s = StringIO(f)\n s.seek(0)\n s.readline()\n s.seek(0)\n s_remote = ray.put(s)\n ray.get(s_remote).readline()\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "devin-petersohn", "commentT": "2019-09-24T18:01:34Z", "comment_text": "\n \t\tRelated to <denchmark-link:https://github.com/modin-project/modin/issues/806>modin-project/modin#806</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "devin-petersohn", "commentT": "2019-09-24T20:01:58Z", "comment_text": "\n \t\tYeah, this is a bug, especially given that both pickle and cloudpickle can handle this case:\n <denchmark-code>In [17]: u = cloudpickle.dumps(s)                                                                                                                                                    \n \n In [18]: s2 = cloudpickle.loads(u)                                                                                                                                                   \n \n In [19]: s2.readline()                                                                                                                                                               \n Out[19]: '{\\n'\n \n In [20]: import pickle                                                                                                                                                               \n \n In [21]: u2 = pickle.dumps(s)                                                                                                                                                        \n \n In [22]: s3 = pickle.loads(u2)                                                                                                                                                      \n \n In [23]: s3.readline()                                                                                                                                                              \n Out[23]: '{\\n'\n </denchmark-code>\n \n Let me look into what's going wrong here :)\n \t\t"}}}, "commit": {"commit_id": "01d636247218d8ae361d2d825c2da1bbc041ef7e", "commit_author": "Philipp Moritz", "commitT": "2019-09-26 12:55:14-07:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.5454545454545454", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tests\\test_basic.py", "file_new_name": "python\\ray\\tests\\test_basic.py", "file_complexity": {"file_NLOC": "2283", "file_CCN": "527", "file_NToken": "18549"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "308,309,310,311,312,313", "deleted_lines": null, "method_info": {"method_name": "test_complex_serialization", "method_params": "ray_start_regular", "method_startline": "106", "method_endline": "313", "method_complexity": {"method_NLOC": "109", "method_CCN": "11", "method_NToken": "792", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\worker.py", "file_new_name": "python\\ray\\worker.py", "file_complexity": {"file_NLOC": "1474", "file_CCN": "214", "file_NToken": "8189"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1282,1283,1284,1285,1286,1287,1288,1289,1290,1291", "deleted_lines": null, "method_info": {"method_name": "_initialize_serialization", "method_params": "job_id,worker", "method_startline": "1213", "method_endline": "1291", "method_complexity": {"method_NLOC": "51", "method_CCN": "4", "method_NToken": "235", "method_nesting_level": "0"}}}}}}}}