{"BR": {"BR_id": "3470", "BR_author": "stephanie-wang", "BRopenT": "2018-12-05T00:06:04Z", "BRcloseT": "2019-02-13T18:32:57Z", "BR_text": {"BRsummary": "Map of evicted objects in the object manager grows forever", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Ray version: 0.6\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n The object table is stored as a log of addition and deletion entries per object. Since the log is implemented with a redis zset, the entries have to be unique, so each node keeps track of how many times a particular object has been evicted so far in ObjectDirectory::object_evictions_. Unfortunately, this means that this data structure will grow forever, since there is no GC. We should change this to remove the data structure and just make entries unique with a random ID, for example.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n You can track the size of the map in the debug state, under ObjectDirectory, then  - num eviction entries.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "stephanie-wang", "commentT": "2018-12-08T08:18:27Z", "comment_text": "\n \t\tThere's also the local_objects_ map in the task dependency manager, which is also around the same size in debug state.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "stephanie-wang", "commentT": "2019-01-26T22:19:42Z", "comment_text": "\n \t\tLooking at <denchmark-link:https://redis.io/topics/modules-intro>https://redis.io/topics/modules-intro</denchmark-link>\n  the \"List type API\" header suggests that lists may now be available within Redis modules.\n You can use\n <denchmark-code>int RedisModule_ListPush(RedisModuleKey *key, int where, RedisModuleString *ele);\n RedisModuleString *RedisModule_ListPop(RedisModuleKey *key, int where);\n </denchmark-code>\n \n So if we can just get rid of  then that should just solve the problem, right? If I remember correctly, we're only using  because  wasn't available before. See also <denchmark-link:https://github.com/ray-project/ray/issues/3336>#3336</denchmark-link>\n . Also we had to work around the same issue in <denchmark-link:https://github.com/ray-project/ray/pull/3316>#3316</denchmark-link>\n , so when we fix this issue we should go back and clean that up as well.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "stephanie-wang", "commentT": "2019-01-27T22:22:33Z", "comment_text": "\n \t\tI think we still need a method to iterate over list entries in Redis, but it doesn't seem too hard to write it.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "stephanie-wang", "commentT": "2019-01-27T22:35:23Z", "comment_text": "\n \t\t\n entries unique with a random ID\n \n Does this mean using random IDs would also work?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "stephanie-wang", "commentT": "2019-01-28T05:09:30Z", "comment_text": "\n \t\t\n \n entries unique with a random ID\n \n Does this mean using random IDs would also work?\n \n Yeah, that's probably the quickest solution for now. We can add a field to the object table entry that we set with a random value.\n \t\t"}}}, "commit": {"commit_id": "4347ab644ef98cd48000ac379c2434f1bc5047f4", "commit_author": "Stephanie Wang", "commitT": "2019-02-13 10:32:57-08:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\ray\\gcs\\format\\gcs.fbs", "file_new_name": "src\\ray\\gcs\\format\\gcs.fbs", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "133,134"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "src\\ray\\gcs\\redis_module\\ray_redis_module.cc", "file_new_name": "src\\ray\\gcs\\redis_module\\ray_redis_module.cc", "file_complexity": {"file_NLOC": "458", "file_CCN": "78", "file_NToken": "3187"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "307,308,309,310,311,329,330,331,332,333,334", "deleted_lines": "303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330", "method_info": {"method_name": "TableAppend_DoWrite", "method_params": "ctx,argv,argc,mutated_key_str", "method_startline": "289", "method_endline": "343", "method_complexity": {"method_NLOC": "42", "method_CCN": "8", "method_NToken": "261", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "410,411,424,425,426,427,428,429,430,431,432,433,435,436,439,440,441,442,443", "deleted_lines": "411,412,413,414,417,418,419,420", "method_info": {"method_name": "TableEntryToFlatbuf", "method_params": "ctx,table_key,prefix_str,entry_id,fbb", "method_startline": "410", "method_endline": "459", "method_complexity": {"method_NLOC": "43", "method_CCN": "6", "method_NToken": "345", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "92,93,94,95,96,97,98,99", "deleted_lines": "92,93,94,95,96,97,98,99", "method_info": {"method_name": "PrefixedKeyString", "method_params": "ctx,prefix_enum,keyname", "method_startline": "92", "method_endline": "99", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "54", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "119,120", "deleted_lines": null, "method_info": {"method_name": "OpenPrefixedKey", "method_params": "out,ctx,prefix_enum,keyname,mode,mutated_key_str", "method_startline": "116", "method_endline": "124", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "67", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "401,402,403,404,405,406,407,408,409,410,411,424,425,426,427,428,429,430,431,432,433,435,436", "deleted_lines": "396,409,411,412,413,414,417,418,419,420", "method_info": {"method_name": "TableEntryToFlatbuf", "method_params": "table_key,entry_id,fbb", "method_startline": "396", "method_endline": "436", "method_complexity": {"method_NLOC": "39", "method_CCN": "6", "method_NToken": "280", "method_nesting_level": "0"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "74,75,76,77,78,79,80,81,82,83,84,85,86,87", "deleted_lines": null, "method_info": {"method_name": "ParseTablePrefix", "method_params": "table_prefix_str,out", "method_startline": "74", "method_endline": "87", "method_complexity": {"method_NLOC": "14", "method_CCN": "4", "method_NToken": "98", "method_nesting_level": "0"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "550", "deleted_lines": "527", "method_info": {"method_name": "TableRequestNotifications_RedisCommand", "method_params": "ctx,argv,argc", "method_startline": "517", "method_endline": "555", "method_complexity": {"method_NLOC": "28", "method_CCN": "2", "method_NToken": "211", "method_nesting_level": "0"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "493", "deleted_lines": null, "method_info": {"method_name": "TableLookup_RedisCommand", "method_params": "ctx,argv,argc", "method_startline": "474", "method_endline": "498", "method_complexity": {"method_NLOC": "20", "method_CCN": "3", "method_NToken": "138", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\ray\\object_manager\\object_directory.cc", "file_new_name": "src\\ray\\object_manager\\object_directory.cc", "file_complexity": {"file_NLOC": "231", "file_CCN": "38", "file_NToken": "1762"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "147,150,151,152,153,154", "method_info": {"method_name": "ray::ObjectDirectory::ReportObjectRemoved", "method_params": "object_id,client_id", "method_startline": "140", "method_endline": "156", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "99", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "308", "method_info": {"method_name": "ray::ObjectDirectory::DebugString", "method_params": "", "method_startline": "304", "method_endline": "310", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "49", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": null, "deleted_lines": "126", "method_info": {"method_name": "ray::ObjectDirectory::ReportObjectAdded", "method_params": "object_id,client_id,object_info,inline_object_flag,inline_object_data,inline_object_metadata", "method_startline": "115", "method_endline": "138", "method_complexity": {"method_NLOC": "22", "method_CCN": "2", "method_NToken": "186", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\ray\\object_manager\\object_directory.h", "file_new_name": "src\\ray\\object_manager\\object_directory.h", "file_complexity": {"file_NLOC": "85", "file_CCN": "4", "file_NToken": "614"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "208,209,210"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\failure_test.py", "file_new_name": "test\\failure_test.py", "file_complexity": {"file_NLOC": "458", "file_CCN": "87", "file_NToken": "3091"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "651,652,653,655,657,658,659,660,661", "deleted_lines": "651,653,655,656,657", "method_info": {"method_name": "test_redis_module_failure", "method_params": "shutdown_only", "method_startline": "622", "method_endline": "661", "method_complexity": {"method_NLOC": "26", "method_CCN": "1", "method_NToken": "206", "method_nesting_level": "0"}}}}}}}}