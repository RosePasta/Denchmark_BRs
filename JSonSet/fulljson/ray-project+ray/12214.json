{"BR": {"BR_id": "12214", "BR_author": "simon-mo", "BRopenT": "2020-11-20T18:40:27Z", "BRcloseT": "2020-12-14T23:09:44Z", "BR_text": {"BRsummary": "[Serve] client.shutdown() is not complete", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Ray version and other system information (Python version, TensorFlow version, OS):\n <denchmark-link:https://github.com/crypdick>@crypdick</denchmark-link>\n  found this issue.\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):\n If we cannot run your script, we cannot fix your issue.\n from ray import serve\n \n client = serve.start(detached=True)\n client.shutdown()\n client = serve.start(detached=True)\n <denchmark-code>File descriptor limit 256 is too low for production servers and may result in connection errors. At least 8192 is recommended. --- Fix with 'ulimit -n 8192'\n 2020-11-20 10:38:27,065\tINFO services.py:1173 -- View the Ray dashboard at http://127.0.0.1:8265\n (pid=raylet) 2020-11-20 10:38:29,628\tINFO controller.py:313 -- Starting router with name 'SERVE_CONTROLLER_ACTOR:SERVE_PROXY_ACTOR-node:192.168.31.141-0' on node 'node:192.168.31.141-0' listening on '127.0.0.1:8000'\n (pid=32847) INFO:     Started server process [32847]\n Traceback (most recent call last):\n   File \"detached.py\", line 5, in <module>\n     client = serve.start(detached=True)\n   File \"/Users/simonmo/Desktop/ray/ray/python/ray/serve/api.py\", line 414, in start\n     raise RayServeException(\"Called serve.start(detached=True) but a \"\n ray.serve.exceptions.RayServeException: Called serve.start(detached=True) but a detached instance is already running. Please use serve.connect() to connect to the running instance instead.\n </denchmark-code>\n \n I think this is because we didn't delete the entry in named actor registry.\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "simon-mo", "commentT": "2020-11-20T18:46:27Z", "comment_text": "\n \t\tThis is actually a race condition in ray core:\n import ray\n import time\n ray.init()\n \n @ray.remote\n class A:\n     pass\n a = A.options(lifetime=\"detached\", name=\"a\").remote()\n ray.kill(a)\n ray.get_actor(\"a\") # You can still get the actor!\n time.sleep(2)\n ray.get_actor(\"a\") # Now you can't.\n \t\t"}}}, "commit": {"commit_id": "b56db5a22ff332d09ec6bdf2881cdd9a836e7057", "commit_author": "Simon Mo", "commitT": "2020-12-14 15:09:43-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\serve\\api.py", "file_new_name": "python\\ray\\serve\\api.py", "file_complexity": {"file_NLOC": "488", "file_CCN": "35", "file_NToken": "1874"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103", "deleted_lines": "84", "method_info": {"method_name": "shutdown", "method_params": "self", "method_startline": "79", "method_endline": "104", "method_complexity": {"method_NLOC": "23", "method_CCN": "6", "method_NToken": "98", "method_nesting_level": "1"}}}}}}}}