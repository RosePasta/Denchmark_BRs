{"BR": {"BR_id": "832", "BR_author": "robertnishihara", "BRopenT": "2017-08-12T19:30:18Z", "BRcloseT": "2017-08-14T06:14:27Z", "BR_text": {"BRsummary": "Cannot run Ray in two separate interpreters with Python 2.", "BRdescription": "\n To reproduce this problem, run the following in two separate interpreters.\n import ray\n ray.init()\n In the second one, I see the following error.\n <denchmark-code>---------------------------------------------------------------------------\n error                                     Traceback (most recent call last)\n <ipython-input-2-daa1e6a285d0> in <module>()\n ----> 1 ray.init()\n \n /home/ubuntu/ray/python/ray/worker.pyc in init(redis_address, node_ip_address, object_id_seed, num_workers, driver_mode, redirect_output, num_cpus, num_gpus, num_custom_resource, num_redis_shards)\n    1325                  redirect_output=redirect_output, num_cpus=num_cpus,\n    1326                  num_gpus=num_gpus, num_custom_resource=num_custom_resource,\n -> 1327                  num_redis_shards=num_redis_shards)\n    1328 \n    1329 \n \n /home/ubuntu/ray/python/ray/worker.pyc in _init(address_info, start_ray_local, object_id_seed, num_workers, num_local_schedulers, object_store_memory, driver_mode, redirect_output, start_workers_from_local_scheduler, num_cpus, num_gpus, num_custom_resource, num_redis_shards)\n    1225             num_gpus=num_gpus,\n    1226             num_custom_resource=num_custom_resource,\n -> 1227             num_redis_shards=num_redis_shards)\n    1228     else:\n    1229         if redis_address is None:\n \n /home/ubuntu/ray/python/ray/services.pyc in start_ray_head(address_info, node_ip_address, redis_port, num_workers, num_local_schedulers, object_store_memory, worker_path, cleanup, redirect_output, start_workers_from_local_scheduler, num_cpus, num_gpus, num_custom_resource, num_redis_shards)\n    1121         num_gpus=num_gpus,\n    1122         num_custom_resource=num_custom_resource,\n -> 1123         num_redis_shards=num_redis_shards)\n    1124 \n    1125 \n \n /home/ubuntu/ray/python/ray/services.pyc in start_ray_processes(address_info, node_ip_address, redis_port, num_workers, num_local_schedulers, object_store_memory, num_redis_shards, worker_path, cleanup, redirect_output, include_global_scheduler, include_log_monitor, include_webui, start_workers_from_local_scheduler, num_cpus, num_gpus, num_custom_resource)\n     991             \"webui\", redirect_output=True)\n     992         start_ui(redis_address, stdout_file=ui_stdout_file,\n --> 993                  stderr_file=ui_stderr_file, cleanup=cleanup)\n     994 \n     995     # Return the addresses of the relevant processes.\n \n /home/ubuntu/ray/python/ray/services.pyc in start_ui(redis_address, stdout_file, stderr_file, cleanup)\n     476         try:\n     477             port_test_socket = socket.socket()\n --> 478             port_test_socket.bind((\"127.0.0.1\", port))\n     479             port_test_socket.close()\n     480             break\n \n /home/ubuntu/anaconda2/lib/python2.7/socket.pyc in meth(name, self, *args)\n     226 \n     227 def meth(name,self,*args):\n --> 228     return getattr(self._sock,name)(*args)\n     229 \n     230 for _m in _socketmethods:\n \n error: [Errno 98] Address already in use\n </denchmark-code>\n \n It looks like the problem is that the exceptions raised by bind in Python 2 and Python 3 are different.\n cc <denchmark-link:https://github.com/alanamarzoev>@alanamarzoev</denchmark-link>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "a75ccc8032ef9c34e2d108ac22d9e030c289e804", "commit_author": "Robert Nishihara", "commitT": "2017-08-13 23:14:26-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\services.py", "file_new_name": "python\\ray\\services.py", "file_complexity": {"file_NLOC": "628", "file_CCN": "53", "file_NToken": "3619"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "481", "deleted_lines": "481", "method_info": {"method_name": "start_ui", "method_params": "redis_address,stdout_file,stderr_file,cleanup", "method_startline": "451", "method_endline": "501", "method_complexity": {"method_NLOC": "36", "method_CCN": "5", "method_NToken": "221", "method_nesting_level": "0"}}}}}}}}