{"BR": {"BR_id": "10270", "BR_author": "michaelitvin", "BRopenT": "2020-08-23T09:49:40Z", "BRcloseT": "2020-09-09T16:52:16Z", "BR_text": {"BRsummary": "[tune] Add ConcurrencyLimiter to the Bayesian optimization code examples", "BRdescription": "\n As stated <denchmark-link:https://docs.ray.io/en/latest/tune/api_docs/suggestion.html#concurrencylimiter-tune-suggest-concurrencylimiter>here</denchmark-link>\n , Bayesian optimization doesn't parallelize well and thus needs a .\n Need to add it to the code examples <denchmark-link:https://docs.ray.io/en/master/tune/examples/bayesopt_example.html>here</denchmark-link>\n  and <denchmark-link:https://docs.ray.io/en/latest/tune/api_docs/suggestion.html#bayesian-optimization-tune-suggest-bayesopt-bayesoptsearch>here</denchmark-link>\n .\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "michaelitvin", "commentT": "2020-08-24T17:03:41Z", "comment_text": "\n \t\tDo you think it makes sense to do tune.run(func, search_alg=Bayesian(), max_concurrent=12) (i.e., just put it into tune.run)?\n \t\t"}}}, "commit": {"commit_id": "3501ea396c3b08c9fc2c220134bb1a68b423122a", "commit_author": "Richard Liaw", "commitT": "2020-09-09 09:52:15-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\bayesopt_example.py", "file_new_name": "python\\ray\\tune\\examples\\bayesopt_example.py", "file_complexity": {"file_NLOC": "48", "file_CCN": "3", "file_NToken": "282"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "10,47,48,49,50,51,52,53,57,58", "deleted_lines": "46,47,48,49,50,51,52,53,54"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\dragonfly_example.py", "file_new_name": "python\\ray\\tune\\examples\\dragonfly_example.py", "file_complexity": {"file_NLOC": "54", "file_CCN": "2", "file_NToken": "322"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "14,74,75,77,80,81", "deleted_lines": "73,74,76"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\hyperband_example.py", "file_new_name": "python\\ray\\tune\\examples\\hyperband_example.py", "file_complexity": {"file_NLOC": "50", "file_CCN": "4", "file_NToken": "313"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "10,14,60,61,66,67", "deleted_lines": "6,11,15,61,66,67"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\hyperopt_example.py", "file_new_name": "python\\ray\\tune\\examples\\hyperopt_example.py", "file_complexity": {"file_NLOC": "56", "file_CCN": "3", "file_NToken": "309"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "9,62,63,64,65,67,68,69,70,71,72", "deleted_lines": "61,62,63,65"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\lightgbm_example.py", "file_new_name": "python\\ray\\tune\\examples\\lightgbm_example.py", "file_complexity": {"file_NLOC": "43", "file_CCN": "2", "file_NToken": "281"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "47,48,51", "deleted_lines": "49"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\mlflow_example.py", "file_new_name": "python\\ray\\tune\\examples\\mlflow_example.py", "file_complexity": {"file_NLOC": "37", "file_CCN": "3", "file_NToken": "215"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "46,47", "deleted_lines": "12,47,48,49"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\examples\\mnist_pytorch.py", "file_new_name": "python\\ray\\tune\\examples\\mnist_pytorch.py", "file_complexity": {"file_NLOC": "117", "file_CCN": "14", "file_NToken": "837"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "91,102", "deleted_lines": "92", "method_info": {"method_name": "train_mnist", "method_params": "config", "method_startline": "90", "method_endline": "103", "method_complexity": {"method_NLOC": "11", "method_CCN": "3", "method_NToken": "100", "method_nesting_level": "0"}}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\nevergrad_example.py", "file_new_name": "python\\ray\\tune\\examples\\nevergrad_example.py", "file_complexity": {"file_NLOC": "48", "file_CCN": "3", "file_NToken": "288"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "9,61,62,64,68,69", "deleted_lines": "60,61,63"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\optuna_example.py", "file_new_name": "python\\ray\\tune\\examples\\optuna_example.py", "file_complexity": {"file_NLOC": "44", "file_CCN": "3", "file_NToken": "275"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "9,49,50,51,53,54,55,56,57,58", "deleted_lines": "48,49,51"}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\examples\\skopt_example.py", "file_new_name": "python\\ray\\tune\\examples\\skopt_example.py", "file_complexity": {"file_NLOC": "49", "file_CCN": "3", "file_NToken": "312"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "9,65,67,71,72", "deleted_lines": "62,63,67"}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "python\\ray\\tune\\examples\\tune_cifar10_gluon.py", "file_new_name": "python\\ray\\tune\\examples\\tune_cifar10_gluon.py", "file_complexity": {"file_NLOC": "191", "file_CCN": "14", "file_NToken": "1297"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "157,158,173", "deleted_lines": "157,158,173", "method_info": {"method_name": "train_cifar10", "method_params": "config", "method_startline": "91", "method_endline": "183", "method_complexity": {"method_NLOC": "51", "method_CCN": "4", "method_NToken": "447", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "157,158", "deleted_lines": "157,158", "method_info": {"method_name": "train_cifar10.train", "method_params": "epoch", "method_startline": "148", "method_endline": "161", "method_complexity": {"method_NLOC": "13", "method_CCN": "5", "method_NToken": "128", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "173", "deleted_lines": "173", "method_info": {"method_name": "train_cifar10.test", "method_params": "", "method_startline": "163", "method_endline": "178", "method_complexity": {"method_NLOC": "14", "method_CCN": "5", "method_NToken": "151", "method_nesting_level": "1"}}}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\schedulers\\async_hyperband.py", "file_new_name": "python\\ray\\tune\\schedulers\\async_hyperband.py", "file_complexity": {"file_NLOC": "179", "file_CCN": "38", "file_NToken": "986"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "194", "deleted_lines": null, "method_info": {"method_name": "debug_str", "method_params": "self", "method_startline": "193", "method_endline": "199", "method_complexity": {"method_NLOC": "6", "method_CCN": "2", "method_NToken": "39", "method_nesting_level": "1"}}}}}, "file_12": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\repeater.py", "file_new_name": "python\\ray\\tune\\suggest\\repeater.py", "file_complexity": {"file_NLOC": "139", "file_CCN": "26", "file_NToken": "661"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "171,172", "deleted_lines": null, "method_info": {"method_name": "set_search_properties", "method_params": "self,metric,mode,config", "method_startline": "171", "method_endline": "172", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "24", "method_nesting_level": "1"}}}}}, "file_13": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\suggestion.py", "file_new_name": "python\\ray\\tune\\suggest\\suggestion.py", "file_complexity": {"file_NLOC": "200", "file_CCN": "33", "file_NToken": "849"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "370,371", "deleted_lines": null, "method_info": {"method_name": "set_search_properties", "method_params": "self,metric,mode,config", "method_startline": "370", "method_endline": "371", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "24", "method_nesting_level": "1"}}}}}}}}