{"BR": {"BR_id": "12622", "BR_author": "kaushikb11", "BRopenT": "2020-12-04T17:23:42Z", "BRcloseT": "2021-01-09T17:21:50Z", "BR_text": {"BRsummary": "[tune] Raises Error when grid_search is defined in the config for AxSearch search alg", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Raises Error when grid_search is defined in the config for AxSearch search alg\n Ray version and other system information (Python version, TensorFlow version, OS):\n Python 3.7.5\n ray==1.0.1.post1\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):\n If we cannot run your script, we cannot fix your issue.\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n <denchmark-h:h4>Script</denchmark-h>\n \n from ray import tune\n from ray.tune.suggest.ax import AxSearch\n \n config = {\n     \"x1\": tune.uniform(0.0, 1.0),\n     \"x2\": tune.uniform(0.0, 1.0),\n     \"x3\": tune.grid_search([1, 2, 3])\n }\n \n def easy_objective(config):\n     for i in range(100):\n         intermediate_result = config[\"x1\"] + config[\"x2\"] * i\n         tune.report(score=intermediate_result)\n \n ax_search = AxSearch(metric=\"score\")\n tune.run(\n     easy_objective,\n     config=config,\n     search_alg=ax_search, mode=\"min\")\n <denchmark-h:h4>How does the Error look like?</denchmark-h>\n \n <denchmark-code>~/ludwig/venv/lib/python3.7/site-packages/ray/tune/suggest/ax.py in set_search_properties(self, metric, mode, config)\n     182         if self._ax:\n     183             return False\n --> 184         space = self.convert_search_space(config)\n     185         self._space = space\n     186         if metric:\n \n ~/ludwig/venv/lib/python3.7/site-packages/ray/tune/suggest/ax.py in convert_search_space(spec)\n     297             \"type\": \"fixed\",\n     298             \"value\": val\n --> 299         } for path, val in resolved_vars]\n     300 \n     301         # Parameter name is e.g. \"a/b/c\" for nested dicts\n \n ~/ludwig/venv/lib/python3.7/site-packages/ray/tune/suggest/ax.py in <listcomp>(.0)\n     297             \"type\": \"fixed\",\n     298             \"value\": val\n --> 299         } for path, val in resolved_vars]\n     300 \n     301         # Parameter name is e.g. \"a/b/c\" for nested dicts\n \n TypeError: sequence item 1: expected str instance, int found\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "kaushikb11", "commentT": "2020-12-08T02:42:15Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/richardliaw>@richardliaw</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "d4b0a9fadf1120fbc2e1cf6557c2d37d5844c4d2", "commit_author": "Kai Fricke", "commitT": "2021-01-09 18:21:49+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\ax.py", "file_new_name": "python\\ray\\tune\\suggest\\ax.py", "file_complexity": {"file_NLOC": "302", "file_CCN": "37", "file_NToken": "1284"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "278,279,280,281", "deleted_lines": "272", "method_info": {"method_name": "convert_search_space", "method_params": "Dict", "method_startline": "270", "method_endline": "349", "method_complexity": {"method_NLOC": "19", "method_CCN": "4", "method_NToken": "101", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\bayesopt.py", "file_new_name": "python\\ray\\tune\\suggest\\bayesopt.py", "file_complexity": {"file_NLOC": "301", "file_CCN": "38", "file_NToken": "1496"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "376,377,378,379", "deleted_lines": "369", "method_info": {"method_name": "convert_search_space", "method_params": "Dict,bool", "method_startline": "368", "method_endline": "408", "method_complexity": {"method_NLOC": "17", "method_CCN": "4", "method_NToken": "91", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\bohb.py", "file_new_name": "python\\ray\\tune\\suggest\\bohb.py", "file_complexity": {"file_NLOC": "274", "file_CCN": "42", "file_NToken": "1484"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "247,248,249,250", "deleted_lines": "241", "method_info": {"method_name": "convert_search_space", "method_params": "Dict", "method_startline": "239", "method_endline": "319", "method_complexity": {"method_NLOC": "69", "method_CCN": "17", "method_NToken": "511", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\dragonfly.py", "file_new_name": "python\\ray\\tune\\suggest\\dragonfly.py", "file_complexity": {"file_NLOC": "339", "file_CCN": "44", "file_NToken": "1425"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "354,355,356,357", "deleted_lines": "347", "method_info": {"method_name": "convert_search_space", "method_params": "Dict", "method_startline": "346", "method_endline": "386", "method_complexity": {"method_NLOC": "14", "method_CCN": "3", "method_NToken": "76", "method_nesting_level": "1"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\nevergrad.py", "file_new_name": "python\\ray\\tune\\suggest\\nevergrad.py", "file_complexity": {"file_NLOC": "284", "file_CCN": "40", "file_NToken": "1379"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "296,297,298,299", "deleted_lines": "290", "method_info": {"method_name": "convert_search_space", "method_params": "Dict", "method_startline": "288", "method_endline": "339", "method_complexity": {"method_NLOC": "14", "method_CCN": "3", "method_NToken": "81", "method_nesting_level": "1"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\optuna.py", "file_new_name": "python\\ray\\tune\\suggest\\optuna.py", "file_complexity": {"file_NLOC": "262", "file_CCN": "39", "file_NToken": "1306"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "252,253,254,255", "deleted_lines": "243", "method_info": {"method_name": "convert_search_space", "method_params": "Dict", "method_startline": "241", "method_endline": "305", "method_complexity": {"method_NLOC": "16", "method_CCN": "5", "method_NToken": "86", "method_nesting_level": "1"}}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\skopt.py", "file_new_name": "python\\ray\\tune\\suggest\\skopt.py", "file_complexity": {"file_NLOC": "311", "file_CCN": "44", "file_NToken": "1549"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "329,330,331,332", "deleted_lines": "322", "method_info": {"method_name": "convert_search_space", "method_params": "Dict,bool", "method_startline": "321", "method_endline": "372", "method_complexity": {"method_NLOC": "17", "method_CCN": "4", "method_NToken": "91", "method_nesting_level": "1"}}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 9, "file_old_name": "python\\ray\\tune\\tests\\test_sample.py", "file_new_name": "python\\ray\\tune\\tests\\test_sample.py", "file_complexity": {"file_NLOC": "857", "file_CCN": "58", "file_NToken": "8145"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "650,651,652,653,654,655", "deleted_lines": null, "method_info": {"method_name": "testConvertOptuna", "method_params": "self", "method_startline": "646", "method_endline": "701", "method_complexity": {"method_NLOC": "47", "method_CCN": "1", "method_NToken": "454", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "272,273,274,275,276,277", "deleted_lines": null, "method_info": {"method_name": "testConvertBayesOpt", "method_params": "self", "method_startline": "269", "method_endline": "327", "method_complexity": {"method_NLOC": "45", "method_CCN": "1", "method_NToken": "481", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "707,708,709,710,711,712", "deleted_lines": null, "method_info": {"method_name": "testConvertSkOpt", "method_params": "self", "method_startline": "703", "method_endline": "753", "method_complexity": {"method_NLOC": "43", "method_CCN": "1", "method_NToken": "451", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "333,334,335,336", "deleted_lines": null, "method_info": {"method_name": "testConvertBOHB", "method_params": "self", "method_startline": "329", "method_endline": "384", "method_complexity": {"method_NLOC": "47", "method_CCN": "1", "method_NToken": "480", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "389,390,391,392,393,394", "deleted_lines": null, "method_info": {"method_name": "testConvertDragonfly", "method_params": "self", "method_startline": "386", "method_endline": "470", "method_complexity": {"method_NLOC": "73", "method_CCN": "1", "method_NToken": "528", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "200,201,202,203", "deleted_lines": null, "method_info": {"method_name": "testConvertAx", "method_params": "self", "method_startline": "196", "method_endline": "267", "method_complexity": {"method_NLOC": "63", "method_CCN": "1", "method_NToken": "520", "method_nesting_level": "1"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "476,477,478,479,480,481", "deleted_lines": null, "method_info": {"method_name": "testConvertHyperOpt", "method_params": "self", "method_startline": "472", "method_endline": "531", "method_complexity": {"method_NLOC": "52", "method_CCN": "1", "method_NToken": "475", "method_nesting_level": "1"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "759,760,761,762,763,764", "deleted_lines": null, "method_info": {"method_name": "testConvertZOOpt", "method_params": "self", "method_startline": "755", "method_endline": "837", "method_complexity": {"method_NLOC": "72", "method_CCN": "1", "method_NToken": "617", "method_nesting_level": "1"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "583,584,585,586,587,588", "deleted_lines": null, "method_info": {"method_name": "testConvertNevergrad", "method_params": "self", "method_startline": "579", "method_endline": "644", "method_complexity": {"method_NLOC": "58", "method_CCN": "1", "method_NToken": "504", "method_nesting_level": "1"}}}}}}}}