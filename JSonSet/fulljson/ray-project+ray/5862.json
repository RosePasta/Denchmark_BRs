{"BR": {"BR_id": "5862", "BR_author": "stephanie-wang", "BRopenT": "2019-10-08T17:40:09Z", "BRcloseT": "2019-10-11T18:00:09Z", "BR_text": {"BRsummary": "RayTaskError doesn't subclass original exception correctly", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Ray version: 0.7.5\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n I'm not exactly sure what's going on, but it looks like some issue with recreating the original exception. The original exception here is a ray.exceptions.UnreconstructableError, but it fails when trying to print the exception because there is no self.object_id.\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n import numpy as np\n import ray\n ray.init(object_store_memory=1e9)\n \n @ray.remote\n def f(x):\n     return x\n \n # Trigger unreconstructable object error.\n x = [f.remote(np.ones(int(1e7))) for _ in range(10)]\n ray.get(x[0])\n This results in:\n <denchmark-code>Traceback (most recent call last):\n   File \"/Users/swang/ray/python/ray/worker.py\", line 2121, in get\n     raise value.as_instanceof_cause()\n ray.exceptions.RayTaskError(UnreconstructableError): <exception str() failed>\n \n During handling of the above exception, another exception occurred:\n \n Traceback (most recent call last):\n   File \"error.py\", line 11, in <module>\n     ray.get(x[0])\n   File \"/Users/swang/ray/python/ray/worker.py\", line 2131, in get\n     return values\n   File \"python/ray/includes/libcoreworker.pxi\", line 32, in ray._raylet.ProfileEvent.__exit__\n     \"value\": str(value),\n   File \"/Users/swang/ray/python/ray/exceptions.py\", line 155, in __str__\n     self.object_id.hex(),\n AttributeError: 'RayTaskError(UnreconstructableError)' object has no attribute 'object_id'\n 2019-10-08 10:35:18,456 WARNING worker.py:1619 -- The task with ID ffffffffffffffffffff01000000 is a driver task and so the object created by ray.put could not be reconstructed.\n </denchmark-code>\n \n It looks like it's related to # <denchmark-link:https://github.com/ray-project/ray/pull/5799>#5799</denchmark-link>\n .\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "stephanie-wang", "commentT": "2019-10-08T20:21:39Z", "comment_text": "\n \t\tI have this in some other pr:\n <denchmark-code>diff --git a/python/ray/exceptions.py b/python/ray/exceptions.py\n index ba0c2e5d6..680cb5aac 100644\n --- a/python/ray/exceptions.py\n +++ b/python/ray/exceptions.py\n @@ -56,6 +56,9 @@ class RayTaskError(RayError):\n          if issubclass(RayTaskError, self.cause_cls):\n              return self  # already satisfied\n  \n +        if issubclass(RayError, self.cause_cls):\n +            return self  # don't try to wrap ray internal errors\n +\n          class cls(self.cause_cls, RayTaskError):\n              def __init__(self, function_name, traceback_str, cause_cls, pid,\n                           host):\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "stephanie-wang", "commentT": "2019-10-09T00:03:06Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/stephanie-wang>@stephanie-wang</denchmark-link>\n  try out <denchmark-link:https://github.com/ray-project/ray/compare/master...ericl:no-wrap?expand=1>https://github.com/ray-project/ray/compare/master...ericl:no-wrap?expand=1</denchmark-link>\n  ? For some reason your example doesn't fail for me.\n \t\t"}}}, "commit": {"commit_id": "0e8c3c034623aff248dee939c4f1a61c4d162056", "commit_author": "Eric Liang", "commitT": "2019-10-11 11:00:08-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\ray\\autoscaler\\updater.py", "file_new_name": "python\\ray\\autoscaler\\updater.py", "file_complexity": {"file_NLOC": "387", "file_CCN": "51", "file_NToken": "2474"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "296", "deleted_lines": "296", "method_info": {"method_name": "rsync_down", "method_params": "self,source,target,redirect", "method_startline": "296", "method_endline": "305", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "73", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "296", "deleted_lines": "296", "method_info": {"method_name": "run_rsync_down", "method_params": "self,source,target,redirect", "method_startline": "296", "method_endline": "305", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "73", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\exceptions.py", "file_new_name": "python\\ray\\exceptions.py", "file_complexity": {"file_NLOC": "131", "file_CCN": "17", "file_NToken": "496"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "64,65,66", "deleted_lines": null, "method_info": {"method_name": "as_instanceof_cause", "method_params": "self", "method_startline": "54", "method_endline": "78", "method_complexity": {"method_NLOC": "14", "method_CCN": "3", "method_NToken": "109", "method_nesting_level": "1"}}}}}}}}