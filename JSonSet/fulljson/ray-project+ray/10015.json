{"BR": {"BR_id": "10015", "BR_author": "concretevitamin", "BRopenT": "2020-08-10T03:58:52Z", "BRcloseT": "2020-08-17T18:12:21Z", "BR_text": {"BRsummary": "[rllib] Torch policy + non-empty custom_model_config errors out", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n On Ray 0.8.6, Torch policy + non-empty custom_model_config + custom model would crash.\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n <denchmark-code>  File \"/home/ubuntu/anaconda3/envs/exp/lib/python3.7/site-packages/ray/rllib/policy/torch_policy_template.py\", line 120, in __init__\n     **self.config[\"model\"].get(\"custom_model_config\", {}))\n   File \"/home/ubuntu/anaconda3/envs/exp/lib/python3.7/site-packages/ray/rllib/models/catalog.py\", line 360, in get_model_v2\n     model_config, name, **model_kwargs)\n TypeError: __init__() got an unexpected keyword argument 'pool'\n </denchmark-code>\n \n Reproducible by any custom Torch model with a non-empty custom_model_config.\n This error shows up if I set any custom_model_config: {'pool': xxx}, where pool is something my custom torch model can interpret; here, rllib torch template is unpacking this dict, causing erroring out.\n If we cannot run your script, we cannot fix your issue.\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "concretevitamin", "commentT": "2020-08-10T09:06:07Z", "comment_text": "\n \t\tCan you try getting the pool information in your Model class' c'tor from config[\"model\"][\"custom_model_config\"][\"pool\"], instead of an actual pool arg? It should work then.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "concretevitamin", "commentT": "2020-08-10T16:06:33Z", "comment_text": "\n \t\tThe problem is rllib unpacking this for me.\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Mon, Aug 10, 2020 at 02:06 Sven Mika ***@***.***> wrote:\n  Can you try getting the pool information in your Model class' c'tor from\n  config[\"model\"][\"custom_model_config\"][\"pool\"], instead of an actual pool\n  arg? It should work then.\n \n  \u2014\n  You are receiving this because you authored the thread.\n \n \n  Reply to this email directly, view it on GitHub\n  <#10015 (comment)>,\n  or unsubscribe\n  <https://github.com/notifications/unsubscribe-auth/AAEQWHSRV5BDNLMJVTUECBTR762A3ANCNFSM4PZRSVZQ>\n  .\n \n \n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "concretevitamin", "commentT": "2020-08-11T22:45:17Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/sven1977>@sven1977</denchmark-link>\n  I think this is a bug, removed it for torch here: <denchmark-link:https://github.com/ray-project/ray/pull/10055>#10055</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "ca133e269975292ec46fb7e7094341b6ae861a67", "commit_author": "Eric Liang", "commitT": "2020-08-17 11:12:20-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "rllib\\examples\\custom_loss.py", "file_new_name": "rllib\\examples\\custom_loss.py", "file_complexity": {"file_NLOC": "54", "file_CCN": "0", "file_NToken": "267"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "34", "deleted_lines": "34"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "rllib\\models\\catalog.py", "file_new_name": "rllib\\models\\catalog.py", "file_complexity": {"file_NLOC": "509", "file_CCN": "26", "file_NToken": "2470"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "85,86,87,88,307,308,309,310,311,339,340,341,345,346,347,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390", "deleted_lines": "85,86,332,333,334,342,343,344,364,365,366"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "rllib\\policy\\dynamic_tf_policy.py", "file_new_name": "rllib\\policy\\dynamic_tf_policy.py", "file_complexity": {"file_NLOC": "344", "file_CCN": "27", "file_NToken": "2348"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "203", "deleted_lines": "203,204"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "rllib\\policy\\torch_policy_template.py", "file_new_name": "rllib\\policy\\torch_policy_template.py", "file_complexity": {"file_NLOC": "184", "file_CCN": "24", "file_NToken": "1354"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "204", "deleted_lines": "204,205", "method_info": {"method_name": "__init__", "method_params": "self,obs_space,action_space,config", "method_startline": "172", "method_endline": "225", "method_complexity": {"method_NLOC": "44", "method_CCN": "7", "method_NToken": "262", "method_nesting_level": "2"}}}}}}}}