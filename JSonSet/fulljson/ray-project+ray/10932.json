{"BR": {"BR_id": "10932", "BR_author": "mkoh-asapp", "BRopenT": "2020-09-21T19:20:24Z", "BRcloseT": "2020-10-10T00:21:40Z", "BR_text": {"BRsummary": "[autoscaler] read_namespaced_pod vs. read_namespaced_pod_status", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n There\u2019s a bunch of places where ray is doing core_api().read_namespaced_pod_status() but I don\u2019t have the permission to read pods/status. It needs to be explicitly granted, so having permission to get pods does not give you permission to get pods/status.  Can I suggest that you use read_namespaced_pod instead? It returns the same information but it seems like it is more common to have that permission than the more specialized pods/status.\n Ray version and other system information (Python version, TensorFlow version, OS):\n Ray 0.8.7\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n n/a (the default ray cluster config will replicate)\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mkoh-asapp", "commentT": "2020-09-22T05:50:05Z", "comment_text": "\n \t\tcc <denchmark-link:https://github.com/yiranwang52>@yiranwang52</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "92b4059cad18efb34ef712c38ba08abcbdd986ae", "commit_author": "Gekho457", "commitT": "2020-10-09 19:21:39-05:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "python\\ray\\autoscaler\\_private\\kubernetes\\node_provider.py", "file_new_name": "python\\ray\\autoscaler\\_private\\kubernetes\\node_provider.py", "file_complexity": {"file_NLOC": "148", "file_CCN": "37", "file_NToken": "1011"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "55", "deleted_lines": "55", "method_info": {"method_name": "is_terminated", "method_params": "self,node_id", "method_startline": "54", "method_endline": "56", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "34", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "51", "deleted_lines": "51", "method_info": {"method_name": "is_running", "method_params": "self,node_id", "method_startline": "50", "method_endline": "52", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "66", "deleted_lines": "66", "method_info": {"method_name": "internal_ip", "method_params": "self,node_id", "method_startline": "65", "method_endline": "67", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "59", "deleted_lines": "59", "method_info": {"method_name": "node_tags", "method_params": "self,node_id", "method_startline": "58", "method_endline": "60", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "75", "deleted_lines": "75", "method_info": {"method_name": "set_node_tags", "method_params": "self,node_id,tags", "method_startline": "74", "method_endline": "77", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "47", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "python\\ray\\autoscaler\\_private\\staroid\\node_provider.py", "file_new_name": "python\\ray\\autoscaler\\_private\\staroid\\node_provider.py", "file_complexity": {"file_NLOC": "293", "file_CCN": "60", "file_NToken": "1970"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "193", "deleted_lines": "193", "method_info": {"method_name": "is_running", "method_params": "self,node_id", "method_startline": "189", "method_endline": "194", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "48", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "217", "deleted_lines": "217", "method_info": {"method_name": "internal_ip", "method_params": "self,node_id", "method_startline": "213", "method_endline": "218", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "46", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "207", "deleted_lines": "207", "method_info": {"method_name": "node_tags", "method_params": "self,node_id", "method_startline": "203", "method_endline": "208", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "46", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "200", "deleted_lines": "200", "method_info": {"method_name": "is_terminated", "method_params": "self,node_id", "method_startline": "196", "method_endline": "201", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "53", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "229", "deleted_lines": "229", "method_info": {"method_name": "set_node_tags", "method_params": "self,node_id,tags", "method_startline": "225", "method_endline": "231", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "64", "method_nesting_level": "1"}}}}}}}}