{"BR": {"BR_id": "3220", "BR_author": "Shreeshrii", "BRopenT": "2021-01-09T05:47:10Z", "BRcloseT": "2021-01-13T05:08:49Z", "BR_text": {"BRsummary": "lstm_test failing", "BRdescription": "\n <denchmark-code>uname -a\n Linux tesseract-ocr-1 4.15.0-124-generic #127-Ubuntu SMP Fri Nov 6 10:58:37 UTC 2020 aarch64 aarch64 aarch64 GNU/Linux\n </denchmark-code>\n \n <denchmark-code>tesseract -v\n tesseract 5.0.0-alpha-20201231-100-g3c717\n  leptonica-1.78.0\n   libgif 5.1.4 : libjpeg 8d (libjpeg-turbo 1.5.2) : libpng 1.6.34 : libtiff 4.0.9 : zlib 1.2.11 : libwebp 0.6.1 : libopenjp2 2.3.0\n  Found NEON\n  Found OpenMP 201511\n  Found libarchive 3.2.2 zlib/1.2.11 liblzma/5.2.2 bz2lib/1.0.6 liblz4/1.7.1\n  Found libcurl/7.58.0 NSS/3.35 zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0 librtmp/2.3\n </denchmark-code>\n \n <denchmark-code>lstmtraining -v\n 5.0.0-alpha-20201231-100-g3c717\n </denchmark-code>\n \n <denchmark-code>[==========] 11 tests from 1 test suite ran. (1,013,640 ms total)\n [  PASSED  ] 6 tests.\n [  FAILED  ] 5 tests, listed below:\n [  FAILED  ] LSTMTrainerTest.Test2D\n [  FAILED  ] LSTMTrainerTest.DeterminismTest\n [  FAILED  ] LSTMTrainerTest.SoftmaxBaselineTest\n [  FAILED  ] LSTMTrainerTest.SoftmaxTest\n [  FAILED  ] LSTMTrainerTest.EncodedSoftmaxTest\n \n  5 FAILED TESTS\n </denchmark-code>\n \n The test was passing earlier.\n The build was done with following:\n <denchmark-code>export CXXFLAGS=\"-O3\"\n ../../configure --enable-openmp --disable-shared --with-tensorflow=no --disable-debug  --disable-opencl\n </denchmark-code>\n \n The error messages are:\n <denchmark-code>../../../unittest/lstm_test.cc:135: Failure\n Value of: trainer_->ReadTrainingDump(trainer_a_data, trainer_.get())\n   Actual: false\n Expected: true\n </denchmark-code>\n \n <denchmark-code>../../../unittest/lstm_test.cc:140: Failure\n Expected equality of these values:\n   act_error_a\n     Which is: 5.7480001\n   act_error_b\n     Which is: 36.243\n ../../../unittest/lstm_test.cc:141: Failure\n Expected equality of these values:\n   char_error_a\n     Which is: 22.921\n   char_error_b\n     Which is: 99.142998\n </denchmark-code>\n \n <denchmark-code>../../../unittest/lstm_test.h:161: Failure\n Value of: trainer_->ReadTrainingDump(trainer_data, trainer_.get())\n   Actual: false\n Expected: true\n [INFO]  Tester error rate = 44.9506\n [INFO]  Tester error rate = 42.1125\n ../../../unittest/lstm_test.h:161: Failure\n Value of: trainer_->ReadTrainingDump(trainer_data, trainer_.get())\n   Actual: false\n Expected: true\n </denchmark-code>\n \n <denchmark-code>../../../unittest/lstm_test.h:161: Failure\n Value of: trainer_->ReadTrainingDump(trainer_data, trainer_.get())\n   Actual: false\n Expected: true\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Shreeshrii", "commentT": "2021-01-09T05:53:57Z", "comment_text": "\n \t\tI reran the build and tests multiple times, since this test is not listed under <denchmark-link:https://github.com/stweil>@stweil</denchmark-link>\n 's bug report <denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/3215>#3215</denchmark-link>\n . But that build is with different config options.\n Error does not show up in CI because the test is disabled. (<denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/3218#issuecomment-756865277>#3218 (comment)</denchmark-link>\n ).\n I am attaching the current test log file and an older log file (on Power8).\n <denchmark-link:https://github.com/tesseract-ocr/tesseract/files/5790220/lstm_test.log.aarch64.txt>lstm_test.log.aarch64.txt</denchmark-link>\n  - Failing Commit # <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/3c71749b86595b7e1164960afa216516300af79f>3c71749</denchmark-link>\n \n <denchmark-link:https://github.com/tesseract-ocr/tesseract/files/5790221/lstm_test.log.power.txt>lstm_test.log.power.txt</denchmark-link>\n  - Passing Commit # <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/07fef2db4d21f569e4e6ab767e118ebdeaf2c6c7>07fef2d</denchmark-link>\n \n EDIT: Results of run on an older commit on AARch64 to provide comparable reports.\n <denchmark-link:https://github.com/tesseract-ocr/tesseract/files/5792153/lstm_test.log.aarch64.passing.txt>lstm_test.log.aarch64.passing.txt</denchmark-link>\n  - Passing Commit # <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/154ea6bab873ce2e008d030b5511504bb1595f3f>154ea6b</denchmark-link>\n \n There are other time and CER differences between the two reports, but they were run on different architectures and different commits. Is this difference expected?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Shreeshrii", "commentT": "2021-01-09T18:46:53Z", "comment_text": "\n \t\tIt works on Linux x86_64 in my test. I'll run another test on macOS aarch64 and report here.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Shreeshrii", "commentT": "2021-01-09T20:38:43Z", "comment_text": "\n \t\texport CXXFLAGS=\"-O3\"\n Why do you use this optimization?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Shreeshrii", "commentT": "2021-01-09T21:35:01Z", "comment_text": "\n \t\tNow I got the lstm_test failure both on Linux x86_64 and on macOS aarch64. It also shows a runtime error when running with sanitizers:\n <denchmark-code>unittest/lstm_test.log:../../../src/ccutil/helpers.h:153:67: runtime error: inf is outside the range of representable values of type 'int'\n unittest/lstm_test.log:../../../src/ccutil/helpers.h:153:38: runtime error: 5,76396e+106 is outside the range of representable values of type 'int'\n </denchmark-code>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Shreeshrii", "commentT": "2021-01-09T21:56:28Z", "comment_text": "\n \t\t-O3 -> non-standard floating point handling.\n There is a reason that the default is -O2.\n Just don't use -O3 with Tesseract.\n I don't consider this a bug (unless it also breaks with default optimization).\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Shreeshrii", "commentT": "2021-01-09T22:02:16Z", "comment_text": "\n \t\tIt does. I used -O2. So it is a bug.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "Shreeshrii", "commentT": "2021-01-10T02:58:48Z", "comment_text": "\n \t\t\n Why do you use this optimization?\n \n I don't know. Must have copied from somewhere when I was setting up build script for Power8. Used the same on AArch64. I can change to -O2.\n However, the tests passed with the  builds earlier. I rebuild for an earlier commit (<denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/154ea6bab873ce2e008d030b5511504bb1595f3f>154ea6b</denchmark-link>\n ) on AArch64 and the tests pass.\n <denchmark-code>Your branch is behind 'origin/master' by 12 commits, and can be fast-forwarded.\n   (use \"git pull\" to update your local branch)\n + git log -3\n commit 154ea6bab873ce2e008d030b5511504bb1595f3f\n Author: Egor Pugin <egor.pugin@gmail.com>\n Date:   Thu Jan 7 12:44:52 2021 +0300\n \n     Update sw.yml\n \n \n ...\n \n ============================================================================\n Testsuite summary for tesseract 5.0.0-alpha-20201231-88-g154e\n ============================================================================\n # TOTAL: 61\n # PASS:  61\n # SKIP:  0\n # XFAIL: 0\n # FAIL:  0\n # XPASS: 0\n # ERROR: 0\n ============================================================================\n </denchmark-code>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "Shreeshrii", "commentT": "2021-01-10T04:22:09Z", "comment_text": "\n \t\tThe next commit (# <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/9710bc0465fc0df1a5bc0e71177151e8c5901204>9710bc0</denchmark-link>\n  ) fails, even with .\n <denchmark-code>Your branch is behind 'origin/master' by 11 commits, and can be fast-forwarded.\n   (use \"git pull\" to update your local branch)\n + git log -3\n commit 9710bc0465fc0df1a5bc0e71177151e8c5901204 (HEAD -> master)\n Author: Egor Pugin <egor.pugin@gmail.com>\n Date:   Thu Jan 7 13:57:49 2021 +0300\n \n     More std::vector.\n </denchmark-code>\n \n <denchmark-code>+ export CXXFLAGS=-O2\n + CXXFLAGS=-O2\n + ../../configure --enable-openmp --disable-shared --with-tensorflow=no --disable-debug --disable-opencl\n \n </denchmark-code>\n \n <denchmark-code>PASS: lstm_squashed_test\n FAIL: lstm_test\n PASS: lstmtrainer_test\n </denchmark-code>\n \n <denchmark-code>============================================================================\n Testsuite summary for tesseract 5.0.0-alpha-20201231-89-g9710\n ============================================================================\n # TOTAL: 61\n # PASS:  60\n # SKIP:  0\n # XFAIL: 0\n # FAIL:  1\n # XPASS: 0\n # ERROR: 0\n ============================================================================\n </denchmark-code>\n \n Log file is attached.\n <denchmark-link:https://github.com/tesseract-ocr/tesseract/files/5792213/test-suite.log>test-suite.log</denchmark-link>\n \n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "Shreeshrii", "commentT": "2021-01-10T04:30:21Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/egorpugin>@egorpugin</denchmark-link>\n  <denchmark-link:https://github.com/stweil>@stweil</denchmark-link>\n \n I understand that running all unittests takes too much time, but is it possible to setup the CI to run all unittests once a day (only when there have been changes) so that we can catch such bugs earlier?\n EDIT: for Travis this can be done by configuring cron jobs from the \u201cCron Jobs\u201d settings tab on your Travis CI page.\n <denchmark-link:https://docs.travis-ci.com/user/cron-jobs/>https://docs.travis-ci.com/user/cron-jobs/</denchmark-link>\n \n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "Shreeshrii", "commentT": "2021-01-10T11:51:29Z", "comment_text": "\n \t\tProbably test fails because of broken serialization somewhere. Or if serialization is ok, then std::vector is the reason because other code was not changes much.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "Shreeshrii", "commentT": "2021-01-10T11:58:59Z", "comment_text": "\n \t\tI've added nightly builds with all tests.\n <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/af8e24ce0338903fbed5021435d7434c2c8326d2>af8e24c</denchmark-link>\n \n Let's see how it goes.\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "Shreeshrii", "commentT": "2021-01-10T12:23:58Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/egorpugin>@egorpugin</denchmark-link>\n  Thanks for adding nightly builds.\n I read that appyeyor needs a request to support to allow this so have opened an issue with request for same.\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "Shreeshrii", "commentT": "2021-01-10T14:51:36Z", "comment_text": "\n \t\tCommit <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/021237ad2cb82b9680616a9e68de9b9ec3b30cd7>021237a</denchmark-link>\n  adds an assertion in git master to detect calculations with illegal double values. This makes another test abort, and  now aborts earlier. All tests passed (also when the assertion code was added) for  and . Commits <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/4ed601956e41521d854a4b979f4eae489b3438e7>4ed6019</denchmark-link>\n  and <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/4f8f8e3d5878341ba5daf535d81868846a5d6496>4f8f8e3</denchmark-link>\n  also still pass all 61 tests (with the assertion code).\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "Shreeshrii", "commentT": "2021-01-10T15:06:54Z", "comment_text": "\n \t\t\n I've added nightly builds with all tests.\n \n <denchmark-link:https://github.com/egorpugin>@egorpugin</denchmark-link>\n , please run those tests with compiler flag  for the Tesseract code. Otherwise certain kinds of bugs won't be noticed.\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "Shreeshrii", "commentT": "2021-01-10T16:06:02Z", "comment_text": "\n \t\tI need to test it in sw build first. I did not work with sanitizers yet.\n \t\t"}, "comments_15": {"comment_id": 16, "comment_author": "Shreeshrii", "commentT": "2021-01-11T00:46:21Z", "comment_text": "\n \t\tAppyeyor reply\n `From: Feodor Fitsner (Support staff)\n Hi Shree,\n Scheduled jobs have been enabled and build timeout increased to 90 minutes. Hope that helps.\n `\n <denchmark-link:https://github.com/zdenop>@zdenop</denchmark-link>\n  The crontab for scheduling the build needs to be set via the UI interface.\n \t\t"}, "comments_16": {"comment_id": 17, "comment_author": "Shreeshrii", "commentT": "2021-01-11T10:01:59Z", "comment_text": "\n \t\tmake check builds and runs all unit tests.\n <denchmark-link:https://github.com/stweil>@stweil</denchmark-link>\n  Is there a way that I can build ALL tests but run only selected ones?\n \t\t"}, "comments_17": {"comment_id": 18, "comment_author": "Shreeshrii", "commentT": "2021-01-11T10:03:33Z", "comment_text": "\n \t\tThat's a feature which is still missing (also desired for me). It can be easily realized as soon as unittest is part of the flat build.\n \t\t"}, "comments_18": {"comment_id": 19, "comment_author": "Shreeshrii", "commentT": "2021-01-11T10:25:28Z", "comment_text": "\n \t\tmake check TESTS='apiexample_test' seems to work.\n Ref: <denchmark-link:https://stackoverflow.com/questions/38411619/autotools-how-to-run-a-single-test-using-make-check>https://stackoverflow.com/questions/38411619/autotools-how-to-run-a-single-test-using-make-check</denchmark-link>\n \n \t\t"}, "comments_19": {"comment_id": 20, "comment_author": "Shreeshrii", "commentT": "2021-01-11T11:36:58Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/egorpugin>@egorpugin</denchmark-link>\n  The nightly build ran - see <denchmark-link:https://github.com/tesseract-ocr/tesseract/actions/runs/476457200>https://github.com/tesseract-ocr/tesseract/actions/runs/476457200</denchmark-link>\n \n However, it shows the build status as success even though the unittests failed.\n \t\t"}, "comments_20": {"comment_id": 21, "comment_author": "Shreeshrii", "commentT": "2021-01-11T11:43:52Z", "comment_text": "\n \t\tGithub actions have an issue where test result uploader uploads results into the wrong job.\n Nightly job failed, but results were not uploaded into it correctly.\n \t\t"}, "comments_21": {"comment_id": 22, "comment_author": "Shreeshrii", "commentT": "2021-01-11T12:25:16Z", "comment_text": "\n \t\tAutotools run of googletests creates a testsuite summary - see <denchmark-link:https://github.com/tesseract-ocr/tesseract/files/5792213/test-suite.log>https://github.com/tesseract-ocr/tesseract/files/5792213/test-suite.log</denchmark-link>\n \n It is minimal when all tests pass, but has details of failing tests. Can that be used as a report as part of Github Actions?\n Also found another Action Report for gtest - but the example is only for one test.\n See <denchmark-link:https://github.com/bastianhjaeger/github_actions_gtest_example>https://github.com/bastianhjaeger/github_actions_gtest_example</denchmark-link>\n \n \t\t"}, "comments_22": {"comment_id": 23, "comment_author": "Shreeshrii", "commentT": "2021-01-11T21:26:34Z", "comment_text": "\n \t\t\n make check TESTS='apiexample_test' seems to work.\n \n I'm just preparing a flat build for unittest, too. Would it be better to create the test executables in the build root (like the other executables), or should they stay in the unittest subdirectory?\n \t\t"}, "comments_23": {"comment_id": 24, "comment_author": "Shreeshrii", "commentT": "2021-01-11T21:48:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/stweil>@stweil</denchmark-link>\n  <denchmark-link:https://github.com/Shreeshrii>@Shreeshrii</denchmark-link>\n \n If you want to add autotools build with tests, it is possible. Just create separate file in .github/.../ near sw.yml.\n I think it's worth it because you are using it extensively.\n You can express and repeat there your local workflows etc.\n \t\t"}, "comments_24": {"comment_id": 25, "comment_author": "Shreeshrii", "commentT": "2021-01-12T09:40:27Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/egorpugin>@egorpugin</denchmark-link>\n  When I am trying to commit to my fork of tesseract I am getting this error.\n <denchmark-code>remote:   https://github.com/Shreeshrii/tesseract.git\n To https://github.com/shreeshrii/tesseract\n  ! [remote rejected]   master -> master (refusing to allow a Personal Access Token to create or update workflow `.github/workflows/sw.yml` without `workflow` scope)\n error: failed to push some refs to 'https://github.com/shreeshrii/tesseract'\n </denchmark-code>\n \n Last time, I deleted the repo and created a new fork. But there must be a better way to handle this.\n I don't have rights to create a PR directly in tesseract-ocr/tesseract.\n \t\t"}, "comments_25": {"comment_id": 26, "comment_author": "Shreeshrii", "commentT": "2021-01-12T10:43:01Z", "comment_text": "\n \t\tCommit to your repo, create PR as usual workflow.\n \t\t"}, "comments_26": {"comment_id": 27, "comment_author": "Shreeshrii", "commentT": "2021-01-12T16:12:24Z", "comment_text": "\n \t\t\n Commit 021237a adds an assertion in git master to detect calculations with illegal double values.\n \n This problem was introduced by commit <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/9710bc0465fc0df1a5bc0e71177151e8c5901204>9710bc0</denchmark-link>\n . Those changes cause illegal double values in  and .\n \t\t"}, "comments_27": {"comment_id": 28, "comment_author": "Shreeshrii", "commentT": "2021-01-12T16:17:43Z", "comment_text": "\n \t\t\n remote:   https://github.com/Shreeshrii/tesseract.git\n \n <denchmark-link:https://github.com/Shreeshrii>@Shreeshrii</denchmark-link>\n , do you always use HTTPS to access your GitHub repository? I usually use SSH, because it does not require a password or access token for write access. The SSH address would be . You only have to upload your public SSH key(s) to GitHub once.\n \t\t"}, "comments_28": {"comment_id": 29, "comment_author": "Shreeshrii", "commentT": "2021-01-12T16:23:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/stweil>@stweil</denchmark-link>\n  Yes, I have used HTTPS access only so far. I will try with SSH.\n \t\t"}, "comments_29": {"comment_id": 30, "comment_author": "Shreeshrii", "commentT": "2021-01-12T16:34:39Z", "comment_text": "\n \t\tYou can use  to change the address. It will only work after you have uploaded your public SSH key to your GitHub settings (see <denchmark-link:https://github.com/settings/keys>https://github.com/settings/keys</denchmark-link>\n ).\n \t\t"}, "comments_30": {"comment_id": 31, "comment_author": "Shreeshrii", "commentT": "2021-01-12T17:20:38Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/egorpugin>@egorpugin</denchmark-link>\n , reverting commit <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/9710bc0465fc0df1a5bc0e71177151e8c5901204>9710bc0</denchmark-link>\n  fixes this issue. Maybe you have a better idea?\n \t\t"}, "comments_31": {"comment_id": 32, "comment_author": "Shreeshrii", "commentT": "2021-01-12T17:35:34Z", "comment_text": "\n \t\tMaybe it's possible to revert partially and check what causes this - what lines.\n Or we need just to debug the issue.\n \t\t"}, "comments_32": {"comment_id": 33, "comment_author": "Shreeshrii", "commentT": "2021-01-12T20:36:08Z", "comment_text": "\n \t\tFixed in git master with commit <denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/b0e46085f48d206797ad36ba643dbe9f12ad157a>b0e4608</denchmark-link>\n .\n \t\t"}, "comments_33": {"comment_id": 34, "comment_author": "Shreeshrii", "commentT": "2021-01-13T05:08:49Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/stweil>@stweil</denchmark-link>\n  Thanks!\n \t\t"}, "comments_34": {"comment_id": 35, "comment_author": "Shreeshrii", "commentT": "2021-01-20T13:14:18Z", "comment_text": "\n \t\t\n I'm just preparing a flat build for unittest, too. Would it be better to create the test executables in the build root (like the other executables), or should they stay in the unittest subdirectory?\n \n To find all executables in one directory would be more convenient.\n \t\t"}}}, "commit": {"commit_id": "b0e46085f48d206797ad36ba643dbe9f12ad157a", "commit_author": "Stefan Weil", "commitT": "2021-01-12 21:23:14+01:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\ccutil\\serialis.cpp", "file_new_name": "src\\ccutil\\serialis.cpp", "file_complexity": {"file_NLOC": "220", "file_CCN": "58", "file_NToken": "1515"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "130", "deleted_lines": null, "method_info": {"method_name": "tesseract::TFile::Serialize", "method_params": "data", "method_startline": "125", "method_endline": "133", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "63", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "97,98,99,100,101,102,103,104,105", "deleted_lines": null, "method_info": {"method_name": "tesseract::TFile::Serialize", "method_params": "data", "method_startline": "97", "method_endline": "105", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "63", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94", "deleted_lines": "94", "method_info": {"method_name": "tesseract::TFile::DeSerialize", "method_params": "data", "method_startline": "77", "method_endline": "94", "method_complexity": {"method_NLOC": "16", "method_CCN": "4", "method_NToken": "93", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\ccutil\\serialis.h", "file_new_name": "src\\ccutil\\serialis.h", "file_complexity": {"file_NLOC": "63", "file_CCN": "6", "file_NToken": "498"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "114,115,116,117,118,119,120,121,122,123,124,125,126,127", "method_info": {"method_name": "tesseract::TESS_APITFile::DeSerialize", "method_params": "data", "method_startline": "114", "method_endline": "127", "method_complexity": {"method_NLOC": "12", "method_CCN": "3", "method_NToken": "81", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "102,103,104,105,106,107,108,109,110,111", "method_info": {"method_name": "tesseract::TESS_APITFile::Serialize", "method_params": "data", "method_startline": "102", "method_endline": "111", "method_complexity": {"method_NLOC": "10", "method_CCN": "3", "method_NToken": "73", "method_nesting_level": "2"}}}}}}}}