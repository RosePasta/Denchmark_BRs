{"BR": {"BR_id": "2080", "BR_author": "tailsu", "BRopenT": "2018-11-26T13:31:22Z", "BRcloseT": "2018-12-14T18:23:49Z", "BR_text": {"BRsummary": "Using SetImage(buffer, width, height, ...) result worse than when using SetImage(Pix*)", "BRdescription": "\n <denchmark-h:h3>Environment</denchmark-h>\n \n \n Tesseract Version: tesseract 4.0.0\n leptonica-1.76.0\n libjpeg 9c : libpng 1.6.35 : libtiff 4.0.9 : zlib 1.2.11\n Found AVX512BW\n Found AVX512F\n Found AVX2\n Found AVX\n Found SSE\n Platform: Darwin 18.2.0 Darwin Kernel Version 18.2.0: Fri Oct  5 19:41:49 PDT 2018; root:xnu-4903.221.2~2/RELEASE_X86_64 x86_64\n \n <denchmark-h:h3>Current Behavior:</denchmark-h>\n \n Behavior reproduced with the following image:\n <denchmark-link:https://user-images.githubusercontent.com/730130/49015844-92763e80-f184-11e8-9730-3c0c58991ef6.jpg></denchmark-link>\n \n API initialized with \"eng+deu\" languages with language data from the tessdata_fast repository, mode is PSM_AUTO, everything else is default.\n Text recognition is very accurate when using the following API:\n <denchmark-code>Pix* pix = pixRead(imageFilePath.c_str());\n tesseractApi->SetImage(pix);\n tesseractApi->GetHOCRText(0);\n </denchmark-code>\n \n In particular, the words \"Gesch\u00e4ftsf\u00fchrer\", \"Gesellschaft\", \"Registergericht\" and \"Charlottenburg\" are recognized completely and accurately.\n I also get the following message in stderr:\n <denchmark-code>Warning: Invalid resolution 0 dpi. Using 70 instead.\n Estimating resolution as 287\n </denchmark-code>\n \n If I use the OpenCV imgcodecs API to load the image (it shouldn't matter how the image was read), and use the SetImage(buffer) overload:\n <denchmark-code>cv::Mat image = cv::imread(imageFilePath);\n tesseractApi->SetImage(\n     image.data,\n     image.cols,\n     image.rows,\n     image.channels(),\n     (int) image.step1()\n );\n </denchmark-code>\n \n Then the quality is much worse. All of the above-mentioned words are completely absent from the result.\n <denchmark-h:h3>Expected Behavior:</denchmark-h>\n \n There should be zero difference in behavior when using either SetImage() overload when given the exact same source data.\n <denchmark-h:h3>Suggested Fix:</denchmark-h>\n \n I've tracked the problem to this line:\n \n \n \n tesseract/src/ccmain/thresholder.cpp\n \n \n          Line 115\n       in\n       dba7f45\n \n \n \n \n \n \n  pixSetYRes(pix, 300); \n \n \n \n \n \n If I add the same line to my original working example:\n <denchmark-code>        Pix* pix = pixRead(imageFilePath.c_str());\n         pixSetYRes(pix, 300);\n         tesseractApi->SetImage(pix);\n </denchmark-code>\n \n then I get the same crappy result. I also don't get the messages in stderr about the resolution getting estimated.\n Suggested fix is to remove that line.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "tailsu", "commentT": "2018-11-26T16:14:58Z", "comment_text": "\n \t\t\n Warning: Invalid resolution 0 dpi. Using 70 instead.\n Estimating resolution as 287\n \n These two messages are confusing. 70 or 287?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "tailsu", "commentT": "2018-11-26T16:47:37Z", "comment_text": "\n \t\t\n These two messages are confusing. 70 or 287?\n \n Well, both messages are printed by Tesseract, so how should I answer that?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "tailsu", "commentT": "2018-11-26T17:25:12Z", "comment_text": "\n \t\tMy comment was targeted to other tesseract devs.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "tailsu", "commentT": "2018-11-30T07:47:07Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/tailsu>@tailsu</denchmark-link>\n  : thanks for report.\n It seems that using 300 DPI was forgotten when estimation of DPI was implemented. Maybe we should extend SetImage dpi setting... Also message related to DPI should re-written\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "tailsu", "commentT": "2018-12-14T18:19:34Z", "comment_text": "\n \t\tThere are 2 checks for credible DPI (>kMinCredibleResolution):\n \n \n \n tesseract/src/api/baseapi.cpp\n \n \n          Line 2353\n       in\n       6d06d39\n \n \n \n \n \n \n  tprintf(\"Warning: Invalid resolution %d dpi. Using %d instead.\\n\", \n \n \n \n \n \n and (>kMinCredibleResolution and <kMaxCredibleResolution):\n \n \n \n tesseract/src/ccmain/osdetect.cpp\n \n \n          Line 169\n       in\n       6d06d39\n \n \n \n \n \n \n  tprintf(\"Warning. Invalid resolution %d dpi. Using %d instead.\\n\", \n \n \n \n \n \n In both cases: if credible resolution is not found, resolution is set to kMinCredibleResolution (70).\n Additionally if resolution is equal to kMinCredibleResolution then there (SetupPageSegAndDetectOrientation) is algorithm (line_size * 10) for better estimation of DPI:\n \n \n \n tesseract/src/ccmain/pagesegmain.cpp\n \n \n          Line 313\n       in\n       6d06d39\n \n \n \n \n \n \n  int res = IntCastRounded(to_block->line_size * kResolutionEstimationFactor); \n \n \n \n \n \n \t\t"}}}, "commit": {"commit_id": "1f5fb15af3291703d89ab66b2e548640cca8c1f8", "commit_author": "zdenop", "commitT": "2018-12-14 19:23:22+01:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\ccmain\\thresholder.cpp", "file_new_name": "src\\ccmain\\thresholder.cpp", "file_complexity": {"file_NLOC": "223", "file_CCN": "56", "file_NToken": "1550"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "115", "method_info": {"method_name": "tesseract::ImageThresholder::SetImage", "method_params": "imagedata,width,height,bytes_per_pixel,bytes_per_line", "method_startline": "63", "method_endline": "118", "method_complexity": {"method_NLOC": "49", "method_CCN": "16", "method_NToken": "434", "method_nesting_level": "1"}}}}}}}}