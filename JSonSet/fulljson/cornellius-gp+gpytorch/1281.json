{"BR": {"BR_id": "1281", "BR_author": "wjmaddox", "BRopenT": "2020-09-08T16:02:26Z", "BRcloseT": "2020-09-09T05:48:47Z", "BR_text": {"BRsummary": "[Bug] BlockDiagLT symeig fails when no eigenvectors are desired", "BRdescription": "\n <denchmark-h:h1>\ud83d\udc1b Bug</denchmark-h>\n \n Calling symeig on a blockdiagLT fails if you don't want the eigenvectors because the ZeroLT shaping in the eigenvectors isn't set up correctly.\n <denchmark-h:h2>To reproduce</denchmark-h>\n \n ** Code snippet to reproduce **\n blt = torch.randn(4, 2, 8, 8)\n lt = BlockDiagLazyTensor(blt)\n lt.symeig()\n ** Stack trace/error message **\n <denchmark-code>---------------------------------------------------------------------------\n RuntimeError                              Traceback (most recent call last)\n <ipython-input-4-16a8470314fa> in <module>\n ----> 1 lt.symeig()\n \n ~/Documents/GitHub/gpytorch/gpytorch/utils/memoize.py in g(self, *args, **kwargs)\n      57         kwargs_pkl = pickle.dumps(kwargs)\n      58         if not _is_in_cache(self, cache_name, *args, kwargs_pkl=kwargs_pkl):\n ---> 59             return _add_to_cache(self, cache_name, method(self, *args, **kwargs), *args, kwargs_pkl=kwargs_pkl)\n      60         return _get_from_cache(self, cache_name, *args, kwargs_pkl=kwargs_pkl)\n      61 \n \n ~/Documents/GitHub/gpytorch/gpytorch/lazy/lazy_tensor.py in symeig(self, eigenvectors)\n    1593         except CachingError:\n    1594             pass\n -> 1595         return self._symeig(eigenvectors=eigenvectors)\n    1596 \n    1597     def to(self, device_id):\n \n ~/Documents/GitHub/gpytorch/gpytorch/lazy/block_diag_lazy_tensor.py in _symeig(self, eigenvectors)\n     130         # Doesn't make much sense to sort here, o/w we lose the structure\n     131         evals = evals.reshape(*evals.shape[:-2], evals.shape[-2:].numel())\n --> 132         evecs = self.__class__(evecs)  # can assume that block_dim is -3 here\n     133         return evals, evecs\n \n ~/Documents/GitHub/gpytorch/gpytorch/lazy/block_lazy_tensor.py in __init__(self, base_lazy_tensor, block_dim)\n      33             raise RuntimeError(\n      34                 \"base_lazy_tensor must be a batch matrix (i.e. at least 3 dimensions - got \"\n ---> 35                 \"{}\".format(base_lazy_tensor.dim())\n      36             )\n      37 \n \n RuntimeError: base_lazy_tensor must be a batch matrix (i.e. at least 3 dimensions - got 1\n </denchmark-code>\n \n <denchmark-h:h2>Expected Behavior</denchmark-h>\n \n No error.\n <denchmark-h:h2>System information</denchmark-h>\n \n Please complete the following information:\n gpytorch master\n <denchmark-h:h2>Additional context</denchmark-h>\n \n There's some other funkiness with symeig stuff but that's not necessarily this issue. I'll try to put up a PR fixing this later today, but it's low priority since there's probably no easy way to create this error.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "wjmaddox", "commentT": "2020-09-08T18:27:45Z", "comment_text": "\n \t\tI can take care of this since I guess I also messed this up.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "wjmaddox", "commentT": "2020-09-09T05:48:47Z", "comment_text": "\n \t\tFixed in <denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/1283>#1283</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "84641f0b4c83e3d6715d6a4734c4fbbdd413539e", "commit_author": "Max Balandat", "commitT": "2020-09-08 22:09:45-07:00", "commit_complexity": {"commit_NLOC": "0.5", "commit_CCN": "0.6666666666666666", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "gpytorch\\lazy\\block_diag_lazy_tensor.py", "file_new_name": "gpytorch\\lazy\\block_diag_lazy_tensor.py", "file_complexity": {"file_NLOC": "105", "file_CCN": "22", "file_NToken": "850"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "132,133,134,135", "deleted_lines": "132", "method_info": {"method_name": "_symeig", "method_params": "self,bool", "method_startline": "128", "method_endline": "136", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "84", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "gpytorch\\lazy\\lazy_tensor.py", "file_new_name": "gpytorch\\lazy\\lazy_tensor.py", "file_complexity": {"file_NLOC": "1093", "file_CCN": "310", "file_NToken": "7882"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1592,1593", "deleted_lines": "1592", "method_info": {"method_name": "symeig", "method_params": "self,bool", "method_startline": "1576", "method_endline": "1596", "method_complexity": {"method_NLOC": "21", "method_CCN": "2", "method_NToken": "55", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "gpytorch\\test\\lazy_tensor_test_case.py", "file_new_name": "gpytorch\\test\\lazy_tensor_test_case.py", "file_complexity": {"file_NLOC": "513", "file_CCN": "114", "file_NToken": "6517"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "635,636,637", "deleted_lines": null, "method_info": {"method_name": "test_symeig", "method_params": "self", "method_startline": "592", "method_endline": "637", "method_complexity": {"method_NLOC": "31", "method_CCN": "9", "method_NToken": "440", "method_nesting_level": "1"}}}}}}}}