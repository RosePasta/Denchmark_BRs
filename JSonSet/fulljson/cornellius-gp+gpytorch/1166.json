{"BR": {"BR_id": "1166", "BR_author": "iprada", "BRopenT": "2020-06-03T11:12:23Z", "BRcloseT": "2020-06-13T22:25:25Z", "BR_text": {"BRsummary": "Dimension out of range error", "BRdescription": "\n <denchmark-h:h1>\ud83d\udc1b Bug</denchmark-h>\n \n I am using using the Spectral mixture kernel, and initalizing it from the empircal spectrum of the data. However, I get an IndexError.\n <denchmark-h:h2>To reproduce</denchmark-h>\n \n Minimal example:\n class ExactGPModel(gpytorch.models.ExactGP):\n     def __init__(self, train_x, train_y, likelihood):\n         # Super interact to with teh gpytorch.models.ExactGP\n         super(ExactGPModel, self).__init__(train_x, train_y, likelihood)\n         self.mean_module = gpytorch.means.ConstantMean()\n         self.covar_module = gpytorch.kernels.SpectralMixtureKernel(num_mixtures=4)\n         #self.covar_module.initialize_from_data(train_x, train_y)\n         self.covar_module.initialize_from_data_empspect(train_x, train_y)\n \n     def forward(self, x):\n         mean_x = self.mean_module(x)\n         covar_x = self.covar_module(x)\n         return gpytorch.distributions.MultivariateNormal(mean_x, covar_x)\n \n train_x = np.arange(1,100)\n train_y = np.random.rand(100)\n \n \n for i in range(0,50):       \n     \n \n     # Convert to tensor\n     train_x = torch.from_numpy(train_x)\n     train_y = torch.from_numpy(train_y)\n     train_x = train_x.type(torch.FloatTensor)\n     train_y = train_y.type(torch.FloatTensor)\n \n     likelihood = gpytorch.likelihoods.GaussianLikelihood()\n     model = ExactGPModel(train_x, train_y, likelihood)\n ** Error message**\n <denchmark-code>---------------------------------------------------------------------------\n IndexError                                Traceback (most recent call last)\n <ipython-input-18-3796fe5ce2f5> in <module>\n      19 \n      20     likelihood = gpytorch.likelihoods.GaussianLikelihood()\n ---> 21     model = ExactGPModel(train_x, train_y, likelihood)\n \n <ipython-input-5-6b823c7240a5> in __init__(self, train_x, train_y, likelihood)\n       7         self.covar_module = gpytorch.kernels.SpectralMixtureKernel(num_mixtures=4)\n       8         #self.covar_module.initialize_from_data(train_x, train_y)\n ----> 9         self.covar_module.initialize_from_data_empspect(train_x, train_y)\n      10 \n      11     def forward(self, x):\n \n ~/miniconda3/envs/GP/lib/python3.7/site-packages/gpytorch/kernels/spectral_mixture_kernel.py in initialize_from_data_empspect(self, train_x, train_y)\n     159         from scipy.integrate import cumtrapz\n     160 \n --> 161         N = train_x.size(-2)\n     162         emp_spect = np.abs(fft(train_y.cpu().detach().numpy())) ** 2 / N\n     163         M = math.floor(N / 2)\n \n IndexError: Dimension out of range (expected to be in range of [-1, 0], but got -2)\n </denchmark-code>\n \n <denchmark-h:h2>System information</denchmark-h>\n \n Please complete the following information:\n \n GPyTorch Version (1.1.1)\n PyTorch Version 1.5.0)\n Windows bash on windows 10\n \n <denchmark-h:h2>Additional context</denchmark-h>\n \n Let me know if you need more info.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "iprada", "commentT": "2020-06-05T20:29:35Z", "comment_text": "\n \t\tTo solve this issue, you should add train_x = train_x.unsqueeze(-1). This will make train_x be 99 x 1.\n We should update initialize_from_data_empspect to handle this though.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "iprada", "commentT": "2020-06-07T11:05:04Z", "comment_text": "\n \t\tWonderful. Thanks for the help. I can confirm it works. I will leave the issue open. Feel free to close it whenever you want.\n \t\t"}}}, "commit": {"commit_id": "b8bd2a8832105c5d6df1180e2b072a9f6c562dda", "commit_author": "Geoff Pleiss", "commitT": "2020-06-08 15:34:05-04:00", "commit_complexity": {"commit_NLOC": "0.625", "commit_CCN": "1.0", "commit_Nprams": "0.125"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": ".travis.yml", "file_new_name": ".travis.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "16", "deleted_lines": "17"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "environment.yml", "file_new_name": "environment.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "6,7", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "gpytorch\\kernels\\spectral_mixture_kernel.py", "file_new_name": "gpytorch\\kernels\\spectral_mixture_kernel.py", "file_complexity": {"file_NLOC": "227", "file_CCN": "33", "file_NToken": "1626"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "161,162,163,164,165", "deleted_lines": null, "method_info": {"method_name": "initialize_from_data_empspect", "method_params": "self,train_x,train_y", "method_startline": "151", "method_endline": "196", "method_complexity": {"method_NLOC": "33", "method_CCN": "4", "method_NToken": "350", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "requirements.txt", "file_new_name": "requirements.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1,2,3", "deleted_lines": "1"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "setup.py", "file_new_name": "setup.py", "file_complexity": {"file_NLOC": "50", "file_CCN": "3", "file_NToken": "313"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "29", "deleted_lines": "29"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\examples\\test_simple_gp_regression.py", "file_new_name": "test\\examples\\test_simple_gp_regression.py", "file_complexity": {"file_NLOC": "377", "file_CCN": "56", "file_NToken": "3663"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "468,470", "deleted_lines": "468,470", "method_info": {"method_name": "test_pyro_sampling", "method_params": "self", "method_startline": "456", "method_endline": "495", "method_complexity": {"method_NLOC": "26", "method_CCN": "2", "method_NToken": "324", "method_nesting_level": "1"}}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "test\\examples\\test_spectral_mixture_gp_regression.py", "file_new_name": "test\\examples\\test_spectral_mixture_gp_regression.py", "file_complexity": {"file_NLOC": "90", "file_CCN": "14", "file_NToken": "826"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "79,81,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,108,109", "deleted_lines": "84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,104", "method_info": {"method_name": "test_spectral_mixture_gp_mean_abs_error", "method_params": "self,empspect", "method_startline": "79", "method_endline": "117", "method_complexity": {"method_NLOC": "29", "method_CCN": "4", "method_NToken": "292", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "76,77,78,79,81,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,108,109", "deleted_lines": "73,75,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,104", "method_info": {"method_name": "test_spectral_mixture_gp_mean_abs_error", "method_params": "self", "method_startline": "73", "method_endline": "112", "method_complexity": {"method_NLOC": "30", "method_CCN": "4", "method_NToken": "303", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "76,77", "deleted_lines": null, "method_info": {"method_name": "test_spectral_mixture_gp_mean_abs_error_empspect_init", "method_params": "self", "method_startline": "76", "method_endline": "77", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "14", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "47,51,52,53,54", "deleted_lines": "47,51", "method_info": {"method_name": "__init__", "method_params": "self,train_x,train_y,likelihood,empspect", "method_startline": "47", "method_endline": "54", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "85", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "47,51", "deleted_lines": "47,51", "method_info": {"method_name": "__init__", "method_params": "self,train_x,train_y,likelihood", "method_startline": "47", "method_endline": "51", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "66", "method_nesting_level": "1"}}}}}}}}