{"BR": {"BR_id": "710", "BR_author": "mshvartsman", "BRopenT": "2019-05-29T19:27:50Z", "BRcloseT": "2019-05-29T21:44:18Z", "BR_text": {"BRsummary": "[Bug] TypeError when calling `backward` on `gpytorch.functions.logdet`", "BRdescription": "\n <denchmark-h:h1>\ud83d\udc1b Bug</denchmark-h>\n \n I think there's a missing  in <denchmark-link:https://github.com/cornellius-gp/gpytorch/blob/master/gpytorch/functions/_inv_quad_log_det.py#L221>https://github.com/cornellius-gp/gpytorch/blob/master/gpytorch/functions/_inv_quad_log_det.py#L221</denchmark-link>\n . I'm not super familiar with gpytorch internals so hopefully this is correct -- if so, happy to contribute the one-liner fix.\n <denchmark-h:h2>To reproduce</denchmark-h>\n \n ** Code snippet to reproduce **\n ### works (I'm guessing something dispatches elsewhere for small matrices?)\n import torch\n from torch.autograd import backward\n import gpytorch\n from gpytorch.functions import logdet, inv_matmul\n n = 100\n inp = torch.arange(n, dtype=torch.float)\n kern = gpytorch.kernels.RBFKernel()(inp)\n ld = logdet(kern)\n backward(ld)\n \n ### doesn't work\n import torch\n from torch.autograd import backward\n import gpytorch\n from gpytorch.functions import logdet, inv_matmul\n n = 1000\n inp = torch.arange(n, dtype=torch.float)\n kern = gpytorch.kernels.RBFKernel()(inp)\n ld = logdet(kern)\n backward(ld)\n ** Stack trace/error message **\n <denchmark-code>---------------------------------------------------------------------------\n TypeError                                 Traceback (most recent call last)\n <ipython-input-46-593fbced29ac> in <module>()\n       3 kern = gpytorch.kernels.RBFKernel()(inp)\n       4 ld = logdet(kern)\n ----> 5 backward(ld)\n \n <PATH SNIPPED>/lib/python3.7/site-packages/torch/autograd/__init__.py in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables)\n      91     Variable._execution_engine.run_backward(\n      92         tensors, grad_tensors, retain_graph, create_graph,\n ---> 93         allow_unreachable=True)  # allow_unreachable flag\n      94 \n      95 \n \n <PATH SNIPPED>/lib/python3.7/site-packages/torch/autograd/function.py in apply(self, *args)\n      75 \n      76     def apply(self, *args):\n ---> 77         return self._forward_cls.backward(self, *args)\n      78 \n      79 \n \n <PATH SNIPPED>lib/python3.7/site-packages/gpytorch/functions/_inv_quad_log_det.py in backward(ctx, inv_quad_grad_output, logdet_grad_output)\n     221             res = matrix_arg_grads\n     222 \n --> 223         return tuple([None] * 9 + res)\n \n TypeError: can only concatenate list (not \"tuple\") to list\n </denchmark-code>\n \n <denchmark-h:h2>Expected Behavior</denchmark-h>\n \n No error.\n <denchmark-h:h2>System information</denchmark-h>\n \n Please complete the following information:\n \n GPyTorch version: 0.3.2 \n pytorch version 1.1.0.\n Mac OSX.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mshvartsman", "commentT": "2019-05-29T20:24:11Z", "comment_text": "\n \t\tAh you\u2019re totally right! Good catch. A one-line fix would be great!\n \t\t"}}}, "commit": {"commit_id": "84e918969fccb1eed90222b0c5cf187e691298dd", "commit_author": "Michael Shvartsman", "commitT": "2019-05-29 14:32:00-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "gpytorch\\functions\\_inv_quad_log_det.py", "file_new_name": "gpytorch\\functions\\_inv_quad_log_det.py", "file_complexity": {"file_NLOC": "168", "file_CCN": "18", "file_NToken": "1194"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "221", "deleted_lines": "221", "method_info": {"method_name": "backward", "method_params": "ctx,inv_quad_grad_output,logdet_grad_output", "method_startline": "153", "method_endline": "223", "method_complexity": {"method_NLOC": "52", "method_CCN": "17", "method_NToken": "401", "method_nesting_level": "1"}}}}}}}}