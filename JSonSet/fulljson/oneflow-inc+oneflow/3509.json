{"BR": {"BR_id": "3509", "BR_author": "chengtbf", "BRopenT": "2020-08-25T10:08:13Z", "BRcloseT": "2020-08-27T05:20:06Z", "BR_text": {"BRsummary": "oneflow.scope.namespace add wrong prefix in op_type_name rather than op_name when op is build by op module builder", "BRdescription": "\n using oneflow.scope.namespace() will trigger the BUG that the op_type_name cannot be found when the op is build by op module builder\n example:\n with oneflow.scope.namespace(\"my_space\"):\n     rng = oneflow.random.coin_flip(name=\"my_test_op\")\n will raise error:\n Check failed: val\t Cannot find op my_space-coin_flip\n BUT the scope prefix should be add on op_name : \"my_test_op\" rather than op_type_name: \"coin_flip\"\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "chengtbf", "commentT": "2020-08-25T10:49:59Z", "comment_text": "\n \t\tthis BUG is triggered ONLY when this op is build by op_module_builder.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "chengtbf", "commentT": "2020-08-25T11:09:47Z", "comment_text": "\n \t\tThis bug is caused by below code:\n <denchmark-code>@enable_if.condition(hob.in_global_mode & ~hob.eager_execution_enabled)\n def lazy_user_op_module_builder(op_name):\n     job_name = c_api_util.JobBuildAndInferCtx_GetCurrentJobName()\n     return UserOpModuleBuilder(job_name, op_name, LazyUserOpModule)\n \n ...\n \n class UserOpModuleBuilder(UserOpConfBuilder):\n     def __init__(self, *args, **kwargs):\n         UserOpConfBuilder.__init__(self, *args, **kwargs)\n         self.user_op_module.op_conf.scope_symbol_id = flow.current_scope().symbol_id\n \n ...\n \n class UserOpConfBuilder(object):\n     def __init__(self, job_name, op_name, user_op_class):\n         name_scope_prefix = name_scope.GetJobNameScopePrefix(job_name)\n         self.user_op_ = user_op_class(name_scope_prefix + op_name)\n \n ...\n \n class LazyUserOpModule(UserOpModule, UserOp):\n     def __init__(self, op_type_name):\n         UserOp.__init__(self, op_type_name, op_type_name) # this line raise the error\n \n ...\n \n class UserOp(object):\n     def __init__(self, op_name, op_type_name=None):\n         self.op_conf_ = op_conf_util.OperatorConf()\n         self.op_conf_.name = op_name\n         if op_type_name is not None:\n             self.op_conf_.user_conf.op_type_name = op_type_name\n         device_tag = oneflow.current_scope().device_parallel_desc_symbol.device_tag\n         self.op_conf_.device_tag = device_tag\n         self.output_arg_key_list_ = []\n \n </denchmark-code>\n \n We can't init UserOp with the parameter of op_type_name which is modified by adding namescope prefix.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "chengtbf", "commentT": "2020-08-25T11:17:42Z", "comment_text": "\n \t\tthe namescope prefix should never be added on op_type_name\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "chengtbf", "commentT": "2020-08-25T12:53:36Z", "comment_text": "\n \t\tI think user should also call the Op method to set the op_type_name when using user_op_module_builder to build op.\n <denchmark-link:https://github.com/Oneflow-Inc/oneflow/blob/master/oneflow/python/ops/user_data_ops.py#L518>https://github.com/Oneflow-Inc/oneflow/blob/master/oneflow/python/ops/user_data_ops.py#L518</denchmark-link>\n \n         self.op_module_builder = (\n             flow.user_op_module_builder(\"coin_flip\")\n             .Output(\"out\")\n             .Attr(\"batch_size\", batch_size)\n             .Attr(\"probability\", probability)\n             .Attr(\"has_seed\", has_seed)\n             .Attr(\"seed\", seed)\n             .CheckAndComplete()\n         )\n change to\n         self.op_module_builder = (\n             flow.user_op_module_builder(name)\n             .Op(\"coin_flip\")\n             .Output(\"out\")\n             .Attr(\"batch_size\", batch_size)\n             .Attr(\"probability\", probability)\n             .Attr(\"has_seed\", has_seed)\n             .Attr(\"seed\", seed)\n             .CheckAndComplete()\n         )\n can fix the namescope error\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "chengtbf", "commentT": "2020-08-25T13:12:59Z", "comment_text": "\n \t\t\n I think user should also call the Op method to set the op_type_name when using user_op_module_builder to build op.\n https://github.com/Oneflow-Inc/oneflow/blob/master/oneflow/python/ops/user_data_ops.py#L518\n         self.op_module_builder = (\n             flow.user_op_module_builder(\"coin_flip\")\n             .Output(\"out\")\n             .Attr(\"batch_size\", batch_size)\n             .Attr(\"probability\", probability)\n             .Attr(\"has_seed\", has_seed)\n             .Attr(\"seed\", seed)\n             .CheckAndComplete()\n         )\n change to\n         self.op_module_builder = (\n             flow.user_op_module_builder(name)\n             .Op(\"coin_flip\")\n             .Output(\"out\")\n             .Attr(\"batch_size\", batch_size)\n             .Attr(\"probability\", probability)\n             .Attr(\"has_seed\", has_seed)\n             .Attr(\"seed\", seed)\n             .CheckAndComplete()\n         )\n can fix the namescope error\n \n Yes, this way can avoid the bug. But I want to know whether  is designed to be used without  method  on purpose. <denchmark-link:https://github.com/lixinqi>@lixinqi</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "7480d36baaaa756444fbab62338f07cfbd166e4e", "commit_author": "leaves-zwx", "commitT": "2020-08-27 13:20:05+08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "oneflow\\python\\ops\\nn_ops.py", "file_new_name": "oneflow\\python\\ops\\nn_ops.py", "file_complexity": {"file_NLOC": "1693", "file_CCN": "64", "file_NToken": "8974"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1469", "deleted_lines": "1469,1470"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "oneflow\\python\\ops\\user_data_ops.py", "file_new_name": "oneflow\\python\\ops\\user_data_ops.py", "file_complexity": {"file_NLOC": "822", "file_CCN": "31", "file_NToken": "4449"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "841"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 20, "file_old_name": "oneflow\\python\\ops\\user_op_builder.py", "file_new_name": "oneflow\\python\\ops\\user_op_builder.py", "file_complexity": {"file_NLOC": "422", "file_CCN": "97", "file_NToken": "2609"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "141,142", "deleted_lines": "141", "method_info": {"method_name": "__init__", "method_params": "self,op_name,op_type_name", "method_startline": "141", "method_endline": "142", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "19", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "191,192,193", "method_info": {"method_name": "__init__", "method_params": "self,job_name,op_name,user_op_class", "method_startline": "191", "method_endline": "193", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "29", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "401,402,403", "deleted_lines": "401,403", "method_info": {"method_name": "eager_logical_user_op_module_builder", "method_params": "op_name", "method_startline": "401", "method_endline": "403", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "21", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "141", "deleted_lines": "140,141", "method_info": {"method_name": "__init__", "method_params": "self,op_name", "method_startline": "140", "method_endline": "141", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "15", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "407", "deleted_lines": "407,408", "method_info": {"method_name": "__init__", "method_params": "self,op_type_name", "method_startline": "407", "method_endline": "408", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "17", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "398,399,400,401,402,403", "deleted_lines": "401,403", "method_info": {"method_name": "Op", "method_params": "self,op_type_name", "method_startline": "398", "method_endline": "403", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "17", "method_nesting_level": "1"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "407,409,410", "deleted_lines": "407,408", "method_info": {"method_name": "lazy_user_op_module_builder", "method_params": "op_type_name", "method_startline": "407", "method_endline": "410", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "382,386", "deleted_lines": null, "method_info": {"method_name": "api_user_op_module_builder", "method_params": "op_type_name", "method_startline": "382", "method_endline": "386", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "0"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "476,477", "deleted_lines": null, "method_info": {"method_name": "eager_consistent_user_op_module_builder", "method_params": "op_type_name", "method_startline": "474", "method_endline": "477", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_9": {"Ismethod": 1, "added_lines": "206", "deleted_lines": "204", "method_info": {"method_name": "Build", "method_params": "self", "method_startline": "204", "method_endline": "211", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "15", "method_nesting_level": "1"}}}, "hunk_10": {"Ismethod": 1, "added_lines": "469,470", "deleted_lines": null, "method_info": {"method_name": "lazy_consistent_user_op_module_builder", "method_params": "op_type_name", "method_startline": "467", "method_endline": "470", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_11": {"Ismethod": 1, "added_lines": null, "deleted_lines": "377,381", "method_info": {"method_name": "api_user_op_module_builder", "method_params": "op_name", "method_startline": "377", "method_endline": "381", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "22", "method_nesting_level": "0"}}}, "hunk_12": {"Ismethod": 1, "added_lines": "155,156", "deleted_lines": "154", "method_info": {"method_name": "eager_user_op_builder", "method_params": "op_name", "method_startline": "153", "method_endline": "156", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_13": {"Ismethod": 1, "added_lines": "175", "deleted_lines": "173,175", "method_info": {"method_name": "consistent_user_op_builder", "method_params": "op_name", "method_startline": "173", "method_endline": "175", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "21", "method_nesting_level": "0"}}}, "hunk_14": {"Ismethod": 1, "added_lines": "136,137", "deleted_lines": "136", "method_info": {"method_name": "lazy_user_op_builder", "method_params": "op_name", "method_startline": "134", "method_endline": "137", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_15": {"Ismethod": 1, "added_lines": null, "deleted_lines": "395,397", "method_info": {"method_name": "lazy_user_op_module_builder", "method_params": "op_name", "method_startline": "395", "method_endline": "397", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "21", "method_nesting_level": "0"}}}, "hunk_16": {"Ismethod": 1, "added_lines": "414,416,417", "deleted_lines": null, "method_info": {"method_name": "eager_logical_user_op_module_builder", "method_params": "op_type_name", "method_startline": "414", "method_endline": "417", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_17": {"Ismethod": 1, "added_lines": "175,177,178", "deleted_lines": "175", "method_info": {"method_name": "api_consistent_user_op_builder", "method_params": "op_name", "method_startline": "175", "method_endline": "178", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "31", "method_nesting_level": "0"}}}, "hunk_18": {"Ismethod": 1, "added_lines": "194,195", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,user_op_or_module_class,op_name,op_type_name", "method_startline": "194", "method_endline": "195", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "21", "method_nesting_level": "1"}}}, "hunk_19": {"Ismethod": 1, "added_lines": "214,215,216", "deleted_lines": null, "method_info": {"method_name": "OpName", "method_params": "self,op_name", "method_startline": "213", "method_endline": "225", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "86", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "oneflow\\python\\test\\ops\\test_user_op_module.py", "file_new_name": "oneflow\\python\\test\\ops\\test_user_op_module.py", "file_complexity": {"file_NLOC": "80", "file_CCN": "11", "file_NToken": "649"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "58", "deleted_lines": "57,59", "method_info": {"method_name": "forward", "method_params": "self,x,y", "method_startline": "56", "method_endline": "63", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "50", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "93,94,95,96,97,98,99,100", "deleted_lines": null, "method_info": {"method_name": "test_user_op_module_builder_in_namespace", "method_params": "test_case", "method_startline": "93", "method_endline": "100", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "85", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90", "deleted_lines": null, "method_info": {"method_name": "_make_global_func", "method_params": "test_case,x_shape,y_shape", "method_startline": "66", "method_endline": "90", "method_complexity": {"method_NLOC": "18", "method_CCN": "1", "method_NToken": "119", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "71,72", "deleted_lines": null, "method_info": {"method_name": "_make_global_func.AddJob", "method_params": "shape", "method_startline": "71", "method_endline": "72", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "27", "method_nesting_level": "1"}}}}}}}}