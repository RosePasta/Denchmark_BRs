{"BR": {"BR_id": "3435", "BR_author": "chengtbf", "BRopenT": "2020-08-07T07:20:27Z", "BRcloseT": "2020-08-08T15:08:09Z", "BR_text": {"BRsummary": "CUDNN Error when run resnet50 on multi node (n &gt; 2)", "BRdescription": "\n <denchmark-link:https://github.com/ShawnXuan>@ShawnXuan</denchmark-link>\n  Try run resnet50 on multi node for benchmark in LeiNao machines. OneFlow work well on single node and double node, but will get BUG when node number is 3 or 4. Here is error log:\n <denchmark-code>F0806 23:42:58.183782 54414 cuda_util.cpp:97] Check failed: error == CUDNN_STATUS_SUCCESS (9 vs. 0) CUDNN_STATUS_NOT_SUPPORTED\n </denchmark-code>\n \n OneFlow can run BERT squard job on 4 node 32 GPU.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "chengtbf", "commentT": "2020-08-07T07:21:51Z", "comment_text": "\n \t\tI guess the reason for the bug is that we may have problems with the conv2d algorithm of CUDNN in the multi machine environment?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "chengtbf", "commentT": "2020-08-07T07:37:52Z", "comment_text": "\n \t\tI used to test 3 nodes with 24 gpus on v0.1.6, no error.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "chengtbf", "commentT": "2020-08-07T07:40:57Z", "comment_text": "\n \t\t\n I used to test 3 nodes with 24 gpus on v0.1.6, no error.\n \n v0.1.6 is success but v0.1.8 will error\uff1f\n \t\t"}}}, "commit": {"commit_id": "e3618206cc60532c38fa380085146d6d19ee23f5", "commit_author": "Juncheng", "commitT": "2020-08-08 23:08:08+08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "oneflow\\core\\operator\\operator.cpp", "file_new_name": "oneflow\\core\\operator\\operator.cpp", "file_complexity": {"file_NLOC": "843", "file_CCN": "172", "file_NToken": "8279"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "124", "deleted_lines": "124", "method_info": {"method_name": "oneflow::Operator::InferLogicalOutBlobDescs", "method_params": "BlobDesc4BnInOp,BatchAxis4Ibn,parallel_desc", "method_startline": "113", "method_endline": "125", "method_complexity": {"method_NLOC": "13", "method_CCN": "3", "method_NToken": "163", "method_nesting_level": "1"}}}}}}}}