{"BR": {"BR_id": "364", "BR_author": "chancez", "BRopenT": "2020-06-21T21:18:30Z", "BRcloseT": "2020-06-27T12:35:43Z", "BR_text": {"BRsummary": "Browser running out of memory when opening folders with many files", "BRdescription": "\n When you open a folder in the library page, it begins loading all images from that page. It would be ideal if it only loaded a small amount, and fetched additional photos as you scrolled. I have some folders which have thousands of images and it begins to consume a lot of memory in my browser and on the server if I open it.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "chancez", "commentT": "2020-06-21T22:53:02Z", "comment_text": "\n \t\tWe read directly from the filesystem, so there is no count, offset or caching we could use for infinite scrolling or pagination. This view is not meant for general searching / browsing and we didn't want to implement it at first for this exact reason.. Note that we automatically create albums from folders and you can also sort by file name in our other views. What is your specific use case? As a quick fix, we could limit the number of thumbs to 1000 or 10000 if this helps to prevent a situation where your server or browser becomes unresponsive. It will also help to ndex first, so that thumbs don't need to be rendered on the fly.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "chancez", "commentT": "2020-06-22T01:09:08Z", "comment_text": "\n \t\tI just have some directories that are not organized, and it didn't seem to show any albums for my folders until after indexing was finished. It's mostly just a foot gun page right now is the main issue.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "chancez", "commentT": "2020-06-22T01:17:39Z", "comment_text": "\n \t\tRight, you'll have to wait for indexing to complete before starting to browse. We'll limit the number of thumbs and/or disable on demand rendering for the file browser. It worked when I tested it with many photos even though it was slow as expected. Our users asked for a view to see all files in a folder, so that's what we do. How many photos are in your biggest folder?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "chancez", "commentT": "2020-06-22T02:42:51Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/lastzero>@lastzero</denchmark-link>\n  thousands.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "chancez", "commentT": "2020-06-22T04:12:59Z", "comment_text": "\n \t\tThanks for reporting this, hope we find a solution that works for everyone :)\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "chancez", "commentT": "2020-06-22T19:34:11Z", "comment_text": "\n \t\tAdded a limit of 500 files per folder, does this work for you?\n Fix is merged to master, new Docker images available for testing soon (~1 hour).\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "chancez", "commentT": "2020-06-27T12:35:43Z", "comment_text": "\n \t\tClosing this since we received no more feedback. 500 files should work, maybe more. We can always change it when there is demand.\n \t\t"}}}, "commit": {"commit_id": "f7fbc6e0dec48feaae09a6e913b4a26aea4e7aed", "commit_author": "Michael Mayer", "commitT": "2020-06-22 21:21:02+02:00", "commit_complexity": {"commit_NLOC": "0.5925925925925926", "commit_CCN": "0.5925925925925926", "commit_Nprams": "0.48148148148148145"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "frontend\\src\\model\\folder.js", "file_new_name": "frontend\\src\\model\\folder.js", "file_complexity": {"file_NLOC": "132", "file_CCN": "30", "file_NToken": "771"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "139,140", "deleted_lines": null, "method_info": {"method_name": "(anonymous)", "method_params": "", "method_startline": "115", "method_endline": "154", "method_complexity": {"method_NLOC": "31", "method_CCN": "8", "method_NToken": "244", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "139,140", "deleted_lines": null, "method_info": {"method_name": "search", "method_params": "path,params", "method_startline": "106", "method_endline": "155", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "62", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "frontend\\src\\pages\\library\\files.vue", "file_new_name": "frontend\\src\\pages\\library\\files.vue", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "166,167,363,364,392,400,409,411,412", "deleted_lines": "166,167,390,398,407"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "internal\\api\\folder.go", "file_new_name": "internal\\api\\folder.go", "file_complexity": {"file_NLOC": "92", "file_CCN": "15", "file_NToken": "671"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "37,38,40,41,42,43,44,45,46,48,49,50,79,93,94,96,97", "deleted_lines": "36,37,38,67,82", "method_info": {"method_name": "GetFolders", "method_params": "RouterGroup,Config,urlPath,rootName,string", "method_startline": "30", "method_endline": "104", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "49", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "37,38,40,41,42,43,44,45,46,48,49,50,79,93,94,96,97", "deleted_lines": "36,37,38,67,82", "method_info": {"method_name": "", "method_params": "", "method_startline": "31", "method_endline": "100", "method_complexity": {"method_NLOC": "58", "method_CCN": "12", "method_NToken": "486", "method_nesting_level": "0"}}}}}, "file_3": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "internal\\form\\folder_search.go", "file_complexity": {"file_NLOC": "24", "file_CCN": "5", "file_NToken": "144"}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "internal\\query\\files.go", "file_new_name": "internal\\query\\files.go", "file_complexity": {"file_NLOC": "72", "file_CCN": "19", "file_NToken": "653"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "28", "deleted_lines": null, "method_info": {"method_name": "Files", "method_params": "limit,int,string,bool", "method_startline": "28", "method_endline": "46", "method_complexity": {"method_NLOC": "14", "method_CCN": "4", "method_NToken": "109", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "10,21", "deleted_lines": "10", "method_info": {"method_name": "FilesByPath", "method_params": "limit,int,rootName,string", "method_startline": "10", "method_endline": "25", "method_complexity": {"method_NLOC": "14", "method_CCN": "2", "method_NToken": "103", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "28", "deleted_lines": "27", "method_info": {"method_name": "Files", "method_params": "int,int,string,bool", "method_startline": "27", "method_endline": "45", "method_complexity": {"method_NLOC": "14", "method_CCN": "4", "method_NToken": "110", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "10,21", "deleted_lines": "10", "method_info": {"method_name": "FilesByPath", "method_params": "rootName,string", "method_startline": "10", "method_endline": "24", "method_complexity": {"method_NLOC": "13", "method_CCN": "2", "method_NToken": "88", "method_nesting_level": "0"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "internal\\query\\files_test.go", "file_new_name": "internal\\query\\files_test.go", "file_complexity": {"file_NLOC": "103", "file_CCN": "28", "file_NToken": "723"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "12", "deleted_lines": "12", "method_info": {"method_name": "", "method_params": "", "method_startline": "11", "method_endline": "21", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "59", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "12", "deleted_lines": "12", "method_info": {"method_name": "TestFilesByPath", "method_params": "T", "method_startline": "10", "method_endline": "22", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "19", "method_nesting_level": "0"}}}}}}}}