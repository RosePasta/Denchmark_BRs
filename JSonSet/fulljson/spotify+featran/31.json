{"BR": {"BR_id": "31", "BR_author": "nevillelyh", "BRopenT": "2017-08-10T15:00:39Z", "BRcloseT": "2017-08-14T15:21:18Z", "BR_text": {"BRsummary": "IndexOutOfBoundsException when using HashOneHotEncoder with SparseVector", "BRdescription": "\n Not sure if user or featran code bug but here's the partial stacktrace:\n <denchmark-code>Caused by: java.lang.IndexOutOfBoundsException: 8239914 not in [0,8239912)\n \tat breeze.linalg.VectorBuilder.breeze$linalg$VectorBuilder$$boundsCheck(VectorBuilder.scala:92)\n \tat breeze.linalg.VectorBuilder.add(VectorBuilder.scala:112)\n \tat breeze.linalg.SparseVector$$anonfun$apply$2.apply(SparseVector.scala:196)\n \tat breeze.linalg.SparseVector$$anonfun$apply$2.apply(SparseVector.scala:195)\n \tat scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)\n \tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:73)\n \tat scala.collection.mutable.MutableList.foreach(MutableList.scala:30)\n \tat scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)\n \tat breeze.linalg.SparseVector$.apply(SparseVector.scala:195)\n \tat com.spotify.featran.FeatureBuilder$$anon$5.result(FeatureBuilder.scala:134)\n \tat com.spotify.featran.FeatureBuilder$$anon$5.result(FeatureBuilder.scala:117)\n \tat com.spotify.featran.FeatureExtractor$$anonfun$featureValuesWithOriginal$1.apply(FeatureExtractor.scala:96)\n \tat com.spotify.featran.FeatureExtractor$$anonfun$featureValuesWithOriginal$1.apply(FeatureExtractor.scala:94)\n \tat com.spotify.scio.util.Functions$$anon$7.processElement(Functions.scala:145)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "nevillelyh", "commentT": "2017-08-14T04:51:59Z", "comment_text": "\n \t\tThis case can be reproduced when HashOneHotEncoder (using the defaults for hashBucketSize and sizeScalingFactor) comes before OneHotEncoder in the FeatureSpec. Since OneHotEncoder doesn't call fb.init(), the length set for SparseVector stays the same as the one set by HashOneHotEncoder (i.e. smaller than expected due to collisions), which causes the OOB exception to be thrown by VectorBuilder. I think it's possible that other encoders that override buildFeatures without calling fb.init() first could also cause this bug.\n Suggested fix: add fb.init() to overridden buildFeature methods where needed.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "nevillelyh", "commentT": "2017-08-14T05:08:01Z", "comment_text": "\n \t\tActually  should be called once per record i.e. in <denchmark-link:https://github.com/spotify/featran/blob/master/core/src/main/scala/com/spotify/featran/FeatureSpec.scala#L283>https://github.com/spotify/featran/blob/master/core/src/main/scala/com/spotify/featran/FeatureSpec.scala#L283</denchmark-link>\n  where  is the size of all transformers summed up and not individual ones. So we should remove  in s.\n \t\t"}}}, "commit": {"commit_id": "2c0321325338cf0db88f9acbca5886d75e8fc734", "commit_author": "fallonchen", "commitT": "2017-08-14 11:21:06-04:00", "commit_complexity": {"commit_NLOC": "0.6666666666666666", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "core\\src\\main\\scala\\com\\spotify\\featran\\transformers\\HashNHotEncoder.scala", "file_new_name": "core\\src\\main\\scala\\com\\spotify\\featran\\transformers\\HashNHotEncoder.scala", "file_complexity": {"file_NLOC": "30", "file_CCN": "7", "file_NToken": "278"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "72", "method_info": {"method_name": "buildFeatures", "method_params": "Int", "method_startline": "71", "method_endline": "88", "method_complexity": {"method_NLOC": "18", "method_CCN": "5", "method_NToken": "142", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "core\\src\\main\\scala\\com\\spotify\\featran\\transformers\\HashNHotWeightedEncoder.scala", "file_new_name": "core\\src\\main\\scala\\com\\spotify\\featran\\transformers\\HashNHotWeightedEncoder.scala", "file_complexity": {"file_NLOC": "35", "file_CCN": "7", "file_NToken": "324"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "77", "method_info": {"method_name": "buildFeatures", "method_params": "Int", "method_startline": "74", "method_endline": "95", "method_complexity": {"method_NLOC": "22", "method_CCN": "5", "method_NToken": "179", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "core\\src\\main\\scala\\com\\spotify\\featran\\transformers\\HashOneHotEncoder.scala", "file_new_name": "core\\src\\main\\scala\\com\\spotify\\featran\\transformers\\HashOneHotEncoder.scala", "file_complexity": {"file_NLOC": "54", "file_CCN": "14", "file_NToken": "536"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "73", "method_info": {"method_name": "buildFeatures", "method_params": "Int", "method_startline": "72", "method_endline": "84", "method_complexity": {"method_NLOC": "13", "method_CCN": "3", "method_NToken": "100", "method_nesting_level": "0"}}}}}}}}