{"BR": {"BR_id": "430", "BR_author": "chunfuchen", "BRopenT": "2017-09-26T16:10:09Z", "BRcloseT": "2017-09-26T16:26:44Z", "BR_text": {"BRsummary": "Distributed Learning on ResNet", "BRdescription": "\n I follow the instruction to setup distributed learning environment and modify the code in imagenet-resnet.py for distribution learning.\n <denchmark-link:http://tensorpack.readthedocs.io/en/latest/modules/train.html#tensorpack.train.DistributedTrainerReplicated>http://tensorpack.readthedocs.io/en/latest/modules/train.html#tensorpack.train.DistributedTrainerReplicated</denchmark-link>\n \n I encounter the issue when the worker is trying to build the graph model. May I direct use imagenet_resnet_utils.py without modification? Or the changes are needed? (Details are provided below)\n Any suggestion is appreciated.\n Here is error trace:\n <denchmark-code>[0926 11:56:44 @distributed.py:73] My role in the cluster: job=worker, task=0\n [0926 11:56:44 @input_source.py:235] Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...\n [0926 11:56:44 @multigpu.py:87] Building graph for training tower 0...\n [0926 11:56:44 @registry.py:121] tower0/conv0 input: [None, 3, 224, 224]\n Traceback (most recent call last):\n   File \"examples/ResNet/imagenet-resnet-dist.py\", line 169, in <module>\n     DistributedTrainerReplicated(config, server).train()\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/distributed.py\", line 92, in __init__\n     super(DistributedTrainerReplicated, self).__init__(config)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/base.py\", line 93, in __init__\n     self._setup()   # subclass will setup the graph and InputSource\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/distributed.py\", line 215, in _setup\n     use_vs=[True] * self.config.nr_tower)  # open vs at each tower\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/multigpu.py\", line 94, in build_on_multi_tower\n     ret.append(func())\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/distributed.py\", line 213, in <lambda>\n     self.model, self._input_source),\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/multigpu.py\", line 113, in _build_graph_get_grads\n     model.build_graph(input)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/graph_builder/model_desc.py\", line 122, in build_graph\n     self._build_graph(inputs)\n   File \"examples/ResNet/imagenet-resnet-dist.py\", line 67, in _build_graph\n     preresnet_group if self.preact else resnet_group, self.block_func)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/examples/ResNet/imagenet_resnet_utils.py\", line 204, in resnet_backbone\n     .Conv2D('conv0', 64, 7, stride=2, nl=BNReLU)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/models/linearwrap.py\", line 48, in f\n     ret = layer(name, self._t, *args, **kwargs)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/models/registry.py\", line 124, in wrapped_func\n     outputs = func(*args, **actual_args)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/models/conv2d.py\", line 61, in Conv2D\n     W = tf.get_variable('W', filter_shape, initializer=W_init)\n   File \"/home/chenrich/.tensorflowEnvPy3Alt/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 1065, in get_variable\n     use_resource=use_resource, custom_getter=custom_getter)\n   File \"/home/chenrich/.tensorflowEnvPy3Alt/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 962, in get_variable\n     use_resource=use_resource, custom_getter=custom_getter)\n   File \"/home/chenrich/.tensorflowEnvPy3Alt/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 360, in get_variable\n     validate_shape=validate_shape, use_resource=use_resource)\n   File \"/home/chenrich/.tensorflowEnvPy3Alt/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 1405, in wrapped_custom_getter\n     *args, **kwargs)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/utility.py\", line 36, in __call__\n     return getter(name, *args, **kwargs)\n   File \"/mnt/nvme1/chenrich/Developer/tensorpack-0.5.0/tensorpack/train/utility.py\", line 33, in __call__\n     collections.remove(tf.GraphKeys.GLOBAL_VARIABLES)\n KeyError: 'variables'\n </denchmark-code>\n \n I launch my codes as:\n \n \n The modified code is available at\n <denchmark-link:https://gist.github.com/chunfuchen/d8f6db7183ba94ac416948029c366387>https://gist.github.com/chunfuchen/d8f6db7183ba94ac416948029c366387</denchmark-link>\n \n The modifications are:\n \n TrainCfg: wrapper dataflow into data. (L117)\n \n return TrainConfig(\n         model=model,\n         data=QueueInput(dataset_train),\n         # dataflow=dataset_train,\n         callbacks=callbacks,\n         steps_per_epoch=5000,\n         max_epoch=110,\n         nr_tower=nr_tower\n     )\n \n Setup Distributed Learners. (Line 162)\n \n cluster_spec = tf.train.ClusterSpec({\n             'ps': ['localhost:2222', 'localhost:2232'],\n             'worker': ['localhost:2223', 'localhost:2233']\n         })\n         server = tf.train.Server(\n             cluster_spec, job_name=args.job, \n             task_index=args.task, config=get_default_sess_config())\n         DistributedTrainerReplicated(config, server).train()```\n Note: I was testing on single machine but eventually I will deploy on a cluster.\n \t"}, "comments": {}}, "commit": {"commit_id": "c8028236d8e061eb23da98770761370acfe76bce", "commit_author": "Yuxin Wu", "commitT": "2017-09-26 09:26:27-07:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorpack\\train\\distributed.py", "file_new_name": "tensorpack\\train\\distributed.py", "file_complexity": {"file_NLOC": "231", "file_CCN": "42", "file_NToken": "1664"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "207,208,209,210,211,212,213,214", "deleted_lines": "208,209,210,211,212,213,214,215,216", "method_info": {"method_name": "_setup", "method_params": "self", "method_startline": "194", "method_endline": "242", "method_complexity": {"method_NLOC": "38", "method_CCN": "5", "method_NToken": "323", "method_nesting_level": "1"}}}}}}}}