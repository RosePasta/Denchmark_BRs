{"BR": {"BR_id": "673", "BR_author": "vfdev-5", "BRopenT": "2018-02-25T22:58:10Z", "BRcloseT": "2018-03-02T08:03:23Z", "BR_text": {"BRsummary": "Infinite loop with MultiProcessMapDataZMQ", "BRdescription": "\n There is an infinite loop with the following code:\n <denchmark-code>from tensorpack.dataflow import MultiProcessMapDataZMQ, FakeData\n \n ds = FakeData(((50, 50, 3), (1,)))\n \n import numpy as np\n \n def proc(dp):\n     img = np.random.randint(0, 255, size=(1012, 1012, 3))\n     img[img < 120] = 0\n     return dp\n \n mp_ds = MultiProcessMapDataZMQ(ds, map_func=proc, nr_proc=10, strict=True)\n \n mp_ds.reset_state()\n \n for i, (_, _) in enumerate(mp_ds.get_data()):\n     if i % 100 == 0:\n         print(i, end=\" . \", flush=True)\n </denchmark-code>\n \n Important part is  and small size of . If change size to (512, 512, 3), then loop ends properly. Probably, there is something with buffer filling and dequeing...\n Execution stucks <denchmark-link:https://github.com/ppwwyyxx/tensorpack/blob/master/tensorpack/dataflow/parallel_map.py#L81>here</denchmark-link>\n .\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "vfdev-5", "commentT": "2018-02-25T23:01:22Z", "comment_text": "\n \t\tCannot reproduce. Please update\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "vfdev-5", "commentT": "2018-02-25T23:11:44Z", "comment_text": "\n \t\tActually, I have already updated to the master. Try a smaller size, for example (10, 10, 3) in FakeData\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "vfdev-5", "commentT": "2018-02-26T07:29:27Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ppwwyyxx>@ppwwyyxx</denchmark-link>\n  could you reproduce the issue ?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "vfdev-5", "commentT": "2018-02-26T07:47:00Z", "comment_text": "\n \t\tI can not. Maybe upgrade/reinstall msgpack?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "vfdev-5", "commentT": "2018-02-26T08:01:23Z", "comment_text": "\n \t\tCould you try please this code too:\n from tensorpack.dataflow import MultiProcessMapDataZMQ, RNGDataFlow, MultiThreadMapData\n \n \n dataset = [(\"file_%i\" % i, i % 3) for i in range(500)]\n \n class TestDataset(RNGDataFlow):\n     \n     def __init__(self, dataset):\n         super(TestDataset, self).__init__()\n         self.dataset = dataset\n         \n     def size(self):\n         return len(self.dataset)\n         \n     def get_data(self):\n         for k in range(len(self.dataset)):\n             yield self.dataset[k]            \n \n test_dataset = TestDataset(dataset)\n test_dataset.size()\n \n def data_transform(dp):\n     return dp\n \n mp_test_dataset = MultiProcessMapDataZMQ(test_dataset, nr_proc=10, map_func=data_transform, strict=True)\n \n mp_test_dataset.reset_state()\n \n \n for i, (fp, _) in enumerate(mp_test_dataset.get_data()):\n     if i % 100 == 0:\n         print(i, end=\" . \", flush=True)\n Okay, I'll try to upgrade msgpack, which version do you use ?\n Version of msgpack I use is msgpack (0.5.6)\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "vfdev-5", "commentT": "2018-02-26T08:03:17Z", "comment_text": "\n \t\tThe code successfully exits. I use the latest version of msgpack & msgpack-numpy. Maybe also try upgrading pyzmq.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "vfdev-5", "commentT": "2018-02-26T08:08:12Z", "comment_text": "\n \t\tStrange configuration I have. Here is a list of versions of some of packages I have:\n <denchmark-code>msgpack (0.5.6)\n msgpack-numpy (0.4.3)\n msgpack-python (0.5.5)\n numpy (1.14.1)\n pickleshare (0.7.4)\n pip (9.0.1)\n pyzmq (17.0.0)\n tensorpack (0.8.1)\n </denchmark-code>\n \n on Ubuntu 16.04\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "vfdev-5", "commentT": "2018-02-26T08:13:39Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/msgpack/msgpack-python#pypi-package-name>https://github.com/msgpack/msgpack-python#pypi-package-name</denchmark-link>\n \n Maybe related.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "vfdev-5", "commentT": "2018-02-26T09:29:29Z", "comment_text": "\n \t\tI could reproduce the issue using this docker file. Could you try it please?\n <denchmark-link:https://github.com/ppwwyyxx/tensorpack/files/1757877/Dockerfile.txt>Dockerfile.txt</denchmark-link>\n \n <denchmark-link:https://github.com/ppwwyyxx/tensorpack/files/1757878/test_tensorpack_inf_loop.txt>test_tensorpack_inf_loop.txt</denchmark-link>\n \n Please remove .txt extensions from Dockerfile and replace it for  by . Github does not allow include py and dockerfile as is.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "vfdev-5", "commentT": "2018-02-27T00:43:23Z", "comment_text": "\n \t\tI can reproduce the issue in docker. Looks like I'm using zmq socket in a wrong way where messages can get lost if the sockets aren't created with a desired order.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "vfdev-5", "commentT": "2018-03-02T09:58:30Z", "comment_text": "\n \t\tAwesome ! \ud83c\udf89\n \t\t"}}}, "commit": {"commit_id": "760b924a2fc99249483cad6979c63a3f1054a57f", "commit_author": "Yuxin Wu", "commitT": "2018-03-02 00:02:11-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tensorpack\\dataflow\\parallel_map.py", "file_new_name": "tensorpack\\dataflow\\parallel_map.py", "file_complexity": {"file_NLOC": "312", "file_CCN": "72", "file_NToken": "1933"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "258", "deleted_lines": "259", "method_info": {"method_name": "_reset_once", "method_params": "self", "method_startline": "256", "method_endline": "274", "method_complexity": {"method_NLOC": "16", "method_CCN": "3", "method_NToken": "168", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "280", "deleted_lines": null, "method_info": {"method_name": "_send", "method_params": "self,dp", "method_startline": "279", "method_endline": "281", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "30", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "229", "deleted_lines": "230", "method_info": {"method_name": "run", "method_params": "self", "method_startline": "227", "method_endline": "237", "method_complexity": {"method_NLOC": "10", "method_CCN": "2", "method_NToken": "89", "method_nesting_level": "2"}}}}}}}}