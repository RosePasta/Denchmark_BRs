{"BR": {"BR_id": "542", "BR_author": "wzh90", "BRopenT": "2019-11-14T01:19:29Z", "BRcloseT": "2020-10-22T07:18:34Z", "BR_text": {"BRsummary": "Maybe a bug of method GetUnconnectedOutLayers  in dnn.go", "BRdescription": "\n I think there is a  bug ...\n Please check it.\n gocv/dnn.go:405\n pcids := *(*[]int)(unsafe.Pointer(h))\n Maybe it should be changed to\n pcids := *(*[]C.int)(unsafe.Pointer(h))\n it make method <denchmark-link:https://github.com/hybridgroup/gocv/blob/b18291665d630fc258d89794f103190d4e213e72/dnn.go#L396>GetUnconnectedOutLayers()</denchmark-link>\n  return an indeterminate result. It is RAM addr or not\uff1f\n Please check it . Thx\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "wzh90", "commentT": "2019-11-26T10:14:35Z", "comment_text": "\n \t\tnobody reply this\uff1f\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "wzh90", "commentT": "2019-12-20T07:14:35Z", "comment_text": "\n \t\tHi @hawkwzh can you please provide a specific test case so we can reproduce it? Thank you.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "wzh90", "commentT": "2019-12-23T03:42:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/deadprogram>@deadprogram</denchmark-link>\n  I want to use darknet yolov3 to detect object. Just try it, will be reproduced. And it can be solved  with my solution.\n Then I try to retrieve my code for this comment.\n Thx.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "wzh90", "commentT": "2019-12-24T05:26:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/deadprogram>@deadprogram</denchmark-link>\n  Oh , I made a mistake.\n gocv/dnn.go:162  is right.\n I have re edited comments.\n But ,I'm sure gocv/dnn.go:405 should bepcids := *(*[]C.int)(unsafe.Pointer(h)).\n because incorrect result of net.GetUnconnectedOutLayers()method call  when using darknet(yolov3) to detecting.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "wzh90", "commentT": "2019-12-24T08:39:13Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/deadprogram>@deadprogram</denchmark-link>\n \n Well.. I try to use tensorflow object detection.\n <denchmark-link:https://github.com/opencv/opencv/wiki/TensorFlow-Object-Detection-API>TensorFlow Object Detection</denchmark-link>\n \n like this\n \n \n I want to read the layer names, but result is :\n \n \"detection_out_final\" is right layer name.\n For this mistake, I changed  gocv/dnn.go:405 to\n pcids := *(*[]C.int)(unsafe.Pointer(h))\n And use\n <denchmark-code>ids := net.GetUnconnectedOutLayers()\n for _, id := range ids {\n \tlayer := net.GetLayer(id)\n \tfmt.Printf(\"name : [%v]\", layer.GetName())\n }\n </denchmark-code>\n \n can get right layer name.\n use Model:<denchmark-link:http://download.tensorflow.org/models/object_detection/faster_rcnn_inception_v2_coco_2018_01_28.tar.gz>weights</denchmark-link>\n \n use Config:<denchmark-link:https://github.com/opencv/opencv_extra/blob/master/testdata/dnn/faster_rcnn_inception_v2_coco_2018_01_28.pbtxt>config</denchmark-link>\n \n please check it .\n Thx.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "wzh90", "commentT": "2019-12-28T23:27:28Z", "comment_text": "\n \t\tI have the same issue as @hawkwzh describes.\n I fail to get gocv running with YOLO V3.\n func (net *Net) GetUnconnectedOutLayers() (ids []int)\n returns wrong ids.\n I compared the result with <denchmark-link:https://docs.opencv.org/master/da/d9d/tutorial_dnn_yolo.html>YOLO C++ OpenCV Tutorial</denchmark-link>\n \n <denchmark-link:https://github.com/opencv/opencv/blob/master/samples/dnn/object_detection.cpp>Source</denchmark-link>\n \n Line 324 \n gocv returns: [974957576392 254 0]\n opencv demo: [200 227 254]\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "wzh90", "commentT": "2020-03-09T08:17:34Z", "comment_text": "\n \t\tMy solution:\n <denchmark-code>func (net *Net) GetUnconnectedOutLayers() (ids []int) {\n \tcids := C.IntVector{}\n \tC.Net_GetUnconnectedOutLayers((C.Net)(net.p), &cids)\n \tdefer C.free(unsafe.Pointer(cids.val))\n \n \th := &reflect.SliceHeader{\n \t\tData: uintptr(unsafe.Pointer(cids.val)),\n \t\tLen:  int(cids.length),\n \t\tCap:  int(cids.length),\n \t}\n \tpcids := *(*[]C.int)(unsafe.Pointer(h))\n \n \tfor i := 0; i < int(cids.length); i++ {\n \t\tids = append(ids, int(pcids[i]))\n \t}\n \treturn\n }\n \n func (net *Net) GetLayerNames() (names []string) {\n \tcstrs := C.CStrings{}\n \tC.Net_GetLayerNames((C.Net)(net.p), &cstrs)\n \tdefer C.free(unsafe.Pointer(cstrs.strs))\n \n \th := &reflect.SliceHeader{\n \t\tData: uintptr(unsafe.Pointer(cstrs.strs)),\n \t\tLen:  int(cstrs.length),\n \t\tCap:  int(cstrs.length),\n \t}\n \tpcstrs := *(*[](*C.char))(unsafe.Pointer(h))\n \n \tfor i := 0; i < int(cstrs.length); i++ {\n \t\tnames = append(names, C.GoString(pcstrs[i]))\n \t}\n \treturn\n }\n </denchmark-code>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "wzh90", "commentT": "2020-06-13T19:46:15Z", "comment_text": "\n \t\tI also encountered the same issue as described by @hawkwzh  with yolov3 and OpenCV 4.3, changing the code as follows fixed the issue for me as well.\n pcids := *(*[]C.int)(unsafe.Pointer(h))\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "wzh90", "commentT": "2020-09-08T09:51:42Z", "comment_text": "\n \t\tI have the same issue and <denchmark-link:https://github.com/intgogo>@intgogo</denchmark-link>\n  's solution works for me. Is there no one to make a PR?\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "wzh90", "commentT": "2020-09-08T17:56:30Z", "comment_text": "\n \t\tThis was fixed by <denchmark-link:https://github.com/hybridgroup/gocv/pull/732>#732</denchmark-link>\n  and is now in the  branch so I will mark as \"next-release\".\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "wzh90", "commentT": "2020-10-22T07:18:34Z", "comment_text": "\n \t\tThis has now been released so closing. Thanks!\n \t\t"}}}, "commit": {"commit_id": "c5018c25e42b7345612ebc9b05d6e6bb7016ba09", "commit_author": "deadprogram", "commitT": "2020-09-08 19:22:51+02:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "dnn_test.go", "file_new_name": "dnn_test.go", "file_complexity": {"file_NLOC": "382", "file_CCN": "105", "file_NToken": "2660"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "49,50,51,52,58,59,60,61", "deleted_lines": null, "method_info": {"method_name": "checkNet", "method_params": "T,Net", "method_startline": "10", "method_endline": "91", "method_complexity": {"method_NLOC": "66", "method_CCN": "21", "method_NToken": "493", "method_nesting_level": "0"}}}}}}}}