{"BR": {"BR_id": "1010", "BR_author": "kmcentush", "BRopenT": "2020-01-23T20:04:31Z", "BRcloseT": "2020-03-06T00:32:44Z", "BR_text": {"BRsummary": "Selectbox Search Returning Unexpected Results", "BRdescription": "\n <denchmark-h:h1>Summary</denchmark-h>\n \n I\u2019m working with the select box and I noticed that, when I start typing to help narrow down the search window, it returns results that I am not expecting.\n <denchmark-h:h1>Steps to reproduce</denchmark-h>\n \n What are the steps we should take to reproduce the bug:\n \n Run the following streamlit code.\n import streamlit as st; st.selectbox('Example', ['None'] + [i for i in range(20)]);\n In the selectbox, type \"8\".\n \n <denchmark-h:h2>Expected behavior:</denchmark-h>\n \n Searching \"8\" should only return results \"8\" and \"18\", as they contain the character \"8\" in them.\n <denchmark-h:h2>Actual behavior:</denchmark-h>\n \n The results \"7\", \"8\", \"17\", and \"18\" are returned.\n I believe that the underlying search function is also returning results whose index has an \"8\" in it. After all, because we padded the initial selectbox with \"None\", the values of \"7\" and \"17\" are actually at indices \"8\" and \"18\".\n Typing \"0\" seems to confirm my suspicions, as \"None\" is returned (it's at index 0) along with \"0\" (as expected), \"9\" (which is index 10), \"10\" (as expected), and \"19\" (which is index 20).\n <denchmark-h:h2>Is this a regression?</denchmark-h>\n \n No idea. I have only ever used streamlit 0.53.0\n <denchmark-h:h1>Debug info</denchmark-h>\n \n \n Streamlit version: (get it with $ streamlit version): 0.53.0\n Python version: (get it with $ python --version): 3.7.4\n Using Conda? PipEnv? PyEnv? Pex?: Conda\n OS version: Windows 10 Pro 64-bit\n Browser version: Chrome Version 79.0.3945.130 (Official Build) (64-bit)\n \n <denchmark-h:h1>Additional information</denchmark-h>\n \n See discussion here: <denchmark-link:https://discuss.streamlit.io/t/bug-w-searching-in-selectbox/1717>https://discuss.streamlit.io/t/bug-w-searching-in-selectbox/1717</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "kmcentush", "commentT": "2020-01-28T21:50:22Z", "comment_text": "\n \t\tThanks for the bug report <denchmark-link:https://github.com/kmcentush>@kmcentush</denchmark-link>\n  !\n I've added it to our board for triage.\n BaseWeb's <denchmark-link:https://baseweb.design/components/select/?code=import%20*%20as%20React%20from%20%22react%22%3B%0Aimport%20%7B%20Select%2C%20TYPE%20%7D%20from%20%22baseui%2Fselect%22%3B%0A%0Aexport%20default%20()%20%3D%3E%20%7B%0A%20%20const%20%5Bvalue%2C%20setValue%5D%20%3D%20React.useState(%5B%5D)%3B%0A%20%20return%20(%0A%20%20%20%20%3CSelect%0A%20%20%20%20%20%20options%3D%7B%5B%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20%22AliceBlue%22%2C%20id%3A%20%22%23F0F8FF%22%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20%22AntiqueWhite%22%2C%20id%3A%20%22%23FAEBD7%22%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20%22Aqua%22%2C%20id%3A%20%22%2300FFFF%22%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20%22Aquamarine%22%2C%20id%3A%20%22%237FFFD4%22%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20%22Azure%22%2C%20id%3A%20%22%23F0FFFF%22%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20%22Beige%22%2C%20id%3A%20%22%23F5F5DC%22%20%7D%0A%20%20%20%20%20%20%5D%7D%0A%20%20%20%20%20%20value%3D%7Bvalue%7D%0A%20%20%20%20%20%20type%3D%7BTYPE.search%7D%0A%20%20%20%20%20%20placeholder%3D%22Select%20color%22%0A%20%20%20%20%20%20onChange%3D%7Bparams%20%3D%3E%20setValue(params.value)%7D%0A%20%20%20%20%20%20onInputChange%3D%7Bevent%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20console.log(event)%3B%0A%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%2F%3E%0A%20%20)%3B%0A%7D>selectbox code sandbox</denchmark-link>\n  behaves the same way so it seems to be the default search behavior\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "kmcentush", "commentT": "2020-01-28T22:27:24Z", "comment_text": "\n \t\tMaybe we can use onInputChange to limit the search to only the label and not the id\n <denchmark-link:https://github.com/uber/baseweb/blob/3d6e3c4a40d4787aa080dc48bd8b7ffe121d61e9/src/select/__tests__/select-async-options.scenario.js#L31>https://github.com/uber/baseweb/blob/3d6e3c4a40d4787aa080dc48bd8b7ffe121d61e9/src/select/__tests__/select-async-options.scenario.js#L31</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "kmcentush", "commentT": "2020-03-03T23:47:13Z", "comment_text": "\n \t\tWe can probably override the original filter: <denchmark-link:https://github.com/uber/baseweb/blob/3d6e3c4a40d4787aa080dc48bd8b7ffe121d61e9/src/select/utils/default-filter-options.js>https://github.com/uber/baseweb/blob/3d6e3c4a40d4787aa080dc48bd8b7ffe121d61e9/src/select/utils/default-filter-options.js</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "kmcentush", "commentT": "2020-03-06T00:32:44Z", "comment_text": "\n \t\tThis should be fixed in <denchmark-link:https://github.com/streamlit/streamlit/pull/1182>#1182</denchmark-link>\n . Please, reopen if not.\n \t\t"}}}, "commit": {"commit_id": "448ebbf26ac7c34797eab02b2758bfa916f6843d", "commit_author": "Matteo", "commitT": "2020-03-05 16:30:29-08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "frontend\\src\\components\\widgets\\Selectbox\\Selectbox.test.tsx", "file_new_name": "frontend\\src\\components\\widgets\\Selectbox\\Selectbox.test.tsx", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "frontend\\src\\components\\widgets\\Selectbox\\Selectbox.tsx", "file_new_name": "frontend\\src\\components\\widgets\\Selectbox\\Selectbox.tsx", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "19,71,72,73,74,75,76,77,78,79,80,81,82,121", "deleted_lines": "19"}}}}}}