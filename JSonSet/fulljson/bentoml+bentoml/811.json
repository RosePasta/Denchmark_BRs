{"BR": {"BR_id": "811", "BR_author": "jondoering", "BRopenT": "2020-06-17T13:18:59Z", "BRcloseT": "2020-06-18T05:10:25Z", "BR_text": {"BRsummary": "--enable-microbatch raises error in 0.8.1 with XGboost example", "BRdescription": "\n Describe the bug\n BentoML throws an errotr when --enable-microbatch.\n The model was build using the XGboost Titanic example <denchmark-link:https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/xgboost/titanic-survival-prediction/xgboost-titanic-survival-prediction.ipynb>https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/xgboost/titanic-survival-prediction/xgboost-titanic-survival-prediction.ipynb</denchmark-link>\n \n Screenshots/Logs\n [2020-06-16 20:13:03,530] ERROR - Exception on /predict [POST]\n Traceback (most recent call last):\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/server/bento_api_server.py\u201d, line 265, in api_func\n response_body = api.handle_batch_request(request)\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/service.py\u201d, line 122, in handle_batch_request\n responses = self.handler.handle_batch_request(requests, self.func)\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/adapters/dataframe_input.py\u201d, line 302, in handle_batch_request\n result_conc = func(df_conc)\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/service.py\u201d, line 101, in _wrapped_func\n resp = self._func(*args, **kwargs)\n File \u201c/Users/jonathan/bentoml/repository/TitanicSurvivalPredictionXgBoost/20200615214647_8709F8/TitanicSurvivalPredictionXgBoost/xgboost_titanic_bento_service.py\u201d, line 14, in predict\n data = xgb.DMatrix(data=df[[\u2018Pclass\u2019, \u2018Age\u2019, \u2018Fare\u2019, \u2018SibSp\u2019, \u2018Parch\u2019]])\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/pandas/core/frame.py\u201d, line 2679, in \n return self._getitem_array(key)\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/pandas/core/frame.py\u201d, line 2723, in _getitem_array\n indexer = self.loc._convert_to_indexer(key, axis=1)\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/pandas/core/indexing.py\u201d, line 1327, in _convert_to_indexer\n .format(mask=objarr[mask]))\n KeyError: \u201c[\u2018Pclass\u2019 \u2018Age\u2019 \u2018Fare\u2019 \u2018SibSp\u2019 \u2018Parch\u2019] not in index\u201d\n 127.0.0.1 - - [16/Jun/2020 20:13:03] \u201cPOST /predict HTTP/1.1\" 500 -\n [2020-06-16 20:13:03,540] ERROR - Traceback (most recent call last):\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/marshal/marshal.py\u201d, line 217, in request_dispatcher\n resp = await self.batch_handlers<denchmark-link:req>api_name</denchmark-link>\n \n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/marshal/dispatcher.py\u201d, line 144, in _func\n raise r\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/marshal/dispatcher.py\u201d, line 204, in outbound_call\n outputs = await self.callback(tuple(d for _, d, _ in inputs_info))\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/marshal/marshal.py\u201d, line 110, in _batch_handler_template\n return await func(requests, api_name)\n File \u201c/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/bentoml/marshal/marshal.py\u201d, line 279, in _batch_handler_template\n payload=SimpleResponse(resp.status, resp.headers, raw),\n bentoml.exceptions.RemoteException: Bad response status from model server:\n 500\n b\u2019An error has occurred in BentoML user code when handling this request, find the error details in server logs\u2019 (bearbeitet)\n Environment:\n \n OS: MacOS 10.14.6\n Python 3.6.5, BentoML-8.1\n \n \n Issues was already discussed on slack\n <denchmark-link:https://bentoml.slack.com/archives/CKRANBHPH/p1592377225457000>https://bentoml.slack.com/archives/CKRANBHPH/p1592377225457000</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jondoering", "commentT": "2020-06-17T23:56:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/bojiang>@bojiang</denchmark-link>\n \n After applying this fix the service now fails with following error:\n macbooks-mbp-2:bentoml-dev Jonathan$ bentoml serve-gunicorn '/Users/jonathan/bentoml/repository/TitanicSurvivalPredictionXgBoost/20200616225811_5E4522' --enable-microbatch\n [2020-06-18 00:51:57,004] INFO - get_gunicorn_num_of_workers: 5, calculated by cpu count\n [2020-06-18 00:51:57,023] INFO - Running micro batch service on :5000\n [2020-06-18 00:51:57 +0100] [26954] [INFO] Starting gunicorn 20.0.4\n [2020-06-18 00:51:57 +0100] [26954] [INFO] Listening at: <denchmark-link:http://0.0.0.0:64494>http://0.0.0.0:64494</denchmark-link>\n  (26954)\n [2020-06-18 00:51:57 +0100] [26954] [INFO] Using worker: sync\n [2020-06-18 00:51:57 +0100] [26960] [INFO] Booting worker with pid: 26960\n [2020-06-18 00:51:57 +0100] [26958] [INFO] Starting gunicorn 20.0.4\n [2020-06-18 00:51:57 +0100] [26962] [INFO] Booting worker with pid: 26962\n [2020-06-18 00:51:57 +0100] [26958] [INFO] Listening at: <denchmark-link:http://0.0.0.0:5000>http://0.0.0.0:5000</denchmark-link>\n  (26958)\n [2020-06-18 00:51:57 +0100] [26958] [INFO] Using worker: aiohttp.worker.GunicornWebWorker\n [2020-06-18 00:51:57 +0100] [26963] [INFO] Booting worker with pid: 26963\n [2020-06-18 00:51:57,717] WARNING - Saved BentoService bundle version mismatch: loading BentoService bundle create with BentoML version 0.8.1,  but loading from BentoML version 0.4.9+314.ge56eace\n [2020-06-18 00:51:57 +0100] [26963] [ERROR] Exception in worker process\n Traceback (most recent call last):\n File \"/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\n worker.init_process()\n File \"/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/aiohttp/worker.py\", line 52, in init_process\n super().init_process()\n File \"/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/gunicorn/workers/base.py\", line 119, in init_process\n self.load_wsgi()\n File \"/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/gunicorn/workers/base.py\", line 144, in load_wsgi\n self.wsgi = self.app.wsgi()\n File \"/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/gunicorn/app/base.py\", line 67, in wsgi\n self.callable = self.load()\n File \"/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/BentoML-0.4.9+314.ge56eace-py3.6.egg/bentoml/server/marshal_server.py\", line 79, in load\n outbound_workers=self.outbound_workers,\n File \"/Users/Jonathan/anaconda3/envs/clipper/lib/python3.6/site-packages/BentoML-0.4.9+314.ge56eace-py3.6.egg/bentoml/marshal/marshal.py\", line 44, in \n super(_MarshalService, self).( will be deprecated after BentoML 1.0, use bentoml.adapters.* instead\n [2020-06-18 00:51:58,831] WARNING - DataframeHandler will be deprecated after BentoML 1.0, use DataframeInput instead\n [00:51:58] WARNING: /Users/travis/build/dmlc/xgboost/src/objective/regression_obj.cu:170: reg:linear is now deprecated in favor of reg:squarederror.\n [00:51:58] WARNING: /Users/travis/build/dmlc/xgboost/src/objective/regression_obj.cu:170: reg:linear is now deprecated in favor of reg:squarederror.\n [2020-06-18 00:51:59 +0100] [26962] [INFO] Worker exiting (pid: 26962)\n [2020-06-18 00:51:59 +0100] [26960] [INFO] Worker exiting (pid: 26960)\n [2020-06-18 00:51:59 +0100] [26954] [INFO] Shutting down: Master\n [2020-06-18 00:51:59 +0100] [26954] [INFO] Reason: Worker failed to boot.\n My config looks like this:\n macbooks-mbp-2:bentoml-dev Jonathan$ bentoml config view\n [core]\n debug = false\n usage_tracking = true\n bentoml_deploy_version = {BENTOML_VERSION}\n default_docker_base_image = bentoml/model-server:{BENTOML_VERSION}\n mb_max_latency = 20\n [instrument]\n default_namespace = BENTOML\n prometheus_multiproc_dir = {BENTOML_HOME}/prometheus_multiproc_dir\n [logging]\n logging_level = INFO\n log_format = [%%(asctime)s] %%(levelname)s - %%(message)s\n dev_log_format = [%%(asctime)s] {{%%(filename)s:%%(lineno)d}} %%(levelname)s - %%(message)s\n base_log_dir = {BENTOML_HOME}/logs/\n log_request_image_files = True\n prediction_log_filename = prediction.log\n prediction_log_json_format = \"%%(service_name)s %%(service_version)s %%(api)s %%(request_id)s %%(request)s %%(response)s %%(asctime)s\"\n feedback_log_filename = feedback.log\n feedback_log_json_format = \"%%(service_name)s %%(service_version)s %%(request_id)s %%(asctime)s\"\n yatai_web_server_log_filename = yatai_web_server.log\n [tracing]\n zipkin_api_url =\n [yatai_service]\n url =\n s3_signature_version = s3v4\n repository_base_url = {BENTOML_HOME}/repository/\n db_url = sqlite:///{BENTOML_HOME}/storage.db\n s3_endpoint_url =\n default_namespace = dev\n client_certificate_file =\n [apiserver]\n default_port = 5000\n enable_metrics = true\n enable_feedback = true\n default_timeout = 60\n default_image_input_accept_file_extensions = .jpg,.png,.jpeg,.tiff,.webp,.bmp\n default_gunicorn_workers_count = -1\n batch_request_header = Bentoml-Is-Batch-Request\n [marshal_server]\n marshal_request_header_flag = BentoML-Is-Merged-Request\n default_max_latency = 300\n default_max_batch_size = 2000\n [cli]\n [yatai]\n bento_uri_default_expiration = 3000\n [tensorflow]\n [pytorch]\n Any idea?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jondoering", "commentT": "2020-06-18T05:42:32Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jondoering>@jondoering</denchmark-link>\n  Oh I see. This is a special case if you followed master branch these days.\n This happened when loading a bundle saved with released bentoml==0.8.1.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "jondoering", "commentT": "2020-06-18T12:49:26Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/bojiang>@bojiang</denchmark-link>\n  thanks - what is the suggested fix for that - could not find anything in issues.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "jondoering", "commentT": "2020-06-18T13:43:21Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jondoering>@jondoering</denchmark-link>\n  The temporary solution is to save the model again with the master version of bentoml. I'll push a fix before next release.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "jondoering", "commentT": "2020-06-18T13:48:18Z", "comment_text": "\n \t\tThis PR <denchmark-link:https://github.com/bentoml/BentoML/pull/818>#818</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "c89cc9475e9b548c8b1cb40cd3601fb05323c906", "commit_author": "bojiang", "commitT": "2020-06-17 22:54:34-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "0.3333333333333333"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 10, "file_old_name": "bentoml\\adapters\\dataframe_input.py", "file_new_name": "bentoml\\adapters\\dataframe_input.py", "file_complexity": {"file_NLOC": "201", "file_CCN": "34", "file_NToken": "998"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "248", "deleted_lines": "240", "method_info": {"method_name": "handle_aws_lambda_event", "method_params": "self,event,func", "method_startline": "232", "method_endline": "251", "method_complexity": {"method_NLOC": "17", "method_CCN": "5", "method_NToken": "114", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "215", "method_info": {"method_name": "__init__", "method_params": "self,orient,typ,input_dtypes,is_batch_input,base_kwargs", "method_startline": "213", "method_endline": "219", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "23", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "63,88,89,90", "deleted_lines": "56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149", "method_info": {"method_name": "_dataframe_csv_from_input", "method_params": "raws,content_types", "method_startline": "56", "method_endline": "149", "method_complexity": {"method_NLOC": "88", "method_CCN": "29", "method_NToken": "622", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "227", "deleted_lines": "198,199,215", "method_info": {"method_name": "handle_cli", "method_params": "self,args,func", "method_startline": "193", "method_endline": "230", "method_complexity": {"method_NLOC": "33", "method_CCN": "9", "method_NToken": "217", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "168", "deleted_lines": "167,168", "method_info": {"method_name": "read_dataframes_from_json_n_csv", "method_params": "", "method_startline": "167", "method_endline": "168", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "15", "method_nesting_level": "0"}}}, "hunk_5": {"Ismethod": 1, "added_lines": null, "deleted_lines": "50,51,52,53", "method_info": {"method_name": "_to_csv_cell", "method_params": "v", "method_startline": "50", "method_endline": "53", "method_complexity": {"method_NLOC": "4", "method_CCN": "2", "method_NToken": "17", "method_nesting_level": "0"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "46,47", "deleted_lines": "39,40,41,42,43,44,45,46,47", "method_info": {"method_name": "_check_dataframe_column_contains", "method_params": "required_column_names,df", "method_startline": "39", "method_endline": "47", "method_complexity": {"method_NLOC": "9", "method_CCN": "3", "method_NToken": "53", "method_nesting_level": "0"}}}, "hunk_7": {"Ismethod": 1, "added_lines": null, "deleted_lines": "152,153,154,155,156,157,158,159,160,161,162,163,164", "method_info": {"method_name": "_gen_slice", "method_params": "ids", "method_startline": "152", "method_endline": "164", "method_complexity": {"method_NLOC": "12", "method_CCN": "4", "method_NToken": "61", "method_nesting_level": "0"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "63", "deleted_lines": "61,62,63,64,65,66,67", "method_info": {"method_name": "__init__", "method_params": "self,orient,typ,input_dtypes,is_batch_input,base_kwargs", "method_startline": "61", "method_endline": "67", "method_complexity": {"method_NLOC": "7", "method_CCN": "1", "method_NToken": "23", "method_nesting_level": "1"}}}, "hunk_9": {"Ismethod": 1, "added_lines": "168", "deleted_lines": "148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171", "method_info": {"method_name": "handle_request", "method_params": "self,request,func", "method_startline": "148", "method_endline": "171", "method_complexity": {"method_NLOC": "21", "method_CCN": "5", "method_NToken": "121", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "bentoml\\adapters\\json_output.py", "file_new_name": "bentoml\\adapters\\json_output.py", "file_complexity": {"file_NLOC": "73", "file_CCN": "10", "file_NToken": "444"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "51,52"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "bentoml\\adapters\\tensorflow_tensor_output.py", "file_new_name": "bentoml\\adapters\\tensorflow_tensor_output.py", "file_complexity": {"file_NLOC": "63", "file_CCN": "7", "file_NToken": "376"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "33,34"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "bentoml\\utils\\__init__.py", "file_new_name": "bentoml\\utils\\__init__.py", "file_complexity": {"file_NLOC": "67", "file_CCN": "18", "file_NToken": "443"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "109,110,111,112,113,114,115,116,117", "deleted_lines": null, "method_info": {"method_name": "__call__", "method_params": "self,func", "method_startline": "109", "method_endline": "117", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "16", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "105,106,107", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,exceptions,fallback", "method_startline": "105", "method_endline": "107", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "21", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "111,112,113,114,115", "deleted_lines": null, "method_info": {"method_name": "__call__._", "method_params": "args,kwargs", "method_startline": "111", "method_endline": "115", "method_complexity": {"method_NLOC": "5", "method_CCN": "2", "method_NToken": "29", "method_nesting_level": "2"}}}}}, "file_4": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "bentoml\\utils\\dataframe_util.py", "file_complexity": {"file_NLOC": "230", "file_CCN": "93", "file_NToken": "1640"}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\source\\concepts.rst", "file_new_name": "docs\\source\\concepts.rst", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "755"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 9, "file_old_name": "tests\\handlers\\test_dataframe_handler.py", "file_new_name": "tests\\handlers\\test_dataframe_handler.py", "file_complexity": {"file_NLOC": "172", "file_CCN": "23", "file_NToken": "1281"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200", "deleted_lines": "172,173,174,175,176,177,178,179,180,186,187", "method_info": {"method_name": "test_batch_read_dataframes_from_mixed_json_n_csv", "method_params": "df", "method_startline": "172", "method_endline": "200", "method_complexity": {"method_NLOC": "20", "method_CCN": "4", "method_NToken": "174", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "221,222,228", "deleted_lines": null, "method_info": {"method_name": "test_batch_read_dataframes_from_json_in_mixed_order", "method_params": "", "method_startline": "221", "method_endline": "238", "method_complexity": {"method_NLOC": "15", "method_CCN": "3", "method_NToken": "110", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "203,204,205,206,207,208,209,210", "deleted_lines": null, "method_info": {"method_name": "test_batch_read_dataframes_from_json_of_orients", "method_params": "df,orient", "method_startline": "203", "method_endline": "210", "method_complexity": {"method_NLOC": "7", "method_CCN": "2", "method_NToken": "70", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "114", "deleted_lines": "113", "method_info": {"method_name": "test_dataframe_handle_request_csv", "method_params": "", "method_startline": "107", "method_endline": "119", "method_complexity": {"method_NLOC": "10", "method_CCN": "1", "method_NToken": "66", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "90,91,92,96,100", "deleted_lines": "89,90,91,95,99", "method_info": {"method_name": "test_check_dataframe_column_contains", "method_params": "", "method_startline": "84", "method_endline": "104", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "172", "method_nesting_level": "0"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197", "deleted_lines": "138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,186,187", "method_info": {"method_name": "test_batch_read_dataframes_from_json_n_csv", "method_params": "", "method_startline": "138", "method_endline": "197", "method_complexity": {"method_NLOC": "44", "method_CCN": "7", "method_NToken": "466", "method_nesting_level": "0"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "168,169", "deleted_lines": "168,169", "method_info": {"method_name": "orient", "method_params": "request", "method_startline": "168", "method_endline": "169", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "9", "method_nesting_level": "0"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "213,214,215,216,217,218", "deleted_lines": null, "method_info": {"method_name": "test_batch_read_dataframes_from_json_with_wrong_orients", "method_params": "df,orient", "method_startline": "213", "method_endline": "218", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "48", "method_nesting_level": "0"}}}, "hunk_8": {"Ismethod": 1, "added_lines": "163,164", "deleted_lines": "163,164", "method_info": {"method_name": "df", "method_params": "request", "method_startline": "163", "method_endline": "164", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "9", "method_nesting_level": "0"}}}}}}}}