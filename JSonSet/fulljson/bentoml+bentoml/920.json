{"BR": {"BR_id": "920", "BR_author": "hechangqin", "BRopenT": "2020-07-21T07:57:47Z", "BRcloseT": "2020-08-05T20:58:11Z", "BR_text": {"BRsummary": "When I built a H2O-based image, the following error occurred", "BRdescription": "\n Describe the bug\n When I built a H2O-based image, the following error occurred. From the Dockerfile generated by BentoML, the base image is bentoml/model-server:0.8.1, and JRE is indeed not installed\n I used service.py to build a bentoML bundle\n import bentoml\n from bentoml.adapters import DataframeInput\n from bentoml.artifact import H2oModelArtifact\n from customize import preprocessing, postprocessing\n \n \n @bentoml.env(auto_pip_dependencies=True)\n @bentoml.artifacts([H2oModelArtifact('model')])\n class LoanDefaultPrediction(bentoml.BentoService):\n     @bentoml.api(input=DataframeInput())\n     def predict(self, df):\n         model_input = preprocessing(df)\n         model_output = self.artifacts.model.predict(model_input)\n         return postprocessing(model_output)\n \n \n if __name__ == \"__main__\":\n     import h2o\n     h2o.init(strict_version_check=False)\n     model = h2o.load_model('H2O_AutoML_20200720_153457')\n \n     model_service = LoanDefaultPrediction()\n     model_service.pack(\"model\", model)\n \n     saved_path = model_service.save()\n And another customize.py to pre process\n import h2o\n \n def preprocessing(model_input):\n     return h2o.H2OFrame(model_input, na_strings=['NaN'])\n \n \n def postprocessing(model_output):\n     return model_output.as_data_frame()\n Finally, After I build service image with this bundle, I run this docker image with below log:\n <denchmark-code>Traceback (most recent call last):\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\n     worker.init_process()\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 119, in init_process\n     self.load_wsgi()\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 144, in load_wsgi\n     self.wsgi = self.app.wsgi()\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/app/base.py\", line 67, in wsgi\n     self.callable = self.load()\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/server/gunicorn_server.py\", line 92, in load\n     bento_service = load(self.bento_service_bundle_path)\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/saved_bundle/loader.py\", line 179, in load\n     svc = svc_cls()\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/service.py\", line 526, in __init__\n     self._load_artifacts(self._bento_service_bundle_path)\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/service.py\", line 734, in _load_artifacts\n     packed_artifact = artifact.load(artifacts_path)\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/artifact/h2o_model_artifact.py\", line 79, in load\n     h2o.init()\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/h2o.py\", line 307, in init\n     bind_to_localhost=bind_to_localhost)\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/server.py\", line 143, in start\n     bind_to_localhost=bind_to_localhost, log_dir=log_dir, log_level=log_level, max_log_file_size=max_log_file_size)\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/server.py\", line 276, in _launch_server\n     java = self._find_java()\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/server.py\", line 441, in _find_java\n     raise H2OStartupError(\"Cannot find Java. Please install the latest JRE from\\n\"\n h2o.exceptions.H2OStartupError: Cannot find Java. Please install the latest JRE from\n http://www.oracle.com/technetwork/java/javase/downloads/index.html\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "hechangqin", "commentT": "2020-07-21T08:07:20Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/hechangqin>@hechangqin</denchmark-link>\n  - you will need to add h2o conda dependency for the docker build to install h2o properly. You may refer to the h2o example notebooks found in the BentoML gallery: <denchmark-link:https://github.com/bentoml/gallery#h2o>https://github.com/bentoml/gallery#h2o</denchmark-link>\n \n e.g.:\n import h2o\n \n from bentoml import api, env, artifacts, BentoService\n from bentoml.artifact import H2oModelArtifact\n from bentoml.adapters import DataframeInput\n \n @env(\n     pip_dependencies=['h2o==3.24.0.2', 'pandas'],\n     conda_channels=['h2oai'],\n     conda_dependencies=['h2o==3.24.0.2']\n )\n @artifacts([H2oModelArtifact('model')])\n class LoanPrediction(BentoService):\n     \n     @api(input=DataframeInput())\n     def predict(self, df):\n         h2o_frame = h2o.H2OFrame(df, na_strings=['NaN'])\n         predictions = self.artifacts.model.predict(h2o_frame)\n         return predictions.as_data_frame()\n Related documentation on conda dependencies:\n <denchmark-link:https://docs.bentoml.org/en/latest/concepts.html#conda-packages>https://docs.bentoml.org/en/latest/concepts.html#conda-packages</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "hechangqin", "commentT": "2020-07-22T02:10:13Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/parano>@parano</denchmark-link>\n  I add h2o conda dependency for the docker build and the problem still exists. The Dockerfile generated by BentoML as below. I think it is caused by the absence of jdk in the  base image.\n <denchmark-code>FROM bentoml/model-server:0.8.1\n \n # copy over model files\n COPY . /bento\n WORKDIR /bento\n \n # Configuring PyPI index\n ARG PIP_INDEX_URL=https://pypi.python.org/simple/\n ARG PIP_TRUSTED_HOST=pypi.python.org\n ENV PIP_INDEX_URL $PIP_INDEX_URL\n ENV PIP_TRUSTED_HOST $PIP_TRUSTED_HOST\n \n # Install conda, pip dependencies and run user defined setup script\n RUN if [ -f /bento/bentoml-init.sh ]; then bash -c /bento/bentoml-init.sh; fi\n \n # the env var $PORT is required by heroku container runtime\n ENV PORT 5000\n EXPOSE $PORT\n \n COPY docker-entrypoint.sh /usr/local/bin/\n ENTRYPOINT [ \"docker-entrypoint.sh\" ]\n CMD [\"bentoml\", \"serve-gunicorn\", \"/bento\"]\n \n </denchmark-code>\n \n Error log as below:\n <denchmark-code>[2020-07-22 02:04:07 +0000] [14] [ERROR] Exception in worker process\n Traceback (most recent call last):\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/h2o.py\", line 266, in init\n     _msgs=(\"Checking whether there is an H2O instance running at {url} \",\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/connection.py\", line 323, in open\n     conn._cluster = conn._test_connection(retries, messages=_msgs)\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/connection.py\", line 603, in _test_connection\n     % (self._base_url, max_retries, \"\\n\".join(errors)))\n h2o.exceptions.H2OConnectionError: Could not establish link to the H2O cloud http://localhost:54321 after 5 retries\n [04:06.36] H2OConnectionError: Unexpected HTTP error: HTTPConnectionPool(host='localhost', port=54321): Max retries exceeded with url: /3/Cloud (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa02c5d9850>: Failed to establish a new connection: [Errno 111] Connection refused'))\n [04:06.56] H2OConnectionError: Unexpected HTTP error: HTTPConnectionPool(host='localhost', port=54321): Max retries exceeded with url: /3/Cloud (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa02c5d9610>: Failed to establish a new connection: [Errno 111] Connection refused'))\n [04:06.76] H2OConnectionError: Unexpected HTTP error: HTTPConnectionPool(host='localhost', port=54321): Max retries exceeded with url: /3/Cloud (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa02c291bd0>: Failed to establish a new connection: [Errno 111] Connection refused'))\n [04:06.97] H2OConnectionError: Unexpected HTTP error: HTTPConnectionPool(host='localhost', port=54321): Max retries exceeded with url: /3/Cloud (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa02c2bb510>: Failed to establish a new connection: [Errno 111] Connection refused'))\n [04:07.17] H2OConnectionError: Unexpected HTTP error: HTTPConnectionPool(host='localhost', port=54321): Max retries exceeded with url: /3/Cloud (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa02c242310>: Failed to establish a new connection: [Errno 111] Connection refused'))\n \n During handling of the above exception, another exception occurred:\n \n Traceback (most recent call last):\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\n     worker.init_process()\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 119, in init_process\n     self.load_wsgi()\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 144, in load_wsgi\n     self.wsgi = self.app.wsgi()\n   File \"/opt/conda/lib/python3.7/site-packages/gunicorn/app/base.py\", line 67, in wsgi\n     self.callable = self.load()\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/server/gunicorn_server.py\", line 92, in load\n     bento_service = load(self.bento_service_bundle_path)\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/saved_bundle/loader.py\", line 179, in load\n     svc = svc_cls()\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/service.py\", line 526, in __init__\n     self._load_artifacts(self._bento_service_bundle_path)\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/service.py\", line 734, in _load_artifacts\n     packed_artifact = artifact.load(artifacts_path)\n   File \"/opt/conda/lib/python3.7/site-packages/bentoml/artifact/h2o_model_artifact.py\", line 79, in load\n     h2o.init()\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/h2o.py\", line 279, in init\n     bind_to_localhost=bind_to_localhost)\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/server.py\", line 138, in start\n     bind_to_localhost=bind_to_localhost, log_dir=log_dir, log_level=log_level)\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/server.py\", line 271, in _launch_server\n     java = self._find_java()\n   File \"/opt/conda/lib/python3.7/site-packages/h2o/backend/server.py\", line 410, in _find_java\n     raise H2OStartupError(\"Cannot find Java. Please install the latest JRE from\\n\"\n h2o.exceptions.H2OStartupError: Cannot find Java. Please install the latest JRE from\n http://www.oracle.com/technetwork/java/javase/downloads/index.html\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "hechangqin", "commentT": "2020-07-22T04:54:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hechangqin>@hechangqin</denchmark-link>\n  could you share the  file in your saved bundle directory?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "hechangqin", "commentT": "2020-07-22T06:35:01Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/parano>@parano</denchmark-link>\n  As below\n <denchmark-code>name: bentoml-LoanDefaultPrediction\n channels:\n - defaults\n - h2oai\n dependencies:\n - python=3.7.6\n - pip\n - h2o==3.24.0.2\n \n </denchmark-code>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "hechangqin", "commentT": "2020-07-28T21:23:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hechangqin>@hechangqin</denchmark-link>\n  I had a chance to look into this today.  We need to add  as part of the .  I will update the h2o notebook to correct this issue.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "hechangqin", "commentT": "2020-07-29T01:51:46Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yubozhao>@yubozhao</denchmark-link>\n  OK. Thank you very much. If you have done this job, please share me to know.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "hechangqin", "commentT": "2020-07-31T08:55:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yubozhao>@yubozhao</denchmark-link>\n  any updates on this?\n Btw, with the new set_dependencies API in BentoArtifact class, we should be able to add the conda dependencies for the user by default, when using H2O artifact.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "hechangqin", "commentT": "2020-08-01T03:56:05Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/parano>@parano</denchmark-link>\n  \n For now, the quickest work around is user manually add openjdk as part of the conda_dependencies when they write the BentoService definition.\n I am also going to create a PR to add this in\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "hechangqin", "commentT": "2020-08-06T02:40:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/parano>@parano</denchmark-link>\n  When can this fix be released?\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "hechangqin", "commentT": "2020-08-06T02:43:08Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hechangqin>@hechangqin</denchmark-link>\n  the release is coming out in a day or two. You can also just add OpenJDK to conda dependencies list as a workaround in current BentoML version. e.g.:\n <denchmark-code>import h2o\n \n from bentoml import api, env, artifacts, BentoService\n from bentoml.artifact import H2oModelArtifact\n from bentoml.adapters import DataframeInput\n \n @env(\n     pip_dependencies=['h2o==3.24.0.2', 'pandas'],\n     conda_channels=['h2oai'],\n     conda_dependencies=['openjdk']\n )\n @artifacts([H2oModelArtifact('model')])\n class LoanPrediction(BentoService):\n     \n     @api(input=DataframeInput())\n     def predict(self, df):\n         h2o_frame = h2o.H2OFrame(df, na_strings=['NaN'])\n         predictions = self.artifacts.model.predict(h2o_frame)\n         return predictions.as_data_frame()\n </denchmark-code>\n \n <denchmark-link:https://github.com/yubozhao>@yubozhao</denchmark-link>\n  could you help update the H2O example notebooks in the gallery if you haven't done so?\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "hechangqin", "commentT": "2020-08-06T02:48:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/parano>@parano</denchmark-link>\n  Got it. Thank you very much.\n \t\t"}}}, "commit": {"commit_id": "763af27ae38ac21b0776a45bc50c57a30256d9a3", "commit_author": "Bozhao", "commitT": "2020-08-05 13:58:10-07:00", "commit_complexity": {"commit_NLOC": "0.5316455696202531", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": ".travis.yml", "file_new_name": ".travis.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "72,73,74,75,76", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "bentoml\\artifact\\h2o_model_artifact.py", "file_new_name": "bentoml\\artifact\\h2o_model_artifact.py", "file_complexity": {"file_NLOC": "77", "file_CCN": "9", "file_NToken": "224"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "69", "deleted_lines": null, "method_info": {"method_name": "set_dependencies", "method_params": "self,BentoServiceEnv", "method_startline": "67", "method_endline": "69", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "tests\\bento_service_examples\\h2o_service.py", "file_complexity": {"file_NLOC": "13", "file_CCN": "1", "file_NToken": "100"}}, "file_3": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "tests\\integration\\test_h2o_model_artifact.py", "file_complexity": {"file_NLOC": "90", "file_CCN": "10", "file_NToken": "530"}}, "file_4": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "travis\\h2o_integration_tests.sh", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}}}}