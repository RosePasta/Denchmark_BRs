{"BR": {"BR_id": "1567", "BR_author": "AlirezaSadeghi", "BRopenT": "2020-04-01T15:03:55Z", "BRcloseT": "2020-04-06T17:37:35Z", "BR_text": {"BRsummary": "Code formatting can affect the semantic behavior of tfx pipelines (DagRunner not being registered)", "BRdescription": "\n \n \n \n tfx/tfx/tools/cli/handler/base_handler.py\n \n \n         Lines 106 to 117\n       in\n       bfbc958\n \n \n \n \n \n \n  \"\"\"Check if runner in dsl is same as engine flag.\"\"\" \n \n \n \n  engine_flag = self.flags_dict[labels.ENGINE_FLAG] \n \n \n \n  with open(self.flags_dict[labels.PIPELINE_DSL_PATH], 'r') as f: \n \n \n \n  dsl_contents = f.read() \n \n \n \n  regexes = { \n \n \n \n  labels.AIRFLOW_ENGINE: r'AirflowDagRunner\\(.*\\)', \n \n \n \n  labels.KUBEFLOW_ENGINE: r'KubeflowDagRunner\\(.*\\)', \n \n \n \n  labels.BEAM_ENGINE: r'BeamDagRunner\\(.*\\)' \n \n \n \n    } \n \n \n \n  match = re.search(regexes[engine_flag], dsl_contents) \n \n \n \n  if not match: \n \n \n \n  sys.exit('{} runner not found in dsl.'.format(engine_flag)) \n \n \n \n \n \n The referenced code is where the issue happens.\n As can be seen, it checks for existence of a KubeflowDagRunner(...) in the contents, but that's a naive assumption since the opening and closing parenthesis can be in separate lines and in that case the regex won't match.\n <denchmark-h:h3>Steps to reproduce the issue:</denchmark-h>\n \n The following piece of code works just fine.\n  kf_config = KubeflowDagRunnerConfig(\n         kubeflow_metadata_config=kf_metadata,\n         tfx_image=os.environ.get(\"KUBEFLOW_TFX_IMAGE\", None),\n  )\n \n KubeflowDagRunner(config=kf_config)\n The following piece of code though, fails with kubeflow runner not found in dsl.\n KubeflowDagRunner(\n     config=KubeflowDagRunnerConfig(\n            kubeflow_metadata_config=kf_metadata,\n            tfx_image=os.environ.get(\"KUBEFLOW_TFX_IMAGE\", None),\n      )\n )\n Output of the tfx pipeline create cli command is as follows:\n <denchmark-code>CLI\n Updating pipeline\n Detected Kubeflow.\n Use --engine flag if you intend to use a different orchestrator.\n Reading build spec from build.yaml\n Use skaffold to build the container image.\n /usr/local/bin/skaffold\n kubeflow runner not found in dsl.\n New container image is built. Target image is available in the build spec file.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "AlirezaSadeghi", "commentT": "2020-04-03T03:23:23Z", "comment_text": "\n \t\tYeap this is problematic. Sorry for your inconvenience.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "AlirezaSadeghi", "commentT": "2020-04-06T17:37:36Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tfx/issues/1567>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tfx/issues/1567>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "48dcb80e40aaf1c5bc51e3f04c5df5320d852a78", "commit_author": "jjong", "commitT": "2020-04-06 10:27:18-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tfx\\tools\\cli\\handler\\base_handler.py", "file_new_name": "tfx\\tools\\cli\\handler\\base_handler.py", "file_complexity": {"file_NLOC": "169", "file_CCN": "26", "file_NToken": "977"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "109,110,111,112,114", "deleted_lines": "110,111,112,113,115", "method_info": {"method_name": "_check_dsl_runner", "method_params": "self", "method_startline": "104", "method_endline": "115", "method_complexity": {"method_NLOC": "12", "method_CCN": "2", "method_NToken": "84", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tfx\\tools\\cli\\handler\\base_handler_test.py", "file_new_name": "tfx\\tools\\cli\\handler\\base_handler_test.py", "file_complexity": {"file_NLOC": "138", "file_CCN": "23", "file_NToken": "892"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "95,96,97,98,99", "deleted_lines": "95", "method_info": {"method_name": "testCheckDslRunner", "method_params": "self", "method_startline": "95", "method_endline": "99", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "35", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "101", "deleted_lines": null, "method_info": {"method_name": "testCheckDslRunner_WrongEngine", "method_params": "self", "method_startline": "101", "method_endline": "109", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "66", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "95,96,97,98,99,100,101", "deleted_lines": "95", "method_info": {"method_name": "testCheckDslRunnerWrongEngine", "method_params": "self", "method_startline": "95", "method_endline": "103", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "66", "method_nesting_level": "1"}}}}}}}}