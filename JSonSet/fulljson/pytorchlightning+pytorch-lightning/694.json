{"BR": {"BR_id": "694", "BR_author": "Borda", "BRopenT": "2020-01-16T08:40:58Z", "BRcloseT": "2020-02-11T03:47:19Z", "BR_text": {"BRsummary": "JIT problem with `torchvision` 0.5", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n There are some JIT problems with newly released  0.5\n in <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/687>#687</denchmark-link>\n  we freeze version to <0.5 but in future, we want to support all s\n Maybe it is just a temporal bug in  and they will handle it...\n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/687#issuecomment-574913237>#687 (comment)</denchmark-link>\n \n <denchmark-h:h3>Environment</denchmark-h>\n \n <denchmark-link:https://app.circleci.com/jobs/github/Borda/pytorch-lightning/839>https://app.circleci.com/jobs/github/Borda/pytorch-lightning/839</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Borda", "commentT": "2020-02-05T11:58:54Z", "comment_text": "\n \t\tBased on <denchmark-link:https://github.com/pytorch/vision/issues/1383#issuecomment-536539662>pytorch/vision#1383 (comment)</denchmark-link>\n   now requires \"recent enough\" version of PyTorch. All tests are green with  and .\n The problem is when  is installed,  installs  which is incompatible. Ah, I  dependency issues...\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Borda", "commentT": "2020-02-05T12:07:00Z", "comment_text": "\n \t\tThen the problem is torchvision, it shall enforce torch >= 1.4.0\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Borda", "commentT": "2020-02-05T13:39:18Z", "comment_text": "\n \t\tBut it does (starting from 0.4.0):\n <denchmark-code># pkginfo -f requires_dist torchvision-0.5.0+cpu-cp37-cp37m-linux_x86_64.whl\n requires_dist: ['numpy', 'six', 'torch (==1.4.0)', 'pillow (>=4.1.1)', \"scipy ; extra == 'scipy'\"]\n # pkginfo -f requires_dist torchvision-0.4.2+cpu-cp37-cp37m-linux_x86_64.whl\n requires_dist: ['numpy', 'six', 'torch (==1.3.1)', 'pillow (>=4.1.1)', \"scipy ; extra == 'scipy'\"]\n # pkginfo -f requires_dist torchvision-0.4.1+cpu-cp37-cp37m-linux_x86_64.whl\n requires_dist: ['numpy', 'six', 'torch (==1.3.0)', 'pillow (>=4.1.1)', \"scipy ; extra == 'scipy'\"]\n # pkginfo -f requires_dist torchvision-0.4.0+cu92-cp37-cp37m-manylinux1_x86_64.whl\n requires_dist: ['numpy', 'six', 'torch (==1.2.0)', 'pillow (>=4.1.1)', \"scipy ; extra == 'scipy'\"]\n </denchmark-code>\n \n My problem is I cannot freeze dependencies via pip-tools with torch==1.4.0 since pytorch-lightning limits torchvision version.\n Dirty solution is to manipulate torch version through torchvision, i.e. omit torch dependency in requirements.txt completely and set torchvision>=0.4.0.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Borda", "commentT": "2020-02-07T06:22:21Z", "comment_text": "\n \t\tDo we need the torchvision dependency at all? IIRC it is only used for tests and examples.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Borda", "commentT": "2020-02-07T09:06:39Z", "comment_text": "\n \t\t\n idk why we would limit the version\n not needed. We do need to add to the examples that people need to have torchvision and torch installed.\n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Borda", "commentT": "2020-02-07T09:44:55Z", "comment_text": "\n \t\twe are using MNIST dataset in tests from torchvision.datasets import MNIST and transforms from torchvision import transforms\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "Borda", "commentT": "2020-02-07T09:55:51Z", "comment_text": "\n \t\tso add torchvision to the tests requirements\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "Borda", "commentT": "2020-02-07T10:11:16Z", "comment_text": "\n \t\tbut it is in package pytorch_lightning.testing.base_model so we would need to move it also out of the package or make own MNIT...\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "Borda", "commentT": "2020-04-02T19:41:53Z", "comment_text": "\n \t\tI have torch version 0.4.1, and torchvision->inception.py says that there is no module named call Optional in torch.jit.annotations....I want to use torch version 0.4.1 because I want to use it along with cuda 9.2 for my program. And as per my understanding, torchvision requires torch 1.4. How do I solve this dependency problem?\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "Borda", "commentT": "2020-04-02T20:36:15Z", "comment_text": "\n \t\tare you talking about torch==0.4.1 or torchvision=0.4.1 this is not related to lightning, you shall ask at torch/vision\n \t\t"}}}, "commit": {"commit_id": "af445830506061680bd41744926c8bee1cca1104", "commit_author": "Jirka Borovec", "commitT": "2020-02-10 22:47:18-05:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "MANIFEST.in", "file_new_name": "MANIFEST.in", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "18", "deleted_lines": "18,19,20"}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "pl_examples\\requirements.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_2": {"file_change_type": "DELETE", "file_Nmethod": 0, "file_old_name": "pytorch_lightning\\testing\\__init__.py", "file_new_name": "None", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_3": {"file_change_type": "DELETE", "file_Nmethod": 0, "file_old_name": "pytorch_lightning\\testing\\model.py", "file_new_name": "None", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "requirements.txt", "file_new_name": "requirements.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "5"}}}, "file_5": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "tests\\models\\__init__.py", "file_complexity": {"file_NLOC": "19", "file_CCN": "1", "file_NToken": "60"}}, "file_6": {"file_change_type": "RENAME", "file_Nmethod": 0, "file_old_name": "pytorch_lightning\\testing\\model_base.py", "file_new_name": "tests\\models\\base.py", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_7": {"file_change_type": "RENAME", "file_Nmethod": 0, "file_old_name": "tests\\debug.py", "file_new_name": "tests\\models\\debug.py", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_8": {"file_change_type": "RENAME", "file_Nmethod": 0, "file_old_name": "pytorch_lightning\\testing\\model_mixins.py", "file_new_name": "tests\\models\\mixins.py", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}}, "file_9": {"file_change_type": "RENAME", "file_Nmethod": 0, "file_old_name": "tests\\utils.py", "file_new_name": "tests\\models\\utils.py", "file_complexity": {"file_NLOC": "136", "file_CCN": "31", "file_NToken": "1048"}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\requirements.txt", "file_new_name": "tests\\requirements.txt", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1", "deleted_lines": null}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_amp.py", "file_new_name": "tests\\test_amp.py", "file_complexity": {"file_NLOC": "117", "file_CCN": "11", "file_NToken": "617"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "5,7", "deleted_lines": "5,7"}}}, "file_12": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_cpu_models.py", "file_new_name": "tests\\test_cpu_models.py", "file_complexity": {"file_NLOC": "245", "file_CCN": "28", "file_NToken": "1698"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "5,10", "deleted_lines": "5,10"}}}, "file_13": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_gpu_models.py", "file_new_name": "tests\\test_gpu_models.py", "file_complexity": {"file_NLOC": "289", "file_CCN": "39", "file_NToken": "2248"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "6,12", "deleted_lines": "6,12"}}}, "file_14": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_logging.py", "file_new_name": "tests\\test_logging.py", "file_complexity": {"file_NLOC": "244", "file_CCN": "24", "file_NToken": "1456"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "7,18", "deleted_lines": "7,18"}}}, "file_15": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_restore_models.py", "file_new_name": "tests\\test_restore_models.py", "file_complexity": {"file_NLOC": "218", "file_CCN": "19", "file_NToken": "1390"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "6,9", "deleted_lines": "6,9"}}}, "file_16": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\test_trainer.py", "file_new_name": "tests\\test_trainer.py", "file_complexity": {"file_NLOC": "245", "file_CCN": "27", "file_NToken": "1681"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "6,11", "deleted_lines": "6,11"}}}}}}