{"BR": {"BR_id": "195", "BR_author": "falceeffect", "BRopenT": "2019-09-04T13:13:13Z", "BRcloseT": "2019-09-05T11:13:07Z", "BR_text": {"BRsummary": "Non plain-tensor batches", "BRdescription": "\n Hello!\n I have been trying to use Lightning to train a graph neural network built with <denchmark-link:https://github.com/rusty1s/pytorch_geometric/>torch_geometric</denchmark-link>\n  package using a GPU.\n This is the error I get when I try to fit the model:\n ~/miniconda3/envs/pyg/lib/python3.7/site-packages/torch_geometric/nn/conv/gcn_conv.py in forward(self, x, edge_index, edge_weight)\n      83     def forward(self, x, edge_index, edge_weight=None):\n      84         \"\"\"\"\"\"\n ---> 85         x = torch.matmul(x, self.weight)\n      86 \n      87         if self.cached and self.cached_result is not None:\n \n RuntimeError: Expected object of backend CPU but got backend CUDA for argument #2 'mat2'\n I investigated the code of Lightning for a probable cause and found that transfer_batch_to_gpu causes this error.\n The current behavior of this function considers a batch to be either a 'plain'  or some simple collection of such objects (a list, a dict or a tuple). The problem is that torch_geometric uses a custom aggregate type  (<denchmark-link:https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data>docs</denchmark-link>\n ) which itself implements  method (and does not implement , I believe).\n It would be nice if you could make the code more flexible to process this case (and similar cases in general) correctly. I believe, the best solution is to replace isinstance(batch, torch.Tensor) by a condition of batch object having either to or cuda method implemented. This should solve the problem in general.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "falceeffect", "commentT": "2019-09-04T13:37:03Z", "comment_text": "\n \t\tgood suggestion. want to make the change and submit a PR?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "falceeffect", "commentT": "2019-09-04T13:55:20Z", "comment_text": "\n \t\tOkay, I will do that.\n \t\t"}}}, "commit": {"commit_id": "34b824a9d3d0fdd377da675e0398c66ab5e16e7b", "commit_author": "Anton Konstantinov", "commitT": "2019-09-05 07:13:06-04:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "pytorch_lightning\\models\\trainer.py", "file_new_name": "pytorch_lightning\\models\\trainer.py", "file_complexity": {"file_NLOC": "732", "file_CCN": "197", "file_NToken": "4690"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "998,999,1002,1003,1004", "deleted_lines": "998,999", "method_info": {"method_name": "transfer_batch_to_gpu", "method_params": "self,batch,gpu_id", "method_startline": "997", "method_endline": "1026", "method_complexity": {"method_NLOC": "19", "method_CCN": "9", "method_NToken": "167", "method_nesting_level": "1"}}}}}}}}