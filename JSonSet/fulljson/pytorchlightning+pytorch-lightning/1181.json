{"BR": {"BR_id": "1181", "BR_author": "TevenLeScao", "BRopenT": "2020-03-18T15:42:43Z", "BRcloseT": "2020-04-02T09:41:56Z", "BR_text": {"BRsummary": "Additional dataloader created and discarded when training with reload_dataloaders_every_epoch", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n I am training with reload_dataloaders_every_epoch and I've noticed it instantiates an extra DataLoader before training for which nothing is run. This is an issue for me as I am training with chunks that get loaded every epoch and it is messing with the order I load them in especially if I reload a checkpoint; it would be an issue for people that generate a new dataset every epoch as they waste computation. The tqdm bar also keeps the information of the first, discarded DataLoader (in the screenshot, the number of iterations is the same for both whereas they should be different sizes)\n <denchmark-link:https://user-images.githubusercontent.com/26709476/76968780-be917200-6929-11ea-82c5-6850a6f6e678.png></denchmark-link>\n \n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n Run the code sample below, which runs for one epoch and displays a message every time a DataLoader is created.\n A DataLoader gets instantiated a first time line 286 in training_loop.py outside of the epoch loop (that's the usual time it gets instantiated when not reloading every epoch. Then when using reload_dataloaders_every_epoch another one is created at the start of every epoch line 386, inside the loop, so for the first epoch there's an extra one.\n <denchmark-h:h4>Code sample</denchmark-h>\n \n <denchmark-code>import torch\n import pytorch_lightning as pl\n from torch.utils.data import DataLoader, Dataset\n from time import sleep\n \n class MinimalDataset(Dataset):\n \n     def __init__(self, index):\n         self.data = torch.Tensor(64 * index, 1024)\n \n     def __getitem__(self, item):\n         return self.data[item]\n \n     def __len__(self):\n         return len(self.data)\n \n class MinimalModule(pl.LightningModule):\n \n     def __init__(self):\n         super(MinimalModule, self).__init__()\n         self.nn = torch.nn.Linear(1024, 1)\n         self.current_index = 0\n \n     def forward(self, batch):\n         return self.nn(batch)\n \n     def training_step(self, batch, batch_idx):\n         sleep(0.1)\n         loss = self.nn(batch)[0]\n         return {'loss': loss}\n \n     def validation_step(self, batch, batch_idx):\n         loss = self.nn(batch)[0]\n         return {'val_loss': loss}\n \n     def configure_optimizers(self):\n         return torch.optim.Adam(self.parameters(), lr=0.01)\n \n     def train_dataloader(self):\n         # REQUIRED\n         self.current_index += 1\n         print(f\"initializing DataLoader n{self.current_index}\")\n         data_loader = DataLoader(MinimalDataset(self.current_index))\n         return data_loader\n     \n model = MinimalModule()\n trainer = pl.Trainer(reload_dataloaders_every_epoch=True, num_sanity_val_steps=0, val_check_interval=8, max_epochs=1)\n \n trainer.fit(model)\n </denchmark-code>\n \n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n Only one dataloader should be created; two are. The tqdm bar should show 128 iterations as that is the dataset size the second time; but it shows 64 instead (I added the sleep(0.1) to leave time to observe that)\n <denchmark-h:h3>Environment</denchmark-h>\n \n PyTorch version: 1.4.0\n Is debug build: No\n CUDA used to build PyTorch: 10.1\n OS: Ubuntu 18.04.4 LTS\n GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\n CMake version: Could not collect\n Python version: 3.6\n Is CUDA available: Yes\n CUDA runtime version: Could not collectepoch_end\n GPU models and configuration: GPU 0: GeForce RTX 2070 with Max-Q Design\n Nvidia driver version: 435.21\n cuDNN version: Could not collect\n Versions of relevant libraries:\n [pip3] numpy==1.18.1\n [pip3] pytorch-lightning==0.7.1\n [pip3] torch==1.4.0\n [pip3] torchvision==0.4.2\n [conda] Could not collect\n <denchmark-h:h3>Additional context</denchmark-h>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "TevenLeScao", "commentT": "2020-03-18T15:43:24Z", "comment_text": "\n \t\tHi! thanks for your contribution!, great first issue!\n \t\t"}}}, "commit": {"commit_id": "04935ea7184a50d535af96dd85a58fdc43a659b8", "commit_author": "Teven", "commitT": "2020-04-02 11:41:56+02:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CHANGELOG.md", "file_new_name": "CHANGELOG.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "46", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "pytorch_lightning\\trainer\\evaluation_loop.py", "file_new_name": "pytorch_lightning\\trainer\\evaluation_loop.py", "file_complexity": {"file_NLOC": "324", "file_CCN": "58", "file_NToken": "1218"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "341,348,402,403,404,405,406,407,408,409,410", "deleted_lines": "341,348", "method_info": {"method_name": "run_evaluation", "method_params": "self,bool", "method_startline": "322", "method_endline": "413", "method_complexity": {"method_NLOC": "56", "method_CCN": "18", "method_NToken": "350", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "pytorch_lightning\\trainer\\trainer.py", "file_new_name": "pytorch_lightning\\trainer\\trainer.py", "file_complexity": {"file_NLOC": "762", "file_CCN": "70", "file_NToken": "3376"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "321,322", "deleted_lines": "277"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "pytorch_lightning\\trainer\\training_loop.py", "file_new_name": "pytorch_lightning\\trainer\\training_loop.py", "file_complexity": {"file_NLOC": "522", "file_CCN": "121", "file_NToken": "2557"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "397,398,399,400", "method_info": {"method_name": "run_training_epoch", "method_params": "self", "method_startline": "386", "method_endline": "499", "method_complexity": {"method_NLOC": "58", "method_CCN": "34", "method_NToken": "468", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "293,294,295,311,312,313", "deleted_lines": "293", "method_info": {"method_name": "train", "method_params": "self", "method_startline": "285", "method_endline": "389", "method_complexity": {"method_NLOC": "61", "method_CCN": "23", "method_NToken": "413", "method_nesting_level": "1"}}}}}}}}