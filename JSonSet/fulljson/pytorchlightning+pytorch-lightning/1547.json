{"BR": {"BR_id": "1547", "BR_author": "festeh", "BRopenT": "2020-04-21T12:25:52Z", "BRcloseT": "2020-07-29T21:53:03Z", "BR_text": {"BRsummary": "Metric aggragation is broken for LoggerCollection", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n After changes in <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/1278>#1278</denchmark-link>\n  it is now not possible to log testing metrics after traning while using several loggers.\n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n Say we want to run a <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pl_examples/basic_examples/cpu_template.py>MINST example</denchmark-link>\n  and also want to add a change - log testing metrics after training. For that we define a Callback\n <denchmark-code>class TestCallback(Callback):\n     def on_train_end(self, trainer, pl_module):\n         # note that it would crash if you don't pass the `pl_module`\n         trainer.test(pl_module)\n </denchmark-code>\n \n and pass it to trainer callbacks argument.\n We would also like to use several loggers to track all metrics, say MLFlowLogger and TensorBoardLogger. For this we create instances of these loggers and pass them into Trainer in a list.\n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n Testing metrics should be logged - but they don't as there's no final aggregation when our logger is a LoggerCollection\n <denchmark-h:h3>Additional context</denchmark-h>\n \n In my opinion, the logic in agg_and_log_metrics  and _finalize_agg_metrics is hard to follow, so I'd be happy if user could choose plain old log_metrics which worked nicely.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "festeh", "commentT": "2020-04-21T19:06:56Z", "comment_text": "\n \t\tare you using the last master?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "festeh", "commentT": "2020-04-22T09:08:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Borda>@Borda</denchmark-link>\n  thanks! It now works for a single logger. But it seems that problem persists when several loggers are used, so I updated the issue. This happens because metrics to aggregate are not propagated to child loggeres\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "festeh", "commentT": "2020-04-25T00:57:55Z", "comment_text": "\n \t\tI'm also having this issue with multiple loggers on master. Seems that the test results are printed at the end, but the loggers don't log the test metrics.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "festeh", "commentT": "2020-05-25T23:26:02Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Borda>@Borda</denchmark-link>\n  any update on this issue? I'm still encountering this on the latest release, and it seems related to <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/issues/1859>#1859</denchmark-link>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "festeh", "commentT": "2020-07-25T01:38:03Z", "comment_text": "\n \t\tThis issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n \t\t"}}}, "commit": {"commit_id": "458d3e210e2da10482d97a996708731b8b0fabae", "commit_author": "Ethan Harris", "commitT": "2020-07-29 23:53:02+02:00", "commit_complexity": {"commit_NLOC": "0.14285714285714285", "commit_CCN": "1.0", "commit_Nprams": "0.6190476190476191"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CHANGELOG.md", "file_new_name": "CHANGELOG.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "44,45", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "pytorch_lightning\\loggers\\base.py", "file_new_name": "pytorch_lightning\\loggers\\base.py", "file_complexity": {"file_NLOC": "316", "file_CCN": "72", "file_NToken": "1615"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "275,276,277,278", "deleted_lines": null, "method_info": {"method_name": "update_agg_funcs", "method_params": "self,str,None,mean", "method_startline": "275", "method_endline": "278", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "45", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "296,297", "deleted_lines": null, "method_info": {"method_name": "log_hyperparams", "method_params": "self,str", "method_startline": "295", "method_endline": "297", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "34", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "312,313,314", "deleted_lines": null, "method_info": {"method_name": "save_dir", "method_params": "self", "method_startline": "312", "method_endline": "314", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "12", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "287,288,289", "deleted_lines": "289", "method_info": {"method_name": "agg_and_log_metrics", "method_params": "self,str,None", "method_startline": "287", "method_endline": "289", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "38", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "308,309", "deleted_lines": null, "method_info": {"method_name": "close", "method_params": "self", "method_startline": "307", "method_endline": "309", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "19", "method_nesting_level": "1"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "304,305", "deleted_lines": null, "method_info": {"method_name": "finalize", "method_params": "self,str", "method_startline": "303", "method_endline": "305", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "24", "method_nesting_level": "1"}}}, "hunk_6": {"Ismethod": 1, "added_lines": "300,301", "deleted_lines": null, "method_info": {"method_name": "save", "method_params": "self", "method_startline": "299", "method_endline": "301", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "19", "method_nesting_level": "1"}}}, "hunk_7": {"Ismethod": 1, "added_lines": "292,293", "deleted_lines": "292", "method_info": {"method_name": "log_metrics", "method_params": "self,str,None", "method_startline": "291", "method_endline": "293", "method_complexity": {"method_NLOC": "3", "method_CCN": "2", "method_NToken": "40", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\loggers\\test_base.py", "file_new_name": "tests\\loggers\\test_base.py", "file_complexity": {"file_NLOC": "150", "file_CCN": "23", "file_NToken": "951"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "25,26,27,28,29,30,31,32,33,34", "deleted_lines": null, "method_info": {"method_name": "test_logger_collection", "method_params": "", "method_startline": "13", "method_endline": "37", "method_complexity": {"method_NLOC": "18", "method_CCN": "1", "method_NToken": "183", "method_nesting_level": "0"}}}}}}}}