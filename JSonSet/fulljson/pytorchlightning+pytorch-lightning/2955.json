{"BR": {"BR_id": "2955", "BR_author": "SiddhantRanade", "BRopenT": "2020-08-13T17:26:43Z", "BRcloseT": "2020-08-13T21:06:18Z", "BR_text": {"BRsummary": "Using IterableDatasets without __len__ for Training", "BRdescription": "\n Calling fit(model, trainloader, evalloader) internally calls enforce_datamodule_dataloader_override. This function\n has the if statement if (train_dataloader or val_dataloaders) and datamodule:. \n \n \n pytorch-lightning/pytorch_lightning/trainer/configuration_validator.py\n \n \n          Line 13\n       in\n       2c935d0\n \n \n \n \n \n \n  if (train_dataloader or val_dataloaders) and datamodule: \n \n \n \n \n \n This is similar to the PR <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/1560>#1560</denchmark-link>\n , the problem is that the  translates to , but there's no dataloader. so bool() uses dataloader. > 0. But... dataloader. uses IterableDataset. for IterableDatasets for which  is undefined.\n The fix is also the same, the if dl should be replaced by if dl is not None.\n I will open a PR fixing this.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "SiddhantRanade", "commentT": "2020-08-13T17:27:24Z", "comment_text": "\n \t\tHi! thanks for your contribution!, great first issue!\n \t\t"}}}, "commit": {"commit_id": "88bfed371e9597e813384b3d951b0e5280be71bd", "commit_author": "SiddhantRanade", "commitT": "2020-08-13 23:06:17+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "pytorch_lightning\\trainer\\configuration_validator.py", "file_new_name": "pytorch_lightning\\trainer\\configuration_validator.py", "file_complexity": {"file_NLOC": "58", "file_CCN": "17", "file_NToken": "266"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "13", "deleted_lines": "13", "method_info": {"method_name": "enforce_datamodule_dataloader_override", "method_params": "self,train_dataloader,val_dataloaders,datamodule", "method_startline": "11", "method_endline": "16", "method_complexity": {"method_NLOC": "5", "method_CCN": "4", "method_NToken": "34", "method_nesting_level": "1"}}}}}}}}