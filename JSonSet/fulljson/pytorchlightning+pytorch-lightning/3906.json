{"BR": {"BR_id": "3906", "BR_author": "nathanpainchaud", "BRopenT": "2020-10-06T16:35:46Z", "BRcloseT": "2020-10-06T19:27:32Z", "BR_text": {"BRsummary": "Infinite recursion when calling `self.log(...)` in validation loop with dataset that returns string in item dict", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n I'm not sure if this is a behavior that was intended to be supported in the first place, but PR <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/3888>#3888</denchmark-link>\n  introduced a regression on passing strings as part of the data in a batch. Now, if we pass a dictionary where one of the values is a string,  falls into an infinite recursion loop when trying to log anything during the validation step.\n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n See PR <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/3907>#3907</denchmark-link>\n  for a test that reproduces the bug on the current master. The test becomes functional when commenting out line 22 (the call to  in the validation loop).\n The recursion happens in this specific statement in unpack_batch_size():\n elif isinstance(sample, Iterable):\n     sample = next(iter(sample), 1)\n     size = self.unpack_batch_size(sample)\n which recurses infinitely when sample is a string.\n The full stacktrace I get when running the test is the following:\n <denchmark-code>test_logging.py:38: \n _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n ../../pytorch_lightning/trainer/trainer.py:487: in fit\n     results = self.accelerator_backend.train()\n ../../pytorch_lightning/accelerators/cpu_backend.py:47: in train\n     results = self.train_or_test()\n ../../pytorch_lightning/accelerators/base_backend.py:47: in train_or_test\n     results = self.trainer.train()\n ../../pytorch_lightning/trainer/trainer.py:509: in train\n     self.run_sanity_check(self.get_model())\n ../../pytorch_lightning/trainer/trainer.py:699: in run_sanity_check\n     _, eval_results = self.run_evaluation(test_mode=False, max_batches=self.num_sanity_val_batches)\n ../../pytorch_lightning/trainer/trainer.py:632: in run_evaluation\n     step_metrics = self.evaluation_loop.log_evaluation_step_metrics(batch, batch_idx)\n ../../pytorch_lightning/trainer/evaluation_loop.py:323: in log_evaluation_step_metrics\n     results.track_batch_size(batch)\n ../../pytorch_lightning/core/step_result.py:222: in track_batch_size\n     batch_size = self.unpack_batch_size(batch)\n ../../pytorch_lightning/core/step_result.py:335: in unpack_batch_size\n     size = self.unpack_batch_size(sample)\n ../../pytorch_lightning/core/step_result.py:338: in unpack_batch_size\n     size = self.unpack_batch_size(sample)\n ../../pytorch_lightning/core/step_result.py:338: in unpack_batch_size\n     size = self.unpack_batch_size(sample)\n E   RecursionError: maximum recursion depth exceeded in comparison\n !!! Recursion detected (same locals & position)\n </denchmark-code>\n \n <denchmark-h:h4>Code sample</denchmark-h>\n \n See See PR <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/3907>#3907</denchmark-link>\n .\n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n We should be able to use strings in the data returned by the dataset, and still be able to call self.log(...) in the validation loop.\n <denchmark-h:h3>Environment</denchmark-h>\n \n \n CUDA:\n - GPU: TITAN Xp\n - available:         True\n - version:           10.2\n Packages:\n - numpy:             1.19.2\n - pyTorch_debug:     False\n - pyTorch_version:   1.6.0\n - pytorch-lightning: 0.9.1rc4\n - tqdm:              4.49.0\n System:\n - OS:                Linux\n - architecture: 64bit, ELF\n - processor:         x86_64\n - python:            3.8.5\n - version:           #51~18.04.1-Ubuntu SMP Sat Sep 5 14:35:50 UTC 2020\n \n Edit: Added reference to draft PR\n \t"}, "comments": {}}, "commit": {"commit_id": "c510a7f90077140d60c47adf8e1e73638c2d1017", "commit_author": "Nathan Painchaud", "commitT": "2020-10-06 15:27:18-04:00", "commit_complexity": {"commit_NLOC": "0.5476190476190477", "commit_CCN": "0.9285714285714286", "commit_Nprams": "0.7142857142857143"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "pytorch_lightning\\core\\step_result.py", "file_new_name": "pytorch_lightning\\core\\step_result.py", "file_complexity": {"file_NLOC": "591", "file_CCN": "156", "file_NToken": "3838"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "415,416,417,418", "deleted_lines": "409", "method_info": {"method_name": "reduce_on_epoch_end", "method_params": "cls,outputs", "method_startline": "394", "method_endline": "427", "method_complexity": {"method_NLOC": "27", "method_CCN": "7", "method_NToken": "167", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "337,338", "deleted_lines": null, "method_info": {"method_name": "unpack_batch_size", "method_params": "self,sample", "method_startline": "330", "method_endline": "347", "method_complexity": {"method_NLOC": "14", "method_CCN": "5", "method_NToken": "104", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "222,223,224,225,226", "deleted_lines": "222", "method_info": {"method_name": "track_batch_size", "method_params": "self,batch", "method_startline": "221", "method_endline": "228", "method_complexity": {"method_NLOC": "7", "method_CCN": "2", "method_NToken": "43", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tests\\base\\boring_model.py", "file_new_name": "tests\\base\\boring_model.py", "file_complexity": {"file_NLOC": "71", "file_CCN": "27", "file_NToken": "646"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "28,29", "deleted_lines": null, "method_info": {"method_name": "__len__", "method_params": "self", "method_startline": "28", "method_endline": "29", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "9", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "25,26", "deleted_lines": null, "method_info": {"method_name": "__getitem__", "method_params": "self,index", "method_startline": "25", "method_endline": "26", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "25", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "21,22,23", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,size,length", "method_startline": "21", "method_endline": "23", "method_complexity": {"method_NLOC": "3", "method_CCN": "1", "method_NToken": "26", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "tests\\trainer\\logging\\test_train_loop_logging_1_0.py", "file_new_name": "tests\\trainer\\logging\\test_train_loop_logging_1_0.py", "file_complexity": {"file_NLOC": "301", "file_CCN": "31", "file_NToken": "2195"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "394,395", "deleted_lines": null, "method_info": {"method_name": "test_validation_step_with_string_data_logging.on_train_epoch_start", "method_params": "self", "method_startline": "394", "method_endline": "395", "method_complexity": {"method_NLOC": "2", "method_CCN": "1", "method_NToken": "11", "method_nesting_level": "2"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "397,398,399,400", "deleted_lines": null, "method_info": {"method_name": "test_validation_step_with_string_data_logging.training_step", "method_params": "self,batch,batch_idx", "method_startline": "397", "method_endline": "400", "method_complexity": {"method_NLOC": "4", "method_CCN": "1", "method_NToken": "36", "method_nesting_level": "2"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "402,403,404,405,406", "deleted_lines": null, "method_info": {"method_name": "test_validation_step_with_string_data_logging.validation_step", "method_params": "self,batch,batch_idx", "method_startline": "402", "method_endline": "406", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "44", "method_nesting_level": "2"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421", "deleted_lines": null, "method_info": {"method_name": "test_validation_step_with_string_data_logging", "method_params": "", "method_startline": "392", "method_endline": "421", "method_complexity": {"method_NLOC": "16", "method_CCN": "1", "method_NToken": "94", "method_nesting_level": "0"}}}}}}}}