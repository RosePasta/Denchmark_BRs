{"BR": {"BR_id": "3053", "BR_author": "yukw777", "BRopenT": "2020-08-19T20:11:59Z", "BRcloseT": "2020-08-20T11:19:12Z", "BR_text": {"BRsummary": "load_from_checkpoint() doesn't work when a LightningModule inherits from typing.Generic", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n When a LightningModule with saved hyperparameters inherits from , hyperparameters saved in the checkpoint file are not loaded automatically, causing an error. When  calls  to gather the list of arguments of the LightningModule that inherits from ,  returns  instead of the actual arguments, because  implements an empty  (the execution path ends up here: <denchmark-link:https://github.com/python/cpython/blob/3.8/Lib/inspect.py#L2324>https://github.com/python/cpython/blob/3.8/Lib/inspect.py#L2324</denchmark-link>\n ). As a result, PL filters out all the saved hyperparameters from the checkpoint, which results in an error when trying to instantiate the LightningModule. I'd assume this would happen when a LightningModule inherits from any class that implements  such as .\n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n Create a LightningModule that inherits from typing.Generic with some hyperparameters, fit it, then try to load it from a checkpoint.\n <denchmark-h:h4>Code sample</denchmark-h>\n \n import torch\n import torch.nn.functional as F\n import pytorch_lightning as pl\n \n from typing import Generic, TypeVar\n from torch.utils.data import DataLoader\n \n T = TypeVar(\"T\")\n \n \n class GenericLitClassifier(Generic[T], pl.LightningModule):\n     def __init__(self, dim):\n         super().__init__()\n         self.l1 = torch.nn.Linear(28 * 28, dim)\n         self.save_hyperparameters()\n \n     def forward(self, x):\n         return torch.relu(self.l1(x.view(x.size(0), -1)))\n \n     def training_step(self, batch, batch_nb):\n         x, y = batch\n         loss = F.cross_entropy(self(x), y)\n         tensorboard_logs = {\"train_loss\": loss}\n         return {\"loss\": loss, \"log\": tensorboard_logs}\n \n     def configure_optimizers(self):\n         return torch.optim.Adam(self.parameters(), lr=0.02)\n \n \n class LitClassifier(GenericLitClassifier[str]):\n     pass\n \n \n class Dataset:\n     def __getitem__(self, idx):\n         return torch.ones(1, 784), 1\n \n     def __len__(self):\n         return 5\n \n \n train_loader = DataLoader(Dataset(), batch_size=2)\n model = LitClassifier(10)\n trainer = pl.Trainer(max_epochs=5)\n trainer.fit(model, train_loader)\n \n for path, _ in trainer.checkpoint_callback.best_k_models.items():\n     lm = LitClassifier.load_from_checkpoint(path)\n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n Even when a LightningModule inherits from any class that implements __new__() (e.g. typing.Generic), its hyperparameters should be loaded automatically from a checkpoint.\n <denchmark-h:h3>Environment</denchmark-h>\n \n <denchmark-code>* CUDA:\n         - GPU:\n         - available:         False\n         - version:           None\n * Packages:\n         - numpy:             1.19.1\n         - pyTorch_debug:     False\n         - pyTorch_version:   1.5.1\n         - pytorch-lightning: 0.8.5\n         - tensorboard:       2.3.0\n         - tqdm:              4.48.2\n * System:\n         - OS:                Darwin\n         - architecture:\n                 - 64bit\n                 - \n         - processor:         i386\n         - python:            3.7.7\n         - version:           Darwin Kernel Version 18.7.0: Mon Apr 27 20:09:39 PDT 2020; root:xnu-4903.278.35~1/RELEASE_X86_64\n </denchmark-code>\n \n <denchmark-h:h3>Additional context</denchmark-h>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "88886ace7232c8e25ece431969c5d8d101f3368d", "commit_author": "Peter Yu", "commitT": "2020-08-20 07:19:11-04:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "0.0", "commit_Nprams": "0.1"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "pytorch_lightning\\core\\saving.py", "file_new_name": "pytorch_lightning\\core\\saving.py", "file_complexity": {"file_NLOC": "289", "file_CCN": "44", "file_NToken": "1245"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "159", "deleted_lines": "159", "method_info": {"method_name": "_load_model_state", "method_params": "cls,str,bool,cls_args,cls_kwargs", "method_startline": "157", "method_endline": "197", "method_complexity": {"method_NLOC": "25", "method_CCN": "13", "method_NToken": "241", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "51,52,53,54,55,56,57", "deleted_lines": "51,52,53,54,55,56,57", "method_info": {"method_name": "load_from_checkpoint", "method_params": "cls,str,args,str,str,device,int,None,None,bool,kwargs", "method_startline": "50", "method_endline": "57", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "55", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "51,52,53,54,55,56,57", "deleted_lines": "51,52,53,54,55,56,57", "method_info": {"method_name": "load_from_checkpoint", "method_params": "cls,str,args,str,str,device,int,None,None,bool,kwargs", "method_startline": "50", "method_endline": "57", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "56", "method_nesting_level": "1"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\base\\__init__.py", "file_new_name": "tests\\base\\__init__.py", "file_complexity": {"file_NLOC": "3", "file_CCN": "0", "file_NToken": "19"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "4", "deleted_lines": "4"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "tests\\base\\model_template.py", "file_new_name": "tests\\base\\model_template.py", "file_complexity": {"file_NLOC": "137", "file_CCN": "8", "file_NToken": "750"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "42,43,44,45,46,47,48,49,50,51,52", "deleted_lines": "41,42,43,44,45,46,47,48,49,50", "method_info": {"method_name": "__init__", "method_params": "self,float,int,int,float,str,str,int,int,float,float", "method_startline": "41", "method_endline": "52", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "76", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "42,43,44,45,46,47,48,49,50", "deleted_lines": "40,41,42,43,44,45,46,47,48,49,50", "method_info": {"method_name": "__init__", "method_params": "self,float,int,int,float,str,str,int,int,float,float", "method_startline": "39", "method_endline": "50", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "75", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "139,140,141,142,143,144,145,146,147,148,149,150", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,float,int,int,float,str,str,int,int,float,float", "method_startline": "139", "method_endline": "150", "method_complexity": {"method_NLOC": "12", "method_CCN": "1", "method_NToken": "44", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "129", "deleted_lines": null, "method_info": {"method_name": "get_default_hparams", "method_params": "bool,int", "method_startline": "113", "method_endline": "132", "method_complexity": {"method_NLOC": "18", "method_CCN": "2", "method_NToken": "92", "method_nesting_level": "1"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "88,92", "deleted_lines": "86,87,88,89", "method_info": {"method_name": "__build_model", "method_params": "self", "method_startline": "83", "method_endline": "92", "method_complexity": {"method_NLOC": "5", "method_CCN": "1", "method_NToken": "70", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "tests\\models\\test_restore.py", "file_new_name": "tests\\models\\test_restore.py", "file_complexity": {"file_NLOC": "233", "file_CCN": "23", "file_NToken": "1742"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "367,389,394", "deleted_lines": "358,359,360,365,366,367,384,385,386,387", "method_info": {"method_name": "test_strict_model_load_less_params", "method_params": "monkeypatch,tmpdir,tmpdir_server,url_ckpt", "method_startline": "355", "method_endline": "395", "method_complexity": {"method_NLOC": "23", "method_CCN": "2", "method_NToken": "174", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "154,155,157,158,179", "deleted_lines": "154,156,157,178", "method_info": {"method_name": "test_load_model_from_checkpoint", "method_params": "tmpdir", "method_startline": "154", "method_endline": "192", "method_complexity": {"method_NLOC": "24", "method_CCN": "3", "method_NToken": "209", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "274,304", "deleted_lines": "278,279,280,281", "method_info": {"method_name": "test_model_saving_loading", "method_params": "tmpdir", "method_startline": "265", "method_endline": "310", "method_complexity": {"method_NLOC": "26", "method_CCN": "4", "method_NToken": "209", "method_nesting_level": "0"}}}, "hunk_3": {"Ismethod": 1, "added_lines": "155,157,158,179", "deleted_lines": "156,157,178", "method_info": {"method_name": "test_load_model_from_checkpoint", "method_params": "tmpdir,model_template", "method_startline": "155", "method_endline": "193", "method_complexity": {"method_NLOC": "24", "method_CCN": "3", "method_NToken": "211", "method_nesting_level": "0"}}}, "hunk_4": {"Ismethod": 1, "added_lines": "328,345,350", "deleted_lines": "314,338,339,340,341", "method_info": {"method_name": "test_strict_model_load_more_params", "method_params": "monkeypatch,tmpdir,tmpdir_server,url_ckpt", "method_startline": "314", "method_endline": "351", "method_complexity": {"method_NLOC": "22", "method_CCN": "2", "method_NToken": "184", "method_nesting_level": "0"}}}, "hunk_5": {"Ismethod": 1, "added_lines": "202", "deleted_lines": "201,202,203,204,205,206", "method_info": {"method_name": "test_dp_resume", "method_params": "tmpdir", "method_startline": "197", "method_endline": "262", "method_complexity": {"method_NLOC": "27", "method_CCN": "1", "method_NToken": "198", "method_nesting_level": "0"}}}}}}}}