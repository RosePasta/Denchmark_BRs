{"BR": {"BR_id": "664", "BR_author": "JingyuQian", "BRopenT": "2019-08-24T01:28:01Z", "BRcloseT": "2019-09-25T14:35:30Z", "BR_text": {"BRsummary": "Users cannot be deleted (Server error: 500)", "BRdescription": "\n Hello, thanks for this annotation tool, it's really useful!\n \n Just curious, how do I erase all the users previously registered? I tried deleting a user in the admin panel, but received an Server error: 500.\n Once a user logged in, the next time he wants to log in with another account, how to switch between accounts? I don't see a button on the UI for it.\n \n Thanks very much!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "JingyuQian", "commentT": "2019-08-24T13:16:59Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/JingyuQian>@JingyuQian</denchmark-link>\n ,\n \n \n Just curious, how do I erase all the users previously registered? I tried deleting a user in the admin panel, but received an Server error: 500.\n \n \n It is a bug.\n \n \n Once a user logged in, the next time he wants to log in with another account, how to switch between accounts? I don't see a button on the UI for it.\n \n \n Use <denchmark-link:http://localhost:8080/auth/login>http://localhost:8080/auth/login</denchmark-link>\n  or REST point <denchmark-link:http://localhost:8080/api/v1/auth/logout>http://localhost:8080/api/v1/auth/logout</denchmark-link>\n . In the future we will add a button to logout the user.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "JingyuQian", "commentT": "2019-08-24T13:22:30Z", "comment_text": "\n \t\tThere are several problems here:\n \n  server error when you try to delete a user.\n  I don't see a way to delete a user in REST API (need to re-check)\n  New user has all groups now (admin, user, annotator, observer)\n \n <denchmark-code>[Sat Aug 24 13:08:28.547340 2019] [wsgi:error] [pid 312:tid 139630710662912] [remote 172.18.0.1:54624]   File \"/usr/local/lib/python3.5/dist-packages/django/db/backends/utils.py\", line 84, in _execute\n [Sat Aug 24 13:08:28.547351 2019] [wsgi:error] [pid 312:tid 139630710662912] [remote 172.18.0.1:54624]     return self.cursor.execute(sql, params)\n [Sat Aug 24 13:08:28.547362 2019] [wsgi:error] [pid 312:tid 139630710662912] [remote 172.18.0.1:54624] django.db.utils.ProgrammingError: relation \"allauth_socialaccount\" does not exist\n [Sat Aug 24 13:08:28.547373 2019] [wsgi:error] [pid 312:tid 139630710662912] [remote 172.18.0.1:54624] LINE 1: ...user\".\"is_active\", \"auth_user\".\"date_joined\" FROM \"allauth_s...\n [Sat Aug 24 13:08:28.547385 2019] [wsgi:error] [pid 312:tid 139630710662912] [remote 172.18.0.1:54624]\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "JingyuQian", "commentT": "2019-08-24T21:44:15Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/nmanovic>@nmanovic</denchmark-link>\n \n Thanks for the clarification.\n Per the  issue, I reinstalled Docker on my system and the problem disappeared.\n I can also confirm the third problem you mentioned above.\n \n I experimented several times and found out that admin&user groups have the right to create a new task, while annotator&observer don't (they receive a 503 error).\n All groups seem to have the right to delete a task. Maybe we can change it to only the task creator and admin can delete a task?\n \n It would be nice that in the group section of the admin panel, we can display some info about what privileges a group has.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "JingyuQian", "commentT": "2019-09-03T12:25:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/JingyuQian>@JingyuQian</denchmark-link>\n \n Hi, I have the same issue with deleting a user.\n I found a solution in <denchmark-link:https://github.com/openvinotoolkit/cvat/pull/687>#687</denchmark-link>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "JingyuQian", "commentT": "2019-09-03T12:28:43Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/JingyuQian>@JingyuQian</denchmark-link>\n \n \n I experimented several times and found out that admin&user groups have the right to create a new task, while annotator&observer don't (they receive a 503 error).\n \n It isn't a problem. Such behavior is expected.\n \n All groups seem to have the right to delete a task. Maybe we can change it to only the task creator and admin can delete a task?\n \n Are you sure? Only admin and task owner can delete a task (I've just checked it). I get code 403\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "JingyuQian", "commentT": "2019-09-03T12:31:26Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/nmanovic>@nmanovic</denchmark-link>\n \n \n New user has all groups now (admin, user, annotator, observer)\n \n Checked it on both django and rest registrations. Can't reproduce.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "JingyuQian", "commentT": "2019-09-03T18:44:36Z", "comment_text": "\n \t\t\n @JingyuQian\n \n I experimented several times and found out that admin&user groups have the right to create a new task, while annotator&observer don't (they receive a 503 error).\n \n It isn't a problem. Such behavior is expected.\n \n All groups seem to have the right to delete a task. Maybe we can change it to only the task creator and admin can delete a task?\n \n Are you sure? Only admin and task owner can delete a task (I've just checked it). I get code 403\n \n <denchmark-link:https://github.com/bsekachev>@bsekachev</denchmark-link>\n \n I didn't see such code back then. I think the system was having some issues when I was experimenting so the privileges got messed up. It would be nice if each group's privileges are shown in the admin panel.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "JingyuQian", "commentT": "2019-09-25T14:35:30Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/JingyuQian>@JingyuQian</denchmark-link>\n  ,\n The metioned problem was fixed by Boris. I will close the issue. If you see other problems please submit a new issue with corresponding title.\n \t\t"}}}, "commit": {"commit_id": "7ea84d1bc74d3d1053bef2677ece13e7add1c905", "commit_author": "Boris Sekachev", "commitT": "2019-09-03 21:43:52+03:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "cvat\\settings\\base.py", "file_new_name": "cvat\\settings\\base.py", "file_complexity": {"file_NLOC": "290", "file_CCN": "5", "file_NToken": "1357"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "111", "deleted_lines": null}}}}}}