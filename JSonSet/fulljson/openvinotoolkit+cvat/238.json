{"BR": {"BR_id": "238", "BR_author": "Paperone80", "BRopenT": "2018-12-14T15:51:53Z", "BRcloseT": "2019-01-09T12:58:18Z", "BR_text": {"BRsummary": "Utils coco converty.py line 382 throws error with key 'z_order'", "BRdescription": "\n Hi,\n I am using cvat version from 2018-11-19. I created some images solely with polygon annotations. The converter.py under utils.coco throws the following error:\n \n Processing images from cvat.xml: 0it [00:00, ?it/s]\n Traceback (most recent call last):\n File \"/projects/cvat/cvat_2018-11-19/utils/coco/converter.py\", line 420, in \n main()\n File \"/projects/cvat/cvat_2018-11-19/utils/coco/converter.py\", line 382, in main\n image['polygon'].sort(key=lambda x: int(x['z_order']))\n File \"/projects/cvat/cvat_2018-11-19/utils/coco/converter.py\", line 382, in \n image['polygon'].sort(key=lambda x: int(x['z_order']))\n KeyError: 'z_order'\n \n This line is the culprit:\n image['polygon'].sort(key=lambda x: int(x['z_order']))\n I checked the output of an image['polygon'] example and it looks like the following:\n print(image['polygon'])\n \n [{'id': '8',\n 'label': 'label_1',\n 'occluded': '0',\n 'points': '1862.39,991.17;1815.86,956.70;983.42,1675.39;1010.99,1711.59'},\n {'id': '9',\n 'label': 'label_1',\n 'occluded': '0',\n 'points': '1031.67,1959.77;1004.10,1930.47;1007.54,1909.79;1879.62,1275.55;1908.92,1306.57;1912.37,1325.53;1035.12,1951.15'},\n {'id': '10',\n 'label': 'label_2',\n 'occluded': '0',\n 'points': '1509.34,3049.35;1512.31,3156.56;1491.47,3195.28;1446.79,3213.15;1399.14,3213.15;1360.43,3183.36;1378.30,2742.60;1375.32,2173.77;1375.32,2132.07;1372.34,2060.60;1372.34,2001.03;1372.34,1938.49;1372.34,1878.93;1372.34,1822.34;1372.34,1738.95;1375.32,1667.48;1369.36,1613.87;1360.43,1619.83;1342.56,1459.01;1342.56,1414.33;1336.60,1369.66;1336.60,1351.79;1339.58,1271.38;1327.67,1226.71;1357.45,1190.97;1402.12,1185.01;1440.84,1211.82;1446.79,1357.75;1464.66,1515.59;1464.66,1724.06;1503.38,2278.00;1506.36,2671.12'}]\n \n No key 'z_order' to sort by. Uncommenting the line solved the issue for me.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Paperone80", "commentT": "2018-12-17T07:25:35Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/Paperone80>@Paperone80</denchmark-link>\n  ,\n Z-order is important to correctly overlap annotations for different objects. For example, sky can be annotated as \"big bounding boxes\" and other elements which are overlapped with sky can have precise boundaries. Thus it isn't necessary to draw boundaries twice.\n But in any case the script should work in this case without exceptions.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Paperone80", "commentT": "2018-12-18T09:23:33Z", "comment_text": "\n \t\tHi!\n The script works with annotations with obligatory field z_order for correct processing overlapped polygons. So, to avoid this error here must be a simple fix:\n <denchmark-code>if 'z_order' in polygon:\n     image['polygon'].sort(key=lambda x: int(x['z_order']))\n </denchmark-code>\n \n But in this case - without , overlapped polygons will be cropped incorrect.\n <denchmark-link:https://github.com/nmanovic>@nmanovic</denchmark-link>\n  should it be a PR?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Paperone80", "commentT": "2018-12-18T10:32:41Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/DmitriySidnev>@DmitriySidnev</denchmark-link>\n  ,\n Yes. Let's add the \"if\" and also a warning about possible problems.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Paperone80", "commentT": "2018-12-24T00:04:16Z", "comment_text": "\n \t\tThanks <denchmark-link:https://github.com/nmanovic>@nmanovic</denchmark-link>\n , <denchmark-link:https://github.com/DmitriySidnev>@DmitriySidnev</denchmark-link>\n .\n Quick question, where/how is the 'z_order' information usually created?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Paperone80", "commentT": "2018-12-24T15:10:27Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Paperone80>@Paperone80</denchmark-link>\n  ,\n When you create an annotation task you can \"check\" z_order checkbox: <denchmark-link:https://github.com/opencv/cvat/blob/develop/cvat/apps/documentation/user_guide.md#creating-an-annotation-task>https://github.com/opencv/cvat/blob/develop/cvat/apps/documentation/user_guide.md#creating-an-annotation-task</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "c5278f0b93319d882462f01e6f84787b8ed18dd1", "commit_author": "DmitriySidnev", "commitT": "2019-01-09 15:57:58+03:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "utils\\coco\\converter.py", "file_new_name": "utils\\coco\\converter.py", "file_complexity": {"file_NLOC": "320", "file_CCN": "54", "file_NToken": "2564"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "376,383,384,389,390,391,393,394,395,396,397,414,418,419,420", "deleted_lines": "387", "method_info": {"method_name": "main", "method_params": "", "method_startline": "350", "method_endline": "436", "method_complexity": {"method_NLOC": "69", "method_CCN": "13", "method_NToken": "515", "method_nesting_level": "0"}}}}}}}}