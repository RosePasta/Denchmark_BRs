{"BR": {"BR_id": "1109", "BR_author": "acriptis", "BRopenT": "2019-12-23T10:49:40Z", "BRcloseT": "2020-06-30T12:33:16Z", "BR_text": {"BRsummary": "method download_decompress downloads non-existing files", "BRdescription": "\n I've used method download_decompress to load the file from remote storage. It seems that if I provide <denchmark-link:http://files.deeppavlov.ai/spelling_crrectors/elmo_weights_ckpt3.tar.gz>broken URL</denchmark-link>\n  the method downloads content without check of file validity and tries to unpack it (although it is not archieve) and silently continues on fail.\n I think expected behavior is to raise exception for missed file on broken URL and wrong archive formats.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "acriptis", "commentT": "2019-12-23T10:51:51Z", "comment_text": "\n \t\tWe need to check a status code in simple_download(). It's weird that we do not do that already.\n \t\t"}}}, "commit": {"commit_id": "99a80409849bdf83f0c4dfcd0ddf7453e02d436e", "commit_author": "Aleksei Lymar", "commitT": "2020-06-30 11:43:35+03:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.5151515151515151", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "deeppavlov\\core\\data\\utils.py", "file_new_name": "deeppavlov\\core\\data\\utils.py", "file_complexity": {"file_NLOC": "566", "file_CCN": "90", "file_NToken": "2788"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "84,93,94,95,96,97,98,99,100,105,106", "deleted_lines": "81", "method_info": {"method_name": "simple_download", "method_params": "str,Path", "method_startline": "81", "method_endline": "138", "method_complexity": {"method_NLOC": "48", "method_CCN": "13", "method_NToken": "340", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78", "deleted_lines": "63,70,71", "method_info": {"method_name": "s3_download", "method_params": "str,str", "method_startline": "60", "method_endline": "78", "method_complexity": {"method_NLOC": "17", "method_CCN": "1", "method_NToken": "98", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "deeppavlov\\download.py", "file_new_name": "deeppavlov\\download.py", "file_complexity": {"file_NLOC": "121", "file_CCN": "41", "file_NToken": "972"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,99", "deleted_lines": "80,81,84", "method_info": {"method_name": "check_md5", "method_params": "str", "method_startline": "78", "method_endline": "124", "method_complexity": {"method_NLOC": "41", "method_CCN": "13", "method_NToken": "286", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "160", "deleted_lines": null, "method_info": {"method_name": "deep_download", "method_params": "str,Path", "method_startline": "156", "method_endline": "162", "method_complexity": {"method_NLOC": "6", "method_CCN": "4", "method_NToken": "71", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "setup.py", "file_new_name": "setup.py", "file_complexity": {"file_NLOC": "58", "file_CCN": "6", "file_NToken": "340"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "67,68,74,75,76,77,78", "deleted_lines": "67,73"}}}}}}