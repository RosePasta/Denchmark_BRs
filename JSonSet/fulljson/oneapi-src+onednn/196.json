{"BR": {"BR_id": "196", "BR_author": "renevs", "BRopenT": "2018-03-12T22:09:01Z", "BRcloseT": "2018-03-13T19:33:59Z", "BR_text": {"BRsummary": "Conflict c++ concepts declaration and mkldnn", "BRdescription": "\n <denchmark-h:h3>Description</denchmark-h>\n \n Conflict c++ concepts declaration and mkldnn\n When I execute the intel example \"simple_net.cpp\" including a specific concepts C++ declaration, before the code, as below, I receive the message \"status: 3 message: could not submit primitives to a stream\".\n I've investigated the problem and I realized that the line:\n net_weights.push_back( reorder(user_weights_memory, conv1_weights_memory)); , only in this situation, call the private constructor:\n handle(const handle &&) {} , from handle class in mkldnn.hpp.\n I think, in this specific case, It should be:\n handle(const handle &&other):_data(other._data) {}\n //***********************************************************************************\n // Code that causes error - start\n //***********************************************************************************\n template <typename Src, typename Dst>\n concept bool VectorSource()\n {\n return true;\n }\n template \n class MeuTVector\n {\n template < VectorSource X>\n MeuTVector operator=(X const& x) const\n {\n assert( count(this) == count(x) );\n assign_to(this, x);\n return this;\n }\n };\n //*****************************************************************\n // Code that causes error - end\n //*******************************************************************\n // simple_net.cpp code starts here...\n <denchmark-h:h3>Environment</denchmark-h>\n \n Intel MKL-DNN includes hardware-specific optimizations and may behave\n differently on depending on the compiler and build environment. Include\n the following information to help reproduce the issue:\n \n \n CPU make and model (try lscpu)\n Architecture:                x86_64\n CPU operational mode: 32-bit, 64-bit\n CPU(s):                     4\n On-line CPU(s) list:        0-3\n Thread(s) per core        2\n Cores(s) per socket:      2\n Sockets(s):                 1\n NUMA Nodes:              1\n supplier ID:           GenuineIntel\n CPU Family:             6\n Model:                     78\n Model name:                 Intel(R) Core(TM) i7-6500U CPU @ 2.50GHz\n Step:                       3\n Virtualization:              VT-x\n NUMA node0 CPU(s):          0-3\n Flags:                      fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti retpoline intel_pt rsb_ctxsw spec_ctrl tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp\n \n \n OS version (uname -a)\n Linux 4.13.0-36-generic #40-Ubuntu SMP Fri Feb 16 20:07:48 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n \n \n Compiler version (gcc --version)\n g++ (GCC) 7.2.0\n \n \n MKLROOT value (echo MKLROOT=$MKLROOT)\n /opt/intel/compilers_and_libraries_2018.1.163/linux/mkl\n \n \n CMake version (cmake --version)\n GNU Make 4.1\n \n \n CMake output log\n 18:41:28: Starting: \"/usr/bin/make\"\n g++ -c -pipe -std=c++17 -mavx2 -mfma -mfpmath=sse -msse2 -fconcepts -frounding-math -fsignaling-nans -fext-numeric-literals -m64 -I/opt/intel/compilers_and_libraries_2018.1.163/linux/mkl/include -g -Wall -W -fPIC -DIME_WITH_MKL -DMKL_ILP64 -DQT_QML_DEBUG -I../mkl-dnn-teste -I. -I/home/rene/dev -I../../../../usp -I/home/rene/apps/Qt/5.10.0/gcc_64/mkspecs/linux-g++ -o simple_net.o ../mkl-dnn-teste/simple_net.cpp\n ../mkl-dnn-teste/simple_net.cpp: Na fun\u00e7\u00e3o \u2018int main(int, char**)\u2019:\n ../mkl-dnn-teste/simple_net.cpp:850:14: aviso: unused parameter \u2018argc\u2019 [-Wunused-parameter]\n int main(int argc, char **argv) {\n ^~~~\n ../mkl-dnn-teste/simple_net.cpp:850:27: aviso: unused parameter \u2018argv\u2019 [-Wunused-parameter]\n int main(int argc, char **argv) {\n ^~~~\n g++  -o mkl-dnn-teste simple_net.o   -lquadmath -lmpfr -lgmp -l:gtest/libgtest.a -Wl,--start-group /opt/intel/compilers_and_libraries_2018.1.163/linux/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/compilers_and_libraries_2018.1.163/linux/mkl/lib/intel64/libmkl_intel_thread.a /opt/intel/compilers_and_libraries_2018.1.163/linux/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -liomp5 -lpthread -lm -ldl -lmkldnn -L/opt/intel/compilers_and_libraries_2018.1.163/linux/mkl/../compiler/lib/intel64\n \n \n <denchmark-h:h3>Steps to reproduce</denchmark-h>\n \n \n Include the code above in simple_net.cpp\n run the code.\n or only execute the attached source.\n simple_net.cpp.txt\n \n <denchmark-h:h3>Actual behavior</denchmark-h>\n \n \"status: 3 message: could not submit primitives to a stream\"\n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n show the message: Use time XXX\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "renevs", "commentT": "2018-03-13T16:33:50Z", "comment_text": "\n \t\tThanks for the bug and investigation!\n The behavior of g++ is very strange.\n I put a small standalone <denchmark-link:https://gist.github.com/emfomenk/c6d21cc85e9904d44f2a49bf98b0c02f>reproducer</denchmark-link>\n .\n Seems like it allows accessing the private move constructor even though it should not.\n Anyway we should just delete move ctor & assignment operator from handle class.\n I will push the fix soon.\n Thanks again!\n \t\t"}}}, "commit": {"commit_id": "f5218ff4fd2d16d13aada2e632afd18f2514fee3", "commit_author": "Fomenko, Evarist M", "commitT": "2018-03-13 16:44:14+00:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "0.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "include\\mkldnn.hpp", "file_new_name": "include\\mkldnn.hpp", "file_complexity": {"file_NLOC": "2417", "file_CCN": "261", "file_NToken": "15908"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "58", "deleted_lines": "58", "method_info": {"method_name": "mkldnn::handle::handle", "method_params": "", "method_startline": "58", "method_endline": "58", "method_complexity": {"method_NLOC": "1", "method_CCN": "1", "method_NToken": "8", "method_nesting_level": "2"}}}}}}}}