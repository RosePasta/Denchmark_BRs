{"BR": {"BR_id": "214", "BR_author": "cdluminate", "BRopenT": "2018-04-13T02:45:34Z", "BRcloseT": "2018-05-11T22:36:08Z", "BR_text": {"BRsummary": "examples/simple_net_int8.cpp not working", "BRdescription": "\n Installed the MKL-DNN debian package, and encountered an error when trying to compile an example:\n <denchmark-code>~/p/m/m/examples \u276f\u276f\u276f apt list libmkldnn-dev\n Listing... Done\n libmkldnn-dev/now 0.13~20180406-ga5f6077-1 amd64 [installed,local]\n ~/p/m/m/examples \u276f\u276f\u276f g++ simple_net_int8.cpp -lmkldnn\n ~/p/m/m/examples \u276f\u276f\u276f ./a.out \n status: 5\n message: could not create a convolution forward primitive descriptor\n </denchmark-code>\n \n The other examples are fine.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "cdluminate", "commentT": "2018-04-14T22:14:50Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/cdluminate>@cdluminate</denchmark-link>\n ,\n What is the hardware?\n Int8 requires the CPU with avx512-bw support, e.g. Skylake server.\n For other systems there is a fallback code based on Intel MKL (or Intel MKL-ML binary blob), but if you build Intel MKL-DNN as a standalone library then this fallback is unavailable.\n We should probably adjust the example to report more meaningful error message in case of hardware incompatibility...\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "cdluminate", "commentT": "2018-04-15T01:54:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/emfomenk>@emfomenk</denchmark-link>\n  My CPU is 7440HQ, which has no AVX512-bw as far as I know. The library was built standalone without MKL or MKL-ML,so I guess the fallback is unavailable.\n So this is a issue about a more meaningful error report.\n \t\t"}}}, "commit": {"commit_id": "1d7e35426a7f4c1cd51c1b0c04f319618fa70876", "commit_author": "Sokolova, Irina", "commitT": "2018-05-07 09:15:14-07:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "examples\\simple_net_int8.cpp", "file_new_name": "examples\\simple_net_int8.cpp", "file_complexity": {"file_NLOC": "134", "file_CCN": "6", "file_NToken": "1177"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "114,115,116,117,118,119,120,121,122,123,124,125", "deleted_lines": "187", "method_info": {"method_name": "simple_net_int8", "method_params": "", "method_startline": "24", "method_endline": "191", "method_complexity": {"method_NLOC": "119", "method_CCN": "4", "method_NToken": "1088", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "199", "deleted_lines": null, "method_info": {"method_name": "main", "method_params": "argc,argv", "method_startline": "193", "method_endline": "205", "method_complexity": {"method_NLOC": "10", "method_CCN": "2", "method_NToken": "75", "method_nesting_level": "0"}}}}}}}}