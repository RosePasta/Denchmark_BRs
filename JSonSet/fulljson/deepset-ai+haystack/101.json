{"BR": {"BR_id": "101", "BR_author": "sonnylaskar", "BRopenT": "2020-05-08T11:05:22Z", "BRcloseT": "2020-05-11T10:28:56Z", "BR_text": {"BRsummary": "Passing EXCLUDE_META_DATA_FIELDS to api", "BRdescription": "\n Hi,\n The <denchmark-link:https://github.com/deepset-ai/haystack/blob/master/tutorials/Tutorial4_FAQ_style_QA.ipynb>FAQ</denchmark-link>\n  tutorial works but I am facing issues while running the api.\n I tried this:\n \n $ export EMBEDDING_MODEL_PATH=deepset/sentence_bert\n $ export DB_INDEX=document\n $ export TEXT_FIELD_NAME=answer\n $ export EMBEDDING_FIELD_NAME=question_emb\n $ export EMBEDDING_DIM=768\n $ gunicorn haystack.api.application:app -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker\n \n On making a curl call, it throws the below error:\n <denchmark-code>$ curl -X POST \"http://localhost:8000/models/1/faq-qa\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{\\\"questions\\\":[\\\"How is the virus spreading?\\\"]}\"\n Inferencing Samples: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00,  2.07 Batches/s]\n [2020-05-08 10:39:42 +0000] [8828] [ERROR] Exception in ASGI application\n Traceback (most recent call last):\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 385, in run_asgi\n     result = await app(self.scope, self.receive, self.send)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\n     return await self.app(scope, receive, send)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/fastapi/applications.py\", line 151, in __call__\n     await super().__call__(scope, receive, send)  # pragma: no cover\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/applications.py\", line 102, in __call__\n     await self.middleware_stack(scope, receive, send)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/middleware/errors.py\", line 181, in __call__\n     raise exc from None\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/middleware/errors.py\", line 159, in __call__\n     await self.app(scope, receive, _send)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/middleware/cors.py\", line 84, in __call__\n     await self.simple_response(scope, receive, send, request_headers=headers)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/middleware/cors.py\", line 140, in simple_response\n     await self.app(scope, receive, send)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/exceptions.py\", line 82, in __call__\n     raise exc from None\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/exceptions.py\", line 71, in __call__\n     await self.app(scope, receive, sender)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/routing.py\", line 550, in __call__\n     await route.handle(scope, receive, send)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/routing.py\", line 227, in handle\n     await self.app(scope, receive, send)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/routing.py\", line 41, in app\n     response = await func(request)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/fastapi/routing.py\", line 197, in app\n     dependant=dependant, values=values, is_coroutine=is_coroutine\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/fastapi/routing.py\", line 150, in run_endpoint_function\n     return await run_in_threadpool(dependant.call, **values)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/starlette/concurrency.py\", line 34, in run_in_threadpool\n     return await loop.run_in_executor(None, func, *args)\n   File \"/home/ubuntu/anaconda3/envs/pytorch_p36/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\n     result = self.fn(*self.args, **self.kwargs)\n   File \"/home/ubuntu/haystack/haystack/api/controller/search.py\", line 147, in faq_qa\n     question=question, top_k_retriever=request.top_k_retriever, filters=request.filters,\n   File \"/home/ubuntu/haystack/haystack/finder.py\", line 83, in get_answers_via_similar_questions\n     documents = self.retriever.retrieve(question, top_k=top_k_retriever, candidate_doc_ids=candidate_doc_ids)\n   File \"/home/ubuntu/haystack/haystack/retriever/elasticsearch.py\", line 92, in retrieve\n     documents = self.document_store.query_by_embedding(query_emb[0], top_k, candidate_doc_ids)\n   File \"/home/ubuntu/haystack/haystack/database/elasticsearch.py\", line 186, in query_by_embedding\n     documents = [self._convert_es_hit_to_document(hit, score_adjustment=-1) for hit in result]\n   File \"/home/ubuntu/haystack/haystack/database/elasticsearch.py\", line 186, in <listcomp>\n     documents = [self._convert_es_hit_to_document(hit, score_adjustment=-1) for hit in result]\n   File \"/home/ubuntu/haystack/haystack/database/elasticsearch.py\", line 199, in _convert_es_hit_to_document\n     query_score=hit[\"_score\"] + score_adjustment if hit[\"_score\"] else None,\n   File \"pydantic/main.py\", line 338, in pydantic.main.BaseModel.__init__\n pydantic.error_wrappers.ValidationError: 1 validation error for Document\n meta -> question_emb\n   str type expected (type=type_error.str)\n \n </denchmark-code>\n \n I think it is expecting EXCLUDE_META_DATA_FIELDS but I am not sure how to set that.\n I tried export EXCLUDE_META_DATA_FIELDS=[\"question_emb\"] and export EXCLUDE_META_DATA_FIELDS=(\"question_emb\") but no luck.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "sonnylaskar", "commentT": "2020-05-08T18:29:58Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/sonnylaskar>@sonnylaskar</denchmark-link>\n , the error is in the <denchmark-link:https://github.com/deepset-ai/haystack/blob/cdc38e7b2e1c1d583ff0ae5e745d24cf035bfb09/haystack/database/base.py#L29>Document</denchmark-link>\n  schema validation.\n The elements of <denchmark-link:https://github.com/deepset-ai/haystack/blob/cdc38e7b2e1c1d583ff0ae5e745d24cf035bfb09/haystack/database/base.py#L40>meta</denchmark-link>\n  field of Document are validated to be str values, but it breaks here for FAQs, as the question embedding is of vector type.\n It should now be fixed by <denchmark-link:https://github.com/deepset-ai/haystack/pull/102>#102</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "sonnylaskar", "commentT": "2020-05-08T19:53:02Z", "comment_text": "\n \t\tThanks <denchmark-link:https://github.com/tanaysoni>@tanaysoni</denchmark-link>\n  , this solves the issue.\n Another query:\n I couldn't figure out how to get additional meta fields also returned in the results response.\n Currently, the results object contains\n <denchmark-code>question, \n answers.answer\n answers.question\n answer.probability\n ...\n \n </denchmark-code>\n \n How do I get other fields from the same document? I think that should come under \"meta\" but I am not aware of how to specify that? Is there any environment variable?\n \t\t"}}}, "commit": {"commit_id": "11f77abbd1a5f0ae2a65d93dd7660d043169e25d", "commit_author": "Tanay Soni", "commitT": "2020-05-08 20:28:52+02:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "haystack\\database\\base.py", "file_new_name": "haystack\\database\\base.py", "file_complexity": {"file_NLOC": "35", "file_CCN": "7", "file_NToken": "187"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2,40", "deleted_lines": "2,40"}}}}}}