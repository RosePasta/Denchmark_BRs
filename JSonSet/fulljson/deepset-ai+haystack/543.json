{"BR": {"BR_id": "543", "BR_author": "x0rzkov", "BRopenT": "2020-11-04T07:37:42Z", "BRcloseT": "2020-11-05T16:39:40Z", "BR_text": {"BRsummary": "FAISSDocumentStore + mysql 5.7", "BRdescription": "\n Hi guys,\n Hope you are all well !\n I tried to setup a mysql connector to the FAISSDocumentStore but it triggers the following error:\n Traceback (most recent call last):\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 2904, in visit_create_table\n     create_column, first_pk=column.primary_key and not first_pk\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 352, in process\n     return obj._compiler_dispatch(self, **kwargs)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/visitors.py\", line 96, in _compiler_dispatch\n     return meth(self, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 2937, in visit_create_column\n     text = self.get_column_specification(column, first_pk=first_pk)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/dialects/mysql/base.py\", line 1716, in get_column_specification\n     column.type, type_expression=column\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 402, in process\n     return type_._compiler_dispatch(self, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/visitors.py\", line 96, in _compiler_dispatch\n     return meth(self, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 3425, in visit_string\n     return self.visit_VARCHAR(type_, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/dialects/mysql/base.py\", line 2203, in visit_VARCHAR\n     \"VARCHAR requires a length on dialect %s\" % self.dialect.name\n sqlalchemy.exc.CompileError: VARCHAR requires a length on dialect mysql\n \n The above exception was the direct cause of the following exception:\n \n Traceback (most recent call last):\n   File \"train-faiss.py\", line 185, in <module>\n     service()\n   File \"/usr/local/lib/python3.7/dist-packages/click/core.py\", line 829, in __call__\n     return self.main(*args, **kwargs)\n   File \"/usr/local/lib/python3.7/dist-packages/click/core.py\", line 782, in main\n     rv = self.invoke(ctx)\n   File \"/usr/local/lib/python3.7/dist-packages/click/core.py\", line 1066, in invoke\n     return ctx.invoke(self.callback, **ctx.params)\n   File \"/usr/local/lib/python3.7/dist-packages/click/core.py\", line 610, in invoke\n     return callback(*args, **kwargs)\n   File \"train-faiss.py\", line 182, in service\n     train_model(data_dir, host, port, index_name, index_reset, username, password)\n   File \"train-faiss.py\", line 91, in train_model\n     document_store = FAISSDocumentStore(sql_url=sql_url)\n   File \"/usr/local/lib/python3.7/dist-packages/haystack/document_store/faiss.py\", line 76, in __init__\n     super().__init__(url=sql_url)\n   File \"/usr/local/lib/python3.7/dist-packages/haystack/document_store/sql.py\", line 62, in __init__\n     ORMBase.metadata.create_all(engine)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/schema.py\", line 4554, in create_all\n     ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\", line 2095, in _run_visitor\n     conn._run_visitor(visitorcallable, element, **kwargs)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\", line 1656, in _run_visitor\n     visitorcallable(self.dialect, self, **kwargs).traverse_single(element)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/visitors.py\", line 145, in traverse_single\n     return meth(obj, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/ddl.py\", line 787, in visit_metadata\n     _is_metadata_operation=True,\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/visitors.py\", line 145, in traverse_single\n     return meth(obj, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/ddl.py\", line 832, in visit_table\n     include_foreign_key_constraints,  # noqa\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\", line 1011, in execute\n     return meth(self, multiparams, params)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/ddl.py\", line 72, in _execute_on_connection\n     return connection._execute_ddl(self, multiparams, params)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\", line 1066, in _execute_ddl\n     else None,\n   File \"<string>\", line 1, in <lambda>\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/elements.py\", line 481, in compile\n     return self._compiler(dialect, bind=bind, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/ddl.py\", line 29, in _compiler\n     return dialect.ddl_compiler(dialect, self, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 322, in __init__\n     self.string = self.process(self.statement, **compile_kwargs)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 352, in process\n     return obj._compiler_dispatch(self, **kwargs)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/visitors.py\", line 96, in _compiler_dispatch\n     return meth(self, **kw)\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/compiler.py\", line 2918, in visit_create_table\n     from_=ce,\n   File \"/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py\", line 182, in raise_\n     raise exception\n sqlalchemy.exc.CompileError: (in table 'document', column 'id'): VARCHAR requires a length on dialect mysql\n Is it possible to sort it out ?\n Cheers,\n X\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "x0rzkov", "commentT": "2020-11-05T16:41:33Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/x0rzkov>@x0rzkov</denchmark-link>\n , thank you for raising the issue. MySQL should now be compatible with <denchmark-link:https://github.com/deepset-ai/haystack/pull/556>#556</denchmark-link>\n .\n Please feel free to update if you face any errors.\n \t\t"}}}, "commit": {"commit_id": "d744dc109cbdc93f70866e241e987da57a8e6d42", "commit_author": "Tanay Soni", "commitT": "2020-11-05 17:39:39+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "haystack\\document_store\\sql.py", "file_new_name": "haystack\\document_store\\sql.py", "file_complexity": {"file_NLOC": "187", "file_CCN": "46", "file_NToken": "1832"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "4,19,27,28,29,34,38,39,40,48,49,51,52,55", "deleted_lines": "4,19,27,28,29,37,38,39,47,48,50,51,54"}}}}}}