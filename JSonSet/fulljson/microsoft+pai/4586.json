{"BR": {"BR_id": "4586", "BR_author": "xulzee", "BRopenT": "2020-05-29T12:47:32Z", "BRcloseT": "2020-06-02T02:12:32Z", "BR_text": {"BRsummary": "Feedback v1.0.0 Private Registry Use Problem", "BRdescription": "\n Hello,\n I checked the help document about how to use private registry, but I found that when I used to use v0.14.0, I could use\n 192.168.1.106:5000/cheng Tong/ pytorch:1.3-cuda10.0-cudnn7-runtime-dali \n But in v1.0.0, I need to fill in all username, passwd and registryuri in auth, but my private registry does not need password.\n Is there any way to leave some options blank?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "xulzee", "commentT": "2020-05-29T17:36:43Z", "comment_text": "\n \t\twhat error did you get if you only specify uri: 192.168.1.106:5000/... without auth field in job config?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "xulzee", "commentT": "2020-05-30T08:54:19Z", "comment_text": "\n \t\tI broke my system (added a node), so I can't give you detailed logs. =\uff0c=\n The approximate output is,  can't find 192.168.1.106:5000/... in docker.index.io\n It looks like the default pull in docker.io\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "xulzee", "commentT": "2020-05-30T14:12:37Z", "comment_text": "\n \t\tThe error is\n <denchmark-code>[Exit Trigger Info]\n \n ExitTriggerMessage: FailedTaskCount 1 has reached MinFailedTaskCount 1 in the TaskRole\n ExitTriggerTaskRole: taskrole\n ExitTriggerTaskIndex: 0\n \n --------------------------------------------------------------------------------\n \n [Exit Spec]\n \n code: 254\n phrase: ContainerImageNotExists\n issuer: PAI_RUNTIME\n causer: PAI_RUNTIME\n type: USER_FAILURE\n stage: LAUNCHING\n behavior: PERMANENT\n reaction: NEVER_RETRY\n reason: 'Pull access denied, repository does not exist or may require authentication'\n repro:\n   - Submit job with incorrect docker image uri\n solution:\n   - Correct docker image uri in job protocol\n \n \n --------------------------------------------------------------------------------\n \n [Exit Diagnostics]\n \n Pod failed: PodPattern matched:\n containers:\n   - name: init\n     message: >\n \n       + python /usr/local/pai/init.d/image_checker.py\n       /usr/local/pai/runtime.d/job_config.yaml\n       /usr/local/pai/secrets/secrets.yaml\n \n       2020-05-30 14:10:33,234 - INFO - image_checker.py:236 - get job config\n       from /usr/local/pai/runtime.d/job_config.yaml\n \n       2020-05-30 14:10:33,239 - INFO - image_checker.py:246 - Start checking\n       docker image\n \n       2020-05-30 14:10:33,242 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): index.docker.io:443\n \n       2020-05-30 14:10:34,563 - DEBUG - connectionpool.py:437 -\n       https://index.docker.io:443 \"HEAD /v2/ HTTP/1.1\" 401 0\n \n       2020-05-30 14:10:34,569 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): index.docker.io:443\n \n       2020-05-30 14:10:35,664 - DEBUG - connectionpool.py:437 -\n       https://index.docker.io:443 \"HEAD\n       /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1\"\n       401 0\n \n       2020-05-30 14:10:35,670 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): auth.docker.io:443\n \n       2020-05-30 14:10:36,850 - DEBUG - connectionpool.py:437 -\n       https://auth.docker.io:443 \"GET\n       /token?service=registry.docker.io&scope=repository%3Achentong%2Fpytorch%3Apull\n       HTTP/1.1\" 200 None\n \n       2020-05-30 14:10:36,854 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): index.docker.io:443\n \n       2020-05-30 14:10:38,039 - DEBUG - connectionpool.py:437 -\n       https://index.docker.io:443 \"HEAD\n       /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1\"\n       401 0\n \n       2020-05-30 14:10:38,041 - INFO - image_checker.py:223 - image\n       192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali not\n       found or user unauthorized, registry is https://index.docker.io/v2/, resp\n       code is 401\n \n       + exit_handler\n \n       + EXIT_CODE=1\n \n       + '[[' 1 -eq 0 ]]\n \n       + echo 'start execute exit handler'\n \n       start execute exit handler\n \n       + echo 'child process is DOCKER_IMAGE_CHECKER, exit code is 1'\n \n       child process is DOCKER_IMAGE_CHECKER, exit code is 1\n \n       + '[[' DOCKER_IMAGE_CHECKER '=' FRAMEWORK_BARRIER ]]\n \n       + '[[' DOCKER_IMAGE_CHECKER '=' PORT_CONFLICT_CHECKER ]]\n \n       + '[[' DOCKER_IMAGE_CHECKER '=' DOCKER_IMAGE_CHECKER ]]\n \n       + exit 254\n     code: 254\n \n </denchmark-code>\n \n <denchmark-link:https://user-images.githubusercontent.com/29273676/83330596-a8594800-a2c2-11ea-87a3-4f2b3e6a0e1e.png></denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "xulzee", "commentT": "2020-05-30T20:12:32Z", "comment_text": "\n \t\tI think it's a bug.\n As a workaround, pls set auth.registry_uri for now (and skip username/password).\n <denchmark-h:hr></denchmark-h>\n \n <denchmark-link:https://github.com/Binyang2014>@Binyang2014</denchmark-link>\n  why still use  if having already checked  is false?\n \n \n \n pai/src/kube-runtime/src/init.d/image_checker.py\n \n \n         Lines 119 to 122\n       in\n       3871e5d\n \n \n \n \n \n \n  def _is_image_use_default_domain(self) -> bool: \n \n \n \n  index = self._image_uri.find(\"/\") \n \n \n \n  return index == -1 or all(ch not in [\".\", \":\"] \n \n \n \n  for ch in self._image_uri[:index]) \n \n \n \n \n \n auth.registry_uri should not be required, which is only used to login registry instead of pulling/checking image.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "xulzee", "commentT": "2020-05-31T01:31:54Z", "comment_text": "\n \t\tHello, I can't just fill in now auth.registry_ Uri (and skip username / password). It will prompt the error please input all fileds:\n <denchmark-link:https://user-images.githubusercontent.com/29273676/83342390-8cd15a00-a321-11ea-8a14-8439c904d76b.png></denchmark-link>\n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "xulzee", "commentT": "2020-05-31T02:49:13Z", "comment_text": "\n \t\t\n @Binyang2014 why still use DEFAULT_REGISTRY if having already checked _is_image_use_default_domain is false?\n \n <denchmark-link:https://github.com/abuccts>@abuccts</denchmark-link>\n  I think it's a bug, will fix it.\n <denchmark-link:https://github.com/xulzee>@xulzee</denchmark-link>\n  for workaround, please click  button, and change the  in yaml like this:\n prerequisites:\n   - type: dockerimage\n     uri: '192.168.1.106:5000/chengtong/ pytorch:1.3-cuda10.0-cudnn7-runtime-dali'\n     name: docker_image_0\n     auth:\n       registryuri: '192.168.1.106:5000'\n This can ignore the username and password field\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "xulzee", "commentT": "2020-05-31T03:01:18Z", "comment_text": "\n \t\tIt seems that there are still some problems.\n here is my yaml\n <denchmark-code>prerequisites:\n   - type: dockerimage\n     uri: '192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali'\n     name: docker_image_0\n     auth:\n       registryuri: '192.168.1.106:5000'\n </denchmark-code>\n \n then get Exit Diagnostics\n <denchmark-code>[Exit Diagnostics]\n \n Pod failed: PodPattern matched:\n containers:\n   - name: init\n     message: >\n \n       + python /usr/local/pai/init.d/image_checker.py\n       /usr/local/pai/runtime.d/job_config.yaml\n       /usr/local/pai/secrets/secrets.yaml\n \n       2020-05-31 02:59:15,934 - INFO - image_checker.py:236 - get job config\n       from /usr/local/pai/runtime.d/job_config.yaml\n \n       2020-05-31 02:59:15,940 - INFO - image_checker.py:246 - Start checking\n       docker image\n \n       2020-05-31 02:59:15,943 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): index.docker.io:443\n \n       2020-05-31 02:59:17,049 - DEBUG - connectionpool.py:437 -\n       https://index.docker.io:443 \"HEAD /v2/ HTTP/1.1\" 401 0\n \n       2020-05-31 02:59:17,055 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): index.docker.io:443\n \n       2020-05-31 02:59:18,197 - DEBUG - connectionpool.py:437 -\n       https://index.docker.io:443 \"HEAD\n       /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1\"\n       401 0\n \n       2020-05-31 02:59:18,202 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): auth.docker.io:443\n \n       2020-05-31 02:59:19,229 - DEBUG - connectionpool.py:437 -\n       https://auth.docker.io:443 \"GET\n       /token?service=registry.docker.io&scope=repository%3Achentong%2Fpytorch%3Apull\n       HTTP/1.1\" 200 None\n \n       2020-05-31 02:59:19,234 - DEBUG - connectionpool.py:959 - Starting new\n       HTTPS connection (1): index.docker.io:443\n \n       2020-05-31 02:59:20,416 - DEBUG - connectionpool.py:437 -\n       https://index.docker.io:443 \"HEAD\n       /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1\"\n       401 0\n \n       2020-05-31 02:59:20,418 - INFO - image_checker.py:223 - image\n       192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali not\n       found or user unauthorized, registry is https://index.docker.io/v2/, resp\n       code is 401\n \n       + exit_handler\n \n       + EXIT_CODE=1\n \n       + '[[' 1 -eq 0 ]]\n \n       + echo 'start execute exit handler'\n \n       start execute exit handler\n \n       + echo 'child process is DOCKER_IMAGE_CHECKER, exit code is 1'\n \n       child process is DOCKER_IMAGE_CHECKER, exit code is 1\n \n       + '[[' DOCKER_IMAGE_CHECKER '=' FRAMEWORK_BARRIER ]]\n \n       + '[[' DOCKER_IMAGE_CHECKER '=' PORT_CONFLICT_CHECKER ]]\n \n       + '[[' DOCKER_IMAGE_CHECKER '=' DOCKER_IMAGE_CHECKER ]]\n \n       + exit 254\n     code: 254\n </denchmark-code>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "xulzee", "commentT": "2020-05-31T03:33:08Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/xulzee>@xulzee</denchmark-link>\n  Sorry for this, just check the code. Can you change the yaml spec to:\n prerequisites:\n   - type: dockerimage\n     uri: '192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali'\n     name: docker_image_0\n     auth:\n       registryuri: '192.168.1.106:5000'\n secrets:\n   fake: fake\n Please add a fake secret in yaml spec. This may pass the image check\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "xulzee", "commentT": "2020-05-31T04:14:55Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/Binyang2014>@Binyang2014</denchmark-link>\n  It works!\n Thank you\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "xulzee", "commentT": "2020-06-01T05:32:05Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Binyang2014>@Binyang2014</denchmark-link>\n  <denchmark-link:https://github.com/hzy46>@hzy46</denchmark-link>\n  - can we get this in 1.0.1?\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "xulzee", "commentT": "2020-06-01T05:33:20Z", "comment_text": "\n \t\t\n @Binyang2014 @hzy46 - can we get this in 1.0.1?\n \n We can. Binyang will submit a PR to pai-1.0.y recently.\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "xulzee", "commentT": "2020-06-02T02:12:32Z", "comment_text": "\n \t\tPR merged, close this this issue.\n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "xulzee", "commentT": "2020-06-02T11:59:36Z", "comment_text": "\n \t\thello, is 1.0.1 released? How should I install it?\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "xulzee", "commentT": "2020-06-02T14:40:10Z", "comment_text": "\n \t\t\n hello, is 1.0.1 released? How should I install it?\n \n Yes. Make sure you can use paictl: <denchmark-link:https://openpai.readthedocs.io/en/latest/manual/cluster-admin/basic-management-operations.html#pai-service-management-and-paictl>https://openpai.readthedocs.io/en/latest/manual/cluster-admin/basic-management-operations.html#pai-service-management-and-paictl</denchmark-link>\n \n Then follow:\n # stop all PAI services\n ./paictl.py service stop\n \n # change the docker tag from v1.0.0 to v1.0.1\n vim <config-folder>/services-configuration.yaml\n \n # push config\n ./paictl.py config push -p <config-folder> -m service\n \n # start all PAI services\n ./paictl.py service start\n \t\t"}}}, "commit": {"commit_id": "ced659c33c7c4f08c8c62cc9bd9970e65326adbd", "commit_author": "Binyang2014", "commitT": "2020-06-02 10:10:53+08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\openpai-runtime\\build\\openpai-runtime.k8s.dockerfile", "file_new_name": "src\\openpai-runtime\\build\\openpai-runtime.k8s.dockerfile", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "18", "deleted_lines": "18"}}}}}}