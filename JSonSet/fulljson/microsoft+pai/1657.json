{"BR": {"BR_id": "1657", "BR_author": "DongZhaoYu", "BRopenT": "2018-11-02T09:15:42Z", "BRcloseT": "2019-04-09T12:26:23Z", "BR_text": {"BRsummary": "systemctl docker restart fail on some machine", "BRdescription": "\n On some machine this command failed with error;\n Failed to issue method call: Unit docker.service failed to load: No such file or directory. See system logs and 'systemctl status docker.service' for details.\n But the command \"service docker restart\" can be used. We may need to fix our script to execute this command if systemctl fails.\n <denchmark-h:hr></denchmark-h>\n \n Resolution:\n \n add a system validation\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "DongZhaoYu", "commentT": "2018-11-02T10:31:24Z", "comment_text": "\n \t\tCan you post a link to the related code snippet?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "DongZhaoYu", "commentT": "2018-11-02T14:12:23Z", "comment_text": "\n \t\tthe code line:\n <denchmark-link:https://github.com/Microsoft/pai/blob/master/deployment/k8sPaiLibrary/maintaintool/docker-ce-install.sh#L87>https://github.com/Microsoft/pai/blob/master/deployment/k8sPaiLibrary/maintaintool/docker-ce-install.sh#L87</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "DongZhaoYu", "commentT": "2018-11-07T04:05:50Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/DongZhaoYu>@DongZhaoYu</denchmark-link>\n \n Maybe we can change the code like this?\n <denchmark-code>systemctl restart docker || service docker restart || exit $?\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "DongZhaoYu", "commentT": "2018-11-21T10:49:56Z", "comment_text": "\n \t\ta related issue. <denchmark-link:https://github.com/microsoft/pai/issues/1231>#1231</denchmark-link>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "DongZhaoYu", "commentT": "2019-04-08T02:41:34Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/scarlett2018>@scarlett2018</denchmark-link>\n  , We could close it. Systemd is a prerequisites, we need it.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "DongZhaoYu", "commentT": "2019-04-08T02:43:14Z", "comment_text": "\n \t\tI hereby close the issue. We assume pai runs on ubuntu, which should come with systemd.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "DongZhaoYu", "commentT": "2019-04-08T03:16:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hao1939>@hao1939</denchmark-link>\n  <denchmark-link:https://github.com/fanyangCS>@fanyangCS</denchmark-link>\n  - I'm reopenning the issue. The resolution we discussed the other day is to \"add a system check as the first step of installations. If the user is not using ubuntu, instead of checking logs and submit issues to github, we will return an error message directly from the install script.\" . May we add the validation?\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "DongZhaoYu", "commentT": "2019-04-09T09:05:42Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/scarlett2018>@scarlett2018</denchmark-link>\n  , now I add a os 'check' before the installation, within the PR <denchmark-link:https://github.com/microsoft/pai/pull/2520>#2520</denchmark-link>\n .\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "DongZhaoYu", "commentT": "2019-04-09T11:16:52Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/hao1939>@hao1939</denchmark-link>\n , super! added my review comments, thanks for not only fix this issue but also validated other critia in the PR, that looks great.\n \t\t"}}}, "commit": {"commit_id": "06f73114dc61f909eef53d5f34c8cc33caeae684", "commit_author": "Hao Yuan", "commitT": "2019-04-09 20:26:22+08:00", "commit_complexity": {"commit_NLOC": "0.15", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "deployment\\checkCmd.py", "file_new_name": "deployment\\checkCmd.py", "file_complexity": {"file_NLOC": "46", "file_CCN": "9", "file_NToken": "332"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48", "deleted_lines": "29,30,31,32,33,34,35", "method_info": {"method_name": "validata_node_os", "method_params": "config_path", "method_startline": "29", "method_endline": "48", "method_complexity": {"method_NLOC": "17", "method_CCN": "4", "method_NToken": "117", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "64,65", "deleted_lines": null, "method_info": {"method_name": "check", "method_params": "self,args", "method_startline": "57", "method_endline": "65", "method_complexity": {"method_NLOC": "6", "method_CCN": "1", "method_NToken": "41", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "12,13,14,15,16,17,18,19,20,21,22,23,24,25,26", "deleted_lines": "22,23,24,25,26", "method_info": {"method_name": "validate_config", "method_params": "config_path", "method_startline": "12", "method_endline": "26", "method_complexity": {"method_NLOC": "11", "method_CCN": "3", "method_NToken": "94", "method_nesting_level": "0"}}}}}}}}