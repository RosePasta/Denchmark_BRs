{"BR": {"BR_id": "248", "BR_author": "yzs981130", "BRopenT": "2018-01-19T15:29:01Z", "BRcloseT": "2018-02-01T08:49:35Z", "BR_text": {"BRsummary": "paramiko throw exception when ssh option \"password\" is composed with letters", "BRdescription": "\n paramiko log\n <denchmark-code>DEB [20180119-22:25:31.520] thr=2   paramiko.transport: Adding ssh-ed25519 host key for xxx\n DEB [20180119-22:25:31.548] thr=5   paramiko.transport: userauth is OK\n ERR [20180119-22:25:31.549] thr=5   paramiko.transport: Unknown exception: object of type 'int' has no len()\n ERR [20180119-22:25:31.551] thr=5   paramiko.transport: Traceback (most recent call last):\n ERR [20180119-22:25:31.551] thr=5   paramiko.transport:   File \"/usr/local/lib/python2.7/dist-packages/paramiko/transport.py\", line 1908, in run\n ERR [20180119-22:25:31.551] thr=5   paramiko.transport:     handler(self.auth_handler, m)\n ERR [20180119-22:25:31.551] thr=5   paramiko.transport:   File \"/usr/local/lib/python2.7/dist-packages/paramiko/auth_handler.py\", line 260, in _parse_service_accept\n ERR [20180119-22:25:31.551] thr=5   paramiko.transport:     m.add_string(password)\n ERR [20180119-22:25:31.551] thr=5   paramiko.transport:   File \"/usr/local/lib/python2.7/dist-packages/paramiko/message.py\", line 274, in add_string\n ERR [20180119-22:25:31.552] thr=5   paramiko.transport:     self.add_int(len(s))\n ERR [20180119-22:25:31.552] thr=5   paramiko.transport: TypeError: object of type 'int' has no len()\n ERR [20180119-22:25:31.552] thr=5   paramiko.transport: \n </denchmark-code>\n \n bootstrap.py output\n <denchmark-code>daemonset \"kube-proxy\" created\n src/\n src/start.sh\n src/cleanup.sh\n src/kubelet.sh\n Traceback (most recent call last):\n   File \"./bootstrap.py\", line 356, in <module>\n     main()\n   File \"./bootstrap.py\", line 342, in main\n     remoteBootstrap(cluster_config['clusterinfo'], machine_list[hostname])\n   File \"./bootstrap.py\", line 202, in remoteBootstrap\n     sftp_paramiko(src_local, dst_remote, srcipt_package, host_config)\n   File \"./bootstrap.py\", line 104, in sftp_paramiko\n     ssh.connect(hostname=hostip, port=port, username=username, password=password)\n   File \"/usr/lib/python2.7/dist-packages/paramiko/client.py\", line 367, in connect\n     look_for_keys, gss_auth, gss_kex, gss_deleg_creds, gss_host)\n   File \"/usr/lib/python2.7/dist-packages/paramiko/client.py\", line 571, in _auth\n     self._transport.auth_password(username, password)\n   File \"/usr/lib/python2.7/dist-packages/paramiko/transport.py\", line 1262, in auth_password\n     return self.auth_handler.wait_for_response(my_event)\n   File \"/usr/lib/python2.7/dist-packages/paramiko/auth_handler.py\", line 197, in wait_for_response\n     raise e\n Exception: Unknown   ##type\n </denchmark-code>\n \n Solution: add quotation marks in the field\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "yzs981130", "commentT": "2018-01-19T15:38:47Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ydye>@ydye</denchmark-link>\n  should we check and convert the type of each field in parsed yaml file? otherwise,  will decide it which we can't control. e.g., use  to avoid such issues.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "yzs981130", "commentT": "2018-01-20T08:55:57Z", "comment_text": "\n \t\tLet's do it. <denchmark-link:https://github.com/abuccts>@abuccts</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "1c0108a73010a4436e8bec572f4bc8bf03ea0347", "commit_author": "abuccts", "commitT": "2018-02-01 16:19:26+08:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "kubernetes-deployment\\bootstrap.py", "file_new_name": "kubernetes-deployment\\bootstrap.py", "file_complexity": {"file_NLOC": "299", "file_CCN": "61", "file_NToken": "1897"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "135,136,137,140", "deleted_lines": "135,136,137,140", "method_info": {"method_name": "ssh_shell_paramiko", "method_params": "host_config,commandline", "method_startline": "133", "method_endline": "152", "method_complexity": {"method_NLOC": "16", "method_CCN": "3", "method_NToken": "134", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "101,102,103,106", "deleted_lines": "101,102,103,106", "method_info": {"method_name": "sftp_paramiko", "method_params": "src,dst,filename,host_config", "method_startline": "99", "method_endline": "129", "method_complexity": {"method_NLOC": "22", "method_CCN": "3", "method_NToken": "209", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "service-deployment\\deploy.py", "file_new_name": "service-deployment\\deploy.py", "file_complexity": {"file_NLOC": "188", "file_CCN": "51", "file_NToken": "1249"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "144,145", "deleted_lines": "144,145", "method_info": {"method_name": "generate_image_url_prefix", "method_params": "docker_info", "method_startline": "142", "method_endline": "152", "method_complexity": {"method_NLOC": "8", "method_CCN": "2", "method_NToken": "54", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "119,120,121", "deleted_lines": "119,120,121", "method_info": {"method_name": "generate_secret_base64code", "method_params": "docker_info", "method_startline": "117", "method_endline": "138", "method_complexity": {"method_NLOC": "16", "method_CCN": "4", "method_NToken": "86", "method_nesting_level": "0"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "103,104", "deleted_lines": "103,104", "method_info": {"method_name": "genenrate_docker_credential", "method_params": "docker_info", "method_startline": "101", "method_endline": "114", "method_complexity": {"method_NLOC": "11", "method_CCN": "3", "method_NToken": "47", "method_nesting_level": "0"}}}}}}}}