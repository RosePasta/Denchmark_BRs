{"BR": {"BR_id": "616", "BR_author": "danielhuoo", "BRopenT": "2019-07-28T21:13:21Z", "BRcloseT": "2019-07-29T18:18:06Z", "BR_text": {"BRsummary": "Trial predict fails with the given example", "BRdescription": "\n After training the model, I want to get the prediction on the test set. Not the accuracy. I know that should be Trial.evaluate(). It works well. Therefore I used Trial.predict(). Is that right?\n But the error says that AttributeError: 'dict' object has no attribute 'data'.\n I read the instruction of Trial that provides an example,\n # Simple trial to predict on some validation and test data\n >>> from torchbearer import Trial\n >>> val_data = torch.rand(5, 5)\n >>> test_data = torch.rand(5, 5)\n >>> t = Trial(None).with_test_data(test_data)\n >>> test_predictions = t.predict(data_key=torchbearer.TEST_DATA)\n I ran it but got an error AttributeError: 'NoneType' object has no attribute 'eval' \n So, is there any problem in this method?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "danielhuoo", "commentT": "2019-07-29T06:45:02Z", "comment_text": "\n \t\tHi, thanks for the issue! We think this may relate to some old bugs that have since been fixed. Could I get you to update your torchbearer version with\n pip install --upgrade torchbearer\n and then try again and let us know if the issue persists?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "danielhuoo", "commentT": "2019-07-29T15:27:26Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ethanwharris>@ethanwharris</denchmark-link>\n  Thanks for your instruction.\n I updated the version as you said.\n Then I got an new and same error from my own program and the official example:\n from torchbearer import Trial\n test_data = torch.rand(5, 5)\n t = Trial(None).with_test_data(test_data)\n test_predictions = t.predict(data_key=torchbearer.TEST_DATA)\n \n >>>TypeError: expected Tensor as element 0 in argument 0, but got NoneType\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "danielhuoo", "commentT": "2019-07-29T16:17:21Z", "comment_text": "\n \t\tHi, the example uses a None model which doesn't actually make predictions, so the code that aggregates predictions across batches has trouble with it. This code with a model that returns a tensor should give you the predictions properly, so it should work with the original model you wanted predictions from.\n The predict method should definitely deal with the None model better though so I've put up a PR to deal with it. It'll now just return a list of the model outputs for each batch if it can't combine them into a single tensor.\n Thanks for bringing this to our attention!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "danielhuoo", "commentT": "2019-07-29T16:27:58Z", "comment_text": "\n \t\t\n Hi, the example uses a None model which doesn't actually make predictions, so the code that aggregates predictions across batches has trouble with it. This code with a model that returns a tensor should give you the predictions properly, so it should work with the original model you wanted predictions from.\n The predict method should definitely deal with the None model better though so I've put up a PR to deal with it. It'll now just return a list of the model outputs for each batch if it can't combine them into a single tensor.\n Thanks for bringing this to our attention!\n \n Oops, sorry <denchmark-link:https://github.com/danielhuoo>@danielhuoo</denchmark-link>\n  , just realised you said you got the same error from your code too. Could you post a sample of it so we can have a look?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "danielhuoo", "commentT": "2019-07-29T16:55:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/MattPainter01>@MattPainter01</denchmark-link>\n  Thanks for your \"Oops\".\n I just made a new file to reproduce the error.\n Then I found it works.\n It seems that I didn't reset the environment of jupyter notebook.\n Anyway, my problem has been solved, but the \"None model\" problem exists.\n Thank you very much :P\n \t\t"}}}, "commit": {"commit_id": "499ea8796a316f5a85a55158d5345e760433c6b8", "commit_author": "Matt Painter", "commitT": "2019-07-29 19:18:06+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CHANGELOG.md", "file_new_name": "CHANGELOG.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "6,7,8,9,10,11,12,13", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\callbacks\\test_aggregate_predictions.py", "file_new_name": "tests\\callbacks\\test_aggregate_predictions.py", "file_complexity": {"file_NLOC": "41", "file_CCN": "3", "file_NToken": "431"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "49,50,51,52,53,54,55,56,57,58,60,61", "deleted_lines": null, "method_info": {"method_name": "test_none_predictions", "method_params": "self", "method_startline": "49", "method_endline": "61", "method_complexity": {"method_NLOC": "9", "method_CCN": "1", "method_NToken": "93", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\callbacks\\test_callbacks.py", "file_new_name": "tests\\callbacks\\test_callbacks.py", "file_complexity": {"file_NLOC": "58", "file_CCN": "7", "file_NToken": "606"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "45", "method_info": {"method_name": "test_load_state_dict", "method_params": "self", "method_startline": "29", "method_endline": "50", "method_complexity": {"method_NLOC": "17", "method_CCN": "1", "method_NToken": "185", "method_nesting_level": "1"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "torchbearer\\callbacks\\aggregate_predictions.py", "file_new_name": "torchbearer\\callbacks\\aggregate_predictions.py", "file_complexity": {"file_NLOC": "23", "file_CCN": "7", "file_NToken": "181"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "17,18,19,20,21,22,23,24", "deleted_lines": "16,17,18", "method_info": {"method_name": "on_end_validation", "method_params": "self,state", "method_startline": "16", "method_endline": "24", "method_complexity": {"method_NLOC": "9", "method_CCN": "4", "method_NToken": "83", "method_nesting_level": "1"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "torchbearer\\trial.py", "file_new_name": "torchbearer\\trial.py", "file_complexity": {"file_NLOC": "649", "file_CCN": "195", "file_NToken": "5388"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1155", "deleted_lines": "1155,1156", "method_info": {"method_name": "predict", "method_params": "self,verbose,data_key", "method_startline": "1146", "method_endline": "1184", "method_complexity": {"method_NLOC": "17", "method_CCN": "3", "method_NToken": "140", "method_nesting_level": "1"}}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "torchbearer\\version.py", "file_new_name": "torchbearer\\version.py", "file_complexity": {"file_NLOC": "1", "file_CCN": "0", "file_NToken": "3"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1", "deleted_lines": "1"}}}}}}