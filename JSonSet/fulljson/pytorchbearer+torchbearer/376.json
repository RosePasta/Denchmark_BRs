{"BR": {"BR_id": "376", "BR_author": "kl2792", "BRopenT": "2018-08-27T04:40:19Z", "BRcloseT": "2018-08-29T13:01:27Z", "BR_text": {"BRsummary": "Ordering of with_generators arguments", "BRdescription": "\n I hope I'm not being a nuisance by putting in an issue for this, but I was wondering if I could put in a PR for the argument ordering of with_generators to make it consistent with for_steps.\n Currently, to load generators, I have to write:\n trial.with_generators(trL, val_generator=deL, test_generator=teL)\n It would be nice if I could instead write the following, especially since there's already a for_steps function that take in the train_steps, val_steps, and test_steps arguments in between the generator arguments:\n trial.with_generators(trL, deL, teL)\n Please let me know if this sounds reasonable, and again, I hope I'm not being a bother by making this suggestion.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "kl2792", "commentT": "2018-08-27T11:02:52Z", "comment_text": "\n \t\tThat sounds reasonable, arguments should ideally be consistent with the for_steps method. Happy for you to open a PR :)\n \t\t"}}}, "commit": {"commit_id": "feba4552f73602b25b2020c75b8abb8d4c1db78e", "commit_author": "Kai-Zhan Lee", "commitT": "2018-08-29 14:01:26+01:00", "commit_complexity": {"commit_NLOC": "None", "commit_CCN": "None", "commit_Nprams": "None"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CHANGELOG.md", "file_new_name": "CHANGELOG.md", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "13", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\test_trial.py", "file_new_name": "tests\\test_trial.py", "file_complexity": {"file_NLOC": "1735", "file_CCN": "123", "file_NToken": "18640"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2219", "deleted_lines": "2219", "method_info": {"method_name": "test_update_device_and_dtype_only_arg", "method_params": "self", "method_startline": "2210", "method_endline": "2219", "method_complexity": {"method_NLOC": "8", "method_CCN": "1", "method_NToken": "59", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "387", "deleted_lines": "387", "method_info": {"method_name": "test_with_generators", "method_params": "self,_", "method_startline": "362", "method_endline": "390", "method_complexity": {"method_NLOC": "23", "method_CCN": "1", "method_NToken": "162", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "torchbearer\\trial.py", "file_new_name": "torchbearer\\trial.py", "file_complexity": {"file_NLOC": "495", "file_CCN": "143", "file_NToken": "4152"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "512,521,522,523,524", "deleted_lines": "512,517,518,521,522", "method_info": {"method_name": "with_generators", "method_params": "self,train_generator,train_steps,val_generator,val_steps,test_generator,test_steps", "method_startline": "512", "method_endline": "535", "method_complexity": {"method_NLOC": "7", "method_CCN": "4", "method_NToken": "72", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "512,521,522,523,524", "deleted_lines": "512,517,518,521,522", "method_info": {"method_name": "with_generators", "method_params": "self,train_generator,val_generator,test_generator,train_steps,val_steps,test_steps", "method_startline": "512", "method_endline": "535", "method_complexity": {"method_NLOC": "7", "method_CCN": "4", "method_NToken": "72", "method_nesting_level": "1"}}}}}}}}