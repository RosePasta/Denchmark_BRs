{"BR": {"BR_id": "583", "BR_author": "andrewbeard", "BRopenT": "2019-11-12T01:02:44Z", "BRcloseT": "2019-11-13T00:32:23Z", "BR_text": {"BRsummary": "[BUG] 5G channels above 140 aren't supported", "BRdescription": "\n Describe the bug\n Despite hardware support pwnagotchi never uses wifi channels above 140\n To Reproduce\n Steps to reproduce the behavior:\n \n Install pwnagotchi 1.2.1 on a Raspberry Pi 4 (or Pi 3 with an external adapter that supports 5g)\n Run iw list:\n Frequencies:\n * 5170 MHz [34] (disabled)\n * 5180 MHz [36] (20.0 dBm)\n * 5190 MHz [38] (20.0 dBm)\n * 5200 MHz [40] (20.0 dBm)\n * 5210 MHz [42] (20.0 dBm)\n * 5220 MHz [44] (20.0 dBm)\n * 5230 MHz [46] (20.0 dBm)\n * 5240 MHz [48] (20.0 dBm)\n * 5260 MHz [52] (20.0 dBm) (radar detection)\n * 5280 MHz [56] (20.0 dBm) (radar detection)\n * 5300 MHz [60] (20.0 dBm) (radar detection)\n * 5320 MHz [64] (20.0 dBm) (radar detection)\n * 5500 MHz [100] (20.0 dBm) (radar detection)\n * 5520 MHz [104] (20.0 dBm) (radar detection)\n * 5540 MHz [108] (20.0 dBm) (radar detection)\n * 5560 MHz [112] (20.0 dBm) (radar detection)\n * 5580 MHz [116] (20.0 dBm) (radar detection)\n * 5600 MHz [120] (20.0 dBm) (radar detection)\n * 5620 MHz [124] (20.0 dBm) (radar detection)\n * 5640 MHz [128] (20.0 dBm) (radar detection)\n * 5660 MHz [132] (20.0 dBm) (radar detection)\n * 5680 MHz [136] (20.0 dBm) (radar detection)\n * 5700 MHz [140] (20.0 dBm) (radar detection)\n * 5720 MHz [144] (20.0 dBm) (radar detection)\n * 5745 MHz [149] (20.0 dBm)\n * 5765 MHz [153] (20.0 dBm)\n * 5785 MHz [157] (20.0 dBm)\n * 5805 MHz [161] (20.0 dBm)\n * 5825 MHz [165] (20.0 dBm)\n Check the supported channels in /var/log/pwnagotchi.log:\n [2019-11-11 16:36:33,426] [INFO] supported channels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140]\n \n Expected behavior\n The list of supported channels via pwnagotchi should match those supported by the hardware. Eventually my access point on channel 161 should be observed.\n Environment (please complete the following information):\n \n Pwnagotchi version 1.2.1\n Linux pwnpi4 4.19.81-Re4son-v7l+ #1 SMP Wed Nov 6 13:10:35 AEDT 2019 armv7l GNU/Linux\n Raspberry Pi 4 with built in wifi or Pi3 with RT3572 adapter\n \n Additional context\n I've tried change the reg country by running iw reg set US to no effect\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "andrewbeard", "commentT": "2019-11-12T08:49:57Z", "comment_text": "\n \t\tSupported channels are found using \"/sbin/iwlist wlan0 freq\"\n From the man page:\n <denchmark-code>freq[uency]/channel\n Give the list of available frequencies in the device and the number of defined channels. \n Please note that usually the driver returns the total number of channels and only the \n frequencies available in the present locale, so there is no one-to-one mapping between \n frequencies displayed and channel numbers.\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "andrewbeard", "commentT": "2019-11-12T10:47:23Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mrseeker>@mrseeker</denchmark-link>\n  no <denchmark-link:https://github.com/andrewbeard>@andrewbeard</denchmark-link>\n  here <denchmark-link:https://github.com/evilsocket/pwnagotchi/blob/master/pwnagotchi/ai/gym.py#L40>is right</denchmark-link>\n  ... check the <denchmark-link:https://github.com/evilsocket/pwnagotchi/blob/master/pwnagotchi/ai/featurizer.py#L7>hard limit here</denchmark-link>\n  and <denchmark-link:https://github.com/evilsocket/pwnagotchi/blob/master/pwnagotchi/mesh/wifi.py#L1>here</denchmark-link>\n .\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "andrewbeard", "commentT": "2019-11-12T10:48:13Z", "comment_text": "\n \t\tSo the main problem now is that if i change that 140 directly, i basically break backwards compatibility with all the pretrained brain.nn files ... I'll have to have to check which supported channels are available and only use the wider spectrum for 5g\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "andrewbeard", "commentT": "2019-11-19T02:42:00Z", "comment_text": "\n \t\tI have a silly question, just buy a dual band adapter to plug in and use?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "andrewbeard", "commentT": "2019-11-20T00:50:25Z", "comment_text": "\n \t\tIs this bug truly fixed? I'm still struggling to see channels > 140 on my pi4. It seems to me that the command used in utils.c (iwlist wlan0 freq) only returns the first 32 channels regardless of what the country code is set to. Using \"iw phy0 channels\" returns 39 available channels. The 32 channel limit seems to be part of iwlist as it happens on every system I've tested.\n Get current country: # iw reg get\n Compare the output of these two lines.\n $ iwlist wlan0 freq\n $ iw phy0 channels | grep \" MHz\" | grep -v disabled\n \t\t"}}}, "commit": {"commit_id": "a8c07ba997858268430a12526c038a9244e8cfdf", "commit_author": "Simone Margaritelli", "commitT": "2019-11-13 01:32:05+01:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "0.8947368421052632"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "pwnagotchi\\ai\\featurizer.py", "file_new_name": "pwnagotchi\\ai\\featurizer.py", "file_complexity": {"file_NLOC": "36", "file_CCN": "3", "file_NToken": "209"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37", "deleted_lines": "9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31", "method_info": {"method_name": "describe", "method_params": "extended", "method_startline": "8", "method_endline": "37", "method_complexity": {"method_NLOC": "17", "method_CCN": "2", "method_NToken": "51", "method_nesting_level": "0"}}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "pwnagotchi\\ai\\gym.py", "file_new_name": "pwnagotchi\\ai\\gym.py", "file_complexity": {"file_NLOC": "109", "file_CCN": "27", "file_NToken": "984"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "125", "deleted_lines": null, "method_info": {"method_name": "_render_histogram", "method_params": "self,hist", "method_startline": "124", "method_endline": "127", "method_complexity": {"method_NLOC": "4", "method_CCN": "3", "method_NToken": "40", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "37,38,39,40,41,44,57", "deleted_lines": "37,40,53", "method_info": {"method_name": "__init__", "method_params": "self,agent,epoch", "method_startline": "30", "method_endline": "58", "method_complexity": {"method_NLOC": "24", "method_CCN": "6", "method_NToken": "216", "method_nesting_level": "1"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "pwnagotchi\\mesh\\wifi.py", "file_new_name": "pwnagotchi\\mesh\\wifi.py", "file_complexity": {"file_NLOC": "11", "file_CCN": "4", "file_NToken": "68"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2", "deleted_lines": null}}}}}}