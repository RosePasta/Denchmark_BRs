{"BR": {"BR_id": "3716", "BR_author": "arcman7", "BRopenT": "2020-08-03T07:35:35Z", "BRcloseT": "2020-08-18T18:04:54Z", "BR_text": {"BRsummary": "Tensor.clipByValue does not work for  tensors of dtype int32 in Node backend", "BRdescription": "\n TensorFlow.js version 2.0.1\n node version 12.13.0\n backend: \"tensorflow\"\n OS: Windows 10\n Issue: Tensor.clipByValue does not work for  tensors of dtype int32.\n Code to reproduce issue:\n <denchmark-code>const x = tf.tensor([-1, 2, -3, 4], undefined, 'int32');\n x.clipByValue(-2, 4).print();\n </denchmark-code>\n \n This throws an error with the stack trace:\n <denchmark-code>Thrown:\n Error: Invalid TF_Status: 3\n Message: cannot compute Minimum as input #1(zero-based) was expected to be a int32 tensor but is a float tensor\n     at NodeJSKernelBackend.executeSingleOutput (C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\dist\\nodejs_kernel_backend.js:192:43)\n     at NodeJSKernelBackend.minimum (C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\dist\\nodejs_kernel_backend.js:558:21)\n     at NodeJSKernelBackend.clip (C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\dist\\nodejs_kernel_backend.js:636:25)\n     at ENGINE.runKernelFunc.x (C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.node.js:6882:27)\n     at C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.node.js:3229:55\n     at C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.node.js:3075:22\n     at Engine.scopedRun (C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.node.js:3085:23)\n     at Engine.tidy (C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.node.js:3074:21)\n     at kernelFunc (C:\\Users\\Ryan\\projects\\pysc2\\node_modules\\@tensorflow\\tfjs-node\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.node.js:3229:29)\n </denchmark-code>\n \n Please note that it appears to work just fine in the browser using the webgl backend.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "arcman7", "commentT": "2020-08-03T07:52:55Z", "comment_text": "\n \t\tI'm not sure exactly where the issue is in the code base, but just writing this helper method gets me around the issue for now-\n <denchmark-code>function clipByValue(x, min, max) {\n   const minT = tf.fill(x.shape, min, x.dtype);\n   const maxT = tf.fill(x.shape, max, x.dtype);\n   return x.where(x.greaterEqual(min), minT).where(x.lessEqual(max), maxT);\n }\n </denchmark-code>\n \n I noticed that when you rely on broadcasting to add a scalar value to an existing tensor, the resulting tensor dtype can change. For example:\n <denchmark-code>const x = tf.tensor([-1, 2, -3, 4], undefined, 'int32');\n const y = x.add(4); // tensor y has dtype float32\n </denchmark-code>\n \n I think this may have something to do with the issue I'm experiencing.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "arcman7", "commentT": "2020-08-18T18:04:55Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tfjs/issues/3716>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tfjs/issues/3716>No</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "51de4e368a7be49ed1c27b3ad9b69f9638d2a77e", "commit_author": "Ping Yu", "commitT": "2020-08-18 11:04:53-07:00", "commit_complexity": {"commit_NLOC": "1.0", "commit_CCN": "1.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tfjs-backend-cpu\\src\\backend_cpu.ts", "file_new_name": "tfjs-backend-cpu\\src\\backend_cpu.ts", "file_complexity": {"file_NLOC": "3075", "file_CCN": "68", "file_NToken": "28076"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1155", "deleted_lines": "1155"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tfjs-backend-wasm\\src\\kernels\\ClipByValue.ts", "file_new_name": "tfjs-backend-wasm\\src\\kernels\\ClipByValue.ts", "file_complexity": {"file_NLOC": "31", "file_CCN": "3", "file_NToken": "216"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "42", "deleted_lines": "42", "method_info": {"method_name": "clip", "method_params": "ClipByValueInputs,BackendWasm", "method_startline": "33", "method_endline": "46", "method_complexity": {"method_NLOC": "14", "method_CCN": "1", "method_NToken": "108", "method_nesting_level": "0"}}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tfjs-core\\src\\ops\\clip_by_value_test.ts", "file_new_name": "tfjs-core\\src\\ops\\clip_by_value_test.ts", "file_complexity": {"file_NLOC": "108", "file_CCN": "22", "file_NToken": "1206"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "138,139,140,141,142,143,144,145,146", "deleted_lines": null, "method_info": {"method_name": "(anonymous)", "method_params": "", "method_startline": "22", "method_endline": "147", "method_complexity": {"method_NLOC": "15", "method_CCN": "1", "method_NToken": "142", "method_nesting_level": "0"}}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tfjs-node\\src\\nodejs_kernel_backend.ts", "file_new_name": "tfjs-node\\src\\nodejs_kernel_backend.ts", "file_complexity": {"file_NLOC": "1800", "file_CCN": "26", "file_NToken": "14949"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "725,726", "deleted_lines": "725,726"}}}}}}