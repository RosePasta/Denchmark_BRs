{"BR": {"BR_id": "123", "BR_author": "hrtang", "BRopenT": "2018-04-13T21:12:30Z", "BRcloseT": "2020-02-22T03:04:46Z", "BR_text": {"BRsummary": "Incompatible with asynchronous event writing", "BRdescription": "\n The following code breaks if several processes spawned by  attempt to write events asynchronously.\n <denchmark-link:https://github.com/lanpa/tensorboard-pytorch/blob/594a01b73e6849a9c8e2504e17b5d8d8544aa88a/tensorboardX/event_file_writer.py#L118>https://github.com/lanpa/tensorboard-pytorch/blob/594a01b73e6849a9c8e2504e17b5d8d8544aa88a/tensorboardX/event_file_writer.py#L118</denchmark-link>\n \n A simple fix is to replace six.moves.queue.Queue by multiprocessing.JoinableQueue.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "hrtang", "commentT": "2018-04-16T14:09:54Z", "comment_text": "\n \t\tI am not familiar with async programming. I googled around and found that popped object from multiprocessing.JoinableQueue may be out of order. so we need to test tensorboard's behavior under this. Can you show the error message or code to reproduce it? I am pretty interested, thanks.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "hrtang", "commentT": "2018-05-08T08:16:57Z", "comment_text": "\n \t\tSorry for the late reply. I have been using multiprocessing.JoinableQueue for my code base on asynchronous methods for reinforcement learning, and it has not caused any trouble so far. But there are probably better ways to fix it.\n Here is a simple example to reproduce the bug. It is a tricky one, since it runs perfectly if n = 10.\n <denchmark-code>import multiprocessing as mp\n from tensorboardX import SummaryWriter\n \n writer = SummaryWriter(log_dir=\"/tmp/test\")\n \n \n def run(i):\n     n = 100\n     for t in range(n):\n         writer.add_scalar(str(i), i, t)\n \n \n processes = [\n     mp.Process(\n         target=run,\n         args=(i, )\n     )\n     for i in range(2)\n ]\n \n for p in processes:\n     p.start()\n \n for p in processes:\n     p.join()\n </denchmark-code>\n \n The processes will run into dead locks. If you kill them with KeyboardInterrupt, you will see the following.\n <denchmark-code>^CProcess Process-2:\n Process Process-1:\n Traceback (most recent call last):\n   File \"test_tensorboardX.py\", line 24, in <module>\n     p.join()\n   File \"/home/main/anaconda3/lib/python3.6/multiprocessing/process.py\", line 124, in join\n     res = self._popen.wait(timeout)\n   File \"/home/main/anaconda3/lib/python3.6/multiprocessing/popen_fork.py\", line 57, in wait\n     return self.poll(os.WNOHANG if timeout == 0.0 else 0)\n   File \"/home/main/anaconda3/lib/python3.6/multiprocessing/popen_fork.py\", line 35, in poll\n     pid, sts = os.waitpid(self.pid, flag)\n KeyboardInterrupt\n Traceback (most recent call last):\n   File \"/home/main/anaconda3/lib/python3.6/multiprocessing/process.py\", line 258, in _bootstrap\n     self.run()\n   File \"/home/main/anaconda3/lib/python3.6/multiprocessing/process.py\", line 93, in run\n     self._target(*self._args, **self._kwargs)\n   File \"test_tensorboardX.py\", line 9, in run\n     writer.add_scalar(str(i), i, t)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/writer.py\", line 272, in add_scalar\n     self.file_writer.add_summary(scalar(tag, scalar_value), global_step)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/writer.py\", line 96, in add_summary\n     self._add_event(event, global_step)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/writer.py\", line 126, in _add_event\n     self.event_writer.add_event(event)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/event_file_writer.py\", line 148, in add_event\n     self._event_queue.put(event)\n   File \"/home/main/anaconda3/lib/python3.6/queue.py\", line 133, in put\n     self.not_full.wait()\n   File \"/home/main/anaconda3/lib/python3.6/threading.py\", line 295, in wait\n     waiter.acquire()\n KeyboardInterrupt\n Traceback (most recent call last):\n   File \"/home/main/anaconda3/lib/python3.6/multiprocessing/process.py\", line 258, in _bootstrap\n     self.run()\n   File \"/home/main/anaconda3/lib/python3.6/multiprocessing/process.py\", line 93, in run\n     self._target(*self._args, **self._kwargs)\n   File \"test_tensorboardX.py\", line 9, in run\n     writer.add_scalar(str(i), i, t)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/writer.py\", line 272, in add_scalar\n     self.file_writer.add_summary(scalar(tag, scalar_value), global_step)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/writer.py\", line 96, in add_summary\n     self._add_event(event, global_step)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/writer.py\", line 126, in _add_event\n     self.event_writer.add_event(event)\n   File \"/home/main/anaconda3/lib/python3.6/site-packages/tensorboardX/event_file_writer.py\", line 148, in add_event\n     self._event_queue.put(event)\n   File \"/home/main/anaconda3/lib/python3.6/queue.py\", line 133, in put\n     self.not_full.wait()\n   File \"/home/main/anaconda3/lib/python3.6/threading.py\", line 295, in wait\n     waiter.acquire()\n KeyboardInterrupt\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "hrtang", "commentT": "2018-10-12T02:38:41Z", "comment_text": "\n \t\t\n The following code breaks if several processes spawned by multiprocessing attempt to write events asynchronously.\n https://github.com/lanpa/tensorboard-pytorch/blob/594a01b73e6849a9c8e2504e17b5d8d8544aa88a/tensorboardX/event_file_writer.py#L118\n A simple fix is to replace six.moves.queue.Queue by multiprocessing.JoinableQueue.\n \n Just simply replace, and this work for me. Thank you!!!!!  : )\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "hrtang", "commentT": "2019-04-18T22:59:12Z", "comment_text": "\n \t\tThanks for the great library. I am having the same issue. Can this be fixed? multiprocessing is a very common requirement. Thanks.\n \t\t"}}}, "commit": {"commit_id": "b59430bba79b785e31a5e58dacd454b18f8536cf", "commit_author": "Tzu-Wei Huang", "commitT": "2020-02-22 11:04:45+08:00", "commit_complexity": {"commit_NLOC": "0.7857142857142857", "commit_CCN": "0.7857142857142857", "commit_Nprams": "0.7946428571428571"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": ".travis.yml", "file_new_name": ".travis.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "70", "deleted_lines": null}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "examples\\demo_global_writer.py", "file_complexity": {"file_NLOC": "4", "file_CCN": "0", "file_NToken": "12"}}, "file_2": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "examples\\demo_multiprocessing.py", "file_complexity": {"file_NLOC": "35", "file_CCN": "4", "file_NToken": "290"}}, "file_3": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "examples\\global_1.py", "file_complexity": {"file_NLOC": "7", "file_CCN": "0", "file_NToken": "51"}}, "file_4": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "examples\\global_2.py", "file_complexity": {"file_NLOC": "7", "file_CCN": "0", "file_NToken": "51"}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "run_pytest.sh", "file_new_name": "run_pytest.sh", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "11,12", "deleted_lines": null}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorboardX\\__init__.py", "file_new_name": "tensorboardX\\__init__.py", "file_complexity": {"file_NLOC": "7", "file_CCN": "0", "file_NToken": "26"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "7", "deleted_lines": "7"}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "tensorboardX\\event_file_writer.py", "file_new_name": "tensorboardX\\event_file_writer.py", "file_complexity": {"file_NLOC": "119", "file_CCN": "25", "file_NToken": "734"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "204", "deleted_lines": "204,210,211,212", "method_info": {"method_name": "run", "method_params": "self", "method_startline": "189", "method_endline": "220", "method_complexity": {"method_NLOC": "22", "method_CCN": "7", "method_NToken": "133", "method_nesting_level": "1"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "105", "deleted_lines": "105", "method_info": {"method_name": "__init__", "method_params": "self,logdir,max_queue_size,flush_secs,filename_suffix", "method_startline": "88", "method_endline": "113", "method_complexity": {"method_NLOC": "11", "method_CCN": "1", "method_NToken": "95", "method_nesting_level": "1"}}}, "hunk_2": {"Ismethod": 1, "added_lines": "159", "deleted_lines": null, "method_info": {"method_name": "close", "method_params": "self", "method_startline": "150", "method_endline": "160", "method_complexity": {"method_NLOC": "7", "method_CCN": "2", "method_NToken": "43", "method_nesting_level": "1"}}}, "hunk_3": {"Ismethod": 1, "added_lines": null, "deleted_lines": "148", "method_info": {"method_name": "flush", "method_params": "self", "method_startline": "141", "method_endline": "149", "method_complexity": {"method_NLOC": "4", "method_CCN": "2", "method_NToken": "26", "method_nesting_level": "1"}}}}}, "file_8": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "tensorboardX\\global_writer.py", "file_complexity": {"file_NLOC": "51", "file_CCN": "12", "file_NToken": "468"}}, "file_9": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "tests\\tset_multiprocess_write.py", "file_complexity": {"file_NLOC": "76", "file_CCN": "18", "file_NToken": "511"}}}}}