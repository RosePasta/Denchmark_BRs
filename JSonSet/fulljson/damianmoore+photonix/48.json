{"BR": {"BR_id": "48", "BR_author": "damianmoore", "BRopenT": "2019-01-05T23:59:28Z", "BRcloseT": "2019-01-19T16:53:11Z", "BR_text": {"BRsummary": "Tensorflow \"Illegal instruction\" on some machines", "BRdescription": "\n Noticed after running the image that fixed locking issues on the live demo site\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "damianmoore", "commentT": "2019-01-12T11:35:43Z", "comment_text": "\n \t\tMight be solvable by using Tensorflow Docker base image rather than pipenv installing it from pypi.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "damianmoore", "commentT": "2019-01-16T19:51:05Z", "comment_text": "\n \t\tThis happens because the version of Tensorflow on PyPI is compiled to use CPU instructions like  AVX, AVX2, SSE4.1, SSE4.2 and FMA which my Scaleway baremetal server and HP ProLiant microserver do not support. I'm assuming the Tensorflow Docker images are compiled in the same way so using those will be no use.\n I'm experimenting with compiling my own wheel package without the need for these CPU extensions. If there are notable performance issues then I'll look at installing different packages depending on current CPU once our Docker image has loaded.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "damianmoore", "commentT": "2019-01-16T21:44:12Z", "comment_text": "\n \t\tTensorflow build which runs on my HP ProLiant microserver is here <denchmark-link:https://github.com/damianmoore/tensorflow-builder/releases>https://github.com/damianmoore/tensorflow-builder/releases</denchmark-link>\n  . Running benchmarks to determine the impact against more optimised one on PyPI.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "damianmoore", "commentT": "2019-01-17T23:21:18Z", "comment_text": "\n \t\tThese are some quick benchmarks of the PyPI version of Tensorflow versus my own build from the comment above (no CPU optimisations). As expected the unoptimised build performs slower, by not by very much. These were measured using the Object Detection model (which uses <denchmark-link:http://download.tensorflow.org/models/object_detection/faster_rcnn_inception_resnet_v2_atrous_lowproposals_oid_2018_01_28.tar.gz>this pre-trained model</denchmark-link>\n ) on a Dell XPS 13 2017 (9370 i7-8550U).\n I ran 3 object detection predictions with each build and the test code was from <denchmark-link:https://github.com/damianmoore/photo-manager/blob/52cdace/backend/photos/tests/test_classifier_models.py#L75>this function</denchmark-link>\n . There was a common amount of overhead collecting tests etc. that can be removed from all results.\n <denchmark-code>                                    Run 1   Run 2   Run 3   Mean\n PyPI build:                         62.74   61.25   61.57   61.85\n Custom build (unoptimised):         69.37   70.72   69.66   69.92\n Testing overhead (to subtract):     15.96   15.12   15.97   15.68\n </denchmark-code>\n \n This shows the custom build that works on all the tested machines takes 13.04% longer than the optimised one on PyPI. Alternatively, you could say the PyPI build completes in 88.45% of the time of the custom build.\n This seems like a small difference in speed and that it would be acceptable use the custom (no CPU extensions) build everywhere. When we have time, we can produce different Tensorflow builds that are downloaded depending on CPU flags that are detected,\n \t\t"}}}, "commit": {"commit_id": "4200d97017c8fb5f57dc10ba3bd08717a13f3150", "commit_author": "Damian Moore", "commitT": "2019-01-19 16:53:04+00:00", "commit_complexity": {"commit_NLOC": "0.0", "commit_CCN": "0.0", "commit_Nprams": "1.0"}, "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "Pipfile", "file_new_name": "Pipfile", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "26", "deleted_lines": "16"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "Pipfile.lock", "file_new_name": "Pipfile.lock", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "4,21,23,24,163,165,166,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,608,609,611,706,707,709,710,713,714,715,716,717,718,719,720,721,722,723,724,725,726,729,730", "deleted_lines": "4,21,23,62,63,64,65,66,67,68,169,171,172,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,249,250,251,252,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,579,580,582,583,678,679,681,682,685,686,687,688,689,690,691,692,693,694,695,696,697,700"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docker-compose.example.yml", "file_new_name": "docker-compose.example.yml", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "26", "deleted_lines": null}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "ui\\src\\containers\\MapViewContainer.js", "file_new_name": "ui\\src\\containers\\MapViewContainer.js", "file_complexity": {"file_NLOC": "42", "file_CCN": "16", "file_NToken": "291"}, "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "39", "deleted_lines": null, "method_info": {"method_name": "(anonymous)", "method_params": "", "method_startline": "24", "method_endline": "40", "method_complexity": {"method_NLOC": "17", "method_CCN": "10", "method_NToken": "120", "method_nesting_level": "0"}}}, "hunk_1": {"Ismethod": 1, "added_lines": "39", "deleted_lines": null, "method_info": {"method_name": "render", "method_params": "", "method_startline": "18", "method_endline": "48", "method_complexity": {"method_NLOC": "12", "method_CCN": "5", "method_NToken": "105", "method_nesting_level": "0"}}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "ui\\src\\static\\css\\Browse.css", "file_new_name": "ui\\src\\static\\css\\Browse.css", "file_complexity": {"file_NLOC": "None", "file_CCN": "None", "file_NToken": "None"}, "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "4,20", "deleted_lines": "13"}}}}}}