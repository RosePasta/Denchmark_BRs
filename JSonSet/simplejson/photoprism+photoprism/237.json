{"BR": {"BR_id": "237", "BR_author": "lastzero", "BRopenT": "2020-01-30T01:01:57Z", "BRcloseT": "2020-05-14T19:22:35Z", "BR_text": {"BRsummary": "Go: Sporadic database errors while testing", "BRdescription": "\n When running Go unit tests, e.g. via make test-go in a terminal, we sometimes get database errors because tables don't exist:\n <denchmark-link:https://user-images.githubusercontent.com/301686/73410790-8c896980-4303-11ea-950f-c201d0603328.png></denchmark-link>\n \n Background: In order to have the database in a defined state, we remove all tables and re-create them:\n <denchmark-link:https://github.com/photoprism/photoprism/blob/develop/internal/config/db.go#L153>https://github.com/photoprism/photoprism/blob/develop/internal/config/db.go#L153</denchmark-link>\n \n This might be a timing issue with MariaDB... maybe because db tables are still being created in the background while tests are already running, but that's just an idea. Most of the time it works perfectly, especially on Travis CI there are no issues. So it could be linked to a slow filesystem, maybe only happens in a Mac.\n If you have an idea or have the same issue, let us know! Pull requests to fix this are also welcome ;)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "lastzero", "commentT": "2020-02-06T00:34:52Z", "comment_text": "\n \t\tI have the same issue (Docker in WSL2) and have started to investigate, I do have\n photoprism-db_1  | 2020-02-05 23:58:37 44 [Warning] Aborted connection 44 to db: 'photoprism' user: 'photoprism' host: '172.21.0.3' (Got an error reading communication packets)\n whenever the test fail with some table that does not exist.\n Issue happens when I run make go-test, go test ./internal/... but never when running  go test ./internal/api. with the 2nd command, the test begins with the api folder, exactly as the third so I am not sure what is happening there.\n Have someone try something like <denchmark-link:https://medium.com/@jarifibrahim/using-gorm-hooks-to-clean-up-test-fixtures-in-golang-99b0fcb04354>https://medium.com/@jarifibrahim/using-gorm-hooks-to-clean-up-test-fixtures-in-golang-99b0fcb04354</denchmark-link>\n  to avoid dropping the table?\n If not, I will try this week and see if give more consistency in the test\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "lastzero", "commentT": "2020-02-08T00:51:35Z", "comment_text": "\n \t\tAfter further investigation I have understood the issue,\n By default, go test will run test in parallel with all the available core (default max is 8).\n This means that multiple packages can be test at the same time, and accessing simultaneously to the database, making trouble while setting up the test database.\n I gues the CI use only 1 or 2 core, so this does not happened, but on your mac or in my machine (8 core), this may happen often.\n The solution can be to run the test using go test --parallel=1 flag which force go to use only 1 core for the tests, therefore to test one package at a time.\n As it can be useful to take advantage of the parallelism on some other query, maybe it can be possible to separate test that requires to be tested on there own and those that can be run in parallel.\n another solution is to use separate databases (photoprism-test-api, photoprism-test-query, ...) so that tests does not mess up together\n what do you think ?\n edit: Actually I tried with go test --parallel=1 and it solves the issue, but I dont know if changing the Makefile for that is the optimal solution\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "lastzero", "commentT": "2020-02-08T07:40:03Z", "comment_text": "\n \t\tOr we initialize the tests before running tests, which would also be faster. Thank you! Need to think about it...\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "lastzero", "commentT": "2020-02-16T06:42:48Z", "comment_text": "\n \t\tQuick fix would be to limit test workers to 1 for now. Should do that ASAP.\n \t\t"}}}, "commit": {"commit_id": "09dbc762a313212078126c613ab9f1cfd6665f6f", "commit_author": "Michael Mayer", "commitT": "2020-02-21 02:47:06+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "Makefile", "file_new_name": "Makefile", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "92,95,98,101,104,108", "deleted_lines": "92,95,98,101,104,108"}}}}}}