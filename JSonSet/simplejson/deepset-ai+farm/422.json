{"BR": {"BR_id": "422", "BR_author": "PhilipMay", "BRopenT": "2020-06-24T20:21:07Z", "BRcloseT": "2020-06-29T17:08:29Z", "BR_text": {"BRsummary": "Bug in example `doc_classification_with_earlystopping.py`.", "BRdescription": "\n There is a bug executing  on colab. See full notebook here: <denchmark-link:https://gist.github.com/PhilipMay/8b042f713603e68deb5519fb7776d128>https://gist.github.com/PhilipMay/8b042f713603e68deb5519fb7776d128</denchmark-link>\n \n <denchmark-code>[...]\n <ipython-input-3-66a7ddd46d8d> in doc_classification_with_earlystopping()\n     128 \n     129     # 7. Let it grow\n --> 130     trainer.train()\n     131 \n     132     # 8. Hooray! You have a model.\n \n /content/FARM/farm/train.py in train(self)\n     352             logger.info(\"Restoring best model so far from {}\".format(self.early_stopping.save_dir))\n     353             lm_name = self.model.language_model.name\n --> 354             model = AdaptiveModel.load(self.early_stopping.save_dir, self.device, lm_name=lm_name)\n     355             model.connect_heads_with_processor(self.data_silo.processor.tasks, require_labels=True)\n     356 \n \n /content/FARM/farm/modeling/adaptive_model.py in load(cls, load_dir, device, strict, lm_name, processor)\n     321         ph_output_type = []\n     322         for config_file in ph_config_files:\n --> 323             head = PredictionHead.load(config_file, strict=strict)\n     324             prediction_heads.append(head)\n     325             ph_output_type.append(head.ph_output_type)\n \n /content/FARM/farm/modeling/prediction_head.py in load(cls, config_file, strict, load_weights)\n     116             model_file = cls._get_model_file(config_file=config_file)\n     117             logger.info(\"Loading prediction head from {}\".format(model_file))\n --> 118             prediction_head.load_state_dict(torch.load(model_file, map_location=torch.device(\"cpu\")), strict=strict)\n     119         return prediction_head\n     120 \n \n /usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py in load_state_dict(self, state_dict, strict)\n     845         if len(error_msgs) > 0:\n     846             raise RuntimeError('Error(s) in loading state_dict for {}:\\n\\t{}'.format(\n --> 847                                self.__class__.__name__, \"\\n\\t\".join(error_msgs)))\n     848         return _IncompatibleKeys(missing_keys, unexpected_keys)\n     849 \n \n RuntimeError: Error(s) in loading state_dict for TextClassificationHead:\n \tUnexpected key(s) in state_dict: \"loss_fct.weight\". \n </denchmark-code>\n \n If you could provide a workaround to avoid the exeption I would be very happy. As always I am willing to start a PR but will need some help with debugging.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "PhilipMay", "commentT": "2020-06-26T09:35:15Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/PhilipMay>@PhilipMay</denchmark-link>\n  thanks for reporting. This is a more general issue that I just now described in <denchmark-link:https://github.com/deepset-ai/FARM/issues/428>#428</denchmark-link>\n \n We would highly appreciate if you could look into it (maybe also write a test case covering the class weights loading issue?).\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "PhilipMay", "commentT": "2020-06-26T16:22:45Z", "comment_text": "\n \t\tI will have a look into it.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "PhilipMay", "commentT": "2020-06-27T13:14:21Z", "comment_text": "\n \t\tFixed in PR <denchmark-link:https://github.com/deepset-ai/FARM/pull/431>#431</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "a5bda34f0731a6f50c80309d86c79e4710dee052", "commit_author": "Philip May", "commitT": "2020-06-29 14:49:10+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "farm\\modeling\\prediction_head.py", "file_new_name": "farm\\modeling\\prediction_head.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1555", "deleted_lines": "1553", "method_info": {"method_name": "pick_single_fn", "method_params": "heads,fn_name", "method_startline": "1541", "method_endline": "1555"}}, "hunk_1": {"Ismethod": 1, "added_lines": "89,90", "deleted_lines": null, "method_info": {"method_name": "generate_config", "method_params": "self", "method_startline": "83", "method_endline": "94"}}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "test\\test_prediction_head.py"}}}}