{"BR": {"BR_id": "62", "BR_author": "acbecker", "BRopenT": "2019-06-04T16:25:14Z", "BRcloseT": "2019-06-05T09:52:14Z", "BR_text": {"BRsummary": "Tutorial notebook Exception", "BRdescription": "\n I downloaded the notebook available on <denchmark-link:https://gluon-ts.mxnet.io/examples/forecasting/tutorial.html>https://gluon-ts.mxnet.io/examples/forecasting/tutorial.html</denchmark-link>\n , and run it on my local laptop (Darwin Kernel Version 16.7.0, Anaconda3 Distro, Python 3.7.3, Jupyter 4.4.0, gluonts 0.1.1) and get the following exception at:\n <denchmark-code>from gluonts.model.simple_feedforward import SimpleFeedForwardEstimator\n from gluonts.trainer import Trainer\n </denchmark-code>\n \n <denchmark-code>---------------------------------------------------------------------------\n TypeError                                 Traceback (most recent call last)\n ~/python/anaconda3/lib/python3.7/site-packages/pydantic/validators.py in find_validators(type_, arbitrary_types_allowed)\n     261         try:\n --> 262             if issubclass(type_, val_type):\n     263                 return validators\n \n TypeError: issubclass() arg 1 must be a class\n \n The above exception was the direct cause of the following exception:\n \n RuntimeError                              Traceback (most recent call last)\n <ipython-input-13-1fca1cb620ad> in <module>\n ----> 1 from gluonts.model.simple_feedforward import SimpleFeedForwardEstimator\n       2 from gluonts.trainer import Trainer\n \n ~/python/anaconda3/lib/python3.7/site-packages/gluonts/model/simple_feedforward/__init__.py in <module>\n       1 # Relative imports\n ----> 2 from ._estimator import SimpleFeedForwardEstimator\n       3 \n       4 __all__ = ['SimpleFeedForwardEstimator']\n \n ~/python/anaconda3/lib/python3.7/site-packages/gluonts/model/simple_feedforward/_estimator.py in <module>\n       7 # First-party imports\n       8 from gluonts.core.component import validated\n ----> 9 from gluonts.distribution import DistributionOutput, StudentTOutput\n      10 from gluonts.model.estimator import GluonEstimator\n      11 from gluonts.model.predictor import Predictor, RepresentableBlockPredictor\n \n ~/python/anaconda3/lib/python3.7/site-packages/gluonts/distribution/__init__.py in <module>\n      14 # Relative imports\n      15 from . import bijection\n ---> 16 from .binned import Binned, BinnedOutput\n      17 from .distribution import Distribution\n      18 from .distribution_output import DistributionOutput\n \n ~/python/anaconda3/lib/python3.7/site-packages/gluonts/distribution/binned.py in <module>\n     166 \n     167 \n --> 168 class BinnedOutput(DistributionOutput):\n     169     distr_cls: type = Binned\n     170 \n \n ~/python/anaconda3/lib/python3.7/site-packages/gluonts/distribution/binned.py in BinnedOutput()\n     170 \n     171     @validated()\n --> 172     def __init__(self, bin_centers: List) -> None:\n     173         # cannot pass directly nd.array because it is not serializable\n     174         bc = mx.nd.array(bin_centers)\n \n ~/python/anaconda3/lib/python3.7/site-packages/gluonts/core/component.py in validator(ctor)\n     167                 f'{ctor_clsnme}Model',\n     168                 __config__=ConfigBase.Config,\n --> 169                 **ctor_fields,\n     170             )\n     171         else:\n \n ~/python/anaconda3/lib/python3.7/site-packages/pydantic/main.py in create_model(model_name, __config__, __base__, **field_definitions)\n     408                 annotation=f_annotation,\n     409                 class_validators=vg.get_validators(f_name),\n --> 410                 config=config,\n     411             )\n     412 \n \n ~/python/anaconda3/lib/python3.7/site-packages/pydantic/fields.py in infer(cls, name, value, annotation, class_validators, config)\n     105             required=required,\n     106             model_config=config,\n --> 107             schema=schema,\n     108         )\n     109 \n \n ~/python/anaconda3/lib/python3.7/site-packages/pydantic/fields.py in __init__(self, name, type_, class_validators, default, required, model_config, alias, allow_none, schema)\n      85         self.shape: Shape = Shape.SINGLETON\n      86         self._schema: Schema = schema\n ---> 87         self.prepare()\n      88 \n      89     @classmethod\n \n ~/python/anaconda3/lib/python3.7/site-packages/pydantic/fields.py in prepare(self)\n     134 \n     135         self._populate_sub_fields()\n --> 136         self._populate_validators()\n     137 \n     138     def schema(self, by_alias=True):\n \n ~/python/anaconda3/lib/python3.7/site-packages/pydantic/fields.py in _populate_validators(self)\n     264                 *tuple(v.func for v in self.class_validators if not v.whole and v.pre),\n     265                 *(get_validators() if get_validators else find_validators(self.type_,\n --> 266                                                                           self.model_config.arbitrary_types_allowed)),\n     267                 *tuple(v.func for v in self.class_validators if not v.whole and not v.pre),\n     268             )\n \n ~/python/anaconda3/lib/python3.7/site-packages/pydantic/validators.py in find_validators(type_, arbitrary_types_allowed)\n     263                 return validators\n     264         except TypeError as e:\n --> 265             raise RuntimeError(f'error checking inheritance of {type_!r} (type: {display_as_type(type_)})') from e\n     266 \n     267     if arbitrary_types_allowed:\n \n RuntimeError: error checking inheritance of ~T (type: T)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "acbecker", "commentT": "2019-06-04T22:18:36Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/acbecker>@acbecker</denchmark-link>\n , I just tried running the notebook on a similar configuration: Darwin Kernel Version 17.7.0, Python 3.7.3 (pyenv), Jupyter 4.4.0, gluonts 0.1.1.\n I could not reproduce this problem. I did find other problems, but once I get to the cell you mention, everything works OK. We'll keep this here and see again if we can reproduce it. Could Anaconda vs pyenv make a difference?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "acbecker", "commentT": "2019-06-05T07:24:10Z", "comment_text": "\n \t\tI was able to reproduce this issue locally and I think <denchmark-link:https://github.com/awslabs/gluon-ts/pull/68>#68</denchmark-link>\n  should fix it.\n <denchmark-link:https://github.com/acbecker>@acbecker</denchmark-link>\n  While we are preparing a new release, can you try if installing a development release,\n <denchmark-code>pip install --upgrade git+https://github.com/jgasthaus/gluon-ts@fix_python37\n </denchmark-code>\n \n resolves the issue for you?\n \t\t"}}}, "commit": {"commit_id": "c821989cfd59059ba28591f17889c07bc406235e", "commit_author": "Jan Gasthaus", "commitT": "2019-06-05 11:52:13+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\gluonts\\distribution\\binned.py", "file_new_name": "src\\gluonts\\distribution\\binned.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "172", "deleted_lines": "172", "method_info": {"method_name": "__init__", "method_params": "self,List", "method_startline": "172", "method_endline": "176"}}, "hunk_1": {"Ismethod": 1, "added_lines": "172", "deleted_lines": "172", "method_info": {"method_name": "__init__", "method_params": "self", "method_startline": "172", "method_endline": "176"}}}}}}}