{"BR": {"BR_id": "89", "BR_author": "matt-deboer", "BRopenT": "2019-01-29T17:09:46Z", "BRcloseT": "2019-01-30T03:37:51Z", "BR_text": {"BRsummary": "current master uploads polygons' points with negative 'y' values", "BRdescription": "\n As of yesterday, new annotations' points seem to be uploaded with negative values for their 'y' dimension, resulting in a segmentation that gets clipped for being outside the bounds (when it is clearly not).\n Here's a snipping of the segments sent from the client:\n <denchmark-code>segments: [[[113.6, -240.3], [0, 0], [0, 0], 7], [[228, -241], [0, 0], [0, 0], 7],\u2026]\n 0: [[113.6, -240.3], [0, 0], [0, 0], 7]\n 1: [[228, -241], [0, 0], [0, 0], 7]\n 2: [[211.4, -234.8], [0, 0], [0, 0], 7]\n 3: [[211.4, -225.1], [0, 0], [0, 0], 7]\n 4: [[233.6, -226.5], [0, 0], [0, 0], 7]\n 5: [[239.8, -222.3], [0, 0], [0, 0], 7]\n 6: [[242.6, -192.5], [0, 0], [0, 0], 7]\n 7: [[237.7, -78.7], [0, 0], [0, 0], 7]\n 8: [[96.9, -68.3], [0, 0], [0, 0], 7]\n 9: [[85.2, -197.3], [0, 0], [0, 0], 7]\n 10: [[112.2, -241], [0, 0], [0, 0], 7]\n </denchmark-code>\n \n I haven't tracked down the root cause yet...\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "matt-deboer", "commentT": "2019-01-29T17:57:35Z", "comment_text": "\n \t\tIt seems that on a mouseDown event,  contains strange values (seemingly relative to some reference point on the lower-left of the screen?), while  contains the usual/correct mouse coordinates...\n <denchmark-link:https://github.com/jsbroks>@jsbroks</denchmark-link>\n  are you seeing anything like this?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "matt-deboer", "commentT": "2019-01-29T20:16:50Z", "comment_text": "\n \t\tIt seems to only happen when you add new points with the select tool?\n In PaperJs the origin is at the center of the image so it should have negatives points. The backend converts it to top left before saving it in the database\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "matt-deboer", "commentT": "2019-01-29T20:50:13Z", "comment_text": "\n \t\thmm..ok; good to know.\n And no, for me it happens on newly-created polygons as well, which shouldn't interact with the select tool, right?...(I simply complete the polygon, then click the Save button)\n I'm noticing these points not being converted; instead, they're being \"clamped\" out of the segmentation in the paperjs_to_coco method...\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "matt-deboer", "commentT": "2019-01-29T22:20:50Z", "comment_text": "\n \t\tpaperjs_to_coco only reads segments in [[x1,y1], [x2,y2], ...] for some reason the export is including the cruve data but settings its value to zero.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "matt-deboer", "commentT": "2019-01-29T23:01:41Z", "comment_text": "\n \t\tThe latest commit should have fixed the issue. Test it out and get back to me.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "matt-deboer", "commentT": "2019-01-29T23:52:57Z", "comment_text": "\n \t\tok; will have a look...\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "matt-deboer", "commentT": "2019-01-30T03:37:51Z", "comment_text": "\n \t\tseems to be resolved.\n \t\t"}}}, "commit": {"commit_id": "460129b681f85c1d1eb62754b3c2ede209c3968a", "commit_author": "Justin Brooks", "commitT": "2019-01-29 18:00:57-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "app\\util\\coco_util.py", "file_new_name": "app\\util\\coco_util.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "38,39,40,41,42,43,44,45,46,47", "deleted_lines": "38,39,40,41,42,43,44", "method_info": {"method_name": "paperjs_to_coco", "method_params": "image_width,image_height,paperjs", "method_startline": "7", "method_endline": "67"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "client\\src\\components\\annotator\\Annotation.vue", "file_new_name": "client\\src\\components\\annotator\\Annotation.vue", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "281,288,300,303,304,305,306,373,374", "deleted_lines": "279,282,295,297,302,305,328"}}}}}}