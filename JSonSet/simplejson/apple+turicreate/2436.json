{"BR": {"BR_id": "2436", "BR_author": "shantanuchhabra", "BRopenT": "2019-10-11T07:46:13Z", "BRcloseT": "2019-10-12T00:32:59Z", "BR_text": {"BRsummary": "Object Detection Linux build failure", "BRdescription": "\n Build fails on Linux with the following error:\n <denchmark-code>/build/src/toolkits/object_detection/object_detector.cpp:389:14: note: candidate function not viable: 1st argument ('const std::pair<turi::flexible_type, turi::flexible_type>') would lose const qualifier\n   auto cmp = [](flex_dict::value_type& a, flex_dict::value_type& b) {\n              ^\n /build/src/toolkits/object_detection/object_detector.cpp:389:14: note: conversion candidate of type 'bool (*)(flex_dict::value_type &, flex_dict::value_type &)' (aka 'bool (*)(std::pair<turi::flexible_type, turi::flexible_type> &, std::pair<turi::flexible_type, turi::flexible_type> &)')\n 2 errors generated.\n </denchmark-code>\n \n The fix is probably to add the const qualifier for the comparison function.\n \t"}, "comments": {}}, "commit": {"commit_id": "53b5c108bc87c0dc7c772c748021ac0f441ee86c", "commit_author": "Shantanu Chhabra", "commitT": "2019-10-11 17:32:58-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\toolkits\\object_detection\\object_detector.cpp", "file_new_name": "src\\toolkits\\object_detection\\object_detector.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "389", "deleted_lines": "389", "method_info": {"method_name": "turi::object_detection::object_detector::import_from_custom_model", "method_params": "model_data,version", "method_startline": "349", "method_endline": "419"}}}}}}}