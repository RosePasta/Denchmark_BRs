{"BR": {"BR_id": "398", "BR_author": "vfdev-5", "BRopenT": "2017-08-30T19:10:06Z", "BRcloseT": "2017-08-30T19:28:14Z", "BR_text": {"BRsummary": "Issue with k-folds training (cross-validation)", "BRdescription": "\n Hi,\n I try to train k models on k-folded data. Code is <denchmark-link:https://gist.github.com/vfdev-5/05648eaf8ffb71a6f2dd0ee932e22dea>here</denchmark-link>\n . Training on the 1st fold runs correctly and on the next fold I have the following error:\n <denchmark-code>ValueError: Tensor(\"input:0\", shape=(?, 30, 30, 3), dtype=float32) must be from the same graph as Tensor(\"QueueInput/input_queue:0\", shape=(), dtype=resource).\n </denchmark-code>\n \n Could you suggest how to do such k-folds training within your frame work (probably, I would have a similar graph problem with pure TF).\n Thank you\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "vfdev-5", "commentT": "2017-08-30T19:11:57Z", "comment_text": "\n \t\tI think you need to clear the graph with tf.reset_default_graph() before starting a new training.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "vfdev-5", "commentT": "2017-08-30T19:13:35Z", "comment_text": "\n \t\tYes, I do this <denchmark-link:https://gist.github.com/vfdev-5/05648eaf8ffb71a6f2dd0ee932e22dea#file-cifar-convnet-cross-validation-py-L186>here</denchmark-link>\n . However, it is not enough\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "vfdev-5", "commentT": "2017-08-30T19:28:47Z", "comment_text": "\n \t\tShould be fixed now. BTW, because you created a new graph each time, you probably don't need a reset.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "vfdev-5", "commentT": "2017-08-30T19:30:17Z", "comment_text": "\n \t\tOkay, I see. Thank you !\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "vfdev-5", "commentT": "2017-08-30T21:54:11Z", "comment_text": "\n \t\tI rerun my code with the latest tensorpack and the bug disappeared \ud83d\udc4d\n However, at the end there is an IndexError that is thrown after the messge Train is finished!. Here is the traceback:\n <denchmark-code>[0830 21:45:55 @base.py:242] Training has finished!\n Traceback (most recent call last):\n   File \"cifar-convnet-cross-validation.py\", line 190, in <module>\n     trainer.train()\n   File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n     next(self.gen)\n   File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 3815, in get_controller\n     if self.stack[-1] is not default:\n IndexError: list index out of range\n [0830 21:45:55 @prefetch.py:174] [Prefetch Master] Context terminated.\n Prefetch process exited.\n [0830 21:45:55 @input_source.py:203] EnqueueThread QueueInput/input_queue Exited.\n Prefetch process exited.\n Prefetch process exited.\n Prefetch process exited.\n Prefetch process exited.\n </denchmark-code>\n \n <denchmark-link:https://github.com/ppwwyyxx>@ppwwyyxx</denchmark-link>\n   could you hint how to fix this? Thanks\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "vfdev-5", "commentT": "2017-08-30T22:04:17Z", "comment_text": "\n \t\tUsing reset_default_graph under tf.Graph() is already forbidden in latest TensorFlow (I'm using nightly).\n Using this and it will be fine:\n for val_fold_index in range(n_folds):\n     with tf.Graph().as_default():\n       # no reset\n Or this:\n for val_fold_index in range(n_folds):\n     # no new graph\n     tf.reset_default_graph()\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "vfdev-5", "commentT": "2019-04-13T15:22:34Z", "comment_text": "\n \t\tHi yx,\n My question is similar and I'm using examples/FasterRCNN with my own dataset (600 images).\n The model easily overfitting at around 50 epoch (100 steps per epoch).\n <denchmark-link:https://user-images.githubusercontent.com/12379916/56081626-fce10000-5e41-11e9-9cb7-1ab7e7ee7e00.png></denchmark-link>\n \n And frcnn loss keep going down.\n <denchmark-link:https://user-images.githubusercontent.com/12379916/56081712-f30bcc80-5e42-11e9-9aec-8d4778628c47.png></denchmark-link>\n \n I'm wondering if we got any solutions like cross validation/drop out/early stop in tensorpack for FRCNN?\n Can I assume that we don't need those methods for large dataset like COCO?\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "vfdev-5", "commentT": "2019-04-13T17:40:30Z", "comment_text": "\n \t\tYou can implement early stop with tensorpack callbacks.\n \t\t"}}}, "commit": {"commit_id": "3ed43ab4ad4309e710a41ea071af96b166c63475", "commit_author": "Yuxin Wu", "commitT": "2017-08-30 12:28:09-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorial\\callback.md", "file_new_name": "docs\\tutorial\\callback.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "18,19,20,23,35,55,59", "deleted_lines": "18,21,33,53,57"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorpack\\graph_builder\\model_desc.py", "file_new_name": "tensorpack\\graph_builder\\model_desc.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "37", "deleted_lines": "28,29", "method_info": {"method_name": "__new__", "method_params": "cls,type,shape,name", "method_startline": "28", "method_endline": "38"}}, "hunk_1": {"Ismethod": 1, "added_lines": "74", "deleted_lines": "75", "method_info": {"method_name": "build_placeholder", "method_params": "self,prefix", "method_startline": "59", "method_endline": "75"}}}}}}}