{"BR": {"BR_id": "1209", "BR_author": "vishalbollu", "BRopenT": "2020-07-08T00:58:43Z", "BRcloseT": "2020-09-24T16:40:11Z", "BR_text": {"BRsummary": "Verify accuracy of request metrics for a local deployment using multiple threads", "BRdescription": "\n <denchmark-h:h4>Version</denchmark-h>\n \n v0.18.*\n <denchmark-h:h4>Description</denchmark-h>\n \n Support for multithreading and multiprocessing was recently added to Cortex local. Request metrics are tracked by increment files to a local directory. Multiprocessing with Cortex local may work as expected because each process writes to files prefixed with their PIDs. However, multithreading on Cortex local may be broken.\n Add a mutex to request metrics files to prevent multiple threads from overwriting the same file with outdated values.\n \t"}, "comments": {}}, "commit": {"commit_id": "705b8382e0861ec1299b974b28197e95cd002b50", "commit_author": "Vishal Bollu", "commitT": "2020-09-24 12:40:11-04:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "pkg\\workloads\\cortex\\lib\\type\\api.py", "file_new_name": "pkg\\workloads\\cortex\\lib\\type\\api.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "53,54", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,provider,storage,model_dir,cache_dir,kwargs", "method_startline": "32", "method_endline": "54"}}, "hunk_1": {"Ismethod": 1, "added_lines": "123,124,125,126,127,128,129", "deleted_lines": "119,120,122", "method_info": {"method_name": "store_metrics_locally", "method_params": "self,status_code,total_time", "method_startline": "119", "method_endline": "129"}}}}}}}