{"BR": {"BR_id": "157", "BR_author": "danielgollas", "BRopenT": "2016-07-07T19:08:47Z", "BRcloseT": "2016-07-18T15:11:40Z", "BR_text": {"BRsummary": "Output format of confusion matrix (cmfull) is confusing", "BRdescription": "\n The cmfull output when training a network seems to have strange behavior.\n After discussing on gitter, a compact and simple proposal for the output format is as follows:\n cmfull is an object with two properties: labels and data.\n Labels is a list of strings that determine the edges of the matrix, and data as a list of lists of numbers to represent the rows, where each entry in the row corresponds to the label in the same index.\n E.g. A simple CM with 4 labels and an identity diagonal.\n <denchmark-code>{\n     \"labels\": [\"label0\", \"label1\", \"label2\", \"label3\"],\n     \"data\": [\n         [1, 0, 0, 0],\n         [0, 1, 0, 0],\n         [0, 0, 1, 0],\n         [0, 0, 0, 1]\n     ]\n }\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "danielgollas", "commentT": "2016-07-12T19:26:18Z", "comment_text": "\n \t\tDue to internal data structure constraints, the final format cannot exactly fit the one proposed above and discussed earlier. The new proposed format looks like:\n <denchmark-code>\"cmfull\":\n {\n \n }\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "danielgollas", "commentT": "2016-07-12T19:26:18Z", "comment_text": "\n \t\tDue to internal data structure constraints, the final format cannot exactly fit the one proposed above and discussed earlier. The new proposed format looks like:\n <denchmark-code>\"cmfull\":\n {\n \n }\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "danielgollas", "commentT": "2016-07-12T19:32:39Z", "comment_text": "\n \t\tDue to internal data structure constraints, the final format cannot exactly fit the one proposed above and discussed earlier. The new proposed format looks like:\n <denchmark-code>\"cmfull\": [\n           {\"label1\":[1,0,0,0]},\n           {\"label2\":[0,1,0,0]},\n            ...\n    ]\n </denchmark-code>\n \n Note that the keys in the cmfull array should now always be correctly ordered.\n EDIT: fixed the post, the code is correct, the above format was not.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "danielgollas", "commentT": "2016-07-12T19:46:54Z", "comment_text": "\n \t\tI know that this issue is of importance to some users, so I've made PR <denchmark-link:https://github.com/jolibrain/deepdetect/pull/158>#158</denchmark-link>\n  readily available, even before discussion resumes.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "danielgollas", "commentT": "2016-07-12T21:51:29Z", "comment_text": "\n \t\tWait, can a JSON array have named items? I can't seem to get the example format to validate on jsonlint.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "danielgollas", "commentT": "2016-07-12T22:02:00Z", "comment_text": "\n \t\tIt's kind of hacky but how about this:\n <denchmark-code>\"cmfull\": [\n {\"label1\":[1,0,0,0]},\n {\"label2\":[0,1,0,0]},\n ...\n ]\n </denchmark-code>\n \n Preserve the order of rows through the array, and each row is a super simple object with label as the key and row data as value. Or, it could be even more explicit and be:\n <denchmark-code>\"cmfull\": [\n {\n   \"label\": \"label1\",\n   \"data\": [1,0,0,0]\n },\n {\n    \"label\":\"label2\",\n    \"data\":[0,1,0,0]\n },\n ...\n ]\n </denchmark-code>\n \n Your call <denchmark-link:https://github.com/beniz>@beniz</denchmark-link>\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "danielgollas", "commentT": "2016-07-14T20:03:56Z", "comment_text": "\n \t\tAs discussed, updated my earlier comment, the format should be fine.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "danielgollas", "commentT": "2016-07-18T15:11:37Z", "comment_text": "\n \t\tmerged\n \t\t"}}}, "commit": {"commit_id": "85e9a097d3d249ec3c88b19c84667741110c6835", "commit_author": "Emmanuel Benazera", "commitT": "2016-07-18 14:16:32+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\ut-caffeapi.cc", "file_new_name": "tests\\ut-caffeapi.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "393", "deleted_lines": "393", "method_info": {"method_name": "TEST", "method_params": "caffeapi,service_train_csv", "method_startline": "351", "method_endline": "439"}}}}}}}