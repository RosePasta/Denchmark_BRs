{"BR": {"BR_id": "268", "BR_author": "AC-29", "BRopenT": "2020-07-27T22:38:07Z", "BRcloseT": "2020-09-22T14:24:28Z", "BR_text": {"BRsummary": "Multiprocessing pool issue", "BRdescription": "\n Hi there!\n I am currently trying to fine tune haystack using a json file of 500 questions and answers that I created using Hyastack Online Annotation Tool. However, when running reader.train(data_dir=train_data, train_filename=\"answers_500.json\", use_gpu=True, n_epochs=1, save_dir=\"my_model\") I get the following error message:\n Preprocessing Dataset data\\answers_500.json:   0%|          | 0/13 [03:52<?, ? Dicts/s]\n multiprocessing.pool.RemoteTraceback:\n \"\"\"\n Traceback (most recent call last):\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\multiprocessing\\pool.py\", line 121, in worker\n result = (True, func(_args, *_kwds))\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 124, in _dataset_from_chunk\n dataset = processor.dataset_from_dicts(dicts=dicts, indices=indices)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\processor.py\", line 1144, in dataset_from_dicts\n dataset, tensor_names = self._create_dataset(keep_baskets=False)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\processor.py\", line 308, in _create_dataset\n features_flat.extend(sample.features)\n TypeError: 'NoneType' object is not iterable\n \"\"\"\n The above exception was the direct cause of the following exception:\n Traceback (most recent call last):\n File \"C:/Users/haystack_finetuning.py\", line 25, in \n main()\n File \"C:/Users/haystack_finetuning.py\", line 14, in main\n reader.train(data_dir=train_data, train_filename=\"answers_500.json\", use_gpu=True, n_epochs=1, save_dir=\"my_model\")\n File \"c:\\users\\haystack\\haystack\\reader\\farm.py\", line 180, in train\n data_silo = DataSilo(processor=processor, batch_size=batch_size, distributed=False)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 105, in init\n self._load_data()\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 207, in _load_data\n self.data[\"train\"], self.tensor_names = self._get_dataset(train_file)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 176, in _get_dataset\n for dataset, tensor_names in results:\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\multiprocessing\\pool.py\", line 748, in next\n raise value\n TypeError: 'NoneType' object is not iterable\n I have been diving into the code trying to understand the problem and for some reason the variable \"results\" from data_silo.py appears to be empty causing the aforementioned error, however I do not fully understand why. I have been doing some tests and it works fine with, for instance, the SQUAD json file.  Is there anything I am missing? Should anything be done with the json file that is obtained after expporting the QnA from the Annotation tool?\n Thank you in advance\n \u2506Issue is synchronized with this <denchmark-link:https://deepset-ai.atlassian.net/browse/HS-34>Jira Task</denchmark-link>\n  by <denchmark-link:https://www.unito.io/learn-more>Unito</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "AC-29", "commentT": "2020-07-28T07:10:48Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/AC-29>@AC-29</denchmark-link>\n  ,\n Can you please check if you have documents without any labels in your json? This could potentially trigger such an exception.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "AC-29", "commentT": "2020-07-28T08:26:11Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/tholor>@tholor</denchmark-link>\n  ,\n Thanks for your answer. I assume that by documents without any labels you mean documents without corresponding questions and answers. If that is the case, I had some documents without any questions. I just removed those documents from the annotation tool and exported the json file again but unfortunately it is still not working. I still get the same error.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "AC-29", "commentT": "2020-07-28T16:35:48Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/tholor>@tholor</denchmark-link>\n  ,\n Thanks for following up on my question and suggesting to configure a multiprocessing flag for reader.train(). I have continued on reading through the code. Something I omitted on my first comment is that I am receiving an error before the one I mentioned which, in the beginning I though it was just a warning but I am not sure anymore. I can see the messages \"ERROR - farm.data_handler.processor -   Could not convert this sample to features: \" and \" ERROR - farm.data_handler.processor -  Answer using start/end indices is 'XXXXX' while gold label text is  'XXXXXXXX'. This is happening because in the function _check_valid_answer from processor.py, answer_indices and answer_text are different. Basically, what I am finding is that in some cases the answer_indices point to the \"correct\" text of the answer, for instance \"This is the answer to your question.\". However, for some reason the answer_text (which I believe is the answer we highlight in the Annotation Tool while generating Questions-Answers pairs) may contain some special characters which are not considered by the indices. Following on the previous example, this means answer_text would be for instance \"\\n\\nThis is the answer to your questio\". They have the same length but the strings are different, since the indices point to the proper text whereas the answer_text contains special characters. From this I am wondering whether this Error could affect somehow by creating sample attributes or features as None (therefore triggering the error shown in the first comment). Also, what could be the reason for having different answer_indices and answer_text strings?\n Thank you again.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "AC-29", "commentT": "2020-07-29T16:46:24Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/AC-29>@AC-29</denchmark-link>\n  ,\n Thanks for the additional info. This misalignment of answer text and offsets is actually a bug in our annotation tool that happens in some circumstances (special characters play a role here). We are working on a fix, but also created a little gist that should fix your issue in the shorterm on the existing labels. It prints and corrects most, if not all, of the problematic cases: <denchmark-link:https://gist.github.com/Timoeller/be6dfd8e34cdcd84fdca4c4aa72f42fc>https://gist.github.com/Timoeller/be6dfd8e34cdcd84fdca4c4aa72f42fc</denchmark-link>\n \n Nevertheless, training should not stop if some QA pairs contain mistakes. Have you already tried running training with disabled multiprocessing? You can do that with the new arg introduced in <denchmark-link:https://github.com/deepset-ai/haystack/pull/271>#271</denchmark-link>\n  :\n <denchmark-code>reader.train(..., num_processes=1)\n </denchmark-code>\n \n Hope this helps!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "AC-29", "commentT": "2020-07-30T15:18:18Z", "comment_text": "\n \t\tHI <denchmark-link:https://github.com/tholor>@tholor</denchmark-link>\n  ,\n Thank you very much. The gist you provided apparently fix most of the errors I was getting with farm.data_handler.processor. Regarding reader.train() unfortunately when using num_processes = 1 I still get the error:\n Preprocessing Dataset data\\answers_500_v4_corrected.json:   0%|          | 0/13 [05:40<?, ? Dicts/s]\n Traceback (most recent call last):\n File \"C:/Users/haystack_finetuning.py\", line 32, in \n main()\n File \"C:/Users/haystack_finetuning.py\", line 22, in main\n reader.train(data_dir=train_data, train_filename=\"answers_500_v4_corrected.json\", use_gpu=True, n_epochs=1, save_dir=\"my_model\", num_processes=1)\n File \"c:\\users\\haystack\\reader\\farm.py\", line 186, in train\n data_silo = DataSilo(processor=processor, batch_size=batch_size, distributed=False, max_processes=num_processes)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 105, in init\n self._load_data()\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 207, in _load_data\n self.data[\"train\"], self.tensor_names = self._get_dataset(train_file)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 176, in _get_dataset\n for dataset, tensor_names in results:\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\data_silo.py\", line 124, in _dataset_from_chunk\n dataset = processor.dataset_from_dicts(dicts=dicts, indices=indices)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\processor.py\", line 1144, in dataset_from_dicts\n dataset, tensor_names = self._create_dataset(keep_baskets=False)\n File \"C:\\ProgramData\\Anaconda3\\envs\\General\\lib\\site-packages\\farm\\data_handler\\processor.py\", line 308, in _create_dataset\n features_flat.extend(sample.features)\n TypeError: 'NoneType' object is not iterable\n It seems like rolling back to previous commits of haystack solved it and has allowed me to fine tune the model. The last commit that allowed me to fine tune without any issues is commit <denchmark-link:https://github.com/deepset-ai/haystack/commit/17c1b84c21a95747809abd278f4db8c7bc7d6396>17c1b84</denchmark-link>\n  from July 14th. The next commit (<denchmark-link:https://github.com/deepset-ai/haystack/commit/99a6a340478ca6fb70137f6811a1af282796debc>99a6a34</denchmark-link>\n  from July 14th as well) already triggers the error (as well as the newest versions up to now).\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "AC-29", "commentT": "2020-08-03T15:31:00Z", "comment_text": "\n \t\tThanks for locating the commit. There we Upgraded to a new FARM version where a lot of QA processing was refactored.\n \n Possibly you did this already, but just to be sure: did you update to the new FARM version in your environment as well?\n I think the problem originates in some quite specific input data. Could you maybe share the QA data you created with us so we can replicate the issue? if so, send to timo.moeller [at] deepset.ai\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "AC-29", "commentT": "2020-08-05T16:13:13Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/AC-29>@AC-29</denchmark-link>\n   we found more problems with the annotation tool export as mentioned in <denchmark-link:https://github.com/deepset-ai/haystack/issues/287>#287</denchmark-link>\n .\n We adjusted the hotfix gist. Now it not only corrects the offsets, but also handles unanswerable questions. Please give it another try with the <denchmark-link:https://gist.github.com/Timoeller/0ab74574600efe753d46125a09d809f5>updated gist</denchmark-link>\n .\n At the same time we are of course improving the tool + QA data handling in FARM...\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "AC-29", "commentT": "2020-09-22T14:24:27Z", "comment_text": "\n \t\tMost cases leading to this error should be fixed by now in the annotation tool and new labels should therefore be correct.\n For old ones, we recommend using the above gist.\n Closing now.\n \t\t"}}}, "commit": {"commit_id": "abec1be722ef74747184f8c9824c567b1f1322b1", "commit_author": "Malte Pietsch", "commitT": "2020-07-29 16:28:23+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "haystack\\reader\\farm.py", "file_new_name": "haystack\\reader\\farm.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "121", "deleted_lines": null, "method_info": {"method_name": "train", "method_params": "self,str,str,None,None,None,int,int,float,None,float,1,int,None,0", "method_startline": "106", "method_endline": "121"}}}}}}}