{"BR": {"BR_id": "483", "BR_author": "aaronbriel", "BRopenT": "2020-10-13T15:20:04Z", "BRcloseT": "2020-10-23T15:50:50Z", "BR_text": {"BRsummary": "Elasticsearch compatibility: FAQ-style QA search_phase_execution_exception, script_score script returned an invalid score", "BRdescription": "\n Describe the bug\n When I attempt to call get_answers_via_similar_questions using FAQ-style QA an error is thrown. This occurs when I use two separate indices, one for QA-style and another for FAQ-style.  I want to leverage a QA instance and an FAQ with their own separate indices for experimental purposes.\n Error message\n <denchmark-code>10/13/2020 06:43:06 - WARNING - elasticsearch -   POST http://localhost:9200/faq/_search [status:400 request:0.130s]\n Traceback (most recent call last):\n   File \"chatbots/haystack/faqbot.py\", line 214, in <module>\n     main()\n   File \"chatbots/haystack/faqbot.py\", line 186, in main\n     faqbot.interact(question)\n   File \"chatbots/haystack/faqbot.py\", line 57, in interact\n     prediction = finder.get_answers_via_similar_questions(question=question, top_k_retriever=1)\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/src/farm-haystack/haystack/finder.py\", line 95, in get_answers_via_similar_questions\n     documents = self.retriever.retrieve(question, top_k=top_k_retriever, filters=filters, index=index)\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/src/farm-haystack/haystack/retriever/dense.py\", line 327, in retrieve\n     top_k=top_k, index=index)\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/src/farm-haystack/haystack/document_store/elasticsearch.py\", line 465, in query_by_embedding\n     result = self.client.search(index=index, body=body, request_timeout=300)[\"hits\"][\"hits\"]\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 152, in _wrapped\n     return func(*args, params=params, headers=headers, **kwargs)\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/lib/python3.7/site-packages/elasticsearch/client/__init__.py\", line 1617, in search\n     body=body,\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/lib/python3.7/site-packages/elasticsearch/transport.py\", line 392, in perform_request\n     raise e\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/lib/python3.7/site-packages/elasticsearch/transport.py\", line 365, in perform_request\n     timeout=timeout,\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 269, in perform_request\n     self._raise_error(response.status, raw_data)\n   File \"/Users/aaronbriel/chatbots/haystack/.venv/lib/python3.7/site-packages/elasticsearch/connection/base.py\", line 301, in _raise_error\n     status_code, error_message, additional_info\n elasticsearch.exceptions.RequestError: RequestError(400, 'search_phase_execution_exception', 'script_score script returned an invalid score [-3.4487913] for doc [41]. Must be a non-negative score!')\n make: *** [ask_faq] Error 1\n </denchmark-code>\n \n Expected behavior\n I expected the request to return results.\n Additional context\n I'm using code very similar to Tutorial4_FAQ_style_QA.ipynb and  Tutorial1_Basic_QA_Pipeline.ipynb, except for one difference. I first store data in elasticsearch using 2 indices (using the same storage code for each tutorial above), once for the QA-style and then for the FAQ-style. Each has their own unique elasticsearch index.\n When I run a query to the QA get_answers method the expected result is returned. However, when I run the query to the FAQ get_answers_via_similar_questions I see the error. Looking at <denchmark-link:https://github.com/deepset-ai/haystack/issues/408>#408</denchmark-link>\n  I checked the mapping of the FAQ index which seems correct:\n <denchmark-code>{\n    \"faq\":{\n       \"mappings\":{\n          \"dynamic_templates\":[\n             {\n                \"strings\":{\n                   \"path_match\":\"*\",\n                   \"match_mapping_type\":\"string\",\n                   \"mapping\":{\n                      \"type\":\"keyword\"\n                   }\n                }\n             }\n          ],\n          \"properties\":{\n             \"answer_html\":{\n                \"type\":\"keyword\"\n             },\n             \"category\":{\n                \"type\":\"keyword\"\n             },\n             \"city\":{\n                \"type\":\"keyword\"\n             },\n             \"country\":{\n                \"type\":\"keyword\"\n             },\n             \"lang\":{\n                \"type\":\"keyword\"\n             },\n             \"last_update\":{\n                \"type\":\"keyword\"\n             },\n             \"link\":{\n                \"type\":\"keyword\"\n             },\n             \"name\":{\n                \"type\":\"keyword\"\n             },\n             \"question\":{\n                \"type\":\"keyword\"\n             },\n             \"question_emb\":{\n                \"type\":\"dense_vector\",\n                \"dims\":768\n             },\n             \"region\":{\n                \"type\":\"keyword\"\n             },\n             \"source\":{\n                \"type\":\"keyword\"\n             },\n             \"text\":{\n                \"type\":\"text\"\n             }\n          }\n       }\n    }\n }\n </denchmark-code>\n \n To Reproduce\n \n Instantiate QA ElasticsearchDocumentStore, ElasticsearchRetriever, FarmReader and store SQUAD style json using convert_files_to_dicts and document_store.write_documents(dicts) following Tutorial1_Basic_QA_Pipeline.ipynb but with custom index\n Instantiate FAQ ElasticsearchDocumentStore and EmbeddingRetriever and store csv (faq_covidbert.csv) using convert_files_to_dicts and document_store.write_documents(dicts) following Tutorial4_FAQ_style_QA.ipynb but with custom index\n Call get_answers_via_similar_questions with top_k_retriever=1\n \n System:\n \n OS:\n GPU/CPU:\n Haystack version (commit or version number): latest master branch\n DocumentStore: ElasticsearchDocumentStore\n Reader: None\n Retriever: EmbeddingRetriever\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "aaronbriel", "commentT": "2020-10-13T16:33:47Z", "comment_text": "\n \t\tI've discovered that the issue is due to the version of elasticsearch. In my docker-compose I was referencing version 7.9.2. When I reverted this to 7.6.2 the issue was resolved. So it looks like get_answers is compatible with 7.9.2 but get_answers_via_similar_questions is not.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "aaronbriel", "commentT": "2020-10-13T16:34:35Z", "comment_text": "\n \t\tI will close this - I'm guessing you are aware of the compatibility issue...\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "aaronbriel", "commentT": "2020-10-19T16:08:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/tholor>@tholor</denchmark-link>\n  <denchmark-link:https://github.com/tanaysoni>@tanaysoni</denchmark-link>\n  better to address this compatibility issue\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "aaronbriel", "commentT": "2020-10-19T16:20:18Z", "comment_text": "\n \t\tYes, let's fix it\n \t\t"}}}, "commit": {"commit_id": "db4151bbc026f27c6d709fefef1088cd3f1e18b9", "commit_author": "Tanay Soni", "commitT": "2020-10-23 17:50:49+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": ".github\\workflows\\ci.yml", "file_new_name": ".github\\workflows\\ci.yml", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "27", "deleted_lines": "27"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "haystack\\document_store\\elasticsearch.py", "file_new_name": "haystack\\document_store\\elasticsearch.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "501", "deleted_lines": "500", "method_info": {"method_name": "_convert_es_hit_to_document", "method_params": "self,dict,bool", "method_startline": "491", "method_endline": "516"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "test\\conftest.py", "file_new_name": "test\\conftest.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "36", "deleted_lines": "36", "method_info": {"method_name": "elasticsearch_fixture", "method_params": "", "method_startline": "24", "method_endline": "42"}}, "hunk_1": {"Ismethod": 1, "added_lines": "209", "deleted_lines": "209", "method_info": {"method_name": "get_retriever", "method_params": "retriever_type,document_store", "method_startline": "195", "method_endline": "216"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "test\\test_elastic_retriever.py", "file_new_name": "test\\test_elastic_retriever.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "5,14", "deleted_lines": "5,14"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "test\\test_eval.py", "file_new_name": "test\\test_eval.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "64,84", "deleted_lines": "64,84"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tutorials\\Tutorial4_FAQ_style_QA.ipynb", "file_new_name": "tutorials\\Tutorial4_FAQ_style_QA.ipynb", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "74,84,85,86,90", "deleted_lines": "74,84,85,86,90"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tutorials\\Tutorial4_FAQ_style_QA.py", "file_new_name": "tutorials\\Tutorial4_FAQ_style_QA.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "29", "deleted_lines": "29"}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tutorials\\Tutorial5_Evaluation.ipynb", "file_new_name": "tutorials\\Tutorial5_Evaluation.ipynb", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "68,69,70,74", "deleted_lines": "68,69,70,74"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tutorials\\Tutorial5_Evaluation.py", "file_new_name": "tutorials\\Tutorial5_Evaluation.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "37", "deleted_lines": "37"}}}}}}