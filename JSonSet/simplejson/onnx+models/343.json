{"BR": {"BR_id": "343", "BR_author": "M-Tonin", "BRopenT": "2020-07-29T00:21:55Z", "BRcloseT": "2020-07-31T19:52:36Z", "BR_text": {"BRsummary": "efficientnet post process inconsistency ?", "BRdescription": "\n \n A clear and concise description of what the bug is.\n Hello guys, I think there is a bug in post process hosted at 'models/vision/classification/efficientnet-lite4/README.md' and\n '<denchmark-link:https://github.com/onnx/tensorflow-onnx/blob/master/tutorials/efficientnet-lite.ipynb>https://github.com/onnx/tensorflow-onnx/blob/master/tutorials/efficientnet-lite.ipynb</denchmark-link>\n '\n for r in result:\n     print(r, labels[str(r-1)], results[0][r])\n Expected behavior\n I think it would be r, and not r-1;\n for r in result:\n     print(r, labels[str(r)], results[0][r])\n \n <denchmark-link:https://user-images.githubusercontent.com/21134353/88740209-f2b84300-d112-11ea-9a92-33e986d84893.png></denchmark-link>\n \n Get panda.jpg and kitten.jpg to test the model.\n <denchmark-link:https://user-images.githubusercontent.com/21134353/88740634-19c34480-d114-11ea-901a-f12b8beae304.png></denchmark-link>\n \n test with labels[str(r)]\n <denchmark-link:https://user-images.githubusercontent.com/21134353/88740558-e7194c00-d113-11ea-964e-9e89ad334630.png></denchmark-link>\n \n test with labels[str(r-1)]\n Additional context\n So, I have been use similar pre process and process, only create one funcion to do fast  def preprocess(img_path, model).\n # load the labels text file\n labels = json.load(open(LABEL_MAP, \"r\"))\n \n # set image file dimensions to 224x224 by resizing and cropping image from center \n def pre_process_edgetpu(img, dims):\n     output_height, output_width, _ = dims\n     img = resize_with_aspectratio(img, output_height, output_width, inter_pol=cv2.INTER_LINEAR)\n     img = center_crop(img, output_height, output_width)\n     img = np.asarray(img, dtype='float32')\n     # converts jpg pixel value from [0 - 255] to float array [-1.0 - 1.0]\n     img -= [127.0, 127.0, 127.0]\n     img /= [128.0, 128.0, 128.0]\n     return img\n     \n # resize the image with a proportional scale\n def resize_with_aspectratio(img, out_height, out_width, scale=87.5, inter_pol=cv2.INTER_LINEAR):\n     height, width, _ = img.shape\n     new_height = int(100. * out_height / scale)\n     new_width = int(100. * out_width / scale)\n     if height > width:\n         w = new_width\n         h = int(new_height * height / width)\n     else:\n         h = new_height\n         w = int(new_width * width / height)\n     img = cv2.resize(img, (w, h), interpolation=inter_pol)\n     return img\n \n # crop the image around the center based on given height and width \n def center_crop(img, out_height, out_width):\n     height, width, _ = img.shape\n     left = int((width - out_width) / 2)\n     right = int((width + out_width) / 2)\n     top = int((height - out_height) / 2)\n     bottom = int((height + out_height) / 2)\n     img = img[top:bottom, left:right]\n     return img\n     \n # read the image\n def preprocess(img_path,model_path,printing=False):\n \n     img = cv2.imread(img_path)\n     img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n \n     # pre-process the image like mobilenet and resize it to 224x224\n     img = pre_process_edgetpu(img, (224, 224, 3))\n     if printing:\n         plt.axis('off')\n         plt.imshow(img)\n         plt.show()\n \n     # create a batch of 1 (that batch size is buned into the saved_model)\n     img_batch = np.expand_dims(img, axis=0)\n \n     sess = rt.InferenceSession(model_path)\n     \n     # run inference and print results\n     results = sess.run([\"Softmax:0\"], {\"images:0\": img_batch})[0]\n     result = reversed(results[0].argsort()[-5:])\n     # result = np.argmax(results, axis=1)\n     #print(list(result))\n     for r in result:\n         print(r, labels[str(r)], results[0][r])\n LABEL_MAP, FILE_ONNX_PATH and FILENAME_ONNX are some defines to my work directory and model / label corresponding.\n I dont know with there is a bug or with I am wrong, if so sorry guys.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "M-Tonin", "commentT": "2020-07-30T22:22:49Z", "comment_text": "\n \t\tThanks for reporting <denchmark-link:https://github.com/M-Tonin>@M-Tonin</denchmark-link>\n ! <denchmark-link:https://github.com/shirleysu8>@shirleysu8</denchmark-link>\n , can you take a look?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "M-Tonin", "commentT": "2020-07-31T01:04:17Z", "comment_text": "\n \t\tAdditional: <denchmark-link:https://github.com/onnx/tensorflow-onnx/issues/1075>onnx/tensorflow-onnx#1075</denchmark-link>\n  (<denchmark-link:https://github.com/onnx/tensorflow-onnx/issues/1025>issue</denchmark-link>\n )\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "M-Tonin", "commentT": "2020-07-31T19:52:36Z", "comment_text": "\n \t\tResolved with <denchmark-link:https://github.com/onnx/models/pull/345>#345</denchmark-link>\n !\n \t\t"}}}, "commit": {"commit_id": "cd3e32a1970836cfacfa6f6cfd96a3a7fe153684", "commit_author": "shirleysu8", "commitT": "2020-07-31 11:43:07-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "vision\\classification\\efficientnet-lite4\\README.md", "file_new_name": "vision\\classification\\efficientnet-lite4\\README.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "112", "deleted_lines": "112"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "vision\\classification\\efficientnet-lite4\\model\\efficientnet-lite4.tar.gz", "file_new_name": "vision\\classification\\efficientnet-lite4\\model\\efficientnet-lite4.tar.gz", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2,3", "deleted_lines": "2,3,4"}}}}}}