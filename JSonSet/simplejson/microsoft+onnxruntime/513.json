{"BR": {"BR_id": "513", "BR_author": "aldanor", "BRopenT": "2019-02-22T23:59:12Z", "BRcloseT": "2019-03-20T00:55:26Z", "BR_text": {"BRsummary": "PROBIT score transform is ignored in TreeEnsembleRegressor", "BRdescription": "\n Here's score transform code: <denchmark-link:https://github.com/Microsoft/onnxruntime/blob/11b369a8641d9dc8989739f3c530a8cf330d7f8b/onnxruntime/core/providers/cpu/ml/treeregressor.cc#L260-L268>https://github.com/Microsoft/onnxruntime/blob/11b369a8641d9dc8989739f3c530a8cf330d7f8b/onnxruntime/core/providers/cpu/ml/treeregressor.cc#L260-L268</denchmark-link>\n \n There's actually another option, POST_EVAL_TRANSFORM::PROBIT, which seems to be completely ignored.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "aldanor", "commentT": "2019-03-15T23:33:11Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/aldanor>@aldanor</denchmark-link>\n   -- do you have a use case (e.g. model) for which you're looking to use probit, or simply noticed that the implementation is missing?\n Probit in regression problems will probably result in -inf/+inf most of the times.\n It would be great to know of any scenarios where this function may be beneficial for a tree regressor!\n \t\t"}}}, "commit": {"commit_id": "c3666472628e58a606a63944934efb3ff9edc05f", "commit_author": "jignparm", "commitT": "2019-03-19 17:55:26-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 11, "file_old_name": "onnxruntime\\core\\providers\\cpu\\ml\\ml_common.h", "file_new_name": "onnxruntime\\core\\providers\\cpu\\ml\\ml_common.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "289,294,297,299,310,311,318,319", "deleted_lines": "290,293,295,306,307,314,315", "method_info": {"method_name": "onnxruntime::ml::write_scores", "method_params": "scores,post_transform,write_index,Z,add_second_class", "method_startline": "287", "method_endline": "329"}}, "hunk_1": {"Ismethod": 1, "added_lines": "162", "deleted_lines": "162", "method_info": {"method_name": "onnxruntime::ml::ml_inv_erf", "method_params": "x", "method_startline": "162", "method_endline": "171"}}, "hunk_2": {"Ismethod": 1, "added_lines": "240,243", "deleted_lines": "239", "method_info": {"method_name": "onnxruntime::ml::compute_softmax", "method_params": "values", "method_startline": "239", "method_endline": "256"}}, "hunk_3": {"Ismethod": 1, "added_lines": "162", "deleted_lines": "162", "method_info": {"method_name": "onnxruntime::ml::ErfInv", "method_params": "x", "method_startline": "162", "method_endline": "171"}}, "hunk_4": {"Ismethod": 1, "added_lines": "240", "deleted_lines": "238,239", "method_info": {"method_name": "onnxruntime::ml::sigmoid_probability", "method_params": "score,proba,probb", "method_startline": "238", "method_endline": "241"}}, "hunk_5": {"Ismethod": 1, "added_lines": "263", "deleted_lines": "285", "method_info": {"method_name": "onnxruntime::ml::ComputeSoftmaxZero", "method_params": "values", "method_startline": "263", "method_endline": "285"}}, "hunk_6": {"Ismethod": 1, "added_lines": "234,235,236", "deleted_lines": "234", "method_info": {"method_name": "onnxruntime::ml::ComputeProbit", "method_params": "val", "method_startline": "234", "method_endline": "236"}}, "hunk_7": {"Ismethod": 1, "added_lines": "229", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::ml::ComputeLogistic", "method_params": "val", "method_startline": "229", "method_endline": "232"}}, "hunk_8": {"Ismethod": 1, "added_lines": "263", "deleted_lines": "259", "method_info": {"method_name": "onnxruntime::ml::compute_softmax_zero", "method_params": "values", "method_startline": "259", "method_endline": "281"}}, "hunk_9": {"Ismethod": 1, "added_lines": "227,228,229", "deleted_lines": "227", "method_info": {"method_name": "onnxruntime::ml::ml_logit", "method_params": "val", "method_startline": "227", "method_endline": "230"}}, "hunk_10": {"Ismethod": 1, "added_lines": "243", "deleted_lines": "259", "method_info": {"method_name": "onnxruntime::ml::ComputeSoftmax", "method_params": "values", "method_startline": "243", "method_endline": "260"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cpu\\ml\\treeregressor.cc", "file_new_name": "onnxruntime\\core\\providers\\cpu\\ml\\treeregressor.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "260,261", "deleted_lines": "260,261,262,263,264", "method_info": {"method_name": "onnxruntime::ml::TreeEnsembleRegressor<T>::Compute", "method_params": "context", "method_startline": "217", "method_endline": "264"}}}}}}}