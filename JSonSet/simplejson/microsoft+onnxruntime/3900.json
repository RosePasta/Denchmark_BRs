{"BR": {"BR_id": "3900", "BR_author": "nomaddo", "BRopenT": "2020-05-11T15:36:35Z", "BRcloseT": "2020-05-14T19:50:10Z", "BR_text": {"BRsummary": "Wrong result with `If` node", "BRdescription": "\n \n Wrong result is produce with the following ONNX.\n <denchmark-link:https://gist.github.com/nomaddo/965614ac0684e1042850f6d84cc38970>https://gist.github.com/nomaddo/965614ac0684e1042850f6d84cc38970</denchmark-link>\n \n <denchmark-link:https://gist.github.com/nomaddo/965614ac0684e1042850f6d84cc38970#file-gen_onnx-py-L52-L62>See how to create</denchmark-link>\n \n <denchmark-link:https://gist.github.com/nomaddo/965614ac0684e1042850f6d84cc38970#file-run-py>See how to run</denchmark-link>\n \n This ONNX graph has one if node with very simple sub-graphs (having  one Constant node).\n The sub-graphs never return 0., but got wrong result as follows:\n <denchmark-code>$ python3 run.py model.onnx \n [array([[[[0.]]]], dtype=float32)]\n </denchmark-code>\n \n Urgency\n None\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian GNU/Linux 10 (buster)\n ONNX Runtime installed from (source or binary): binary (via pip)\n ONNX Runtime version: 1.2.0\n Python version: 3.7.3\n Visual Studio version (if applicable):\n GCC/Compiler version (if compiling from source):\n CUDA/cuDNN version:\n GPU model and memory:\n \n To Reproduce\n \n Describe steps/code to reproduce the behavior.\n \n <denchmark-code>$ sudo docker run -it --rm debian:buster /bin/bash\n $ apt update; apt install -y ssh git python3 python3-pip\n $ git clone https://gist.github.com/965614ac0684e1042850f6d84cc38970.git bug_report\n $ cd bug_report\n $ pip3 install onnx onnxruntime\n $ pip3 list\n Package           Version\n ----------------- -------\n asn1crypto        0.24.0 \n cryptography      2.6.1  \n entrypoints       0.3    \n keyring           17.1.1 \n keyrings.alt      3.1.1  \n numpy             1.18.4 \n onnx              1.7.0  \n onnxruntime       1.2.0  \n pip               18.1   \n protobuf          3.11.3 \n pycrypto          2.6.1  \n PyGObject         3.30.4 \n pyxdg             0.25   \n SecretStorage     2.3.1  \n setuptools        40.8.0 \n six               1.12.0 \n typing-extensions 3.7.4.2\n wheel             0.32.3 \n $ python3 gen_onnx.py  # create model.onnx\n $ python3 run.py model.onnx \n [array([[[[0.]]]], dtype=float32)]\n </denchmark-code>\n \n \n Attach the ONNX model to the issue (where applicable) to expedite investigation.\n https://gist.github.com/nomaddo/965614ac0684e1042850f6d84cc38970#file-model-onnx\n \n Expected behavior\n Got the following result:\n <denchmark-code>$ python3 run.py model.onnx \n [array([[[[1001.]]]], dtype=float32)]\n </denchmark-code>\n \n Screenshots\n None\n Additional context\n None\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "nomaddo", "commentT": "2020-05-14T19:19:57Z", "comment_text": "\n \t\tI couldn't repro this in current master (I used the onnx_test_runner app to run the model)  -\n <denchmark-link:https://user-images.githubusercontent.com/9969784/81975672-3ef7ea80-95dc-11ea-8acb-446181214661.png></denchmark-link>\n \n I tried to trigger both conditional branches - if, and else and it outputs the expected results in both cases. I ll build the Python wheel and try.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "nomaddo", "commentT": "2020-05-14T19:50:10Z", "comment_text": "\n \t\tI could repro it in the 1.2.0 wheel but with the wheel built off latest master, it seems to go away. So, with the upcoming release, you should be able to use it. Thanks for reporting.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "nomaddo", "commentT": "2020-05-14T22:48:37Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/microsoft/onnxruntime/pull/3912>#3912</denchmark-link>\n  had the fix for this\n \t\t"}}}, "commit": {"commit_id": "9ef376880b4ebec138ab9e25cb95df3912d80ef4", "commit_author": "Hariharan Seshadri", "commitT": "2020-05-14 19:21:40-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "onnxruntime\\test\\providers\\cpu\\controlflow\\if_test.cc", "file_new_name": "onnxruntime\\test\\providers\\cpu\\controlflow\\if_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "401,402,403,404,405,406", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "If,ConditionalBranchesOnlyContainConstantNodes_ThenBranchExecution", "method_startline": "401", "method_endline": "406"}}, "hunk_1": {"Ismethod": 1, "added_lines": "349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::IfOpTesterOnlyConstantNodesInConditionalBranches::AddNodes", "method_params": "graph,graph_input_defs,graph_output_defs", "method_startline": "349", "method_endline": "397"}}, "hunk_2": {"Ismethod": 1, "added_lines": "409,410,411,412,413,414", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "If,ConditionalBranchesOnlyContainConstantNodes_ElseBranchExecution", "method_startline": "409", "method_endline": "414"}}, "hunk_3": {"Ismethod": 1, "added_lines": "345,346", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::IfOpTesterOnlyConstantNodesInConditionalBranches::IfOpTesterOnlyConstantNodesInConditionalBranches", "method_params": "", "method_startline": "345", "method_endline": "346"}}}}}}}