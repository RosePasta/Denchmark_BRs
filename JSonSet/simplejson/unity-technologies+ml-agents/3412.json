{"BR": {"BR_id": "3412", "BR_author": "Xiromtz", "BRopenT": "2020-02-11T17:55:26Z", "BRcloseT": "2020-02-25T23:08:30Z", "BR_text": {"BRsummary": "Raycast Debugging", "BRdescription": "\n Is your feature request related to a problem? Please describe.\n This seems to be intentional, but when using the \"RayPerceptionSensor\" component, it does not show the debug gizmos unless when training.\n Describe the solution you'd like\n I want to see my raycasts in realtime without having to start a seperate training process, i.e. controlling my agent using heuristics. I don't quite understand why this isn't possible or I might have missed something.\n Describe alternatives you've considered\n I've even tried starting a training process while forcing the agent to heuristic mode. This still does not display any raycast debugging.\n I might have missed something, but this seems to be intentional. It shouldn't be hard to add a simple checkbox in the debug gizmos inspector for the ray perception component.\n Thanks in advance, this would be a great help.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Xiromtz", "commentT": "2020-02-11T19:30:38Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/Xiromtz>@Xiromtz</denchmark-link>\n , you can see the raycasts during inference mode as well, but only in the scene view. But I was able to replicate that if you're using Heuristic the raycasts don't show. This seems like a bug, and I've logged it with internal tracking number MLA-622.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Xiromtz", "commentT": "2020-02-12T09:47:25Z", "comment_text": "\n \t\tYeah, I forgot to mention that it also works in inference! But Inference obviously only works with a trained model, so I still can't test my implementation very well if I can't control the agent myself.\n Thanks for the quick reply though!\n I've never used this github feature; Should I close this thread, since you've logged the bug internally? Or will it be closed once the bug is fixed?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Xiromtz", "commentT": "2020-02-12T17:22:42Z", "comment_text": "\n \t\tFeel free to leave the issue open until the bug is fixed - we'll close it at that time. Thanks!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Xiromtz", "commentT": "2020-02-13T09:27:52Z", "comment_text": "\n \t\tAwesome, thanks for the help!\n For anyone having the same problem and wanting to quickly test their raycasts via heuristic input:\n A simple workaround is calling the heuristic function from the AgentAction function by replacing the action array.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Xiromtz", "commentT": "2020-02-25T23:08:17Z", "comment_text": "\n \t\tJust a followup on this - I just merged a <denchmark-link:https://github.com/Unity-Technologies/ml-agents/pull/3484>#3484</denchmark-link>\n  which (amongst other things) will draw the RayPerception gizmos whenever the Agent is selected (including non-play mode and using Heuristic behavior). It's on the master branch now and will be in the next release (in a few weeks).\n This still doesn't run the sensors when using Heuristic behaviors (which is a larger discussion) but it should be enough to solve your original problem.\n \t\t"}}}, "commit": {"commit_id": "928761c16f1b38c2f4eb2c06f804d27528353c91", "commit_author": "Chris Elion", "commitT": "2020-02-25 14:50:58-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "com.unity.ml-agents\\CHANGELOG.md", "file_new_name": "com.unity.ml-agents\\CHANGELOG.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "30,31", "deleted_lines": null}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "com.unity.ml-agents\\Editor\\RayPerceptionSensorComponentBaseEditor.cs"}, "file_2": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "com.unity.ml-agents\\Editor\\RayPerceptionSensorComponentBaseEditor.cs.meta", "file_new_name": "com.unity.ml-agents\\Editor\\RayPerceptionSensorComponentBaseEditor.cs.meta"}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "com.unity.ml-agents\\Runtime\\Sensor\\RayPerceptionSensor.cs", "file_new_name": "com.unity.ml-agents\\Runtime\\Sensor\\RayPerceptionSensor.cs", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "245,246,247,248,249", "deleted_lines": null, "method_info": {"method_name": "MLAgents::RayPerceptionSensor::SetRayPerceptionInput", "method_params": "input", "method_startline": "245", "method_endline": "249"}}, "hunk_1": {"Ismethod": 1, "added_lines": "340", "deleted_lines": null, "method_info": {"method_name": "MLAgents::RayPerceptionSensor::PerceiveSingleRay", "method_params": "input,rayIndex,debugRayOut", "method_startline": "340", "method_endline": "434"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "com.unity.ml-agents\\Runtime\\Sensor\\RayPerceptionSensorComponent3D.cs", "file_new_name": "com.unity.ml-agents\\Runtime\\Sensor\\RayPerceptionSensorComponent3D.cs", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "3,10,11,12,15,16,17,18,19,20,22,23,24,27,28,29,30,31,32", "deleted_lines": "9,12,16"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 7, "file_old_name": "com.unity.ml-agents\\Runtime\\Sensor\\RayPerceptionSensorComponentBase.cs", "file_new_name": "com.unity.ml-agents\\Runtime\\Sensor\\RayPerceptionSensorComponentBase.cs", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243", "deleted_lines": null, "method_info": {"method_name": "MLAgents::RayPerceptionSensorComponentBase::DrawRaycastGizmos", "method_params": "rayInfo,alpha", "method_startline": "223", "method_endline": "243"}}, "hunk_1": {"Ismethod": 1, "added_lines": "130,132", "deleted_lines": "128,129,130,131,132,133,134,135,136,138,139", "method_info": {"method_name": "MLAgents::RayPerceptionSensorComponentBase::CreateSensor", "method_params": "", "method_startline": "128", "method_endline": "141"}}, "hunk_2": {"Ismethod": 1, "added_lines": "194,195,196,197,198,199,200,201,203,204,205,206,207,208,210,211,213,214,215", "deleted_lines": null, "method_info": {"method_name": "MLAgents::RayPerceptionSensorComponentBase::OnDrawGizmosSelected", "method_params": "", "method_startline": "194", "method_endline": "218"}}, "hunk_3": {"Ismethod": 1, "added_lines": "185,186,187,189,190,192", "deleted_lines": null, "method_info": {"method_name": "MLAgents::RayPerceptionSensorComponentBase::UpdateSensor", "method_params": "", "method_startline": "185", "method_endline": "192"}}, "hunk_4": {"Ismethod": 1, "added_lines": "161", "deleted_lines": null, "method_info": {"method_name": "MLAgents::RayPerceptionSensorComponentBase::GetObservationShape", "method_params": "", "method_startline": "158", "method_endline": "165"}}, "hunk_5": {"Ismethod": 1, "added_lines": "109,110,111,130,132", "deleted_lines": "109,111,113,115,117,118,119,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139", "method_info": {"method_name": "MLAgents::RayPerceptionSensorComponentBase::OnDrawGizmos", "method_params": "", "method_startline": "109", "method_endline": "142"}}, "hunk_6": {"Ismethod": 1, "added_lines": "167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183", "deleted_lines": null, "method_info": {"method_name": "MLAgents::RayPerceptionSensorComponentBase::GetRayPerceptionInput", "method_params": "", "method_startline": "167", "method_endline": "183"}}}}}}}