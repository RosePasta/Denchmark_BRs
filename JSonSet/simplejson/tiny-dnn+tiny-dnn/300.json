{"BR": {"BR_id": "300", "BR_author": "haibarasiao", "BRopenT": "2016-08-30T08:00:47Z", "BRcloseT": "2016-10-03T14:14:55Z", "BR_text": {"BRsummary": "when I run cifar10 with tiny-cnn in examples, I get this error:", "BRdescription": "\n *** Error in `/home/haibara/workspace/tiny_cnn/Debug/tiny_cnn': corrupted double-linked list: 0x000000002b792500 ***\n and I seems that in network.h line 687, this problem occur.\n The dataset is cifar-10 dataset.\n any suggestions?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "haibarasiao", "commentT": "2016-08-30T08:28:36Z", "comment_text": "\n \t\tand it seems that when function 'train_onebatch'(in network.h line 674) has ended, it occurred.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "haibarasiao", "commentT": "2016-08-30T08:32:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/haibarasiao>@haibarasiao</denchmark-link>\n  thanks for the feeback!\n What's your batch size? Could you also provide the backtrace log you get?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "haibarasiao", "commentT": "2016-08-30T09:02:10Z", "comment_text": "\n \t\tbatch_size is 10(default)\n Thread <denchmark-link:https://github.com/tiny-dnn/tiny-dnn/issues/1>#1</denchmark-link>\n  [tiny_cnn] 28375 [core: 1](Suspended : Signal : SIGABRT:Aborted)\n __GI_raise() at raise.c:56 0x7ffff700dcc9\n __GI_abort() at abort.c:89 0x7ffff70110d8\n __libc_message() at libc_fatal.c:175 0x7ffff704a394\n malloc_printerr() at malloc.c:4,996 0x7ffff70550f7\n _int_free() at malloc.c:3,996 0x7ffff70567a7\n tiny_dnn::aligned_allocator<float, 64ul>::aligned_free() at aligned_allocator.h:133 0x49e014\n tiny_dnn::aligned_allocator<float, 64ul>::deallocate() at aligned_allocator.h:80 0x495543\n std::_Vector_base<float, tiny_dnn::aligned_allocator<float, 64ul> >::_M_deallocate() at stl_vector.h:174 0x48c8c4\n std::_Vector_base<float, tiny_dnn::aligned_allocator<float, 64ul> >::~_Vector_base() at stl_vector.h:160 0x489bcb\n std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >::~vector() at stl_vector.h:416 0x482075\n std::_Destroy<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > >() at stl_construct.h:93 0x4a485a\n std::>() at stl_construct.h:103 0x49c048\n std::>() at stl_construct.h:126 0x492d9c\n std::, std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > >() at stl_construct.h:151 0x48a099\n std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::allocator<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >::~vector() at stl_vector.h:415 0x482563\n std::_Destroy<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::allocator<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > >() at stl_construct.h:93 0x4a525b\n std::>() at stl_construct.h:103 0x49d184\n std::>() at stl_construct.h:126 0x494433\n std::, std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::allocator<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > >() at stl_construct.h:151 0x48b4cf\n std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::allocator<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > >, std::allocator<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> >, std::allocator<std::vector<float, tiny_dnn::aligned_allocator<float, 64ul> > > > > >::~vector() at stl_vector.h:415 0x4834c1\n <...more frames...>\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "haibarasiao", "commentT": "2016-10-03T14:14:55Z", "comment_text": "\n \t\tThe memory corruption in Cifar-10 default example was solved in v1.0.0alpha. Thank you very much for reporting :)\n \t\t"}}}, "commit": {"commit_id": "18d8658aa034828f9de186e936afc76d3ec14f1c", "commit_author": "nyanp", "commitT": "2016-09-13 23:17:05+09:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tiny_dnn\\core\\kernels\\fully_connected_grad_op.h", "file_new_name": "tiny_dnn\\core\\kernels\\fully_connected_grad_op.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "60,61,66,87,90,98,101", "deleted_lines": "64,85,88,96,99", "method_info": {"method_name": "tiny_dnn::FullyConnectedGradOp::compute", "method_params": "context", "method_startline": "59", "method_endline": "107"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tiny_dnn\\core\\kernels\\fully_connected_op.h", "file_new_name": "tiny_dnn\\core\\kernels\\fully_connected_op.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "61,62,66,80,89,98", "deleted_lines": "64,73,79,88,97", "method_info": {"method_name": "tiny_dnn::FullyConnectedOp::compute", "method_params": "context", "method_startline": "60", "method_endline": "106"}}}}}}}