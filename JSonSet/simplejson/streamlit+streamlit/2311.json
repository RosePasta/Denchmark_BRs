{"BR": {"BR_id": "2311", "BR_author": "erwanlenagard", "BRopenT": "2020-11-03T09:34:07Z", "BRcloseT": "2020-12-08T18:33:10Z", "BR_text": {"BRsummary": "File_uploader() - ValueError: I/O operation on closed file.", "BRdescription": "\n <denchmark-h:h1>Summary</denchmark-h>\n \n I upgraded Streamlit and file_uploader() haven't the expected behavior. I'm trying to load a file, then use a dropdown menu to select the right column to analyse. I adapted the proposed solution <denchmark-link:https://github.com/streamlit/streamlit/issues/2266>here </denchmark-link>\n , but I still have  \"ValueError: I/O operation on closed file.\" when I select a value in the dropdown menu.\n <denchmark-h:h1>Steps to reproduce</denchmark-h>\n \n What are the steps we should take to reproduce the bug:\n \n Select a file to upload\n Select a value in the dropdown menu\n \n <denchmark-link:https://drive.google.com/file/d/1Mw33AsLPKugGS4k_dg1JlE55b4_Yy9uK/view?usp=sharing>Screencast</denchmark-link>\n \n <denchmark-h:h2>Expected behavior:</denchmark-h>\n \n Explain what you expect to happen when you go through the steps above, assuming there were no bugs.\n <denchmark-h:h2>Is this a regression?</denchmark-h>\n \n That is, did this use to work the way you expected in the past?\n yes\n <denchmark-h:h1>Debug info</denchmark-h>\n \n streamlit==0.70.0\n streamlit-nightly==0.70.1.dev20201101\n <denchmark-h:h1>Additional information</denchmark-h>\n \n Here is my code :\n <denchmark-code>def upload_file():\n     file = st.sidebar.file_uploader(\"Choisir un fichier\", type=[\"csv\"])\n     if file is None:\n         return None,None,None,None,None,None\n     file.seek(0)\n     df = pd.read_csv(file, sep=';',index_col=None, encoding = \"utf-8\")\n     menu_value = st.sidebar.selectbox('Quelle colonne correspond au texte \u00e0 analyser ?',df.columns)\n     language,remove_hashtags,remove_usernames,ncomponents=sidebar()\n     return(df,menu_value,language,remove_hashtags,remove_usernames,ncomponents)\n \n def sidebar():\n     language = st.sidebar.selectbox('Quelle est la langue du corpus ?',['french','english'])\n     remove_hashtags=st.sidebar.checkbox('Supprimer les hashtags',value=False)\n     remove_usernames=st.sidebar.checkbox('Supprimer les mentions',value=False)\n     ncomponents=st.sidebar.slider(\"Combien de topics \u00e0 d\u00e9tecter\", min_value=0, max_value=100, value=20, step=1, format=None, key=None)\n     return language,remove_hashtags,remove_usernames,ncomponents\n     \n def main():\n     st.set_page_config(\n         page_title=\"Topic Modeling\",\n         page_icon=\"\ud83e\uddca\",\n         layout=\"wide\",\n         initial_sidebar_state=\"expanded\",\n     )\n     st.set_option('deprecation.showfileUploaderEncoding', False)\n \n     st.sidebar.title('Param\u00e8tres')\n     st.title('Topic Modelling')\n     projet=st.sidebar.text_input(\"Donner un nom de projet\", value='monProjet', max_chars=None, key=None, type='default')\n     \n     \n     df,menu_value,language,remove_hashtags,remove_usernames,ncomponents=upload_file()\n    \n     if st.sidebar.button('Valider'):\n         analyse(projet,language,remove_hashtags,remove_usernames,ncomponents,df_input,menu_value)\n         list_results(path=\"./\"+projet+\"/\")\n \n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "erwanlenagard", "commentT": "2020-11-11T05:09:40Z", "comment_text": "\n \t\tI have the similar requirement and I am facing the same issue as mentioned above. Is there a workaround?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "erwanlenagard", "commentT": "2020-11-17T03:03:47Z", "comment_text": "\n \t\tClosing as a duplicate <denchmark-link:https://github.com/streamlit/streamlit/issues/2235>#2235</denchmark-link>\n . Also resolved in <denchmark-link:https://github.com/streamlit/streamlit/pull/2279>#2279</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "erwanlenagard", "commentT": "2020-11-20T19:21:35Z", "comment_text": "\n \t\tIt looks like this is still happening intermittently in v0.71.0. Reopening\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "erwanlenagard", "commentT": "2020-11-21T02:09:49Z", "comment_text": "\n \t\tFrom Thiago:\n \n My 100% blind guess is we're creating a single file-like-object on upload and reusing it on every run \u2014 so if the file is closed and then gets reused it will brerak. To fix, we'd create a new file-like object each time.\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "erwanlenagard", "commentT": "2020-11-21T06:58:10Z", "comment_text": "\n \t\tYup, the only thing is we aren't closing the file. My guess is the memory is being reclaimed and the file is getting closed for us. However, I was testing with a 189B file and though I wasn't able to repro consistently, I was able to do so and my machine should not be complaining about 189B. Definitely need to do more research to confirm. For sure we'll add better error handling, to recreate if possible but that to me is a bandaid.\n Additionally, re-creating a new file-like object each run when we have the file seems very suboptimal to me and a waste of memory...\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "erwanlenagard", "commentT": "2020-12-16T00:56:50Z", "comment_text": "\n \t\tI think this is the best thread to leave this -- I am encountering this error when using the file_uploader in combination with st.radio(), and uploaded_file.seek(0) does not solve the problem. Ill admit, I honestly do not understand what seek(0) is fundamentally doing, so maybe I am missing something obvious. Here is a minimal reproducible example:\n import streamlit as st\n import io\n \n option = st.radio(\n     'Choose method of submitting sequence:',\n     [\"Upload a file (.txt)\", \"Enter a sequence\"])\n \n txt = None\n \n if option == \"Upload a file (.txt)\":\n \n     uploaded_file = st.file_uploader(\"Choose a file:\", type=['txt'])\n \n     if uploaded_file is not None:\n         uploaded_file.seek(0) #does not do anything\n         text_io = io.TextIOWrapper(uploaded_file,encoding='UTF-8')\n         txt=list(text_io.readlines())\n \n elif option == \"Enter a sequence\":\n     txt = st.text_area('Input sequence here:')\n \n if txt:\n     st.write(txt)\n streamlit 0.71.0 and 0.72.0\n When users upload a file, switch to manually entering text, and then try to upload again, the ValueError: I/O operation on closed file is thrown. This is a regression, as I did not encounter this error with a much older version of streamlit\n any help would be much appreciated!\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "erwanlenagard", "commentT": "2020-12-16T05:31:10Z", "comment_text": "\n \t\tThanks for sending this along. The fix was recently merged and will be available in version 0.73 that will be coming out this week. If you would like to get the latest, you can use our <denchmark-link:https://pypi.org/project/streamlit-nightly/>streamlit-nightly package</denchmark-link>\n  that is updated with the latest changes every day.\n \t\t"}}}, "commit": {"commit_id": "3be3d6fc4046ae1fe1d4461455ab3e2164d26d7c", "commit_author": "Tim Conkling", "commitT": "2020-12-08 10:33:09-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "lib\\streamlit\\elements\\file_uploader.py", "file_new_name": "lib\\streamlit\\elements\\file_uploader.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "3,7,49,110,113,117,120", "deleted_lines": "5,6,49,50,111,114,118,121,122,123"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "lib\\streamlit\\server\\upload_file_request_handler.py", "file_new_name": "lib\\streamlit\\server\\upload_file_request_handler.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "100,101,122,126", "deleted_lines": "100,101,122,126", "method_info": {"method_name": "post", "method_params": "self,kwargs", "method_startline": "99", "method_endline": "154"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 15, "file_old_name": "lib\\streamlit\\uploaded_file_manager.py", "file_new_name": "lib\\streamlit\\uploaded_file_manager.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "89", "deleted_lines": "89", "method_info": {"method_name": "_add_files", "method_params": "self,str,str", "method_startline": "85", "method_endline": "89"}}, "hunk_1": {"Ismethod": 1, "added_lines": "201", "deleted_lines": null, "method_info": {"method_name": "replace_files", "method_params": "self,str,str", "method_startline": "197", "method_endline": "201"}}, "hunk_2": {"Ismethod": 1, "added_lines": "155", "deleted_lines": "163", "method_info": {"method_name": "_remove_files", "method_params": "self,str,str", "method_startline": "155", "method_endline": "164"}}, "hunk_3": {"Ismethod": 1, "added_lines": "25,26,27,28,29", "deleted_lines": "25,26,27,28,29,30", "method_info": {"method_name": "__init__", "method_params": "self,id,name,type,data,kwargs", "method_startline": "25", "method_endline": "30"}}, "hunk_4": {"Ismethod": 1, "added_lines": "180", "deleted_lines": "184", "method_info": {"method_name": "replace_files", "method_params": "self,str,str", "method_startline": "180", "method_endline": "184"}}, "hunk_5": {"Ismethod": 1, "added_lines": "55,66,67", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self", "method_startline": "54", "method_endline": "69"}}, "hunk_6": {"Ismethod": 1, "added_lines": "124,125", "deleted_lines": "124,125", "method_info": {"method_name": "get_files", "method_params": "self,str,str", "method_startline": "124", "method_endline": "125"}}, "hunk_7": {"Ismethod": 1, "added_lines": null, "deleted_lines": "73", "method_info": {"method_name": "_add_files", "method_params": "self,str,str", "method_startline": "69", "method_endline": "73"}}, "hunk_8": {"Ismethod": 1, "added_lines": "180", "deleted_lines": "184,185", "method_info": {"method_name": "remove_session_files", "method_params": "self,str", "method_startline": "180", "method_endline": "195"}}, "hunk_9": {"Ismethod": 1, "added_lines": "105", "deleted_lines": "101,102", "method_info": {"method_name": "add_files", "method_params": "self,str,str", "method_startline": "101", "method_endline": "105"}}, "hunk_10": {"Ismethod": 1, "added_lines": "117,118,124,125", "deleted_lines": "108,120,124,125", "method_info": {"method_name": "get_files", "method_params": "self,str,str", "method_startline": "108", "method_endline": "125"}}, "hunk_11": {"Ismethod": 1, "added_lines": "144", "deleted_lines": "149", "method_info": {"method_name": "remove_file", "method_params": "self,str,str,str", "method_startline": "144", "method_endline": "153"}}, "hunk_12": {"Ismethod": 1, "added_lines": "37,38,39,40,41,42,43,44,45,46", "deleted_lines": "39", "method_info": {"method_name": "__init__", "method_params": "self,UploadedFileRec", "method_startline": "37", "method_endline": "46"}}, "hunk_13": {"Ismethod": 1, "added_lines": "166", "deleted_lines": null, "method_info": {"method_name": "remove_files", "method_params": "self,str,str", "method_startline": "166", "method_endline": "178"}}, "hunk_14": {"Ismethod": 1, "added_lines": "89", "deleted_lines": "89", "method_info": {"method_name": "add_files", "method_params": "self,str,str", "method_startline": "85", "method_endline": "89"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "lib\\tests\\streamlit\\file_uploader_test.py", "file_new_name": "lib\\tests\\streamlit\\file_uploader_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "50,51,52,55,64,65,66,67,68,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85", "deleted_lines": "51,52,53,56,65,66,68,70", "method_info": {"method_name": "test_multiple_files", "method_params": "self,get_files_patch", "method_startline": "48", "method_endline": "85"}}, "hunk_1": {"Ismethod": 1, "added_lines": "97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118", "deleted_lines": null, "method_info": {"method_name": "test_unique_uploaded_file_instance", "method_params": "self,get_files_patch", "method_startline": "97", "method_endline": "118"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "lib\\tests\\streamlit\\hashing_test.py", "file_new_name": "lib\\tests\\streamlit\\hashing_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "331,332,333", "deleted_lines": "333,334,335", "method_info": {"method_name": "test_io", "method_params": "self,io_type,io_data1,io_data2,io_data3", "method_startline": "330", "method_endline": "341"}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "lib\\tests\\streamlit\\server_test.py", "file_new_name": "lib\\tests\\streamlit\\server_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "367", "deleted_lines": "367", "method_info": {"method_name": "test_multiple_uploaded_file_triggers_one_rerun", "method_params": "self", "method_startline": "355", "method_endline": "390"}}, "hunk_1": {"Ismethod": 1, "added_lines": "404", "deleted_lines": "404", "method_info": {"method_name": "test_orphaned_upload_file_deletion", "method_params": "self", "method_startline": "393", "method_endline": "409"}}, "hunk_2": {"Ismethod": 1, "added_lines": "329", "deleted_lines": "329", "method_info": {"method_name": "test_uploaded_file_triggers_rerun", "method_params": "self", "method_startline": "317", "method_endline": "352"}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "lib\\tests\\streamlit\\upload_file_request_handler_test.py", "file_new_name": "lib\\tests\\streamlit\\upload_file_request_handler_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "161,162", "deleted_lines": null, "method_info": {"method_name": "test_delete_file_across_sessions", "method_params": "self", "method_startline": "159", "method_endline": "170"}}, "hunk_1": {"Ismethod": 1, "added_lines": "97,98,99,102,103,104,112,115,116", "deleted_lines": "96,97,98,106,109,110", "method_info": {"method_name": "test_upload_multiple_files", "method_params": "self", "method_startline": "96", "method_endline": "119"}}, "hunk_2": {"Ismethod": 1, "added_lines": "148,149", "deleted_lines": "155,156", "method_info": {"method_name": "test_delete_file", "method_params": "self", "method_startline": "146", "method_endline": "157"}}, "hunk_3": {"Ismethod": 1, "added_lines": "79,81,89,91,92", "deleted_lines": "83,85,86,91,92,93", "method_info": {"method_name": "test_upload_one_file", "method_params": "self", "method_startline": "77", "method_endline": "94"}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "lib\\tests\\streamlit\\uploaded_file_manager_test.py", "file_new_name": "lib\\tests\\streamlit\\uploaded_file_manager_test.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "20,22,23", "deleted_lines": "19,22,23"}}}}}}