{"BR": {"BR_id": "1302", "BR_author": "plevshad", "BRopenT": "2019-11-06T13:21:39Z", "BRcloseT": "2019-11-07T16:56:29Z", "BR_text": {"BRsummary": "Saving Meshes after sharpening", "BRdescription": "\n Describe the bug\n Open3d can't write or open properly a mesh (created from a point cloud using the pivoting ball function) which has been sharpened. It can write a .ply mesh file, however when visualizing it, its just a bunch of random triangles.\n To Reproduce\n Steps to reproduce the behavior:\n \n \n Load point cloud:\n pcd = o3d.io.read_point_cloud(\n os.path.join(\".ply\") )\n \n \n Convert point cloud into a mesh:\n mesh = o3d.geometry.TriangleMesh.create_from_point_cloud_ball_pivoting (pcd,\n o3d.utility.DoubleVector([1,2,3,4]))\n print(np.asarray(mesh.vertices))\n print(np.asarray(mesh.triangles))\n mesh =  o3d.geometry.TriangleMesh.compute_triangle_normals (mesh)\n \n \n Visual check if the mesh has been created properly:\n o3d.visualization.draw_geometries ([mesh])\n \n \n Sharpening of the mesh\n mesh =  mesh.filter_sharpen(number_of_iterations=1, strength=0.005)\n \n \n Saving of the sharpened mesh\n o3d.io.write_triangle_mesh(\n os.path.join(path, \"meshes/\", \".ply\"), mesh)\n \n \n Opening of the saved sharpened mesh\n mesh = o3d.io.read_triangle_mesh(\n os.path.join(path, \"meshes\",\".ply\") )\n o3d.visualization.draw_geometries([mesh])\n \n \n Expected behavior\n Open3D is able to properly load the point cloud, create the mesh and sharpen the mesh.\n However, it is unable to properly save the sharpened mesh or read the not-properly saved mesh.\n \n Screenshot of the sharpened mesh:\n <denchmark-link:https://user-images.githubusercontent.com/57444293/68300892-001e3080-009f-11ea-944d-48d43462b0a5.png></denchmark-link>\n \n Screenshot of the experienced bug when loading a saved sharpened mesh:\n <denchmark-link:https://user-images.githubusercontent.com/57444293/68300929-17f5b480-009f-11ea-8ee1-74ecdb7b4afa.png></denchmark-link>\n \n Environment (please complete the following information):\n \n OS: Ubuntu 18.04.3 LTS\n Python version:3.6\n Open3D version: 0.8.0\n Is this remote workstation?:  no\n How did you install Open3D?: pip\n \n Additional context\n When saving the sharpened mesh the terminal outputs the following statement multiple times:\n RPly: Failed writing green of vertex 56040 (binary output: uchar)\n RPly: Failed writing red of vertex 56041 (binary output: uchar)\n RPly: Failed writing blue of vertex 56056 (binary output: uchar)\n RPly: Failed writing vertex_indices of face 0 (binary output: uchar)\n As well as when opening the saved sharpened mesh:\n RPly: Error reading 'vertex_indices' of 'face' number 93304\n [Open3D WARNING] Read PLY failed: unable to read file:\n Thanks a lot for your time!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "plevshad", "commentT": "2019-11-06T13:27:09Z", "comment_text": "\n \t\tThere seems to be something wrong with writing the file, given the context it could be that the color values are problematic. Could you post the output of print(np.asarray(mesh.vertex_colors)) before you write the mesh to ply.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "plevshad", "commentT": "2019-11-06T15:21:11Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/griegler>@griegler</denchmark-link>\n \n Thanks for taking a look so fast, adding print(np.asarray(mesh.vertex_colors)) before writing the mesh outputs the following matrices:\n [[0.70033333 0.5404902  0.79892157]\n [0.70029412 0.54511765 0.83647059]\n [0.49335294 0.3644902  0.30741176]\n ...\n [0.20123529 0.12623529 0.05166667]\n [0.09029412 0.06664706 0.04298039]\n [0.06666667 0.04705882 0.05882353]]\n The point cloud was created using EnSenso SDK, N35 camera.\n However, so far we haven't encounter any other problems with these point clouds.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "plevshad", "commentT": "2019-11-07T08:44:02Z", "comment_text": "\n \t\tLooks ok. Another check, does any attribute contain NaN, or inf? Could you show me the output of\n print(np.all(np.isfinite(np.asarray(mesh.vertices))))\n print(np.all(np.isfinite(np.asarray(mesh.vertex_colors))))\n print(np.all(np.isfinite(np.asarray(mesh.vertex_normals))))\n print(np.all(np.isfinite(np.asarray(mesh.triangles))))\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "plevshad", "commentT": "2019-11-07T15:42:17Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/griegler>@griegler</denchmark-link>\n  ,\n Sure no worries, running the code including again the \n and\n <denchmark-code>print(np.all(np.isfinite(np.asarray(mesh.vertices))))\n print(np.all(np.isfinite(np.asarray(mesh.vertex_colors))))\n print(np.all(np.isfinite(np.asarray(mesh.vertex_normals))))\n print(np.all(np.isfinite(np.asarray(mesh.triangles))))\n </denchmark-code>\n \n Results in the following output at the terminal:\n Mesh sharpening\n [[0.70033333 0.5404902  0.79892157]\n [0.70029412 0.54511765 0.83647059]\n [0.49335294 0.3644902  0.30741176]\n ...\n [0.20123529 0.12623529 0.05166667]\n [0.09029412 0.06664706 0.04298039]\n [0.06666667 0.04705882 0.05882353]]\n True\n True\n True\n True\n If it's handier for you, I can send as well the data set so you can test it !!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "plevshad", "commentT": "2019-11-07T15:45:47Z", "comment_text": "\n \t\tYes, given that seems also to be correct, it would be great if you could share the data.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "plevshad", "commentT": "2019-11-07T15:58:51Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/griegler>@griegler</denchmark-link>\n  ,\n okey here is the data, the file named: window_int_02.ply is the original point cloud.\n While the file named: mesh_window02_before_optimization01.ply is the erroneously saved saved mesh.\n <denchmark-link:https://github.com/intel-isl/Open3D/files/3820466/window.data.test.set.zip>window data test set.zip</denchmark-link>\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "plevshad", "commentT": "2019-11-07T16:41:33Z", "comment_text": "\n \t\tOk, two things coming together here. After filter_sharpen the vertex_colors can get out of bounds [0,1]. However, write_triangle_mesh with ply as format expects that the color values are in that range, otherwise you get the warnings you see in your terminal.\n A quick fix is to add\n mesh.vertex_colors = o3d.utility.Vector3dVector(\n     np.clip(np.asarray(mesh.vertex_colors), 0, 1)\n )\n after the call to sharpen. You might want to re-normalize the normals, too.\n I will submit a PR to fix the problem in writing meshes to ply soon.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "plevshad", "commentT": "2019-11-07T16:56:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/intel-isl/Open3D/pull/1306>#1306</denchmark-link>\n  should fix the problem.\n \t\t"}}}, "commit": {"commit_id": "008cc58900a92146ab1c94e95823c615dda302a4", "commit_author": "Gernot", "commitT": "2019-11-07 14:06:55-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\Open3D\\IO\\FileFormat\\FilePLY.cpp", "file_new_name": "src\\Open3D\\IO\\FileFormat\\FilePLY.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "798,805,806,807,808,809,810,811", "deleted_lines": null, "method_info": {"method_name": "open3d::io::WriteLineSetToPLY", "method_params": "filename,lineset,write_ascii,compressed,print_progress", "method_startline": "745", "method_endline": "824"}}, "hunk_1": {"Ismethod": 1, "added_lines": "467,481,482,483,484,485,486,487", "deleted_lines": null, "method_info": {"method_name": "open3d::io::WritePointCloudToPLY", "method_params": "filename,pointcloud,write_ascii,compressed,print_progress", "method_startline": "423", "method_endline": "500"}}, "hunk_2": {"Ismethod": 1, "added_lines": "633,647,648,649,650,651,652,653,654,655,656,657,658,659", "deleted_lines": "638,639,640", "method_info": {"method_name": "open3d::io::WriteTriangleMeshToPLY", "method_params": "filename,mesh,write_ascii,compressed,write_vertex_normals,write_vertex_colors,write_triangle_uvs,print_progress", "method_startline": "574", "method_endline": "674"}}}}}}}