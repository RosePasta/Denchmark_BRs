{"BR": {"BR_id": "935", "BR_author": "WenyinWei", "BRopenT": "2019-04-27T10:19:13Z", "BRcloseT": "2019-09-16T15:42:41Z", "BR_text": {"BRsummary": "VortexGrid and GlobalOptimization compilation problem on Ubuntu", "BRdescription": "\n Describe the bug\n A clear and concise description of what the bug is.\n Seems the compilation can not succeed, any idea to fix it?\n The problem arises when I compiled the VortexGrid.cpp and GlobalOptimization.cpp.\n To Reproduce\n Steps to reproduce the behavior:\n \n git clone --recursive https://github.com/intel-isl/Open3D\n cd Open3D |  . util/scripts/install-deps-ubuntu.sh\n mkdir build | cd build\n cmake ..\n make -j8 and meets the problem.\n \n Expected behavior\n Seems the compilation can not succeed, any idea to fix it?\n Screenshots\n If applicable, add screenshots to help explain your problem.\n <denchmark-link:https://user-images.githubusercontent.com/33152225/56848164-2f95f880-6918-11e9-9084-d56abd6256bf.png></denchmark-link>\n \n Environment (please complete the following information):\n \n OS: Ubuntu 18.04\n Python version:3.6\n Open3D version: The latest from git.\n Is this remote workstation?: no\n How did you install Open3D?: gcc build from source\n \n Additional context\n It looks like that there are many compatibility bugs hidden in Open3D, but it seems to be an almost perfect open source package except for the bugs. I hope I could be a contributor to fix them.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "WenyinWei", "commentT": "2019-04-30T07:07:26Z", "comment_text": "\n \t\tThis problem is fixed by changing\n <denchmark-code>Eigen::Vector3i VoxelGrid::GetVoxel(const Eigen::Vector3d &point) const {\n     Eigen::Vector3d voxel_f = (point - origin_) / voxel_size_;\n     return Eigen::floor(voxel_f.array()).cast<int>();\n }\n </denchmark-code>\n \n to\n <denchmark-code>Eigen::Vector3i VoxelGrid::GetVoxel(const Eigen::Vector3d &point) const {\n     Eigen::Vector3d voxel_f = (point - origin_) / voxel_size_;\n     return (Eigen::floor(voxel_f.array())).cast<int>();\n }\n </denchmark-code>\n \n The compiler can not recognize the sequence, so a bracket could solve the problem.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "WenyinWei", "commentT": "2019-05-05T06:46:51Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/WenyinWei>@WenyinWei</denchmark-link>\n  thanks for reporting, we have another user reporting the same issue.\n From both cases, it looks like Open3D is picking up the system's Eigen, instead of the Eigen that comes with Open3D's  directory. In your case, the Eigen is included from  according to your screenshot. In the other case, the  function is missing in the  file, but it should look like <denchmark-link:https://github.com/eigenteam/eigen-git-mirror/blob/ed95dad9783d0cab2275679e028f23ac18c0d1f1/Eigen/src/Core/GlobalFunctions.h#L92>https://github.com/eigenteam/eigen-git-mirror/blob/ed95dad9783d0cab2275679e028f23ac18c0d1f1/Eigen/src/Core/GlobalFunctions.h#L92</denchmark-link>\n \n The solution we got it to work is to force Open3D to use the Eigen that comes with it in the 3rd party directory. That is,\n cmake -DBUILD_EIGEN3=ON ..\n We'll update Open3D's 3rd party CMake file to make that the default behavior.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "WenyinWei", "commentT": "2019-05-05T12:18:00Z", "comment_text": "\n \t\tThanks for your reply, <denchmark-link:https://github.com/yxlao>@yxlao</denchmark-link>\n .\n Do you think that setting the default cmake options of 3rd party packages to ON would be better for new users to compile and avoid the bugs caused by 3rd party package updating? I guess that it would be more convenient to keep every user the same configuration.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "WenyinWei", "commentT": "2019-05-07T01:53:28Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/WenyinWei>@WenyinWei</denchmark-link>\n  yeah, we'll make it to be  by default\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "WenyinWei", "commentT": "2019-06-06T01:09:57Z", "comment_text": "\n \t\tIs it solved?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "WenyinWei", "commentT": "2019-09-16T15:42:41Z", "comment_text": "\n \t\tSolved.\n \t\t"}}}, "commit": {"commit_id": "5e153ee11bd8387a017f9919f2cc0f26644e7213", "commit_author": "Yixing Lao", "commitT": "2019-05-05 17:30:53-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\Open3D\\Geometry\\VoxelGrid.cpp", "file_new_name": "src\\Open3D\\Geometry\\VoxelGrid.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "86", "deleted_lines": "86", "method_info": {"method_name": "open3d::geometry::VoxelGrid::GetVoxel", "method_params": "point", "method_startline": "84", "method_endline": "87"}}}}}}}