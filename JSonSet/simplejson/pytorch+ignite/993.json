{"BR": {"BR_id": "993", "BR_author": "H4dr1en", "BRopenT": "2020-04-28T12:00:04Z", "BRcloseT": "2020-04-28T19:43:53Z", "BR_text": {"BRsummary": "Engine restarts training from scratch unexpected", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug description</denchmark-h>\n \n Engine _is_done function only takes into account max_epochs parameter read from the state of the object. This leads to the followling unexpected behavior:\n \n Instantiate a simple engine, train for 2 epochs (set max_epochs=2). Save checkpoints.\n Train for 2 more epochs (set max_epochs=4) using last checkpoint.\n This leads to the training restarting from scratch instead of continuing from the last checkpoint.\n \n Why?\n Engine.run functions has a  parameter that should have the precedence over the  stored in the checkpoint state in the <denchmark-link:https://github.com/pytorch/ignite/blob/master/ignite/engine/engine.py#L605>_is_done</denchmark-link>\n .\n Currently, at runtime, to check if the training is done, we consider  from the state of the checkpoint, not the  parameter from the user. Therefore if the user specifies a different value (in the case he wants to train for more epochs), his input is not taken into account.\n Here is a possible workaround to explain how to solve the problem:\n <denchmark-code>    @staticmethod\n     def _is_done(state, max_epochs=None):\n         return state.iteration == state.epoch_length * (state.max_epochs if max_epochs is None else max_epochs)\n </denchmark-code>\n \n <denchmark-h:h2>Environment</denchmark-h>\n \n \n PyTorch Version (e.g., 1.4): 1.4.0\n Ignite Version (e.g., 0.3.0): 0.3.0\n OS (e.g., Linux): macOS\n How you installed Ignite (conda, pip, source): pip\n Python version: 3.6.10\n Any other relevant information:\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "H4dr1en", "commentT": "2020-04-28T12:57:48Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/H4dr1en>@H4dr1en</denchmark-link>\n  thanks for the report and a nice catch !\n I could reproduce the problem:\n import torch\n import ignite\n print(ignite.__version__)\n from ignite.engine import Engine, Events\n from ignite.utils import setup_logger\n \n \n torch.manual_seed(12)\n \n \n def train_step(trainer, batch):\n     s = trainer.state\n     print(\n         \"{}/{} : {} - {:.3f}\".format(s.epoch, s.max_epochs, s.iteration, batch)\n     )\n \n trainer = Engine(train_step)\n trainer.logger = setup_logger()\n \n saved_states = []\n \n # This emulates Checkpoint to save trainer and others\n @trainer.on(Events.COMPLETED)\n def save_state():\n     saved_states.append(trainer.state_dict())\n \n \n data = [0, 1, 2]\n \n trainer.run(data, max_epochs=2)\n print(saved_states)\n \n # This is a workaround\n # saved_states[0]['max_epochs'] = 4  \n trainer.load_state_dict(saved_states[0])\n trainer.run(data, max_epochs=4);\n output\n <denchmark-code>2020-04-28 12:58:11,001 root INFO: Engine run starting with max_epochs=2.\n 2020-04-28 12:58:11,003 root INFO: Epoch[1] Complete. Time taken: 00:00:00\n 2020-04-28 12:58:11,006 root INFO: Epoch[2] Complete. Time taken: 00:00:00\n 2020-04-28 12:58:11,006 root INFO: Engine run complete. Time taken 00:00:00\n 2020-04-28 12:58:11,008 root INFO: Engine run starting with max_epochs=4.\n 2020-04-28 12:58:11,011 root INFO: Epoch[1] Complete. Time taken: 00:00:00\n 2020-04-28 12:58:11,013 root INFO: Epoch[2] Complete. Time taken: 00:00:00\n 2020-04-28 12:58:11,016 root INFO: Epoch[3] Complete. Time taken: 00:00:00\n 2020-04-28 12:58:11,018 root INFO: Epoch[4] Complete. Time taken: 00:00:00\n 2020-04-28 12:58:11,018 root INFO: Engine run complete. Time taken 00:00:00\n 0.4.0.dev20200427\n ...\n </denchmark-code>\n \n Yes, this looks like a bug. As you said, if run's input params override defined state, it should taken into account before checking _is_done.\n A workaround to that can be done is commented in the code\n <denchmark-code>saved_states[0]['max_epochs'] = 4  \n trainer.load_state_dict(saved_states[0])\n trainer.run(data, max_epochs=4);\n > \n 2020-04-28 13:05:02,712 root INFO: Engine run starting with max_epochs=2.\n 2020-04-28 13:05:02,715 root INFO: Epoch[1] Complete. Time taken: 00:00:00\n 2020-04-28 13:05:02,717 root INFO: Epoch[2] Complete. Time taken: 00:00:00\n 2020-04-28 13:05:02,718 root INFO: Engine run complete. Time taken 00:00:00\n 2020-04-28 13:05:02,720 root INFO: Engine run resuming from iteration 6, epoch 2 until 4 epochs\n 2020-04-28 13:05:02,722 root INFO: Epoch[3] Complete. Time taken: 00:00:00\n 2020-04-28 13:05:02,725 root INFO: Epoch[4] Complete. Time taken: 00:00:00\n 2020-04-28 13:05:02,725 root INFO: Engine run complete. Time taken 00:00:00\n 0.4.0.dev20200427\n 1/2 : 1 - 0.000\n 1/2 : 2 - 1.000\n 1/2 : 3 - 2.000\n 2/2 : 4 - 0.000\n 2/2 : 5 - 1.000\n 2/2 : 6 - 2.000\n [OrderedDict([('seed', 662124363), ('epoch_length', 3), ('max_epochs', 2), ('iteration', 6)])]\n 3/4 : 7 - 0.000\n 3/4 : 8 - 1.000\n 3/4 : 9 - 2.000\n 4/4 : 10 - 0.000\n 4/4 : 11 - 1.000\n 4/4 : 12 - 2.000\n \n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "H4dr1en", "commentT": "2020-04-28T19:45:48Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/H4dr1en>@H4dr1en</denchmark-link>\n  this bug is fixed in the master and in nightly release since. Let me know if it works for you. Thanks again catching that !\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "H4dr1en", "commentT": "2020-04-29T13:36:47Z", "comment_text": "\n \t\tWorks like a charm <denchmark-link:https://github.com/vfdev-5>@vfdev-5</denchmark-link>\n , thanks for the quick fix!\n \t\t"}}}, "commit": {"commit_id": "e30b9fcb9518ffe5b4b9ea790f9080a4749f9f23", "commit_author": "vfdev", "commitT": "2020-04-28 21:43:52+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "ignite\\engine\\engine.py", "file_new_name": "ignite\\engine\\engine.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "555,556,560,586,587,602,603,604,605,606,607,608,609,610,611,612,613,614,615", "deleted_lines": "555,559,585,586,587,588,589,590,591,592,593,594,595,596,597,598"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\ignite\\engine\\test_engine_state_dict.py", "file_new_name": "tests\\ignite\\engine\\test_engine_state_dict.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "164,165", "deleted_lines": null, "method_info": {"method_name": "test_continue_training.assert_continue_training", "method_params": "", "method_startline": "164", "method_endline": "165"}}, "hunk_1": {"Ismethod": 1, "added_lines": "153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170", "deleted_lines": null, "method_info": {"method_name": "test_continue_training", "method_params": "", "method_startline": "153", "method_endline": "170"}}}}}}}