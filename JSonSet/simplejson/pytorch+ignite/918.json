{"BR": {"BR_id": "918", "BR_author": "vfdev-5", "BRopenT": "2020-04-14T10:00:06Z", "BRcloseT": "2020-04-14T13:57:19Z", "BR_text": {"BRsummary": "Handler without engine raises error on filtered events", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug description</denchmark-h>\n \n The following code does not work:\n import torch\n print(torch.__version__)\n import ignite\n print(ignite.__version__)\n \n from ignite.engine import Engine, Events, State\n \n def f4():\n     print(\"f4\")\n \n     \n e = Engine(lambda e, b: None)\n e.state = State(iteration=0, epoch=0, max_epochs=10)\n \n e.add_event_handler(Events.ITERATION_COMPLETED(every=2), f4)\n e.fire_event(Events.ITERATION_COMPLETED)\n e.fire_event(Events.ITERATION_COMPLETED)\n Output\n <denchmark-code>\n TypeErrorTraceback (most recent call last)\n <ipython-input-13-832efed482dd> in <module>\n      14 \n      15 e.add_event_handler(Events.ITERATION_COMPLETED(every=2), f4)\n ---> 16 e.fire_event(Events.ITERATION_COMPLETED)\n      17 e.fire_event(Events.ITERATION_COMPLETED)\n \n /opt/conda/lib/python3.7/site-packages/ignite/engine/engine.py in fire_event(self, event_name)\n     414 \n     415         \"\"\"\n --> 416         return self._fire_event(event_name)\n     417 \n     418     def terminate(self) -> None:\n \n /opt/conda/lib/python3.7/site-packages/ignite/engine/engine.py in _fire_event(self, event_name, *event_args, **event_kwargs)\n     391                 kwargs.update(event_kwargs)\n     392                 first, others = ((args[0],), args[1:]) if (args and args[0] == self) else ((), args)\n --> 393                 func(*first, *(event_args + others), **kwargs)\n     394 \n     395     def fire_event(self, event_name: Any) -> None:\n \n /opt/conda/lib/python3.7/site-packages/ignite/engine/engine.py in wrapper(engine, *args, **kwargs)\n     203             event = engine.state.get_event_attrib_value(event_name)\n     204             if event_filter(engine, event):\n --> 205                 return handler(engine, *args, **kwargs)\n     206 \n     207         # setup input handler as parent to make has_event_handler work\n \n TypeError: f4() takes 0 positional arguments but 1 was given\n </denchmark-code>\n \n <denchmark-h:h2>Environment</denchmark-h>\n \n \n PyTorch Version (e.g., 1.4): 1.6.0.dev20200411+cu101\n Ignite Version (e.g., 0.3.0): 0.4.0.dev20200412\n \n <denchmark-link:https://github.com/sdesrozis>@sdesrozis</denchmark-link>\n  could you please take a look. Thanks !\n \t"}, "comments": {}}, "commit": {"commit_id": "10fd6022ef88f7bcff970775e9eb0920720d4d85", "commit_author": "Sylvain Desroziers", "commitT": "2020-04-14 15:57:18+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "ignite\\engine\\engine.py", "file_new_name": "ignite\\engine\\engine.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "267", "deleted_lines": "264", "method_info": {"method_name": "add_event_handler", "method_params": "self,Any,Callable,args,kwargs", "method_startline": "214", "method_endline": "282"}}, "hunk_1": {"Ismethod": 1, "added_lines": "205,206,207,208", "deleted_lines": "205", "method_info": {"method_name": "_handler_wrapper.wrapper", "method_params": "args,kwargs", "method_startline": "205", "method_endline": "208"}}, "hunk_2": {"Ismethod": 1, "added_lines": "202,203,204,205", "deleted_lines": "202,203,204,205", "method_info": {"method_name": "_handler_wrapper.wrapper", "method_params": "Engine,args,kwargs", "method_startline": "202", "method_endline": "205"}}, "hunk_3": {"Ismethod": 1, "added_lines": "201,202,203,204,205,206,207,208", "deleted_lines": "201,202,203,204,205", "method_info": {"method_name": "_handler_wrapper", "method_params": "Callable,Any,Callable", "method_startline": "201", "method_endline": "209"}}, "hunk_4": {"Ismethod": 1, "added_lines": "201,202,203,204,205,206,207,208", "deleted_lines": "201,202,203,204,205", "method_info": {"method_name": "_handler_wrapper", "method_params": "self,Callable,Any,Callable", "method_startline": "201", "method_endline": "212"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "tests\\ignite\\engine\\test_custom_events.py", "file_new_name": "tests\\ignite\\engine\\test_custom_events.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "233,234,235", "deleted_lines": null, "method_info": {"method_name": "_test_every_event_filter_with_engine._test_every_event_filter_with_engine._test.assert_every_no_engine", "method_params": "", "method_startline": "233", "method_endline": "235"}}, "hunk_1": {"Ismethod": 1, "added_lines": "232,233,234,235,236,242,243,244,245", "deleted_lines": null, "method_info": {"method_name": "_test_every_event_filter_with_engine", "method_params": "device", "method_startline": "207", "method_endline": "253"}}, "hunk_2": {"Ismethod": 1, "added_lines": "232,233,234,235,236,242,243,244,245", "deleted_lines": null, "method_info": {"method_name": "_test_every_event_filter_with_engine._test", "method_params": "event_name,event_attr,every,true_num_calls", "method_startline": "211", "method_endline": "248"}}, "hunk_3": {"Ismethod": 1, "added_lines": "243,244", "deleted_lines": null, "method_info": {"method_name": "_test_every_event_filter_with_engine._test_every_event_filter_with_engine._test.assert_no_engine", "method_params": "", "method_startline": "243", "method_endline": "244"}}}}}}}