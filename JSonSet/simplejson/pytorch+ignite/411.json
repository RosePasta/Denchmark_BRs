{"BR": {"BR_id": "411", "BR_author": "vfdev-5", "BRopenT": "2019-01-23T22:12:29Z", "BRcloseT": "2019-01-24T17:59:28Z", "BR_text": {"BRsummary": "Bug in multiclass case with Precision and Recall", "BRdescription": "\n In case when y_pred contains less classes then y_true, we should raise ValueError:\n pr = Precision()\n y_pred = torch.randint(0, 2, size=(10, 4)).float()\n y = torch.randint(0, 5, size=(10, )).long()\n pr.update((y_pred, y))\n Actually, above code raises an error in to_onehot:\n <denchmark-code>indices = tensor([2, 2, 3, 4, 1, 4, 1, 3, 3, 0]), num_classes = 4\n \n     def to_onehot(indices, num_classes):\n         \"\"\"Convert a tensor of indices to a tensor of one-hot indicators.\"\"\"\n         onehot = torch.zeros(indices.size(0), num_classes, device=indices.device)\n >       return onehot.scatter_(1, indices.unsqueeze(1), 1)\n E       RuntimeError: Invalid index in scatter at /Users/administrator/nightlies/pytorch-1.0.0/wheel_build_dirs/wheel_3.7/pytorch/aten/src/TH/generic/THTensorEvenMoreMath.cpp:546\n </denchmark-code>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "96c9e6d25bc5c4441043ebdfc1c73575a6fad8a6", "commit_author": "Anmol Joshi", "commitT": "2019-01-24 18:59:27+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "ignite\\metrics\\precision.py", "file_new_name": "ignite\\metrics\\precision.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "93,94,95", "deleted_lines": null, "method_info": {"method_name": "update", "method_params": "self,output", "method_startline": "84", "method_endline": "122"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "ignite\\metrics\\recall.py", "file_new_name": "ignite\\metrics\\recall.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "68,69,70", "deleted_lines": null, "method_info": {"method_name": "update", "method_params": "self,output", "method_startline": "59", "method_endline": "98"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\ignite\\metrics\\test_precision.py", "file_new_name": "tests\\ignite\\metrics\\test_precision.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "648,649,650,651,652,653,654,655,656,657,658,659,660", "deleted_lines": null, "method_info": {"method_name": "test_incorrect_y_classes", "method_params": "", "method_startline": "648", "method_endline": "660"}}, "hunk_1": {"Ismethod": 1, "added_lines": "650,651,652,653,654,655,656,657", "deleted_lines": null, "method_info": {"method_name": "test_incorrect_y_classes._test", "method_params": "average", "method_startline": "650", "method_endline": "657"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\ignite\\metrics\\test_recall.py", "file_new_name": "tests\\ignite\\metrics\\test_recall.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "648,649,650,651,652,653,654,655,656,657,658,659,660", "deleted_lines": null, "method_info": {"method_name": "test_incorrect_y_classes", "method_params": "", "method_startline": "648", "method_endline": "660"}}, "hunk_1": {"Ismethod": 1, "added_lines": "650,651,652,653,654,655,656,657", "deleted_lines": null, "method_info": {"method_name": "test_incorrect_y_classes._test", "method_params": "average", "method_startline": "650", "method_endline": "657"}}}}}}}