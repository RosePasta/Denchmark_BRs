{"BR": {"BR_id": "255", "BR_author": "groadabike", "BRopenT": "2020-09-14T15:12:49Z", "BRcloseT": "2020-09-25T10:51:33Z", "BR_text": {"BRsummary": "Pretrained models don't work correctly on Asteroid 0.3.3", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n It seems pre-trained models saved on different Asteroid versions are incompatible.\n If using Asteroid 0.3.3, I perform some source separations using the pre-trained models from Zenodo (trained using Asteroid < 0.3.3), the estimated sources show an artefact in specific frequencies. However, The same source separation using previous Asteroid version, e.g., Asteroid 0.3.0, no artefact is present in the estimations.\n Note that I was able to \"fix\" this problem in my case by:\n 1- Trained a model in an HPC cluster using Asteroid 0.3.0.\n 2. Copy the best checkpoint to my local computer where I have Asteroid 0.3.3.\n 3. In my local, save the checkpoint as  best_model.pth\n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n \n This <denchmark-link:https://colab.research.google.com/drive/1Z5Mlv-5VBzF5qzjVWVoKNBDYjxMCjtWH?usp=sharing>colab</denchmark-link>\n  has an example of estimating sources using Asteroid=0.3.0 and Cosentino/ConvTasNet_LibriMix_sep_clean\n Image of estimated source (1)\n <denchmark-link:https://user-images.githubusercontent.com/17277802/93101150-d613a280-f6a1-11ea-8ab0-2b2051253545.png></denchmark-link>\n \n \n This <denchmark-link:https://colab.research.google.com/drive/1ZqXQZHfr0ekuYw_uspUy4lK74wZY8G9G?usp=sharing>colab</denchmark-link>\n , is similar than the previous, the only difference is now we are using Asteroid=0.3.3\n Image of estimated source (1)\n <denchmark-link:https://user-images.githubusercontent.com/17277802/93101264-f80d2500-f6a1-11ea-946e-45782428fc6a.png></denchmark-link>\n \n Note that in the second image, there is an apparent artefact at 3000 Hz.\n In the colab, you can hear this artefact.\n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n The pre-trained models should be agnostic to the Asteroid version, or they should indicate under which version we know it works correctly.\n <denchmark-h:h3>Environment</denchmark-h>\n \n \n Asteroid Version or commit tag\n PyTorch Version\n PyTorchLightning Version\n Additional info\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "groadabike", "commentT": "2020-09-15T07:29:21Z", "comment_text": "\n \t\tThanks a lot for looking into this !\n I need to take time to figure this out (is it the separator or the encoder/decoder for example)\n \n Note that I was able to \"fix\" this problem in my case by:\n \n Trained a model in an HPC cluster using Asteroid 0.3.0.\n Copy the best checkpoint to my local computer where I have Asteroid 0.3.3.\n In my local, save the checkpoint as best_model.pth\n \n \n I don't see how this solves the problem..\n In 2, you copy the file directly, and then in 3, you load and re-save in Asteroid 0.3.3?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "groadabike", "commentT": "2020-09-15T08:11:27Z", "comment_text": "\n \t\t\n I don't see how this solves the problem..\n \n Sorry, I didn't mean that it is a solution. This is why I say \"fix\" in quotes. It was a hacky way to solve my immediate problem.\n \n In 2, you copy the file directly, and then in 3, you load and re-save in Asteroid 0.3.3?\n \n That is exactly what I did. I just mentioned it because it could add some info.\n For example, it seems the problem raises after serializing the model.\n I am just guessing at this point.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "groadabike", "commentT": "2020-09-25T09:37:23Z", "comment_text": "\n \t\tThanks again for raising this issue. I'll take time to look into it now.\n I didn't mean that it doesn't solve the problem, but I also don't understand how this fixes it (as a hack). Anyway, I'll try it out and see what's the problem hopefully.\n By the way, have you tried with other models?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "groadabike", "commentT": "2020-09-25T09:46:56Z", "comment_text": "\n \t\tAlso, were you able to \"fix\" the problem with the pretrained model?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "groadabike", "commentT": "2020-09-25T10:08:14Z", "comment_text": "\n \t\tOk, I spotted the issue.\n The bug was introduced in <denchmark-link:https://github.com/asteroid-team/asteroid/pull/200>#200</denchmark-link>\n  because we added  as an argument, and it has  default in ConvTasNet however it was linear before.\n So, we'll have to change that, and finally, we should add consistency tests for pretrained models, this will be quite heavy..\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "groadabike", "commentT": "2020-09-25T10:18:57Z", "comment_text": "\n \t\tActually, I introduced it in <denchmark-link:https://github.com/asteroid-team/asteroid/pull/204>#204</denchmark-link>\n , my bad.\n \t\t"}}}, "commit": {"commit_id": "a201c8e6713df898b80af8db50ec718fa5c8672d", "commit_author": "Pariente Manuel", "commitT": "2020-09-25 12:51:33+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "asteroid\\models\\conv_tasnet.py", "file_new_name": "asteroid\\models\\conv_tasnet.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "62", "deleted_lines": "62", "method_info": {"method_name": "__init__", "method_params": "self,n_src,out_chan,n_blocks,n_repeats,bn_chan,hid_chan,skip_chan,conv_kernel_size,norm_type,mask_act,in_chan,fb_name,kernel_size,n_filters,stride,encoder_activation,fb_kwargs", "method_startline": "45", "method_endline": "63"}}, "hunk_1": {"Ismethod": 1, "added_lines": "62", "deleted_lines": "62", "method_info": {"method_name": "__init__", "method_params": "self,n_src,out_chan,n_blocks,n_repeats,bn_chan,hid_chan,skip_chan,conv_kernel_size,norm_type,mask_act,in_chan,fb_name,kernel_size,n_filters,stride,encoder_activation,fb_kwargs", "method_startline": "45", "method_endline": "63"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "asteroid\\models\\dprnn_tasnet.py", "file_new_name": "asteroid\\models\\dprnn_tasnet.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "71", "deleted_lines": "71", "method_info": {"method_name": "__init__", "method_params": "self,n_src,out_chan,bn_chan,hid_size,chunk_size,hop_size,n_repeats,norm_type,mask_act,bidirectional,rnn_type,num_layers,dropout,in_chan,fb_name,kernel_size,n_filters,stride,encoder_activation,fb_kwargs", "method_startline": "51", "method_endline": "72"}}, "hunk_1": {"Ismethod": 1, "added_lines": "71", "deleted_lines": "71", "method_info": {"method_name": "__init__", "method_params": "self,n_src,out_chan,bn_chan,hid_size,chunk_size,hop_size,n_repeats,norm_type,mask_act,bidirectional,rnn_type,num_layers,dropout,in_chan,fb_name,kernel_size,n_filters,stride,encoder_activation,fb_kwargs", "method_startline": "51", "method_endline": "72"}}}}}}}