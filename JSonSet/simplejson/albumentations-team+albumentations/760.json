{"BR": {"BR_id": "760", "BR_author": "gatordevin", "BRopenT": "2020-11-18T21:19:06Z", "BRcloseT": "2020-11-20T09:01:10Z", "BR_text": {"BRsummary": "CropNonEmptyMaskIfExists with multiple masks not working", "BRdescription": "\n Hi all,\n I ran into an interesting issue. I was originally using RandomCrop to crop my images for instance segmentation with mask rcnn but, I ran into problems where I had images that lacked any instances after cropping. I saw the CropNonEmptyMaskIfExists and it seems to do what I want, correct me if I am wrong but it crops the image and guarantees there will be a mask present. Well, I used this and it gave me this error.\n AssertionError: CropNonEmptyMaskIfExists requires ['mask']\n My current lien of code that runs the composed transform function is as follows.\n transformed = self.__transformations(image=np.array(image, dtype=np.uint8), masks=masks)\n Since I am doing instance segmentation I have multiple masks and have to use the masks parameter instead of a mask. I believe the CropNonEmptyMaskIfExists has a problem with this that won't allow it to run on more than one mask. Or I could be missing something. Please let me know.\n Here is my transform\n transformations = A.Compose([ A.CropNonEmptyMaskIfExists(height=2000, width=2000), A.HorizontalFlip(p=0.5), A.RandomBrightnessContrast(p=0.2), ])\n Thank you\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "gatordevin", "commentT": "2020-11-19T11:48:13Z", "comment_text": "\n \t\tThanks for information. We will try to resolve this problem us soon us possible.\n At this time you may try to concatenate your mask along last axis to create single mask with shape [Height, Width, NumMasks] and provide it with keyword mask\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "gatordevin", "commentT": "2020-11-20T09:01:10Z", "comment_text": "\n \t\tTry latest version from repository pip install git+https://github.com/albumentations-team/albumentations. I think we fixed this problem\n \t\t"}}}, "commit": {"commit_id": "b76e6d696677caea999c804417e047ba0e519e31", "commit_author": "Mikhail Druzhinin", "commitT": "2020-11-19 15:18:50+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "albumentations\\augmentations\\transforms.py", "file_new_name": "albumentations\\augmentations\\transforms.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "1120,1121", "method_info": {"method_name": "targets_as_params", "method_params": "self", "method_startline": "1120", "method_endline": "1121"}}, "hunk_1": {"Ismethod": 1, "added_lines": "1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152", "deleted_lines": "1123,1124,1142,1143,1144,1157", "method_info": {"method_name": "get_params_dependent_on_targets", "method_params": "self,params", "method_startline": "1123", "method_endline": "1157"}}, "hunk_2": {"Ismethod": 1, "added_lines": "1119,1137", "deleted_lines": "1119,1120,1121,1122,1123,1124", "method_info": {"method_name": "_preprocess_mask", "method_params": "self,mask", "method_startline": "1119", "method_endline": "1137"}}, "hunk_3": {"Ismethod": 1, "added_lines": "1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1160,1161,1162,1167,1168", "deleted_lines": "1142,1143,1144,1157", "method_info": {"method_name": "update_params", "method_params": "self,params,kwargs", "method_startline": "1139", "method_endline": "1168"}}}}}}}