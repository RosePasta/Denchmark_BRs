{"BR": {"BR_id": "1036", "BR_author": "BarclayII", "BRopenT": "2019-11-22T10:05:17Z", "BRcloseT": "2019-11-29T03:53:30Z", "BR_text": {"BRsummary": "[Bug] Edges bucketed wrong in group_apply_edges after triggering `g.in_degrees()`", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n Apparently the edges being bucketed and sent into UDF of group_apply_edges\n See the following test case.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n import dgl\n import torch\n import scipy.sparse as ssp\n \n m = ssp.random(10, 10, 0.2)\n g = dgl.DGLGraph(m, readonly=True)\n g.ndata['deg'] = g.in_degrees()     # removing this line would pass the test\n g.ndata['id'] = torch.arange(g.number_of_nodes())\n g.edata['id'] = torch.arange(g.number_of_edges())\n \n # This function checks whether the edge IDs in the bucket indeed match those of the\n # inbound edges\n def apply(edges):\n     w = edges.data['id']\n     n_nodes, deg = w.shape\n \n     dst = edges.dst['id'][:, 0]\n     eid1 = g.in_edges(dst, 'eid').view(n_nodes, deg).sort(1)[0]\n     eid2 = edges.data['id'].sort(1)[0]\n     print(dst)\n     print(eid1)\n     print(eid2)\n     assert torch.equal(eid1, eid2)\n     return {'id2': w}\n \n print(g.all_edges(order='eid'))\n g.group_apply_edges('dst', apply, inplace=True)\n <denchmark-h:h2>Expected behavior</denchmark-h>\n \n The test above should pass.\n <denchmark-h:h2>Environment</denchmark-h>\n \n \n DGL Version (e.g., 1.0): master\n Backend Library & Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3):\n OS (e.g., Linux):\n How you installed DGL (conda, pip, source):\n Build command you used (if compiling from source):\n Python version:\n CUDA/cuDNN version (if applicable):\n GPU models and configuration (e.g. V100):\n Any other relevant information:\n \n <denchmark-h:h2>Additional context</denchmark-h>\n \n In <denchmark-link:https://github.com/dmlc/dgl/blob/master/python/dgl/graph.py#L2211>https://github.com/dmlc/dgl/blob/master/python/dgl/graph.py#L2211</denchmark-link>\n , adding  to the  call would solve the problem.  But could anybody explain why this happens only if  is there (before I figure it out myself)?\n send() and those in heterographs may also have the same problem.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "BarclayII", "commentT": "2019-11-22T15:06:22Z", "comment_text": "\n \t\tI also curious about why in_degrees() cause the problem.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "BarclayII", "commentT": "2019-11-25T14:43:28Z", "comment_text": "\n \t\tMaybe we should force g.edges() to return edges in the eid orders\n \t\t"}}}, "commit": {"commit_id": "365d361725fb83e4d17f29f22b9704717cbb375c", "commit_author": "Quan (Andy) Gan", "commitT": "2019-11-29 11:53:29+08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\dgl\\graph.py", "file_new_name": "python\\dgl\\graph.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2211", "deleted_lines": "2211", "method_info": {"method_name": "group_apply_edges", "method_params": "self,group_by,func,edges,inplace", "method_startline": "2150", "method_endline": "2229"}}, "hunk_1": {"Ismethod": 1, "added_lines": "2273", "deleted_lines": "2273", "method_info": {"method_name": "send", "method_params": "self,edges,message_func", "method_startline": "2232", "method_endline": "2291"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\dgl\\heterograph.py", "file_new_name": "python\\dgl\\heterograph.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2471", "deleted_lines": "2471", "method_info": {"method_name": "send", "method_params": "self,edges,message_func,etype", "method_startline": "2406", "method_endline": "2491"}}, "hunk_1": {"Ismethod": 1, "added_lines": "2386", "deleted_lines": "2386", "method_info": {"method_name": "group_apply_edges", "method_params": "self,group_by,func,edges,etype,inplace", "method_startline": "2340", "method_endline": "2404"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\compute\\test_basics.py", "file_new_name": "tests\\compute\\test_basics.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678", "deleted_lines": null, "method_info": {"method_name": "test_group_apply_edges2", "method_params": "", "method_startline": "661", "method_endline": "678"}}, "hunk_1": {"Ismethod": 1, "added_lines": "668,669,670,671,672,673,674,675,676", "deleted_lines": null, "method_info": {"method_name": "test_group_apply_edges2.apply", "method_params": "edges", "method_startline": "668", "method_endline": "676"}}}}}}}