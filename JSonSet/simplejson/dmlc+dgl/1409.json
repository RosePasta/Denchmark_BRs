{"BR": {"BR_id": "1409", "BR_author": "BarclayII", "BRopenT": "2020-04-01T14:28:45Z", "BRcloseT": "2020-04-03T12:45:57Z", "BR_text": {"BRsummary": "[BUG][Regression] VertexSubgraph on hypersparse graphs crashes", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n See the code below.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n In [22]: g = dgl.graph([(0, 1), (1, 2)], num_nodes=2000000)\n \n In [23]: g.subgraph({g.ntypes[0]: [1, 3, 5]})\n ---------------------------------------------------------------------------\n DGLError                                  Traceback (most recent call last)\n <ipython-input-23-3fd9d91df08e> in <module>\n ----> 1 g.subgraph({g.ntypes[0]: [1, 3, 5]})\n \n ~\\Miniconda3\\lib\\site-packages\\dgl\\heterograph.py in subgraph(self, nodes)\n    1890         \"\"\"\n    1891         induced_nodes = [utils.toindex(nodes.get(ntype, [])) for ntype in self.ntypes]\n -> 1892         sgi = self._graph.node_subgraph(induced_nodes)\n    1893         induced_edges = sgi.induced_edges\n    1894\n \n ~\\Miniconda3\\lib\\site-packages\\dgl\\heterograph_index.py in node_subgraph(self, induced_nodes)\n     844         \"\"\"\n     845         vids = [nodes.todgltensor() for nodes in induced_nodes]\n --> 846         return _CAPI_DGLHeteroVertexSubgraph(self, vids)\n     847\n     848     def edge_subgraph(self, induced_edges, preserve_nodes):\n \n ~\\Miniconda3\\lib\\site-packages\\dgl\\_ffi\\_ctypes\\function.py in __call__(self, *args)\n     188         check_call(_LIB.DGLFuncCall(\n     189             self.handle, values, tcodes, ctypes.c_int(num_args),\n --> 190             ctypes.byref(ret_val), ctypes.byref(ret_tcode)))\n     191         _ = temp_args\n     192         _ = args\n \n ~\\Miniconda3\\lib\\site-packages\\dgl\\_ffi\\base.py in check_call(ret)\n      60     \"\"\"\n      61     if ret != 0:\n ---> 62         raise DGLError(py_str(_LIB.DGLGetLastError()))\n      63\n      64\n \n DGLError: [22:27:56] C:\\Users\\Administrator\\dgl\\src\\graph\\unit_graph.cc:1140: Check failed: GetAny(): At least one graph structure should exist.\n <denchmark-h:h2>Expected behavior</denchmark-h>\n \n Shouldn't crash.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "BarclayII", "commentT": "2020-04-02T05:07:58Z", "comment_text": "\n \t\tSimilarly if we restrict the format of graph storage to CSC the result is also incorrect:\n g = dgl.graph([(0, 1), (1, 2)], restrict_format='csc')\n g.subgraph({g.ntypes[0]: [0, 1]}).edges(order='eid')  # returns (1, 0)\n \t\t"}}}, "commit": {"commit_id": "24dc71fc9559786c151db3456303b0d38e020031", "commit_author": "Quan (Andy) Gan", "commitT": "2020-04-03 20:45:56+08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\graph\\unit_graph.cc", "file_new_name": "src\\graph\\unit_graph.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022", "deleted_lines": "1002,1004,1014,1016", "method_info": {"method_name": "dgl::UnitGraph::VertexSubgraph", "method_params": "vids", "method_startline": "998", "method_endline": "1026"}}, "hunk_1": {"Ismethod": 1, "added_lines": "1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052", "deleted_lines": null, "method_info": {"method_name": "dgl::UnitGraph::EdgeSubgraph", "method_params": "eids,preserve_nodes", "method_startline": "1028", "method_endline": "1056"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\compute\\test_heterograph.py", "file_new_name": "tests\\compute\\test_heterograph.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "943,944,945,946,947,948,949,950,951,952,953", "deleted_lines": null, "method_info": {"method_name": "test_subgraph", "method_params": "", "method_startline": "877", "method_endline": "953"}}}}}}}