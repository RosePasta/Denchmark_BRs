{"BR": {"BR_id": "538", "BR_author": "zegzag", "BRopenT": "2019-05-16T06:01:12Z", "BRcloseT": "2019-06-02T03:34:33Z", "BR_text": {"BRsummary": "If DGL can support Numpy ecology ?", "BRdescription": "\n <denchmark-h:h2>\ud83d\ude80 Feature</denchmark-h>\n \n <denchmark-h:h2>Feature</denchmark-h>\n \n We know that in data science field, python ecology of Numpy, Scipy,  Scikit-Learn is a rounded system. Much data in the rounded system is stored in numpy format or can be operated by Numpy easily. Pytorch paradigm is similar to Numpy, the people who are familiar to Numpy can transform easily to Pytorch. And DGL is derived from Pytorch. For the above reason, I wonder if DGL can support the Numpy ecology.\n <denchmark-h:h2>Motivation</denchmark-h>\n \n For example, I got the graph adjacent matrix stored in the , say . Many attributes I got from it are numpy format,such as  which is  and etc. If I want use this to configure my  , I have to transform them to .\n In the most common case, if I want draw some point values, say maxvalue by . Many of these values are in  format, such as  etc. And if I use these point values to configure my graph, it will call errors.\n Example shown as below:\n <denchmark-link:https://user-images.githubusercontent.com/16755162/57829468-a3257a00-77e1-11e9-80cb-6ee649f822f1.png></denchmark-link>\n \n <denchmark-link:https://user-images.githubusercontent.com/16755162/57829470-a6206a80-77e1-11e9-8880-beafe17f853f.png></denchmark-link>\n \n <denchmark-h:h2>Pitch</denchmark-h>\n \n DGL is a quite outperforming and convenient library for Graph Learning. And I think if features and functions in DGL support Numpy format,  things will be much straightforward and intuitive. Thx : )\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "zegzag", "commentT": "2019-05-16T10:01:53Z", "comment_text": "\n \t\tThe error here is saying the type of nmax should be int/long instead of float, we may need to improve the error message here.\n And dgl currently supports constructing graph from a sparse matrix, by using g=DGLGraph(coo_matrix).\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "zegzag", "commentT": "2019-05-18T01:13:45Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/zegzag>@zegzag</denchmark-link>\n , thanks for the report. I think the problem here is that  is actually a different type than python's native int. Therefore, when passing it to our own CAPIs, we should convert it to python native int.\n More specifically,\n \n \n \n dgl/python/dgl/graph_index.py\n \n \n          Line 81\n       in\n       d533e9b\n \n \n \n \n \n \n  _CAPI_DGLGraphAddVertices(self._handle, num) \n \n \n \n \n \n Should be:\n _CAPI_DGLGraphAddVertices(self._handle, int(num))\n We should go through all such cases and fix them so numpy integer types could be supported.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "zegzag", "commentT": "2019-05-18T03:47:53Z", "comment_text": "\n \t\tI think the larger issue here is to zoom beyond particular errors and\n support Numpy as the first citizen. This is consistent to our thinking in\n the long run and in fact another team is planning work on this. If you like\n to contribute I think that will be very exciting.\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n -zz\n On Sat, May 18, 2019 at 9:13 AM Minjie Wang ***@***.***> wrote:\n  Hi @zegzag\n  <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_zegzag&d=DwMCaQ&c=slrrB7dE8n7gBJbeO0g-IQ&r=hT00ArSCDPGICoAESiAkOQ&m=1lCgAMK9_4nvCAlHYHzrB6Ftul1WHWlheLUd-rX0TM0&s=KZu4kiDPQ7m-vqJGZaDMo1JwuDfql9PiZx1xukzWSjM&e=>,\n  thanks for the report. I think the problem here is that numpy.int is\n  actually a different type than python's native int. Therefore, when passing\n  it to our own CAPIs, we should convert it to python native int.\n \n  More specifically,\n \n  https://github.com/dmlc/dgl/blob/d533e9ba62ebc5ed45ab2723c8a2c9f5598a9727/python/dgl/graph_index.py#L81\n  <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_dmlc_dgl_blob_d533e9ba62ebc5ed45ab2723c8a2c9f5598a9727_python_dgl_graph-5Findex.py-23L81&d=DwMCaQ&c=slrrB7dE8n7gBJbeO0g-IQ&r=hT00ArSCDPGICoAESiAkOQ&m=1lCgAMK9_4nvCAlHYHzrB6Ftul1WHWlheLUd-rX0TM0&s=06Rn2xLQDy23kz0oAKjwSlH9ckXr5yqRYl7dTfA0SEo&e=>\n  Should be:\n \n  _CAPI_DGLGraphAddVertices(self._handle, int(num))\n \n  We should go through all such cases and fix them so numpy integer types\n  could be supported.\n \n  \u2014\n  You are receiving this because you are subscribed to this thread.\n  Reply to this email directly, view it on GitHub\n  <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_dmlc_dgl_issues_538-3Femail-5Fsource-3Dnotifications-26email-5Ftoken-3DACBJKUK32GSHQTFW7MDS7CTPV5J4ZA5CNFSM4HNJGNYKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODVWE3WI-23issuecomment-2D493637081&d=DwMCaQ&c=slrrB7dE8n7gBJbeO0g-IQ&r=hT00ArSCDPGICoAESiAkOQ&m=1lCgAMK9_4nvCAlHYHzrB6Ftul1WHWlheLUd-rX0TM0&s=lMNohtm9Hjsf8CALVorlh0_pIG57X36cZPqzx-NRUzU&e=>,\n  or mute the thread\n  <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACBJKUKCMA3LG7PVLYHPC73PV5J4ZANCNFSM4HNJGNYA&d=DwMCaQ&c=slrrB7dE8n7gBJbeO0g-IQ&r=hT00ArSCDPGICoAESiAkOQ&m=1lCgAMK9_4nvCAlHYHzrB6Ftul1WHWlheLUd-rX0TM0&s=9UxQtRT3loyryAJdBhhphmjEapwpy0NJBUkcR95rLQ8&e=>\n  .\n \n \n -- \n \n *Zheng Zhang <https://shanghai.nyu.edu/academics/faculty/zheng-zhang> \u5f20\u5ce5*\n \n Professor of Computer Science, NYU  Shanghai \u4e0a\u6d77\u7ebd\u7ea6\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u6559\u6388\n \n \n Room 1118, 1555 Century Avenue\n \n Pudong New District, Shanghai 200122, China\n \n \u4e2d\u56fd\u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u4e16\u7eaa\u5927\u90531555\u53f71118\u5ba4, 200122\n \n \n T Shanghai office \u4e0a\u6d77\u529e\u516c\u5ba4 +86 021 2059 5687\n T China mobile \u4e2d\u56fd\u624b\u673a +86 156 1808 6522\n E \u7535\u5b50\u90ae\u4ef6 zz@nyu.edu\n \n <jw5@nyu.edu>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "zegzag", "commentT": "2019-06-02T03:34:32Z", "comment_text": "\n \t\tShould be fixed in <denchmark-link:https://github.com/dmlc/dgl/pull/580>#580</denchmark-link>\n  .\n \t\t"}}}, "commit": {"commit_id": "21e172d0768a27d7289421dfab18d5237944c5be", "commit_author": "Minjie Wang", "commitT": "2019-05-29 21:48:36-04:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\dgl\\contrib\\sampling\\randomwalk.py", "file_new_name": "python\\dgl\\contrib\\sampling\\randomwalk.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "38,39", "deleted_lines": "38", "method_info": {"method_name": "random_walk", "method_params": "g,seeds,num_traces,num_hops", "method_startline": "12", "method_endline": "40"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\dgl\\contrib\\sampling\\sampler.py", "file_new_name": "python\\dgl\\contrib\\sampling\\sampler.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "133,303,304,306,368", "deleted_lines": "133,134,304,305,307,369"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "python\\dgl\\graph_index.py", "file_new_name": "python\\dgl\\graph_index.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "276,277", "deleted_lines": "275", "method_info": {"method_name": "successors", "method_params": "self,v,radius", "method_startline": "261", "method_endline": "277"}}, "hunk_1": {"Ismethod": 1, "added_lines": "189", "deleted_lines": "189", "method_info": {"method_name": "has_node", "method_params": "self,vid", "method_startline": "176", "method_endline": "189"}}, "hunk_2": {"Ismethod": 1, "added_lines": "369", "deleted_lines": "367", "method_info": {"method_name": "in_edges", "method_params": "self,v", "method_startline": "351", "method_endline": "376"}}, "hunk_3": {"Ismethod": 1, "added_lines": "396", "deleted_lines": "394", "method_info": {"method_name": "out_edges", "method_params": "self,v", "method_startline": "378", "method_endline": "403"}}, "hunk_4": {"Ismethod": 1, "added_lines": "258,259", "deleted_lines": "258", "method_info": {"method_name": "predecessors", "method_params": "self,v,radius", "method_startline": "243", "method_endline": "259"}}, "hunk_5": {"Ismethod": 1, "added_lines": "79", "deleted_lines": "79", "method_info": {"method_name": "add_nodes", "method_params": "self,num", "method_startline": "71", "method_endline": "80"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\dgl\\network.py", "file_new_name": "python\\dgl\\network.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "116", "deleted_lines": "116", "method_info": {"method_name": "_receiver_wait", "method_params": "receiver,ip_addr,port,num_sender", "method_startline": "102", "method_endline": "116"}}, "hunk_1": {"Ismethod": 1, "added_lines": "73", "deleted_lines": "73", "method_info": {"method_name": "_send_nodeflow", "method_params": "sender,nodeflow,recv_id", "method_startline": "55", "method_endline": "78"}}, "hunk_2": {"Ismethod": 1, "added_lines": "90", "deleted_lines": "90", "method_info": {"method_name": "_send_end_signal", "method_params": "sender,recv_id", "method_startline": "80", "method_endline": "90"}}, "hunk_3": {"Ismethod": 1, "added_lines": "43", "deleted_lines": "43", "method_info": {"method_name": "_add_receiver_addr", "method_params": "sender,ip_addr,port,recv_id", "method_startline": "29", "method_endline": "43"}}}}}}}