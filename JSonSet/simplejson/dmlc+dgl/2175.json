{"BR": {"BR_id": "2175", "BR_author": "BarclayII", "BRopenT": "2020-09-11T03:23:39Z", "BRcloseT": "2020-09-11T06:16:53Z", "BR_text": {"BRsummary": "Messages not ordered by edge IDs in degree bucketing", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n See the following code.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n <denchmark-code>In [1]: import dgl\n Using backend: pytorch\n INFO:rdflib:RDFLib Version: 4.2.2\n \n In [3]: g = dgl.graph(([1, 3, 5, 0, 4, 2, 3, 3, 4, 5], [1, 1, 0, 0, 1, 2, 2, 0, 3, 3]))\n \n In [5]: def reducer(nodes):\n    ...:     print(nodes.mailbox['eid'])\n    ...:     return {'n': nodes.mailbox['eid'].sum(1)}\n    ...:\n \n In [6]: import torch\n \n In [7]: g.edata['eid'] = torch.arange(10)\n \n In [8]: g.update_all(dgl.function.copy_e('eid', 'eid'), reducer)\n tensor([[5, 6],\n         [8, 9]])\n tensor([[3, 7, 2],\n         [0, 1, 4]])\n </denchmark-code>\n \n In 0.4.3post2:\n <denchmark-code>In [1]: import dgl\n Using backend: pytorch\n \n In [2]: g = dgl.graph(([1, 3, 5, 0, 4, 2, 3, 3, 4, 5], [1, 1, 0, 0, 1, 2, 2, 0, 3, 3]))\n \n In [3]: def reducer(nodes):\n    ...:     print(nodes.mailbox['eid'])\n    ...:     return {'n': nodes.mailbox['eid'].sum(1)}\n \n In [8]: g.edata['eid'] = torch.arange(10).float()\n \n In [9]: g.update_all(dgl.function.copy_e('eid', 'eid'), reducer)\n tensor([[2., 3., 7.],\n         [0., 1., 4.]])\n tensor([[8., 9.],\n         [5., 6.]])\n </denchmark-code>\n \n This inconsistency will break TreeLSTM.\n <denchmark-h:h2>Expected behavior</denchmark-h>\n \n Should be consistent as 0.4.3.\n <denchmark-h:h2>Environment</denchmark-h>\n \n \n DGL Version (e.g., 1.0): 0.5.1\n Backend Library & Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3):\n OS (e.g., Linux):\n How you installed DGL (conda, pip, source):\n Build command you used (if compiling from source):\n Python version:\n CUDA/cuDNN version (if applicable):\n GPU models and configuration (e.g. V100):\n Any other relevant information:\n \n \t"}, "comments": {}}, "commit": {"commit_id": "8f4594074be2b2f8c868f311f24a030806a3deb5", "commit_author": "Quan (Andy) Gan", "commitT": "2020-09-11 14:16:52+08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\dgl\\core.py", "file_new_name": "python\\dgl\\core.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "125,126,127,129,130,131", "deleted_lines": "124", "method_info": {"method_name": "invoke_udf_reduce", "method_params": "graph,func,msgdata,orig_nid", "method_startline": "84", "method_endline": "155"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\compute\\test_basics.py", "file_new_name": "tests\\compute\\test_basics.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "649,650,651,652,653,654,655,656,657,658,659", "deleted_lines": null, "method_info": {"method_name": "test_degree_bucket_edge_ordering", "method_params": "idtype", "method_startline": "649", "method_endline": "659"}}, "hunk_1": {"Ismethod": 1, "added_lines": "655,656,657,658", "deleted_lines": null, "method_info": {"method_name": "test_degree_bucket_edge_ordering.reducer", "method_params": "nodes", "method_startline": "655", "method_endline": "658"}}}}}}}