{"BR": {"BR_id": "127", "BR_author": "AndyShih12", "BRopenT": "2020-07-28T08:19:01Z", "BRcloseT": "2020-07-29T19:19:42Z", "BR_text": {"BRsummary": "Entropy log-prob estimation", "BRdescription": "\n I think this line should be negated, since entropy_loss should store the negated entropy.\n \n \n \n stable-baselines3/stable_baselines3/ppo/ppo.py\n \n \n          Line 201\n       in\n       bd2aae0\n \n \n \n \n \n \n  entropy_loss = -log_prob.mean() \n \n \n \n \n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "AndyShih12", "commentT": "2020-07-28T08:25:50Z", "comment_text": "\n \t\tHello,\n nice catch ;)\n In fact, we have a test for that:\n \n \n \n stable-baselines3/tests/test_distributions.py\n \n \n          Line 89\n       in\n       bd2aae0\n \n \n \n \n \n \n  assert th.allclose(entropy.mean(), -log_prob.mean(), rtol=5e-3) \n \n \n \n \n \n We would appreciate a PR that solve that issue ;) (for A2C too)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "AndyShih12", "commentT": "2020-07-28T10:02:59Z", "comment_text": "\n \t\tI guess there is a misunderstanding, we mean that in\n \n \n \n stable-baselines3/stable_baselines3/ppo/ppo.py\n \n \n          Line 207\n       in\n       bd2aae0\n \n \n \n \n \n \n  loss = policy_loss + self.ent_coef * entropy_loss + self.vf_coef * value_loss \n \n \n \n \n \n this loss is designed to maximize the entropy of the policy in the meanwhile, so the entropy should be subtract from the policy loss and the value function loss\n the following 2 lines are right because it computes the negative entropy\n \n \n \n stable-baselines3/stable_baselines3/ppo/ppo.py\n \n \n         Lines 202 to 203\n       in\n       bd2aae0\n \n \n \n \n \n \n  else: \n \n \n \n  entropy_loss = -th.mean(entropy) \n \n \n \n \n \n but the following 2 lines computes the entropy\n \n \n \n stable-baselines3/stable_baselines3/ppo/ppo.py\n \n \n         Lines 199 to 201\n       in\n       bd2aae0\n \n \n \n \n \n \n  if entropy is None: \n \n \n \n  # Approximate entropy when no analytical form \n \n \n \n  entropy_loss = -log_prob.mean() \n \n \n \n \n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "AndyShih12", "commentT": "2020-07-28T10:11:23Z", "comment_text": "\n \t\tYup, we understood it this way from the original post. A PR to fix this issue would welcome, along with similar fix for A2C :)\n \t\t"}}}, "commit": {"commit_id": "8f9aaaebe9909c38622c429f1b82e1af39fdbb24", "commit_author": "Andy Shih", "commitT": "2020-07-29 21:19:41+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\misc\\changelog.rst", "file_new_name": "docs\\misc\\changelog.rst", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "35,361", "deleted_lines": "360"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "stable_baselines3\\a2c\\a2c.py", "file_new_name": "stable_baselines3\\a2c\\a2c.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "144", "deleted_lines": "144", "method_info": {"method_name": "train", "method_params": "self", "method_startline": "111", "method_endline": "167"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "stable_baselines3\\ppo\\ppo.py", "file_new_name": "stable_baselines3\\ppo\\ppo.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "201", "deleted_lines": "201", "method_info": {"method_name": "train", "method_params": "self", "method_startline": "133", "method_endline": "240"}}}}}}}