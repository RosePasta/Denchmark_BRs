{"BR": {"BR_id": "202", "BR_author": "kwabenantim", "BRopenT": "2020-10-27T17:46:37Z", "BRcloseT": "2020-10-27T21:12:53Z", "BR_text": {"BRsummary": "Save/load error due to model and env observation space mismatch", "BRdescription": "\n Error loading saved model due to observation space mismatch between model and env.\n Reproduction\n <denchmark-code>import gym\n from stable_baselines3 import PPO\n from stable_baselines3.ppo import CnnPolicy\n \n class CustomEnv(gym.Env):    \n     def __init__(self):\n         super(CustomEnv, self).__init__() \n         self.reward_range = (-1, 1)\n         self.action_space = gym.spaces.Discrete(2)\n         self.observation_space = gym.spaces.Box(low=0, high=255, shape=(36, 36, 4), dtype=np.uint8)\n \n     def reset(self):\n         return np.ones((36, 36, 4))\n     \n     def step(self, action):\n         return np.ones((36, 36, 4)), 0, True, {}\n \n custom_env = CustomEnv()\n model = PPO(CnnPolicy, custom_env)\n print(custom_env.observation_space)\n print(model.observation_space)\n \n model.save(\"custom_env\")\n model = PPO.load(\"custom_env\", custom_env)\n </denchmark-code>\n \n Output and Stack Trace\n <denchmark-code>Box(36, 36, 4)\n Box(4, 36, 36)\n \n ---------------------------------------------------------------------------\n ValueError                                Traceback (most recent call last)\n <ipython-input-176-a54409b23a82> in <module>\n       1 model.save(\"custom_env\")\n ----> 2 model = PPO.load(\"custom_env\", custom_env)\n \n /opt/conda/lib/python3.7/site-packages/stable_baselines3/common/base_class.py in load(cls, path, env, device, **kwargs)\n     595             cls._wrap_env(env, data[\"verbose\"])\n     596             # Check if given env is valid\n --> 597             check_for_correct_spaces(env, data[\"observation_space\"], data[\"action_space\"])\n     598         else:\n     599             # Use stored env, if one exists. If not, continue as is (can be used for predict)\n \n /opt/conda/lib/python3.7/site-packages/stable_baselines3/common/utils.py in check_for_correct_spaces(env, observation_space, action_space)\n     204     \"\"\"\n     205     if observation_space != env.observation_space:\n --> 206         raise ValueError(f\"Observation spaces do not match: {observation_space} != {env.observation_space}\")\n     207     if action_space != env.action_space:\n     208         raise ValueError(f\"Action spaces do not match: {action_space} != {env.action_space}\")\n \n ValueError: Observation spaces do not match: Box(4, 36, 36) != Box(36, 36, 4)\n </denchmark-code>\n \n System Info\n \n Library was installed from source\n Python version 3.7.6\n PyTorch version 1.5.1\n Gym version 0.17.2\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "kwabenantim", "commentT": "2020-10-27T17:54:34Z", "comment_text": "\n \t\tRelated issues <denchmark-link:https://github.com/DLR-RM/stable-baselines3/issues/142>#142</denchmark-link>\n  and <denchmark-link:https://github.com/DLR-RM/stable-baselines3/issues/103>#103</denchmark-link>\n \n Related PR <denchmark-link:https://github.com/DLR-RM/stable-baselines3/pull/143>#143</denchmark-link>\n \n Thanks for reporting this! Seems like either something goes wrong with transpose-wrappers or such transposing is forgotten somewhere (probably while loading the model). Tests should also be updated to test saving/loading with image-based envs to capture this.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "kwabenantim", "commentT": "2020-10-27T19:24:46Z", "comment_text": "\n \t\tHello,\n thanks for reporting the issue. In fact, i introduced that bug in <denchmark-link:https://github.com/DLR-RM/stable-baselines3/pull/120>#120</denchmark-link>\n  while trying to prevent it...\n the issue is that line 595 should be  (currently the wrapped env is not assigned)\n i will push a fix soon ;)\n \t\t"}}}, "commit": {"commit_id": "6327cc6156756f5cd0b1fb600c346fc21fbd7b11", "commit_author": "Antonin RAFFIN", "commitT": "2020-10-27 23:12:52+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\misc\\changelog.rst", "file_new_name": "docs\\misc\\changelog.rst", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "7,33,34", "deleted_lines": "7"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "stable_baselines3\\common\\base_class.py", "file_new_name": "stable_baselines3\\common\\base_class.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "595", "deleted_lines": "595"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "stable_baselines3\\version.txt", "file_new_name": "stable_baselines3\\version.txt", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1", "deleted_lines": "1"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\test_save_load.py", "file_new_name": "tests\\test_save_load.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248", "deleted_lines": null, "method_info": {"method_name": "test_save_load_env_cnn", "method_params": "tmp_path,model_class", "method_startline": "231", "method_endline": "248"}}}}}}}