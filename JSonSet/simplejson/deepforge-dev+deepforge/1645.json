{"BR": {"BR_id": "1645", "BR_author": "brollb", "BRopenT": "2020-04-13T21:29:28Z", "BRcloseT": "2020-08-05T17:44:26Z", "BR_text": {"BRsummary": "GME storage is unauthorized when user accounts enabled", "BRdescription": "\n The BlobClient used by the WebGME storage adapter does not have the credentials to access the blob when used in a job...\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "brollb", "commentT": "2020-04-21T17:52:21Z", "comment_text": "\n \t\tOne approach to this would be to issue an access token programmatically and revoke it on completion.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "brollb", "commentT": "2020-08-04T21:20:16Z", "comment_text": "\n \t\tThe simplest approach would just be to optionally add an access token value to the GME blob if user accounts are enabled and require the user to provide it. No need to special case this storage backend and try to handle it automatically just because it is part of webgme.\n \t\t"}}}, "commit": {"commit_id": "263474fc373b6daef0d8cf1426c02c4d93a71b1e", "commit_author": "Brian Broll", "commitT": "2020-08-05 12:44:23-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\common\\storage\\backends\\gme\\Client.js", "file_new_name": "src\\common\\storage\\backends\\gme\\Client.js", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "10,13", "deleted_lines": "10", "method_info": {"method_name": "GMEStorage", "method_params": "", "method_startline": "10", "method_endline": "14"}}, "hunk_1": {"Ismethod": 1, "added_lines": "10,13", "deleted_lines": "10", "method_info": {"method_name": "GMEStorage", "method_params": "id,name,logger,config", "method_startline": "10", "method_endline": "15"}}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "src\\common\\storage\\backends\\gme\\metadata.js"}, "file_2": {"file_change_type": "DELETE", "file_Nmethod": 0, "file_old_name": "src\\common\\storage\\backends\\gme\\metadata.json", "file_new_name": "None"}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\common\\storage\\index.js", "file_new_name": "src\\common\\storage\\index.js", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "18", "deleted_lines": "18", "method_info": {"method_name": "(anonymous)", "method_params": "module,StorageBackend,sciserverFiles,gme,s3", "method_startline": "8", "method_endline": "106"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "src\\common\\viz\\StorageHelpers.js", "file_new_name": "src\\common\\viz\\StorageHelpers.js", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "13,17,18,19,20,21,22,23,24,25", "deleted_lines": "13,17", "method_info": {"method_name": "StorageHelpers.getAuthenticationConfig", "method_params": "dataInfo", "method_startline": "13", "method_endline": "26"}}, "hunk_1": {"Ismethod": 1, "added_lines": "37", "deleted_lines": null, "method_info": {"method_name": "StorageHelpers.download", "method_params": "dataInfo,dataName", "method_startline": "36", "method_endline": "59"}}, "hunk_2": {"Ismethod": 1, "added_lines": "17,18,19,20,21,22,23,24", "deleted_lines": "17", "method_info": {"method_name": "(anonymous)", "method_params": "", "method_startline": "17", "method_endline": "24"}}, "hunk_3": {"Ismethod": 1, "added_lines": "13,17,18,19,20,21,22,23,24,25", "deleted_lines": "13,17,29", "method_info": {"method_name": "StorageHelpers.getAuthenticationConfig", "method_params": "dataInfo,runInBrowser", "method_startline": "13", "method_endline": "34"}}, "hunk_4": {"Ismethod": 1, "added_lines": "13,17,18,19,20,21,22,23,24,25,37", "deleted_lines": "13,17,29", "method_info": {"method_name": "(anonymous)", "method_params": "ConfigDialog,Storage,Materialize", "method_startline": "6", "method_endline": "62"}}}}}}}