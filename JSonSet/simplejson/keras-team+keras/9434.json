{"BR": {"BR_id": "9434", "BR_author": "elcombato", "BRopenT": "2018-02-20T15:49:58Z", "BRcloseT": "2018-02-21T18:52:02Z", "BR_text": {"BRsummary": "Error with multiprocessing on Sequence in fit_generator()", "BRdescription": "\n I'm trying to use a Sequence as the generator for model.fit_generator().\n With use_multiprocessing=False it works fine, but with use_multiprocessing=True an error is produced.\n Minimal working example:\n from keras.utils import Sequence\n from keras.models import Sequential\n from keras.layers import Dense\n from keras.utils import to_categorical\n import numpy as np\n \n class DummySequence(Sequence):\n     \n     def __init__(self, x_set, y_set, batch_size):\n         self.x, self.y = x_set, y_set\n         self.batch_size = batch_size\n \n     def __len__(self):\n         return int(np.ceil(len(self.x) / float(self.batch_size)))\n \n     def __getitem__(self, idx):\n         batch_x = self.x[idx * self.batch_size:(idx + 1) * self.batch_size]\n         batch_y = self.y[idx * self.batch_size:(idx + 1) * self.batch_size]\n \n         return np.array(batch_x), np.array(batch_y)\n \n if __name__ == '__main__':\n \n     x = np.random.random((100, 3))\n     y = to_categorical(np.random.random(100) > .5).astype(int)\n \n     seq = DummySequence(x, y, 10)\n \n     model = Sequential()\n     model.add(Dense(32, input_dim=3))\n     model.add(Dense(2, activation='softmax'))\n     model.compile(optimizer='rmsprop',\n                   loss='categorical_crossentropy',\n                   metrics=['accuracy'])\n \n     model.fit_generator(generator=seq, workers=2, use_multiprocessing=True)\n Error:\n <denchmark-code>Traceback (most recent call last):\n   File \"C:\\Users\\elcombato\\AppData\\Local\\Continuum\\Anaconda3\\envs\\ml\\lib\\multiprocessing\\pool.py\", line 119, in worker\n     result = (True, func(*args, **kwds))\n   File \"C:\\Users\\elcombato\\AppData\\Local\\Continuum\\Anaconda3\\envs\\ml\\lib\\site-packages\\keras\\utils\\data_utils.py\", line 392, in get_index\n     return _SHARED_SEQUENCES[uid][i]\n KeyError: 0\n </denchmark-code>\n \n Setup\n Windows 10\n Python 3.6.4\n Keras 2.1.3\n Tensorflow 1.2.1\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "elcombato", "commentT": "2018-02-20T16:15:17Z", "comment_text": "\n \t\tI think that because on Windows, python has to spawn instead of forking, it may cause a mis-representation on the shared Variable. I'll work on it and try to test it on Windows.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "elcombato", "commentT": "2018-02-20T16:27:01Z", "comment_text": "\n \t\tIf you have time, could you try again with this branch while I try to find a pc with Windows? Would be awesome!\n <denchmark-link:https://github.com/Dref360/keras/tree/mp_windows>https://github.com/Dref360/keras/tree/mp_windows</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "elcombato", "commentT": "2018-02-20T16:39:21Z", "comment_text": "\n \t\tYes that branch is working with multiprocessing!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "elcombato", "commentT": "2018-02-20T16:45:14Z", "comment_text": "\n \t\tOkay, I'll try something to guarantee that we test all multiprocessing tests on Windows. (At least on python3) and then I'll submit a PR\n \t\t"}}}, "commit": {"commit_id": "ff0690ab533b7b882301f8b836ccfda8fd4f7f21", "commit_author": "Fr\u00e9d\u00e9ric Branchaud-Charron", "commitT": "2018-02-21 10:52:01-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "keras\\utils\\data_utils.py", "file_new_name": "keras\\utils\\data_utils.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "542", "deleted_lines": "534", "method_info": {"method_name": "_run", "method_params": "self", "method_startline": "534", "method_endline": "558"}}, "hunk_1": {"Ismethod": 1, "added_lines": "514,515,516,518,519", "deleted_lines": "509,511", "method_info": {"method_name": "start", "method_params": "self,workers,max_queue_size", "method_startline": "505", "method_endline": "525"}}, "hunk_2": {"Ismethod": 1, "added_lines": "376,377,378", "deleted_lines": null, "method_info": {"method_name": "init_pool", "method_params": "seqs", "method_startline": "376", "method_endline": "378"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\keras\\utils\\data_utils_test.py", "file_new_name": "tests\\keras\\utils\\data_utils_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "28,29,30,31,32,33,34,35,36,37,38", "deleted_lines": null, "method_info": {"method_name": "use_spawn", "method_params": "func", "method_startline": "28", "method_endline": "38"}}, "hunk_1": {"Ismethod": 1, "added_lines": "31,32,33,34,35,36,37", "deleted_lines": null, "method_info": {"method_name": "use_spawn.wrapper", "method_params": "args,kwargs", "method_startline": "31", "method_endline": "37"}}}}}}}