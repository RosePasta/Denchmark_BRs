{"BR": {"BR_id": "10138", "BR_author": "richardliaw", "BRopenT": "2020-08-15T22:14:11Z", "BRcloseT": "2020-10-06T14:10:58Z", "BR_text": {"BRsummary": "[tune] lazily generate configurations for grid search", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Ray version and other system information (Python version, TensorFlow version, OS):\n This currently breaks on most setups.\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):\n <denchmark-code>from ray import tune\n \n \n def objective(step, alpha, beta):\n     return (0.1 + alpha * step / 100)**(-1) + beta * 0.1\n \n \n def training_function(config):\n     # Hyperparameters\n     alpha, beta = config[\"alpha\"], config[\"beta\"]\n     for step in range(10):\n         # Iterative training function - can be any arbitrary training procedure.\n         intermediate_score = objective(step, alpha, beta)\n         # Feed the score back back to Tune.\n         tune.report(mean_loss=intermediate_score)\n \n \n analysis = tune.run(\n     training_function,\n     config={\n         \"alpha\": tune.grid_search([0.001, 0.01, 0.1]),\n         \"beta\": tune.choice(list(range(10000)))\n     },\n     num_samples=1000000)\n </denchmark-code>\n \n <denchmark-link:https://stackoverflow.com/questions/63395596/ray-tune-random-search-indefinitely-many-samples>https://stackoverflow.com/questions/63395596/ray-tune-random-search-indefinitely-many-samples</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "richardliaw", "commentT": "2020-09-02T16:15:35Z", "comment_text": "\n \t\tSo the problem here lies in two places. For one, the code above does request scheduling of 3 million runs in parallel. There is no easy way to limit concurrency here, see also <denchmark-link:https://github.com/ray-project/ray/issues/10256>#10256</denchmark-link>\n .\n The other thing is that the basic variant generator generates all configurations at once, and creates trial objects for all of these. This could be fixed by batching the creation, like in this proof-of-concept commit:\n <denchmark-link:https://github.com/krfricke/ray/commit/74ef52d8cc7e5b99e567cfbba11699547a95e842>krfricke@74ef52d</denchmark-link>\n \n This would however implicitly limit concurrency to . Thus it would make sense to combine this with <denchmark-link:https://github.com/ray-project/ray/issues/10256>#10256</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "richardliaw", "commentT": "2020-09-02T21:44:36Z", "comment_text": "\n \t\tThis is pretty interesting - there's actually 3 different rate-limiting steps to be aware of.\n \n Sampling concurrency (currently set to infinite, bounded by ConcurrencyLimiter): This is important because it affects the actual optimization.\n Machine level concurrency (currently set to total_resources / resources_per_trial): This is important because it prevents resource exhaustion/overloading of trials\n Autoscaling queue depth (defaults to 1): This is important (later on) because it will guide autoscaling decisions.\n \n Another important consideration is \"out of band\" trials. That is, it is possible for sampling concurrency = 1, but the actual number of concurrent trials being evaluated = N > 1. (See Repeater, or the Tune Client API).\n Another important consideration is autoscaling. We want to support the case where we have 0 GPUs in our cluster (CPU-only head node, with autoscaling workers). This will require a trial to start even when the machine level concurrency = 0 (effectively).\n Therefore, my recommendation is the following:\n \n For search algs/grid search:\n \n Only generate trials when asked, 1 by 1.\n Return None if sampling concurrency is met.\n \n \n For trial runner:\n \n Do not greedily gather/collect trials - only query up to \"queue depth + machine level concurrency (derived from resources_per_trial)\" trials at once.\n \n \n \n RE: Machine level concurrency: int - having a parameter for this only makes sense for fixed cluster sizes, but also not sure how many people actually need to set this. It most likely will be overriden by sampling concurrency in all cases.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "richardliaw", "commentT": "2020-10-06T14:10:58Z", "comment_text": "\n \t\tClosed via <denchmark-link:https://github.com/ray-project/ray/pull/10802>#10802</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "ee99c919e3c72ce65b68b5dbda7743b2735f2c71", "commit_author": "Kai Fricke", "commitT": "2020-09-17 08:51:46-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\ray\\tune\\automl\\search_policy.py", "file_new_name": "python\\ray\\tune\\automl\\search_policy.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "59,60", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,search_space,reward_attr", "method_startline": "39", "method_endline": "64"}}, "hunk_1": {"Ismethod": 1, "added_lines": "88,89,90,93,132", "deleted_lines": "113", "method_info": {"method_name": "_generate_next_trials", "method_params": "self", "method_startline": "88", "method_endline": "132"}}, "hunk_2": {"Ismethod": 1, "added_lines": "73,74,75,76,77,78,79,80,81,82,83,84,85,86", "deleted_lines": "74", "method_info": {"method_name": "next_trial", "method_params": "self", "method_startline": "73", "method_endline": "86"}}, "hunk_3": {"Ismethod": 1, "added_lines": "73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93", "deleted_lines": "71,74,113", "method_info": {"method_name": "next_trials", "method_params": "self", "method_startline": "71", "method_endline": "113"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "python\\ray\\tune\\progress_reporter.py", "file_new_name": "python\\ray\\tune\\progress_reporter.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "99", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,metric_columns,parameter_columns,total_samples,max_progress_rows,max_error_rows,max_report_frequency,infer_limit", "method_startline": "96", "method_endline": "103"}}, "hunk_1": {"Ismethod": 1, "added_lines": "299", "deleted_lines": "296", "method_info": {"method_name": "__init__", "method_params": "self,metric_columns,parameter_columns,total_samples,max_progress_rows,max_error_rows,max_report_frequency", "method_startline": "296", "method_endline": "302"}}, "hunk_2": {"Ismethod": 1, "added_lines": "201", "deleted_lines": null, "method_info": {"method_name": "_progress_str", "method_params": "self,trials,done,sys_info,fmt,delim", "method_startline": "172", "method_endline": "205"}}, "hunk_3": {"Ismethod": 1, "added_lines": "337", "deleted_lines": null, "method_info": {"method_name": "trial_progress_str", "method_params": "trials,metric_columns,parameter_columns,total_samples,fmt,max_rows", "method_startline": "334", "method_endline": "339"}}, "hunk_4": {"Ismethod": 1, "added_lines": "116,117", "deleted_lines": null, "method_info": {"method_name": "set_total_samples", "method_params": "self,total_samples", "method_startline": "116", "method_endline": "117"}}, "hunk_5": {"Ismethod": 1, "added_lines": "254", "deleted_lines": "250,251", "method_info": {"method_name": "__init__", "method_params": "self,overwrite,metric_columns,parameter_columns,total_samples,max_progress_rows,max_error_rows,max_report_frequency", "method_startline": "250", "method_endline": "257"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "python\\ray\\tune\\suggest\\basic_variant.py", "file_new_name": "python\\ray\\tune\\suggest\\basic_variant.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "82,83,86,88,89,90,91,92,93,94,95,96", "deleted_lines": "84,86,87,88,89,90", "method_info": {"method_name": "next_trial", "method_params": "self", "method_startline": "82", "method_endline": "96"}}, "hunk_1": {"Ismethod": 1, "added_lines": "82,83,86,88,89,90", "deleted_lines": "80,81,84,86,87,88,89,90", "method_info": {"method_name": "next_trials", "method_params": "self", "method_startline": "80", "method_endline": "90"}}, "hunk_2": {"Ismethod": 1, "added_lines": "47,59,60,61,62", "deleted_lines": "46,54", "method_info": {"method_name": "__init__", "method_params": "self,bool", "method_startline": "46", "method_endline": "62"}}, "hunk_3": {"Ismethod": 1, "added_lines": "41,47,59", "deleted_lines": "42,46,54", "method_info": {"method_name": "__init__", "method_params": "self", "method_startline": "41", "method_endline": "59"}}, "hunk_4": {"Ismethod": 1, "added_lines": "62,63", "deleted_lines": null, "method_info": {"method_name": "total_samples", "method_params": "self", "method_startline": "62", "method_endline": "63"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "python\\ray\\tune\\suggest\\search.py", "file_new_name": "python\\ray\\tune\\suggest\\search.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "53,54,57", "deleted_lines": "53", "method_info": {"method_name": "next_trial", "method_params": "self", "method_startline": "53", "method_endline": "59"}}, "hunk_1": {"Ismethod": 1, "added_lines": "53,54", "deleted_lines": "49,50,53", "method_info": {"method_name": "next_trials", "method_params": "self", "method_startline": "49", "method_endline": "55"}}, "hunk_2": {"Ismethod": 1, "added_lines": "39,40,41", "deleted_lines": null, "method_info": {"method_name": "total_samples", "method_params": "self", "method_startline": "39", "method_endline": "41"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\ray\\tune\\suggest\\search_generator.py", "file_new_name": "python\\ray\\tune\\suggest\\search_generator.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "102,103,106,108,109,110,111", "deleted_lines": "102,104,105,106,107,108,109,110,111", "method_info": {"method_name": "next_trial", "method_params": "self", "method_startline": "102", "method_endline": "111"}}, "hunk_1": {"Ismethod": 1, "added_lines": "70", "deleted_lines": "70", "method_info": {"method_name": "__init__", "method_params": "self,Searcher", "method_startline": "62", "method_endline": "71"}}, "hunk_2": {"Ismethod": 1, "added_lines": "102,103,106,108,109,110,111", "deleted_lines": "98,99,102,104,105,106,107,108,109,110,111", "method_info": {"method_name": "next_trials", "method_params": "self", "method_startline": "98", "method_endline": "111"}}, "hunk_3": {"Ismethod": 1, "added_lines": "78,79", "deleted_lines": null, "method_info": {"method_name": "total_samples", "method_params": "self", "method_startline": "78", "method_endline": "79"}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\suggest\\variant_generator.py", "file_new_name": "python\\ray\\tune\\suggest\\variant_generator.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "141,142,143,144,145,146,147", "deleted_lines": null, "method_info": {"method_name": "count_variants", "method_params": "Dict", "method_startline": "141", "method_endline": "147"}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\ray\\tune\\tests\\test_automl_searcher.py", "file_new_name": "python\\ray\\tune\\tests\\test_automl_searcher.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "8,9,10,11,12,13,14,15", "deleted_lines": null, "method_info": {"method_name": "next_trials", "method_params": "searcher", "method_startline": "8", "method_endline": "15"}}, "hunk_1": {"Ismethod": 1, "added_lines": "33", "deleted_lines": "37", "method_info": {"method_name": "testExpandSearchSpace", "method_params": "self", "method_startline": "25", "method_endline": "37"}}, "hunk_2": {"Ismethod": 1, "added_lines": "64,66,68", "deleted_lines": "56", "method_info": {"method_name": "testBestTrial", "method_params": "self", "method_startline": "56", "method_endline": "76"}}, "hunk_3": {"Ismethod": 1, "added_lines": "47,49", "deleted_lines": "39,54", "method_info": {"method_name": "testSearchRound", "method_params": "self", "method_startline": "39", "method_endline": "54"}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\tests\\test_progress_reporter.py", "file_new_name": "python\\ray\\tune\\tests\\test_progress_reporter.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "76,77,78,79,80,81,82,83,119", "deleted_lines": "76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,139"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\tests\\test_ray_trial_executor.py", "file_new_name": "python\\ray\\tune\\tests\\test_ray_trial_executor.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "173,174,175,176,177,178,179,180", "deleted_lines": "173", "method_info": {"method_name": "generate_trials", "method_params": "spec,name", "method_startline": "170", "method_endline": "180"}}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\tests\\test_trial_runner.py", "file_new_name": "python\\ray\\tune\\tests\\test_trial_runner.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "60,61,62,63", "deleted_lines": "60", "method_info": {"method_name": "testExperimentTagTruncation", "method_params": "self", "method_startline": "38", "method_endline": "66"}}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\ray\\tune\\tests\\test_trial_runner_3.py", "file_new_name": "python\\ray\\tune\\tests\\test_trial_runner_3.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "627", "deleted_lines": "628", "method_info": {"method_name": "testNestedSuggestion", "method_params": "self", "method_startline": "619", "method_endline": "629"}}, "hunk_1": {"Ismethod": 1, "added_lines": "231,233,242", "deleted_lines": "231,233,237", "method_info": {"method_name": "testSearchAlgFinishes.next_trial", "method_params": "self", "method_startline": "231", "method_endline": "242"}}, "hunk_2": {"Ismethod": 1, "added_lines": "231,233,242", "deleted_lines": "231,233,237,243", "method_info": {"method_name": "testSearchAlgFinishes.next_trials", "method_params": "self", "method_startline": "231", "method_endline": "243"}}, "hunk_3": {"Ismethod": 1, "added_lines": "231,233,242", "deleted_lines": "231,233,237,243", "method_info": {"method_name": "testSearchAlgFinishes", "method_params": "self", "method_startline": "225", "method_endline": "273"}}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\tests\\test_var.py", "file_new_name": "python\\ray\\tune\\tests\\test_var.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "27,28,29,30,31,32,33,34", "deleted_lines": "27", "method_info": {"method_name": "generate_trials", "method_params": "self,spec,name", "method_startline": "24", "method_endline": "34"}}}}, "file_12": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\trial_runner.py", "file_new_name": "python\\ray\\tune\\trial_runner.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "737,738,743,746,749", "deleted_lines": "737,738,743,746,749", "method_info": {"method_name": "_update_trial_queue", "method_params": "self,blocking,timeout", "method_startline": "727", "method_endline": "750"}}}}, "file_13": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\tune\\tune.py", "file_new_name": "python\\ray\\tune\\tune.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "2,181,182,297,298,299,391,392", "deleted_lines": "180"}}}, "file_14": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\ray\\tune\\web_server.py", "file_new_name": "python\\ray\\tune\\web_server.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "214,215,216,217", "deleted_lines": "214", "method_info": {"method_name": "RunnerHandler._add_trials", "method_params": "self,name,spec", "method_startline": "208", "method_endline": "220"}}, "hunk_1": {"Ismethod": 1, "added_lines": "214,215,216,217", "deleted_lines": "214", "method_info": {"method_name": "RunnerHandler", "method_params": "runner", "method_startline": "92", "method_endline": "222"}}}}}}}