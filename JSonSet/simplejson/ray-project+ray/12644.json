{"BR": {"BR_id": "12644", "BR_author": "edoakes", "BRopenT": "2020-12-07T04:22:54Z", "BRcloseT": "2020-12-12T03:47:17Z", "BR_text": {"BRsummary": "Segfault when submitting actor tasks from background thread", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Ray into this when running the prototyped beam runner on my laptop (mac). Frequently (majority of the time) get a segfault when submitting tasks to the actors from a background thread. Traceback:\n <denchmark-code>Process 55677 stopped\n * thread #46, stop reason = EXC_BAD_ACCESS (code=1, address=0x48)\n     frame #0: 0x00000001592e4814 _raylet.so`ray::CoreWorker::SubmitActorTask(ray::ActorID const&, ray::RayFunction const&, std::__1::vector<std::__1::unique_ptr<ray::TaskArg, std::__1::default_delete<ray::TaskArg> >, std::__1::allocator<std::__1::unique_ptr<ray::TaskArg, std::__1::default_delete<ray::TaskArg> > > > const&, ray::TaskOptions const&, std::__1::vector<ray::ObjectID, std::__1::allocator<ray::ObjectID> >*) + 1508\n _raylet.so`ray::CoreWorker::SubmitActorTask:\n ->  0x1592e4814 <+1508>: movl   0x48(%rax), %r8d\n     0x1592e4818 <+1512>: leaq   -0xa0(%rbp), %rdx\n     0x1592e481f <+1519>: leaq   -0xe0(%rbp), %rbx\n     0x1592e4826 <+1526>: movq   %r15, %rdi\n Target 0: (python) stopped.\n </denchmark-code>\n \n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Run  on this branch: <denchmark-link:https://github.com/ericl/ray/tree/beam-runner>https://github.com/ericl/ray/tree/beam-runner</denchmark-link>\n .\n If we cannot run your script, we cannot fix your issue.\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "edoakes", "commentT": "2020-12-07T04:23:02Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ericl>@ericl</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "edoakes", "commentT": "2020-12-07T04:25:33Z", "comment_text": "\n \t\tHere's the relevant code being called from the background thread:\n 144         actor = BeamWorker.options(\n 145             override_environment_variables=env_dict).remote()\n 147         actor.run_beam_tasks.remote()\n 148         try:\n 149             ray.get(actor.await_termination.remote())\n 150         finally:\n 151             logging_server.stop(0)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "edoakes", "commentT": "2020-12-07T04:26:07Z", "comment_text": "\n \t\tAdding a 1s sleep between creating the actor and submitting the subsequent task seems to solve the problem locally.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "edoakes", "commentT": "2020-12-07T09:03:48Z", "comment_text": "\n \t\tMaybe potential indication that our APIs are not thread-safe? (which I believe it is not currently)\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "edoakes", "commentT": "2020-12-07T15:21:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/rkooo567>@rkooo567</denchmark-link>\n  the APIs are advertised as (and should be) thread safe\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "edoakes", "commentT": "2020-12-11T00:21:46Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/edoakes>@edoakes</denchmark-link>\n  can you try running this under asan? I think you can do that by adding  to the bazel command in setup.py.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "edoakes", "commentT": "2020-12-11T16:49:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ericl>@ericl</denchmark-link>\n  trying that gives me the following error:\n <denchmark-code>(base) ray/serve % pytest -vs tests/test_api.py \n ==20501==ERROR: Interceptors are not working. This may be because AddressSanitizer is loaded too late (e.g. via dlopen). Please launch the executable with:\n DYLD_INSERT_LIBRARIES=/Library/Developer/CommandLineTools/usr/lib/clang/11.0.3/lib/darwin/libclang_rt.asan_osx_dynamic.dylib\n \"interceptors not installed\" && 0zsh: abort      pytest -vs tests/test_api.py\n </denchmark-code>\n \n This seems like it's potentially mac-specific based on some googling -- is ASAN only working on linux?\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "edoakes", "commentT": "2020-12-11T17:08:05Z", "comment_text": "\n \t\tLooks like this can actually be reproduced just by running the serve test_api.py (happens ~50% of the time):\n <denchmark-code>```tests/test_api.py .....(pid=27967) 2020-12-11 11:06:43,112      DEBUG long_poll.py:163 -- LongPollHost: Notify change for key LongPollKey.REPLICA_HANDLES.\n (pid=27967) 2020-12-11 11:06:43,112     DEBUG long_poll.py:163 -- LongPollHost: Notify change for key LongPollKey.BACKEND_CONFIGS.\n (pid=27967) 2020-12-11 11:06:43,114     DEBUG controller.py:609 -- Writing checkpoint\n (pid=27965) 2020-12-11 11:06:43,114     DEBUG long_poll.py:68 -- LongPollClient received updates for keys: [LongPollKey.BACKEND_CONFIGS].\n (pid=28010) 2020-12-11 11:06:43,111     DEBUG long_poll.py:68 -- LongPollClient received updates for keys: [LongPollKey.BACKEND_CONFIGS].\n (pid=28010) 2020-12-11 11:06:43,113     DEBUG long_poll.py:68 -- LongPollClient received updates for keys: [LongPollKey.BACKEND_CONFIGS].\n (pid=27967) 2020-12-11 11:06:43,115     DEBUG controller.py:618 -- Wrote checkpoint in 0.00\n (pid=27965) 2020-12-11 11:06:43,117     DEBUG long_poll.py:68 -- LongPollClient received updates for keys: [LongPollKey.REPLICA_HANDLES].\n Process 27933 stopped\n * thread #22, stop reason = EXC_BAD_ACCESS (code=1, address=0x48)\n     frame #0: 0x000000010435ab9d _raylet.so`ray::CoreWorker::SubmitActorTask(ray::ActorID const&, ray::RayFunction const&, std::__1::vector<std::__1::unique_ptr<ray::TaskArg, std::__1::default_delete<ray::TaskArg> >, std::__1::allocator<std::__1::unique_ptr<ray::TaskArg, std::__1::default_delete<ray::TaskArg> > > > const&, ray::TaskOptions const&, std::__1::vector<ray::ObjectID, std::__1::allocator<ray::ObjectID> >*) + 1565\n _raylet.so`ray::CoreWorker::SubmitActorTask:\n ->  0x10435ab9d <+1565>: movl   0x48(%rax), %r8d\n     0x10435aba1 <+1569>: leaq   -0xa0(%rbp), %rdx\n     0x10435aba8 <+1576>: leaq   -0xe0(%rbp), %r15\n     0x10435abaf <+1583>: movq   %r14, %rdi\n Target 0: (python) stopped.\n </denchmark-code>\n \n \t\t"}}}, "commit": {"commit_id": "03d869d51cdb8c72016f2b74ed82bf9068e66b51", "commit_author": "Edward Oakes", "commitT": "2020-12-11 21:47:16-06:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\_raylet.pyx", "file_new_name": "python\\ray\\_raylet.pyx", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1243,1244,1245,1246,1247,1248,1249,1250", "deleted_lines": "1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1241,1242,1243,1244,1245,1246"}}}}}}