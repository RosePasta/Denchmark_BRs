{"BR": {"BR_id": "759", "BR_author": "wangce888", "BRopenT": "2019-02-27T02:05:35Z", "BRcloseT": "2019-03-02T00:01:25Z", "BR_text": {"BRsummary": "A bug occurred while processing an error request", "BRdescription": "\n When I send an erroneous request with python's requests package, I get an error \"'NoneType' object is not iterable\". But when I send a correct request, I still get this error. So I suspect that the error flag in the service program has not been reset. so I added self.error=None at the beginning of the data receiving function in mxnet_vision_server.py, and the problem disappeared.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "wangce888", "commentT": "2019-02-27T02:07:21Z", "comment_text": "\n \t\tI don't know if this is a bug or my code is wrong.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "wangce888", "commentT": "2019-02-27T02:13:03Z", "comment_text": "\n \t\t@aikudexiaohai, there is no pertained state between requests in MMS. What would help if you could post some more details about your custom service code so we would be able to take a deeper look.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "wangce888", "commentT": "2019-02-27T02:23:26Z", "comment_text": "\n \t\tclass MXNetVisionService(MXNetModelService):\n <denchmark-code>def preprocess(self, request):\n \n     self.error = None                     # I add this line\n \n     img_list = []\n     param_name = self.signature['inputs'][0]['data_name']\n     input_shape = self.signature['inputs'][0]['data_shape']\n \n     for idx, data in enumerate(request):\n         img = data.get(param_name)\n         if img is None:\n             img = data.get(\"body\")\n \n         if img is None:\n             img = data.get(\"data\")\n \n         if img is None or len(img) == 0:\n             self.error = \"Empty image input\"\n             return None\n \n         # We are assuming input shape is NCHW\n         [h, w] = input_shape[2:]\n \n         try:\n             img_arr = image.read(img)\n         except Exception as e:\n             logging.warn(e, exc_info=True)\n             self.error = \"Corrupted image input\"\n             return None\n \n         img_arr = image.resize(img_arr, w, h)\n         img_arr = image.transform_shape(img_arr)\n         img_list.append(img_arr)\n     return img_list\n </denchmark-code>\n \n wrong request code:\n data = {'file': open('./images/1.jpg', 'rb')}\n res = requests.request('POST', url, files=data)\n print(res.text)\n this will recieve wrong reponse 'NoneType' object is not iterable because the key value 'file' is wrong, it should be 'data'\n correct code:\n data = {'data': open('./images/1.jpg', 'rb')}\n res = requests.request('POST', url, files=data)\n print(res.text)\n I use this correct code, still recieve 'NoneType' object is not iterable\uff0cbut if I add self.error=None\uff0cI will recieve correct response\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "wangce888", "commentT": "2019-02-27T02:28:33Z", "comment_text": "\n \t\tIs self.error not reset? A wrong request will affect the next correct request\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "wangce888", "commentT": "2019-02-27T04:34:45Z", "comment_text": "\n \t\t@aikudexiaohai : Thanks for finding this issue and raising it \ud83d\udc4d . The code you are pointing to is custom code which is meant to be modified by customers writing models :) . We would recommend customers modifying this code according to their needs. That said, you have a valid point here. We might need to fix this in our example implementation as well.\n Just out of curiosity, are you using one of the models from MMS model-zoo? If yes, which model are you using?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "wangce888", "commentT": "2019-02-28T18:43:59Z", "comment_text": "\n \t\t@aikudexiaohai pushed PR to fix our template.\n \t\t"}}}, "commit": {"commit_id": "a01138a59703bb64d1ed91ea8b686a4f66b17e68", "commit_author": "Frank Liu", "commitT": "2019-03-01 16:01:23-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "examples\\model_service_template\\model_handler.py", "file_new_name": "examples\\model_service_template\\model_handler.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "76", "deleted_lines": null, "method_info": {"method_name": "handle", "method_params": "self,data,context", "method_startline": "68", "method_endline": "97"}}}}}}}