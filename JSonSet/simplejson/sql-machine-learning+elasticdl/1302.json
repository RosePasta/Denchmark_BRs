{"BR": {"BR_id": "1302", "BR_author": "workingloong", "BRopenT": "2019-10-12T13:24:21Z", "BRcloseT": "2019-10-15T14:04:18Z", "BR_text": {"BRsummary": "dtype of column in odps table may be not float32", "BRdescription": "\n The dtype of column in odps table may be int32, float, boolean, string and so on. So, the records_output_types in ODPSDataReader can not be fixed to tf.float32.\n \n \n \n elasticdl/elasticdl/python/data/data_reader.py\n \n \n         Lines 143 to 144\n       in\n       aef9d66\n \n \n \n \n \n \n  def records_output_types(self): \n \n \n \n  return tf.float32 \n \n \n \n \n \n I suggest that, records_output_types in ODPSDataReader is fixed to tf.string. And, we should convert data from odps_io.ODPSReader.read_batch to string.\n \n \n \n elasticdl/elasticdl/python/data/odps_io.py\n \n \n         Lines 223 to 225\n       in\n       aef9d66\n \n \n \n \n \n \n  batch_record.append( \n \n \n \n      [record[column] for column in columns] \n \n \n \n  ) \n \n \n \n \n \n <denchmark-code>batch_record.append(\n     [str(record[column]) for column in columns]\n )\n </denchmark-code>\n \n Then, user can cast the string to data type they want in defined dataset_fn\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "workingloong", "commentT": "2019-10-14T02:47:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/workingloong>@workingloong</denchmark-link>\n  Yes,  was only the temporary plan. We should switch to something more robust.\n \t\t"}}}, "commit": {"commit_id": "bf52115a934e4c5c99ae0007f6235fe83e907f58", "commit_author": "workingloong", "commitT": "2019-10-15 08:40:38-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "elasticdl\\python\\data\\data_reader.py", "file_new_name": "elasticdl\\python\\data\\data_reader.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "144", "deleted_lines": "144", "method_info": {"method_name": "records_output_types", "method_params": "self", "method_startline": "143", "method_endline": "144"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "elasticdl\\python\\data\\odps_io.py", "file_new_name": "elasticdl\\python\\data\\odps_io.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "224", "deleted_lines": "224", "method_info": {"method_name": "read_batch", "method_params": "self,start,end,columns,max_retries", "method_startline": "197", "method_endline": "237"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "elasticdl\\python\\tests\\data_reader_test.py", "file_new_name": "elasticdl\\python\\tests\\data_reader_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "141", "deleted_lines": "139", "method_info": {"method_name": "test_odps_data_reader_integration_with_local_keras", "method_params": "self", "method_startline": "120", "method_endline": "159"}}, "hunk_1": {"Ismethod": 1, "added_lines": "102", "deleted_lines": null, "method_info": {"method_name": "test_odps_data_reader_records_reading", "method_params": "self", "method_startline": "96", "method_endline": "108"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "model_zoo\\odps_iris_dnn_model\\odps_iris_dnn_model.py", "file_new_name": "model_zoo\\odps_iris_dnn_model\\odps_iris_dnn_model.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "28", "deleted_lines": null, "method_info": {"method_name": "dataset_fn", "method_params": "dataset,mode,metadata", "method_startline": "25", "method_endline": "69"}}, "hunk_1": {"Ismethod": 1, "added_lines": "28", "deleted_lines": null, "method_info": {"method_name": "dataset_fn._parse_data", "method_params": "record", "method_startline": "26", "method_endline": "63"}}}}}}}