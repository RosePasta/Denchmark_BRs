{"BR": {"BR_id": "173", "BR_author": "BPie", "BRopenT": "2016-08-20T16:47:31Z", "BRcloseT": "2016-08-22T14:58:04Z", "BR_text": {"BRsummary": "error while importing GPflow", "BRdescription": "\n I can not import GPflow. I instelled it by  python setup.py develop on virtualenv. Tests are also failing to run.\n <denchmark-h:h3>Import error</denchmark-h>\n \n <denchmark-code>In [2]: import GPflow\n ---------------------------------------------------------------------------\n NotFoundError                             Traceback (most recent call last)\n <ipython-input-2-d5391a053bbd> in <module>()\n ----> 1 import GPflow\n \n /home/me/<...>/GPflow/GPflow/__init__.py in <module>()\n      15 \n      16 # flake8: noqa\n ---> 17 from . import likelihoods, kernels, param, model, gpmc, sgpmc, priors, gpr, svgp, vgp, sgpr\n      18 from ._version import __version__\n \n /home/me/<...>/GPflow/GPflow/likelihoods.py in <module>()\n      17 import tensorflow as tf\n      18 import numpy as np\n ---> 19 from .param import Parameterized, Param\n      20 from . import transforms\n      21 hermgauss = np.polynomial.hermite.hermgauss\n \n /home/me/<...>/GPflow/GPflow/param.py in <module>()\n      17 import pandas as pd\n      18 import tensorflow as tf\n ---> 19 from . import transforms\n      20 from contextlib import contextmanager\n      21 from functools import wraps\n \n /home/me/<...>/GPflow/GPflow/transforms.py in <module>()\n      16 import numpy as np\n      17 import tensorflow as tf\n ---> 18 import GPflow.tf_hacks as tfh\n      19 \n      20 \n \n /home/me/<...>/GPflow/GPflow/tf_hacks.py in <module>()\n      28 \n      29 \n ---> 30 _custom_op_module = tf.load_op_library(os.path.join(os.path.dirname(__file__), 'tfops', 'matpackops.so'))\n      31 vec_to_tri = _custom_op_module.vec_to_tri\n      32 tri_to_vec = _custom_op_module.tri_to_vec\n \n /home/me/.virtualenvs/tf_0_10/lib/python2.7/site-packages/tensorflow/python/framework/load_library.pyc in load_op_library(library_filename)\n      73           return _OP_LIBRARY_MAP[library_filename]\n      74       # pylint: disable=protected-access\n ---> 75       raise errors._make_specific_exception(None, None, error_msg, error_code)\n      76       # pylint: enable=protected-access\n      77   finally:\n \n NotFoundError: GPflow/tfops/matpackops.so: undefined symbol: _ZN10tensorflow7strings6StrCatB5cxx11ERKNS0_8AlphaNumE\n \n </denchmark-code>\n \n <denchmark-h:h3>Test error</denchmark-h>\n \n <denchmark-code>running test\n running egg_info\n writing requirements to GPflow.egg-info/requires.txt\n writing GPflow.egg-info/PKG-INFO\n writing top-level names to GPflow.egg-info/top_level.txt\n writing dependency_links to GPflow.egg-info/dependency_links.txt\n reading manifest file 'GPflow.egg-info/SOURCES.txt'\n writing manifest file 'GPflow.egg-info/SOURCES.txt'\n running build_ext\n Traceback (most recent call last):\n   File \"setup.py\", line 50, in <module>\n     'Topic :: Scientific/Engineering :: Artificial Intelligence']\n   File \"/usr/lib64/python2.7/distutils/core.py\", line 151, in setup\n     dist.run_commands()\n   File \"/usr/lib64/python2.7/distutils/dist.py\", line 953, in run_commands\n     self.run_command(cmd)\n   File \"/usr/lib64/python2.7/distutils/dist.py\", line 972, in run_command\n     cmd_obj.run()\n   File \"/home/me/.virtualenvs/tf_0_10/lib/python2.7/site-packages/setuptools/command/test.py\", line 172, in run\n     self.run_tests()\n   File \"/home/me/.virtualenvs/tf_0_10/lib/python2.7/site-packages/setuptools/command/test.py\", line 193, in run_tests\n     testRunner=self._resolve_as_ep(self.test_runner),\n   File \"/usr/lib64/python2.7/unittest/main.py\", line 94, in __init__\n     self.parseArgs(argv)\n   File \"/usr/lib64/python2.7/unittest/main.py\", line 149, in parseArgs\n     self.createTests()\n   File \"/usr/lib64/python2.7/unittest/main.py\", line 158, in createTests\n     self.module)\n   File \"/usr/lib64/python2.7/unittest/loader.py\", line 130, in loadTestsFromNames\n     suites = [self.loadTestsFromName(name, module) for name in names]\n   File \"/usr/lib64/python2.7/unittest/loader.py\", line 103, in loadTestsFromName\n     return self.loadTestsFromModule(obj)\n   File \"/home/me/.virtualenvs/tf_0_10/lib/python2.7/site-packages/setuptools/command/test.py\", line 40, in loadTestsFromModule\n     tests.append(self.loadTestsFromName(submodule))\n   File \"/usr/lib64/python2.7/unittest/loader.py\", line 100, in loadTestsFromName\n     parent, obj = obj, getattr(obj, part)\n AttributeError: 'module' object has no attribute 'test_variational'\n \n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "BPie", "commentT": "2016-08-20T20:15:21Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/BPie>@BPie</denchmark-link>\n  , thanks for the bug report.\n Could you let us know:\n \n which version of tensorflow are you using?\n which version of python?\n which os?\n \n and we'll do our best to replicate and fix.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "BPie", "commentT": "2016-08-20T23:50:32Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/jameshensman>@jameshensman</denchmark-link>\n  , my environment looks like described below:\n tf 0.10\n Python 2.7.11\n Fedora 23\n <denchmark-h:h3>pip freeze (virtualenv)</denchmark-h>\n \n <denchmark-code>pip freeze                \n funcsigs==1.0.2\n -e git+https://github.com/GPflow/GPflow.git@67cfd5d2d25a3a90e1f873fbac0b05c025d04a1d#egg=GPflow\n linecache2==1.0.0\n mock==2.0.0\n numpy==1.11.1\n pbr==1.10.0\n protobuf==3.0.0b2\n scipy==0.18.0\n six==1.10.0\n tensorflow==0.10.0rc0\n traceback2==1.4.0\n unittest2==1.1.0\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "BPie", "commentT": "2016-08-21T08:05:26Z", "comment_text": "\n \t\tGreat, thanks <denchmark-link:https://github.com/BPie>@BPie</denchmark-link>\n  .\n I'm still not sure where the problem is, but it looks like the binaries are not getting linked correctly. This might be because tensorflow is in an unusual path in fedora? We should be finding it automatically though.\n Could you report the outputs of these, please?\n python -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'\n and\n git clone git@github.com:GPflow/GPflow.git\n cd GPflow\n python setup.py build\n Much appreciated.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "BPie", "commentT": "2016-08-21T08:10:27Z", "comment_text": "\n \t\toop and gcc --version, please.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "BPie", "commentT": "2016-08-21T08:27:24Z", "comment_text": "\n \t\ttf is installd by pip inside virtualenv, so it is not in a default place for fedora.\n <denchmark-h:h3>tf installation place (virtualenv)</denchmark-h>\n \n <denchmark-code>\u276f\u276f\u276f python -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'                         \n /home/me/.virtualenvs/tf_0_10/lib/python2.7/site-packages/tensorflow/include\n </denchmark-code>\n \n <denchmark-h:h3>installing GPflow</denchmark-h>\n \n <denchmark-code>\u276f\u276f\u276f git clone https://github.com/GPflow/GPflow.git                                                \u23ce\n Cloning into 'GPflow'...\n remote: Counting objects: 3458, done.\n remote: Compressing objects: 100% (49/49), done.\n remote: Total 3458 (delta 23), reused 0 (delta 0), pack-reused 3409\n Receiving objects: 100% (3458/3458), 12.32 MiB | 1.44 MiB/s, done.\n Resolving deltas: 100% (2391/2391), done.\n Checking connectivity... done.\n \n \u276f\u276f\u276f cd GPflow\n \n \u276f\u276f\u276f git status                                                                                          \n On branch master\n Your branch is up-to-date with 'origin/master'.\n nothing to commit, working directory clean\n \n \u276f\u276f\u276f python setup.py build                                                                               \n running build\n running build_py\n creating build\n creating build/lib\n creating build/lib/GPflow\n copying GPflow/__init__.py -> build/lib/GPflow\n copying GPflow/svgp.py -> build/lib/GPflow\n copying GPflow/transforms.py -> build/lib/GPflow\n copying GPflow/param.py -> build/lib/GPflow\n copying GPflow/_version.py -> build/lib/GPflow\n copying GPflow/priors.py -> build/lib/GPflow\n copying GPflow/gpmc.py -> build/lib/GPflow\n copying GPflow/model.py -> build/lib/GPflow\n copying GPflow/sgpmc.py -> build/lib/GPflow\n copying GPflow/likelihoods.py -> build/lib/GPflow\n copying GPflow/conditionals.py -> build/lib/GPflow\n copying GPflow/gpr.py -> build/lib/GPflow\n copying GPflow/kullback_leiblers.py -> build/lib/GPflow\n copying GPflow/vgp.py -> build/lib/GPflow\n copying GPflow/densities.py -> build/lib/GPflow\n copying GPflow/kernels.py -> build/lib/GPflow\n copying GPflow/tf_hacks.py -> build/lib/GPflow\n copying GPflow/hmc.py -> build/lib/GPflow\n copying GPflow/sgpr.py -> build/lib/GPflow\n copying GPflow/mean_functions.py -> build/lib/GPflow\n running egg_info\n creating GPflow.egg-info\n writing requirements to GPflow.egg-info/requires.txt\n writing GPflow.egg-info/PKG-INFO\n writing top-level names to GPflow.egg-info/top_level.txt\n writing dependency_links to GPflow.egg-info/dependency_links.txt\n writing manifest file 'GPflow.egg-info/SOURCES.txt'\n reading manifest file 'GPflow.egg-info/SOURCES.txt'\n writing manifest file 'GPflow.egg-info/SOURCES.txt'\n </denchmark-code>\n \n <denchmark-h:h3>gcc</denchmark-h>\n \n <denchmark-code>\u276f\u276f\u276f gcc --version     \n gcc (GCC) 5.3.1 20160406 (Red Hat 5.3.1-6)\n Copyright (C) 2015 Free Software Foundation, Inc.\n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n </denchmark-code>\n \n This time python complained about not having pandas while importing GPflow (strange that it did not complain the last time).\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "BPie", "commentT": "2016-08-21T11:15:36Z", "comment_text": "\n \t\tThanks! I think the problem is that the tensorflow binary is compiled with gcc 4, you're using gcc5. There's a note on the 'adding an op page':\n <denchmark-link:https://www.tensorflow.org/versions/r0.10/how_tos/adding_an_op/index.html>https://www.tensorflow.org/versions/r0.10/how_tos/adding_an_op/index.html</denchmark-link>\n \n \n Note on gcc version 5: gcc5 uses the new C++ ABI. The binary pip packages available on the TensorFlow website are built with gcc4 that uses the older ABI. If you compile your op library with gcc5, add -D_GLIBCXX_USE_CXX11_ABI=0 to the command line to make the library compatible with the older abi.\n \n So I guess the fix is to add that line to setup.py, where we're compiling the additional ops. We'd need to detect gcc4/5, and then optionally add that line to the compile statement.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "BPie", "commentT": "2016-08-21T17:16:33Z", "comment_text": "\n \t\tthanks <denchmark-link:https://github.com/jameshensman>@jameshensman</denchmark-link>\n  , adding   solved the issue.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "BPie", "commentT": "2016-08-21T17:29:08Z", "comment_text": "\n \t\tgreat!\n I'm going to leave this bug report open until it's fixed in GPflow's setup.py\n Thanks again for your input.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "BPie", "commentT": "2016-08-21T17:30:41Z", "comment_text": "\n \t\tThanks for the help :)\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "BPie", "commentT": "2016-08-21T17:50:41Z", "comment_text": "\n \t\tthis  checks the version in my case\n <denchmark-code>import re\n int(re.search('\\d+.', os.popen(\"gcc --version\").read()).group()[0])\n </denchmark-code>\n \n But I don't know if output of gcc --version is always the same\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "BPie", "commentT": "2016-08-21T18:54:14Z", "comment_text": "\n \t\tThanks -  that will work on linux, but on osx gcc is actually clang, so gcc--version spits out all kinds of garbage... your command returns 7 on my macbook!\n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "BPie", "commentT": "2016-08-22T12:28:20Z", "comment_text": "\n \t\tI added the branch setup-gcc5-bug with a fix to setup.py. Can someone test whether this works with gcc5? Also, on macs this isn't an issue, right? Or does clang use gcc somewhere under the hood?\n \t\t"}}}, "commit": {"commit_id": "ae393495cb26c724e330d7eeac162c5faa8ba694", "commit_author": "Mark van der Wilk", "commitT": "2016-08-22 15:58:04+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "setup.py", "file_new_name": "setup.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "26,27,28,29", "deleted_lines": null}}}}}}