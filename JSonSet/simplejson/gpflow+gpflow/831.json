{"BR": {"BR_id": "831", "BR_author": "sanket-kamthe", "BRopenT": "2018-08-22T20:56:49Z", "BRcloseT": "2020-05-07T10:39:02Z", "BR_text": {"BRsummary": "SGPR build likelihood is incorrect for Multioutput", "BRdescription": "\n The multiplication by output_dim in the likelihood is not needed if using multi-output kernels\n link (<denchmark-link:https://github.com/GPflow/GPflow/blob/develop/gpflow/models/sgpr.py#L175>https://github.com/GPflow/GPflow/blob/develop/gpflow/models/sgpr.py#L175</denchmark-link>\n )\n See line 175 below:\n <denchmark-code>        bound += -0.5 * output_dim * tf.reduce_sum(Kdiag) / self.likelihood.variance\n         bound += 0.5 * output_dim * tf.reduce_sum(tf.linalg.diag_part(AAT))\n </denchmark-code>\n \n This is correct if Y is multidim for single kernel.\n There is no clean way I could think of handling this issue without a discussion.\n Also, should we have had a test to find this bug ?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "sanket-kamthe", "commentT": "2018-08-23T07:46:26Z", "comment_text": "\n \t\tHow about something like output_dim = tf.where(tf.less(tf.rank(Kdiag), 2), output_dim, 1)?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "sanket-kamthe", "commentT": "2018-08-23T08:34:13Z", "comment_text": "\n \t\tWell, I would like to avoid putting conditions on the gradient path of the model, especially when we can determine this before compiling the graph.\n Are we anticipating a scenario where rank(kdiag)  changes at run time ?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "sanket-kamthe", "commentT": "2018-08-23T08:50:42Z", "comment_text": "\n \t\tI haven't tested this my self, but I think you can have a condition based on len(Kdiag.shape) == 2 which should work at graph compiling time.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "sanket-kamthe", "commentT": "2018-08-23T10:32:09Z", "comment_text": "\n \t\tI'd suggest that len(Kdiag.shape) == 2 can be dangerous if the shape is None, as at run time the shape could then be anything\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "sanket-kamthe", "commentT": "2019-12-03T22:33:16Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/sanket-kamthe>@sanket-kamthe</denchmark-link>\n  it's an old issue but still seems relevant - would be great if you'd be up for writing a test (that currently would fail, but that we can work towards fixing). Thank you!\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "sanket-kamthe", "commentT": "2020-05-07T10:39:02Z", "comment_text": "\n \t\tClosing this in favour of the larger issue captured in <denchmark-link:https://github.com/GPflow/GPflow/issues/1209>#1209</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "2c318e8fa7608d8fc1c5ca0d58797925978a4a11", "commit_author": "Eric Hammy", "commitT": "2020-02-14 15:10:29+00:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "doc\\source\\notebooks\\advanced\\multioutput.ipynb", "file_new_name": "doc\\source\\notebooks\\advanced\\multioutput.ipynb", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "16,18,53,58,88,101,111,117,134,178,183,187,192,200,203,204,205,206,207,208,209,229,251,259,262,263,264,265,266,267,268,286,291,309,317,320,321,322,336,339,359,368,375,385,394,402,405,406,407,408,409,410,411,412,413,431,436,453,459,460,461,464,483,508,518,527,532,556,561,583,589,592,618,634,639,641,649,658,663,760,766,769,780,785,789,792,799,815,833,837", "deleted_lines": "16,18,53,58,88,101,111,117,134,178,183,187,192,200,203,204,205,206,207,208,209,229,251,259,262,263,264,265,266,267,268,286,291,309,317,320,321,322,336,339,359,368,375,385,394,402,405,406,407,408,409,410,411,412,413,431,436,453,459,460,461,464,483,508,518,527,532,556,561,583,589,592,618,634,639,641,649,658,663,760,766,769,780,785,789,792,799,832,836"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "doc\\source\\notebooks\\advanced\\multioutput.pct.py", "file_new_name": "doc\\source\\notebooks\\advanced\\multioutput.pct.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "357,362,366,369", "deleted_lines": "357,362,366,369", "method_info": {"method_name": "inspect_conditional", "method_params": "inducing_variable_type,kernel_type", "method_startline": "352", "method_endline": "372"}}, "hunk_1": {"Ismethod": 1, "added_lines": "97", "deleted_lines": "97", "method_info": {"method_name": "generate_data", "method_params": "N", "method_startline": "91", "method_endline": "98"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 7, "file_old_name": "gpflow\\kernels\\mo_kernels.py", "file_new_name": "gpflow\\kernels\\mo_kernels.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "41,42,43", "deleted_lines": null, "method_info": {"method_name": "num_latents", "method_params": "self", "method_startline": "41", "method_endline": "43"}}, "hunk_1": {"Ismethod": 1, "added_lines": "115", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,kernels,name", "method_startline": "114", "method_endline": "115"}}, "hunk_2": {"Ismethod": 1, "added_lines": "105", "deleted_lines": "103", "method_info": {"method_name": "K_diag", "method_params": "self,X,full_output_cov", "method_startline": "103", "method_endline": "106"}}, "hunk_3": {"Ismethod": 1, "added_lines": "85,88", "deleted_lines": "86", "method_info": {"method_name": "__init__", "method_params": "self,Kernel,int", "method_startline": "85", "method_endline": "88"}}, "hunk_4": {"Ismethod": 1, "added_lines": "98,101", "deleted_lines": null, "method_info": {"method_name": "K", "method_params": "self,X,X2,full_output_cov", "method_startline": "95", "method_endline": "101"}}, "hunk_5": {"Ismethod": 1, "added_lines": "156", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,kernels,W,name", "method_startline": "155", "method_endline": "157"}}, "hunk_6": {"Ismethod": 1, "added_lines": null, "deleted_lines": "78,81", "method_info": {"method_name": "__init__", "method_params": "self,Kernel,int", "method_startline": "78", "method_endline": "81"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\test_multioutput.py", "file_new_name": "tests\\test_multioutput.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "314,315,316,317,318,319,320,321,322,323,324,325,326,327", "deleted_lines": null, "method_info": {"method_name": "test_shapes_of_mok", "method_params": "", "method_startline": "314", "method_endline": "327"}}}}}}}