{"BR": {"BR_id": "623", "BR_author": "ghost(ghost)", "BRopenT": "2019-12-21T02:13:01Z", "BRcloseT": "2020-02-10T17:58:14Z", "BR_text": {"BRsummary": "sudden bad performance with binary multiplication using broadcasting", "BRdescription": "\n A while ago I was using the binary multiplication primitive using broadcasting for implementing a\n channelwise multiplication. Just multiply two tensors  (N, C, H, W) * (N, C, 1, 1) in the same optimized blocked format. It still works as it used to work only the performance is now very very bad. So Source0 is the tensor (N,C,HW) in nChw8c format and Source1 is a tensor (N, C, 1, 1) also in nChw8c format wich should be broadcasted and multiplied together. I never changed my code and it used to be very fast. For some weird reason it is now the most time consuming primtive in the whole network. Very weird.\n thanks\n DNNL:\n latest master build:\n Environment:\n cpu: AMD 3900X\n os: Windows 10 18363\n compiler: Visual Studio 2019\n cmake: 3.16.1\n <denchmark-code>dnnl_verbose,info,DNNL v1.1.0 (commit 144f241bd3ba474afc9a495d9d312d8f5ed5ddfe)\n dnnl_verbose,info,Detected ISA is Intel AVX2\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:Acdb8a:f0,,,64x3x3x3,0,4692\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:Acdb8a:f0,,,64x3x3x3,11,142\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:abcd:f0 src_f32::blocked:abcd:f0 dst_f32::blocked:abcd:f0,,alg:binary_add,128x3x32x32:128x3x32x32 128x3x32x32,25,5485\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x64x1x1,0,3945\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x64x1x1,0,4079\n ...\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x64x32x32:128x64x32x32 128x64x32x32,0,1988\n nl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1672\n dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,forward_training,data_f32::blocked:aBcd8b:f0 diff_undef::undef::f0,,flags:,mb128ic256ih8iw8,0,4292\n dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,backward_data,data_f32::blocked:aBcd8b:f0 diff_f32::blocked:aBcd8b:f0,,flags:,mb128ic256ih8iw8,0,3418\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1473\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1672\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1538\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1893\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,1726\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,055\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,142\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,3857\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,0148\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1426\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,2201\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,0173\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1484\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,4141\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,0244\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1448\n dnnl_verbose,create,cpu,concat,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,axis:1,128x384x8x8:128x384x8x8:128x384x8x8:128x384x8x8 128x1536x8x8,0,018\n dnnl_verbose,create,cpu,pooling,jit:avx,forward_training,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1338\n dnnl_verbose,create,cpu,pooling,jit:avx,backward_data,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1371\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1209\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1443\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1674\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x1x1:128x1536x1x1 128x1536x1x1,0,1957\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,1958\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,1369\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x1x1:128x384x1x1 128x384x1x1,0,755\n dnnl_verbose,create,cpu,binary,ref:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_mul,128x1536x8x8:128x1536x1x1 128x1536x8x8,0,0088\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1768\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1659\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1651\n dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,forward_training,data_f32::blocked:aBcd8b:f0 diff_undef::undef::f0,,flags:,mb128ic256ih8iw8,0,4304\n dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,backward_data,data_f32::blocked:aBcd8b:f0 diff_f32::blocked:aBcd8b:f0,,flags:,mb128ic256ih8iw8,0,3435\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1493\n dnnl_verbose,create,cpu,sum,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,,128x256x8x8,0,0145\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1608\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1471\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1676\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,1763\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,0552\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1491\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,3854\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,0149\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1389\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,2138\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,0176\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1558\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,4173\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,0183\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1356\n dnnl_verbose,create,cpu,concat,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,axis:1,128x384x8x8:128x384x8x8:128x384x8x8:128x384x8x8 128x1536x8x8,0,0189\n dnnl_verbose,create,cpu,pooling,jit:avx,forward_training,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1329\n dnnl_verbose,create,cpu,pooling,jit:avx,backward_data,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1338\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1174\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1419\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1632\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x1x1:128x1536x1x1 128x1536x1x1,0,1948\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,2006\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,1356\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x1x1:128x384x1x1 128x384x1x1,0,2075\n dnnl_verbose,create,cpu,binary,ref:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_mul,128x1536x8x8:128x1536x1x1 128x1536x8x8,0,00870001\n dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1797\n dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1788\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1711\n dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,forward_training,data_f32::blocked:aBcd8b:f0 diff_undef::undef::f0,,flags:,mb128ic256ih8iw8,0,4283\n dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,backward_data,data_f32::blocked:aBcd8b:f0 diff_f32::blocked:aBcd8b:f0,,flags:,mb128ic256ih8iw8,0,3406\n dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1528\n dnnl_verbose,create,cpu,sum,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,,128x256x8x8,0,0141\n dnnl_verbose,create,cpu,reorder,simple:any,undef,src_f32::blocked:abcd:f0 dst_f32:p:blocked:ABcd8b8a:f0,,,10x256x1x1,0,0339\n dnnl_verbose,exec,cpu,reorder,simple:any,undef,src_f32::blocked:abcd:f0 dst_f32:p:blocked:ABcd8b8a:f0,,,10x256x1x1,0,5078\n </denchmark-code>\n \n (edited by <denchmark-link:https://github.com/rsdubtso>@rsdubtso</denchmark-link>\n  for formatting)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ghost(ghost)", "commentT": "2019-12-22T04:53:48Z", "comment_text": "\n \t\tI think I see a ~10% degradation between the <denchmark-link:https://github.com/oneapi-src/oneDNN/commit/2e27c61d8b2c5dd01339f86ecbb7ca8332a7c0a5>2e27c61</denchmark-link>\n  and <denchmark-link:https://github.com/oneapi-src/oneDNN/commit/d279b39d978b7d3d3f4f69a427f4cb91d754b9fe>d279b39</denchmark-link>\n  (tip of master). The degradation seems to have been introduced in <denchmark-link:https://github.com/oneapi-src/oneDNN/commit/25bca58efac0cc59cb245c3dd62f9d4b93b986cd>25bca58</denchmark-link>\n .\n However, I do not see any drastic degradation. Can you reproduce your issue with benchdnn? Here's the line I used for testing on my laptop:\n <denchmark-code>.\\tests\\benchdnn\\Release\\benchdnn.exe --binary --mode=p --sdt=f32:f32 --ddt=f32 --alg=MUL --inplace=false --stag=nChw8c:nChw8c 256x256x32x32:256x256x1x1\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ghost(ghost)", "commentT": "2019-12-22T05:06:08Z", "comment_text": "\n \t\tUnfortunately, 144f241bd3ba474afc9a495d9d312d8f5ed5ddfe does not resolve a hash within the DNNL repo.\n I see two binary_mul lines in the verbose log with broadcast that are compute the same operation. For this case, I also see about 10% degradation. Is the data above for 'good' or 'bad' case?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ghost(ghost)", "commentT": "2019-12-22T07:16:32Z", "comment_text": "\n \t\tSadly, there are no good ones, the two binary_mul in the log are both really bad performance wise.\n <denchmark-code>benchdnn.exe --binary --mode=p --sdt=f32:f32 --ddt=f32 --alg=MUL --inplace=false --stag=nChw8c:nChw8c 256x256x32x32:256x256x1x1\n Output template: perf,%engine%,%desc%,%-time%,%0time%\n perf,cpu,--binary --stag=aBcd8b:aBcd8b --alg=MUL --inplace=false 256x256x32x32:256x256x1x1,299.79,300.945\n tests:1 passed:0 skipped:0 mistrusted:0 unimplemented:0 failed:0 listed:0\n total perf: min(ms):299.79 avg(ms):300.945\n </denchmark-code>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "ghost(ghost)", "commentT": "2019-12-22T07:25:26Z", "comment_text": "\n \t\tSorry, I should have worded my question better. Can you share a verbose log collected with DNNL from the revision when you observed good results?\n Alternatively, can you try applying the following patch and see if it brings performance back?\n diff --git a/src/cpu/ref_binary.cpp b/src/cpu/ref_binary.cpp\n index 0261096d2..13e2f7ef8 100644\n --- a/src/cpu/ref_binary.cpp\n +++ b/src/cpu/ref_binary.cpp\n @@ -68,9 +68,10 @@ void ref_binary_t<data_type>::execute_ref(const exec_ctx_t &ctx) const {\n          return src1_d.off_v(dims);\n      };\n \n +    const bool is_tensor_op = pd()->is_tensor_op();\n      parallel_nd(nelems_A, [&](dim_t i) {\n          auto off_A = src0_d.off_l(i);\n -        auto off_B = pd()->is_tensor_op() ? src1_d.off_l(i) : map_idx_B(i);\n +        auto off_B = is_tensor_op ? src1_d.off_l(i) : map_idx_B(i);\n          perform_op(&dst[off_A], src0[off_A], src1[off_B]);\n      });\n  }\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "ghost(ghost)", "commentT": "2019-12-22T08:14:02Z", "comment_text": "\n \t\tThe patch did give a +/- 10% increase in performance. But the timings are still very bad. About 10x slower than my own naive implementation. I will start looking for a revision without this behaviour.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "ghost(ghost)", "commentT": "2019-12-22T16:22:47Z", "comment_text": "\n \t\tThanks for the update. The code above is the reference version deals with arbitrary memory formats and thus is very slow. There was never an optimized version that supported broadcasting and that worked on blocked memory formats.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "ghost(ghost)", "commentT": "2019-12-22T22:12:48Z", "comment_text": "\n \t\tMy excuses in thinking this was something that worked fast and optimized in the past. I will use\n my own implementation instead. Thanks anyway.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "ghost(ghost)", "commentT": "2020-02-09T02:36:00Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/zulma46>@zulma46</denchmark-link>\n , we've promoted a patch to our internal repository where the broadcast problem performs on par with full tensor problem. The change is targeting DNNL v1.3 but will be available in master branch soon. Please try once commit is available. Thanks!\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "ghost(ghost)", "commentT": "2020-02-09T04:12:15Z", "comment_text": "\n \t\tGreat news!\n Thanks for the info.\n \t\t"}}}, "commit": {"commit_id": "95306fe2fbc95d11b37f472372f942ecff05229f", "commit_author": "Dmitrii Zarukin", "commitT": "2020-02-07 16:49:59-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 24, "file_old_name": "src\\cpu\\binary\\jit_uni_binary.cpp", "file_new_name": "src\\cpu\\binary\\jit_uni_binary.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "456", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::prepare_isa_subkernel", "method_params": "", "method_startline": "453", "method_endline": "457"}}, "hunk_1": {"Ismethod": 1, "added_lines": "212,213,214,215,216,217,220,221,225,226,227,233,237,238,239", "deleted_lines": "227,238", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_kernel_t::forward", "method_params": "", "method_startline": "208", "method_endline": "252"}}, "hunk_2": {"Ismethod": 1, "added_lines": "182", "deleted_lines": "182", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_kernel_t::src1_ptr", "method_params": "offt", "method_startline": "181", "method_endline": "183"}}, "hunk_3": {"Ismethod": 1, "added_lines": "61", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::binary_kernel_t::op_type", "method_params": "", "method_startline": "61", "method_endline": "61"}}, "hunk_4": {"Ismethod": 1, "added_lines": "447", "deleted_lines": "447", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::~jit_uni_binary_subkernel_t", "method_params": "", "method_startline": "447", "method_endline": "447"}}, "hunk_5": {"Ismethod": 1, "added_lines": "599,600,601,602,603,604", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx2,src_type>::compute_bcast", "method_params": "tail", "method_startline": "599", "method_endline": "604"}}, "hunk_6": {"Ismethod": 1, "added_lines": "487", "deleted_lines": "485,486,487,488,491,492", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::store_no_tail", "method_params": "dst,src,dt", "method_startline": "482", "method_endline": "492"}}, "hunk_7": {"Ismethod": 1, "added_lines": "388,389,390,391,392,393,394,397,398,402", "deleted_lines": "391,404", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core_bf16,src_type>::compute_dst", "method_params": "unroll,tail", "method_startline": "385", "method_endline": "404"}}, "hunk_8": {"Ismethod": 1, "added_lines": "378,379,380,381,382,383", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core_bf16,src_type>::compute_bcast", "method_params": "tail", "method_startline": "378", "method_endline": "383"}}, "hunk_9": {"Ismethod": 1, "added_lines": "533,534,535,536,537,538", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::compute_bcast", "method_params": "tail", "method_startline": "533", "method_endline": "538"}}, "hunk_10": {"Ismethod": 1, "added_lines": "500", "deleted_lines": "496", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::store_tail", "method_params": "dst,opmask,src,dt", "method_startline": "494", "method_endline": "505"}}, "hunk_11": {"Ismethod": 1, "added_lines": "445,446,447,448,449", "deleted_lines": "447", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::prepare_bf16_bcast_mask", "method_params": "", "method_startline": "445", "method_endline": "451"}}, "hunk_12": {"Ismethod": 1, "added_lines": "543,544,545,546,547,548,549,552,553,557", "deleted_lines": "540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::compute_dst", "method_params": "unroll,tail", "method_startline": "540", "method_endline": "559"}}, "hunk_13": {"Ismethod": 1, "added_lines": "366,367,368,369,370,371,372,373,374,375,376", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core_bf16,src_type>::bcast", "method_params": "dst,src,dt", "method_startline": "366", "method_endline": "376"}}, "hunk_14": {"Ismethod": 1, "added_lines": "299,300,301,302", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core_bf16,src_type>::prepare_isa_subkernel", "method_params": "", "method_startline": "299", "method_endline": "302"}}, "hunk_15": {"Ismethod": 1, "added_lines": "186", "deleted_lines": "186,187", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_kernel_t::dst_ptr", "method_params": "offt", "method_startline": "185", "method_endline": "187"}}, "hunk_16": {"Ismethod": 1, "added_lines": "438,440,441,442,443", "deleted_lines": "439", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::prepare_bf16_emulator", "method_params": "", "method_startline": "436", "method_endline": "443"}}, "hunk_17": {"Ismethod": 1, "added_lines": "609,610,611,612,613,614,615,618,619,623", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx2,src_type>::compute_dst", "method_params": "unroll,tail", "method_startline": "606", "method_endline": "625"}}, "hunk_18": {"Ismethod": 1, "added_lines": "521,522,523,524,525,526,527,528,529,530,531", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core,src_type>::bcast", "method_params": "dst,src,dt", "method_startline": "521", "method_endline": "531"}}, "hunk_19": {"Ismethod": 1, "added_lines": "291,292,293,294,295,296,297", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_subkernel_t<avx512_core_bf16,src_type>::prepare_bf16_bcast_mask", "method_params": "", "method_startline": "291", "method_endline": "297"}}, "hunk_20": {"Ismethod": 1, "added_lines": "113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,147,148", "deleted_lines": "124,133,137,141", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_kernel_t::init", "method_params": "", "method_startline": "111", "method_endline": "162"}}, "hunk_21": {"Ismethod": 1, "added_lines": "178", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_kernel_t::src0_ptr", "method_params": "offt", "method_startline": "177", "method_endline": "179"}}, "hunk_22": {"Ismethod": 1, "added_lines": "667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,751", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_t<src_type>::execute", "method_params": "ctx", "method_startline": "659", "method_endline": "753"}}, "hunk_23": {"Ismethod": 1, "added_lines": "169", "deleted_lines": "166,167,168,171,175", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_kernel_t::load_kernel_params", "method_params": "", "method_startline": "164", "method_endline": "175"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\cpu\\binary\\jit_uni_binary.hpp", "file_new_name": "src\\cpu\\binary\\jit_uni_binary.hpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_t::pd_t::is_applicable", "method_params": "", "method_startline": "63", "method_endline": "98"}}, "hunk_1": {"Ismethod": 1, "added_lines": "52", "deleted_lines": "52,53,54", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_binary_t::pd_t::init", "method_params": "", "method_startline": "43", "method_endline": "60"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 7, "file_old_name": "src\\cpu\\binary\\jit_uni_i8i8_binary.cpp", "file_new_name": "src\\cpu\\binary\\jit_uni_i8i8_binary.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "138", "deleted_lines": "137,143", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::load_kernel_params", "method_params": "", "method_startline": "133", "method_endline": "148"}}, "hunk_1": {"Ismethod": 1, "added_lines": "159", "deleted_lines": "159", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::dst_ptr", "method_params": "offt", "method_startline": "158", "method_endline": "160"}}, "hunk_2": {"Ismethod": 1, "added_lines": "109,110", "deleted_lines": "109", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::init", "method_params": "", "method_startline": "107", "method_endline": "131"}}, "hunk_3": {"Ismethod": 1, "added_lines": "232,233,236,237,240,241,252", "deleted_lines": "232,233,236,239,240,251", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::forward", "method_params": "", "method_startline": "221", "method_endline": "265"}}, "hunk_4": {"Ismethod": 1, "added_lines": "155", "deleted_lines": "155", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::src1_ptr", "method_params": "offt", "method_startline": "154", "method_endline": "156"}}, "hunk_5": {"Ismethod": 1, "added_lines": "436,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498", "deleted_lines": "430,436,437,438,439,440,441,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_t<src0_type,src1_type>::execute", "method_params": "ctx", "method_startline": "429", "method_endline": "501"}}, "hunk_6": {"Ismethod": 1, "added_lines": "151", "deleted_lines": "151", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::src0_ptr", "method_params": "offt", "method_startline": "150", "method_endline": "152"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\cpu\\binary\\jit_uni_i8i8_binary.hpp", "file_new_name": "src\\cpu\\binary\\jit_uni_i8i8_binary.hpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89", "deleted_lines": null, "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_t::pd_t::is_applicable", "method_params": "", "method_startline": "71", "method_endline": "89"}}, "hunk_1": {"Ismethod": 1, "added_lines": "51", "deleted_lines": "51,52,53", "method_info": {"method_name": "dnnl::impl::cpu::jit_uni_i8i8_binary_t::pd_t::init", "method_params": "", "method_startline": "42", "method_endline": "61"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tests\\benchdnn\\inputs\\binary\\shapes_common", "file_new_name": "tests\\benchdnn\\inputs\\binary\\shapes_common", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1,2,3,4,6,7,8,9,10,12,15,16", "deleted_lines": "1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,28"}}}}}}