{"BR": {"BR_id": "1388", "BR_author": "tasercake", "BRopenT": "2020-04-06T04:36:54Z", "BRcloseT": "2020-04-17T22:18:30Z", "BR_text": {"BRsummary": "Use isinstance() instead of type() in trainer.distrib_parts.check_gpus_data_type", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n When instantiating a Trainer object, it makes sense to be able to pass a subclass of list.\n Ideally, this would be something even more general like collections.abc.Sequence, but I'm not too familiar with Lightning's codebase and that change would have a greater likelihood of breaking things.\n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n Instantiate a Trainer with the gpus parameter being a subclass of list.\n <denchmark-h:h4>Code sample</denchmark-h>\n \n >>> from pytorch_lightning import Trainer\n >>> class MyList(list):\n ...     pass\n ... \n >>> gpus = MyList([0])\n >>> t = Trainer(gpus=gpus)\n This produces\n <denchmark-code>Traceback (most recent call last):\n   File \"<stdin>\", line 1, in <module>\n   File \"/opt/anaconda/miniconda3/envs/ai/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py\", line 366, in __init__\n     self.data_parallel_device_ids = parse_gpu_ids(self.gpus)\n   File \"/opt/anaconda/miniconda3/envs/ai/lib/python3.7/site-packages/pytorch_lightning/trainer/distrib_parts.py\", line 613, in parse_gpu_ids\n     check_gpus_data_type(gpus)\n   File \"/opt/anaconda/miniconda3/envs/ai/lib/python3.7/site-packages/pytorch_lightning/trainer/distrib_parts.py\", line 561, in check_gpus_data_type\n     raise MisconfigurationException(\"GPUs must be int, string or list of ints or None.\")\n pytorch_lightning.utilities.debugging.MisconfigurationException: GPUs must be int, string or list of ints or None.\n </denchmark-code>\n \n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n Trainer is instantiated normally as it would had a list been passed.\n <denchmark-h:h3>Environment</denchmark-h>\n \n \n PyTorch Version: 1.4.0\n PyTorch Lightning Version: 0.7.1\n OS: Ubuntu 19.10\n How you installed PyTorch: pip\n Python version: 3.7\n \n <denchmark-h:h3>Potential Fix</denchmark-h>\n \n In pytorch_lightning/trainer/distrib_parts.py check types using isinstance() instead of type():\n def check_gpus_data_type(gpus):\n     # if gpus is not None and type(gpus) not in (int, str, list):\n     if gpus is not None and not isinstance(gpus, (int, str, list)):\n         raise MisconfigurationException(\"GPUs must be int, string or list of ints or None.\")\n I'll put in a PR if this change sounds good\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "tasercake", "commentT": "2020-04-06T04:37:36Z", "comment_text": "\n \t\tHi! thanks for your contribution!, great first issue!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "tasercake", "commentT": "2020-04-08T11:55:13Z", "comment_text": "\n \t\tI do like this shift from  to an  which extend accepted types also to child...\n as always a good PR is always welcome\n cc: <denchmark-link:https://github.com/orgs/PyTorchLightning/teams/core-contributors>@PyTorchLightning/core-contributors</denchmark-link>\n  <denchmark-link:https://github.com/jeremyjordan>@jeremyjordan</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "a22a8142ac65668781a6e6f76d3c4e55ea7c249a", "commit_author": "Krishna Penukonda", "commitT": "2020-04-17 18:18:29-04:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "pytorch_lightning\\trainer\\distrib_parts.py", "file_new_name": "pytorch_lightning\\trainer\\distrib_parts.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "569", "deleted_lines": "569", "method_info": {"method_name": "check_gpus_data_type", "method_params": "gpus", "method_startline": "561", "method_endline": "570"}}}}}}}