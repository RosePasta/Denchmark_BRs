{"BR": {"BR_id": "1218", "BR_author": "sebnyberg", "BRopenT": "2020-11-18T12:14:34Z", "BRcloseT": "2020-11-24T03:51:02Z", "BR_text": {"BRsummary": "IngressService knative visibility label not accepted by knative controller", "BRdescription": "\n /kind bug\n Knative serving version: v0.18.0\n Kfserving version: v0.5.0-rc0\n Istio version: 1.7.4\n Attempting to deploy an InferenceService with the label serving.knative.dev/visibility: cluster-local causes an error in the knative controller.\n Adding the label directly to the knative service works as expected.\n InferenceService:\n apiVersion: \"serving.kubeflow.org/v1alpha2\"\n kind: \"InferenceService\"\n metadata:\n   name: \"sklearn-iris\"\n   labels:\n     serving.knative.dev/visibility: cluster-local\n spec:\n   default:\n     predictor:\n       sklearn:\n         storageUri: \"gs://kfserving-samples/models/sklearn/iris\"\n Error from the knative-controller:\n {\n   \"level\": \"error\",\n   \"ts\": \"2020-11-18T11:29:46.178Z\",\n   \"logger\": \"controller.configuration-controller.knative.dev-serving-pkg-reconciler-configuration.Reconciler\",\n   \"caller\": \"configuration/reconciler.go:302\",\n   \"msg\": \"Returned an error\",\n   \"commit\": \"0a890ef\",\n   \"knative.dev/pod\": \"controller-6574b957d9-ppmmg\",\n   \"knative.dev/controller\": \"configuration-controller\",\n   \"knative.dev/traceid\": \"49e8d18c-a141-4042-b6f2-bd9503ed5cbd\",\n   \"knative.dev/key\": \"kfserving-test/sklearn-iris-predictor-default\",\n   \"targetMethod\": \"ReconcileKind\",\n   \"error\": \"failed to create Revision: admission webhook \\\"validation.webhook.serving.knative.dev\\\" denied the request: validation failed: invalid key name \\\"serving.knative.dev/visibility\\\": metadata.labels\",\n   \"stacktrace\": \"knative.dev/serving/pkg/client/injection/reconciler/serving/v1/configuration.(*reconcilerImpl).Reconcile\\n\\tknative.dev/serving/pkg/client/injection/reconciler/serving/v1/configuration/reconciler.go:302\\nknative.dev/pkg/controller.(*Impl).processNextWorkItem\\n\\tknative.dev/pkg@v0.0.0-20200922164940-4bf40ad82aab/controller/controller.go:513\\nknative.dev/pkg/controller.(*Impl).RunContext.func3\\n\\tknative.dev/pkg@v0.0.0-20200922164940-4bf40ad82aab/controller/controller.go:451\"\n }\n Judging by kfserving logs, it seems to be repeatedly trying to reconcile the ingress (and failing on the knative side):\n <denchmark-code>2020-11-18 12:18:50 | {\"level\":\"info\",\"ts\":1605698330.685677,\"logger\":\"v1beta1Controllers.InferenceService\",\"msg\":\"Reconciling ingress for inference service\",\"isvc\":\"sklearn-iris\"}\n 2020-11-18 12:18:50 | {\"level\":\"info\",\"ts\":1605698330.685352,\"logger\":\"v1beta1Controllers.InferenceService\",\"msg\":\"Reconciling inference service\",\"apiVersion\":\"serving.kubeflow.org/v1beta1\",\"isvc\":\"sklearn-iris\"}\n 2020-11-18 12:18:50 | {\"level\":\"info\",\"ts\":1605698330.0998747,\"logger\":\"v1beta1Controllers.InferenceService\",\"msg\":\"Reconciling ingress for inference service\",\"isvc\":\"sklearn-iris\"}\n 2020-11-18 12:18:50 | {\"level\":\"info\",\"ts\":1605698330.099557,\"logger\":\"v1beta1Controllers.InferenceService\",\"msg\":\"Reconciling inference service\",\"apiVersion\":\"serving.kubeflow.org/v1beta1\",\"isvc\":\"sklearn-iris\"}\n 2020-11-18 12:18:50 | {\"level\":\"info\",\"ts\":1605698330.0893662,\"logger\":\"v1beta1Controllers.InferenceService\",\"msg\":\"Reconciling ingress for inference service\",\"isvc\":\"sklearn-iris\"}\n [...]\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "sebnyberg", "commentT": "2020-11-18T12:40:53Z", "comment_text": "\n \t\tSince kfserving v0.5+ it is possible to create a private service by setting the default domain to svc.cluster.local in the knative config like this:\n apiVersion: v1\n kind: ConfigMap\n metadata:\n   name: config-domain\n   namespace: knative-serving\n   labels:\n     serving.knative.dev/release: \"v0.18.0\"\n data:\n   svc.cluster.local: \"\"\n Feel free to close this bug if label passing as in the original example is not supposed to be supported.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "sebnyberg", "commentT": "2020-11-18T14:25:26Z", "comment_text": "\n \t\tThe label is at least accepted by knative for the following CRDs: ksvc, route, service.\n Deploying a ksvc using <denchmark-link:https://knative.dev/docs/serving/cluster-local-route/#label-a-service-to-be-cluster-local>this guide</denchmark-link>\n  works as expected:\n kn service create helloworld-go --image gcr.io/knative-samples/helloworld-go --env TARGET=\"Go Sample v1\"\n \n kubectl label kservice  helloworld-go serving.knative.dev/visibility=cluster-local\n \n # works\n kubectl get kservice helloworld-go | grep cluster-local\n Trying to label a ksvc  created by kfserving gets removed almost immediately (as expected).\n Based on kfserving logs it looks like it's trying to re-create an ingress. Perhaps the label is passed to some component for which it's not valid?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "sebnyberg", "commentT": "2020-11-22T14:08:34Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/sebnyberg>@sebnyberg</denchmark-link>\n  I fixed the issue but I am not getting the validation error above, maybe that's from the latest knative version?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "sebnyberg", "commentT": "2020-11-24T16:00:22Z", "comment_text": "\n \t\tDon't know how to verify the fix before it is merged in so I'll trust your judgement. Thanks for the quick fix.\n \t\t"}}}, "commit": {"commit_id": "8a8f33a85a12ea4813f726b41581cbf9335ede9b", "commit_author": "Dan Sun", "commitT": "2020-11-23 19:51:01-08:00", "changed_files": {"file_0": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "docs\\samples\\v1beta1\\advanced\\cluster_local.yaml"}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "hack\\quick_install.sh", "file_new_name": "hack\\quick_install.sh", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "4", "deleted_lines": "4"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "pkg\\apis\\serving\\v1beta1\\openapi_generated.go", "file_new_name": "pkg\\apis\\serving\\v1beta1\\openapi_generated.go", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "4689", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_SKLearnSpec", "method_params": "ReferenceCallback", "method_startline": "4439", "method_endline": "4695"}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "3903", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_PredictorExtensionSpec", "method_params": "ReferenceCallback", "method_startline": "3653", "method_endline": "3909"}}, "hunk_2": {"Ismethod": 1, "added_lines": null, "deleted_lines": "4947", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_TFServingSpec", "method_params": "ReferenceCallback", "method_startline": "4697", "method_endline": "4953"}}, "hunk_3": {"Ismethod": 1, "added_lines": null, "deleted_lines": "6187", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_XGBoostSpec", "method_params": "ReferenceCallback", "method_startline": "5937", "method_endline": "6193"}}, "hunk_4": {"Ismethod": 1, "added_lines": null, "deleted_lines": "2987", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_ONNXRuntimeSpec", "method_params": "ReferenceCallback", "method_startline": "2737", "method_endline": "2993"}}, "hunk_5": {"Ismethod": 1, "added_lines": null, "deleted_lines": "3245", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_PMMLSpec", "method_params": "ReferenceCallback", "method_startline": "2995", "method_endline": "3251"}}, "hunk_6": {"Ismethod": 1, "added_lines": null, "deleted_lines": "5212", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_TorchServeSpec", "method_params": "ReferenceCallback", "method_startline": "4955", "method_endline": "5218"}}, "hunk_7": {"Ismethod": 1, "added_lines": null, "deleted_lines": "5929", "method_info": {"method_name": "schema_pkg_apis_serving_v1beta1_TritonSpec", "method_params": "ReferenceCallback", "method_startline": "5679", "method_endline": "5935"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "pkg\\constants\\constants.go", "file_new_name": "pkg\\constants\\constants.go", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "207,208,209,210", "deleted_lines": null}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "pkg\\controller\\v1beta1\\inferenceservice\\controller_test.go", "file_new_name": "pkg\\controller\\v1beta1\\inferenceservice\\controller_test.go", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "221,225,260", "deleted_lines": "220,224"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "pkg\\controller\\v1beta1\\inferenceservice\\reconcilers\\ingress\\ingress_reconciler.go", "file_new_name": "pkg\\controller\\v1beta1\\inferenceservice\\reconcilers\\ingress\\ingress_reconciler.go", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "162,177", "deleted_lines": "162", "method_info": {"method_name": "createHTTPRouteDestination", "method_params": "targetHost,string,string", "method_startline": "162", "method_endline": "180"}}, "hunk_1": {"Ismethod": 1, "added_lines": "182,211", "deleted_lines": "210", "method_info": {"method_name": "createHTTPMatchRequest", "method_params": "prefix,targetHost,string,bool,IngressConfig", "method_startline": "182", "method_endline": "215"}}, "hunk_2": {"Ismethod": 1, "added_lines": "182,211", "deleted_lines": "181,210", "method_info": {"method_name": "createHTTPMatchRequest", "method_params": "prefix,targetHost,string,bool", "method_startline": "181", "method_endline": "214"}}, "hunk_3": {"Ismethod": 1, "added_lines": "217,218,219,220,221,222,246,265,266,268,275,276,278,281,282,283,284,285,286,287,288,289,297,298,299,302,303", "deleted_lines": "225,226,227,228,229,245,264,265,267,274,275,277,280,281,282,283,285,292,293,294,295,296,297,298,299,300", "method_info": {"method_name": "createIngress", "method_params": "InferenceService,IngressConfig", "method_startline": "217", "method_endline": "303"}}, "hunk_4": {"Ismethod": 1, "added_lines": "162,177", "deleted_lines": "162", "method_info": {"method_name": "createHTTPRouteDestination", "method_params": "targetHost,string,string", "method_startline": "162", "method_endline": "179"}}, "hunk_5": {"Ismethod": 1, "added_lines": "305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321", "deleted_lines": null, "method_info": {"method_name": "Reconcile", "method_params": "InferenceService", "method_startline": "305", "method_endline": "360"}}}}, "file_6": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "pkg\\controller\\v1beta1\\inferenceservice\\reconcilers\\ingress\\ingress_reconciler_test.go"}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "pkg\\controller\\v1beta1\\inferenceservice\\reconcilers\\knative\\ksvc_reconciler.go", "file_new_name": "pkg\\controller\\v1beta1\\inferenceservice\\reconcilers\\knative\\ksvc_reconciler.go", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "111,112,113,124", "deleted_lines": "110,121", "method_info": {"method_name": "createKnativeService", "method_params": "ObjectMeta,ComponentExtensionSpec,PodSpec,ComponentStatusSpec", "method_startline": "63", "method_endline": "140"}}, "hunk_1": {"Ismethod": 1, "added_lines": "111,112,113", "deleted_lines": null, "method_info": {"method_name": "bool", "method_params": "", "method_startline": "111", "method_endline": "113"}}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "test\\scripts\\run-e2e-tests.sh", "file_new_name": "test\\scripts\\run-e2e-tests.sh", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "27", "deleted_lines": "27"}}}}}}