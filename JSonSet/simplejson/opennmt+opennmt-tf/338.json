{"BR": {"BR_id": "338", "BR_author": "Goofy-G", "BRopenT": "2019-02-18T06:04:38Z", "BRcloseT": "2019-03-04T13:17:45Z", "BR_text": {"BRsummary": "Receiving \"Inputs to operation seq2seq/Select of type Select must have the same size and shape\"", "BRdescription": "\n Hi\n When I trained NMTSmall model, I have met this crash. But I used older version of opennmt with same data, there was not happening this issue .\n Traceback (most recent call last):\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1278, in _do_call\n return fn(*args)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1263, in _run_fn\n options, feed_dict, fetch_list, target_list, run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1350, in _call_tf_sessionrun\n run_metadata)\n tensorflow.python.framework.errors_impl.InvalidArgumentError: Inputs to operation seq2seq/Select of type Select must have the same size and shape.  Input 0: [160,8] != input 1: [160,7]\n [[Node: seq2seq/Select = Select[T=DT_STRING, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](seq2seq/Equal, seq2seq/GatherNd, seq2seq/Reshape)]]\n [[Node: seq2seq/decoder_2/while/grow_finished_topk_seq/_410 = _Send<denchmark-link:seq2seq/decoder_2/while/grow_finished_topk_seq>T=DT_INT32, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1653_seq2seq/decoder_2/while/grow_finished_topk_seq\", _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"</denchmark-link>\n ]]\n During handling of the above exception, another exception occurred:\n Traceback (most recent call last):\n File \"/usr/local/bin/onmt-main\", line 10, in \n sys.exit(main())\n File \"/usr/local/lib/python3.5/dist-packages/opennmt/bin/main.py\", line 172, in main\n runner.train_and_evaluate(checkpoint_path=args.checkpoint_path)\n File \"/usr/local/lib/python3.5/dist-packages/opennmt/runner.py\", line 283, in train_and_evaluate\n tf.estimator.train_and_evaluate(estimator, train_spec, eval_spec)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 451, in train_and_evaluate\n return executor.run()\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 590, in run\n return self.run_local()\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 691, in run_local\n saving_listeners=saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 376, in train\n loss = self._train_model(input_fn, hooks, saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1145, in _train_model\n return self._train_model_default(input_fn, hooks, saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1173, in _train_model_default\n saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1451, in _train_with_estimator_spec\n _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 583, in run\n run_metadata=run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1059, in run\n run_metadata=run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1150, in run\n raise six.reraise(*original_exc_info)\n File \"/usr/local/lib/python3.5/dist-packages/six.py\", line 693, in reraise\n raise value\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1135, in run\n return self._sess.run(*args, **kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1215, in run\n run_metadata=run_metadata))\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/basic_session_run_hooks.py\", line 464, in after_run\n if self._save(run_context.session, global_step):\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/basic_session_run_hooks.py\", line 489, in _save\n if l.after_save(session, step):\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 497, in after_save\n self._evaluate(global_step_value)  # updates self.eval_result\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 517, in _evaluate\n self._evaluator.evaluate_and_export())\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 884, in evaluate_and_export\n hooks=self._eval_spec.hooks)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 470, in evaluate\n output_dir=self.eval_dir(name))\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1501, in _evaluate_run\n config=self._session_config)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/evaluation.py\", line 212, in _evaluate_once\n session.run(eval_ops, feed_dict)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 583, in run\n run_metadata=run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1059, in run\n run_metadata=run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1150, in run\n raise six.reraise(*original_exc_info)\n File \"/usr/local/lib/python3.5/dist-packages/six.py\", line 693, in reraise\n raise value\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1135, in run\n return self._sess.run(*args, **kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1207, in run\n run_metadata=run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 987, in run\n return self._sess.run(*args, **kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 877, in run\n run_metadata_ptr)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1100, in _run\n feed_dict_tensor, options, run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1272, in _do_run\n run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1291, in _do_call\n raise type(e)(node_def, op, message)\n tensorflow.python.framework.errors_impl.InvalidArgumentError: Inputs to operation seq2seq/Select of type Select must have the same size and shape.  Input 0: [160,8] != input 1: [160,7]\n [[Node: seq2seq/Select = Select[T=DT_STRING, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](seq2seq/Equal, seq2seq/GatherNd, seq2seq/Reshape)]]\n [[Node: seq2seq/decoder_2/while/grow_finished_topk_seq/_410 = _Send<denchmark-link:seq2seq/decoder_2/while/grow_finished_topk_seq>T=DT_INT32, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1653_seq2seq/decoder_2/while/grow_finished_topk_seq\", _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"</denchmark-link>\n ]]\n Caused by op 'seq2seq/Select', defined at:\n File \"/usr/local/bin/onmt-main\", line 10, in \n sys.exit(main())\n File \"/usr/local/lib/python3.5/dist-packages/opennmt/bin/main.py\", line 172, in main\n runner.train_and_evaluate(checkpoint_path=args.checkpoint_path)\n File \"/usr/local/lib/python3.5/dist-packages/opennmt/runner.py\", line 283, in train_and_evaluate\n tf.estimator.train_and_evaluate(estimator, train_spec, eval_spec)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 451, in train_and_evaluate\n return executor.run()\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 590, in run\n return self.run_local()\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 691, in run_local\n saving_listeners=saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 376, in train\n loss = self._train_model(input_fn, hooks, saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1145, in _train_model\n return self._train_model_default(input_fn, hooks, saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1173, in _train_model_default\n saving_listeners)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1451, in _train_with_estimator_spec\n _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 583, in run\n run_metadata=run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1059, in run\n run_metadata=run_metadata)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1135, in run\n return self._sess.run(*args, **kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/monitored_session.py\", line 1215, in run\n run_metadata=run_metadata))\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/basic_session_run_hooks.py\", line 464, in after_run\n if self._save(run_context.session, global_step):\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/basic_session_run_hooks.py\", line 489, in _save\n if l.after_save(session, step):\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 497, in after_save\n self._evaluate(global_step_value)  # updates self.eval_result\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 517, in _evaluate\n self._evaluator.evaluate_and_export())\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 884, in evaluate_and_export\n hooks=self._eval_spec.hooks)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 463, in evaluate\n input_fn, hooks, checkpoint_path)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1463, in _evaluate_build_graph\n features, labels, model_fn_lib.ModeKeys.EVAL, self.config)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 1133, in _call_model_fn\n model_fn_results = self._model_fn(features=features, **kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/opennmt/models/model.py\", line 152, in _model_fn\n logits, predictions = self._build(features, labels, params, mode, config=config)\n File \"/usr/local/lib/python3.5/dist-packages/opennmt/models/sequence_to_sequence.py\", line 276, in _build\n replaced_target_tokens = replace_unknown_target(target_tokens, source_tokens, attention)\n File \"/usr/local/lib/python3.5/dist-packages/opennmt/models/sequence_to_sequence.py\", line 516, in replace_unknown_target\n y=target_tokens)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 2608, in where\n return gen_math_ops.select(condition=condition, x=x, y=y, name=name)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 6876, in select\n \"Select\", condition=condition, t=x, e=y, name=name)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n op_def=op_def)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py\", line 454, in new_func\n return func(*args, **kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 3155, in create_op\n op_def=op_def)\n File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1717, in init\n self._traceback = tf_stack.extract_stack()\n InvalidArgumentError (see above for traceback): Inputs to operation seq2seq/Select of type Select must have the same size and shape.  Input 0: [160,8] != input 1: [160,7]\n [[Node: seq2seq/Select = Select[T=DT_STRING, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](seq2seq/Equal, seq2seq/GatherNd, seq2seq/Reshape)]]\n [[Node: seq2seq/decoder_2/while/grow_finished_topk_seq/_410 = _Send<denchmark-link:seq2seq/decoder_2/while/grow_finished_topk_seq>T=DT_INT32, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1653_seq2seq/decoder_2/while/grow_finished_topk_seq\", _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"</denchmark-link>\n ]]\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Goofy-G", "commentT": "2019-02-18T08:51:17Z", "comment_text": "\n \t\tHi,\n Can you share the full configuration file and the command line?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Goofy-G", "commentT": "2019-02-18T09:25:47Z", "comment_text": "\n \t\tThe command line is:\n onmt-main train_and_eval --model_type NMTSmall --config myconfig.yml\n The configuration is:\n data:\n   eval_features_file: /root/data/20190214/dev.ocr\n   eval_labels_file: /root/data/20190214/dev.std\n   source_words_vocabulary: /root/data/20190214/vocab.ocr\n   target_words_vocabulary: /root/data/20190214/vocab.std\n   train_features_file: /root/data/20190214/train.ocr\n   train_labels_file: /root/data/20190214/train.std\n eval:\n   batch_size: 32\n   eval_delay: 36000\n   export: true\n   exporters: last\n   external_evaluations: BLEU\n   num_threads: 4\n   save_eval_predictions: true\n infer:\n   batch_size: 32\n   bucket_width: null\n   n_best: 1\n   num_threads: 1\n model_dir: /root/models/20190214/words\n params:\n   beam_width: 5\n   clip_gradients: 5.0\n   decat_type: exponential_decay\n   decay_rate: 0.7\n   decay_steps: 50000\n   learning_rate: 1.0\n   maximum_iterations: 250\n   optimizer: GradientDescentOptimizer\n   param_init: 0.1\n   replace_unknown_target: true\n   start_decay_steps: 500000\n score:\n   batch_size: 64\n train:\n   batch_size: 64\n   batch_type: examples\n   bucket_width: 5\n   maximum_features_length: 30\n   maximum_labels_length: 30\n   sample_buffer_size: -1\n   save_checkpoints_steps: 10000\n   save_summary_steps: 1000\n   train_steps: 1000000\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Goofy-G", "commentT": "2019-02-27T09:43:32Z", "comment_text": "\n \t\tHi\n Today I upgraded OpenNMT to 1.20.1, however I have the same problem too\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Goofy-G", "commentT": "2019-02-28T11:07:39Z", "comment_text": "\n \t\tDisabling the beam search is a quick workaround:\n params:\n   beam_width: 1\n It would help if you can share the checkpoint + the vocabularies + the test data so that I can reproduce the error.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Goofy-G", "commentT": "2019-03-04T07:42:22Z", "comment_text": "\n \t\tHi\n I setted \"beam_with\" as 1, it also failed.\n Here is data\n <denchmark-link:https://github.com/OpenNMT/OpenNMT-tf/files/2924752/temp.zip>temp.zip</denchmark-link>\n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Goofy-G", "commentT": "2019-03-04T08:28:21Z", "comment_text": "\n \t\tThanks, but some checkpoint files are missing. There should also be files ending with .meta, .index, and .data.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "Goofy-G", "commentT": "2019-03-04T09:28:02Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/OpenNMT/OpenNMT-tf/files/2925659/temp.zip>temp.zip</denchmark-link>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "Goofy-G", "commentT": "2019-03-04T09:33:44Z", "comment_text": "\n \t\tAlmost :), the file model.ckpt-5000.data-00001-of-00002 is missing. Thanks for the effort.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "Goofy-G", "commentT": "2019-03-04T10:00:08Z", "comment_text": "\n \t\tthis file is too big to upload\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "Goofy-G", "commentT": "2019-03-04T10:32:26Z", "comment_text": "\n \t\tI has uploaded this file to network, <denchmark-link:https://github.com/guillaumekln>@guillaumekln</denchmark-link>\n  can get it by\n link: <denchmark-link:https://pan.baidu.com/s/1uv-QKB4T9ko608bRtCdnkA>https://pan.baidu.com/s/1uv-QKB4T9ko608bRtCdnkA</denchmark-link>\n  password: f7eu\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "Goofy-G", "commentT": "2019-03-04T11:20:20Z", "comment_text": "\n \t\tThanks, I reproduced this. The commit <denchmark-link:https://github.com/OpenNMT/OpenNMT-tf/commit/59c25b66dffb5c1bf968d47488dd043c6e66e256>59c25b6</denchmark-link>\n  broke the parameter .\n \t\t"}}}, "commit": {"commit_id": "152317955e31d6e200d129b6fe47f06a03ab10d1", "commit_author": "Guillaume Klein", "commitT": "2019-03-04 14:17:44+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CHANGELOG.md", "file_new_name": "CHANGELOG.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "20", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "opennmt\\models\\sequence_to_sequence.py", "file_new_name": "opennmt\\models\\sequence_to_sequence.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "280,281,282", "deleted_lines": null, "method_info": {"method_name": "_call", "method_params": "self,features,labels,params,mode", "method_startline": "156", "method_endline": "296"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "opennmt\\tests\\model_test.py", "file_new_name": "opennmt\\tests\\model_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "162,163,164,165,166,167,168,169,170,171,172,173,174", "deleted_lines": null, "method_info": {"method_name": "testSequenceToSequenceWithReplaceUnknownTarget", "method_params": "self", "method_startline": "162", "method_endline": "174"}}}}}}}