{"BR": {"BR_id": "665", "BR_author": "qhduan", "BRopenT": "2020-05-22T17:49:10Z", "BRcloseT": "2020-05-25T08:06:15Z", "BR_text": {"BRsummary": "GPT2 Model export error", "BRdescription": "\n When I want to use onmt-main command or runner.export to export a GPT2Small model.\n print(tf.__version__)\n print(onmt.__version__)\n \n 2.1.1\n 2.9.3\n I got:\n <denchmark-code>runner.export(export_dir='/gdrive/My Drive/nmt/chat50w/models')\n \n INFO:tensorflow:Using parameters:\n data:\n   train_features_file: /gdrive/My Drive/nmt/chat50w/train_tokens.txt\n   vocabulary: /gdrive/My Drive/nmt/chat50w/vocab.txt\n eval:\n   batch_size: 32\n infer:\n   batch_size: 16\n   length_bucket_width: 1\n model_dir: /gdrive/My Drive/nmt/chat50w/run/\n params:\n   average_loss_in_time: true\n   decay_params:\n     max_step: 1000000\n     warmup_steps: 2000\n   decay_type: CosineAnnealing\n   learning_rate: 0.00025\n   num_hypotheses: 1\n   optimizer: Adam\n score:\n   batch_size: 64\n train:\n   batch_size: 32\n   batch_type: examples\n   length_bucket_width: 1\n   maximum_features_length: 512\n   sample_buffer_size: 500000\n   save_summary_steps: 100\n \n INFO:tensorflow:Restored checkpoint /gdrive/My Drive/nmt/chat50w/run/ckpt-615000\n ---------------------------------------------------------------------------\n TypeError                                 Traceback (most recent call last)\n <ipython-input-35-9a691167a69a> in <module>()\n ----> 1 runner.export(export_dir='/gdrive/My Drive/nmt/chat50w/models')\n \n 14 frames\n /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/func_graph.py in wrapper(*args, **kwargs)\n     966           except Exception as e:  # pylint:disable=broad-except\n     967             if hasattr(e, \"ag_error_metadata\"):\n --> 968               raise e.ag_error_metadata.to_exception(e)\n     969             else:\n     970               raise\n \n TypeError: in converted code:\n \n     /usr/local/lib/python3.6/dist-packages/opennmt/models/model.py:238 _run  *\n         _, predictions = self(features)\n     /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/engine/base_layer.py:778 __call__\n         outputs = call_fn(cast_inputs, *args, **kwargs)\n     /usr/local/lib/python3.6/dist-packages/opennmt/models/language_model.py:57 call  *\n         ids, length = features[\"ids\"], features[\"length\"]\n \n     TypeError: tuple indices must be integers or slices, not str\n </denchmark-code>\n \n I think the problem is the function 'serve_function' in opennmt/models/model.py\n When I use custom serve_function, it works:\n def serve_function(model):\n   \"\"\"Returns a function for serving this model.\n   Returns:\n     A ``tf.function``.\n   \"\"\"\n   # Set name attribute of the input TensorSpec.\n   input_signature = {\n       name: tf.TensorSpec.from_spec(spec, name=name)\n       for name, spec in model.features_inputter.input_signature().items()\n   }\n \n   @tf.function(input_signature=(input_signature,))\n   def _run(features):\n     # I THINK THIS IS THE PROBLEM\n     # OLD\n     # features = self.features_inputter.make_features(features=features.copy())\n     # NEW\n     features, _ = model.features_inputter.make_features(features=features.copy())\n     _, predictions = model(features)\n     return predictions\n \n   return _run\n \n # USE custom method to build model and export with custom serve_function\n \n config = runner._finalize_config()\n model = runner._init_model(config)\n checkpoint = checkpoint_util.Checkpoint.from_config(config, model)\n checkpoint.restore(checkpoint_path=None, weights_only=True)\n tf.saved_model.save(model, '/gdrive/My Drive/nmt/chat50w/model_export', signatures=serve_function(model))\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "qhduan", "commentT": "2020-05-25T07:44:18Z", "comment_text": "\n \t\tThanks for reporting. The PR referenced above should fix this.\n \t\t"}}}, "commit": {"commit_id": "523243d4019cee0a6ddb21e646fddf14a0c9c537", "commit_author": "Guillaume Klein", "commitT": "2020-05-25 10:06:14+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "opennmt\\models\\model.py", "file_new_name": "opennmt\\models\\model.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "238,239,240", "deleted_lines": null, "method_info": {"method_name": "serve_function", "method_params": "self", "method_startline": "224", "method_endline": "244"}}, "hunk_1": {"Ismethod": 1, "added_lines": "238,239,240", "deleted_lines": null, "method_info": {"method_name": "serve_function._run", "method_params": "features", "method_startline": "236", "method_endline": "242"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "opennmt\\tests\\model_test.py", "file_new_name": "opennmt\\tests\\model_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "321,322,323,324,325,326,327,328", "deleted_lines": null, "method_info": {"method_name": "testLanguageModelServing", "method_params": "self", "method_startline": "321", "method_endline": "328"}}}}}}}