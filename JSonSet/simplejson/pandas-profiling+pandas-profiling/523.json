{"BR": {"BR_id": "523", "BR_author": "mariusgarbowski", "BRopenT": "2020-07-19T09:53:27Z", "BRcloseT": "2020-10-10T00:03:01Z", "BR_text": {"BRsummary": "Error for Int64Dtype: TypeError with pd.NA", "BRdescription": "\n Describe the bug\n I am trying to profile a DataFrame which contains pd.NA in dtype=Int64 Columns (pandas nullable integer). After installing the newest pre-version <denchmark-link:https://github.com/pandas-profiling/pandas-profiling/issues/502>#502</denchmark-link>\n  there has been no issue with the dtype in general. Unfortunately, there seems to be a problem with the pd.NAs.\n The very strange part is (regarding the example below):\n In Jupyter Notebook on Windows it neither works with any dataframe containing pd.NAs, e.g. data = [pd.NA, 123124] (only two values).\n BUT: if I dismiss the first value from data, i.e. 1871248 -> data = [12522551, 1489260, 6657093,\n pd.NA, pd.NA, pd.NA, pd.NA, pd.NA, 1489260, pd.NA, 2468576] , it surprisingly works on the linux server version (???)\n To Reproduce\n pip install --pre -U pandas-profiling\n from pandas_profiling import ProfileReport\n import pandas as pd\n \n data = [1871248, 12522551, 1489260, 6657093,\n         pd.NA, pd.NA, pd.NA, pd.NA, pd.NA, 1489260, pd.NA, 2468576]\n df = pd.DataFrame({'id': data}, dtype=pd.Int64Dtype())\n profile_report = ProfileReport(df, title='Test Report')\n filename = \"test_report.html\"\n profile_report.to_file(filename)\n Output when running in Jupyter notebook in Windows and linux server:\n <denchmark-code>Summarize dataset: 20%\n 3/15 [00:00<00:00, 41.21it/s, Calculate pearson correlation]\n \n ---------------------------------------------------------------------------\n TypeError                                 Traceback (most recent call last)\n <ipython-input-3-2ece5c6bfb94> in <module>\n       7 profile_report = ProfileReport(df, title='Test Report')\n       8 filename = \"test_report.html\"\n ----> 9 profile_report.to_file(filename)\n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\profile_report.py in to_file(self, output_file, silent)\n     254                 create_html_assets(output_file)\n     255 \n --> 256             data = self.to_html()\n     257 \n     258             if output_file.suffix != \".html\":\n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\profile_report.py in to_html(self)\n     357 \n     358         \"\"\"\n --> 359         return self.html\n     360 \n     361     def to_json(self) -> str:\n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\profile_report.py in html(self)\n     177     def html(self):\n     178         if self._html is None:\n --> 179             self._html = self._render_html()\n     180         return self._html\n     181 \n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\profile_report.py in _render_html(self)\n     284         from pandas_profiling.report.presentation.flavours import HTMLReport\n     285 \n --> 286         report = self.report\n     287 \n     288         disable_progress_bar = not config[\"progress_bar\"].get(bool)\n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\profile_report.py in report(self)\n     171     def report(self):\n     172         if self._report is None:\n --> 173             self._report = get_report_structure(self.description_set)\n     174         return self._report\n     175 \n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\profile_report.py in description_set(self)\n     152     def description_set(self):\n     153         if self._description_set is None:\n --> 154             self._description_set = describe_df(self.title, self.df, self._sample)\n     155         return self._description_set\n     156 \n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\model\\describe.py in describe(title, df, sample)\n      82         for correlation_name in correlation_names:\n      83             pbar.set_postfix_str(f\"Calculate {correlation_name} correlation\")\n ---> 84             correlations[correlation_name] = calculate_correlation(\n      85                 df, variables, correlation_name\n      86             )\n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas_profiling\\model\\correlations.py in calculate_correlation(df, variables, correlation_name)\n     129     if correlation_name in [\"pearson\", \"spearman\", \"kendall\"]:\n     130         try:\n --> 131             correlation = df.corr(method=correlation_name)\n     132 \n     133         except (ValueError, AssertionError) as e:\n \n ~\\Miniconda3\\envs\\reana\\lib\\site-packages\\pandas\\core\\frame.py in corr(self, method, min_periods)\n    7464 \n    7465         if method == \"pearson\":\n -> 7466             correl = libalgos.nancorr(ensure_float64(mat), minp=min_periods)\n    7467         elif method == \"spearman\":\n    7468             correl = libalgos.nancorr_spearman(ensure_float64(mat), minp=min_periods)\n \n pandas\\_libs\\algos_common_helper.pxi in pandas._libs.algos.ensure_float64()\n \n TypeError: float() argument must be a string or a number, not 'NAType'\n </denchmark-code>\n \n Version information:\n \n Python version: Linux 3.8.2 , Windows: 3.8.2\n Environment: Linux: Console via SSH in PyCharm, Windows: Jupyter Notebook in Chrome\n pip:\n \n Click to expand Version information\n \n Linux:\n astropy==4.0.1.post1\n attrs==19.3.0\n backcall==0.1.0\n bleach==3.1.4\n certifi==2020.4.5.1\n chardet==3.0.4\n colorama==0.4.3\n confuse==1.3.0\n cycler==0.10.0\n decorator==4.4.2\n defusedxml==0.6.0\n entrypoints==0.3\n htmlmin==0.1.12\n idna==2.10\n ImageHash==4.1.0\n importlib-metadata==1.5.0\n ipykernel==5.1.4\n ipython==7.13.0\n ipython-genutils==0.2.0\n ipywidgets==7.5.1\n jedi==0.17.0\n Jinja2==2.11.2\n joblib==0.16.0\n jsonschema==3.2.0\n jupyter==1.0.0\n jupyter-client==6.1.3\n jupyter-console==6.1.0\n jupyter-core==4.6.3\n kiwisolver==1.2.0\n llvmlite==0.33.0\n MarkupSafe==1.1.1\n matplotlib==3.2.1\n missingno==0.4.2\n mistune==0.8.4\n mkl-fft==1.0.15\n mkl-random==1.1.0\n mkl-service==2.3.0\n nbconvert==5.6.1\n nbformat==5.0.6\n networkx==2.4\n notebook==6.0.3\n numba==0.50.1\n numpy==1.18.1\n ordered-set==4.0.1\n pandas==1.0.5\n pandas-profiling==2.9.0rc1\n pandocfilters==1.4.2\n parso==0.7.0\n phik==0.10.0\n pickleshare==0.7.5\n Pillow==7.2.0\n prometheus-client==0.7.1\n prompt-toolkit==3.0.4\n Pygments==2.6.1\n PyLaTeX==1.3.2\n pyparsing==2.4.7\n pyrsistent==0.16.0\n python-dateutil==2.8.1\n pytz==2020.1\n PyWavelets==1.1.1\n pywin32==227\n pywinpty==0.5.7\n PyYAML==5.3.1\n pyzmq==18.1.1\n qtconsole==4.7.4\n QtPy==1.9.0\n requests==2.24.0\n scipy==1.5.1\n seaborn==0.10.1\n Send2Trash==1.5.0\n sip==4.19.13\n six==1.14.0\n tangled-up-in-unicode==0.0.6\n terminado==0.8.3\n testpath==0.4.4\n tornado==6.0.4\n tqdm==4.48.0\n traitlets==4.3.3\n urllib3==1.25.9\n visions==0.4.4\n wcwidth==0.1.9\n webencodings==0.5.1\n widgetsnbextension==3.5.1\n wincertstore==0.2\n xlrd==1.2.0\n zipp==3.1.0\n \n Windows:\n astropy==4.0.1.post1\n attrs==19.3.0\n backcall==0.1.0\n bleach==3.1.4\n certifi==2020.4.5.1\n chardet==3.0.4\n colorama==0.4.3\n confuse==1.3.0\n cycler==0.10.0\n decorator==4.4.2\n defusedxml==0.6.0\n entrypoints==0.3\n htmlmin==0.1.12\n idna==2.10\n ImageHash==4.1.0\n importlib-metadata==1.5.0\n ipykernel==5.1.4\n ipython==7.13.0\n ipython-genutils==0.2.0\n ipywidgets==7.5.1\n jedi==0.17.0\n Jinja2==2.11.2\n joblib==0.16.0\n jsonschema==3.2.0\n jupyter==1.0.0\n jupyter-client==6.1.3\n jupyter-console==6.1.0\n jupyter-core==4.6.3\n kiwisolver==1.2.0\n llvmlite==0.33.0\n MarkupSafe==1.1.1\n matplotlib==3.2.1\n missingno==0.4.2\n mistune==0.8.4\n mkl-fft==1.0.15\n mkl-random==1.1.0\n mkl-service==2.3.0\n nbconvert==5.6.1\n nbformat==5.0.6\n networkx==2.4\n notebook==6.0.3\n numba==0.50.1\n numpy==1.18.1\n ordered-set==4.0.1\n pandas==1.0.5\n pandas-profiling==2.9.0rc1\n pandocfilters==1.4.2\n parso==0.7.0\n phik==0.10.0\n pickleshare==0.7.5\n Pillow==7.2.0\n prometheus-client==0.7.1\n prompt-toolkit==3.0.4\n Pygments==2.6.1\n PyLaTeX==1.3.2\n pyparsing==2.4.7\n pyrsistent==0.16.0\n python-dateutil==2.8.1\n pytz==2020.1\n PyWavelets==1.1.1\n pywin32==227\n pywinpty==0.5.7\n PyYAML==5.3.1\n pyzmq==18.1.1\n qtconsole==4.7.4\n QtPy==1.9.0\n requests==2.24.0\n scipy==1.5.1\n seaborn==0.10.1\n Send2Trash==1.5.0\n sip==4.19.13\n six==1.14.0\n tangled-up-in-unicode==0.0.6\n terminado==0.8.3\n testpath==0.4.4\n tornado==6.0.4\n tqdm==4.48.0\n traitlets==4.3.3\n urllib3==1.25.9\n visions==0.4.4\n wcwidth==0.1.9\n webencodings==0.5.1\n widgetsnbextension==3.5.1\n wincertstore==0.2\n xlrd==1.2.0\n zipp==3.1.0 >>>\n \n Additional context\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mariusgarbowski", "commentT": "2020-08-02T19:22:43Z", "comment_text": "\n \t\tThanks for taking the time to report this issue. After researching the cause, we found that it's a combination of two: a bug in pandas < 1.1 [1] and a design decision in how pd.NAN works in the boolean context.\n PR <denchmark-link:https://github.com/pandas-profiling/pandas-profiling/pull/533>#533</denchmark-link>\n  ensures that pandas-profiling works with .\n [1] <denchmark-link:https://github.com/pandas-dev/pandas/issues/33803>pandas-dev/pandas#33803</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "mariusgarbowski", "commentT": "2020-10-02T00:02:52Z", "comment_text": "\n \t\tStale issue\n \t\t"}}}, "commit": {"commit_id": "00bdeafee8f896ba5365f933563433794de6b8fd", "commit_author": "Simon Brugman", "commitT": "2020-08-24 23:32:36+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\pandas_profiling\\model\\correlations.py", "file_new_name": "src\\pandas_profiling\\model\\correlations.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "133", "deleted_lines": "133"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\pandas_profiling\\visualisation\\plot.py", "file_new_name": "src\\pandas_profiling\\visualisation\\plot.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "268,269,272,274", "deleted_lines": "270,272", "method_info": {"method_name": "scatter_pairwise", "method_params": "series1,series2,x_label,y_label", "method_startline": "245", "method_endline": "275"}}}}, "file_2": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "tests\\issues\\test_issue523.py"}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\unit\\test_dataset_schema.py", "file_new_name": "tests\\unit\\test_dataset_schema.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "29", "deleted_lines": "29", "method_info": {"method_name": "test_dataset_schema", "method_params": "", "method_startline": "6", "method_endline": "30"}}}}}}}