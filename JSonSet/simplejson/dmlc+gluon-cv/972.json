{"BR": {"BR_id": "972", "BR_author": "MenglingD", "BRopenT": "2019-10-03T10:18:33Z", "BRcloseT": "2020-07-30T04:02:13Z", "BR_text": {"BRsummary": "unable to setting the root for get_model in ssd", "BRdescription": "\n \n mxnet-version: 1.6.0\n os: ubuntu18.04\n python: 3.6.8\n \n It is seem that the argument of  in  in <denchmark-link:https://github.com/dmlc/gluon-cv/blob/c2f6aa15af55dd33fe8af691e685fee5bc2ed9c6/gluoncv/model_zoo/model_zoo.py#L243>gluoncv/model_zoo/model_zoo.py#L243</denchmark-link>\n  for ssd is not work, after the  is set to :\n 547         net = get_model(net_name, pretrained_base=True,\n 548                         norm_layer=gluon.nn.BatchNorm,\n 549                         root=os.path.join(args.data_root, 'models'))\n As debugging into the call stack of get_model, I find out that the 'root' argument in kwargs of ssd_300_vgg16_atrous_coco  is extracted by the inner invoking of get_ssd, and the call of SSD in get_ssd are missed the root argument and set the default value: os.path.join('~', '.mxnet', 'models') on it:\n the  is ok in here: <denchmark-link:https://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/ssd/presets.py#L73>gluoncv/model_zoo/ssd/presets.py:73</denchmark-link>\n :\n 55 def ssd_300_vgg16_atrous_coco(pretrained=False, pretrained_base=True, **kwargs):\n ...    ...\n 73     net = get_ssd('vgg16_atrous', 300, features=vgg16_atrous_300, filters=None,                                                   \n 74                   sizes=[21, 45, 99, 153, 207, 261, 315],                                                                         \n 75                   ratios=[[1, 2, 0.5]] + [[1, 2, 0.5, 3, 1.0/3]] * 3 + [[1, 2, 0.5]] * 2,                                         \n 76                   steps=[8, 16, 32, 64, 100, 300],                                                                                \n 77                   classes=classes, dataset='coco', pretrained=pretrained,                                                         78                   pretrained_base=pretrained_base, **kwargs)\n but in here, the  is extracted from the  arguments and not be passed to :\n <denchmark-link:https://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/ssd/ssd.py#L331>gluoncv/model_zoo/ssdssd.py:331</denchmark-link>\n \n 331 def get_ssd(name, base_size, features, filters, sizes, ratios, steps, classes,                                                    \n 332             dataset, pretrained=False, pretrained_base=True, ctx=mx.cpu(), \n 333             root=os.path.join('~', '.mxnet', 'models'), **kwargs):\n ...     ...\n 391     net = SSD(base_name, base_size, features, filters, sizes, ratios, steps,                                                                             \n 392               pretrained=pretrained_base, classes=classes, ctx=ctx, **kwargs)                                                                                           \n 393     if pretrained:                                                                                                                                           \n 394         from ..model_store import get_model_file                                                                                                                      \n 395         full_name = '_'.join(('ssd', str(base_size), name, dataset))                                                                                               \n 396         net.load_parameters(get_model_file(full_name, tag=pretrained, root=root), ctx=ctx)                                        \n 397     return net\n Theoretically, the 'root' argument is not only indicating the path of parameters for pretrained model but also for pretrained_base model. So is that is a bug, or some incorrect operation by me. Please let me know, and thank you for your attention.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "MenglingD", "commentT": "2019-10-07T04:14:25Z", "comment_text": "\n \t\tThe current logic will make sure you get the pretrained full model from the path you specified, but seems like the pretrained_base model are not getting the correct root. Sounds like a bug to me and I will fix it.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "MenglingD", "commentT": "2020-07-21T13:15:52Z", "comment_text": "\n \t\tWas this fixed ?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "MenglingD", "commentT": "2020-07-22T18:05:45Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/zewelor>@zewelor</denchmark-link>\n  Yes, let me know if it persists\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "MenglingD", "commentT": "2020-07-23T10:34:29Z", "comment_text": "\n \t\tI've faced this bug after:\n <denchmark-code>model_zoo.get_model(\"deeplab_resnet101_coco\", root='/tmp/', pretrained=True)\n </denchmark-code>\n \n It resulted in:\n <denchmark-code>Downloading /root/.mxnet/models/resnet101_v1s-bd93a83c.zip from https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/models/resnet101_v1s-bd93a83c.zip...                        \n Downloading /tmp/deeplab_resnet101_coco-ed817f76.zip from https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/models/deeplab_resnet101_coco-ed817f76.zip...   \n </denchmark-code>\n \n \t\t"}}}, "commit": {"commit_id": "4d8f5c77f7d78fa4a11ebb7a21cc3104a5f87868", "commit_author": "Joshua Z. Zhang", "commitT": "2020-07-29 21:02:12-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "gluoncv\\model_zoo\\deeplabv3.py", "file_new_name": "gluoncv\\model_zoo\\deeplabv3.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "45,112,211,212,213", "deleted_lines": "111"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "gluoncv\\model_zoo\\deeplabv3_plus.py", "file_new_name": "gluoncv\\model_zoo\\deeplabv3_plus.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "43,272,273,274", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "gluoncv\\model_zoo\\deeplabv3b_plus.py", "file_new_name": "gluoncv\\model_zoo\\deeplabv3b_plus.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "39,40,242,243,244", "deleted_lines": "39"}}}}}}