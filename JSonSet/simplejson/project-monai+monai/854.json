{"BR": {"BR_id": "854", "BR_author": "elitap", "BRopenT": "2020-08-05T15:06:34Z", "BRcloseT": "2020-08-07T10:25:08Z", "BR_text": {"BRsummary": "sliding_window_inference uses to much gpu memory if roi_size is small and images to infer large", "BRdescription": "\n Describe the bug\n sliding_window_inference runns ot of memory if roi_size is small and images to infer large\n To Reproduce\n evaluete a highres3dnet with images larger than 512x512x256 and roi_size of the sliding_window_inference option of [16,16,16] and the required gpu memory exceeds 8gb\n Expected behavior\n less memory should be used\n Environment (please complete the following information):\n MONAI version: 0.2.0\n Python version: 3.6.9 (default, Jul 17 2020, 12:50:27)  [GCC 8.4.0]\n Numpy version: 1.19.0\n Pytorch version: 1.5.0+cu101\n Additional context\n sliding window inference seems to be broken with the current nightlies, a runntime exception occures in monai.networks.utils in to_norm_affine at line: new_affine = src_xform @ affine @ torch.inverse(dst_xform). Seems that the segmentation saver is not correctely reading out the meta data dict from the batch.\n Have the bug fixed at least for version 0.2.0 and will send a pull request\n \t"}, "comments": {}}, "commit": {"commit_id": "8f1c290b58ddfb4f9a9f5810916c3a7d48e26643", "commit_author": "elitap", "commitT": "2020-08-07 11:25:07+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "monai\\inferers\\utils.py", "file_new_name": "monai\\inferers\\utils.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "30", "deleted_lines": null, "method_info": {"method_name": "sliding_window_inference", "method_params": "Tensor,int,float,BlendMode,CONSTANT,PytorchPadMode,CONSTANT,float,None", "method_startline": "21", "method_endline": "30"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\test_integration_sliding_window.py", "file_new_name": "tests\\test_integration_sliding_window.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "47", "deleted_lines": "47", "method_info": {"method_name": "run_test._sliding_window_processor", "method_params": "_engine,batch", "method_startline": "43", "method_endline": "48"}}, "hunk_1": {"Ismethod": 1, "added_lines": "47", "deleted_lines": "47", "method_info": {"method_name": "run_test", "method_params": "batch_size,img_name,seg_name,output_dir,device", "method_startline": "33", "method_endline": "60"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\test_sliding_window_inference.py", "file_new_name": "tests\\test_sliding_window_inference.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "41,42,43,50", "deleted_lines": "41,43", "method_info": {"method_name": "test_sliding_window_default", "method_params": "self,image_shape,roi_shape,sw_batch_size,overlap,mode", "method_startline": "41", "method_endline": "50"}}, "hunk_1": {"Ismethod": 1, "added_lines": "50,52,53,59", "deleted_lines": null, "method_info": {"method_name": "test_sliding_window_default", "method_params": "self,image_shape,roi_shape,sw_batch_size,overlap,mode,device", "method_startline": "50", "method_endline": "61"}}}}}}}