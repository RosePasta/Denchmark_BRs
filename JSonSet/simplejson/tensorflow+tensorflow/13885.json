{"BR": {"BR_id": "13885", "BR_author": "amirj", "BRopenT": "2017-10-21T17:39:20Z", "BRcloseT": "2017-12-21T15:27:25Z", "BR_text": {"BRsummary": "tf.reduce_mean is not compatible with np.mean", "BRdescription": "\n <denchmark-link:https://www.tensorflow.org/api_docs/python/tf/reduce_mean>tf.reduce_mean</denchmark-link>\n  emphasized that this function is compatible with numpy:\n \n Equivalent to np.mean\n \n But it doesn't in the output type. Consider the following code for example:\n <denchmark-code>import tensorflow as tf\n x = tf.Variable([1, 0, 1, 0])\n init = tf.global_variables_initializer()\n sess = tf.Session()\n sess.run(init)\n print(sess.run(tf.reduce_mean(x)))\n \n </denchmark-code>\n \n The output is zero. It seems that tf.reduce_mean infer the output type from the input tensor because casting the input tensor to float values, solve the problem. This attribute is not compatible to np.mean:\n <denchmark-code>import numpy as np\n print(np.mean([1,0,0,1]))\n </denchmark-code>\n \n <denchmark-h:h3>System information</denchmark-h>\n \n \n OS Platform and Distribution: Linux Ubuntu 16.04\n TensorFlow installed from (source or binary): Source\n TensorFlow version (use command below): 1.3\n Python version: 3.6\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "amirj", "commentT": "2017-10-21T18:10:49Z", "comment_text": "\n \t\tIn numpy,  has a  that could be used to specify the output type:\n <denchmark-link:https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.mean.html>https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.mean.html</denchmark-link>\n \n By default this is dtype=float64 for integer types and same type as input for non-integer types.\n It might be possible to add a dtype in tf.reduce_mean though a type cast is always needed I assume.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "amirj", "commentT": "2017-10-21T19:22:42Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/MarkDaoust>@MarkDaoust</denchmark-link>\n  should we update the numpy compat docstring? Or encourage a contribution?\n /CC <denchmark-link:https://github.com/aselle>@aselle</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "amirj", "commentT": "2017-10-21T21:07:58Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/drpngx>@drpngx</denchmark-link>\n  <denchmark-link:https://github.com/MarkDaoust>@MarkDaoust</denchmark-link>\n   is an optional parameter in both TF and Numpy. I think it should be clear in the document or adapt to Numpy. It's my honer to contribute in both cases.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "amirj", "commentT": "2017-10-23T13:59:24Z", "comment_text": "\n \t\tSure, if you want to update the @compatability(numpy) note we'd welcome the PR.\n But I don't think this is enough of a bug that we can break backwards compatibility to fix it.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "amirj", "commentT": "2017-10-24T06:30:45Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/drpngx>@drpngx</denchmark-link>\n  I'd like to send a PR to add the  argument for  funciton.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "amirj", "commentT": "2017-10-24T18:06:45Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/DjangoPeng>@DjangoPeng</denchmark-link>\n  sounds good, it'll have to go to api review. Thank you!\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "amirj", "commentT": "2017-12-20T19:23:32Z", "comment_text": "\n \t\tIt has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "amirj", "commentT": "2017-12-21T15:27:24Z", "comment_text": "\n \t\tFixed by <denchmark-link:https://github.com/tensorflow/tensorflow/pull/13941>#13941</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "a43f911e103aa5910d4e2405d77bdee8f9314fac", "commit_author": "Amir H. Jadidinejad", "commitT": "2017-11-08 17:14:50-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\ops\\math_ops.py", "file_new_name": "tensorflow\\python\\ops\\math_ops.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1436,1437,1438,1439,1440,1441,1442,1443,1444,1445", "deleted_lines": null}}}}}}