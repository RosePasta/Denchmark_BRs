{"BR": {"BR_id": "45894", "BR_author": "jackd", "BRopenT": "2020-12-21T00:47:02Z", "BRcloseT": "2020-12-28T21:11:04Z", "BR_text": {"BRsummary": "tf.data.experimental.assert_cardinality incompatible with INFINITE_CARDINALITY", "BRdescription": "\n System information\n \n Have I written custom code: yes\n OS Platform and Distribution: Ubuntu 18.04\n TensorFlow installed from: binary\n TensorFlow version: v1.12.1-47912-gec43aacb56f 2.5.0-dev20201219\n Python version: 3.7.7\n \n Describe the current behavior: tf.data.experimental.assert_cardinality  can be used to fix Dataset.cardinality in instances where it cannot be inferred. In situations where the cardinality is infinite, this raises an error where it shouldn't.\n Describe the expected behavior if ds = ds_base.apply(tf.data.experimental.assert_cardinality(tf.data.INFINITE_CARDINALITY), then an error should be raised if ds_base stops producing elements, as opposed to when the first element is produced.\n \n <denchmark-link:https://colab.research.google.com/drive/13s9geZzR4xUtYJ6ImINl0kuisL-n8H_6?usp=sharing>Notebook</denchmark-link>\n \n Code (same as notebook):\n import tensorflow as tf\n \n ds = tf.data.Dataset.range(5).repeat().flat_map(lambda i: tf.data.Dataset.range(i))\n print(ds.cardinality() == tf.data.INFINITE_CARDINALITY)  # False\n ds = ds.apply(tf.data.experimental.assert_cardinality(tf.data.INFINITE_CARDINALITY))\n print(ds.cardinality() == tf.data.INFINITE_CARDINALITY)  # True\n \n for example in ds.take(1):\n     pass\n # tensorflow.python.framework.errors_impl.FailedPreconditionError:\n # Input dataset was expected to contain -1 elements but contained at least 1 element.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jackd", "commentT": "2020-12-21T11:17:52Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jackd>@jackd</denchmark-link>\n ,\n As per <denchmark-link:https://www.tensorflow.org/api_docs/python/tf/data#other-members>the documentation</denchmark-link>\n , this behavior seems to be expected. What do you think?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jackd", "commentT": "2020-12-21T11:50:53Z", "comment_text": "\n \t\tI think tf.data.INFINITE_CARDINALITY should consistently be used to indicate infinite cardinality, regardless of how it is encoded. I can understand why this error occurs, but I would consider it a bugged edge-case.\n At the very least I would expect an error when creating  tf.data.experimental.assert_cardinality with a negative cardinality value, though that would just make me change this from a bug report to a feature request.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "jackd", "commentT": "2020-12-28T21:11:05Z", "comment_text": "\n \t\tAre you satisfied with the resolution of your issue?\n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45894>Yes</denchmark-link>\n \n <denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45894>No</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "jackd", "commentT": "2020-12-28T21:23:48Z", "comment_text": "\n \t\tThanks for reporting this <denchmark-link:https://github.com/jackd>@jackd</denchmark-link>\n ! I agree with your assessment that it's a bugged edge-case, and submitted a fix so that asserting infinite cardinality will work as you described.\n \t\t"}}}, "commit": {"commit_id": "59f5abfbc8dc5559c361f80f4fa4a006db825e40", "commit_author": "Andrew Audibert", "commitT": "2020-12-28 13:09:55-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\core\\kernels\\data\\experimental\\assert_cardinality_dataset_op.cc", "file_new_name": "tensorflow\\core\\kernels\\data\\experimental\\assert_cardinality_dataset_op.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "152,153,154", "deleted_lines": null, "method_info": {"method_name": "tensorflow::data::experimental::AssertCardinalityDatasetOp::Dataset::Iterator::ElementString", "method_params": "n", "method_startline": "151", "method_endline": "156"}}, "hunk_1": {"Ismethod": 1, "added_lines": "117,118", "deleted_lines": "116", "method_info": {"method_name": "tensorflow::data::experimental::AssertCardinalityDatasetOp::Dataset::Iterator::GetNextInternal", "method_params": "ctx,out_tensors,end_of_sequence", "method_startline": "103", "method_endline": "125"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\data\\experimental\\kernel_tests\\assert_cardinality_test.py", "file_new_name": "tensorflow\\python\\data\\experimental\\kernel_tests\\assert_cardinality_test.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "56,57,58,59,60,61,62,63,64,65", "deleted_lines": null}}}}}}