{"BR": {"BR_id": "14800", "BR_author": "orpillar", "BRopenT": "2017-11-22T16:13:41Z", "BRcloseT": "2017-12-11T01:44:54Z", "BR_text": {"BRsummary": "Potential memory leak from deleting array and closing file handler", "BRdescription": "\n Here are couple of minor memory leak for review.\n \n \n \n \n \n tensorflow/tensorflow/c/c_api.cc\n \n \n         Lines 569 to 593\n       in\n       6c95675\n \n \n \n \n \n \n  char* base = new char[size]; \n \n \n \n  char* data_start = base + sizeof(tensorflow::uint64) * srcarray.size(); \n \n \n \n  char* dst = data_start;  // Where next string is encoded. \n \n \n \n  size_t dst_len = size - static_cast<size_t>(data_start - base); \n \n \n \n  tensorflow::uint64* offsets = reinterpret_cast<tensorflow::uint64*>(base); \n \n \n \n  for (int i = 0; i < srcarray.size(); ++i) { \n \n \n \n    *offsets = (dst - data_start); \n \n \n \n    offsets++; \n \n \n \n  const string& s = srcarray(i); \n \n \n \n  size_t consumed = TF_StringEncode(s.data(), s.size(), dst, dst_len, status); \n \n \n \n  if (!status->status.ok()) { \n \n \n \n      status->status = InvalidArgument( \n \n \n \n  \"invalid string tensor encoding (string #\", i, \" of \", \n \n \n \n          srcarray.size(), \"): \", status->status.error_message()); \n \n \n \n  return nullptr; \n \n \n \n    } \n \n \n \n    dst += consumed; \n \n \n \n    dst_len -= consumed; \n \n \n \n  } \n \n \n \n  if (dst != base + size) { \n \n \n \n    status->status = InvalidArgument( \n \n \n \n  \"invalid string tensor encoding (decoded \", (dst - base), \n \n \n \n  \" bytes, but the tensor is encoded in \", size, \" bytes\"); \n \n \n \n  return nullptr; \n \n \n \n  } \n \n \n \n \n  \"delete []base;\" looks missing.\n \n \n \n \n \n tensorflow/tensorflow/core/lib/io/snappy/snappy_outputbuffer.cc\n \n \n         Lines 164 to 173\n       in\n       6c95675\n \n \n \n \n \n \n  char* compressed_length_array = new char[4]; \n \n \n \n  std::fill(compressed_length_array, compressed_length_array + 4, 0); \n \n \n \n  for (int i = 0; i < 4; i++) { \n \n \n \n  // Little endian. \n \n \n \n    compressed_length_array[i] = output.size() >> (8 * (3 - i)); \n \n \n \n  } \n \n \n \n  TF_RETURN_IF_ERROR(AddToOutputBuffer(compressed_length_array, 4)); \n \n \n \n  \n \n \n \n  // Write compressed output to buffer. \n \n \n \n  TF_RETURN_IF_ERROR(AddToOutputBuffer(output.data(), output.size())); \n \n \n \n \n   \"delete []compressed_length_array;\" looks missing when macro TF_RETURN_IF_ERROR() fails.\n \n \n \n \n \n tensorflow/tensorflow/core/platform/profile_utils/android_armv7a_cpu_utils_helper.cc\n \n \n         Lines 113 to 123\n       in\n       6c95675\n \n \n \n \n \n \n  FILE *fp = fopen(file_path.c_str(), \"r\"); \n \n \n \n  if (fp == nullptr) { \n \n \n \n  return INVALID_CPU_FREQUENCY; \n \n \n \n  } \n \n \n \n  int64 freq_in_khz = INVALID_CPU_FREQUENCY; \n \n \n \n  const int retval = fscanf(fp, \"%lld\", &freq_in_khz); \n \n \n \n  if (retval < 0) { \n \n \n \n  LOG(WARNING) << \"Failed to \\\"\" << file_path << \"\\\"\"; \n \n \n \n  return INVALID_CPU_FREQUENCY; \n \n \n \n  } \n \n \n \n  pclose(fp); \n \n \n \n \n  Two potential problems:\n a. There is no \"fclose()\" being called after fscanf() fails\n b. \"fclose()\" could be called instead of \"pclose()\"\n \n \n \n \n \n tensorflow/tensorflow/tools/proto_text/gen_proto_text_functions.cc\n \n \n         Lines 132 to 137\n       in\n       6c95675\n \n \n \n \n \n \n  FILE* f = fopen(path.c_str(), \"w\"); \n \n \n \n  if (f == nullptr) return -1; \n \n \n \n  if (fwrite(data.c_str(), 1, data.size(), f) != data.size()) { \n \n \n \n  return -1; \n \n \n \n  } \n \n \n \n  if (fclose(f) != 0) { \n \n \n \n \n  When \"fwrite() fails\", \"fclose()\" could be called before \"return -1\".\n \n \n PS: I don't have handy working environment setup yet, currently browsing code may be better fit for me.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "orpillar", "commentT": "2017-11-22T16:42:05Z", "comment_text": "\n \t\tCould you edit your post and wrap code in three backticks (Markdown code highlighting), please?\n int main() {\n   // This is easier to read.\n }\n <denchmark-link:https://user-images.githubusercontent.com/1595907/33139045-6ca77b38-cfac-11e7-8a29-233e0918a72d.png></denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "orpillar", "commentT": "2017-11-22T16:44:50Z", "comment_text": "\n \t\tOr better yet, paste links to the relevant lines and GitHub will insert code snippets for you:\n \n \n \n tensorflow/tensorflow/c/c_api.cc\n \n \n         Lines 580 to 583\n       in\n       6c95675\n \n \n \n \n \n \n  status->status = InvalidArgument( \n \n \n \n  \"invalid string tensor encoding (string #\", i, \" of \", \n \n \n \n      srcarray.size(), \"): \", status->status.error_message()); \n \n \n \n  return nullptr; \n \n \n \n \n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "orpillar", "commentT": "2017-11-22T21:45:47Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/carlthome>@carlthome</denchmark-link>\n , thanks for the tip. Now I updated the description.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "orpillar", "commentT": "2017-11-22T22:57:43Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/orpillar>@orpillar</denchmark-link>\n  I think those issues are true.  In ,  Update: Actually there are only 4 bytes so it could be placed into the stack instead.\n Would you like to create a PR for that? Otherwise I could help create a PR for you.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "orpillar", "commentT": "2017-11-23T01:59:37Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yongtang>@yongtang</denchmark-link>\n , thanks for looking into the issues. You are right about snappy_outputbuffer.cc.\n I am new to open source community, just want to see there is any easy things I could contribute.\n Please feel free to help create a PR. Thanks,\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "orpillar", "commentT": "2017-11-23T02:30:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/orpillar>@orpillar</denchmark-link>\n  Created PR <denchmark-link:https://github.com/tensorflow/tensorflow/pull/14816>#14816</denchmark-link>\n  for the fix. Thanks for your contribution to TensorFlow community! \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "orpillar", "commentT": "2017-11-26T05:21:07Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yongtang>@yongtang</denchmark-link>\n . Thanks for the PR. It looks the sanity build had time out.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "orpillar", "commentT": "2017-11-27T02:10:14Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/orpillar>@orpillar</denchmark-link>\n  bumped the build. Thanks!\n \t\t"}}}, "commit": {"commit_id": "e17ae378063b46c894a8c193823f029d7d87de81", "commit_author": "Yong Tang", "commitT": "2017-12-10 20:44:54-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\c\\c_api.cc", "file_new_name": "tensorflow\\c\\c_api.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "582,592", "deleted_lines": null, "method_info": {"method_name": "tensorflow::TF_TensorFromTensor", "method_params": "src,status", "method_startline": "523", "method_endline": "606"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\core\\lib\\io\\snappy\\snappy_outputbuffer.cc", "file_new_name": "tensorflow\\core\\lib\\io\\snappy\\snappy_outputbuffer.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "164", "deleted_lines": "164,176", "method_info": {"method_name": "tensorflow::io::SnappyOutputBuffer::Deflate", "method_params": "", "method_startline": "154", "method_endline": "178"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\core\\platform\\profile_utils\\android_armv7a_cpu_utils_helper.cc", "file_new_name": "tensorflow\\core\\platform\\profile_utils\\android_armv7a_cpu_utils_helper.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "121,124", "deleted_lines": "123", "method_info": {"method_name": "tensorflow::profile_utils::AndroidArmV7ACpuUtilsHelper::ReadCpuFrequencyFile", "method_params": "cpu_id,type", "method_startline": "109", "method_endline": "126"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\tools\\proto_text\\gen_proto_text_functions.cc", "file_new_name": "tensorflow\\tools\\proto_text\\gen_proto_text_functions.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "135", "deleted_lines": null, "method_info": {"method_name": "tensorflow::MainImpl", "method_params": "argc,argv", "method_startline": "70", "method_endline": "144"}}}}}}}