{"BR": {"BR_id": "249", "BR_author": "bdhammel", "BRopenT": "2019-05-10T19:46:54Z", "BRcloseT": "2019-05-19T09:23:31Z", "BR_text": {"BRsummary": "Setting clip value in `PostTrainLinearQuantizer` raises TypeError", "BRdescription": "\n I'm trying to clip by specifying the number to standard deviations in PostTrainLinearQuantizer\n <denchmark-code>    quantizer = quantization.PostTrainLinearQuantizer(\n         model,\n         bits_activations=8, bits_parameters=8, bits_accum=32,\n         mode=quantization.LinearQuantMode.SYMMETRIC,\n         clip_acts=quantization.ClipMode.N_STD,\n         no_clip_layers=None, clip_n_stds=3\n     )\n     quantizer.prepare_model()\n </denchmark-code>\n \n However, this throws the error:\n <denchmark-code>TypeError: get_tensor_mean_n_stds_max_abs() got multiple values for argument 'n_stds'\n </denchmark-code>\n \n It looks like the  is taking two values:\n <denchmark-link:https://github.com/NervanaSystems/distiller/blob/master/distiller/quantization/range_linear.py#L97>https://github.com/NervanaSystems/distiller/blob/master/distiller/quantization/range_linear.py#L97</denchmark-link>\n \n One is the tensor and one is the dimension to be used with ; the standard deviation is attached as a partial: <denchmark-link:https://github.com/NervanaSystems/distiller/blob/master/distiller/quantization/range_linear.py#L76>https://github.com/NervanaSystems/distiller/blob/master/distiller/quantization/range_linear.py#L76</denchmark-link>\n \n However,  only accepts the tensor and the std. <denchmark-link:https://github.com/NervanaSystems/distiller/blob/master/distiller/quantization/q_utils.py#L149>https://github.com/NervanaSystems/distiller/blob/master/distiller/quantization/q_utils.py#L149</denchmark-link>\n \n modifying the source fixed this:\n <denchmark-code>def get_tensor_mean_n_stds_min_max(t, _, n_stds=1):\n     if n_stds <= 0:\n         raise ValueError('n_stds must be > 0, got {}'.format(n_stds))\n     mean = t.mean()\n     std = t.std()\n     min_val, max_val = get_tensor_min_max(t)\n     min_val = torch.max(min_val, mean - n_stds * std)\n     max_val = torch.min(max_val, mean + n_stds * std)\n     return min_val, max_val\n \n \n def get_tensor_mean_n_stds_max_abs(t, _, n_stds=1):\n     min_val, max_val = get_tensor_mean_n_stds_min_max(t, _, n_stds)\n     return torch.max(min_val.abs_(), max_val.abs_())\n </denchmark-code>\n \n Distiller version: 0.4.0-pre\n Pytorch version: 1.0.1\n Python version: 3.6.8\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "bdhammel", "commentT": "2019-05-19T09:23:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/bdhammel>@bdhammel</denchmark-link>\n  Sorry for the late response, and thanks for catching this! Fixed in <denchmark-link:https://github.com/IntelLabs/distiller/commit/9af786b6599fe41fc95593e77d4631f0150b24d1>9af786b</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "9af786b6599fe41fc95593e77d4631f0150b24d1", "commit_author": "Guy Jacob", "commitT": "2019-05-19 11:57:18+03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "distiller\\quantization\\q_utils.py", "file_new_name": "distiller\\quantization\\q_utils.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "138,139,140", "deleted_lines": "138", "method_info": {"method_name": "get_tensor_mean_n_stds_min_max", "method_params": "t,dim,n_stds", "method_startline": "138", "method_endline": "148"}}, "hunk_1": {"Ismethod": 1, "added_lines": "138,139,140", "deleted_lines": "138", "method_info": {"method_name": "get_tensor_mean_n_stds_min_max", "method_params": "t,n_stds", "method_startline": "138", "method_endline": "146"}}, "hunk_2": {"Ismethod": 1, "added_lines": "151,152", "deleted_lines": null, "method_info": {"method_name": "get_tensor_mean_n_stds_max_abs", "method_params": "t,dim,n_stds", "method_startline": "151", "method_endline": "153"}}, "hunk_3": {"Ismethod": 1, "added_lines": "151", "deleted_lines": "149,150", "method_info": {"method_name": "get_tensor_mean_n_stds_max_abs", "method_params": "t,n_stds", "method_startline": "149", "method_endline": "151"}}}}}}}