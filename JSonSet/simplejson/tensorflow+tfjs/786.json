{"BR": {"BR_id": "786", "BR_author": "annxingyuan", "BRopenT": "2018-10-12T12:59:31Z", "BRcloseT": "2018-10-12T17:32:45Z", "BR_text": {"BRsummary": "tfjs-layers tests fail with new MAX_TEXTURE_SIZE environment flag", "BRdescription": "\n <denchmark-link:https://github.com/caisq>@caisq</denchmark-link>\n  <denchmark-link:https://github.com/dsmilkov>@dsmilkov</denchmark-link>\n  <denchmark-link:https://github.com/nsthorat>@nsthorat</denchmark-link>\n \n In <denchmark-link:https://github.com/tensorflow/tfjs-core/commit/fb395557e3b1e391ce67c920606d8ab3727c16ae>tensorflow/tfjs-core@fb39555</denchmark-link>\n  we introduced an environment flag  so it would be easier to simulate small texture sizes for testing. However the environment flags get evaluated with every test in the tfjs-layers suite - so we are continuously querying . This somehow causes the WebGL context to be lost at the Cropping2D test (<denchmark-link:https://github.com/tensorflow/tfjs-layers/blob/master/src/layers/convolutional_test.ts#L919>https://github.com/tensorflow/tfjs-layers/blob/master/src/layers/convolutional_test.ts#L919</denchmark-link>\n ) (WebGL context lost is the true error - Travis has been <denchmark-link:https://travis-ci.org/tensorflow/tfjs-layers/jobs/440342080>reporting</denchmark-link>\n  otherwise but that's because  is false). Running the test in isolation does not cause the error. I'm not sure why this happens with the same test every time. If I cache  this no longer occurs.\n I'm not sure what the best solution here is - it would be nice to go back to our old setup without the MAX_TEXTURE_SIZE flag, but I can't figure out a good way to stub that value for unit testing. A quick fix would be to cache the value of MAX_TEXTURE_SIZE in our environment. What are your thoughts?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "annxingyuan", "commentT": "2018-10-12T13:29:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/annxingyuan>@annxingyuan</denchmark-link>\n  Thank you for looking into the root cause of this issue. So this sounds like more of an issue with the tests? Is there a way to avoid continuously querying MAX_TEXTURE_SIZE?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "annxingyuan", "commentT": "2018-10-12T14:26:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/annxingyuan>@annxingyuan</denchmark-link>\n  the caching solution sounds good.  Are there any existing applications wherein the MAX_TEXTURE_SIZE changes during the lifetime of the executable?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "annxingyuan", "commentT": "2018-10-12T15:09:55Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/bileschi>@bileschi</denchmark-link>\n  MAX_TEXTURE_SIZE shouldn't change for users - we only created the flag so we could control it for testing. Just submitted a PR for caching - will try to create another tfjs-core release today!\n \t\t"}}}, "commit": {"commit_id": "591f0a6f4b9ecd59827d4f7099c9a82c99000275", "commit_author": "annxingyuan", "commitT": "2018-10-12 13:10:46-04:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\environment_util.ts", "file_new_name": "src\\environment_util.ts", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "118,119,120,121,122,123,124,125,126,127,128,129,130", "deleted_lines": "118,119,120,121,122", "method_info": {"method_name": "(anonymous)", "method_params": "", "method_startline": "118", "method_endline": "130"}}, "hunk_1": {"Ismethod": 1, "added_lines": "118,119,120,121,122", "deleted_lines": "118,119,120,121,122", "method_info": {"method_name": "getWebGLMaxTextureSize", "method_params": "number,boolean", "method_startline": "118", "method_endline": "122"}}}}}}}