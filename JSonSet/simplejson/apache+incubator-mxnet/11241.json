{"BR": {"BR_id": "11241", "BR_author": "eric-haibin-lin", "BRopenT": "2018-06-12T06:32:41Z", "BRcloseT": "2018-07-30T20:34:52Z", "BR_text": {"BRsummary": "Conv1D throws CUDNN_STATUS_EXECUTION_FAILED", "BRdescription": "\n Setup:\n <denchmark-code>$ pip install mxnet-cu90==1.1.0\n \n $ nvcc --version\n nvcc: NVIDIA (R) Cuda compiler driver\n Copyright (c) 2005-2017 NVIDIA Corporation\n Built on Fri_Sep__1_21:08:03_CDT_2017\n Cuda compilation tools, release 9.0, V9.0.176\n \n $ ls /usr/local/cuda/lib64/libcudnn.so.7.0.3\n /usr/local/cuda/lib64/libcudnn.so.7.0.3\n </denchmark-code>\n \n Run the following script debug.py:\n <denchmark-code>import mxnet as mx\n W_REQ = 'add'\n shape = (1, 65536, 1)\n ctx = mx.gpu()\n kwargs = {'no_bias': True, 'kernel': (1,), 'num_filter': 1}\n x = mx.sym.var('x')\n w = mx.sym.var('w')\n x_grad = mx.nd.zeros(shape, ctx=ctx)\n w_grad = mx.nd.zeros(shape, ctx=ctx)\n args_grad = {'x': x_grad, 'w': w_grad}\n sym = mx.sym.Convolution(x, w, **kwargs)\n executor = sym.bind(ctx, grad_req={'x': 'null', 'w': W_REQ},\n                     args={'x': mx.nd.ones(shape, ctx=ctx), 'w': mx.nd.ones(shape, ctx=ctx)},\n                     args_grad=args_grad)\n executor.forward()\n executor.backward([mx.nd.ones((1,1,1), ctx=ctx)])\n mx.nd.waitall()\n </denchmark-code>\n \n Gives the following error:\n <denchmark-code>[06:31:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:107: Running performance tests to find the best convolution algorithm, this can take a while... (setting env variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)\n terminate called after throwing an instance of 'dmlc::Error'\n   what():  [06:31:41] src/engine/./threaded_engine.h:359: [06:31:41] src/operator/nn/./cudnn/cudnn_convolution-inl.h:242: Check failed: e == CUDNN_STATUS_SUCCESS (8 vs. 0) cuDNN: CUDNN_STATUS_EXECUTION_FAILED\n \n Stack trace returned 10 entries:\n [bt] (0) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2a9e78) [0x7f705d9a3e78]\n [bt] (1) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2aa288) [0x7f705d9a4288]\n [bt] (2) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2a920d1) [0x7f706018c0d1]\n [bt] (3) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x262f5e7) [0x7f705fd295e7]\n [bt] (4) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x24570bb) [0x7f705fb510bb]\n [bt] (5) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x245d7d4) [0x7f705fb577d4]\n [bt] (6) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x243e2ed) [0x7f705fb382ed]\n [bt] (7) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2442bdb) [0x7f705fb3cbdb]\n [bt] (8) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2442db6) [0x7f705fb3cdb6]\n [bt] (9) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x243f68b) [0x7f705fb3968b]\n \n \n A fatal error occurred in asynchronous engine operation. If you do not know what caused this error, you can try set environment variable MXNET_ENGINE_TYPE to NaiveEngine and run with debugger (i.e. gdb). This will force all operations to be synchronous and backtrace will give you the series of calls that lead to this error. Remember to set MXNET_ENGINE_TYPE back to empty after debugging.\n \n Stack trace returned 9 entries:\n [bt] (0) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2a9e78) [0x7f705d9a3e78]\n [bt] (1) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2aa288) [0x7f705d9a4288]\n [bt] (2) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x243e594) [0x7f705fb38594]\n [bt] (3) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2442bdb) [0x7f705fb3cbdb]\n [bt] (4) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x2442db6) [0x7f705fb3cdb6]\n [bt] (5) /usr/local/lib/python2.7/dist-packages/mxnet/libmxnet.so(+0x243f68b) [0x7f705fb3968b]\n [bt] (6) /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb8c80) [0x7f70d400bc80]\n [bt] (7) /lib/x86_64-linux-gnu/libpthread.so.0(+0x76ba) [0x7f70d52a66ba]\n [bt] (8) /lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7f70d4fdc3dd]\n </denchmark-code>\n \n Note that there's no error if W_REQ is changed to 'write'.\n Can also be reproduced if I build mxnet from source at commit <denchmark-link:https://github.com/apache/incubator-mxnet/commit/5b99b25e5f6ab3a20c7bcf4821a6af0a1a95f823>5b99b25</denchmark-link>\n  where Conv1D CUDNN was initially introduced.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "eric-haibin-lin", "commentT": "2018-06-12T06:51:41Z", "comment_text": "\n \t\tCan be also reproduced by the following code debug_gluon.py:\n <denchmark-code>import mxnet as mx\n from mxnet import nd, sym, autograd\n from mxnet.gluon import nn, HybridBlock, Block\n \n if __name__ == '__main__':\n     ctx = mx.gpu()\n     x = mx.nd.ones((1L, 65536L, 1560L), ctx=ctx)\n     net = nn.Conv1D(channels=256, kernel_size=2, layout='NCW', use_bias=False)\n     net.initialize(ctx=ctx)\n \n     for p in net.collect_params().values():\n         p.grad_req = 'add'\n \n     with autograd.record():\n         y = net(x)\n     y.backward()\n     print(net.weight.grad())\n </denchmark-code>\n \n with pip install mxnet-cu90 --pre\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "eric-haibin-lin", "commentT": "2018-06-12T17:32:37Z", "comment_text": "\n \t\tWhat GPU are you trying to run on?  What were the nvcc args used to build your libmxnet.so?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "eric-haibin-lin", "commentT": "2018-06-12T18:45:49Z", "comment_text": "\n \t\tTesla V100.\n <denchmark-code>git checkout 5b99b25e5f6ab3a20c7bcf4821a6af0a1a95f823\n git submodule update --init --recursive \n cp make/config.mk .\n echo \"USE_BLAS=openblas\" >>config.mk\n echo \"ADD_CFLAGS += -I/usr/include/openblas\" >>config.mk\n echo \"USE_CUDA=1\" >>config.mk\n echo \"USE_CUDA_PATH=/usr/local/cuda\" >>config.mk\n echo \"USE_CUDNN=1\" >>config.mk\n make -j32\n </denchmark-code>\n \n Run python debug.py\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "eric-haibin-lin", "commentT": "2018-06-18T18:49:49Z", "comment_text": "\n \t\tUpdate: CUDNN team is notified for the issue that cudnnFind() is returning algos that will fail.\n \t\t"}}}, "commit": {"commit_id": "024b5a916dd3a39a39031ce5e6565cd7d9d60fe2", "commit_author": "Dick Carter", "commitT": "2018-07-30 13:34:34-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\nn\\convolution.cu", "file_new_name": "src\\operator\\nn\\convolution.cu", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "44,45,61,62,63,64,65,72,82,149,150,152,230,232", "deleted_lines": "44,60,61,77,145,224"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "src\\operator\\nn\\cudnn\\cudnn_algoreg-inl.h", "file_new_name": "src\\operator\\nn\\cudnn\\cudnn_algoreg-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "75,81", "deleted_lines": "80", "method_info": {"method_name": "mxnet::op::CuDNNAlgoReg::Find", "method_params": "param,in_shape,out_shape,cudnn_data_type,cudnn_forward_compute_type,cudnn_backward_compute_type,sm_arch,add_to_weight,fwd,bwd,flt", "method_startline": "68", "method_endline": "91"}}, "hunk_1": {"Ismethod": 1, "added_lines": "75,81", "deleted_lines": "80", "method_info": {"method_name": "mxnet::op::CuDNNAlgoReg::Find", "method_params": "param,in_shape,out_shape,cudnn_data_type,cudnn_forward_compute_type,cudnn_backward_compute_type,sm_arch,fwd,bwd,flt", "method_startline": "68", "method_endline": "90"}}, "hunk_2": {"Ismethod": 1, "added_lines": "100,106", "deleted_lines": "104", "method_info": {"method_name": "mxnet::op::CuDNNAlgoReg::Register", "method_params": "param,in_shape,out_shape,cudnn_data_type,cudnn_forward_compute_type,cudnn_backward_compute_type,sm_arch,fwd,bwd,flt", "method_startline": "92", "method_endline": "125"}}, "hunk_3": {"Ismethod": 1, "added_lines": "100,106", "deleted_lines": "104", "method_info": {"method_name": "mxnet::op::CuDNNAlgoReg::Register", "method_params": "param,in_shape,out_shape,cudnn_data_type,cudnn_forward_compute_type,cudnn_backward_compute_type,sm_arch,add_to_weight,fwd,bwd,flt", "method_startline": "93", "method_endline": "127"}}, "hunk_4": {"Ismethod": 1, "added_lines": "171", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::CuDNNAlgoReg::ParamHash::operator ( )", "method_params": "key", "method_startline": "161", "method_endline": "173"}}, "hunk_5": {"Ismethod": 1, "added_lines": "155,156", "deleted_lines": "152", "method_info": {"method_name": "mxnet::op::CuDNNAlgoReg::ParamKey::operator ==", "method_params": "other", "method_startline": "147", "method_endline": "157"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "src\\operator\\nn\\cudnn\\cudnn_convolution-inl.h", "file_new_name": "src\\operator\\nn\\cudnn\\cudnn_convolution-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "62,63,66", "deleted_lines": "62", "method_info": {"method_name": "mxnet::op::CuDNNConvolutionOp::Init", "method_params": "param,forward_compute_type,backward_compute_type,in_shape,out_shape,rctx,add_to_weight", "method_startline": "57", "method_endline": "112"}}, "hunk_1": {"Ismethod": 1, "added_lines": "252", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::CuDNNConvolutionOp::Backward", "method_params": "ctx,out_grad,in_data,req,in_grad", "method_startline": "214", "method_endline": "361"}}, "hunk_2": {"Ismethod": 1, "added_lines": "616,617,651,652,800,801,802,803,804,805,806,814,815", "deleted_lines": "613,614,802", "method_info": {"method_name": "mxnet::op::CuDNNConvolutionOp::SelectAlgo", "method_params": "rctx,in_shape,out_shape,cudnn_forward_compute_type,cudnn_backward_compute_type", "method_startline": "609", "method_endline": "827"}}, "hunk_3": {"Ismethod": 1, "added_lines": "938,939,940,941,942,943,944,945,946,947,948", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::CuDNNConvolutionOp::Features", "method_params": "dshape", "method_startline": "938", "method_endline": "948"}}, "hunk_4": {"Ismethod": 1, "added_lines": "62,63,66", "deleted_lines": "62", "method_info": {"method_name": "mxnet::op::CuDNNConvolutionOp::Init", "method_params": "param,forward_compute_type,backward_compute_type,in_shape,out_shape,rctx", "method_startline": "57", "method_endline": "110"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "src\\operator\\nn\\cudnn\\cudnn_deconvolution-inl.h", "file_new_name": "src\\operator\\nn\\cudnn\\cudnn_deconvolution-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "549,550,584,585,736,737,738,739,740,741,742,743,751,752", "deleted_lines": "546,547,738", "method_info": {"method_name": "mxnet::op::CuDNNDeconvolutionOp::SelectAlgo", "method_params": "rctx,in_shape,out_shape,cudnn_forward_compute_type,cudnn_backward_compute_type", "method_startline": "541", "method_endline": "770"}}, "hunk_1": {"Ismethod": 1, "added_lines": "59,60,63", "deleted_lines": "59", "method_info": {"method_name": "mxnet::op::CuDNNDeconvolutionOp::Init", "method_params": "param,forward_compute_type,backward_compute_type,in_shape,out_shape,rctx,add_to_weight", "method_startline": "54", "method_endline": "109"}}, "hunk_2": {"Ismethod": 1, "added_lines": "262", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::CuDNNDeconvolutionOp::Backward", "method_params": "ctx,out_grad,in_data,req,in_grad", "method_startline": "197", "method_endline": "295"}}, "hunk_3": {"Ismethod": 1, "added_lines": "59,60,63", "deleted_lines": "59", "method_info": {"method_name": "mxnet::op::CuDNNDeconvolutionOp::Init", "method_params": "param,forward_compute_type,backward_compute_type,in_shape,out_shape,rctx", "method_startline": "54", "method_endline": "107"}}, "hunk_4": {"Ismethod": 1, "added_lines": "885,886,887,888,889,890,891,892,893,894,895", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::CuDNNDeconvolutionOp::Features", "method_params": "dshape", "method_startline": "885", "method_endline": "895"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\nn\\deconvolution.cu", "file_new_name": "src\\operator\\nn\\deconvolution.cu", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "42,43,59,60,61,62,63,70,80,117,118,120,166,168", "deleted_lines": "42,58,59,75,113,160"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\operator_common.h", "file_new_name": "src\\operator\\operator_common.h", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "497", "deleted_lines": "497"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "tests\\python\\gpu\\test_operator_gpu.py", "file_new_name": "tests\\python\\gpu\\test_operator_gpu.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582", "deleted_lines": null, "method_info": {"method_name": "test_deconvolution_large_c", "method_params": "", "method_startline": "558", "method_endline": "582"}}, "hunk_1": {"Ismethod": 1, "added_lines": "533,534,535,536,537", "deleted_lines": null, "method_info": {"method_name": "test_convolution_large_c.test_1D_with_width", "method_params": "width,grad_req", "method_startline": "533", "method_endline": "537"}}, "hunk_2": {"Ismethod": 1, "added_lines": "539,540,541,542,543", "deleted_lines": null, "method_info": {"method_name": "test_convolution_large_c.test_2D_with_width", "method_params": "width,grad_req", "method_startline": "539", "method_endline": "543"}}, "hunk_3": {"Ismethod": 1, "added_lines": "569,570,571,572,573", "deleted_lines": null, "method_info": {"method_name": "test_deconvolution_large_c.test_2D_with_width", "method_params": "width,grad_req", "method_startline": "569", "method_endline": "573"}}, "hunk_4": {"Ismethod": 1, "added_lines": "563,564,565,566,567", "deleted_lines": null, "method_info": {"method_name": "test_deconvolution_large_c.test_1D_with_width", "method_params": "width,grad_req", "method_startline": "563", "method_endline": "567"}}, "hunk_5": {"Ismethod": 1, "added_lines": "528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552", "deleted_lines": null, "method_info": {"method_name": "test_convolution_large_c", "method_params": "", "method_startline": "528", "method_endline": "552"}}}}}}}