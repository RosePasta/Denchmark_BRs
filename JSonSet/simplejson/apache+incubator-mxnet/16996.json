{"BR": {"BR_id": "16996", "BR_author": "samskalicky", "BRopenT": "2019-12-06T20:31:16Z", "BRcloseT": "2019-12-09T00:09:12Z", "BR_text": {"BRsummary": "mx.io.NDArrayIter cant pad when size is large", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n When input data is smaller than batch size, sometime it errors out with:\n <denchmark-code>Traceback (most recent call last):\n   File \"test.py\", line 7, in <module>\n     for batch in dataiter:\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py\", line 230, in __next__\n     return self.next()\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py\", line 682, in next\n     data = self.getdata()\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py\", line 764, in getdata\n     return self._batchify(self.data)\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py\", line 751, in _batchify\n     second_data = self._getdata(data_source, end=pad)\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py\", line 707, in _getdata\n     ]]) for x in data_source\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py\", line 707, in <listcomp>\n     ]]) for x in data_source\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 705, in __getitem__\n     return self._slice(key.start, key.stop)\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 1338, in _slice\n     start, stop, _ = _get_index_range(start, stop, self.shape[0])\n   File \"/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 3080, in _get_index_range\n     raise IndexError('Slicing stop %d exceeds limit of %d' % (stop, length))\n IndexError: Slicing stop 190 exceeds limit of 10\n </denchmark-code>\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n <denchmark-code>import numpy as np\n import mxnet as mx\n \n data = np.arange(40).reshape((10,2,2))\n dataiter = mx.io.NDArrayIter(data=data, batch_size=200, last_batch_handle='pad')\n for batch in dataiter:\n      print(batch.data[0].asnumpy().shape)\n </denchmark-code>\n \n Using a batch size of 20 succeeds, but larger sizes fail.\n <denchmark-h:h3>Steps to reproduce</denchmark-h>\n \n This is using the 1.6.0 branch\n \t"}, "comments": {}}, "commit": {"commit_id": "251e6f6cb7ec7741434c35a26892fa7450f751c0", "commit_author": "Jake Lee", "commitT": "2019-12-08 16:09:11-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "python\\mxnet\\io\\io.py", "file_new_name": "python\\mxnet\\io\\io.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "724,725,727,728,729,730,731,732", "deleted_lines": "724,725,726,727,728", "method_info": {"method_name": "_tile", "method_params": "self,data,repeats", "method_startline": "724", "method_endline": "732"}}, "hunk_1": {"Ismethod": 1, "added_lines": "712,713,716,717,718,719,720,721,722", "deleted_lines": "714,715,716,717,718,719,720,721,722", "method_info": {"method_name": "_concat", "method_params": "self,first_data,second_data", "method_startline": "710", "method_endline": "722"}}, "hunk_2": {"Ismethod": 1, "added_lines": "756,757,758,759", "deleted_lines": "752,753,754,755,756,757", "method_info": {"method_name": "_batchify", "method_params": "self,data_source", "method_startline": "734", "method_endline": "770"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_io.py", "file_new_name": "tests\\python\\unittest\\test_io.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "204,205", "deleted_lines": "204,205", "method_info": {"method_name": "_test_corner_case", "method_params": "", "method_startline": "202", "method_endline": "206"}}}}}}}