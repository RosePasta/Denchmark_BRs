{"BR": {"BR_id": "622", "BR_author": "mshalvagal", "BRopenT": "2020-08-13T15:09:25Z", "BRcloseT": "2020-08-27T07:21:54Z", "BR_text": {"BRsummary": "[Bug] Solarize transform breaks with cuda input tensors", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n Solarize doesn't seem to perform a check for being on the same device as the input tensor, and always keeps the addition and threshold parameters on the cpu.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n Steps to reproduce the behavior:\n import torch\n from kornia import augmentation as augs\n augmentor = augs.RandomSolarize(0.5,0.1)\n x = torch.randn([64, 3, 32, 32]).to('cuda:0')\n augmentor(x)\n <denchmark-h:h2>Expected behavior</denchmark-h>\n \n Error message (last call only):\n <denchmark-code>File \"<venv path>/lib/python3.6/site-packages/kornia/enhance/adjust.py\", line 300, in solarize\n     input = input + additions\n RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!\n </denchmark-code>\n \n <denchmark-h:h2>Environment</denchmark-h>\n \n PyTorch version: 1.6.0\n Is debug build: No\n CUDA used to build PyTorch: 10.2\n OS: Ubuntu 18.04.5 LTS\n GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\n Clang version: Could not collect\n CMake version: version 3.10.2\n Python version: 3.6 (64-bit runtime)\n Is CUDA available: Yes\n CUDA runtime version: 10.0.130\n GPU models and configuration: GPU 0: Quadro RTX 5000\n Nvidia driver version: 440.100\n cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5\n Versions of relevant libraries:\n [pip3] numpy==1.19.1\n [pip3] torch==1.6.0\n [pip3] torchvision==0.7.0\n [conda] Could not collect\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "mshalvagal", "commentT": "2020-08-13T16:31:57Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mshalvagal>@mshalvagal</denchmark-link>\n  thanks for the report. My guess is that this\n <denchmark-link:https://github.com/kornia/kornia/blob/master/kornia/enhance/adjust.py#L281>https://github.com/kornia/kornia/blob/master/kornia/enhance/adjust.py#L281</denchmark-link>\n \n <denchmark-link:https://github.com/kornia/kornia/blob/master/kornia/enhance/adjust.py#L289>https://github.com/kornia/kornia/blob/master/kornia/enhance/adjust.py#L289</denchmark-link>\n \n must be properly initialized with device and dtype from the input tensor:\n additions = torch.tensor(additions, device=input.device, dtype=input.dtype)\n feel free to open a PR with the fix. /cc <denchmark-link:https://github.com/shijianjian>@shijianjian</denchmark-link>\n  can you double check this ?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "mshalvagal", "commentT": "2020-08-13T17:29:21Z", "comment_text": "\n \t\tThanks!\n I made a pull request. Please take a look if it's good. I only tested it manually, but it works now.\n \t\t"}}}, "commit": {"commit_id": "fab0aaede6b4a4fd456de1999bec85ef17ac0eba", "commit_author": "Manu Halvagal", "commitT": "2020-08-17 03:59:56+08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "kornia\\enhance\\adjust.py", "file_new_name": "kornia\\enhance\\adjust.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "252", "deleted_lines": null, "method_info": {"method_name": "_solarize", "method_params": "Tensor,float,5", "method_startline": "230", "method_endline": "255"}}}}}}}