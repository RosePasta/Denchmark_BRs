{"BR": {"BR_id": "499", "BR_author": "Eizenborg", "BRopenT": "2020-03-27T18:03:24Z", "BRcloseT": "2020-10-21T08:36:49Z", "BR_text": {"BRsummary": "[Bug] tiny bug on _kl_div_2d causes runtime error", "BRdescription": "\n Hi all,\n Not sure why this happens, but when using js_div_loss_2d (which is awesome, thanks!) I get this Runtime Error:\n line 12, in _kl_div_2d q.view(batch * chans, height * width).log(), RuntimeError: view size is not compatible with input tensor's size and stride (at least one dimension spans across two contiguous subspaces). Use .reshape(...) instead.\n which is solved by changing\n q.view(batch * chans, height * width).log(), p.view(batch * chans, height * width),\n to\n q.reshape(batch * chans, height * width).log(), p.reshape(batch * chans, height * width),\n on divergence.py, _kl_div_2d, line 12 and 13\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Eizenborg", "commentT": "2020-04-01T13:53:37Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Eizenborg>@Eizenborg</denchmark-link>\n  is it happening calling  before kornia ?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Eizenborg", "commentT": "2020-10-08T08:25:00Z", "comment_text": "\n \t\tThis issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions, and happy coding day \ud83d\ude0e\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Eizenborg", "commentT": "2020-10-19T11:15:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/anibali>@anibali</denchmark-link>\n  can you check this ?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Eizenborg", "commentT": "2020-10-19T22:54:33Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/edgarriba>@edgarriba</denchmark-link>\n  I just wrote a quick test and it does appear that  fails on non-contiguous inputs. What's your policy on this? Are users expected to make the inputs contiguous themselves when required?\n     @pytest.mark.parametrize('input,target,expected', [\n         (torch.full((1, 1, 2, 4), 0.125), torch.full((1, 1, 2, 4), 0.125), 0.0),\n         (torch.full((1, 7, 2, 4), 0.125), torch.full((1, 7, 2, 4), 0.125), 0.0),\n         (torch.full((1, 7, 2, 4), 0.125), torch.zeros((1, 7, 2, 4)), 0.346574),\n         (torch.zeros((1, 7, 2, 4)), torch.full((1, 7, 2, 4), 0.125), 0.346574),\n     ])\n     def test_noncontiguous_js(self, device, input, target, expected):\n         input = input.to(device).view(input.shape[::-1]).T\n         target = target.to(device).view(target.shape[::-1]).T\n         # Uncomment the next two lines to make the test pass:\n         # input = input.contiguous()\n         # target = target.contiguous()\n         actual = kornia.losses.js_div_loss_2d(input, target).item()\n         assert_allclose(actual, expected)\n In my opinion it's probably worthwhile just replacing the calls to view with reshape in _kl_div_2d like OP suggested.\n \t\t"}}}, "commit": {"commit_id": "26e2cecbdab1ab8a536113305b051814644d4c4e", "commit_author": "Aiden Nibali", "commitT": "2020-10-21 10:36:48+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "kornia\\losses\\divergence.py", "file_new_name": "kornia\\losses\\divergence.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "12,13", "deleted_lines": "12,13", "method_info": {"method_name": "_kl_div_2d", "method_params": "p,q", "method_startline": "8", "method_endline": "17"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "test\\test_losses.py", "file_new_name": "test\\test_losses.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "265,266,267,268,269", "deleted_lines": null, "method_info": {"method_name": "test_noncontiguous_kl", "method_params": "self,device,input,target,expected", "method_startline": "265", "method_endline": "269"}}, "hunk_1": {"Ismethod": 1, "added_lines": "277,278,279,280,281", "deleted_lines": null, "method_info": {"method_name": "test_noncontiguous_js", "method_params": "self,device,input,target,expected", "method_startline": "277", "method_endline": "281"}}}}}}}