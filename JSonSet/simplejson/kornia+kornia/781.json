{"BR": {"BR_id": "781", "BR_author": "ddetone", "BRopenT": "2020-11-13T20:03:59Z", "BRcloseT": "2020-11-23T01:51:48Z", "BR_text": {"BRsummary": "[Bug] RandomSharpen returns three channels for one channel input?", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n The RandomSharpen function returns a 3 channel image when a 1 channel input is given. Is this a bug or expected behavior? I would expect it to return a 1 channel image as well.\n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n Steps to reproduce the behavior:\n This example is taken directly from: <denchmark-link:https://github.com/kornia/kornia/blob/master/kornia/augmentation/augmentation.py#L1053>https://github.com/kornia/kornia/blob/master/kornia/augmentation/augmentation.py#L1053</denchmark-link>\n \n >>> rng = torch.manual_seed(0)\n >>> input = torch.rand(1, 1, 5, 5)\n >>> sharpness = RandomSharpness(1.)\n >>> sharpness(input)\n tensor([[[[0.4963, 0.7682, 0.0885, 0.1320, 0.3074],\n           [0.6341, 0.7720, 0.9537, 0.7566, 0.6323],\n           [0.3489, 0.7325, 0.5629, 0.6284, 0.2939],\n           [0.5185, 0.8648, 0.9106, 0.6249, 0.2823],\n           [0.6816, 0.9152, 0.3971, 0.8742, 0.4194]],\n <BLANKLINE>\n          [[0.4963, 0.7682, 0.0885, 0.1320, 0.3074],\n           [0.6341, 0.7720, 0.9537, 0.7566, 0.6323],\n           [0.3489, 0.7325, 0.5629, 0.6284, 0.2939],\n           [0.5185, 0.8648, 0.9106, 0.6249, 0.2823],\n           [0.6816, 0.9152, 0.3971, 0.8742, 0.4194]],\n <BLANKLINE>\n          [[0.4963, 0.7682, 0.0885, 0.1320, 0.3074],\n           [0.6341, 0.7720, 0.9537, 0.7566, 0.6323],\n           [0.3489, 0.7325, 0.5629, 0.6284, 0.2939],\n           [0.5185, 0.8648, 0.9106, 0.6249, 0.2823],\n           [0.6816, 0.9152, 0.3971, 0.8742, 0.4194]]]])\n <denchmark-h:h2>Expected behavior</denchmark-h>\n \n Output should only have one channel, i.e. the shape should be (1, 1, 5, 5) not (1, 3, 5, 5).\n >>> rng = torch.manual_seed(0)\n >>> input = torch.rand(1, 1, 5, 5)\n >>> sharpness = RandomSharpness(1.)\n >>> sharpness(input)\n tensor([[[[0.4963, 0.7682, 0.0885, 0.1320, 0.3074],\n           [0.6341, 0.5845, 0.9156, 0.5565, 0.6323],\n           [0.3489, 0.5125, 0.2034, 0.3228, 0.2939],\n           [0.5185, 0.7537, 0.8371, 0.3164, 0.2823],\n           [0.6816, 0.9152, 0.3971, 0.8742, 0.4194]]]])\n <denchmark-h:h2>Environment</denchmark-h>\n \n Collecting environment information...\n PyTorch version: 1.6.0\n Is debug build: False\n CUDA used to build PyTorch: None\n ROCM used to build PyTorch: N/A\n OS: Mac OSX 10.15.7 (x86_64)\n GCC version: Could not collect\n Clang version: 12.0.0 (clang-1200.0.32.2)\n CMake version: Could not collect\n Python version: 3.7 (64-bit runtime)\n Is CUDA available: False\n CUDA runtime version: No CUDA\n GPU models and configuration: No CUDA\n Nvidia driver version: No CUDA\n cuDNN version: No CUDA\n HIP runtime version: N/A\n MIOpen runtime version: N/A\n Versions of relevant libraries:\n [pip3] numpy==1.16.1\n [pip3] torch==1.6.0\n [pip3] torchvision==0.8.1\n [conda] Could not collect\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ddetone", "commentT": "2020-11-14T04:05:30Z", "comment_text": "\n \t\tThat makes sense. Will fix it in <denchmark-link:https://github.com/kornia/kornia/pull/783>#783</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "f7dba6ab79adaf77e7266bd614b75c2a47fda698", "commit_author": "shijianjian", "commitT": "2020-11-23 09:51:47+08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "kornia\\augmentation\\augmentation.py", "file_new_name": "kornia\\augmentation\\augmentation.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1104,1105,1106", "deleted_lines": "1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "kornia\\enhance\\adjust.py", "file_new_name": "kornia\\enhance\\adjust.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "399,400,401,402,412,413,414,415,416,417,418,419,420,423,424,425,426,427,428,429,430,435,442,448,449,450", "deleted_lines": "399,411,412,413,414,415,416,417,422,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449", "method_info": {"method_name": "sharpness", "method_params": "Tensor,float", "method_startline": "398", "method_endline": "450"}}, "hunk_1": {"Ismethod": 1, "added_lines": "453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477", "deleted_lines": null, "method_info": {"method_name": "_blend_one", "method_params": "Tensor,Tensor,Tensor", "method_startline": "453", "method_endline": "477"}}, "hunk_2": {"Ismethod": 1, "added_lines": "536,542", "deleted_lines": null, "method_info": {"method_name": "equalize", "method_params": "Tensor", "method_startline": "534", "method_endline": "554"}}, "hunk_3": {"Ismethod": 1, "added_lines": "435,442", "deleted_lines": "434,435,436,437,438,439,440,441,442,443,444,445,446", "method_info": {"method_name": "sharpness._blend_one", "method_params": "Tensor,Tensor,float", "method_startline": "434", "method_endline": "446"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 10, "file_old_name": "test\\enhance\\test_adjust.py", "file_new_name": "test\\enhance\\test_adjust.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "751,752,753,754", "deleted_lines": null, "method_info": {"method_name": "test_smoke", "method_params": "self,device,dtype", "method_startline": "751", "method_endline": "754"}}, "hunk_1": {"Ismethod": 1, "added_lines": "831,832,833,834,835,836", "deleted_lines": null, "method_info": {"method_name": "test_jit", "method_params": "self,device,dtype", "method_startline": "831", "method_endline": "836"}}, "hunk_2": {"Ismethod": 1, "added_lines": "258", "deleted_lines": "258", "method_info": {"method_name": "test_gradcheck", "method_params": "self,device", "method_startline": "254", "method_endline": "260"}}, "hunk_3": {"Ismethod": 1, "added_lines": "792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820", "deleted_lines": null, "method_info": {"method_name": "test_value_batch", "method_params": "self,device,dtype", "method_startline": "792", "method_endline": "820"}}, "hunk_4": {"Ismethod": 1, "added_lines": "765,766,767,768,769,770,771,772", "deleted_lines": null, "method_info": {"method_name": "test_exception", "method_params": "self,device,dtype", "method_startline": "765", "method_endline": "772"}}, "hunk_5": {"Ismethod": 1, "added_lines": "55", "deleted_lines": "55", "method_info": {"method_name": "test_gradcheck", "method_params": "self", "method_startline": "52", "method_endline": "57"}}, "hunk_6": {"Ismethod": 1, "added_lines": "774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790", "deleted_lines": null, "method_info": {"method_name": "test_value", "method_params": "self,device,dtype", "method_startline": "774", "method_endline": "790"}}, "hunk_7": {"Ismethod": 1, "added_lines": "840,841", "deleted_lines": null, "method_info": {"method_name": "test_module", "method_params": "self,device,dtype", "method_startline": "840", "method_endline": "841"}}, "hunk_8": {"Ismethod": 1, "added_lines": "761,762,763", "deleted_lines": null, "method_info": {"method_name": "test_cardinality", "method_params": "self,batch_size,channels,height,width,factor,device,dtype", "method_startline": "761", "method_endline": "763"}}, "hunk_9": {"Ismethod": 1, "added_lines": "823,824,825,826,827", "deleted_lines": null, "method_info": {"method_name": "test_gradcheck", "method_params": "self,device,dtype", "method_startline": "823", "method_endline": "827"}}}}}}}