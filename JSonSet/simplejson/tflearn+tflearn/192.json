{"BR": {"BR_id": "192", "BR_author": "aymericdamien", "BRopenT": "2016-07-10T12:23:26Z", "BRcloseT": "2016-07-11T08:39:12Z", "BR_text": {"BRsummary": "Dropout in RNNs", "BRdescription": "\n It seems there is a bug where dropout in RNNs are still applied at prediction time, investigating if it is coming from tflearn or tensorflow.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "aymericdamien", "commentT": "2016-07-10T19:22:45Z", "comment_text": "\n \t\tI did a quick test and ran the sentiment analysis example <denchmark-link:https://github.com/tflearn/tflearn/blob/master/examples/nlp/lstm.py>1</denchmark-link>\n  and Kera's equivalent [2](using Tensorflow as a backend instead of Theano). Even with dropout, the Keras code doesn't have the same problem, which would suggest the bug is in tflearn.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "aymericdamien", "commentT": "2016-07-11T08:40:33Z", "comment_text": "\n \t\tActually the error was that the TF wrapper always apply dropout, so it has to be modified with TFLearn 'is_training' op condition, to only apply dropout at training time.\n \t\t"}}}, "commit": {"commit_id": "b3117f14930ec2b71f1f06f74183e2b6f940dddf", "commit_author": "aymericdamien", "commitT": "2016-07-11 16:36:37+08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "tflearn\\layers\\recurrent.py", "file_new_name": "tflearn\\layers\\recurrent.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "636,637", "deleted_lines": null, "method_info": {"method_name": "state_size", "method_params": "self", "method_startline": "636", "method_endline": "637"}}, "hunk_1": {"Ismethod": 1, "added_lines": "600,601", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,cell,input_keep_prob,output_keep_prob,seed", "method_startline": "600", "method_endline": "601"}}, "hunk_2": {"Ismethod": 1, "added_lines": "640,641", "deleted_lines": null, "method_info": {"method_name": "output_size", "method_params": "self", "method_startline": "640", "method_endline": "641"}}, "hunk_3": {"Ismethod": 1, "added_lines": "643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663", "deleted_lines": null, "method_info": {"method_name": "__call__", "method_params": "self,inputs,state,scope", "method_startline": "643", "method_endline": "663"}}}}}}}