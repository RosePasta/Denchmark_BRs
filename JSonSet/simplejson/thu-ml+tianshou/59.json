{"BR": {"BR_id": "59", "BR_author": "brantbzhang", "BRopenT": "2020-05-29T01:36:35Z", "BRcloseT": "2020-05-29T02:00:33Z", "BR_text": {"BRsummary": "Bugs in collector.sample", "BRdescription": "\n        if self._multi_buf:\n             if batch_size > 0:\n                 lens = [len(b) for b in self.buffer]\n                 total = sum(lens)\n                 batch_index = np.random.choice(\n                     total, batch_size, p=np.array(lens) / total)  # \n             else:\n                 batch_index = np.array([])\n should be\n batch_index = np.random.choice(\n                    len(self.buffer]), batch_size, p=np.array(lens) / total)\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "brantbzhang", "commentT": "2020-05-29T02:56:42Z", "comment_text": "\n \t\tbatch_index = np.random.choice(\n     total, batch_size, p=np.array(lens) / total)\n This code is for sampling from multiple buffers. p is the weight for each buffer.\n If we have 4 buffer with batch_size=8, the batch_index should be something like 0, 0, 1, 2, 3, 0, 1, 2, which means each sample is from which buffer.\n p is the length of self.buffer. The range of batch_index should be equal to p, otherwise it will raise an exception.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "brantbzhang", "commentT": "2020-05-29T03:50:39Z", "comment_text": "\n \t\tYou are right. I fix it.\n \t\t"}}}, "commit": {"commit_id": "be9ce44290826962889787558cb4984384a30fac", "commit_author": "Trinkle23897", "commitT": "2020-05-29 11:49:47+08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tianshou\\data\\collector.py", "file_new_name": "tianshou\\data\\collector.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "405", "deleted_lines": "405", "method_info": {"method_name": "sample", "method_params": "self,int", "method_startline": "391", "method_endline": "418"}}}}}}}