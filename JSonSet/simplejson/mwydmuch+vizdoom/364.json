{"BR": {"BR_id": "364", "BR_author": "alex-petrenko", "BRopenT": "2019-01-18T07:02:25Z", "BRcloseT": "2019-01-28T22:36:28Z", "BR_text": {"BRsummary": "Error \"Maximum number of clients reached\" when 256 VizDoom instances started simultaneously", "BRdescription": "\n For RL project that uses a PPO algorithm, I am trying to run multiple VizDoom instances at the same time, distributed across 16-32 processes. With other envs I used to run ~256-512 environments at once, which allows me to generate actions for all of them in a single batch, therefore experience collection is very fast. But with VizDoom it causes problems.\n This is what I see in the console when I create my workers:\n <denchmark-code>Maximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reachedMaximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reached                                                                                                          \n (vizdoom:16453): dbind-WARNING **: 22:53:21.795: Could not open X display\n Maximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reachedxcb_connection_has_error() returned true                                                                  \n Maximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedxcb_connect\n ion_has_error() returned true                                                                                                                                                                                                                                                  \n Maximum number of clients reachedMaximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reachedMaximum number of clients reachedMaximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reachedxcb_connection_has_error() returned true\n Maximum number of clients reachedxcb_connection_has_error() returned true\n </denchmark-code>\n \n With 256 environments it keeps spitting out these messages for ~30 seconds, but then it seems like eventually, it works. But with more environments, it just gets stuck printing these messages. It feels like there's some spinlock that all of the processes are trying to acquire and it never happens.\n The problem does not reproduce if I run 128 environments.\n Does anyone know how to diagnose/fix this? Did anyone manage to run more than 256 Dooms on a single server?\n \n ViZDoom version you are using: 1.1.6\n information about your OS platform, distribution and environment: VizDoom installed from pip, Ubuntu 18.04, Python 3.6.7\n Configuration of the ViZDoom environment: resolution 160x120, scenario VizdoomMyWayHome-v0\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "alex-petrenko", "commentT": "2019-01-20T23:42:35Z", "comment_text": "\n \t\tHello <denchmark-link:https://github.com/alex-petrenko>@alex-petrenko</denchmark-link>\n , I've fixed the issue, just install the master branch version, you can do it via pip:\n <denchmark-code>pip install git+https://github.com/mwydmuch/ViZDoom\n </denchmark-code>\n \n Also, if you run to many instance per process (more then 200 instances per process in my case) you can encounter this error: Failed to open shared memory: Too many open files. Rising the hard limit for number of opened file descriptors can fix it, this can be done using ulimit, eg.: ulimit -Sn 8192\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "alex-petrenko", "commentT": "2019-01-21T00:42:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mwydmuch>@mwydmuch</denchmark-link>\n  this is so cool, I really appreciate it a lot! I was planning to dig into code myself to find the problem. I will be looking at how you fixed it, very curious.\n Thanks again, I will test as soon as I can!\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "alex-petrenko", "commentT": "2019-01-28T22:36:28Z", "comment_text": "\n \t\tSorry, I forgot to close.\n For some time I could not verify if the problems are completely gone, because after upgrading I started to get memory leaks. But I was able to verify that it's not VizDoom, but rather numpy 1.16.0 has some bugs that cause memory leaks.\n After I figured all of that and rebooted, I don't see any problems anymore! Was able to run up to 1024 Dooms in parallel, and it works fine! Thanks for great work.\n \t\t"}}}, "commit": {"commit_id": "f4bad435299a91dd3992d88b7590959d0335f7aa", "commit_author": "mwydmuch", "commitT": "2019-01-21 00:33:58+01:00", "changed_files": {"file_0": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "examples\\python\\test_many_instances.py"}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\vizdoom\\src\\posix\\sdl\\i_main.cpp", "file_new_name": "src\\vizdoom\\src\\posix\\sdl\\i_main.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "254,255,256,257,258,259,260,261,262,280,291", "deleted_lines": "252,253,254,255,273,284,285", "method_info": {"method_name": "main", "method_params": "argc,argv", "method_startline": "242", "method_endline": "353"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\vizdoom\\src\\posix\\sdl\\sdlvideo.cpp", "file_new_name": "src\\vizdoom\\src\\posix\\sdl\\sdlvideo.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "422", "deleted_lines": "422", "method_info": {"method_name": "SDLFB::IsValid", "method_params": "", "method_startline": "420", "method_endline": "423"}}, "hunk_1": {"Ismethod": 1, "added_lines": "670", "deleted_lines": "670", "method_info": {"method_name": "SDLFB::IsFullscreen", "method_params": "", "method_startline": "668", "method_endline": "671"}}, "hunk_2": {"Ismethod": 1, "added_lines": "682", "deleted_lines": "682", "method_info": {"method_name": "SDLFB::ResetSDLRenderer", "method_params": "", "method_startline": "673", "method_endline": "740"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\vizdoom\\src\\viz_game.cpp", "file_new_name": "src\\vizdoom\\src\\viz_game.cpp", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "40", "deleted_lines": "40"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\vizdoom\\src\\viz_input.cpp", "file_new_name": "src\\vizdoom\\src\\viz_input.cpp", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "42", "deleted_lines": "42"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\vizdoom\\src\\viz_message_queue.cpp", "file_new_name": "src\\vizdoom\\src\\viz_message_queue.cpp", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "28", "deleted_lines": "28"}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\vizdoom\\src\\viz_screen.cpp", "file_new_name": "src\\vizdoom\\src\\viz_screen.cpp", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "37", "deleted_lines": "37"}}}}}}