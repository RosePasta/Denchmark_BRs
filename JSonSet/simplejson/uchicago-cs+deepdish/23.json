{"BR": {"BR_id": "23", "BR_author": "asanakoy", "BRopenT": "2016-10-26T01:35:08Z", "BRcloseT": "2016-11-15T20:33:33Z", "BR_text": {"BRsummary": "dd.io.save crashes while saving np.array of objects", "BRdescription": "\n dd.io.save crashes when you try to save np.array with dtype=object\n Ubuntu 14.04 x64\n Python 2.7.11 (default, Dec 15 2015, 16:46:19)\n [GCC 4.8.4]\n <denchmark-code>In [1]: np.__version__\n Out[2]: '1.11.2'\n In [2]: dd.__version__\n Out[2]: '0.3.4'\n In [3]: tables.__version__\n Out[3]: '3.2.2'\n \n \n In [10]: x = np.array(['123', 567, 'hjjjk'], dtype='O')\n \n In [11]: x\n Out[11]: array(['123', 567, 'hjjjk'], dtype=object)\n \n In [12]: dd.io.save('t.h5', x)\n ---------------------------------------------------------------------------\n ValueError                                Traceback (most recent call last)\n <ipython-input-12-dc094ba588e4> in <module>()\n ----> 1 dd.io.save('t.h5', x)\n \n /export/home/asanakoy/.local/lib/python2.7/site-packages/deepdish/io/hdf5io.pyc in save(path, data, compression)\n     579         else:\n     580             _save_level(h5file, group, data, name='data',\n --> 581                         filters=filters, idtable=idtable)\n     582             # Mark this to automatically unpack when loaded\n     583             group._v_attrs[DEEPDISH_IO_UNPACK] = True\n \n /export/home/asanakoy/.local/lib/python2.7/site-packages/deepdish/io/hdf5io.pyc in _save_level(handler, group, level, name, filters, idtable)\n     242 \n     243     elif isinstance(level, np.ndarray):\n --> 244         _save_ndarray(handler, group, name, level, filters=filters)\n     245 \n     246     elif _pandas and isinstance(level, (pd.DataFrame, pd.Series, pd.Panel)):\n \n /export/home/asanakoy/.local/lib/python2.7/site-packages/deepdish/io/hdf5io.pyc in _save_ndarray(handler, group, name, x, filters)\n     123         atom = tables.StringAtom(itemsize)\n     124     else:\n --> 125         atom = tables.Atom.from_dtype(x.dtype)\n     126         strtype = None\n     127         itemsize = None\n \n /export/home/asanakoy/.local/lib/python2.7/site-packages/tables/atom.pyc in from_dtype(class_, dtype, dflt)\n     377             return class_.from_kind('string', itemsize, dtype.shape, dflt)\n     378         # Most NumPy types have direct correspondence with PyTables types.\n --> 379         return class_.from_type(basedtype.name, dtype.shape, dflt)\n     380 \n     381     @classmethod\n \n /export/home/asanakoy/.local/lib/python2.7/site-packages/tables/atom.pyc in from_type(class_, type, shape, dflt)\n     402 \n     403         if type not in all_types:\n --> 404             raise ValueError(\"unknown type: %r\" % (type,))\n     405         kind, itemsize = split_type(type)\n     406         return class_.from_kind(kind, itemsize, shape, dflt)\n \n ValueError: unknown type: 'object'\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "asanakoy", "commentT": "2016-10-26T15:01:58Z", "comment_text": "\n \t\tThanks for this bug report! This should definitely be handled better. Heterogenous arrays are not natively supported by HDF5, so I think the only option here is to automatically pickle it.\n Before I have pushed a fix out, force pickling seems to be a work-around:\n <denchmark-code>dd.io.save('t.h5', dd.io.ForcePickle(x))\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "asanakoy", "commentT": "2016-10-26T15:04:49Z", "comment_text": "\n \t\tDo you know how are they handled in np.save?  Pickling too?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "asanakoy", "commentT": "2016-10-26T15:07:39Z", "comment_text": "\n \t\tYes, it is pickled by np.save. I just confirmed this by saving x to t.npy and then trying:\n <denchmark-code>>>> np.load('t.npy', allow_pickle=False)\n [...]\n ValueError: Object arrays cannot be loaded when allow_pickle=False\n </denchmark-code>\n \n \t\t"}}}, "commit": {"commit_id": "43be9ed3bafc1537bd3025b2f0bfdd1d9e1d933c", "commit_author": "Gustav Larsson", "commitT": "2016-11-15 14:32:00-06:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "deepdish\\io\\hdf5io.py", "file_new_name": "deepdish\\io\\hdf5io.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "124,125,126,127", "deleted_lines": null, "method_info": {"method_name": "_save_ndarray", "method_params": "handler,group,name,x,filters", "method_startline": "113", "method_endline": "163"}}}}}}}