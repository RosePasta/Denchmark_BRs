{"BR": {"BR_id": "18102", "BR_author": "sxjscience", "BRopenT": "2020-04-20T02:44:36Z", "BRcloseT": "2020-06-03T19:28:53Z", "BR_text": {"BRsummary": "[Numpy] The gradient of einsum is wrong", "BRdescription": "\n The gradient of einsum is not reliable. The following is just one example. There are actually  in which the gradient is wrong. This operator has both performance issues as stated in <denchmark-link:https://github.com/apache/incubator-mxnet/issues/18043>#18043</denchmark-link>\n  and numeric problems.\n We should recommend the users not to use the einsum in MXNet util these issues are fixed.\n import numpy as np\n import mxnet as mx\n from numpy.testing import assert_allclose\n mx.npx.set_np()\n mx.npx.random.seed(123)\n \n ctx = mx.cpu()\n \n A = mx.np.random.normal(0, 1, (1, 1, 5, 3), ctx=ctx)\n B = mx.np.random.normal(0, 1, (1, 1, 3, 2), ctx=ctx)\n out_grad = mx.np.random.normal(0, 1, (1, 1, 5, 2), ctx=ctx)\n \n A.attach_grad()\n B.attach_grad()\n \n with mx.autograd.record():\n     out = mx.np.einsum('bnij,bnjc->bnic', A, B)\n     out.backward(out_grad)\n \n out_gt = A.asnumpy()[0, 0].dot(B.asnumpy()[0, 0])\n A_gt_grad = out_grad.asnumpy()[0, 0].dot(B.asnumpy()[0, 0].T)\n B_gt_grad = A.asnumpy()[0, 0].T.dot(out_grad.asnumpy()[0, 0])\n A_einsum_grad = A.grad.asnumpy()\n B_einsum_grad = B.grad.asnumpy()\n \n A.grad[:] = 0\n B.grad[:] = 0\n with mx.autograd.record():\n     out = mx.np.matmul(A, B)\n     out.backward(out_grad)\n A_matmul_grad = A.grad.asnumpy()\n B_matmul_grad = B.grad.asnumpy()\n \n \n assert_allclose(A_gt_grad, A_matmul_grad[0, 0], 1E-5, 1E-5)\n assert_allclose(B_gt_grad, B_matmul_grad[0, 0], 1E-5, 1E-5)\n assert_allclose(A_gt_grad, A_einsum_grad[0, 0], 1E-5, 1E-5)\n assert_allclose(B_gt_grad, B_einsum_grad[0, 0], 1E-5, 1E-5)\n Error:\n <denchmark-code>AssertionError: \n Not equal to tolerance rtol=1e-05, atol=1e-05\n \n Mismatched elements: 15 / 15 (100%)\n Max absolute difference: 1.7815545\n Max relative difference: 656.66394\n  x: array([[ 1.226955,  0.715323, -0.593543],\n        [-0.479941, -0.21298 ,  0.192811],\n        [-1.428259, -0.64951 ,  0.583035],...\n  y: array([[-5.545996e-01,  1.247264e-02,  7.049765e-02],\n        [-5.368751e-02,  1.207402e-03,  6.824460e-03],\n        [-9.618776e-02,  2.163209e-03,  1.222686e-02],...\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "sxjscience", "commentT": "2020-04-20T02:45:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/yzhliu>@yzhliu</denchmark-link>\n  <denchmark-link:https://github.com/hzfan>@hzfan</denchmark-link>\n  <denchmark-link:https://github.com/szha>@szha</denchmark-link>\n  <denchmark-link:https://github.com/leezu>@leezu</denchmark-link>\n   FYI\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "sxjscience", "commentT": "2020-04-20T04:14:46Z", "comment_text": "\n \t\tThanks for bringing this up. Will check it out.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "sxjscience", "commentT": "2020-04-29T22:58:36Z", "comment_text": "\n \t\tAssignee: <denchmark-link:https://github.com/hanke580>@hanke580</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "sxjscience", "commentT": "2020-06-03T15:15:59Z", "comment_text": "\n \t\tPR <denchmark-link:https://github.com/apache/incubator-mxnet/pull/18419>#18419</denchmark-link>\n , gradient fixed\n All check passed.\n \t\t"}}}, "commit": {"commit_id": "8d220a2e43f62e2cc8c1af5e1f0d7411a733ce6b", "commit_author": "Ke Han", "commitT": "2020-06-03 12:28:24-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\numpy\\np_einsum_op-inl.h", "file_new_name": "src\\operator\\numpy\\np_einsum_op-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "727,728,729", "deleted_lines": "727", "method_info": {"method_name": "mxnet::op::NumpyEinsumProcess", "method_params": "inputs,req,outputs,subscripts,nop,ctx", "method_startline": "455", "method_endline": "766"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_numpy_op.py", "file_new_name": "tests\\python\\unittest\\test_numpy_op.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "7836,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855", "deleted_lines": null, "method_info": {"method_name": "test_np_einsum", "method_params": "", "method_startline": "7783", "method_endline": "7936"}}}}}}}