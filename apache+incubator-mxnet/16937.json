{"BR": {"BR_id": "16937", "BR_author": "xidulu", "BRopenT": "2019-11-28T10:14:06Z", "BRcloseT": "2020-08-14T07:00:14Z", "BR_text": {"BRsummary": "[Numpy] Zero-size tensor add zero-size sum raises exception", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n Very weird problem:\n Expected output:\n import numpy as onp\n a = onp.ones((3,4))\n b = onp.ones((3,3,4))\n a[:, :0] += b[:, :0].sum(-1)\n print(a)\n <denchmark-code>[[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n </denchmark-code>\n \n What deepNumpy outputs:\n from mxnet import np, npx\n npx.set_np()\n a = np.ones((3,4))\n b = np.ones((3,3,4))\n a[:, :0] += b[:, :0].sum(-1)\n print(a)\n MXNetError                                Traceback (most recent call last)\n <ipython-input-57-ed8f66a38679> in <module>\n       2 b = np.ones((3,3,4))\n       3 a[:, :0] += b[:, :0].sum(-1)\n ----> 4 print(a)\n \n ~/mxnet_master_develop/python/mxnet/numpy/multiarray.py in __str__(self)\n     929     def __str__(self):\n     930         \"\"\"Returns a string representation of the array.\"\"\"\n --> 931         array_str = self.asnumpy().__str__()\n     932         context = self.ctx\n     933         if context.device_type == 'cpu' or self.ndim == 0:\n \n ~/mxnet_master_develop/python/mxnet/ndarray/ndarray.py in asnumpy(self)\n    2550             self.handle,\n    2551             data.ctypes.data_as(ctypes.c_void_p),\n -> 2552             ctypes.c_size_t(data.size)))\n    2553         return data\n    2554 \n \n ~/mxnet_master_develop/python/mxnet/base.py in check_call(ret)\n     276     \"\"\"\n     277     if ret != 0:\n --> 278         raise MXNetError(py_str(_LIB.MXGetLastError()))\n     279 \n     280 \n \n MXNetError: [10:12:44] /home/ubuntu/mxnet_master_develop/include/mxnet/././tensor_blob.h:198: Check failed: this->shape_.Size() == shape.Size() (0 vs. 1) : Shape size mismatch 0 v.s. 1\n Stack trace:\n   [bt] (0) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x32) [0x7fc85352bd52]\n   [bt] (1) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(mxnet::TBlob::reshape(mxnet::TShape const&) const+0x140) [0x7fc8539d1570]\n   [bt] (2) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(void mxnet::op::ReduceAxesComputeImpl<mshadow::cpu, mxnet::op::mshadow_op::sum, false, false, mxnet::op::mshadow_op::identity>(mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, mxnet::TShape const&)+0x2255) [0x7fc85695c105]\n   [bt] (3) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(void mxnet::op::NumpyReduceAxesCompute<mshadow::cpu, mxnet::op::mshadow_op::sum, true, false, mxnet::op::mshadow_op::identity>(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&)+0x239) [0x7fc8569af0e9]\n   [bt] (4) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(mxnet::imperative::PushFCompute(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&)> const&, nnvm::Op const*, nnvm::NodeAttrs const&, mxnet::Context const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::Resource, std::allocator<mxnet::Resource> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&)::{lambda(mxnet::RunContext)#1}::operator()(mxnet::RunContext) const+0x2a6) [0x7fc855ff97f6]\n   [bt] (5) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(std::_Function_handler<void (mxnet::RunContext), mxnet::imperative::PushFCompute(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&)> const&, nnvm::Op const*, nnvm::NodeAttrs const&, mxnet::Context const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::Resource, std::allocator<mxnet::Resource> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&)::{lambda(mxnet::RunContext)#1}>::_M_invoke(std::_Any_data const&, mxnet::RunContext&&)+0x17) [0x7fc855ff9a47]\n   [bt] (6) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(+0x413328e) [0x7fc855f2f28e]\n   [bt] (7) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(mxnet::engine::ThreadedEngine::ExecuteOprBlock(mxnet::RunContext, mxnet::engine::OprBlock*)+0x5cf) [0x7fc855f3b4cf]\n   [bt] (8) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(std::_Function_handler<void (std::shared_ptr<dmlc::ManualEvent>), mxnet::engine::ThreadedEnginePerDevice::PushToExecute(mxnet::engine::OprBlock*, bool)::{lambda()#1}::operator()() const::{lambda(std::shared_ptr<dmlc::ManualEvent>)#1}>::_M_invoke(std::_Any_data const&, std::shared_ptr<dmlc::ManualEvent>&&)+0x118) [0x7fc855f3ea98]\n \t"}, "comments": {}}, "commit": {"commit_id": "04fe114d7bda2795fbdb422cafaada160630ef31", "commit_author": "Minghao Liu", "commitT": "2020-03-02 14:00:33-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\operator\\numpy\\np_broadcast_reduce_op.h", "file_new_name": "src\\operator\\numpy\\np_broadcast_reduce_op.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "419", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::NumpyReduceAxesBackwardUseNone", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "410", "method_endline": "436"}}, "hunk_1": {"Ismethod": 1, "added_lines": "262", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::NumpyReduceAxesCompute", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "250", "method_endline": "306"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\python\\unittest\\test_numpy_op.py", "file_new_name": "tests\\python\\unittest\\test_numpy_op.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "574,575,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,627,628,629,630", "deleted_lines": "574,575,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,620,621,622,623,624,625,627,628,629,630", "method_info": {"method_name": "test_np_sum", "method_params": "", "method_startline": "560", "method_endline": "630"}}}}}}}