{"BR": {"BR_id": "13825", "BR_author": "thomelane", "BRopenT": "2019-01-10T01:22:48Z", "BRcloseT": "2019-05-02T22:04:53Z", "BR_text": {"BRsummary": "Dropout is Slow", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n Adding dropout to network seems to reduce speed of forward pass substantially.\n I've seen this a few times now, and the latest was occasion was on the discussion forum:\n <denchmark-link:https://discuss.mxnet.io/t/training-speed-in-mxnet-is-nearly-2-5x-times-slower-than-pytorch>https://discuss.mxnet.io/t/training-speed-in-mxnet-is-nearly-2-5x-times-slower-than-pytorch</denchmark-link>\n . User's training was x2.5 slower than PyTorch originally, but reported a , ultimately making training faster than PyTorch. User also reported a significant reduction in memory usage.\n Could be related to <denchmark-link:https://github.com/apache/incubator-mxnet/issues/12976>#12976</denchmark-link>\n .\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n User above is using MXNet version 1.3.1 on Ubuntu 16.04.5 with GTX1080.\n And I have been able to replicate on AWS EC2 p3.2xlarge.\n <denchmark-code>(mxnet_p36) ubuntu@ip-172-31-14-75:~$ python diagnose.py\n ----------Python Info----------\n Version      : 3.6.5\n Compiler     : GCC 7.2.0\n Build        : ('default', 'Apr 29 2018 16:14:56')\n Arch         : ('64bit', '')\n ------------Pip Info-----------\n Version      : 10.0.1\n Directory    : /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/pip\n ----------MXNet Info-----------\n Version      : 1.3.1\n Directory    : /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet\n Commit Hash   : 19c501680183237d52a862e6ae1dc4ddc296305b\n ----------System Info----------\n Platform     : Linux-4.4.0-1074-aws-x86_64-with-debian-stretch-sid\n system       : Linux\n node         : ip-172-31-14-75\n release      : 4.4.0-1074-aws\n version      : #84-Ubuntu SMP Thu Dec 6 08:57:58 UTC 2018\n ----------Hardware Info----------\n machine      : x86_64\n processor    : x86_64\n Architecture:          x86_64\n CPU op-mode(s):        32-bit, 64-bit\n Byte Order:            Little Endian\n CPU(s):                8\n On-line CPU(s) list:   0-7\n Thread(s) per core:    2\n Core(s) per socket:    4\n Socket(s):             1\n NUMA node(s):          1\n Vendor ID:             GenuineIntel\n CPU family:            6\n Model:                 79\n Model name:            Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz\n Stepping:              1\n CPU MHz:               2699.984\n CPU max MHz:           3000.0000\n CPU min MHz:           1200.0000\n BogoMIPS:              4600.16\n Hypervisor vendor:     Xen\n Virtualization type:   full\n L1d cache:             32K\n L1i cache:             32K\n L2 cache:              256K\n L3 cache:              46080K\n NUMA node0 CPU(s):     0-7\n Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single kaiser fsgsbase bmi1 hle avx2smep bmi2 erms invpcid rtm rdseed adx xsaveopt\n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0019 sec, LOAD: 0.3825 sec.\n Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0998 sec, LOAD: 0.0959 sec.\n Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.5308 sec, LOAD: 0.2854 sec.\n Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0082 sec, LOAD: 0.1051 sec.\n Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0099 sec, LOAD: 0.3274 sec.\n Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0109 sec, LOAD: 0.0471 sec.\n </denchmark-code>\n \n Package used (Python/R/Scala/Julia): Python\n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n <denchmark-h:h3>Using mx.nd.Dropout</denchmark-h>\n \n <denchmark-code>%%timeit\n data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n for i in range(100):\n     # using mode='always' to force dropout behaviour\n     data = mx.nd.Dropout(data, 0.5, mode='always')\n mx.nd.waitall()\n </denchmark-code>\n \n <denchmark-code># 1.44 s \u00b1 512 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n </denchmark-code>\n \n Approx ~4.5 times slower than custom dropout.\n <denchmark-h:h3>Using Custom Dropout</denchmark-h>\n \n <denchmark-code>%%timeit\n data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n for i in range(100):\n     dropout_mask = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu()) > 0.5\n     data = data * dropout_mask\n mx.nd.waitall()\n </denchmark-code>\n \n <denchmark-code># 325 ms \u00b1 338 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n </denchmark-code>\n \n Approx ~4.5 times faster than mx.nd.Dropout.\n <denchmark-h:h2>Other examples, including backward pass.</denchmark-h>\n \n <denchmark-h:h3>Network using mx.gluon.nn.Dropout</denchmark-h>\n \n <denchmark-code>net = mx.gluon.nn.HybridSequential()\n net.add(mx.gluon.nn.Conv2D(channels=32, kernel_size=3, strides=2))\n net.add(mx.gluon.nn.BatchNorm())\n net.add(mx.gluon.nn.Activation('relu'))\n net.add(mx.gluon.nn.Dropout(0.5))\n net.add(mx.gluon.nn.GlobalMaxPool2D())\n net.add(mx.gluon.nn.Dense(units=1000))\n net.initialize(ctx=mx.gpu())\n </denchmark-code>\n \n <denchmark-code>%%timeit\n for i in range(10):\n     data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n     with mx.autograd.record():\n         output = net(data)\n     output.backward()\n     mx.nd.waitall()\n </denchmark-code>\n \n <denchmark-code># 524 ms \u00b1 882 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n </denchmark-code>\n \n Approx 4 times slower than without.\n <denchmark-h:h3>Network without mx.gluon.nn.Dropout</denchmark-h>\n \n <denchmark-code>net = mx.gluon.nn.HybridSequential()\n net.add(mx.gluon.nn.Conv2D(channels=32, kernel_size=3, strides=2))\n net.add(mx.gluon.nn.BatchNorm())\n net.add(mx.gluon.nn.Activation('relu'))\n net.add(mx.gluon.nn.GlobalMaxPool2D())\n net.add(mx.gluon.nn.Dense(units=1000))\n net.initialize(ctx=mx.gpu())\n </denchmark-code>\n \n <denchmark-code>%%timeit\n for i in range(10):\n     data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n     with mx.autograd.record():\n         output = net(data)\n     output.backward()\n     mx.nd.waitall()\n </denchmark-code>\n \n <denchmark-code># 123 ms \u00b1 187 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\n </denchmark-code>\n \n Approx 4 times faster than with.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "thomelane", "commentT": "2019-01-10T01:24:20Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Bug, Operator, Python, Performance, CUDA]\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "thomelane", "commentT": "2019-02-26T21:02:30Z", "comment_text": "\n \t\tProbably resolved by <denchmark-link:https://github.com/apache/incubator-mxnet/pull/13896>#13896</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "thomelane", "commentT": "2019-02-28T05:10:23Z", "comment_text": "\n \t\tafter <denchmark-link:https://github.com/apache/incubator-mxnet/pull/13896>#13896</denchmark-link>\n , seems only  has performance improvements, but not  mx.nd.Dropout(data, 0.5, mode='always')\n following the above code sample:\n <denchmark-h:h3>Using mx.nd.Dropout</denchmark-h>\n \n 1.43 s \u00b1 293 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n <denchmark-h:h3>Using Custom Dropout</denchmark-h>\n \n 331 ms \u00b1 411 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n <denchmark-h:h3>Network using mx.gluon.nn.Dropout</denchmark-h>\n \n 128 ms \u00b1 39.4 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\n <denchmark-h:h3>Network without mx.gluon.nn.Dropout</denchmark-h>\n \n 128 ms \u00b1 30.2 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\n tested with both pip install mxnet-cu92 --pre and build from source on p3.2x\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "thomelane", "commentT": "2019-02-28T05:36:52Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/roywei>@roywei</denchmark-link>\n  by default cudnn_off is turned on. You need to turn it off to benefit from cudnn dropout.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "thomelane", "commentT": "2019-04-01T21:51:59Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/thomelane>@thomelane</denchmark-link>\n  - Can you please confirm if the issue is resolved with CUDNN support?\n Or, this may be related to this - <denchmark-link:https://github.com/apache/incubator-mxnet/issues/14198>#14198</denchmark-link>\n  ?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "thomelane", "commentT": "2019-05-02T19:14:04Z", "comment_text": "\n \t\tTested with mxnet-cu90mkl==1.5.0b20190501 on g3.8xlarge instance.\n Code example (same as above):\n <denchmark-code>import mxnet as mx\n import time\n \n tic = time.time()\n \n data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n for i in range(100):\n     # using mode='always' to force dropout behaviour\n     data = mx.nd.Dropout(data, 0.5, mode='always')\n mx.nd.waitall()\n \n print(\"mx.nd.Dropout: \", time.time() - tic)\n \n tic = time.time()\n data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n for i in range(100):\n     dropout_mask = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu()) > 0.5\n     data = data * dropout_mask\n mx.nd.waitall()\n \n print(\"Custom Dropout: \", time.time() - tic)\n \n net = mx.gluon.nn.HybridSequential()\n net.add(mx.gluon.nn.Conv2D(channels=32, kernel_size=3, strides=2))\n net.add(mx.gluon.nn.BatchNorm())\n net.add(mx.gluon.nn.Activation('relu'))\n net.add(mx.gluon.nn.Dropout(0.5))\n net.add(mx.gluon.nn.GlobalMaxPool2D())\n net.add(mx.gluon.nn.Dense(units=1000))\n net.initialize(ctx=mx.gpu())\n \n tic = time.time()\n for i in range(10):\n     data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n     with mx.autograd.record():\n         output = net(data)\n     output.backward()\n     mx.nd.waitall()\n \n print(\"mx.gluon.nn.Dropout: \", time.time() - tic)\n \n net = mx.gluon.nn.HybridSequential()\n net.add(mx.gluon.nn.Conv2D(channels=32, kernel_size=3, strides=2))\n net.add(mx.gluon.nn.BatchNorm())\n net.add(mx.gluon.nn.Activation('relu'))\n net.add(mx.gluon.nn.GlobalMaxPool2D())\n net.add(mx.gluon.nn.Dense(units=1000))\n net.initialize(ctx=mx.gpu())\n \n tic = time.time()\n for i in range(10):\n     data = mx.nd.random.uniform(shape=(100, 3, 224, 224), ctx=mx.gpu())\n     with mx.autograd.record():\n         output = net(data)\n     output.backward()\n     mx.nd.waitall()\n \n print(\"Without mx.gluon.nn.Dropout: \", time.time() - tic)\n </denchmark-code>\n \n Performance results (in seconds):\n <denchmark-code>mx.nd.Dropout:  2.713014841079712\n Custom Dropout:  3.227015733718872\n mx.gluon.nn.Dropout:  0.9665834903717041\n Without mx.gluon.nn.Dropout:  0.7113254070281982\n </denchmark-code>\n \n Looks like the dropout performance has been significantly improved with CUDNN support.\n <denchmark-link:https://github.com/sandeep-krishnamurthy>@sandeep-krishnamurthy</denchmark-link>\n  Please help close this issue.\n <denchmark-link:https://github.com/thomelane>@thomelane</denchmark-link>\n  Please reopen the issue if you have any further questions. Thanks.\n \t\t"}}}, "commit": {"commit_id": "18b8704491640b126e344e6c81d1b6da90eae64e", "commit_author": "Sheng Zha", "commitT": "2019-02-05 10:20:04-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\faq\\env_var.md", "file_new_name": "docs\\faq\\env_var.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "include\\mxnet\\resource.h", "file_new_name": "include\\mxnet\\resource.h", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "47,48,49,50,51,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179", "deleted_lines": null}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\mxnet\\gluon\\nn\\basic_layers.py", "file_new_name": "python\\mxnet\\gluon\\nn\\basic_layers.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "265,266,267,268", "deleted_lines": "265", "method_info": {"method_name": "hybrid_forward", "method_params": "self,F,x", "method_startline": "264", "method_endline": "268"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\executor\\attach_op_resource_pass.cc", "file_new_name": "src\\executor\\attach_op_resource_pass.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92", "deleted_lines": "65,66,67,68,69,70,71,73,74,75,76,77,78", "method_info": {"method_name": "mxnet::exec::AttachOpResources", "method_params": "g,op_execs,start_nid,end_nid", "method_startline": "33", "method_endline": "102"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\imperative\\imperative_utils.h", "file_new_name": "src\\imperative\\imperative_utils.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "244,245,246,247,248,249", "deleted_lines": null, "method_info": {"method_name": "mxnet::imperative::SetDependency", "method_params": "attrs,ctx,inputs,outputs,p_read_vars,p_write_vars,p_requested,p_mutate_idx,dispatch_mode", "method_startline": "204", "method_endline": "275"}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\cudnn_rnn-inl.h", "file_new_name": "src\\operator\\cudnn_rnn-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "702,767", "deleted_lines": "702,767", "method_info": {"method_name": "mxnet::op::CuDNNRNNOp::Init", "method_params": "s,in_data,out_data", "method_startline": "530", "method_endline": "828"}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 23, "file_old_name": "src\\operator\\nn\\dropout-inl.h", "file_new_name": "src\\operator\\nn\\dropout-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "230,231,232,233,234", "deleted_lines": "230", "method_info": {"method_name": "mxnet::op::DropoutOp::Init", "method_params": "param", "method_startline": "230", "method_endline": "234"}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "176,177,178,179,180,181", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLBackward", "method_params": "s,pkeep,in_grad,out_data,out_grad", "method_startline": "176", "method_endline": "181"}}, "hunk_2": {"Ismethod": 1, "added_lines": "206,210,211,212,213,214,215,216,217,218,219,220,221,222,223", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::DropoutOp::DropoutOp", "method_params": "param,ctx", "method_startline": "206", "method_endline": "223"}}, "hunk_3": {"Ismethod": 1, "added_lines": "110,113,114", "deleted_lines": "111,112,113,114", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLAvailable", "method_params": "", "method_startline": "110", "method_endline": "114"}}, "hunk_4": {"Ismethod": 1, "added_lines": null, "deleted_lines": "170,171,172,173,174,175", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLForward", "method_params": "s,pgen,pkeep,in_data,out_data", "method_startline": "170", "method_endline": "175"}}, "hunk_5": {"Ismethod": 1, "added_lines": "158", "deleted_lines": "155,156,157,158,159,160", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLForward", "method_params": "s,pgen,pkeep,in_data,out_data", "method_startline": "155", "method_endline": "160"}}, "hunk_6": {"Ismethod": 1, "added_lines": "511,517", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::DropoutCompute", "method_params": "state,ctx,inputs,req,outputs", "method_startline": "511", "method_endline": "520"}}, "hunk_7": {"Ismethod": 1, "added_lines": "392,398,399,400,401", "deleted_lines": "387,392,402,403", "method_info": {"method_name": "mxnet::op::DropoutGradCompute", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "387", "method_endline": "406"}}, "hunk_8": {"Ismethod": 1, "added_lines": "242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286", "deleted_lines": "247,248,249,250,251,253,254,255,258,260,261,262,269,275", "method_info": {"method_name": "mxnet::op::DropoutOp::CuDNNForward", "method_params": "ctx,in,mask,out", "method_startline": "242", "method_endline": "286"}}, "hunk_9": {"Ismethod": 1, "added_lines": "288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324", "deleted_lines": "293,294,295,296,297,298,299,300,301,314,315,316,317,318,319,320,321,322,323,324", "method_info": {"method_name": "mxnet::op::DropoutOp::CuDNNBackward", "method_params": "ctx,out_grad,mask,in_grad", "method_startline": "288", "method_endline": "324"}}, "hunk_10": {"Ismethod": 1, "added_lines": "374,380", "deleted_lines": "373,378,380,381", "method_info": {"method_name": "mxnet::op::DropoutCompute", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "373", "method_endline": "384"}}, "hunk_11": {"Ismethod": 1, "added_lines": "80,81,82", "deleted_lines": "81", "method_info": {"method_name": "mxnet::op::DropoutParam::DMLC_DECLARE_PARAMETER", "method_params": "DropoutParam", "method_startline": "69", "method_endline": "83"}}, "hunk_12": {"Ismethod": 1, "added_lines": "225,226,227,228,229,230,231,232,233,234", "deleted_lines": "230", "method_info": {"method_name": "mxnet::op::DropoutOp::~DropoutOp", "method_params": "", "method_startline": "225", "method_endline": "235"}}, "hunk_13": {"Ismethod": 1, "added_lines": "110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128", "deleted_lines": "105,106,107,108,111,112,113,114,115,116,117,118,119,120,122,123,124,125,127", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLForward", "method_params": "s,pgen,pkeep,in_data,out_data", "method_startline": "105", "method_endline": "128"}}, "hunk_14": {"Ismethod": 1, "added_lines": "131,133,134,139,140,141,142,143,144,145,146,147,148,149,150,151", "deleted_lines": "131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLBackward", "method_params": "s,pkeep,in_grad,out_data,out_grad", "method_startline": "131", "method_endline": "151"}}, "hunk_15": {"Ismethod": 1, "added_lines": "238,239,240", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::DropoutOp::CuDNNAvailable", "method_params": "", "method_startline": "238", "method_endline": "240"}}, "hunk_16": {"Ismethod": 1, "added_lines": "139,140,141,142,143,144,145,146,147,148,149,150,151,153,154", "deleted_lines": "139,140,141,142,143,145,146,147,148,150,153,154,155,156", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLBackward", "method_params": "ctx,in_grad,out_data,out_grad", "method_startline": "139", "method_endline": "156"}}, "hunk_17": {"Ismethod": 1, "added_lines": "492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::CreateDropoutState", "method_params": "attrs,ctx,in_shapes,in_types", "method_startline": "492", "method_endline": "508"}}, "hunk_18": {"Ismethod": 1, "added_lines": "523,537", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::DropoutGradCompute", "method_params": "state,ctx,inputs,req,outputs", "method_startline": "523", "method_endline": "540"}}, "hunk_19": {"Ismethod": 1, "added_lines": null, "deleted_lines": "161,162,163,164,165,166", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLBackward", "method_params": "s,pkeep,in_grad,out_data,out_grad", "method_startline": "161", "method_endline": "166"}}, "hunk_20": {"Ismethod": 1, "added_lines": "117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134", "deleted_lines": "117,118,119,120,122,123,124,125,127,131,132,133,134,135,136", "method_info": {"method_name": "mxnet::op::DropoutOp::MKLForward", "method_params": "ctx,in_data,out_data", "method_startline": "117", "method_endline": "136"}}, "hunk_21": {"Ismethod": 1, "added_lines": "414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,431,432,433,434,435,436,437,438,439,465,466,467,468", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::DropoutOp::Backward", "method_params": "ctx,out_grad,out_data,req,in_grad", "method_startline": "406", "method_endline": "470"}}, "hunk_22": {"Ismethod": 1, "added_lines": "331,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,362,364,365,366,367,374,380,392,398,399,400,401", "deleted_lines": "353,354,355,356,357,358,359,360,373,378,380,381,387,392,402,403", "method_info": {"method_name": "mxnet::op::DropoutOp::Forward", "method_params": "ctx,in_data,req,out_data", "method_startline": "327", "method_endline": "404"}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\nn\\dropout.cc", "file_new_name": "src\\operator\\nn\\dropout.cc", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "122,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,158", "deleted_lines": "122,127,128,129,140"}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\nn\\dropout.cu", "file_new_name": "src\\operator\\nn\\dropout.cu", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "33,36", "deleted_lines": "33,36"}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "src\\resource.cc", "file_new_name": "src\\resource.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447", "deleted_lines": null, "method_info": {"method_name": "mxnet::Resource::get_cudnn_dropout_desc", "method_params": "dropout_desc,stream,dropout,seed", "method_startline": "421", "method_endline": "447"}}, "hunk_1": {"Ismethod": 1, "added_lines": "267", "deleted_lines": null, "method_info": {"method_name": "mxnet::resource::ResourceManagerImpl::ResourceTempSpace::ResourceTempSpace", "method_params": "ctx,ncopy", "method_startline": "261", "method_endline": "271"}}, "hunk_2": {"Ismethod": 1, "added_lines": "149,157,158,159,160,161,162,163,164", "deleted_lines": "142", "method_info": {"method_name": "mxnet::resource::ResourceManagerImpl::Request", "method_params": "ctx,req", "method_startline": "130", "method_endline": "173"}}, "hunk_3": {"Ismethod": 1, "added_lines": "117,118,119", "deleted_lines": null, "method_info": {"method_name": "mxnet::resource::ResourceManagerImpl::~ResourceManagerImpl", "method_params": "", "method_startline": "108", "method_endline": "127"}}, "hunk_4": {"Ismethod": 1, "added_lines": "96,97,98,103", "deleted_lines": "99", "method_info": {"method_name": "mxnet::resource::ResourceManagerImpl::ResourceManagerImpl", "method_params": "", "method_startline": "90", "method_endline": "107"}}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "tests\\cpp\\include\\test_core_op.h", "file_new_name": "tests\\cpp\\include\\test_core_op.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "171,172,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214", "deleted_lines": "173,174,177,178,179,180,181,182,183,184,185,186,188,189,190", "method_info": {"method_name": "mxnet::test::op::CoreOpExecutor::AttachResources", "method_params": "ctx,attrs,op", "method_startline": "170", "method_endline": "218"}}, "hunk_1": {"Ismethod": 1, "added_lines": "653,654,655,656,657,658,659", "deleted_lines": null, "method_info": {"method_name": "mxnet::test::op::CoreOpExecutor::ExecuteStateful", "method_params": "", "method_startline": "653", "method_endline": "659"}}, "hunk_2": {"Ismethod": 1, "added_lines": "619,620,621,622,623,624,625,626", "deleted_lines": null, "method_info": {"method_name": "mxnet::test::op::CoreOpExecutor::backward", "method_params": "count", "method_startline": "615", "method_endline": "628"}}, "hunk_3": {"Ismethod": 1, "added_lines": "700,701,702,703,704,705,706,707,708,709,710,711", "deleted_lines": null, "method_info": {"method_name": "mxnet::test::op::CoreOpExecutor::ExecuteBackwardStateful", "method_params": "", "method_startline": "700", "method_endline": "711"}}, "hunk_4": {"Ismethod": 1, "added_lines": "538,539,543,544,545,546,547,548,549,550,551,552,553,554,555,556", "deleted_lines": "564,565,573,574", "method_info": {"method_name": "mxnet::test::op::CoreOpExecutor::Init", "method_params": "in_args,inputs,outputs,backward_for_op,bwd_node_ptr", "method_startline": "345", "method_endline": "586"}}, "hunk_5": {"Ismethod": 1, "added_lines": "604,605,606,607,608,609,610,611", "deleted_lines": null, "method_info": {"method_name": "mxnet::test::op::CoreOpExecutor::forward", "method_params": "count", "method_startline": "601", "method_endline": "613"}}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\cpp\\include\\test_legacy_op.h", "file_new_name": "tests\\cpp\\include\\test_legacy_op.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,521,522,523,524,526,527,528", "deleted_lines": "497,498,499,500,501,502,503,505,506,507,508,509,510,511,513,514,515", "method_info": {"method_name": "mxnet::test::op::LegacyOperatorExecutor::allocateResources", "method_params": "reqs", "method_startline": "489", "method_endline": "531"}}}}, "file_12": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "tests\\python\\unittest\\test_operator.py", "file_new_name": "tests\\python\\unittest\\test_operator.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "6020,6026", "deleted_lines": "6020,6026", "method_info": {"method_name": "test_dropout.check_dropout_axes", "method_params": "ratio,shape,axes,cudnn_off", "method_startline": "6020", "method_endline": "6030"}}, "hunk_1": {"Ismethod": 1, "added_lines": "5954,5957,5995", "deleted_lines": "5954,5957,5995", "method_info": {"method_name": "test_dropout.check_dropout_ratio", "method_params": "ratio,shape", "method_startline": "5954", "method_endline": "6009"}}, "hunk_2": {"Ismethod": 1, "added_lines": "5954,5957,5995,6020,6026,6032,6033,6034,6035,6036,6037,6038,6039,6040,6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087", "deleted_lines": "5954,5957,5995,6020,6026", "method_info": {"method_name": "test_dropout", "method_params": "", "method_startline": "5921", "method_endline": "6087"}}, "hunk_3": {"Ismethod": 1, "added_lines": "5954,5957,5995", "deleted_lines": "5954,5957,5995", "method_info": {"method_name": "test_dropout.check_dropout_ratio", "method_params": "ratio,shape,cudnn_off", "method_startline": "5954", "method_endline": "6009"}}, "hunk_4": {"Ismethod": 1, "added_lines": "6020,6026", "deleted_lines": "6020,6026", "method_info": {"method_name": "test_dropout.check_dropout_axes", "method_params": "ratio,shape,axes", "method_startline": "6020", "method_endline": "6030"}}, "hunk_5": {"Ismethod": 1, "added_lines": "6032,6033,6034,6035,6036,6037,6038,6039", "deleted_lines": null, "method_info": {"method_name": "test_dropout.check_passthrough", "method_params": "ratio,shape,cudnn_off", "method_startline": "6032", "method_endline": "6039"}}}}}}}